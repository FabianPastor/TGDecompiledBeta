package org.telegram.messenger;

import android.content.DialogInterface.OnClickListener;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.support.v13.view.inputmethod.InputContentInfoCompat;
import android.text.TextUtils;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.webkit.MimeTypeMap;
import android.widget.Toast;
import java.io.File;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel.MapMode;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import net.hockeyapp.android.UpdateFragment;
import org.telegram.messenger.MediaController.SearchImage;
import org.telegram.messenger.NotificationCenter.NotificationCenterDelegate;
import org.telegram.messenger.audioinfo.AudioInfo;
import org.telegram.messenger.exoplayer2.DefaultRenderersFactory;
import org.telegram.messenger.exoplayer2.util.MimeTypes;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.AbstractSerializedData;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC.BotInlineResult;
import org.telegram.tgnet.TLRPC.Chat;
import org.telegram.tgnet.TLRPC.ChatFull;
import org.telegram.tgnet.TLRPC.ChatParticipant;
import org.telegram.tgnet.TLRPC.DecryptedMessage;
import org.telegram.tgnet.TLRPC.Document;
import org.telegram.tgnet.TLRPC.DocumentAttribute;
import org.telegram.tgnet.TLRPC.EncryptedChat;
import org.telegram.tgnet.TLRPC.FileLocation;
import org.telegram.tgnet.TLRPC.InputDocument;
import org.telegram.tgnet.TLRPC.InputEncryptedFile;
import org.telegram.tgnet.TLRPC.InputFile;
import org.telegram.tgnet.TLRPC.InputMedia;
import org.telegram.tgnet.TLRPC.InputPeer;
import org.telegram.tgnet.TLRPC.InputUser;
import org.telegram.tgnet.TLRPC.KeyboardButton;
import org.telegram.tgnet.TLRPC.Message;
import org.telegram.tgnet.TLRPC.MessageEntity;
import org.telegram.tgnet.TLRPC.MessageFwdHeader;
import org.telegram.tgnet.TLRPC.MessageMedia;
import org.telegram.tgnet.TLRPC.Peer;
import org.telegram.tgnet.TLRPC.Photo;
import org.telegram.tgnet.TLRPC.PhotoSize;
import org.telegram.tgnet.TLRPC.ReplyMarkup;
import org.telegram.tgnet.TLRPC.TL_botInlineMediaResult;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaContact;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaGeo;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaVenue;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageText;
import org.telegram.tgnet.TLRPC.TL_decryptedMessage;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionAbortKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionAcceptKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionCommitKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionDeleteMessages;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionFlushHistory;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionNoop;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionNotifyLayer;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionReadMessages;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionRequestKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionResend;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionScreenshotMessages;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionTyping;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaContact;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaEmpty;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaGeoPoint;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVenue;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_decryptedMessage_layer45;
import org.telegram.tgnet.TLRPC.TL_document;
import org.telegram.tgnet.TLRPC.TL_documentAttributeAnimated;
import org.telegram.tgnet.TLRPC.TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC.TL_documentAttributeFilename;
import org.telegram.tgnet.TLRPC.TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC.TL_documentAttributeSticker;
import org.telegram.tgnet.TLRPC.TL_documentAttributeSticker_layer55;
import org.telegram.tgnet.TLRPC.TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC.TL_documentAttributeVideo_layer65;
import org.telegram.tgnet.TLRPC.TL_error;
import org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC.TL_game;
import org.telegram.tgnet.TLRPC.TL_geoPoint;
import org.telegram.tgnet.TLRPC.TL_inputDocument;
import org.telegram.tgnet.TLRPC.TL_inputEncryptedFile;
import org.telegram.tgnet.TLRPC.TL_inputGeoPoint;
import org.telegram.tgnet.TLRPC.TL_inputMediaContact;
import org.telegram.tgnet.TLRPC.TL_inputMediaDocument;
import org.telegram.tgnet.TLRPC.TL_inputMediaEmpty;
import org.telegram.tgnet.TLRPC.TL_inputMediaGame;
import org.telegram.tgnet.TLRPC.TL_inputMediaGeoLive;
import org.telegram.tgnet.TLRPC.TL_inputMediaGeoPoint;
import org.telegram.tgnet.TLRPC.TL_inputMediaGifExternal;
import org.telegram.tgnet.TLRPC.TL_inputMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument;
import org.telegram.tgnet.TLRPC.TL_inputMediaUploadedPhoto;
import org.telegram.tgnet.TLRPC.TL_inputMediaVenue;
import org.telegram.tgnet.TLRPC.TL_inputPeerChannel;
import org.telegram.tgnet.TLRPC.TL_inputPeerEmpty;
import org.telegram.tgnet.TLRPC.TL_inputPeerUser;
import org.telegram.tgnet.TLRPC.TL_inputPhoto;
import org.telegram.tgnet.TLRPC.TL_inputSingleMedia;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetEmpty;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC.TL_message;
import org.telegram.tgnet.TLRPC.TL_messageActionScreenshotTaken;
import org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC.TL_messageEntityBold;
import org.telegram.tgnet.TLRPC.TL_messageEntityCode;
import org.telegram.tgnet.TLRPC.TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC.TL_messageEntityPre;
import org.telegram.tgnet.TLRPC.TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC.TL_messageEntityUrl;
import org.telegram.tgnet.TLRPC.TL_messageFwdHeader;
import org.telegram.tgnet.TLRPC.TL_messageMediaContact;
import org.telegram.tgnet.TLRPC.TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC.TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC.TL_messageMediaGame;
import org.telegram.tgnet.TLRPC.TL_messageMediaGeo;
import org.telegram.tgnet.TLRPC.TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC.TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC.TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_messageService;
import org.telegram.tgnet.TLRPC.TL_message_secret;
import org.telegram.tgnet.TLRPC.TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC.TL_messages_editMessage;
import org.telegram.tgnet.TLRPC.TL_messages_forwardMessages;
import org.telegram.tgnet.TLRPC.TL_messages_getBotCallbackAnswer;
import org.telegram.tgnet.TLRPC.TL_messages_messages;
import org.telegram.tgnet.TLRPC.TL_messages_sendBroadcast;
import org.telegram.tgnet.TLRPC.TL_messages_sendEncryptedMultiMedia;
import org.telegram.tgnet.TLRPC.TL_messages_sendInlineBotResult;
import org.telegram.tgnet.TLRPC.TL_messages_sendMedia;
import org.telegram.tgnet.TLRPC.TL_messages_sendMessage;
import org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia;
import org.telegram.tgnet.TLRPC.TL_messages_sendScreenshotNotification;
import org.telegram.tgnet.TLRPC.TL_messages_uploadMedia;
import org.telegram.tgnet.TLRPC.TL_payments_getPaymentForm;
import org.telegram.tgnet.TLRPC.TL_payments_getPaymentReceipt;
import org.telegram.tgnet.TLRPC.TL_payments_paymentForm;
import org.telegram.tgnet.TLRPC.TL_payments_paymentReceipt;
import org.telegram.tgnet.TLRPC.TL_peerChannel;
import org.telegram.tgnet.TLRPC.TL_peerChat;
import org.telegram.tgnet.TLRPC.TL_peerUser;
import org.telegram.tgnet.TLRPC.TL_photo;
import org.telegram.tgnet.TLRPC.TL_photoCachedSize;
import org.telegram.tgnet.TLRPC.TL_photoSize;
import org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC.TL_updateMessageID;
import org.telegram.tgnet.TLRPC.TL_updateNewChannelMessage;
import org.telegram.tgnet.TLRPC.TL_updateNewMessage;
import org.telegram.tgnet.TLRPC.TL_updateShortSentMessage;
import org.telegram.tgnet.TLRPC.TL_user;
import org.telegram.tgnet.TLRPC.TL_userContact_old2;
import org.telegram.tgnet.TLRPC.TL_userRequest_old2;
import org.telegram.tgnet.TLRPC.TL_webPagePending;
import org.telegram.tgnet.TLRPC.TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC.Update;
import org.telegram.tgnet.TLRPC.Updates;
import org.telegram.tgnet.TLRPC.User;
import org.telegram.tgnet.TLRPC.WebPage;
import org.telegram.tgnet.TLRPC.messages_Messages;
import org.telegram.ui.ActionBar.AlertDialog.Builder;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.PaymentFormActivity;

public class SendMessagesHelper implements NotificationCenterDelegate {
    private static volatile SendMessagesHelper[] Instance = new SendMessagesHelper[3];
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    private int currentAccount;
    private ChatFull currentChatInfo = null;
    private HashMap<String, ArrayList<DelayedMessage>> delayedMessages = new HashMap();
    private LocationProvider locationProvider = new LocationProvider(new C18201());
    private SparseArray<Message> sendingMessages = new SparseArray();
    private SparseArray<MessageObject> unsentMessages = new SparseArray();
    private HashMap<String, Boolean> waitingForCallback = new HashMap();
    private HashMap<String, MessageObject> waitingForLocation = new HashMap();

    /* renamed from: org.telegram.messenger.SendMessagesHelper$2 */
    class C04972 implements Runnable {
        C04972() {
        }

        public void run() {
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidUpload);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidFailUpload);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FilePreparingStarted);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileNewChunkAvailable);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FilePreparingFailed);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidFailedLoad);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidLoaded);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidLoaded);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidFailedLoad);
        }
    }

    protected class DelayedMessage {
        public EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public FileLocation location;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public long peer;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int type;
        public boolean upload;
        public VideoEditedInfo videoEditedInfo;

        public DelayedMessage(long j) {
            this.peer = j;
        }

        public void addDelayedRequest(TLObject tLObject, MessageObject messageObject, String str) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObj = messageObject;
            delayedMessageSendAfterRequest.originalPath = str;
            if (this.requests == null) {
                this.requests = new ArrayList();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void addDelayedRequest(TLObject tLObject, ArrayList<MessageObject> arrayList, ArrayList<String> arrayList2) {
            DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = new DelayedMessageSendAfterRequest();
            delayedMessageSendAfterRequest.request = tLObject;
            delayedMessageSendAfterRequest.msgObjs = arrayList;
            delayedMessageSendAfterRequest.originalPaths = arrayList2;
            if (this.requests == null) {
                this.requests = new ArrayList();
            }
            this.requests.add(delayedMessageSendAfterRequest);
        }

        public void sendDelayedRequests() {
            if (this.requests != null) {
                if (this.type == 4 || this.type == 0) {
                    int size = this.requests.size();
                    for (int i = 0; i < size; i++) {
                        DelayedMessageSendAfterRequest delayedMessageSendAfterRequest = (DelayedMessageSendAfterRequest) this.requests.get(i);
                        if (delayedMessageSendAfterRequest.request instanceof TL_messages_sendEncryptedMultiMedia) {
                            SecretChatHelper.getInstance(SendMessagesHelper.this.currentAccount).performSendEncryptedRequest((TL_messages_sendEncryptedMultiMedia) delayedMessageSendAfterRequest.request, this);
                        } else if (delayedMessageSendAfterRequest.request instanceof TL_messages_sendMultiMedia) {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TL_messages_sendMultiMedia) delayedMessageSendAfterRequest.request, delayedMessageSendAfterRequest.msgObjs, delayedMessageSendAfterRequest.originalPaths);
                        } else {
                            SendMessagesHelper.this.performSendMessageRequest(delayedMessageSendAfterRequest.request, delayedMessageSendAfterRequest.msgObj, delayedMessageSendAfterRequest.originalPath);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int i = 0; i < this.messageObjects.size(); i++) {
                    MessageObject messageObject = (MessageObject) this.messageObjects.get(i);
                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(messageObject.messageOwner);
                    messageObject.messageOwner.send_state = 2;
                    NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                    SendMessagesHelper.this.processSentMessage(messageObject.getId());
                }
                HashMap access$1000 = SendMessagesHelper.this.delayedMessages;
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("group_");
                stringBuilder.append(this.groupId);
                access$1000.remove(stringBuilder.toString());
            } else {
                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(this.obj.messageOwner);
                this.obj.messageOwner.send_state = 2;
                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
            }
            sendDelayedRequests();
        }
    }

    protected class DelayedMessageSendAfterRequest {
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public TLObject request;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    public static class LocationProvider {
        private LocationProviderDelegate delegate;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        private Location lastKnownLocation;
        private LocationManager locationManager;
        private Runnable locationQueryCancelRunnable;
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        /* renamed from: org.telegram.messenger.SendMessagesHelper$LocationProvider$1 */
        class C05111 implements Runnable {
            C05111() {
            }

            public void run() {
                if (LocationProvider.this.locationQueryCancelRunnable == this) {
                    if (LocationProvider.this.delegate != null) {
                        if (LocationProvider.this.lastKnownLocation != null) {
                            LocationProvider.this.delegate.onLocationAcquired(LocationProvider.this.lastKnownLocation);
                        } else {
                            LocationProvider.this.delegate.onUnableLocationAcquire();
                        }
                    }
                    LocationProvider.this.cleanup();
                }
            }
        }

        private class GpsLocationListener implements LocationListener {
            public void onProviderDisabled(String str) {
            }

            public void onProviderEnabled(String str) {
            }

            public void onStatusChanged(String str, int i, Bundle bundle) {
            }

            private GpsLocationListener() {
            }

            public void onLocationChanged(Location location) {
                if (location != null) {
                    if (LocationProvider.this.locationQueryCancelRunnable != null) {
                        if (BuildVars.LOGS_ENABLED) {
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append("found location ");
                            stringBuilder.append(location);
                            FileLog.m0d(stringBuilder.toString());
                        }
                        LocationProvider.this.lastKnownLocation = location;
                        if (location.getAccuracy() < 100.0f) {
                            if (LocationProvider.this.delegate != null) {
                                LocationProvider.this.delegate.onLocationAcquired(location);
                            }
                            if (LocationProvider.this.locationQueryCancelRunnable != null) {
                                AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                            }
                            LocationProvider.this.cleanup();
                        }
                    }
                }
            }
        }

        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        private void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1, 0.0f, this.gpsLocationListener);
            } catch (Throwable e) {
                FileLog.m3e(e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1, 0.0f, this.networkLocationListener);
            } catch (Throwable e2) {
                FileLog.m3e(e2);
            }
            try {
                this.lastKnownLocation = this.locationManager.getLastKnownLocation("gps");
                if (this.lastKnownLocation == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Throwable e22) {
                FileLog.m3e(e22);
            }
            if (this.locationQueryCancelRunnable != null) {
                AndroidUtilities.cancelRunOnUIThread(this.locationQueryCancelRunnable);
            }
            this.locationQueryCancelRunnable = new C05111();
            AndroidUtilities.runOnUIThread(this.locationQueryCancelRunnable, DefaultRenderersFactory.DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS);
        }

        public void stop() {
            if (this.locationManager != null) {
                if (this.locationQueryCancelRunnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(this.locationQueryCancelRunnable);
                }
                cleanup();
            }
        }
    }

    private static class MediaSendPrepareWorker {
        public volatile TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    public static class SendingMediaInfo {
        public String caption;
        public ArrayList<MessageEntity> entities;
        public boolean isVideo;
        public ArrayList<InputDocument> masks;
        public String path;
        public SearchImage searchImage;
        public int ttl;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    /* renamed from: org.telegram.messenger.SendMessagesHelper$1 */
    class C18201 implements LocationProviderDelegate {
        C18201() {
        }

        public void onLocationAcquired(Location location) {
            SendMessagesHelper.this.sendLocation(location);
            SendMessagesHelper.this.waitingForLocation.clear();
        }

        public void onUnableLocationAcquire() {
            HashMap hashMap = new HashMap(SendMessagesHelper.this.waitingForLocation);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, hashMap);
            SendMessagesHelper.this.waitingForLocation.clear();
        }
    }

    static {
        int availableProcessors = VERSION.SDK_INT >= 17 ? Runtime.getRuntime().availableProcessors() : 2;
        mediaSendThreadPool = new ThreadPoolExecutor(availableProcessors, availableProcessors, 60, TimeUnit.SECONDS, new LinkedBlockingQueue());
    }

    public static SendMessagesHelper getInstance(int i) {
        SendMessagesHelper sendMessagesHelper = Instance[i];
        if (sendMessagesHelper == null) {
            synchronized (SendMessagesHelper.class) {
                sendMessagesHelper = Instance[i];
                if (sendMessagesHelper == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper2 = new SendMessagesHelper(i);
                    sendMessagesHelperArr[i] = sendMessagesHelper2;
                    sendMessagesHelper = sendMessagesHelper2;
                }
            }
        }
        return sendMessagesHelper;
    }

    public SendMessagesHelper(int i) {
        this.currentAccount = i;
        AndroidUtilities.runOnUIThread(new C04972());
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.currentChatInfo = null;
        this.locationProvider.stop();
    }

    public void setCurrentChatInfo(ChatFull chatFull) {
        this.currentChatInfo = chatFull;
    }

    public void didReceivedNotification(int i, int i2, Object... objArr) {
        SendMessagesHelper sendMessagesHelper = this;
        int i3 = i;
        int i4 = 2;
        int i5 = 1;
        int i6 = 0;
        DelayedMessage delayedMessage;
        int indexOf;
        HashMap hashMap;
        if (i3 == NotificationCenter.FileDidUpload) {
            String str = (String) objArr[0];
            InputFile inputFile = (InputFile) objArr[1];
            InputEncryptedFile inputEncryptedFile = (InputEncryptedFile) objArr[2];
            ArrayList arrayList = (ArrayList) sendMessagesHelper.delayedMessages.get(str);
            if (arrayList != null) {
                while (i6 < arrayList.size()) {
                    ArrayList arrayList2;
                    InputEncryptedFile inputEncryptedFile2;
                    int i7;
                    delayedMessage = (DelayedMessage) arrayList.get(i6);
                    InputMedia inputMedia = delayedMessage.sendRequest instanceof TL_messages_sendMedia ? ((TL_messages_sendMedia) delayedMessage.sendRequest).media : delayedMessage.sendRequest instanceof TL_messages_sendBroadcast ? ((TL_messages_sendBroadcast) delayedMessage.sendRequest).media : delayedMessage.sendRequest instanceof TL_messages_sendMultiMedia ? (InputMedia) delayedMessage.extraHashMap.get(str) : null;
                    DelayedMessage delayedMessage2;
                    if (inputFile == null || inputMedia == null) {
                        delayedMessage2 = delayedMessage;
                        arrayList2 = arrayList;
                        inputEncryptedFile2 = inputEncryptedFile;
                        if (!(inputEncryptedFile2 == null || delayedMessage2.sendEncryptedRequest == null)) {
                            int i8;
                            DecryptedMessage decryptedMessage;
                            if (delayedMessage2.type == 4) {
                                TL_messages_sendEncryptedMultiMedia tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage2.sendEncryptedRequest;
                                InputEncryptedFile inputEncryptedFile3 = (InputEncryptedFile) delayedMessage2.extraHashMap.get(str);
                                indexOf = tL_messages_sendEncryptedMultiMedia.files.indexOf(inputEncryptedFile3);
                                if (indexOf >= 0) {
                                    tL_messages_sendEncryptedMultiMedia.files.set(indexOf, inputEncryptedFile2);
                                    i8 = i6;
                                    if (inputEncryptedFile3.id == 1) {
                                        hashMap = delayedMessage2.extraHashMap;
                                        StringBuilder stringBuilder = new StringBuilder();
                                        stringBuilder.append(str);
                                        stringBuilder.append("_i");
                                        MessageObject messageObject = (MessageObject) hashMap.get(stringBuilder.toString());
                                        hashMap = delayedMessage2.extraHashMap;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str);
                                        stringBuilder.append("_t");
                                        delayedMessage2.location = (FileLocation) hashMap.get(stringBuilder.toString());
                                        stopVideoService(((MessageObject) delayedMessage2.messageObjects.get(indexOf)).messageOwner.attachPath);
                                    }
                                    decryptedMessage = (TL_decryptedMessage) tL_messages_sendEncryptedMultiMedia.messages.get(indexOf);
                                } else {
                                    i8 = i6;
                                    decryptedMessage = null;
                                }
                            } else {
                                i8 = i6;
                                decryptedMessage = (TL_decryptedMessage) delayedMessage2.sendEncryptedRequest;
                            }
                            if (decryptedMessage != null) {
                                if ((decryptedMessage.media instanceof TL_decryptedMessageMediaVideo) || (decryptedMessage.media instanceof TL_decryptedMessageMediaPhoto) || (decryptedMessage.media instanceof TL_decryptedMessageMediaDocument)) {
                                    decryptedMessage.media.size = (int) ((Long) objArr[5]).longValue();
                                }
                                decryptedMessage.media.key = (byte[]) objArr[3];
                                decryptedMessage.media.iv = (byte[]) objArr[4];
                                if (delayedMessage2.type == 4) {
                                    uploadMultiMedia(delayedMessage2, null, inputEncryptedFile2, str);
                                } else {
                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(decryptedMessage, delayedMessage2.obj.messageOwner, delayedMessage2.encryptedChat, inputEncryptedFile2, delayedMessage2.originalPath, delayedMessage2.obj);
                                }
                            }
                            i6 = i8;
                            arrayList2.remove(i6);
                            i6--;
                        }
                        i7 = 1;
                    } else {
                        ArrayList arrayList3;
                        InputEncryptedFile inputEncryptedFile4;
                        if (delayedMessage.type == 0) {
                            inputMedia.file = inputFile;
                            arrayList3 = arrayList;
                            inputEncryptedFile4 = inputEncryptedFile;
                            performSendMessageRequest(delayedMessage.sendRequest, delayedMessage.obj, delayedMessage.originalPath, delayedMessage, true);
                        } else {
                            delayedMessage2 = delayedMessage;
                            arrayList3 = arrayList;
                            inputEncryptedFile4 = inputEncryptedFile;
                            if (delayedMessage2.type == i5) {
                                if (inputMedia.file == null) {
                                    inputMedia.file = inputFile;
                                    if (inputMedia.thumb != null || delayedMessage2.location == null) {
                                        performSendMessageRequest(delayedMessage2.sendRequest, delayedMessage2.obj, delayedMessage2.originalPath);
                                    } else {
                                        performSendDelayedMessage(delayedMessage2);
                                    }
                                } else {
                                    inputMedia.thumb = inputFile;
                                    inputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage2.sendRequest, delayedMessage2.obj, delayedMessage2.originalPath);
                                }
                            } else if (delayedMessage2.type == i4) {
                                if (inputMedia.file == null) {
                                    inputMedia.file = inputFile;
                                    if (inputMedia.thumb != null || delayedMessage2.location == null) {
                                        performSendMessageRequest(delayedMessage2.sendRequest, delayedMessage2.obj, delayedMessage2.originalPath);
                                    } else {
                                        performSendDelayedMessage(delayedMessage2);
                                    }
                                } else {
                                    inputMedia.thumb = inputFile;
                                    inputMedia.flags |= 4;
                                    performSendMessageRequest(delayedMessage2.sendRequest, delayedMessage2.obj, delayedMessage2.originalPath);
                                }
                            } else if (delayedMessage2.type == 3) {
                                inputMedia.file = inputFile;
                                performSendMessageRequest(delayedMessage2.sendRequest, delayedMessage2.obj, delayedMessage2.originalPath);
                            } else if (delayedMessage2.type == 4) {
                                if (!(inputMedia instanceof TL_inputMediaUploadedDocument)) {
                                    inputMedia.file = inputFile;
                                    uploadMultiMedia(delayedMessage2, inputMedia, null, str);
                                } else if (inputMedia.file == null) {
                                    inputMedia.file = inputFile;
                                    r2 = delayedMessage2.extraHashMap;
                                    r3 = new StringBuilder();
                                    r3.append(str);
                                    r3.append("_i");
                                    int indexOf2 = delayedMessage2.messageObjects.indexOf((MessageObject) r2.get(r3.toString()));
                                    HashMap hashMap2 = delayedMessage2.extraHashMap;
                                    StringBuilder stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append(str);
                                    stringBuilder2.append("_t");
                                    delayedMessage2.location = (FileLocation) hashMap2.get(stringBuilder2.toString());
                                    stopVideoService(((MessageObject) delayedMessage2.messageObjects.get(indexOf2)).messageOwner.attachPath);
                                    if (inputMedia.thumb != null || delayedMessage2.location == null) {
                                        uploadMultiMedia(delayedMessage2, inputMedia, null, str);
                                    } else {
                                        performSendDelayedMessage(delayedMessage2, indexOf2);
                                    }
                                } else {
                                    inputMedia.thumb = inputFile;
                                    inputMedia.flags |= 4;
                                    r2 = delayedMessage2.extraHashMap;
                                    r3 = new StringBuilder();
                                    r3.append(str);
                                    r3.append("_o");
                                    uploadMultiMedia(delayedMessage2, inputMedia, null, (String) r2.get(r3.toString()));
                                }
                            }
                        }
                        arrayList2 = arrayList3;
                        arrayList2.remove(i6);
                        i6--;
                        i7 = i5;
                        inputEncryptedFile2 = inputEncryptedFile4;
                    }
                    i6 += i7;
                    arrayList = arrayList2;
                    i5 = i7;
                    inputEncryptedFile = inputEncryptedFile2;
                    i4 = 2;
                }
                if (arrayList.isEmpty()) {
                    sendMessagesHelper.delayedMessages.remove(str);
                }
            }
        } else if (i3 == NotificationCenter.FileDidFailUpload) {
            r0 = (String) objArr[0];
            boolean booleanValue = ((Boolean) objArr[1]).booleanValue();
            ArrayList arrayList4 = (ArrayList) sendMessagesHelper.delayedMessages.get(r0);
            if (arrayList4 != null) {
                while (i6 < arrayList4.size()) {
                    delayedMessage = (DelayedMessage) arrayList4.get(i6);
                    if ((booleanValue && delayedMessage.sendEncryptedRequest != null) || !(booleanValue || delayedMessage.sendRequest == null)) {
                        delayedMessage.markAsError();
                        arrayList4.remove(i6);
                        i6--;
                    }
                    i6++;
                }
                if (arrayList4.isEmpty()) {
                    sendMessagesHelper.delayedMessages.remove(r0);
                }
            }
        } else if (i3 == NotificationCenter.FilePreparingStarted) {
            r0 = (MessageObject) objArr[0];
            if (r0.getId() != 0) {
                String str2 = (String) objArr[1];
                r1 = (ArrayList) sendMessagesHelper.delayedMessages.get(r0.messageOwner.attachPath);
                if (r1 != null) {
                    while (i6 < r1.size()) {
                        DelayedMessage delayedMessage3 = (DelayedMessage) r1.get(i6);
                        if (delayedMessage3.type == 4) {
                            r3 = delayedMessage3.messageObjects.indexOf(r0);
                            hashMap = delayedMessage3.extraHashMap;
                            StringBuilder stringBuilder3 = new StringBuilder();
                            stringBuilder3.append(r0.messageOwner.attachPath);
                            stringBuilder3.append("_t");
                            delayedMessage3.location = (FileLocation) hashMap.get(stringBuilder3.toString());
                            performSendDelayedMessage(delayedMessage3, r3);
                            r1.remove(i6);
                            break;
                        } else if (delayedMessage3.obj == r0) {
                            delayedMessage3.videoEditedInfo = null;
                            performSendDelayedMessage(delayedMessage3);
                            r1.remove(i6);
                            break;
                        } else {
                            i6++;
                        }
                    }
                    if (r1.isEmpty()) {
                        sendMessagesHelper.delayedMessages.remove(r0.messageOwner.attachPath);
                    }
                }
            }
        } else if (i3 == NotificationCenter.FileNewChunkAvailable) {
            r0 = (MessageObject) objArr[0];
            if (r0.getId() != 0) {
                String str3 = (String) objArr[1];
                long longValue = ((Long) objArr[2]).longValue();
                long longValue2 = ((Long) objArr[3]).longValue();
                FileLoader.getInstance(sendMessagesHelper.currentAccount).checkUploadNewDataAvailable(str3, ((int) r0.getDialogId()) == 0, longValue, longValue2);
                if (longValue2 != 0) {
                    ArrayList arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(r0.messageOwner.attachPath);
                    if (arrayList5 != null) {
                        for (int i9 = 0; i9 < arrayList5.size(); i9++) {
                            DelayedMessage delayedMessage4 = (DelayedMessage) arrayList5.get(i9);
                            if (delayedMessage4.type == 4) {
                                for (int i10 = 0; i10 < delayedMessage4.messageObjects.size(); i10++) {
                                    MessageObject messageObject2 = (MessageObject) delayedMessage4.messageObjects.get(i10);
                                    if (messageObject2 == r0) {
                                        messageObject2.videoEditedInfo = null;
                                        messageObject2.messageOwner.params.remove("ve");
                                        messageObject2.messageOwner.media.document.size = (int) longValue2;
                                        ArrayList arrayList6 = new ArrayList();
                                        arrayList6.add(messageObject2.messageOwner);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        break;
                                    }
                                }
                            } else if (delayedMessage4.obj == r0) {
                                delayedMessage4.obj.videoEditedInfo = null;
                                delayedMessage4.obj.messageOwner.params.remove("ve");
                                delayedMessage4.obj.messageOwner.media.document.size = (int) longValue2;
                                r8 = new ArrayList();
                                r8.add(delayedMessage4.obj.messageOwner);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(r8, false, true, false, 0);
                                break;
                            }
                        }
                    }
                }
            }
        } else if (i3 == NotificationCenter.FilePreparingFailed) {
            r0 = (MessageObject) objArr[0];
            if (r0.getId() != 0) {
                String str4 = (String) objArr[1];
                stopVideoService(r0.messageOwner.attachPath);
                r1 = (ArrayList) sendMessagesHelper.delayedMessages.get(str4);
                if (r1 != null) {
                    r3 = 0;
                    while (r3 < r1.size()) {
                        r4 = (DelayedMessage) r1.get(r3);
                        if (r4.type == 4) {
                            for (indexOf = 0; indexOf < r4.messages.size(); indexOf++) {
                                if (r4.messageObjects.get(indexOf) == r0) {
                                    r4.markAsError();
                                    r1.remove(r3);
                                    r3--;
                                    break;
                                }
                            }
                        } else if (r4.obj == r0) {
                            r4.markAsError();
                            r1.remove(r3);
                            r3--;
                        }
                        r3++;
                    }
                    if (r1.isEmpty()) {
                        sendMessagesHelper.delayedMessages.remove(str4);
                    }
                }
            }
        } else if (i3 == NotificationCenter.httpFileDidLoaded) {
            String str5 = (String) objArr[0];
            r8 = (ArrayList) sendMessagesHelper.delayedMessages.get(str5);
            if (r8 != null) {
                for (i4 = 0; i4 < r8.size(); i4++) {
                    MessageObject messageObject3;
                    r4 = (DelayedMessage) r8.get(i4);
                    if (r4.type == 0) {
                        messageObject3 = r4.obj;
                        i3 = 0;
                    } else {
                        if (r4.type == 2) {
                            r0 = r4.obj;
                        } else if (r4.type == 4) {
                            r0 = (MessageObject) r4.extraHashMap.get(str5);
                            if (r0.getDocument() == null) {
                                messageObject3 = r0;
                                i3 = 0;
                            }
                        } else {
                            i3 = -1;
                            messageObject3 = null;
                        }
                        messageObject3 = r0;
                        i3 = 1;
                    }
                    StringBuilder stringBuilder4;
                    final File file;
                    if (i3 == 0) {
                        stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(Utilities.MD5(str5));
                        stringBuilder4.append(".");
                        stringBuilder4.append(ImageLoader.getHttpUrlExtension(str5, "file"));
                        file = new File(FileLoader.getDirectory(4), stringBuilder4.toString());
                        final String str6 = str5;
                        Utilities.globalQueue.postRunnable(new Runnable() {
                            public void run() {
                                final TL_photo generatePhotoSizes = SendMessagesHelper.this.generatePhotoSizes(file.toString(), null);
                                AndroidUtilities.runOnUIThread(new Runnable() {
                                    public void run() {
                                        if (generatePhotoSizes != null) {
                                            messageObject3.messageOwner.media.photo = generatePhotoSizes;
                                            messageObject3.messageOwner.attachPath = file.toString();
                                            ArrayList arrayList = new ArrayList();
                                            arrayList.add(messageObject3.messageOwner);
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, false, true, false, 0);
                                            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.updateMessageMedia, messageObject3.messageOwner);
                                            r4.location = ((PhotoSize) generatePhotoSizes.sizes.get(generatePhotoSizes.sizes.size() - 1)).location;
                                            r4.httpLocation = null;
                                            if (r4.type == 4) {
                                                SendMessagesHelper.this.performSendDelayedMessage(r4, r4.messageObjects.indexOf(messageObject3));
                                                return;
                                            } else {
                                                SendMessagesHelper.this.performSendDelayedMessage(r4);
                                                return;
                                            }
                                        }
                                        if (BuildVars.LOGS_ENABLED) {
                                            StringBuilder stringBuilder = new StringBuilder();
                                            stringBuilder.append("can't load image ");
                                            stringBuilder.append(str6);
                                            stringBuilder.append(" to file ");
                                            stringBuilder.append(file.toString());
                                            FileLog.m1e(stringBuilder.toString());
                                        }
                                        r4.markAsError();
                                    }
                                });
                            }
                        });
                    } else if (i3 == 1) {
                        stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(Utilities.MD5(str5));
                        stringBuilder4.append(".gif");
                        file = new File(FileLoader.getDirectory(4), stringBuilder4.toString());
                        Utilities.globalQueue.postRunnable(new Runnable() {
                            public void run() {
                                final Document document = r4.obj.getDocument();
                                if (document.thumb.location instanceof TL_fileLocationUnavailable) {
                                    try {
                                        boolean z = true;
                                        Bitmap loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap != null) {
                                            if (r4.sendEncryptedRequest == null) {
                                                z = false;
                                            }
                                            document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                            loadBitmap.recycle();
                                        }
                                    } catch (Throwable e) {
                                        document.thumb = null;
                                        FileLog.m3e(e);
                                    }
                                    if (document.thumb == null) {
                                        document.thumb = new TL_photoSizeEmpty();
                                        document.thumb.type = "s";
                                    }
                                }
                                AndroidUtilities.runOnUIThread(new Runnable() {
                                    public void run() {
                                        r4.httpLocation = null;
                                        r4.obj.messageOwner.attachPath = file.toString();
                                        r4.location = document.thumb.location;
                                        ArrayList arrayList = new ArrayList();
                                        arrayList.add(messageObject3.messageOwner);
                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, false, true, false, 0);
                                        SendMessagesHelper.this.performSendDelayedMessage(r4);
                                        NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.updateMessageMedia, r4.obj.messageOwner);
                                    }
                                });
                            }
                        });
                    }
                }
                sendMessagesHelper.delayedMessages.remove(str5);
            }
        } else if (i3 == NotificationCenter.FileDidLoaded) {
            r0 = (String) objArr[0];
            r1 = (ArrayList) sendMessagesHelper.delayedMessages.get(r0);
            if (r1 != null) {
                while (i6 < r1.size()) {
                    performSendDelayedMessage((DelayedMessage) r1.get(i6));
                    i6++;
                }
                sendMessagesHelper.delayedMessages.remove(r0);
            }
        } else if (i3 == NotificationCenter.httpFileDidFailedLoad || i3 == NotificationCenter.FileDidFailedLoad) {
            r0 = (String) objArr[0];
            r1 = (ArrayList) sendMessagesHelper.delayedMessages.get(r0);
            if (r1 != null) {
                while (i6 < r1.size()) {
                    ((DelayedMessage) r1.get(i6)).markAsError();
                    i6++;
                }
                sendMessagesHelper.delayedMessages.remove(r0);
            }
        }
    }

    public void cancelSendingMessage(MessageObject messageObject) {
        ArrayList arrayList;
        MessageObject messageObject2 = messageObject;
        ArrayList arrayList2 = new ArrayList();
        int i = 0;
        boolean z = false;
        for (Entry entry : this.delayedMessages.entrySet()) {
            arrayList = (ArrayList) entry.getValue();
            int i2 = 0;
            while (i2 < arrayList.size()) {
                DelayedMessage delayedMessage = (DelayedMessage) arrayList.get(i2);
                if (delayedMessage.type == 4) {
                    int i3 = -1;
                    Object obj = null;
                    for (int i4 = 0; i4 < delayedMessage.messageObjects.size(); i4++) {
                        obj = (MessageObject) delayedMessage.messageObjects.get(i4);
                        if (obj.getId() == messageObject.getId()) {
                            i3 = i4;
                            break;
                        }
                    }
                    if (i3 >= 0) {
                        delayedMessage.messageObjects.remove(i3);
                        delayedMessage.messages.remove(i3);
                        delayedMessage.originalPaths.remove(i3);
                        if (delayedMessage.sendRequest != null) {
                            ((TL_messages_sendMultiMedia) delayedMessage.sendRequest).multi_media.remove(i3);
                        } else {
                            TL_messages_sendEncryptedMultiMedia tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                            tL_messages_sendEncryptedMultiMedia.messages.remove(i3);
                            tL_messages_sendEncryptedMultiMedia.files.remove(i3);
                        }
                        MediaController.getInstance().cancelVideoConvert(messageObject2);
                        String str = (String) delayedMessage.extraHashMap.get(obj);
                        if (str != null) {
                            arrayList2.add(str);
                        }
                        if (delayedMessage.messageObjects.isEmpty()) {
                            delayedMessage.sendDelayedRequests();
                        } else {
                            if (delayedMessage.finalGroupMessage == messageObject.getId()) {
                                MessageObject messageObject3 = (MessageObject) delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1);
                                delayedMessage.finalGroupMessage = messageObject3.getId();
                                messageObject3.messageOwner.params.put("final", "1");
                                messages_Messages tL_messages_messages = new TL_messages_messages();
                                tL_messages_messages.messages.add(messageObject3.messageOwner);
                                MessagesStorage.getInstance(r0.currentAccount).putMessages(tL_messages_messages, delayedMessage.peer, -2, 0, false);
                            }
                            sendReadyToSendGroup(delayedMessage, false, true);
                        }
                    }
                } else if (delayedMessage.obj.getId() == messageObject.getId()) {
                    arrayList.remove(i2);
                    delayedMessage.sendDelayedRequests();
                    MediaController.getInstance().cancelVideoConvert(delayedMessage.obj);
                    if (arrayList.size() == 0) {
                        arrayList2.add(entry.getKey());
                        if (delayedMessage.sendEncryptedRequest != null) {
                            z = true;
                        }
                    }
                } else {
                    i2++;
                }
            }
        }
        while (i < arrayList2.size()) {
            String str2 = (String) arrayList2.get(i);
            if (str2.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(str2);
            } else {
                FileLoader.getInstance(r0.currentAccount).cancelUploadFile(str2, z);
            }
            stopVideoService(str2);
            r0.delayedMessages.remove(str2);
            i++;
        }
        arrayList = new ArrayList();
        arrayList.add(Integer.valueOf(messageObject.getId()));
        MessagesController.getInstance(r0.currentAccount).deleteMessages(arrayList, null, null, messageObject2.messageOwner.to_id.channel_id, false);
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean z) {
        if (messageObject.getId() >= 0) {
            return false;
        }
        if (messageObject.messageOwner.action instanceof TL_messageEncryptedAction) {
            z = MessagesController.getInstance(this.currentAccount).getEncryptedChat(Integer.valueOf((int) (messageObject.getDialogId() >> true)));
            if (z) {
                if (messageObject.messageOwner.random_id == 0) {
                    messageObject.messageOwner.random_id = getNextRandomId();
                }
                if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionSetMessageTTL) {
                    SecretChatHelper.getInstance(this.currentAccount).sendTTLMessage(z, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionDeleteMessages) {
                    SecretChatHelper.getInstance(this.currentAccount).sendMessagesDeleteMessage(z, null, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionFlushHistory) {
                    SecretChatHelper.getInstance(this.currentAccount).sendClearHistoryMessage(z, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionNotifyLayer) {
                    SecretChatHelper.getInstance(this.currentAccount).sendNotifyLayerMessage(z, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionReadMessages) {
                    SecretChatHelper.getInstance(this.currentAccount).sendMessagesReadMessage(z, null, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionScreenshotMessages) {
                    SecretChatHelper.getInstance(this.currentAccount).sendScreenshotMessage(z, null, messageObject.messageOwner);
                } else if (!(messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionTyping)) {
                    if (!(messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionResend)) {
                        if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionCommitKey) {
                            SecretChatHelper.getInstance(this.currentAccount).sendCommitKeyMessage(z, messageObject.messageOwner);
                        } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionAbortKey) {
                            SecretChatHelper.getInstance(this.currentAccount).sendAbortKeyMessage(z, messageObject.messageOwner, 0);
                        } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionRequestKey) {
                            SecretChatHelper.getInstance(this.currentAccount).sendRequestKeyMessage(z, messageObject.messageOwner);
                        } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionAcceptKey) {
                            SecretChatHelper.getInstance(this.currentAccount).sendAcceptKeyMessage(z, messageObject.messageOwner);
                        } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionNoop) {
                            SecretChatHelper.getInstance(this.currentAccount).sendNoopMessage(z, messageObject.messageOwner);
                        }
                    }
                }
                return true;
            }
            MessagesStorage.getInstance(this.currentAccount).markMessageAsSendError(messageObject.messageOwner);
            messageObject.messageOwner.send_state = 2;
            NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
            processSentMessage(messageObject.getId());
            return false;
        }
        if (messageObject.messageOwner.action instanceof TL_messageActionScreenshotTaken) {
            sendScreenshotMessage(MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf((int) messageObject.getDialogId())), messageObject.messageOwner.reply_to_msg_id, messageObject.messageOwner);
        }
        if (z) {
            this.unsentMessages.put(messageObject.getId(), messageObject);
        }
        sendMessage(messageObject);
        return true;
    }

    protected void processSentMessage(int i) {
        int size = this.unsentMessages.size();
        this.unsentMessages.remove(i);
        if (size != 0 && this.unsentMessages.size() == 0) {
            checkUnsentMessages();
        }
    }

    public void processForwardFromMyName(MessageObject messageObject, long j) {
        SendMessagesHelper sendMessagesHelper = this;
        MessageObject messageObject2 = messageObject;
        long j2 = j;
        if (messageObject2 != null) {
            ArrayList arrayList;
            if (messageObject2.messageOwner.media == null || (messageObject2.messageOwner.media instanceof TL_messageMediaEmpty) || (messageObject2.messageOwner.media instanceof TL_messageMediaWebPage) || (messageObject2.messageOwner.media instanceof TL_messageMediaGame) || (messageObject2.messageOwner.media instanceof TL_messageMediaInvoice)) {
                if (messageObject2.messageOwner.message != null) {
                    ArrayList arrayList2;
                    WebPage webPage = messageObject2.messageOwner.media instanceof TL_messageMediaWebPage ? messageObject2.messageOwner.media.webpage : null;
                    if (messageObject2.messageOwner.entities == null || messageObject2.messageOwner.entities.isEmpty()) {
                        arrayList2 = null;
                    } else {
                        arrayList = new ArrayList();
                        for (int i = 0; i < messageObject2.messageOwner.entities.size(); i++) {
                            MessageEntity messageEntity = (MessageEntity) messageObject2.messageOwner.entities.get(i);
                            if ((messageEntity instanceof TL_messageEntityBold) || (messageEntity instanceof TL_messageEntityItalic) || (messageEntity instanceof TL_messageEntityPre) || (messageEntity instanceof TL_messageEntityCode) || (messageEntity instanceof TL_messageEntityTextUrl)) {
                                arrayList.add(messageEntity);
                            }
                        }
                        arrayList2 = arrayList;
                    }
                    sendMessage(messageObject2.messageOwner.message, j2, messageObject2.replyMessageObject, webPage, true, arrayList2, null, null);
                } else if (((int) j2) != 0) {
                    arrayList = new ArrayList();
                    arrayList.add(messageObject2);
                    sendMessage(arrayList, j2);
                }
            } else if (messageObject2.messageOwner.media.photo instanceof TL_photo) {
                sendMessage((TL_photo) messageObject2.messageOwner.media.photo, null, j2, messageObject2.replyMessageObject, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, null, null, messageObject2.messageOwner.media.ttl_seconds);
            } else if (messageObject2.messageOwner.media.document instanceof TL_document) {
                sendMessage((TL_document) messageObject2.messageOwner.media.document, null, messageObject2.messageOwner.attachPath, j2, messageObject2.replyMessageObject, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, null, null, messageObject2.messageOwner.media.ttl_seconds);
            } else {
                if (!(messageObject2.messageOwner.media instanceof TL_messageMediaVenue)) {
                    if (!(messageObject2.messageOwner.media instanceof TL_messageMediaGeo)) {
                        if (messageObject2.messageOwner.media.phone_number != null) {
                            User tL_userContact_old2 = new TL_userContact_old2();
                            tL_userContact_old2.phone = messageObject2.messageOwner.media.phone_number;
                            tL_userContact_old2.first_name = messageObject2.messageOwner.media.first_name;
                            tL_userContact_old2.last_name = messageObject2.messageOwner.media.last_name;
                            tL_userContact_old2.id = messageObject2.messageOwner.media.user_id;
                            sendMessage(tL_userContact_old2, j2, messageObject2.replyMessageObject, null, null);
                        } else if (((int) j2) != 0) {
                            arrayList = new ArrayList();
                            arrayList.add(messageObject2);
                            sendMessage(arrayList, j2);
                        }
                    }
                }
                sendMessage(messageObject2.messageOwner.media, j2, messageObject2.replyMessageObject, null, null);
            }
        }
    }

    public void sendScreenshotMessage(User user, int i, Message message) {
        if (!(user == null || i == 0)) {
            if (user.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
                TLObject tL_messages_sendScreenshotNotification = new TL_messages_sendScreenshotNotification();
                tL_messages_sendScreenshotNotification.peer = new TL_inputPeerUser();
                tL_messages_sendScreenshotNotification.peer.access_hash = user.access_hash;
                tL_messages_sendScreenshotNotification.peer.user_id = user.id;
                if (message != null) {
                    tL_messages_sendScreenshotNotification.reply_to_msg_id = i;
                    tL_messages_sendScreenshotNotification.random_id = message.random_id;
                } else {
                    message = new TL_messageService();
                    message.random_id = getNextRandomId();
                    message.dialog_id = (long) user.id;
                    message.unread = true;
                    message.out = true;
                    int newMessageId = UserConfig.getInstance(this.currentAccount).getNewMessageId();
                    message.id = newMessageId;
                    message.local_id = newMessageId;
                    message.from_id = UserConfig.getInstance(this.currentAccount).getClientUserId();
                    message.flags |= 256;
                    message.flags |= 8;
                    message.reply_to_msg_id = i;
                    message.to_id = new TL_peerUser();
                    message.to_id.user_id = user.id;
                    message.date = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
                    message.action = new TL_messageActionScreenshotTaken();
                    UserConfig.getInstance(this.currentAccount).saveConfig(false);
                }
                tL_messages_sendScreenshotNotification.random_id = message.random_id;
                user = new MessageObject(this.currentAccount, message, false);
                user.messageOwner.send_state = 1;
                i = new ArrayList();
                i.add(user);
                MessagesController.getInstance(this.currentAccount).updateInterfaceWithMessages(message.dialog_id, i);
                NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                ArrayList arrayList = new ArrayList();
                arrayList.add(message);
                MessagesStorage.getInstance(this.currentAccount).putMessages(arrayList, false, true, false, 0);
                performSendMessageRequest(tL_messages_sendScreenshotNotification, user, 0);
            }
        }
    }

    public void sendSticker(Document document, long j, MessageObject messageObject) {
        Document document2 = document;
        long j2 = j;
        if (document2 != null) {
            SendMessagesHelper sendMessagesHelper;
            if (((int) j2) == 0) {
                if (MessagesController.getInstance(this.currentAccount).getEncryptedChat(Integer.valueOf((int) (j2 >> 32))) != null) {
                    Document tL_document = new TL_document();
                    tL_document.id = document2.id;
                    tL_document.access_hash = document2.access_hash;
                    tL_document.date = document2.date;
                    tL_document.mime_type = document2.mime_type;
                    tL_document.size = document2.size;
                    tL_document.dc_id = document2.dc_id;
                    tL_document.attributes = new ArrayList(document2.attributes);
                    if (tL_document.mime_type == null) {
                        tL_document.mime_type = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    if (document2.thumb instanceof TL_photoSize) {
                        File pathToAttach = FileLoader.getPathToAttach(document2.thumb, true);
                        if (pathToAttach.exists()) {
                            try {
                                pathToAttach.length();
                                byte[] bArr = new byte[((int) pathToAttach.length())];
                                new RandomAccessFile(pathToAttach, "r").readFully(bArr);
                                tL_document.thumb = new TL_photoCachedSize();
                                tL_document.thumb.location = document2.thumb.location;
                                tL_document.thumb.size = document2.thumb.size;
                                tL_document.thumb.f43w = document2.thumb.f43w;
                                tL_document.thumb.f42h = document2.thumb.f42h;
                                tL_document.thumb.type = document2.thumb.type;
                                tL_document.thumb.bytes = bArr;
                            } catch (Throwable e) {
                                FileLog.m3e(e);
                            }
                        }
                    }
                    if (tL_document.thumb == null) {
                        tL_document.thumb = new TL_photoSizeEmpty();
                        tL_document.thumb.type = "s";
                    }
                    document2 = tL_document;
                } else {
                    return;
                }
            }
            sendMessagesHelper = this;
            if (document2 instanceof TL_document) {
                sendMessagesHelper.sendMessage((TL_document) document2, null, null, j2, messageObject, null, null, null, null, 0);
            }
        }
    }

    public int sendMessage(ArrayList<MessageObject> arrayList, long j) {
        SendMessagesHelper sendMessagesHelper;
        SendMessagesHelper sendMessagesHelper2 = this;
        ArrayList<MessageObject> arrayList2 = arrayList;
        long j2 = j;
        if (arrayList2 != null) {
            if (!arrayList.isEmpty()) {
                int i;
                int i2 = (int) j2;
                if (i2 != 0) {
                    boolean z;
                    int i3;
                    boolean z2;
                    boolean z3;
                    int i4;
                    int i5;
                    LongSparseArray longSparseArray;
                    ArrayList arrayList3;
                    ArrayList arrayList4;
                    ArrayList arrayList5;
                    ArrayList arrayList6;
                    LongSparseArray longSparseArray2;
                    InputPeer inputPeer;
                    Peer peer;
                    long clientUserId;
                    boolean z4;
                    int i6;
                    int i7;
                    ArrayList arrayList7;
                    LongSparseArray longSparseArray3;
                    ArrayList arrayList8;
                    LongSparseArray longSparseArray4;
                    MessageObject messageObject;
                    Message tL_message;
                    ArrayList arrayList9;
                    ArrayList arrayList10;
                    Object obj;
                    InputPeer inputPeer2;
                    MessageFwdHeader messageFwdHeader;
                    User user;
                    int newMessageId;
                    long j3;
                    long j4;
                    Long l;
                    LongSparseArray longSparseArray5;
                    MessageObject messageObject2;
                    ArrayList arrayList11;
                    LongSparseArray longSparseArray6;
                    ArrayList arrayList12;
                    StringBuilder stringBuilder;
                    ArrayList arrayList13;
                    ArrayList arrayList14;
                    int i8;
                    InputPeer inputPeer3;
                    ArrayList arrayList15;
                    Peer peer2;
                    long j5;
                    LongSparseArray longSparseArray7;
                    ArrayList arrayList16;
                    LongSparseArray longSparseArray8;
                    Peer peer3 = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getPeer(i2);
                    if (i2 <= 0) {
                        Chat chat = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getChat(Integer.valueOf(-i2));
                        if (ChatObject.isChannel(chat)) {
                            boolean z5 = chat.megagroup;
                            z = chat.signatures;
                            if (chat.banned_rights != null) {
                                i3 = chat.banned_rights.embed_links ^ 1;
                                z2 = z5;
                                z3 = z;
                                i4 = chat.banned_rights.send_stickers ^ 1;
                                i5 = chat.banned_rights.send_media ^ 1;
                            } else {
                                z2 = z5;
                                z3 = z;
                                i4 = 1;
                                i5 = i4;
                                i3 = i5;
                            }
                            longSparseArray = new LongSparseArray();
                            arrayList3 = new ArrayList();
                            arrayList4 = new ArrayList();
                            arrayList5 = new ArrayList();
                            arrayList6 = new ArrayList();
                            longSparseArray2 = new LongSparseArray();
                            inputPeer = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getInputPeer(i2);
                            peer = peer3;
                            clientUserId = (long) UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                            z4 = j2 != clientUserId;
                            i6 = 0;
                            i7 = i6;
                            arrayList7 = arrayList5;
                            arrayList5 = arrayList3;
                            arrayList3 = arrayList4;
                            arrayList4 = arrayList7;
                            longSparseArray3 = longSparseArray2;
                            arrayList8 = arrayList6;
                            longSparseArray4 = longSparseArray3;
                            while (i6 < arrayList.size()) {
                                messageObject = (MessageObject) arrayList2.get(i6);
                                if (messageObject.getId() > 0) {
                                    if (messageObject.needDrawBluredPreview()) {
                                        if (i4 == 0 || !(messageObject.isSticker() || messageObject.isGif() || messageObject.isGame())) {
                                            if (i5 == 0 || !((messageObject.messageOwner.media instanceof TL_messageMediaPhoto) || (messageObject.messageOwner.media instanceof TL_messageMediaDocument))) {
                                                tL_message = new TL_message();
                                                if (messageObject.getDialogId() != clientUserId) {
                                                    arrayList9 = arrayList3;
                                                    arrayList10 = arrayList5;
                                                    if (messageObject.messageOwner.from_id == UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId()) {
                                                        obj = 1;
                                                        inputPeer2 = inputPeer;
                                                        if (!messageObject.isForwarded()) {
                                                            tL_message.fwd_from = new TL_messageFwdHeader();
                                                            tL_message.fwd_from.flags = messageObject.messageOwner.fwd_from.flags;
                                                            tL_message.fwd_from.from_id = messageObject.messageOwner.fwd_from.from_id;
                                                            tL_message.fwd_from.date = messageObject.messageOwner.fwd_from.date;
                                                            tL_message.fwd_from.channel_id = messageObject.messageOwner.fwd_from.channel_id;
                                                            tL_message.fwd_from.channel_post = messageObject.messageOwner.fwd_from.channel_post;
                                                            tL_message.fwd_from.post_author = messageObject.messageOwner.fwd_from.post_author;
                                                            tL_message.flags = 4;
                                                        } else if (obj == null) {
                                                            tL_message.fwd_from = new TL_messageFwdHeader();
                                                            tL_message.fwd_from.channel_post = messageObject.getId();
                                                            messageFwdHeader = tL_message.fwd_from;
                                                            messageFwdHeader.flags |= 4;
                                                            if (messageObject.isFromUser()) {
                                                                tL_message.fwd_from.channel_id = messageObject.messageOwner.to_id.channel_id;
                                                                messageFwdHeader = tL_message.fwd_from;
                                                                messageFwdHeader.flags |= 2;
                                                                if (messageObject.messageOwner.post && messageObject.messageOwner.from_id > 0) {
                                                                    tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                                                    messageFwdHeader = tL_message.fwd_from;
                                                                    messageFwdHeader.flags |= 1;
                                                                }
                                                            } else {
                                                                tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                                                messageFwdHeader = tL_message.fwd_from;
                                                                messageFwdHeader.flags |= 1;
                                                            }
                                                            if (messageObject.messageOwner.post_author == null) {
                                                                tL_message.fwd_from.post_author = messageObject.messageOwner.post_author;
                                                                messageFwdHeader = tL_message.fwd_from;
                                                                messageFwdHeader.flags |= 8;
                                                            } else if (!messageObject.isOutOwner() && messageObject.messageOwner.from_id > 0 && messageObject.messageOwner.post) {
                                                                user = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                                                                if (user != null) {
                                                                    tL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                                                    messageFwdHeader = tL_message.fwd_from;
                                                                    messageFwdHeader.flags |= 8;
                                                                }
                                                            }
                                                            tL_message.date = messageObject.messageOwner.date;
                                                            tL_message.flags = 4;
                                                        }
                                                        if (j2 == clientUserId && tL_message.fwd_from != null) {
                                                            messageFwdHeader = tL_message.fwd_from;
                                                            messageFwdHeader.flags |= 16;
                                                            tL_message.fwd_from.saved_from_msg_id = messageObject.getId();
                                                            tL_message.fwd_from.saved_from_peer = messageObject.messageOwner.to_id;
                                                        }
                                                        if (i3 == 0 || !(messageObject.messageOwner.media instanceof TL_messageMediaWebPage)) {
                                                            tL_message.media = messageObject.messageOwner.media;
                                                        } else {
                                                            tL_message.media = new TL_messageMediaEmpty();
                                                        }
                                                        if (tL_message.media != null) {
                                                            tL_message.flags |= 512;
                                                        }
                                                        if (z2) {
                                                            tL_message.flags |= Integer.MIN_VALUE;
                                                        }
                                                        if (messageObject.messageOwner.via_bot_id != 0) {
                                                            tL_message.via_bot_id = messageObject.messageOwner.via_bot_id;
                                                            tL_message.flags |= 2048;
                                                        }
                                                        tL_message.message = messageObject.messageOwner.message;
                                                        tL_message.fwd_msg_id = messageObject.getId();
                                                        tL_message.attachPath = messageObject.messageOwner.attachPath;
                                                        tL_message.entities = messageObject.messageOwner.entities;
                                                        if (!tL_message.entities.isEmpty()) {
                                                            tL_message.flags |= 128;
                                                        }
                                                        if (tL_message.attachPath == null) {
                                                            tL_message.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                                        }
                                                        newMessageId = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getNewMessageId();
                                                        tL_message.id = newMessageId;
                                                        tL_message.local_id = newMessageId;
                                                        tL_message.out = true;
                                                        j3 = clientUserId;
                                                        clientUserId = messageObject.messageOwner.grouped_id;
                                                        if (clientUserId == 0) {
                                                            j4 = clientUserId;
                                                            l = (Long) longSparseArray.get(messageObject.messageOwner.grouped_id);
                                                            if (l == null) {
                                                                l = Long.valueOf(Utilities.random.nextLong());
                                                                longSparseArray.put(messageObject.messageOwner.grouped_id, l);
                                                            }
                                                            tL_message.grouped_id = l.longValue();
                                                            tL_message.flags |= 131072;
                                                        } else {
                                                            j4 = clientUserId;
                                                        }
                                                        if (i6 == arrayList.size() - 1) {
                                                            longSparseArray5 = longSparseArray;
                                                            if (((MessageObject) arrayList2.get(i6 + 1)).messageOwner.grouped_id != messageObject.messageOwner.grouped_id) {
                                                                peer3 = peer;
                                                                obj = 1;
                                                                if (peer3.channel_id != 0 || z2) {
                                                                    tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                                                    tL_message.flags |= 256;
                                                                } else {
                                                                    tL_message.from_id = z3 ? UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId() : -peer3.channel_id;
                                                                    tL_message.post = true;
                                                                }
                                                                if (tL_message.random_id == 0) {
                                                                    tL_message.random_id = getNextRandomId();
                                                                }
                                                                arrayList4.add(Long.valueOf(tL_message.random_id));
                                                                longSparseArray4.put(tL_message.random_id, tL_message);
                                                                arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                                                tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                                                inputPeer = inputPeer2;
                                                                if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                                                    if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                                        tL_message.views = messageObject.messageOwner.views;
                                                                        tL_message.flags |= 1024;
                                                                    }
                                                                    z = true;
                                                                    tL_message.unread = true;
                                                                } else if (z2) {
                                                                    z = true;
                                                                    tL_message.views = 1;
                                                                    tL_message.flags |= 1024;
                                                                } else {
                                                                    z = true;
                                                                    tL_message.unread = true;
                                                                }
                                                                tL_message.dialog_id = j2;
                                                                tL_message.to_id = peer3;
                                                                if (MessageObject.isVoiceMessage(tL_message) || MessageObject.isRoundVideoMessage(tL_message)) {
                                                                    tL_message.media_unread = z;
                                                                }
                                                                if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                                                    tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                                                }
                                                                messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                                                messageObject2.messageOwner.send_state = 1;
                                                                arrayList11 = arrayList10;
                                                                arrayList11.add(messageObject2);
                                                                arrayList5 = arrayList9;
                                                                arrayList5.add(tL_message);
                                                                sendMessagesHelper2.putToSendingMessages(tL_message);
                                                                if (BuildVars.LOGS_ENABLED) {
                                                                    longSparseArray6 = longSparseArray4;
                                                                    arrayList12 = arrayList8;
                                                                } else {
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("forward message user_id = ");
                                                                    stringBuilder.append(inputPeer.user_id);
                                                                    stringBuilder.append(" chat_id = ");
                                                                    stringBuilder.append(inputPeer.chat_id);
                                                                    stringBuilder.append(" channel_id = ");
                                                                    stringBuilder.append(inputPeer.channel_id);
                                                                    stringBuilder.append(" access_hash = ");
                                                                    longSparseArray6 = longSparseArray4;
                                                                    arrayList12 = arrayList8;
                                                                    stringBuilder.append(inputPeer.access_hash);
                                                                    FileLog.m0d(stringBuilder.toString());
                                                                }
                                                                if (!((obj != null && arrayList5.size() > 0) || arrayList5.size() == 100 || i6 == arrayList.size() - 1)) {
                                                                    if (i6 != arrayList.size() - 1 || ((MessageObject) arrayList2.get(i6 + 1)).getDialogId() == messageObject.getDialogId()) {
                                                                        arrayList13 = arrayList4;
                                                                        arrayList14 = arrayList5;
                                                                        i8 = i6;
                                                                        inputPeer3 = inputPeer;
                                                                        arrayList15 = arrayList11;
                                                                        peer2 = peer3;
                                                                        j5 = j3;
                                                                        longSparseArray7 = longSparseArray5;
                                                                        arrayList16 = arrayList12;
                                                                        longSparseArray8 = longSparseArray6;
                                                                        arrayList3 = arrayList14;
                                                                        arrayList4 = arrayList13;
                                                                        arrayList5 = arrayList15;
                                                                        longSparseArray4 = longSparseArray8;
                                                                        arrayList8 = arrayList16;
                                                                        i6 = i8 + 1;
                                                                        longSparseArray = longSparseArray7;
                                                                        clientUserId = j5;
                                                                        peer = peer2;
                                                                        inputPeer = inputPeer3;
                                                                        sendMessagesHelper2 = this;
                                                                        j2 = j;
                                                                    }
                                                                }
                                                                MessagesStorage.getInstance(sendMessagesHelper2.currentAccount).putMessages(new ArrayList(arrayList5), false, true, false, 0);
                                                                MessagesController.getInstance(sendMessagesHelper2.currentAccount).updateInterfaceWithMessages(j2, arrayList11);
                                                                NotificationCenter.getInstance(sendMessagesHelper2.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                UserConfig.getInstance(sendMessagesHelper2.currentAccount).saveConfig(false);
                                                                TLObject tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                                tL_messages_forwardMessages.grouped = j4 != 0;
                                                                if (tL_messages_forwardMessages.to_peer instanceof TL_inputPeerChannel) {
                                                                    SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper2.currentAccount);
                                                                    StringBuilder stringBuilder2 = new StringBuilder();
                                                                    stringBuilder2.append("silent_");
                                                                    stringBuilder2.append(j2);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder2.toString(), false);
                                                                }
                                                                if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                                                    chat = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getChat(Integer.valueOf(messageObject.messageOwner.to_id.channel_id));
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                    tL_messages_forwardMessages.from_peer.channel_id = messageObject.messageOwner.to_id.channel_id;
                                                                    if (chat != null) {
                                                                        tL_messages_forwardMessages.from_peer.access_hash = chat.access_hash;
                                                                    }
                                                                } else {
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                }
                                                                tL_messages_forwardMessages.random_id = arrayList4;
                                                                arrayList8 = arrayList12;
                                                                tL_messages_forwardMessages.id = arrayList8;
                                                                boolean z6 = arrayList.size() == 1 && ((MessageObject) arrayList2.get(0)).messageOwner.with_my_score;
                                                                tL_messages_forwardMessages.with_my_score = z6;
                                                                arrayList14 = arrayList5;
                                                                SendMessagesHelper sendMessagesHelper3 = sendMessagesHelper2;
                                                                arrayList13 = arrayList4;
                                                                arrayList15 = arrayList11;
                                                                final long j6 = j2;
                                                                ConnectionsManager instance = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount);
                                                                longSparseArray8 = longSparseArray6;
                                                                final boolean z7 = z2;
                                                                arrayList16 = arrayList8;
                                                                final boolean z8 = z4;
                                                                i8 = i6;
                                                                final LongSparseArray longSparseArray9 = longSparseArray8;
                                                                InputPeer inputPeer4 = inputPeer;
                                                                final ArrayList arrayList17 = arrayList14;
                                                                inputPeer3 = inputPeer4;
                                                                longSparseArray7 = longSparseArray5;
                                                                C18215 c18215 = r0;
                                                                arrayList11 = arrayList15;
                                                                int i9 = 1;
                                                                j5 = j3;
                                                                final Peer peer4 = peer3;
                                                                peer2 = peer3;
                                                                final TLObject tLObject = tL_messages_forwardMessages;
                                                                C18215 c182152 = new RequestDelegate() {
                                                                    public void run(TLObject tLObject, TL_error tL_error) {
                                                                        C18215 c18215 = this;
                                                                        final TL_error tL_error2 = tL_error;
                                                                        int i = 0;
                                                                        if (tL_error2 == null) {
                                                                            SparseLongArray sparseLongArray = new SparseLongArray();
                                                                            Updates updates = (Updates) tLObject;
                                                                            int i2 = 0;
                                                                            while (i2 < updates.updates.size()) {
                                                                                Update update = (Update) updates.updates.get(i2);
                                                                                if (update instanceof TL_updateMessageID) {
                                                                                    TL_updateMessageID tL_updateMessageID = (TL_updateMessageID) update;
                                                                                    sparseLongArray.put(tL_updateMessageID.id, tL_updateMessageID.random_id);
                                                                                    updates.updates.remove(i2);
                                                                                    i2--;
                                                                                }
                                                                                i2++;
                                                                            }
                                                                            Integer num = (Integer) MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.get(Long.valueOf(j6));
                                                                            if (num == null) {
                                                                                num = Integer.valueOf(MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getDialogReadMax(true, j6));
                                                                                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.put(Long.valueOf(j6), num);
                                                                            }
                                                                            Integer num2 = num;
                                                                            i2 = 0;
                                                                            int i3 = i2;
                                                                            while (i2 < updates.updates.size()) {
                                                                                int i4;
                                                                                Message message;
                                                                                Update update2 = (Update) updates.updates.get(i2);
                                                                                boolean z = update2 instanceof TL_updateNewMessage;
                                                                                if (!z) {
                                                                                    if (!(update2 instanceof TL_updateNewChannelMessage)) {
                                                                                        i4 = i2;
                                                                                        i2 = i4 + 1;
                                                                                    }
                                                                                }
                                                                                updates.updates.remove(i2);
                                                                                i4 = i2 - 1;
                                                                                if (z) {
                                                                                    TL_updateNewMessage tL_updateNewMessage = (TL_updateNewMessage) update2;
                                                                                    message = tL_updateNewMessage.message;
                                                                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, tL_updateNewMessage.pts, -1, tL_updateNewMessage.pts_count);
                                                                                } else {
                                                                                    TL_updateNewChannelMessage tL_updateNewChannelMessage = (TL_updateNewChannelMessage) update2;
                                                                                    message = tL_updateNewChannelMessage.message;
                                                                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewChannelDifferenceParams(tL_updateNewChannelMessage.pts, tL_updateNewChannelMessage.pts_count, message.to_id.channel_id);
                                                                                    if (z7) {
                                                                                        message.flags |= Integer.MIN_VALUE;
                                                                                    }
                                                                                }
                                                                                final Message message2 = message;
                                                                                ImageLoader.saveMessageThumbs(message2);
                                                                                message2.unread = num2.intValue() < message2.id;
                                                                                if (z8) {
                                                                                    message2.out = true;
                                                                                    message2.unread = false;
                                                                                    message2.media_unread = false;
                                                                                }
                                                                                long j = sparseLongArray.get(message2.id);
                                                                                if (j != 0) {
                                                                                    final Message message3 = (Message) longSparseArray9.get(j);
                                                                                    if (message3 != null) {
                                                                                        int indexOf = arrayList17.indexOf(message3);
                                                                                        if (indexOf != -1) {
                                                                                            MessageObject messageObject = (MessageObject) arrayList11.get(indexOf);
                                                                                            arrayList17.remove(indexOf);
                                                                                            arrayList11.remove(indexOf);
                                                                                            indexOf = message3.id;
                                                                                            final ArrayList arrayList = new ArrayList();
                                                                                            arrayList.add(message2);
                                                                                            message3.id = message2.id;
                                                                                            int i5 = i3 + 1;
                                                                                            SendMessagesHelper.this.updateMediaPaths(messageObject, message2, null, true);
                                                                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

                                                                                                /* renamed from: org.telegram.messenger.SendMessagesHelper$5$1$1 */
                                                                                                class C05021 implements Runnable {
                                                                                                    C05021() {
                                                                                                    }

                                                                                                    public void run() {
                                                                                                        message3.send_state = 0;
                                                                                                        DataQuery.getInstance(SendMessagesHelper.this.currentAccount).increasePeerRaiting(j6);
                                                                                                        NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(indexOf), Integer.valueOf(message2.id), message2, Long.valueOf(j6));
                                                                                                        SendMessagesHelper.this.processSentMessage(indexOf);
                                                                                                        SendMessagesHelper.this.removeFromSendingMessages(indexOf);
                                                                                                    }
                                                                                                }

                                                                                                public void run() {
                                                                                                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).updateMessageStateAndId(message3.random_id, Integer.valueOf(indexOf), message3.id, 0, false, peer4.channel_id);
                                                                                                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, true, false, false, 0);
                                                                                                    AndroidUtilities.runOnUIThread(new C05021());
                                                                                                }
                                                                                            });
                                                                                            i3 = i5;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                i2 = i4 + 1;
                                                                            }
                                                                            if (!updates.updates.isEmpty()) {
                                                                                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates(updates, false);
                                                                            }
                                                                            StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, i3);
                                                                        } else {
                                                                            AndroidUtilities.runOnUIThread(new Runnable() {
                                                                                public void run() {
                                                                                    AlertsCreator.processError(SendMessagesHelper.this.currentAccount, tL_error2, null, tLObject, new Object[0]);
                                                                                }
                                                                            });
                                                                        }
                                                                        while (i < arrayList17.size()) {
                                                                            final Message message4 = (Message) arrayList17.get(i);
                                                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(message4);
                                                                            AndroidUtilities.runOnUIThread(new Runnable() {
                                                                                public void run() {
                                                                                    message4.send_state = 2;
                                                                                    NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message4.id));
                                                                                    SendMessagesHelper.this.processSentMessage(message4.id);
                                                                                    SendMessagesHelper.this.removeFromSendingMessages(message4.id);
                                                                                }
                                                                            });
                                                                            i++;
                                                                        }
                                                                    }
                                                                };
                                                                instance.sendRequest(tL_messages_forwardMessages, c18215, 68);
                                                                if (i8 != arrayList.size() - 1) {
                                                                    arrayList5 = new ArrayList();
                                                                    arrayList3 = new ArrayList();
                                                                    ArrayList arrayList18 = new ArrayList();
                                                                    arrayList4 = new ArrayList();
                                                                    longSparseArray4 = new LongSparseArray();
                                                                    arrayList8 = arrayList4;
                                                                    arrayList4 = arrayList18;
                                                                    i6 = i8 + 1;
                                                                    longSparseArray = longSparseArray7;
                                                                    clientUserId = j5;
                                                                    peer = peer2;
                                                                    inputPeer = inputPeer3;
                                                                    sendMessagesHelper2 = this;
                                                                    j2 = j;
                                                                }
                                                                arrayList3 = arrayList14;
                                                                arrayList4 = arrayList13;
                                                                arrayList5 = arrayList15;
                                                                longSparseArray4 = longSparseArray8;
                                                                arrayList8 = arrayList16;
                                                                i6 = i8 + 1;
                                                                longSparseArray = longSparseArray7;
                                                                clientUserId = j5;
                                                                peer = peer2;
                                                                inputPeer = inputPeer3;
                                                                sendMessagesHelper2 = this;
                                                                j2 = j;
                                                            }
                                                        } else {
                                                            longSparseArray5 = longSparseArray;
                                                        }
                                                        peer3 = peer;
                                                        obj = null;
                                                        if (peer3.channel_id != 0) {
                                                        }
                                                        tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                                        tL_message.flags |= 256;
                                                        if (tL_message.random_id == 0) {
                                                            tL_message.random_id = getNextRandomId();
                                                        }
                                                        arrayList4.add(Long.valueOf(tL_message.random_id));
                                                        longSparseArray4.put(tL_message.random_id, tL_message);
                                                        arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                                        tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                                        inputPeer = inputPeer2;
                                                        if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                                            if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                                tL_message.views = messageObject.messageOwner.views;
                                                                tL_message.flags |= 1024;
                                                            }
                                                            z = true;
                                                            tL_message.unread = true;
                                                        } else if (z2) {
                                                            z = true;
                                                            tL_message.unread = true;
                                                        } else {
                                                            z = true;
                                                            tL_message.views = 1;
                                                            tL_message.flags |= 1024;
                                                        }
                                                        tL_message.dialog_id = j2;
                                                        tL_message.to_id = peer3;
                                                        tL_message.media_unread = z;
                                                        if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                                            tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                                        }
                                                        messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                                        messageObject2.messageOwner.send_state = 1;
                                                        arrayList11 = arrayList10;
                                                        arrayList11.add(messageObject2);
                                                        arrayList5 = arrayList9;
                                                        arrayList5.add(tL_message);
                                                        sendMessagesHelper2.putToSendingMessages(tL_message);
                                                        if (BuildVars.LOGS_ENABLED) {
                                                            longSparseArray6 = longSparseArray4;
                                                            arrayList12 = arrayList8;
                                                        } else {
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("forward message user_id = ");
                                                            stringBuilder.append(inputPeer.user_id);
                                                            stringBuilder.append(" chat_id = ");
                                                            stringBuilder.append(inputPeer.chat_id);
                                                            stringBuilder.append(" channel_id = ");
                                                            stringBuilder.append(inputPeer.channel_id);
                                                            stringBuilder.append(" access_hash = ");
                                                            longSparseArray6 = longSparseArray4;
                                                            arrayList12 = arrayList8;
                                                            stringBuilder.append(inputPeer.access_hash);
                                                            FileLog.m0d(stringBuilder.toString());
                                                        }
                                                        if (i6 != arrayList.size() - 1) {
                                                        }
                                                        arrayList13 = arrayList4;
                                                        arrayList14 = arrayList5;
                                                        i8 = i6;
                                                        inputPeer3 = inputPeer;
                                                        arrayList15 = arrayList11;
                                                        peer2 = peer3;
                                                        j5 = j3;
                                                        longSparseArray7 = longSparseArray5;
                                                        arrayList16 = arrayList12;
                                                        longSparseArray8 = longSparseArray6;
                                                        arrayList3 = arrayList14;
                                                        arrayList4 = arrayList13;
                                                        arrayList5 = arrayList15;
                                                        longSparseArray4 = longSparseArray8;
                                                        arrayList8 = arrayList16;
                                                        i6 = i8 + 1;
                                                        longSparseArray = longSparseArray7;
                                                        clientUserId = j5;
                                                        peer = peer2;
                                                        inputPeer = inputPeer3;
                                                        sendMessagesHelper2 = this;
                                                        j2 = j;
                                                    }
                                                } else {
                                                    arrayList9 = arrayList3;
                                                    arrayList10 = arrayList5;
                                                }
                                                obj = null;
                                                inputPeer2 = inputPeer;
                                                if (!messageObject.isForwarded()) {
                                                    tL_message.fwd_from = new TL_messageFwdHeader();
                                                    tL_message.fwd_from.flags = messageObject.messageOwner.fwd_from.flags;
                                                    tL_message.fwd_from.from_id = messageObject.messageOwner.fwd_from.from_id;
                                                    tL_message.fwd_from.date = messageObject.messageOwner.fwd_from.date;
                                                    tL_message.fwd_from.channel_id = messageObject.messageOwner.fwd_from.channel_id;
                                                    tL_message.fwd_from.channel_post = messageObject.messageOwner.fwd_from.channel_post;
                                                    tL_message.fwd_from.post_author = messageObject.messageOwner.fwd_from.post_author;
                                                    tL_message.flags = 4;
                                                } else if (obj == null) {
                                                    tL_message.fwd_from = new TL_messageFwdHeader();
                                                    tL_message.fwd_from.channel_post = messageObject.getId();
                                                    messageFwdHeader = tL_message.fwd_from;
                                                    messageFwdHeader.flags |= 4;
                                                    if (messageObject.isFromUser()) {
                                                        tL_message.fwd_from.channel_id = messageObject.messageOwner.to_id.channel_id;
                                                        messageFwdHeader = tL_message.fwd_from;
                                                        messageFwdHeader.flags |= 2;
                                                        tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                                        messageFwdHeader = tL_message.fwd_from;
                                                        messageFwdHeader.flags |= 1;
                                                    } else {
                                                        tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                                        messageFwdHeader = tL_message.fwd_from;
                                                        messageFwdHeader.flags |= 1;
                                                    }
                                                    if (messageObject.messageOwner.post_author == null) {
                                                        user = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                                                        if (user != null) {
                                                            tL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                                            messageFwdHeader = tL_message.fwd_from;
                                                            messageFwdHeader.flags |= 8;
                                                        }
                                                    } else {
                                                        tL_message.fwd_from.post_author = messageObject.messageOwner.post_author;
                                                        messageFwdHeader = tL_message.fwd_from;
                                                        messageFwdHeader.flags |= 8;
                                                    }
                                                    tL_message.date = messageObject.messageOwner.date;
                                                    tL_message.flags = 4;
                                                }
                                                messageFwdHeader = tL_message.fwd_from;
                                                messageFwdHeader.flags |= 16;
                                                tL_message.fwd_from.saved_from_msg_id = messageObject.getId();
                                                tL_message.fwd_from.saved_from_peer = messageObject.messageOwner.to_id;
                                                if (i3 == 0) {
                                                }
                                                tL_message.media = messageObject.messageOwner.media;
                                                if (tL_message.media != null) {
                                                    tL_message.flags |= 512;
                                                }
                                                if (z2) {
                                                    tL_message.flags |= Integer.MIN_VALUE;
                                                }
                                                if (messageObject.messageOwner.via_bot_id != 0) {
                                                    tL_message.via_bot_id = messageObject.messageOwner.via_bot_id;
                                                    tL_message.flags |= 2048;
                                                }
                                                tL_message.message = messageObject.messageOwner.message;
                                                tL_message.fwd_msg_id = messageObject.getId();
                                                tL_message.attachPath = messageObject.messageOwner.attachPath;
                                                tL_message.entities = messageObject.messageOwner.entities;
                                                if (tL_message.entities.isEmpty()) {
                                                    tL_message.flags |= 128;
                                                }
                                                if (tL_message.attachPath == null) {
                                                    tL_message.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                                }
                                                newMessageId = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getNewMessageId();
                                                tL_message.id = newMessageId;
                                                tL_message.local_id = newMessageId;
                                                tL_message.out = true;
                                                j3 = clientUserId;
                                                clientUserId = messageObject.messageOwner.grouped_id;
                                                if (clientUserId == 0) {
                                                    j4 = clientUserId;
                                                } else {
                                                    j4 = clientUserId;
                                                    l = (Long) longSparseArray.get(messageObject.messageOwner.grouped_id);
                                                    if (l == null) {
                                                        l = Long.valueOf(Utilities.random.nextLong());
                                                        longSparseArray.put(messageObject.messageOwner.grouped_id, l);
                                                    }
                                                    tL_message.grouped_id = l.longValue();
                                                    tL_message.flags |= 131072;
                                                }
                                                if (i6 == arrayList.size() - 1) {
                                                    longSparseArray5 = longSparseArray;
                                                } else {
                                                    longSparseArray5 = longSparseArray;
                                                    if (((MessageObject) arrayList2.get(i6 + 1)).messageOwner.grouped_id != messageObject.messageOwner.grouped_id) {
                                                        peer3 = peer;
                                                        obj = 1;
                                                        if (peer3.channel_id != 0) {
                                                        }
                                                        tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                                        tL_message.flags |= 256;
                                                        if (tL_message.random_id == 0) {
                                                            tL_message.random_id = getNextRandomId();
                                                        }
                                                        arrayList4.add(Long.valueOf(tL_message.random_id));
                                                        longSparseArray4.put(tL_message.random_id, tL_message);
                                                        arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                                        tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                                        inputPeer = inputPeer2;
                                                        if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                                            if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                                tL_message.views = messageObject.messageOwner.views;
                                                                tL_message.flags |= 1024;
                                                            }
                                                            z = true;
                                                            tL_message.unread = true;
                                                        } else if (z2) {
                                                            z = true;
                                                            tL_message.views = 1;
                                                            tL_message.flags |= 1024;
                                                        } else {
                                                            z = true;
                                                            tL_message.unread = true;
                                                        }
                                                        tL_message.dialog_id = j2;
                                                        tL_message.to_id = peer3;
                                                        tL_message.media_unread = z;
                                                        if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                                            tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                                        }
                                                        messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                                        messageObject2.messageOwner.send_state = 1;
                                                        arrayList11 = arrayList10;
                                                        arrayList11.add(messageObject2);
                                                        arrayList5 = arrayList9;
                                                        arrayList5.add(tL_message);
                                                        sendMessagesHelper2.putToSendingMessages(tL_message);
                                                        if (BuildVars.LOGS_ENABLED) {
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("forward message user_id = ");
                                                            stringBuilder.append(inputPeer.user_id);
                                                            stringBuilder.append(" chat_id = ");
                                                            stringBuilder.append(inputPeer.chat_id);
                                                            stringBuilder.append(" channel_id = ");
                                                            stringBuilder.append(inputPeer.channel_id);
                                                            stringBuilder.append(" access_hash = ");
                                                            longSparseArray6 = longSparseArray4;
                                                            arrayList12 = arrayList8;
                                                            stringBuilder.append(inputPeer.access_hash);
                                                            FileLog.m0d(stringBuilder.toString());
                                                        } else {
                                                            longSparseArray6 = longSparseArray4;
                                                            arrayList12 = arrayList8;
                                                        }
                                                        if (i6 != arrayList.size() - 1) {
                                                        }
                                                        arrayList13 = arrayList4;
                                                        arrayList14 = arrayList5;
                                                        i8 = i6;
                                                        inputPeer3 = inputPeer;
                                                        arrayList15 = arrayList11;
                                                        peer2 = peer3;
                                                        j5 = j3;
                                                        longSparseArray7 = longSparseArray5;
                                                        arrayList16 = arrayList12;
                                                        longSparseArray8 = longSparseArray6;
                                                        arrayList3 = arrayList14;
                                                        arrayList4 = arrayList13;
                                                        arrayList5 = arrayList15;
                                                        longSparseArray4 = longSparseArray8;
                                                        arrayList8 = arrayList16;
                                                        i6 = i8 + 1;
                                                        longSparseArray = longSparseArray7;
                                                        clientUserId = j5;
                                                        peer = peer2;
                                                        inputPeer = inputPeer3;
                                                        sendMessagesHelper2 = this;
                                                        j2 = j;
                                                    }
                                                }
                                                peer3 = peer;
                                                obj = null;
                                                if (peer3.channel_id != 0) {
                                                }
                                                tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                                tL_message.flags |= 256;
                                                if (tL_message.random_id == 0) {
                                                    tL_message.random_id = getNextRandomId();
                                                }
                                                arrayList4.add(Long.valueOf(tL_message.random_id));
                                                longSparseArray4.put(tL_message.random_id, tL_message);
                                                arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                                tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                                inputPeer = inputPeer2;
                                                if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                                    if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                        tL_message.views = messageObject.messageOwner.views;
                                                        tL_message.flags |= 1024;
                                                    }
                                                    z = true;
                                                    tL_message.unread = true;
                                                } else if (z2) {
                                                    z = true;
                                                    tL_message.unread = true;
                                                } else {
                                                    z = true;
                                                    tL_message.views = 1;
                                                    tL_message.flags |= 1024;
                                                }
                                                tL_message.dialog_id = j2;
                                                tL_message.to_id = peer3;
                                                tL_message.media_unread = z;
                                                if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                                    tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                                }
                                                messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                                messageObject2.messageOwner.send_state = 1;
                                                arrayList11 = arrayList10;
                                                arrayList11.add(messageObject2);
                                                arrayList5 = arrayList9;
                                                arrayList5.add(tL_message);
                                                sendMessagesHelper2.putToSendingMessages(tL_message);
                                                if (BuildVars.LOGS_ENABLED) {
                                                    longSparseArray6 = longSparseArray4;
                                                    arrayList12 = arrayList8;
                                                } else {
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("forward message user_id = ");
                                                    stringBuilder.append(inputPeer.user_id);
                                                    stringBuilder.append(" chat_id = ");
                                                    stringBuilder.append(inputPeer.chat_id);
                                                    stringBuilder.append(" channel_id = ");
                                                    stringBuilder.append(inputPeer.channel_id);
                                                    stringBuilder.append(" access_hash = ");
                                                    longSparseArray6 = longSparseArray4;
                                                    arrayList12 = arrayList8;
                                                    stringBuilder.append(inputPeer.access_hash);
                                                    FileLog.m0d(stringBuilder.toString());
                                                }
                                                if (i6 != arrayList.size() - 1) {
                                                }
                                                arrayList13 = arrayList4;
                                                arrayList14 = arrayList5;
                                                i8 = i6;
                                                inputPeer3 = inputPeer;
                                                arrayList15 = arrayList11;
                                                peer2 = peer3;
                                                j5 = j3;
                                                longSparseArray7 = longSparseArray5;
                                                arrayList16 = arrayList12;
                                                longSparseArray8 = longSparseArray6;
                                                arrayList3 = arrayList14;
                                                arrayList4 = arrayList13;
                                                arrayList5 = arrayList15;
                                                longSparseArray4 = longSparseArray8;
                                                arrayList8 = arrayList16;
                                                i6 = i8 + 1;
                                                longSparseArray = longSparseArray7;
                                                clientUserId = j5;
                                                peer = peer2;
                                                inputPeer = inputPeer3;
                                                sendMessagesHelper2 = this;
                                                j2 = j;
                                            } else if (i7 == 0) {
                                                i8 = i6;
                                                inputPeer3 = inputPeer;
                                                longSparseArray7 = longSparseArray;
                                                j5 = clientUserId;
                                                peer2 = peer;
                                                i7 = 2;
                                            }
                                        } else if (i7 == 0) {
                                            i8 = i6;
                                            inputPeer3 = inputPeer;
                                            longSparseArray7 = longSparseArray;
                                            j5 = clientUserId;
                                            peer2 = peer;
                                            i7 = 1;
                                        }
                                        i6 = i8 + 1;
                                        longSparseArray = longSparseArray7;
                                        clientUserId = j5;
                                        peer = peer2;
                                        inputPeer = inputPeer3;
                                        sendMessagesHelper2 = this;
                                        j2 = j;
                                    }
                                }
                                arrayList13 = arrayList4;
                                arrayList15 = arrayList5;
                                longSparseArray8 = longSparseArray4;
                                arrayList16 = arrayList8;
                                i8 = i6;
                                inputPeer3 = inputPeer;
                                longSparseArray7 = longSparseArray;
                                j5 = clientUserId;
                                peer2 = peer;
                                arrayList14 = arrayList3;
                                arrayList3 = arrayList14;
                                arrayList4 = arrayList13;
                                arrayList5 = arrayList15;
                                longSparseArray4 = longSparseArray8;
                                arrayList8 = arrayList16;
                                i6 = i8 + 1;
                                longSparseArray = longSparseArray7;
                                clientUserId = j5;
                                peer = peer2;
                                inputPeer = inputPeer3;
                                sendMessagesHelper2 = this;
                                j2 = j;
                            }
                            sendMessagesHelper = sendMessagesHelper2;
                            i = i7;
                        }
                    } else if (MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(i2)) == null) {
                        return 0;
                    }
                    i4 = 1;
                    i5 = i4;
                    i3 = i5;
                    z2 = false;
                    z3 = z2;
                    longSparseArray = new LongSparseArray();
                    arrayList3 = new ArrayList();
                    arrayList4 = new ArrayList();
                    arrayList5 = new ArrayList();
                    arrayList6 = new ArrayList();
                    longSparseArray2 = new LongSparseArray();
                    inputPeer = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getInputPeer(i2);
                    peer = peer3;
                    clientUserId = (long) UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                    if (j2 != clientUserId) {
                    }
                    i6 = 0;
                    i7 = i6;
                    arrayList7 = arrayList5;
                    arrayList5 = arrayList3;
                    arrayList3 = arrayList4;
                    arrayList4 = arrayList7;
                    longSparseArray3 = longSparseArray2;
                    arrayList8 = arrayList6;
                    longSparseArray4 = longSparseArray3;
                    while (i6 < arrayList.size()) {
                        messageObject = (MessageObject) arrayList2.get(i6);
                        if (messageObject.getId() > 0) {
                            if (messageObject.needDrawBluredPreview()) {
                                if (i4 == 0) {
                                }
                                if (i5 == 0) {
                                }
                                tL_message = new TL_message();
                                if (messageObject.getDialogId() != clientUserId) {
                                    arrayList9 = arrayList3;
                                    arrayList10 = arrayList5;
                                } else {
                                    arrayList9 = arrayList3;
                                    arrayList10 = arrayList5;
                                    if (messageObject.messageOwner.from_id == UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId()) {
                                        obj = 1;
                                        inputPeer2 = inputPeer;
                                        if (!messageObject.isForwarded()) {
                                            tL_message.fwd_from = new TL_messageFwdHeader();
                                            tL_message.fwd_from.flags = messageObject.messageOwner.fwd_from.flags;
                                            tL_message.fwd_from.from_id = messageObject.messageOwner.fwd_from.from_id;
                                            tL_message.fwd_from.date = messageObject.messageOwner.fwd_from.date;
                                            tL_message.fwd_from.channel_id = messageObject.messageOwner.fwd_from.channel_id;
                                            tL_message.fwd_from.channel_post = messageObject.messageOwner.fwd_from.channel_post;
                                            tL_message.fwd_from.post_author = messageObject.messageOwner.fwd_from.post_author;
                                            tL_message.flags = 4;
                                        } else if (obj == null) {
                                            tL_message.fwd_from = new TL_messageFwdHeader();
                                            tL_message.fwd_from.channel_post = messageObject.getId();
                                            messageFwdHeader = tL_message.fwd_from;
                                            messageFwdHeader.flags |= 4;
                                            if (messageObject.isFromUser()) {
                                                tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                                messageFwdHeader = tL_message.fwd_from;
                                                messageFwdHeader.flags |= 1;
                                            } else {
                                                tL_message.fwd_from.channel_id = messageObject.messageOwner.to_id.channel_id;
                                                messageFwdHeader = tL_message.fwd_from;
                                                messageFwdHeader.flags |= 2;
                                                tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                                messageFwdHeader = tL_message.fwd_from;
                                                messageFwdHeader.flags |= 1;
                                            }
                                            if (messageObject.messageOwner.post_author == null) {
                                                tL_message.fwd_from.post_author = messageObject.messageOwner.post_author;
                                                messageFwdHeader = tL_message.fwd_from;
                                                messageFwdHeader.flags |= 8;
                                            } else {
                                                user = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                                                if (user != null) {
                                                    tL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                                    messageFwdHeader = tL_message.fwd_from;
                                                    messageFwdHeader.flags |= 8;
                                                }
                                            }
                                            tL_message.date = messageObject.messageOwner.date;
                                            tL_message.flags = 4;
                                        }
                                        messageFwdHeader = tL_message.fwd_from;
                                        messageFwdHeader.flags |= 16;
                                        tL_message.fwd_from.saved_from_msg_id = messageObject.getId();
                                        tL_message.fwd_from.saved_from_peer = messageObject.messageOwner.to_id;
                                        if (i3 == 0) {
                                        }
                                        tL_message.media = messageObject.messageOwner.media;
                                        if (tL_message.media != null) {
                                            tL_message.flags |= 512;
                                        }
                                        if (z2) {
                                            tL_message.flags |= Integer.MIN_VALUE;
                                        }
                                        if (messageObject.messageOwner.via_bot_id != 0) {
                                            tL_message.via_bot_id = messageObject.messageOwner.via_bot_id;
                                            tL_message.flags |= 2048;
                                        }
                                        tL_message.message = messageObject.messageOwner.message;
                                        tL_message.fwd_msg_id = messageObject.getId();
                                        tL_message.attachPath = messageObject.messageOwner.attachPath;
                                        tL_message.entities = messageObject.messageOwner.entities;
                                        if (tL_message.entities.isEmpty()) {
                                            tL_message.flags |= 128;
                                        }
                                        if (tL_message.attachPath == null) {
                                            tL_message.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        newMessageId = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getNewMessageId();
                                        tL_message.id = newMessageId;
                                        tL_message.local_id = newMessageId;
                                        tL_message.out = true;
                                        j3 = clientUserId;
                                        clientUserId = messageObject.messageOwner.grouped_id;
                                        if (clientUserId == 0) {
                                            j4 = clientUserId;
                                            l = (Long) longSparseArray.get(messageObject.messageOwner.grouped_id);
                                            if (l == null) {
                                                l = Long.valueOf(Utilities.random.nextLong());
                                                longSparseArray.put(messageObject.messageOwner.grouped_id, l);
                                            }
                                            tL_message.grouped_id = l.longValue();
                                            tL_message.flags |= 131072;
                                        } else {
                                            j4 = clientUserId;
                                        }
                                        if (i6 == arrayList.size() - 1) {
                                            longSparseArray5 = longSparseArray;
                                            if (((MessageObject) arrayList2.get(i6 + 1)).messageOwner.grouped_id != messageObject.messageOwner.grouped_id) {
                                                peer3 = peer;
                                                obj = 1;
                                                if (peer3.channel_id != 0) {
                                                }
                                                tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                                tL_message.flags |= 256;
                                                if (tL_message.random_id == 0) {
                                                    tL_message.random_id = getNextRandomId();
                                                }
                                                arrayList4.add(Long.valueOf(tL_message.random_id));
                                                longSparseArray4.put(tL_message.random_id, tL_message);
                                                arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                                tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                                inputPeer = inputPeer2;
                                                if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                                    if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                        tL_message.views = messageObject.messageOwner.views;
                                                        tL_message.flags |= 1024;
                                                    }
                                                    z = true;
                                                    tL_message.unread = true;
                                                } else if (z2) {
                                                    z = true;
                                                    tL_message.views = 1;
                                                    tL_message.flags |= 1024;
                                                } else {
                                                    z = true;
                                                    tL_message.unread = true;
                                                }
                                                tL_message.dialog_id = j2;
                                                tL_message.to_id = peer3;
                                                tL_message.media_unread = z;
                                                if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                                    tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                                }
                                                messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                                messageObject2.messageOwner.send_state = 1;
                                                arrayList11 = arrayList10;
                                                arrayList11.add(messageObject2);
                                                arrayList5 = arrayList9;
                                                arrayList5.add(tL_message);
                                                sendMessagesHelper2.putToSendingMessages(tL_message);
                                                if (BuildVars.LOGS_ENABLED) {
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("forward message user_id = ");
                                                    stringBuilder.append(inputPeer.user_id);
                                                    stringBuilder.append(" chat_id = ");
                                                    stringBuilder.append(inputPeer.chat_id);
                                                    stringBuilder.append(" channel_id = ");
                                                    stringBuilder.append(inputPeer.channel_id);
                                                    stringBuilder.append(" access_hash = ");
                                                    longSparseArray6 = longSparseArray4;
                                                    arrayList12 = arrayList8;
                                                    stringBuilder.append(inputPeer.access_hash);
                                                    FileLog.m0d(stringBuilder.toString());
                                                } else {
                                                    longSparseArray6 = longSparseArray4;
                                                    arrayList12 = arrayList8;
                                                }
                                                if (i6 != arrayList.size() - 1) {
                                                }
                                                arrayList13 = arrayList4;
                                                arrayList14 = arrayList5;
                                                i8 = i6;
                                                inputPeer3 = inputPeer;
                                                arrayList15 = arrayList11;
                                                peer2 = peer3;
                                                j5 = j3;
                                                longSparseArray7 = longSparseArray5;
                                                arrayList16 = arrayList12;
                                                longSparseArray8 = longSparseArray6;
                                                arrayList3 = arrayList14;
                                                arrayList4 = arrayList13;
                                                arrayList5 = arrayList15;
                                                longSparseArray4 = longSparseArray8;
                                                arrayList8 = arrayList16;
                                                i6 = i8 + 1;
                                                longSparseArray = longSparseArray7;
                                                clientUserId = j5;
                                                peer = peer2;
                                                inputPeer = inputPeer3;
                                                sendMessagesHelper2 = this;
                                                j2 = j;
                                            }
                                        } else {
                                            longSparseArray5 = longSparseArray;
                                        }
                                        peer3 = peer;
                                        obj = null;
                                        if (peer3.channel_id != 0) {
                                        }
                                        tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                        tL_message.flags |= 256;
                                        if (tL_message.random_id == 0) {
                                            tL_message.random_id = getNextRandomId();
                                        }
                                        arrayList4.add(Long.valueOf(tL_message.random_id));
                                        longSparseArray4.put(tL_message.random_id, tL_message);
                                        arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                        tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                        inputPeer = inputPeer2;
                                        if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                            if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                tL_message.views = messageObject.messageOwner.views;
                                                tL_message.flags |= 1024;
                                            }
                                            z = true;
                                            tL_message.unread = true;
                                        } else if (z2) {
                                            z = true;
                                            tL_message.unread = true;
                                        } else {
                                            z = true;
                                            tL_message.views = 1;
                                            tL_message.flags |= 1024;
                                        }
                                        tL_message.dialog_id = j2;
                                        tL_message.to_id = peer3;
                                        tL_message.media_unread = z;
                                        if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                            tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                        }
                                        messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                        messageObject2.messageOwner.send_state = 1;
                                        arrayList11 = arrayList10;
                                        arrayList11.add(messageObject2);
                                        arrayList5 = arrayList9;
                                        arrayList5.add(tL_message);
                                        sendMessagesHelper2.putToSendingMessages(tL_message);
                                        if (BuildVars.LOGS_ENABLED) {
                                            longSparseArray6 = longSparseArray4;
                                            arrayList12 = arrayList8;
                                        } else {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("forward message user_id = ");
                                            stringBuilder.append(inputPeer.user_id);
                                            stringBuilder.append(" chat_id = ");
                                            stringBuilder.append(inputPeer.chat_id);
                                            stringBuilder.append(" channel_id = ");
                                            stringBuilder.append(inputPeer.channel_id);
                                            stringBuilder.append(" access_hash = ");
                                            longSparseArray6 = longSparseArray4;
                                            arrayList12 = arrayList8;
                                            stringBuilder.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder.toString());
                                        }
                                        if (i6 != arrayList.size() - 1) {
                                        }
                                        arrayList13 = arrayList4;
                                        arrayList14 = arrayList5;
                                        i8 = i6;
                                        inputPeer3 = inputPeer;
                                        arrayList15 = arrayList11;
                                        peer2 = peer3;
                                        j5 = j3;
                                        longSparseArray7 = longSparseArray5;
                                        arrayList16 = arrayList12;
                                        longSparseArray8 = longSparseArray6;
                                        arrayList3 = arrayList14;
                                        arrayList4 = arrayList13;
                                        arrayList5 = arrayList15;
                                        longSparseArray4 = longSparseArray8;
                                        arrayList8 = arrayList16;
                                        i6 = i8 + 1;
                                        longSparseArray = longSparseArray7;
                                        clientUserId = j5;
                                        peer = peer2;
                                        inputPeer = inputPeer3;
                                        sendMessagesHelper2 = this;
                                        j2 = j;
                                    }
                                }
                                obj = null;
                                inputPeer2 = inputPeer;
                                if (!messageObject.isForwarded()) {
                                    tL_message.fwd_from = new TL_messageFwdHeader();
                                    tL_message.fwd_from.flags = messageObject.messageOwner.fwd_from.flags;
                                    tL_message.fwd_from.from_id = messageObject.messageOwner.fwd_from.from_id;
                                    tL_message.fwd_from.date = messageObject.messageOwner.fwd_from.date;
                                    tL_message.fwd_from.channel_id = messageObject.messageOwner.fwd_from.channel_id;
                                    tL_message.fwd_from.channel_post = messageObject.messageOwner.fwd_from.channel_post;
                                    tL_message.fwd_from.post_author = messageObject.messageOwner.fwd_from.post_author;
                                    tL_message.flags = 4;
                                } else if (obj == null) {
                                    tL_message.fwd_from = new TL_messageFwdHeader();
                                    tL_message.fwd_from.channel_post = messageObject.getId();
                                    messageFwdHeader = tL_message.fwd_from;
                                    messageFwdHeader.flags |= 4;
                                    if (messageObject.isFromUser()) {
                                        tL_message.fwd_from.channel_id = messageObject.messageOwner.to_id.channel_id;
                                        messageFwdHeader = tL_message.fwd_from;
                                        messageFwdHeader.flags |= 2;
                                        tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                        messageFwdHeader = tL_message.fwd_from;
                                        messageFwdHeader.flags |= 1;
                                    } else {
                                        tL_message.fwd_from.from_id = messageObject.messageOwner.from_id;
                                        messageFwdHeader = tL_message.fwd_from;
                                        messageFwdHeader.flags |= 1;
                                    }
                                    if (messageObject.messageOwner.post_author == null) {
                                        user = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                                        if (user != null) {
                                            tL_message.fwd_from.post_author = ContactsController.formatName(user.first_name, user.last_name);
                                            messageFwdHeader = tL_message.fwd_from;
                                            messageFwdHeader.flags |= 8;
                                        }
                                    } else {
                                        tL_message.fwd_from.post_author = messageObject.messageOwner.post_author;
                                        messageFwdHeader = tL_message.fwd_from;
                                        messageFwdHeader.flags |= 8;
                                    }
                                    tL_message.date = messageObject.messageOwner.date;
                                    tL_message.flags = 4;
                                }
                                messageFwdHeader = tL_message.fwd_from;
                                messageFwdHeader.flags |= 16;
                                tL_message.fwd_from.saved_from_msg_id = messageObject.getId();
                                tL_message.fwd_from.saved_from_peer = messageObject.messageOwner.to_id;
                                if (i3 == 0) {
                                }
                                tL_message.media = messageObject.messageOwner.media;
                                if (tL_message.media != null) {
                                    tL_message.flags |= 512;
                                }
                                if (z2) {
                                    tL_message.flags |= Integer.MIN_VALUE;
                                }
                                if (messageObject.messageOwner.via_bot_id != 0) {
                                    tL_message.via_bot_id = messageObject.messageOwner.via_bot_id;
                                    tL_message.flags |= 2048;
                                }
                                tL_message.message = messageObject.messageOwner.message;
                                tL_message.fwd_msg_id = messageObject.getId();
                                tL_message.attachPath = messageObject.messageOwner.attachPath;
                                tL_message.entities = messageObject.messageOwner.entities;
                                if (tL_message.entities.isEmpty()) {
                                    tL_message.flags |= 128;
                                }
                                if (tL_message.attachPath == null) {
                                    tL_message.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                newMessageId = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getNewMessageId();
                                tL_message.id = newMessageId;
                                tL_message.local_id = newMessageId;
                                tL_message.out = true;
                                j3 = clientUserId;
                                clientUserId = messageObject.messageOwner.grouped_id;
                                if (clientUserId == 0) {
                                    j4 = clientUserId;
                                } else {
                                    j4 = clientUserId;
                                    l = (Long) longSparseArray.get(messageObject.messageOwner.grouped_id);
                                    if (l == null) {
                                        l = Long.valueOf(Utilities.random.nextLong());
                                        longSparseArray.put(messageObject.messageOwner.grouped_id, l);
                                    }
                                    tL_message.grouped_id = l.longValue();
                                    tL_message.flags |= 131072;
                                }
                                if (i6 == arrayList.size() - 1) {
                                    longSparseArray5 = longSparseArray;
                                } else {
                                    longSparseArray5 = longSparseArray;
                                    if (((MessageObject) arrayList2.get(i6 + 1)).messageOwner.grouped_id != messageObject.messageOwner.grouped_id) {
                                        peer3 = peer;
                                        obj = 1;
                                        if (peer3.channel_id != 0) {
                                        }
                                        tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                        tL_message.flags |= 256;
                                        if (tL_message.random_id == 0) {
                                            tL_message.random_id = getNextRandomId();
                                        }
                                        arrayList4.add(Long.valueOf(tL_message.random_id));
                                        longSparseArray4.put(tL_message.random_id, tL_message);
                                        arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                        tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                        inputPeer = inputPeer2;
                                        if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                            if ((messageObject.messageOwner.flags & 1024) != 0) {
                                                tL_message.views = messageObject.messageOwner.views;
                                                tL_message.flags |= 1024;
                                            }
                                            z = true;
                                            tL_message.unread = true;
                                        } else if (z2) {
                                            z = true;
                                            tL_message.views = 1;
                                            tL_message.flags |= 1024;
                                        } else {
                                            z = true;
                                            tL_message.unread = true;
                                        }
                                        tL_message.dialog_id = j2;
                                        tL_message.to_id = peer3;
                                        tL_message.media_unread = z;
                                        if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                            tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                        }
                                        messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                        messageObject2.messageOwner.send_state = 1;
                                        arrayList11 = arrayList10;
                                        arrayList11.add(messageObject2);
                                        arrayList5 = arrayList9;
                                        arrayList5.add(tL_message);
                                        sendMessagesHelper2.putToSendingMessages(tL_message);
                                        if (BuildVars.LOGS_ENABLED) {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("forward message user_id = ");
                                            stringBuilder.append(inputPeer.user_id);
                                            stringBuilder.append(" chat_id = ");
                                            stringBuilder.append(inputPeer.chat_id);
                                            stringBuilder.append(" channel_id = ");
                                            stringBuilder.append(inputPeer.channel_id);
                                            stringBuilder.append(" access_hash = ");
                                            longSparseArray6 = longSparseArray4;
                                            arrayList12 = arrayList8;
                                            stringBuilder.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder.toString());
                                        } else {
                                            longSparseArray6 = longSparseArray4;
                                            arrayList12 = arrayList8;
                                        }
                                        if (i6 != arrayList.size() - 1) {
                                        }
                                        arrayList13 = arrayList4;
                                        arrayList14 = arrayList5;
                                        i8 = i6;
                                        inputPeer3 = inputPeer;
                                        arrayList15 = arrayList11;
                                        peer2 = peer3;
                                        j5 = j3;
                                        longSparseArray7 = longSparseArray5;
                                        arrayList16 = arrayList12;
                                        longSparseArray8 = longSparseArray6;
                                        arrayList3 = arrayList14;
                                        arrayList4 = arrayList13;
                                        arrayList5 = arrayList15;
                                        longSparseArray4 = longSparseArray8;
                                        arrayList8 = arrayList16;
                                        i6 = i8 + 1;
                                        longSparseArray = longSparseArray7;
                                        clientUserId = j5;
                                        peer = peer2;
                                        inputPeer = inputPeer3;
                                        sendMessagesHelper2 = this;
                                        j2 = j;
                                    }
                                }
                                peer3 = peer;
                                obj = null;
                                if (peer3.channel_id != 0) {
                                }
                                tL_message.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                tL_message.flags |= 256;
                                if (tL_message.random_id == 0) {
                                    tL_message.random_id = getNextRandomId();
                                }
                                arrayList4.add(Long.valueOf(tL_message.random_id));
                                longSparseArray4.put(tL_message.random_id, tL_message);
                                arrayList8.add(Integer.valueOf(tL_message.fwd_msg_id));
                                tL_message.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                inputPeer = inputPeer2;
                                if (!(inputPeer instanceof TL_inputPeerChannel)) {
                                    if ((messageObject.messageOwner.flags & 1024) != 0) {
                                        tL_message.views = messageObject.messageOwner.views;
                                        tL_message.flags |= 1024;
                                    }
                                    z = true;
                                    tL_message.unread = true;
                                } else if (z2) {
                                    z = true;
                                    tL_message.unread = true;
                                } else {
                                    z = true;
                                    tL_message.views = 1;
                                    tL_message.flags |= 1024;
                                }
                                tL_message.dialog_id = j2;
                                tL_message.to_id = peer3;
                                tL_message.media_unread = z;
                                if (messageObject.messageOwner.to_id instanceof TL_peerChannel) {
                                    tL_message.ttl = -messageObject.messageOwner.to_id.channel_id;
                                }
                                messageObject2 = new MessageObject(sendMessagesHelper2.currentAccount, tL_message, true);
                                messageObject2.messageOwner.send_state = 1;
                                arrayList11 = arrayList10;
                                arrayList11.add(messageObject2);
                                arrayList5 = arrayList9;
                                arrayList5.add(tL_message);
                                sendMessagesHelper2.putToSendingMessages(tL_message);
                                if (BuildVars.LOGS_ENABLED) {
                                    longSparseArray6 = longSparseArray4;
                                    arrayList12 = arrayList8;
                                } else {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("forward message user_id = ");
                                    stringBuilder.append(inputPeer.user_id);
                                    stringBuilder.append(" chat_id = ");
                                    stringBuilder.append(inputPeer.chat_id);
                                    stringBuilder.append(" channel_id = ");
                                    stringBuilder.append(inputPeer.channel_id);
                                    stringBuilder.append(" access_hash = ");
                                    longSparseArray6 = longSparseArray4;
                                    arrayList12 = arrayList8;
                                    stringBuilder.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder.toString());
                                }
                                if (i6 != arrayList.size() - 1) {
                                }
                                arrayList13 = arrayList4;
                                arrayList14 = arrayList5;
                                i8 = i6;
                                inputPeer3 = inputPeer;
                                arrayList15 = arrayList11;
                                peer2 = peer3;
                                j5 = j3;
                                longSparseArray7 = longSparseArray5;
                                arrayList16 = arrayList12;
                                longSparseArray8 = longSparseArray6;
                                arrayList3 = arrayList14;
                                arrayList4 = arrayList13;
                                arrayList5 = arrayList15;
                                longSparseArray4 = longSparseArray8;
                                arrayList8 = arrayList16;
                                i6 = i8 + 1;
                                longSparseArray = longSparseArray7;
                                clientUserId = j5;
                                peer = peer2;
                                inputPeer = inputPeer3;
                                sendMessagesHelper2 = this;
                                j2 = j;
                            }
                        }
                        arrayList13 = arrayList4;
                        arrayList15 = arrayList5;
                        longSparseArray8 = longSparseArray4;
                        arrayList16 = arrayList8;
                        i8 = i6;
                        inputPeer3 = inputPeer;
                        longSparseArray7 = longSparseArray;
                        j5 = clientUserId;
                        peer2 = peer;
                        arrayList14 = arrayList3;
                        arrayList3 = arrayList14;
                        arrayList4 = arrayList13;
                        arrayList5 = arrayList15;
                        longSparseArray4 = longSparseArray8;
                        arrayList8 = arrayList16;
                        i6 = i8 + 1;
                        longSparseArray = longSparseArray7;
                        clientUserId = j5;
                        peer = peer2;
                        inputPeer = inputPeer3;
                        sendMessagesHelper2 = this;
                        j2 = j;
                    }
                    sendMessagesHelper = sendMessagesHelper2;
                    i = i7;
                } else {
                    for (i2 = 0; i2 < arrayList.size(); i2++) {
                        processForwardFromMyName((MessageObject) arrayList2.get(i2), j);
                    }
                    sendMessagesHelper = this;
                    i = 0;
                }
                return i;
            }
        }
        sendMessagesHelper = sendMessagesHelper2;
        return 0;
    }

    public int editMessage(MessageObject messageObject, String str, boolean z, final BaseFragment baseFragment, ArrayList<MessageEntity> arrayList, final Runnable runnable) {
        if (!(baseFragment == null || baseFragment.getParentActivity() == null)) {
            if (runnable != null) {
                final TLObject tL_messages_editMessage = new TL_messages_editMessage();
                tL_messages_editMessage.peer = MessagesController.getInstance(this.currentAccount).getInputPeer((int) messageObject.getDialogId());
                tL_messages_editMessage.message = str;
                tL_messages_editMessage.flags |= 2048;
                tL_messages_editMessage.id = messageObject.getId();
                tL_messages_editMessage.no_webpage = z ^ 1;
                if (arrayList != null) {
                    tL_messages_editMessage.entities = arrayList;
                    tL_messages_editMessage.flags |= 8;
                }
                return ConnectionsManager.getInstance(this.currentAccount).sendRequest(tL_messages_editMessage, new RequestDelegate() {

                    /* renamed from: org.telegram.messenger.SendMessagesHelper$6$1 */
                    class C05061 implements Runnable {
                        C05061() {
                        }

                        public void run() {
                            runnable.run();
                        }
                    }

                    public void run(TLObject tLObject, final TL_error tL_error) {
                        AndroidUtilities.runOnUIThread(new C05061());
                        if (tL_error == null) {
                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates((Updates) tLObject, false);
                        } else {
                            AndroidUtilities.runOnUIThread(new Runnable() {
                                public void run() {
                                    AlertsCreator.processError(SendMessagesHelper.this.currentAccount, tL_error, baseFragment, tL_messages_editMessage, new Object[0]);
                                }
                            });
                        }
                    }
                });
            }
        }
        return null;
    }

    private void sendLocation(Location location) {
        MessageMedia tL_messageMediaGeo = new TL_messageMediaGeo();
        tL_messageMediaGeo.geo = new TL_geoPoint();
        tL_messageMediaGeo.geo.lat = location.getLatitude();
        tL_messageMediaGeo.geo._long = location.getLongitude();
        for (Entry value : this.waitingForLocation.entrySet()) {
            MessageObject messageObject = (MessageObject) value.getValue();
            sendMessage(tL_messageMediaGeo, messageObject.getDialogId(), messageObject, null, null);
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, KeyboardButton keyboardButton) {
        if (messageObject != null) {
            if (keyboardButton != null) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(messageObject.getDialogId());
                stringBuilder.append("_");
                stringBuilder.append(messageObject.getId());
                stringBuilder.append("_");
                stringBuilder.append(Utilities.bytesToHex(keyboardButton.data));
                stringBuilder.append("_");
                stringBuilder.append((keyboardButton instanceof TL_keyboardButtonGame) != null ? "1" : "0");
                this.waitingForLocation.put(stringBuilder.toString(), messageObject);
                this.locationProvider.start();
            }
        }
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, KeyboardButton keyboardButton) {
        if (messageObject != null) {
            if (keyboardButton != null) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(messageObject.getDialogId());
                stringBuilder.append("_");
                stringBuilder.append(messageObject.getId());
                stringBuilder.append("_");
                stringBuilder.append(Utilities.bytesToHex(keyboardButton.data));
                stringBuilder.append("_");
                stringBuilder.append((keyboardButton instanceof TL_keyboardButtonGame) != null ? "1" : "0");
                return this.waitingForLocation.containsKey(stringBuilder.toString());
            }
        }
        return null;
    }

    public void sendNotificationCallback(long j, int i, byte[] bArr) {
        final long j2 = j;
        final int i2 = i;
        final byte[] bArr2 = bArr;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public void run() {
                int i = (int) j2;
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(j2);
                stringBuilder.append("_");
                stringBuilder.append(i2);
                stringBuilder.append("_");
                stringBuilder.append(Utilities.bytesToHex(bArr2));
                stringBuilder.append("_");
                stringBuilder.append(0);
                final String stringBuilder2 = stringBuilder.toString();
                SendMessagesHelper.this.waitingForCallback.put(stringBuilder2, Boolean.valueOf(true));
                if (i <= 0) {
                    int i2 = -i;
                    if (MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getChat(Integer.valueOf(i2)) == null) {
                        Chat chatSync = MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getChatSync(i2);
                        if (chatSync != null) {
                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putChat(chatSync, true);
                        }
                    }
                } else if (MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getUser(Integer.valueOf(i)) == null) {
                    User userSync = MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getUserSync(i);
                    if (userSync != null) {
                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putUser(userSync, true);
                    }
                }
                TLObject tL_messages_getBotCallbackAnswer = new TL_messages_getBotCallbackAnswer();
                tL_messages_getBotCallbackAnswer.peer = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getInputPeer(i);
                tL_messages_getBotCallbackAnswer.msg_id = i2;
                tL_messages_getBotCallbackAnswer.game = false;
                if (bArr2 != null) {
                    tL_messages_getBotCallbackAnswer.flags |= 1;
                    tL_messages_getBotCallbackAnswer.data = bArr2;
                }
                ConnectionsManager.getInstance(SendMessagesHelper.this.currentAccount).sendRequest(tL_messages_getBotCallbackAnswer, new RequestDelegate() {

                    /* renamed from: org.telegram.messenger.SendMessagesHelper$7$1$1 */
                    class C05081 implements Runnable {
                        C05081() {
                        }

                        public void run() {
                            SendMessagesHelper.this.waitingForCallback.remove(stringBuilder2);
                        }
                    }

                    public void run(TLObject tLObject, TL_error tL_error) {
                        AndroidUtilities.runOnUIThread(new C05081());
                    }
                }, 2);
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).markDialogAsRead(j2, i2, i2, 0, false, 0, true);
            }
        });
    }

    public void sendCallback(boolean z, MessageObject messageObject, KeyboardButton keyboardButton, ChatActivity chatActivity) {
        SendMessagesHelper sendMessagesHelper = this;
        MessageObject messageObject2 = messageObject;
        KeyboardButton keyboardButton2 = keyboardButton;
        if (!(messageObject2 == null || keyboardButton2 == null)) {
            if (chatActivity != null) {
                boolean z2;
                boolean z3 = keyboardButton2 instanceof TL_keyboardButtonGame;
                int i = 0;
                if (z3) {
                    z2 = false;
                    i = 1;
                } else if (keyboardButton2 instanceof TL_keyboardButtonBuy) {
                    z2 = z;
                    i = 2;
                } else {
                    z2 = z;
                }
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(messageObject.getDialogId());
                stringBuilder.append("_");
                stringBuilder.append(messageObject.getId());
                stringBuilder.append("_");
                stringBuilder.append(Utilities.bytesToHex(keyboardButton2.data));
                stringBuilder.append("_");
                stringBuilder.append(i);
                String stringBuilder2 = stringBuilder.toString();
                sendMessagesHelper.waitingForCallback.put(stringBuilder2, Boolean.valueOf(true));
                final String str = stringBuilder2;
                final boolean z4 = z2;
                final MessageObject messageObject3 = messageObject2;
                final KeyboardButton keyboardButton3 = keyboardButton2;
                final ChatActivity chatActivity2 = chatActivity;
                RequestDelegate c18248 = new RequestDelegate() {
                    public void run(final TLObject tLObject, TL_error tL_error) {
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public void run() {
                                SendMessagesHelper.this.waitingForCallback.remove(str);
                                if (z4 && tLObject == null) {
                                    SendMessagesHelper.this.sendCallback(false, messageObject3, keyboardButton3, chatActivity2);
                                } else if (tLObject != null) {
                                    if (!(keyboardButton3 instanceof TL_keyboardButtonBuy)) {
                                        TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer = (TL_messages_botCallbackAnswer) tLObject;
                                        if (!(z4 || tL_messages_botCallbackAnswer.cache_time == 0)) {
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).saveBotCache(str, tL_messages_botCallbackAnswer);
                                        }
                                        OnClickListener onClickListener = null;
                                        if (tL_messages_botCallbackAnswer.message != null) {
                                            if (!tL_messages_botCallbackAnswer.alert) {
                                                String formatName;
                                                int i = messageObject3.messageOwner.from_id;
                                                if (messageObject3.messageOwner.via_bot_id != 0) {
                                                    i = messageObject3.messageOwner.via_bot_id;
                                                }
                                                if (i > 0) {
                                                    User user = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getUser(Integer.valueOf(i));
                                                    if (user != null) {
                                                        formatName = ContactsController.formatName(user.first_name, user.last_name);
                                                    }
                                                } else {
                                                    Chat chat = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getChat(Integer.valueOf(-i));
                                                    if (chat != null) {
                                                        formatName = chat.title;
                                                    }
                                                }
                                                if (formatName == null) {
                                                    formatName = "bot";
                                                }
                                                chatActivity2.showAlert(formatName, tL_messages_botCallbackAnswer.message);
                                            } else if (chatActivity2.getParentActivity() != null) {
                                                Builder builder = new Builder(chatActivity2.getParentActivity());
                                                builder.setTitle(LocaleController.getString("AppName", C0446R.string.AppName));
                                                builder.setPositiveButton(LocaleController.getString("OK", C0446R.string.OK), null);
                                                builder.setMessage(tL_messages_botCallbackAnswer.message);
                                                chatActivity2.showDialog(builder.create());
                                            }
                                        } else if (tL_messages_botCallbackAnswer.url != null && chatActivity2.getParentActivity() != null) {
                                            int i2 = messageObject3.messageOwner.from_id;
                                            if (messageObject3.messageOwner.via_bot_id != 0) {
                                                i2 = messageObject3.messageOwner.via_bot_id;
                                            }
                                            int i3 = i2;
                                            User user2 = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getUser(Integer.valueOf(i3));
                                            boolean z = user2 != null && user2.verified;
                                            if (keyboardButton3 instanceof TL_keyboardButtonGame) {
                                                if (messageObject3.messageOwner.media instanceof TL_messageMediaGame) {
                                                    onClickListener = messageObject3.messageOwner.media.game;
                                                }
                                                OnClickListener onClickListener2 = onClickListener;
                                                if (onClickListener2 != null) {
                                                    boolean z2;
                                                    ChatActivity chatActivity = chatActivity2;
                                                    MessageObject messageObject = messageObject3;
                                                    String str = tL_messages_botCallbackAnswer.url;
                                                    if (!z) {
                                                        SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(SendMessagesHelper.this.currentAccount);
                                                        StringBuilder stringBuilder = new StringBuilder();
                                                        stringBuilder.append("askgame_");
                                                        stringBuilder.append(i3);
                                                        if (notificationsSettings.getBoolean(stringBuilder.toString(), true)) {
                                                            z2 = true;
                                                            chatActivity.showOpenGameAlert(onClickListener2, messageObject, str, z2, i3);
                                                        }
                                                    }
                                                    z2 = false;
                                                    chatActivity.showOpenGameAlert(onClickListener2, messageObject, str, z2, i3);
                                                } else {
                                                    return;
                                                }
                                            }
                                            chatActivity2.showOpenUrlAlert(tL_messages_botCallbackAnswer.url, false);
                                        }
                                    } else if (tLObject instanceof TL_payments_paymentForm) {
                                        TL_payments_paymentForm tL_payments_paymentForm = (TL_payments_paymentForm) tLObject;
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putUsers(tL_payments_paymentForm.users, false);
                                        chatActivity2.presentFragment(new PaymentFormActivity(tL_payments_paymentForm, messageObject3));
                                    } else if (tLObject instanceof TL_payments_paymentReceipt) {
                                        chatActivity2.presentFragment(new PaymentFormActivity(messageObject3, (TL_payments_paymentReceipt) tLObject));
                                    }
                                }
                            }
                        });
                    }
                };
                if (z2) {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).getBotCache(stringBuilder2, c18248);
                } else if (!(keyboardButton2 instanceof TL_keyboardButtonBuy)) {
                    r0 = new TL_messages_getBotCallbackAnswer();
                    r0.peer = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputPeer((int) messageObject.getDialogId());
                    r0.msg_id = messageObject.getId();
                    r0.game = z3;
                    if (keyboardButton2.data != null) {
                        r0.flags |= 1;
                        r0.data = keyboardButton2.data;
                    }
                    ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).sendRequest(r0, c18248, 2);
                } else if ((messageObject2.messageOwner.media.flags & 4) == 0) {
                    r0 = new TL_payments_getPaymentForm();
                    r0.msg_id = messageObject.getId();
                    ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).sendRequest(r0, c18248, 2);
                } else {
                    r0 = new TL_payments_getPaymentReceipt();
                    r0.msg_id = messageObject2.messageOwner.media.receipt_msg_id;
                    ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).sendRequest(r0, c18248, 2);
                }
            }
        }
    }

    public boolean isSendingCallback(MessageObject messageObject, KeyboardButton keyboardButton) {
        int i = 0;
        if (messageObject != null) {
            if (keyboardButton != null) {
                if (keyboardButton instanceof TL_keyboardButtonGame) {
                    i = 1;
                } else if (keyboardButton instanceof TL_keyboardButtonBuy) {
                    i = 2;
                }
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(messageObject.getDialogId());
                stringBuilder.append("_");
                stringBuilder.append(messageObject.getId());
                stringBuilder.append("_");
                stringBuilder.append(Utilities.bytesToHex(keyboardButton.data));
                stringBuilder.append("_");
                stringBuilder.append(i);
                return this.waitingForCallback.containsKey(stringBuilder.toString());
            }
        }
        return false;
    }

    public void sendGame(InputPeer inputPeer, TL_inputMediaGame tL_inputMediaGame, long j, long j2) {
        Throwable e;
        if (inputPeer != null) {
            if (tL_inputMediaGame != null) {
                long j3;
                TLObject tL_messages_sendMedia = new TL_messages_sendMedia();
                tL_messages_sendMedia.peer = inputPeer;
                if (tL_messages_sendMedia.peer instanceof TL_inputPeerChannel) {
                    SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("silent_");
                    stringBuilder.append(inputPeer.channel_id);
                    tL_messages_sendMedia.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                }
                if (j != 0) {
                    j3 = j;
                } else {
                    j3 = getNextRandomId();
                }
                tL_messages_sendMedia.random_id = j3;
                tL_messages_sendMedia.message = TtmlNode.ANONYMOUS_REGION_ID;
                tL_messages_sendMedia.media = tL_inputMediaGame;
                if (j2 == 0) {
                    NativeByteBuffer nativeByteBuffer;
                    try {
                        nativeByteBuffer = new NativeByteBuffer(((inputPeer.getObjectSize() + tL_inputMediaGame.getObjectSize()) + 4) + 8);
                        try {
                            nativeByteBuffer.writeInt32(3);
                            nativeByteBuffer.writeInt64(j);
                            inputPeer.serializeToStream(nativeByteBuffer);
                            tL_inputMediaGame.serializeToStream(nativeByteBuffer);
                        } catch (Exception e2) {
                            e = e2;
                            FileLog.m3e(e);
                            j2 = MessagesStorage.getInstance(this.currentAccount).createPendingTask(nativeByteBuffer);
                            ConnectionsManager.getInstance(this.currentAccount).sendRequest(tL_messages_sendMedia, new RequestDelegate() {
                                public void run(TLObject tLObject, TL_error tL_error) {
                                    if (tL_error == null) {
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates((Updates) tLObject, false);
                                    }
                                    if (j2 != 0) {
                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).removePendingTask(j2);
                                    }
                                }
                            });
                        }
                    } catch (Exception e3) {
                        e = e3;
                        nativeByteBuffer = 0;
                        FileLog.m3e(e);
                        j2 = MessagesStorage.getInstance(this.currentAccount).createPendingTask(nativeByteBuffer);
                        ConnectionsManager.getInstance(this.currentAccount).sendRequest(tL_messages_sendMedia, /* anonymous class already generated */);
                    }
                    j2 = MessagesStorage.getInstance(this.currentAccount).createPendingTask(nativeByteBuffer);
                }
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(tL_messages_sendMedia, /* anonymous class already generated */);
            }
        }
    }

    public void sendMessage(MessageObject messageObject) {
        MessageObject messageObject2 = messageObject;
        long dialogId = messageObject.getDialogId();
        String str = messageObject2.messageOwner.attachPath;
        ReplyMarkup replyMarkup = messageObject2.messageOwner.reply_markup;
        ReplyMarkup replyMarkup2 = replyMarkup;
        sendMessage(null, null, null, null, null, null, null, null, dialogId, str, null, null, true, messageObject2, null, replyMarkup2, messageObject2.messageOwner.params, 0);
    }

    public void sendMessage(User user, long j, MessageObject messageObject, ReplyMarkup replyMarkup, HashMap<String, String> hashMap) {
        sendMessage(null, null, null, null, null, user, null, null, j, null, messageObject, null, true, null, null, replyMarkup, hashMap, 0);
    }

    public void sendMessage(TL_document tL_document, VideoEditedInfo videoEditedInfo, String str, long j, MessageObject messageObject, String str2, ArrayList<MessageEntity> arrayList, ReplyMarkup replyMarkup, HashMap<String, String> hashMap, int i) {
        sendMessage(null, str2, null, null, videoEditedInfo, null, tL_document, null, j, str, messageObject, null, true, null, arrayList, replyMarkup, hashMap, i);
    }

    public void sendMessage(String str, long j, MessageObject messageObject, WebPage webPage, boolean z, ArrayList<MessageEntity> arrayList, ReplyMarkup replyMarkup, HashMap<String, String> hashMap) {
        sendMessage(str, null, null, null, null, null, null, null, j, null, messageObject, webPage, z, null, arrayList, replyMarkup, hashMap, 0);
    }

    public void sendMessage(MessageMedia messageMedia, long j, MessageObject messageObject, ReplyMarkup replyMarkup, HashMap<String, String> hashMap) {
        sendMessage(null, null, messageMedia, null, null, null, null, null, j, null, messageObject, null, true, null, null, replyMarkup, hashMap, 0);
    }

    public void sendMessage(TL_game tL_game, long j, ReplyMarkup replyMarkup, HashMap<String, String> hashMap) {
        sendMessage(null, null, null, null, null, null, null, tL_game, j, null, null, null, true, null, null, replyMarkup, hashMap, 0);
    }

    public void sendMessage(TL_photo tL_photo, String str, long j, MessageObject messageObject, String str2, ArrayList<MessageEntity> arrayList, ReplyMarkup replyMarkup, HashMap<String, String> hashMap, int i) {
        sendMessage(null, str2, null, tL_photo, null, null, null, null, j, str, messageObject, null, true, null, arrayList, replyMarkup, hashMap, i);
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void sendMessage(String str, String str2, MessageMedia messageMedia, TL_photo tL_photo, VideoEditedInfo videoEditedInfo, User user, TL_document tL_document, TL_game tL_game, long j, String str3, MessageObject messageObject, WebPage webPage, boolean z, MessageObject messageObject2, ArrayList<MessageEntity> arrayList, ReplyMarkup replyMarkup, HashMap<String, String> hashMap, int i) {
        MessageObject messageObject3;
        Throwable e;
        Throwable th;
        Message message;
        SendMessagesHelper sendMessagesHelper = this;
        String str4 = str;
        MessageMedia messageMedia2 = messageMedia;
        TL_photo tL_photo2 = tL_photo;
        User user2 = user;
        TL_document tL_document2 = tL_document;
        TL_game tL_game2 = tL_game;
        long j2 = j;
        String str5 = str3;
        MessageObject messageObject4 = messageObject;
        WebPage webPage2 = webPage;
        MessageObject messageObject5 = messageObject2;
        ArrayList<MessageEntity> arrayList2 = arrayList;
        HashMap hashMap2 = hashMap;
        int i2 = i;
        long j3 = 0;
        if (j2 != 0) {
            EncryptedChat encryptedChat;
            boolean z2;
            Object obj;
            Message message2;
            int i3;
            int i4;
            MessageMedia messageMedia3;
            Document document;
            User user3;
            TL_photo tL_photo3;
            String str6;
            WebPage webPage3;
            Document document2;
            String str7;
            User user4;
            MessageMedia messageMedia4;
            TL_photo tL_photo4;
            int i5;
            Chat chat;
            long j4;
            MessageObject messageObject6;
            User user5;
            ReplyMarkup replyMarkup2;
            boolean z3;
            MessageMedia messageMedia5;
            TL_photo tL_photo5;
            int i6;
            User user6;
            ArrayList arrayList3;
            Iterator it;
            Iterator it2;
            InputUser inputUser;
            boolean z4;
            MessageObject messageObject7;
            VideoEditedInfo videoEditedInfo2;
            String str8;
            ArrayList arrayList4;
            long longValue;
            ArrayList arrayList5;
            ArrayList arrayList6;
            HashMap hashMap3;
            DelayedMessage delayedMessage;
            StringBuilder stringBuilder;
            StringBuilder stringBuilder2;
            long j5;
            HashMap hashMap4;
            MessageObject messageObject8;
            TLObject tL_messages_forwardMessages;
            Chat chat2;
            SharedPreferences notificationsSettings;
            ArrayList arrayList7;
            TLObject tLObject;
            StringBuilder stringBuilder3;
            int i7;
            Document document3;
            DecryptedMessage tL_decryptedMessage;
            WebPage webPage4;
            ArrayList arrayList8;
            SharedPreferences notificationsSettings2;
            DocumentAttribute documentAttribute;
            User tL_userRequest_old2;
            Message tL_message_secret;
            WebPage tL_webPageUrlPending;
            TL_document tL_document3;
            Photo photo;
            MessageMedia messageMedia6;
            User user7;
            MessageMedia messageMedia7;
            String str9;
            Message tL_message_secret2;
            MessageMedia messageMedia8;
            int i8;
            DocumentAttribute documentAttribute2;
            Message message3;
            HashMap hashMap5;
            TL_documentAttributeSticker_layer55 tL_documentAttributeSticker_layer55;
            Object stickerSetName;
            String str10 = (str4 == null && str2 == null) ? TtmlNode.ANONYMOUS_REGION_ID : str2;
            String str11 = (hashMap2 == null || !hashMap2.containsKey("originalPath")) ? null : (String) hashMap2.get("originalPath");
            int i9 = -1;
            String str12 = str11;
            int i10 = (int) j2;
            boolean z5 = (int) (j2 >> 32);
            InputPeer inputPeer = i10 != 0 ? MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputPeer(i10) : null;
            if (i10 == 0) {
                encryptedChat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getEncryptedChat(Integer.valueOf(z5));
                if (encryptedChat == null) {
                    if (messageObject5 != null) {
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(messageObject5.messageOwner);
                        messageObject5.messageOwner.send_state = 2;
                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject2.getId()));
                        processSentMessage(messageObject2.getId());
                    }
                    return;
                }
                z2 = z5;
            } else if (inputPeer instanceof TL_inputPeerChannel) {
                Chat chat3 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                obj = (chat3 == null || chat3.megagroup) ? null : 1;
                z2 = z5;
                encryptedChat = null;
                if (messageObject5 == null) {
                    try {
                        message2 = messageObject5.messageOwner;
                        try {
                            if (messageObject2.isForwarded()) {
                                if (messageObject5.type != 0) {
                                    if (messageObject5.messageOwner.media instanceof TL_messageMediaGame) {
                                        str4 = message2.message;
                                    }
                                    i3 = i10;
                                    i4 = 0;
                                } else {
                                    i3 = i10;
                                    if (messageObject5.type == 4) {
                                        messageMedia3 = message2.media;
                                        i4 = 1;
                                        document = tL_document;
                                        user3 = user;
                                        tL_photo3 = tL_photo;
                                        if (hashMap2 == null && hashMap2.containsKey("query_id")) {
                                            str6 = str4;
                                            i10 = i2;
                                            webPage3 = webPage2;
                                            document2 = document;
                                            str7 = str10;
                                            user4 = user3;
                                            messageMedia4 = messageMedia3;
                                            tL_photo4 = tL_photo3;
                                            i5 = 9;
                                        } else {
                                            str6 = str4;
                                            i5 = i4;
                                            i10 = i2;
                                            webPage3 = webPage2;
                                            document2 = document;
                                            str7 = str10;
                                            user4 = user3;
                                            messageMedia4 = messageMedia3;
                                            tL_photo4 = tL_photo3;
                                        }
                                        if (message2.random_id == 0) {
                                            message2.random_id = getNextRandomId();
                                        }
                                        if (hashMap2 != null && hashMap2.containsKey("bot")) {
                                            if (encryptedChat == null) {
                                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                                if (message2.via_bot_name == null) {
                                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                                }
                                            } else {
                                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                            }
                                            message2.flags |= 2048;
                                        }
                                        message2.params = hashMap2;
                                        if (messageObject5 != null) {
                                        }
                                        message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                        if (inputPeer instanceof TL_inputPeerChannel) {
                                            message2.unread = true;
                                        } else {
                                            if (obj != null) {
                                                message2.views = 1;
                                                message2.flags |= 1024;
                                            }
                                            chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                            if (chat != null) {
                                                if (chat.megagroup) {
                                                    message2.post = true;
                                                    if (chat.signatures) {
                                                        message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                                    }
                                                } else {
                                                    message2.flags |= Integer.MIN_VALUE;
                                                    message2.unread = true;
                                                }
                                            }
                                        }
                                        message2.flags |= 512;
                                        j4 = j;
                                        message2.dialog_id = j4;
                                        messageObject6 = messageObject;
                                        if (messageObject6 == null) {
                                            if (encryptedChat == null) {
                                                user5 = user4;
                                                if (messageObject6.messageOwner.random_id != 0) {
                                                    message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                                    message2.flags |= 8;
                                                    message2.reply_to_msg_id = messageObject.getId();
                                                }
                                            } else {
                                                user5 = user4;
                                            }
                                            message2.flags |= 8;
                                            message2.reply_to_msg_id = messageObject.getId();
                                        } else {
                                            user5 = user4;
                                        }
                                        replyMarkup2 = replyMarkup;
                                        if (replyMarkup2 != null && encryptedChat == null) {
                                            message2.flags |= 64;
                                            message2.reply_markup = replyMarkup2;
                                        }
                                        if (i3 == 0) {
                                            z3 = z2;
                                            if (!z3) {
                                                messageMedia5 = messageMedia4;
                                                tL_photo5 = tL_photo4;
                                                i6 = i3;
                                                message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                                if (i6 > 0) {
                                                    user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                                    if (user6 != null) {
                                                        processSentMessage(message2.id);
                                                        return;
                                                    } else if (user6.bot) {
                                                        message2.unread = false;
                                                    }
                                                }
                                            } else if (sendMessagesHelper.currentChatInfo != null) {
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                processSentMessage(message2.id);
                                                return;
                                            } else {
                                                arrayList3 = new ArrayList();
                                                tL_photo5 = tL_photo4;
                                                it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                                while (it.hasNext()) {
                                                    it2 = it;
                                                    messageMedia5 = messageMedia4;
                                                    inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                    if (inputUser == null) {
                                                        arrayList3.add(inputUser);
                                                    }
                                                    it = it2;
                                                    messageMedia4 = messageMedia5;
                                                }
                                                messageMedia5 = messageMedia4;
                                                message2.to_id = new TL_peerChat();
                                                message2.to_id.chat_id = i3;
                                                z4 = true;
                                                if (z3 != z4) {
                                                    if (!MessageObject.isVoiceMessage(message2)) {
                                                        if (!MessageObject.isRoundVideoMessage(message2)) {
                                                            z4 = true;
                                                        }
                                                    }
                                                    z4 = true;
                                                    message2.media_unread = true;
                                                }
                                                message2.send_state = z4;
                                                messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                messageObject7.replyMessageObject = messageObject6;
                                                if (!messageObject7.isForwarded() && ((messageObject7.type == 3 || videoEditedInfo != null || messageObject7.type == 2) && !TextUtils.isEmpty(message2.attachPath))) {
                                                    messageObject7.attachPathExists = true;
                                                }
                                                videoEditedInfo2 = (messageObject7.videoEditedInfo == null && videoEditedInfo == null) ? messageObject7.videoEditedInfo : videoEditedInfo;
                                                if (hashMap2 == null) {
                                                    str8 = (String) hashMap2.get("groupId");
                                                    if (str8 == null) {
                                                        arrayList4 = arrayList3;
                                                        longValue = Utilities.parseLong(str8).longValue();
                                                        message2.grouped_id = longValue;
                                                        message2.flags |= 131072;
                                                    } else {
                                                        arrayList4 = arrayList3;
                                                        longValue = 0;
                                                    }
                                                    if (hashMap2.get("final") != null) {
                                                        obj = 1;
                                                        if (longValue != 0) {
                                                            try {
                                                                arrayList5 = new ArrayList();
                                                                arrayList5.add(messageObject7);
                                                                arrayList6 = new ArrayList();
                                                                arrayList6.add(message2);
                                                                hashMap3 = hashMap2;
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                messageObject3 = messageObject7;
                                                            } catch (Exception e2) {
                                                                e = e2;
                                                                messageObject3 = messageObject7;
                                                                th = e;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                                if (messageObject7 != null) {
                                                                    messageObject7.messageOwner.send_state = 2;
                                                                }
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                                processSentMessage(message2.id);
                                                            }
                                                            try {
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                delayedMessage = null;
                                                            } catch (Throwable e3) {
                                                                th = e3;
                                                                messageObject7 = messageObject3;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                                if (messageObject7 != null) {
                                                                    messageObject7.messageOwner.send_state = 2;
                                                                }
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                                processSentMessage(message2.id);
                                                            }
                                                        }
                                                        hashMap3 = hashMap2;
                                                        messageObject3 = messageObject7;
                                                        try {
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("group_");
                                                            stringBuilder.append(longValue);
                                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                            delayedMessage = arrayList5 == null ? (DelayedMessage) arrayList5.get(0) : null;
                                                            if (delayedMessage == null) {
                                                                delayedMessage = new DelayedMessage(j4);
                                                                delayedMessage.type = 4;
                                                                delayedMessage.groupId = longValue;
                                                                delayedMessage.messageObjects = new ArrayList();
                                                                delayedMessage.messages = new ArrayList();
                                                                delayedMessage.originalPaths = new ArrayList();
                                                                delayedMessage.extraHashMap = new HashMap();
                                                                delayedMessage.encryptedChat = encryptedChat;
                                                            }
                                                            if (obj != null) {
                                                                delayedMessage.finalGroupMessage = message2.id;
                                                            }
                                                        } catch (Exception e4) {
                                                            e3 = e4;
                                                            messageObject7 = messageObject3;
                                                            th = e3;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                            if (messageObject7 != null) {
                                                                messageObject7.messageOwner.send_state = 2;
                                                            }
                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                            processSentMessage(message2.id);
                                                        }
                                                        if (BuildVars.LOGS_ENABLED && inputPeer != null) {
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append("send message user_id = ");
                                                            stringBuilder2.append(inputPeer.user_id);
                                                            stringBuilder2.append(" chat_id = ");
                                                            stringBuilder2.append(inputPeer.chat_id);
                                                            stringBuilder2.append(" channel_id = ");
                                                            stringBuilder2.append(inputPeer.channel_id);
                                                            stringBuilder2.append(" access_hash = ");
                                                            stringBuilder2.append(inputPeer.access_hash);
                                                            FileLog.m0d(stringBuilder2.toString());
                                                        }
                                                        if (i5 != 0) {
                                                            if (i5 == 9 || str6 == null || encryptedChat == null) {
                                                                if ((i5 >= 1 || i5 > 3) && ((i5 < 5 || i5 > 8) && (i5 != 9 || encryptedChat == null))) {
                                                                    j5 = j4;
                                                                    i4 = i5;
                                                                    hashMap4 = hashMap3;
                                                                    messageObject7 = messageObject3;
                                                                    messageObject8 = messageObject2;
                                                                    if (i4 != 4) {
                                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                            if (chat2 != null) {
                                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                            }
                                                                        } else {
                                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                        }
                                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder = new StringBuilder();
                                                                            stringBuilder.append("silent_");
                                                                            stringBuilder.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                        if (messageObject2.getId() < 0) {
                                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                        }
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                    } else if (i4 == 9) {
                                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                                        if (message2.reply_to_msg_id != 0) {
                                                                            tL_messages_forwardMessages.flags |= 1;
                                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                        }
                                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder = new StringBuilder();
                                                                            stringBuilder.append("silent_");
                                                                            stringBuilder.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                        if (messageObject8 == null) {
                                                                            tL_messages_forwardMessages.clear_draft = true;
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                    }
                                                                } else if (encryptedChat == null) {
                                                                    InputMedia inputMedia;
                                                                    int i11;
                                                                    String str13;
                                                                    TL_document tL_document4;
                                                                    TL_photo tL_photo6;
                                                                    TL_photo tL_photo7;
                                                                    InputMedia tL_inputMediaVenue;
                                                                    if (i5 == 1) {
                                                                        r10 = messageMedia5;
                                                                        if (r10 instanceof TL_messageMediaVenue) {
                                                                            tL_inputMediaVenue = new TL_inputMediaVenue();
                                                                            tL_inputMediaVenue.address = r10.address;
                                                                            tL_inputMediaVenue.title = r10.title;
                                                                            tL_inputMediaVenue.provider = r10.provider;
                                                                            tL_inputMediaVenue.venue_id = r10.venue_id;
                                                                            tL_inputMediaVenue.venue_type = TtmlNode.ANONYMOUS_REGION_ID;
                                                                        } else if (r10 instanceof TL_messageMediaGeoLive) {
                                                                            tL_inputMediaVenue = new TL_inputMediaGeoLive();
                                                                            tL_inputMediaVenue.period = r10.period;
                                                                        } else {
                                                                            tL_inputMediaVenue = new TL_inputMediaGeoPoint();
                                                                        }
                                                                        inputMedia = tL_inputMediaVenue;
                                                                        inputMedia.geo_point = new TL_inputGeoPoint();
                                                                        inputMedia.geo_point.lat = r10.geo.lat;
                                                                        inputMedia.geo_point._long = r10.geo._long;
                                                                        i11 = i5;
                                                                        r51 = longValue;
                                                                        str13 = str12;
                                                                        tL_document4 = document2;
                                                                        tL_photo6 = tL_photo5;
                                                                        messageObject7 = messageObject3;
                                                                    } else {
                                                                        int i12;
                                                                        if (i5 == 2) {
                                                                            r51 = longValue;
                                                                            str13 = str12;
                                                                            hashMap4 = hashMap3;
                                                                            messageObject7 = messageObject3;
                                                                            i12 = i5;
                                                                            tL_document4 = document2;
                                                                            tL_photo6 = tL_photo5;
                                                                        } else if (i5 != 9 || tL_photo5 == null) {
                                                                            Document document4;
                                                                            if (i5 == 3) {
                                                                                document4 = document2;
                                                                                if (document4.access_hash == 0) {
                                                                                    InputMedia tL_inputMediaUploadedDocument = new TL_inputMediaUploadedDocument();
                                                                                    tL_inputMediaUploadedDocument.mime_type = document4.mime_type;
                                                                                    tL_inputMediaUploadedDocument.attributes = document4.attributes;
                                                                                    if (!MessageObject.isRoundVideoDocument(document4)) {
                                                                                        if (videoEditedInfo2 != null) {
                                                                                            if (!videoEditedInfo2.muted) {
                                                                                            }
                                                                                        }
                                                                                        tL_inputMediaUploadedDocument.nosound_video = true;
                                                                                    }
                                                                                    if (i10 != 0) {
                                                                                        tL_inputMediaUploadedDocument.ttl_seconds = i10;
                                                                                        message2.ttl = i10;
                                                                                        tL_inputMediaUploadedDocument.flags |= 2;
                                                                                    }
                                                                                    if (delayedMessage == null) {
                                                                                        delayedMessage = new DelayedMessage(j4);
                                                                                        delayedMessage.type = 1;
                                                                                        messageObject7 = messageObject3;
                                                                                        delayedMessage.obj = messageObject7;
                                                                                        str13 = str12;
                                                                                        delayedMessage.originalPath = str13;
                                                                                    } else {
                                                                                        str13 = str12;
                                                                                        messageObject7 = messageObject3;
                                                                                    }
                                                                                    delayedMessage.location = document4.thumb.location;
                                                                                    delayedMessage.videoEditedInfo = videoEditedInfo2;
                                                                                    inputMedia = tL_inputMediaUploadedDocument;
                                                                                    i11 = i5;
                                                                                    tL_document4 = document4;
                                                                                    r51 = longValue;
                                                                                    tL_photo6 = tL_photo5;
                                                                                } else {
                                                                                    str13 = str12;
                                                                                    messageObject7 = messageObject3;
                                                                                    inputMedia = new TL_inputMediaDocument();
                                                                                    inputMedia.id = new TL_inputDocument();
                                                                                    r51 = longValue;
                                                                                    inputMedia.id.id = document4.id;
                                                                                    inputMedia.id.access_hash = document4.access_hash;
                                                                                }
                                                                            } else {
                                                                                r51 = longValue;
                                                                                str13 = str12;
                                                                                document4 = document2;
                                                                                messageObject7 = messageObject3;
                                                                                if (i5 == 6) {
                                                                                    inputMedia = new TL_inputMediaContact();
                                                                                    User user8 = user5;
                                                                                    inputMedia.phone_number = user8.phone;
                                                                                    inputMedia.first_name = user8.first_name;
                                                                                    inputMedia.last_name = user8.last_name;
                                                                                } else {
                                                                                    if (i5 != 7) {
                                                                                        if (i5 != 9) {
                                                                                            if (i5 != 8) {
                                                                                                i11 = i5;
                                                                                                tL_document4 = document4;
                                                                                                tL_photo6 = tL_photo5;
                                                                                                inputMedia = null;
                                                                                            } else if (document4.access_hash == 0) {
                                                                                                tL_inputMediaVenue = new TL_inputMediaUploadedDocument();
                                                                                                tL_inputMediaVenue.mime_type = document4.mime_type;
                                                                                                tL_inputMediaVenue.attributes = document4.attributes;
                                                                                                if (i10 != 0) {
                                                                                                    tL_inputMediaVenue.ttl_seconds = i10;
                                                                                                    message2.ttl = i10;
                                                                                                    tL_inputMediaVenue.flags |= 2;
                                                                                                }
                                                                                                delayedMessage = new DelayedMessage(j4);
                                                                                                delayedMessage.type = 3;
                                                                                                delayedMessage.obj = messageObject7;
                                                                                                inputMedia = tL_inputMediaVenue;
                                                                                            } else {
                                                                                                inputMedia = new TL_inputMediaDocument();
                                                                                                inputMedia.id = new TL_inputDocument();
                                                                                                inputMedia.id.id = document4.id;
                                                                                                inputMedia.id.access_hash = document4.access_hash;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    if (document4.access_hash == 0) {
                                                                                        if (encryptedChat != null || str13 == null || str13.length() <= 0 || !str13.startsWith("http") || hashMap3 == null) {
                                                                                            tL_inputMediaVenue = new TL_inputMediaUploadedDocument();
                                                                                            if (i10 != 0) {
                                                                                                tL_inputMediaVenue.ttl_seconds = i10;
                                                                                                message2.ttl = i10;
                                                                                                tL_inputMediaVenue.flags |= 2;
                                                                                            }
                                                                                            DelayedMessage delayedMessage2 = new DelayedMessage(j4);
                                                                                            delayedMessage2.originalPath = str13;
                                                                                            delayedMessage2.type = 2;
                                                                                            delayedMessage2.obj = messageObject7;
                                                                                            delayedMessage2.location = document4.thumb.location;
                                                                                            delayedMessage = delayedMessage2;
                                                                                        } else {
                                                                                            tL_inputMediaVenue = new TL_inputMediaGifExternal();
                                                                                            String[] split = ((String) hashMap3.get(UpdateFragment.FRAGMENT_URL)).split("\\|");
                                                                                            if (split.length == 2) {
                                                                                                ((TL_inputMediaGifExternal) tL_inputMediaVenue).url = split[0];
                                                                                                tL_inputMediaVenue.f39q = split[1];
                                                                                            }
                                                                                        }
                                                                                        inputMedia = tL_inputMediaVenue;
                                                                                        inputMedia.mime_type = document4.mime_type;
                                                                                        inputMedia.attributes = document4.attributes;
                                                                                    } else {
                                                                                        inputMedia = new TL_inputMediaDocument();
                                                                                        inputMedia.id = new TL_inputDocument();
                                                                                        inputMedia.id.id = document4.id;
                                                                                        inputMedia.id.access_hash = document4.access_hash;
                                                                                    }
                                                                                }
                                                                            }
                                                                            i11 = i5;
                                                                            tL_document4 = document4;
                                                                            tL_photo6 = tL_photo5;
                                                                        } else {
                                                                            i12 = i5;
                                                                            r51 = longValue;
                                                                            str13 = str12;
                                                                            tL_document4 = document2;
                                                                            tL_photo6 = tL_photo5;
                                                                            hashMap4 = hashMap3;
                                                                            messageObject7 = messageObject3;
                                                                        }
                                                                        if (tL_photo6.access_hash == 0) {
                                                                            tL_inputMediaVenue = new TL_inputMediaUploadedPhoto();
                                                                            if (i10 != 0) {
                                                                                tL_inputMediaVenue.ttl_seconds = i10;
                                                                                message2.ttl = i10;
                                                                                tL_inputMediaVenue.flags |= 2;
                                                                            }
                                                                            if (hashMap4 != null) {
                                                                                str11 = (String) hashMap4.get("masks");
                                                                                if (str11 != null) {
                                                                                    AbstractSerializedData serializedData = new SerializedData(Utilities.hexToBytes(str11));
                                                                                    boolean z6 = false;
                                                                                    i5 = serializedData.readInt32(false);
                                                                                    int i13 = 0;
                                                                                    while (i13 < i5) {
                                                                                        int i14 = i5;
                                                                                        tL_inputMediaVenue.stickers.add(InputDocument.TLdeserialize(serializedData, serializedData.readInt32(z6), z6));
                                                                                        i13++;
                                                                                        i5 = i14;
                                                                                        z6 = false;
                                                                                    }
                                                                                    tL_inputMediaVenue.flags |= 1;
                                                                                }
                                                                            }
                                                                            if (delayedMessage == null) {
                                                                                delayedMessage = new DelayedMessage(j4);
                                                                                delayedMessage.type = 0;
                                                                                delayedMessage.obj = messageObject7;
                                                                                delayedMessage.originalPath = str13;
                                                                            }
                                                                            i5 = i12;
                                                                            str11 = str3;
                                                                            if (str11 == null || str3.length() <= 0 || !str11.startsWith("http")) {
                                                                                delayedMessage.location = ((PhotoSize) tL_photo6.sizes.get(tL_photo6.sizes.size() - 1)).location;
                                                                            } else {
                                                                                delayedMessage.httpLocation = str11;
                                                                            }
                                                                            inputMedia = tL_inputMediaVenue;
                                                                            i11 = i5;
                                                                        } else {
                                                                            i5 = i12;
                                                                            inputMedia = new TL_inputMediaPhoto();
                                                                            inputMedia.id = new TL_inputPhoto();
                                                                            i11 = i5;
                                                                            inputMedia.id.id = tL_photo6.id;
                                                                            inputMedia.id.access_hash = tL_photo6.access_hash;
                                                                        }
                                                                    }
                                                                    if (arrayList4 != null) {
                                                                        TLObject tL_messages_sendBroadcast = new TL_messages_sendBroadcast();
                                                                        ArrayList arrayList9 = new ArrayList();
                                                                        arrayList7 = arrayList4;
                                                                        int i15 = 0;
                                                                        while (i15 < arrayList7.size()) {
                                                                            tL_photo7 = tL_photo6;
                                                                            arrayList9.add(Long.valueOf(Utilities.random.nextLong()));
                                                                            i15++;
                                                                            tL_photo6 = tL_photo7;
                                                                        }
                                                                        tL_photo7 = tL_photo6;
                                                                        tL_messages_sendBroadcast.contacts = arrayList7;
                                                                        tL_messages_sendBroadcast.media = inputMedia;
                                                                        tL_messages_sendBroadcast.random_id = arrayList9;
                                                                        tL_messages_sendBroadcast.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                                        if (delayedMessage != null) {
                                                                            delayedMessage.sendRequest = tL_messages_sendBroadcast;
                                                                        }
                                                                        if (messageObject2 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j4, false);
                                                                        }
                                                                        tL_messages_forwardMessages = tL_messages_sendBroadcast;
                                                                    } else {
                                                                        tL_photo7 = tL_photo6;
                                                                        TLObject tL_messages_sendMultiMedia;
                                                                        if (r51 != 0) {
                                                                            if (delayedMessage.sendRequest != null) {
                                                                                tLObject = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                                                                            } else {
                                                                                tL_messages_sendMultiMedia = new TL_messages_sendMultiMedia();
                                                                                tL_messages_sendMultiMedia.peer = inputPeer;
                                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                    stringBuilder3 = new StringBuilder();
                                                                                    stringBuilder3.append("silent_");
                                                                                    stringBuilder3.append(j4);
                                                                                    tL_messages_sendMultiMedia.silent = notificationsSettings.getBoolean(stringBuilder3.toString(), false);
                                                                                }
                                                                                if (message2.reply_to_msg_id != 0) {
                                                                                    tL_messages_sendMultiMedia.flags |= 1;
                                                                                    tL_messages_sendMultiMedia.reply_to_msg_id = message2.reply_to_msg_id;
                                                                                }
                                                                                delayedMessage.sendRequest = tL_messages_sendMultiMedia;
                                                                                tLObject = tL_messages_sendMultiMedia;
                                                                            }
                                                                            delayedMessage.messageObjects.add(messageObject7);
                                                                            delayedMessage.messages.add(message2);
                                                                            delayedMessage.originalPaths.add(str13);
                                                                            TL_inputSingleMedia tL_inputSingleMedia = new TL_inputSingleMedia();
                                                                            tL_inputSingleMedia.random_id = message2.random_id;
                                                                            tL_inputSingleMedia.media = inputMedia;
                                                                            tL_inputSingleMedia.message = str7;
                                                                            arrayList2 = arrayList;
                                                                            if (!(arrayList2 == null || arrayList.isEmpty())) {
                                                                                tL_inputSingleMedia.entities = arrayList2;
                                                                                tL_inputSingleMedia.flags |= 1;
                                                                            }
                                                                            tLObject.multi_media.add(tL_inputSingleMedia);
                                                                            tL_messages_forwardMessages = tLObject;
                                                                        } else {
                                                                            str5 = str7;
                                                                            arrayList2 = arrayList;
                                                                            tL_messages_sendMultiMedia = new TL_messages_sendMedia();
                                                                            tL_messages_sendMultiMedia.peer = inputPeer;
                                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder3 = new StringBuilder();
                                                                                stringBuilder3.append("silent_");
                                                                                stringBuilder3.append(j4);
                                                                                tL_messages_sendMultiMedia.silent = notificationsSettings.getBoolean(stringBuilder3.toString(), false);
                                                                            }
                                                                            if (message2.reply_to_msg_id != 0) {
                                                                                tL_messages_sendMultiMedia.flags |= 1;
                                                                                tL_messages_sendMultiMedia.reply_to_msg_id = message2.reply_to_msg_id;
                                                                            }
                                                                            tL_messages_sendMultiMedia.random_id = message2.random_id;
                                                                            tL_messages_sendMultiMedia.media = inputMedia;
                                                                            tL_messages_sendMultiMedia.message = str5;
                                                                            if (!(arrayList2 == null || arrayList.isEmpty())) {
                                                                                tL_messages_sendMultiMedia.entities = arrayList2;
                                                                                tL_messages_sendMultiMedia.flags |= 8;
                                                                            }
                                                                            if (delayedMessage != null) {
                                                                                delayedMessage.sendRequest = tL_messages_sendMultiMedia;
                                                                            }
                                                                            tL_messages_forwardMessages = tL_messages_sendMultiMedia;
                                                                        }
                                                                    }
                                                                    if (r51 != 0) {
                                                                        performSendDelayedMessage(delayedMessage);
                                                                    } else {
                                                                        i7 = i11;
                                                                        if (i7 == 1) {
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        } else if (i7 == 2) {
                                                                            if (tL_photo7.access_hash == 0) {
                                                                                performSendDelayedMessage(delayedMessage);
                                                                            } else {
                                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null, null, true);
                                                                            }
                                                                        } else if (i7 != 3) {
                                                                            TL_document tL_document5 = tL_document4;
                                                                            if (i7 == 6) {
                                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                            } else if (i7 == 7) {
                                                                                if (tL_document5.access_hash != 0 || delayedMessage == null) {
                                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, str13);
                                                                                } else {
                                                                                    performSendDelayedMessage(delayedMessage);
                                                                                }
                                                                            } else if (i7 == 8) {
                                                                                if (tL_document5.access_hash == 0) {
                                                                                    performSendDelayedMessage(delayedMessage);
                                                                                } else {
                                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                                }
                                                                            }
                                                                        } else if (tL_document4.access_hash == 0) {
                                                                            performSendDelayedMessage(delayedMessage);
                                                                        } else {
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        }
                                                                    }
                                                                } else {
                                                                    Document document5;
                                                                    int i16;
                                                                    Message message4;
                                                                    TL_messages_sendEncryptedMultiMedia tL_messages_sendEncryptedMultiMedia;
                                                                    TL_inputEncryptedFile tL_inputEncryptedFile;
                                                                    VideoEditedInfo videoEditedInfo3 = videoEditedInfo2;
                                                                    i7 = i5;
                                                                    r51 = longValue;
                                                                    String str14 = str12;
                                                                    str5 = str7;
                                                                    Document document6 = document2;
                                                                    User user9 = user5;
                                                                    TL_photo tL_photo8 = tL_photo5;
                                                                    r10 = messageMedia5;
                                                                    hashMap4 = hashMap3;
                                                                    messageObject7 = messageObject3;
                                                                    arrayList2 = arrayList;
                                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 73) {
                                                                        tLObject = new TL_decryptedMessage();
                                                                        if (r51 != 0) {
                                                                            document5 = document6;
                                                                            j5 = r51;
                                                                            tLObject.grouped_id = j5;
                                                                            tLObject.flags |= 131072;
                                                                        } else {
                                                                            document5 = document6;
                                                                            j5 = r51;
                                                                        }
                                                                    } else {
                                                                        document5 = document6;
                                                                        j5 = r51;
                                                                        tLObject = new TL_decryptedMessage_layer45();
                                                                    }
                                                                    tLObject.ttl = message2.ttl;
                                                                    if (!(arrayList2 == null || arrayList.isEmpty())) {
                                                                        tLObject.entities = arrayList2;
                                                                        tLObject.flags |= 128;
                                                                    }
                                                                    long j6 = j5;
                                                                    if (message2.reply_to_random_id != 0) {
                                                                        tLObject.reply_to_random_id = message2.reply_to_random_id;
                                                                        tLObject.flags |= 8;
                                                                    }
                                                                    tLObject.flags |= 512;
                                                                    if (!(hashMap4 == null || hashMap4.get("bot_name") == null)) {
                                                                        tLObject.via_bot_name = (String) hashMap4.get("bot_name");
                                                                        tLObject.flags |= 2048;
                                                                    }
                                                                    tLObject.random_id = message2.random_id;
                                                                    tLObject.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                                    if (i7 == 1) {
                                                                        if (r10 instanceof TL_messageMediaVenue) {
                                                                            tLObject.media = new TL_decryptedMessageMediaVenue();
                                                                            tLObject.media.address = r10.address;
                                                                            tLObject.media.title = r10.title;
                                                                            tLObject.media.provider = r10.provider;
                                                                            tLObject.media.venue_id = r10.venue_id;
                                                                        } else {
                                                                            tLObject.media = new TL_decryptedMessageMediaGeoPoint();
                                                                        }
                                                                        tLObject.media.lat = r10.geo.lat;
                                                                        tLObject.media._long = r10.geo._long;
                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                    } else {
                                                                        String str15;
                                                                        if (i7 != 2) {
                                                                            if (i7 != 9 || tL_photo8 == null) {
                                                                                if (i7 == 3) {
                                                                                    int i17;
                                                                                    DocumentAttribute documentAttribute3;
                                                                                    InputEncryptedFile tL_inputEncryptedFile2;
                                                                                    document3 = document5;
                                                                                    ImageLoader.fillPhotoSizeWithBytes(document3.thumb);
                                                                                    if (!MessageObject.isNewGifDocument(document3)) {
                                                                                        if (!MessageObject.isRoundVideoDocument(document3)) {
                                                                                            tLObject.media = new TL_decryptedMessageMediaVideo();
                                                                                            if (document3.thumb == null || document3.thumb.bytes == null) {
                                                                                                ((TL_decryptedMessageMediaVideo) tLObject.media).thumb = new byte[0];
                                                                                            } else {
                                                                                                ((TL_decryptedMessageMediaVideo) tLObject.media).thumb = document3.thumb.bytes;
                                                                                            }
                                                                                            tLObject.media.caption = str5;
                                                                                            tLObject.media.mime_type = MimeTypes.VIDEO_MP4;
                                                                                            tLObject.media.size = document3.size;
                                                                                            for (i17 = 0; i17 < document3.attributes.size(); i17++) {
                                                                                                documentAttribute3 = (DocumentAttribute) document3.attributes.get(i17);
                                                                                                if (documentAttribute3 instanceof TL_documentAttributeVideo) {
                                                                                                    tLObject.media.f34w = documentAttribute3.f36w;
                                                                                                    tLObject.media.f33h = documentAttribute3.f35h;
                                                                                                    tLObject.media.duration = documentAttribute3.duration;
                                                                                                    break;
                                                                                                }
                                                                                            }
                                                                                            tLObject.media.thumb_h = document3.thumb.f42h;
                                                                                            tLObject.media.thumb_w = document3.thumb.f43w;
                                                                                            if (document3.key != null) {
                                                                                                if (j6 != 0) {
                                                                                                    tL_inputEncryptedFile2 = new TL_inputEncryptedFile();
                                                                                                    tL_inputEncryptedFile2.id = document3.id;
                                                                                                    tL_inputEncryptedFile2.access_hash = document3.access_hash;
                                                                                                    tLObject.media.key = document3.key;
                                                                                                    tLObject.media.iv = document3.iv;
                                                                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, tL_inputEncryptedFile2, null, messageObject7);
                                                                                                }
                                                                                            }
                                                                                            if (delayedMessage != null) {
                                                                                                j5 = j;
                                                                                                delayedMessage = new DelayedMessage(j5);
                                                                                                delayedMessage.encryptedChat = encryptedChat;
                                                                                                delayedMessage.type = 1;
                                                                                                delayedMessage.sendEncryptedRequest = tLObject;
                                                                                                obj = str14;
                                                                                                delayedMessage.originalPath = obj;
                                                                                                delayedMessage.obj = messageObject7;
                                                                                            } else {
                                                                                                obj = str14;
                                                                                                j5 = j;
                                                                                            }
                                                                                            delayedMessage.videoEditedInfo = videoEditedInfo3;
                                                                                            if (j6 == 0) {
                                                                                                performSendDelayedMessage(delayedMessage);
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    tLObject.media = new TL_decryptedMessageMediaDocument();
                                                                                    tLObject.media.attributes = document3.attributes;
                                                                                    if (document3.thumb == null || document3.thumb.bytes == null) {
                                                                                        ((TL_decryptedMessageMediaDocument) tLObject.media).thumb = new byte[0];
                                                                                    } else {
                                                                                        ((TL_decryptedMessageMediaDocument) tLObject.media).thumb = document3.thumb.bytes;
                                                                                    }
                                                                                    tLObject.media.caption = str5;
                                                                                    tLObject.media.mime_type = MimeTypes.VIDEO_MP4;
                                                                                    tLObject.media.size = document3.size;
                                                                                    for (i17 = 0; i17 < document3.attributes.size(); i17++) {
                                                                                        documentAttribute3 = (DocumentAttribute) document3.attributes.get(i17);
                                                                                        if (documentAttribute3 instanceof TL_documentAttributeVideo) {
                                                                                            tLObject.media.f34w = documentAttribute3.f36w;
                                                                                            tLObject.media.f33h = documentAttribute3.f35h;
                                                                                            tLObject.media.duration = documentAttribute3.duration;
                                                                                            break;
                                                                                        }
                                                                                    }
                                                                                    tLObject.media.thumb_h = document3.thumb.f42h;
                                                                                    tLObject.media.thumb_w = document3.thumb.f43w;
                                                                                    if (document3.key != null) {
                                                                                        if (j6 != 0) {
                                                                                            tL_inputEncryptedFile2 = new TL_inputEncryptedFile();
                                                                                            tL_inputEncryptedFile2.id = document3.id;
                                                                                            tL_inputEncryptedFile2.access_hash = document3.access_hash;
                                                                                            tLObject.media.key = document3.key;
                                                                                            tLObject.media.iv = document3.iv;
                                                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, tL_inputEncryptedFile2, null, messageObject7);
                                                                                        }
                                                                                    }
                                                                                    if (delayedMessage != null) {
                                                                                        obj = str14;
                                                                                        j5 = j;
                                                                                    } else {
                                                                                        j5 = j;
                                                                                        delayedMessage = new DelayedMessage(j5);
                                                                                        delayedMessage.encryptedChat = encryptedChat;
                                                                                        delayedMessage.type = 1;
                                                                                        delayedMessage.sendEncryptedRequest = tLObject;
                                                                                        obj = str14;
                                                                                        delayedMessage.originalPath = obj;
                                                                                        delayedMessage.obj = messageObject7;
                                                                                    }
                                                                                    delayedMessage.videoEditedInfo = videoEditedInfo3;
                                                                                    if (j6 == 0) {
                                                                                        performSendDelayedMessage(delayedMessage);
                                                                                    }
                                                                                } else {
                                                                                    obj = str14;
                                                                                    document3 = document5;
                                                                                    j5 = j;
                                                                                    if (i7 == 6) {
                                                                                        tLObject.media = new TL_decryptedMessageMediaContact();
                                                                                        User user10 = user9;
                                                                                        tLObject.media.phone_number = user10.phone;
                                                                                        tLObject.media.first_name = user10.first_name;
                                                                                        tLObject.media.last_name = user10.last_name;
                                                                                        tLObject.media.user_id = user10.id;
                                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                                    } else {
                                                                                        if (i7 != 7) {
                                                                                            if (i7 != 9 || document3 == null) {
                                                                                                if (i7 == 8) {
                                                                                                    delayedMessage = new DelayedMessage(j5);
                                                                                                    delayedMessage.encryptedChat = encryptedChat;
                                                                                                    delayedMessage.sendEncryptedRequest = tLObject;
                                                                                                    delayedMessage.obj = messageObject7;
                                                                                                    delayedMessage.type = 3;
                                                                                                    tLObject.media = new TL_decryptedMessageMediaDocument();
                                                                                                    tLObject.media.attributes = document3.attributes;
                                                                                                    tLObject.media.caption = str5;
                                                                                                    if (document3.thumb == null || document3.thumb.bytes == null) {
                                                                                                        ((TL_decryptedMessageMediaDocument) tLObject.media).thumb = new byte[0];
                                                                                                        tLObject.media.thumb_h = 0;
                                                                                                        tLObject.media.thumb_w = 0;
                                                                                                    } else {
                                                                                                        ((TL_decryptedMessageMediaDocument) tLObject.media).thumb = document3.thumb.bytes;
                                                                                                        tLObject.media.thumb_h = document3.thumb.f42h;
                                                                                                        tLObject.media.thumb_w = document3.thumb.f43w;
                                                                                                    }
                                                                                                    tLObject.media.mime_type = document3.mime_type;
                                                                                                    tLObject.media.size = document3.size;
                                                                                                    delayedMessage.originalPath = obj;
                                                                                                    performSendDelayedMessage(delayedMessage);
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        if (MessageObject.isStickerDocument(document3)) {
                                                                                            tLObject.media = new TL_decryptedMessageMediaExternalDocument();
                                                                                            tLObject.media.id = document3.id;
                                                                                            tLObject.media.date = document3.date;
                                                                                            tLObject.media.access_hash = document3.access_hash;
                                                                                            tLObject.media.mime_type = document3.mime_type;
                                                                                            tLObject.media.size = document3.size;
                                                                                            tLObject.media.dc_id = document3.dc_id;
                                                                                            tLObject.media.attributes = document3.attributes;
                                                                                            if (document3.thumb == null) {
                                                                                                ((TL_decryptedMessageMediaExternalDocument) tLObject.media).thumb = new TL_photoSizeEmpty();
                                                                                                ((TL_decryptedMessageMediaExternalDocument) tLObject.media).thumb.type = "s";
                                                                                            } else {
                                                                                                ((TL_decryptedMessageMediaExternalDocument) tLObject.media).thumb = document3.thumb;
                                                                                            }
                                                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                                        } else {
                                                                                            ImageLoader.fillPhotoSizeWithBytes(document3.thumb);
                                                                                            tLObject.media = new TL_decryptedMessageMediaDocument();
                                                                                            tLObject.media.attributes = document3.attributes;
                                                                                            tLObject.media.caption = str5;
                                                                                            if (document3.thumb == null || document3.thumb.bytes == null) {
                                                                                                ((TL_decryptedMessageMediaDocument) tLObject.media).thumb = new byte[0];
                                                                                                tLObject.media.thumb_h = 0;
                                                                                                tLObject.media.thumb_w = 0;
                                                                                            } else {
                                                                                                ((TL_decryptedMessageMediaDocument) tLObject.media).thumb = document3.thumb.bytes;
                                                                                                tLObject.media.thumb_h = document3.thumb.f42h;
                                                                                                tLObject.media.thumb_w = document3.thumb.f43w;
                                                                                            }
                                                                                            tLObject.media.size = document3.size;
                                                                                            tLObject.media.mime_type = document3.mime_type;
                                                                                            if (document3.key == null) {
                                                                                                delayedMessage = new DelayedMessage(j5);
                                                                                                delayedMessage.originalPath = obj;
                                                                                                delayedMessage.sendEncryptedRequest = tLObject;
                                                                                                delayedMessage.type = 2;
                                                                                                delayedMessage.obj = messageObject7;
                                                                                                delayedMessage.encryptedChat = encryptedChat;
                                                                                                str15 = str3;
                                                                                                if (str15 != null && str3.length() > 0 && str15.startsWith("http")) {
                                                                                                    delayedMessage.httpLocation = str15;
                                                                                                }
                                                                                                performSendDelayedMessage(delayedMessage);
                                                                                            } else {
                                                                                                InputEncryptedFile tL_inputEncryptedFile3 = new TL_inputEncryptedFile();
                                                                                                tL_inputEncryptedFile3.id = document3.id;
                                                                                                tL_inputEncryptedFile3.access_hash = document3.access_hash;
                                                                                                tLObject.media.key = document3.key;
                                                                                                tLObject.media.iv = document3.iv;
                                                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, tL_inputEncryptedFile3, null, messageObject7);
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                                i16 = i7;
                                                                                message4 = message2;
                                                                                if (j6 != 0) {
                                                                                    if (delayedMessage.sendEncryptedRequest != null) {
                                                                                        tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                                                                    } else {
                                                                                        tL_messages_sendEncryptedMultiMedia = new TL_messages_sendEncryptedMultiMedia();
                                                                                        delayedMessage.sendEncryptedRequest = tL_messages_sendEncryptedMultiMedia;
                                                                                    }
                                                                                    delayedMessage.messageObjects.add(messageObject7);
                                                                                    message2 = message4;
                                                                                    delayedMessage.messages.add(message2);
                                                                                    delayedMessage.originalPaths.add(obj);
                                                                                    delayedMessage.upload = true;
                                                                                    tL_messages_sendEncryptedMultiMedia.messages.add(tLObject);
                                                                                    tL_inputEncryptedFile = new TL_inputEncryptedFile();
                                                                                    if (i16 == 3) {
                                                                                        j3 = 1;
                                                                                    }
                                                                                    tL_inputEncryptedFile.id = j3;
                                                                                    tL_messages_sendEncryptedMultiMedia.files.add(tL_inputEncryptedFile);
                                                                                    performSendDelayedMessage(delayedMessage);
                                                                                } else {
                                                                                    message2 = message4;
                                                                                }
                                                                                if (messageObject2 == null) {
                                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                                }
                                                                            }
                                                                        }
                                                                        obj = str14;
                                                                        str15 = str3;
                                                                        j5 = j;
                                                                        PhotoSize photoSize = (PhotoSize) tL_photo8.sizes.get(0);
                                                                        i16 = i7;
                                                                        PhotoSize photoSize2 = (PhotoSize) tL_photo8.sizes.get(tL_photo8.sizes.size() - 1);
                                                                        ImageLoader.fillPhotoSizeWithBytes(photoSize);
                                                                        tLObject.media = new TL_decryptedMessageMediaPhoto();
                                                                        tLObject.media.caption = str5;
                                                                        if (photoSize.bytes != null) {
                                                                            ((TL_decryptedMessageMediaPhoto) tLObject.media).thumb = photoSize.bytes;
                                                                            message4 = message2;
                                                                        } else {
                                                                            message4 = message2;
                                                                            ((TL_decryptedMessageMediaPhoto) tLObject.media).thumb = new byte[0];
                                                                        }
                                                                        tLObject.media.thumb_h = photoSize.f42h;
                                                                        tLObject.media.thumb_w = photoSize.f43w;
                                                                        tLObject.media.f34w = photoSize2.f43w;
                                                                        tLObject.media.f33h = photoSize2.f42h;
                                                                        tLObject.media.size = photoSize2.size;
                                                                        if (photoSize2.location.key != null) {
                                                                            if (j6 == 0) {
                                                                                try {
                                                                                    InputEncryptedFile tL_inputEncryptedFile4 = new TL_inputEncryptedFile();
                                                                                    tL_inputEncryptedFile4.id = photoSize2.location.volume_id;
                                                                                    tL_inputEncryptedFile4.access_hash = photoSize2.location.secret;
                                                                                    tLObject.media.key = photoSize2.location.key;
                                                                                    tLObject.media.iv = photoSize2.location.iv;
                                                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tLObject, messageObject7.messageOwner, encryptedChat, tL_inputEncryptedFile4, null, messageObject7);
                                                                                    if (j6 != 0) {
                                                                                        message2 = message4;
                                                                                    } else {
                                                                                        if (delayedMessage.sendEncryptedRequest != null) {
                                                                                            tL_messages_sendEncryptedMultiMedia = new TL_messages_sendEncryptedMultiMedia();
                                                                                            delayedMessage.sendEncryptedRequest = tL_messages_sendEncryptedMultiMedia;
                                                                                        } else {
                                                                                            tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                                                                        }
                                                                                        delayedMessage.messageObjects.add(messageObject7);
                                                                                        message2 = message4;
                                                                                        delayedMessage.messages.add(message2);
                                                                                        delayedMessage.originalPaths.add(obj);
                                                                                        delayedMessage.upload = true;
                                                                                        tL_messages_sendEncryptedMultiMedia.messages.add(tLObject);
                                                                                        tL_inputEncryptedFile = new TL_inputEncryptedFile();
                                                                                        if (i16 == 3) {
                                                                                            j3 = 1;
                                                                                        }
                                                                                        tL_inputEncryptedFile.id = j3;
                                                                                        tL_messages_sendEncryptedMultiMedia.files.add(tL_inputEncryptedFile);
                                                                                        performSendDelayedMessage(delayedMessage);
                                                                                    }
                                                                                    if (messageObject2 == null) {
                                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                                    }
                                                                                } catch (Throwable e32) {
                                                                                    th = e32;
                                                                                    message2 = message4;
                                                                                    FileLog.m3e(th);
                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                                                    if (messageObject7 != null) {
                                                                                        messageObject7.messageOwner.send_state = 2;
                                                                                    }
                                                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                                                    processSentMessage(message2.id);
                                                                                }
                                                                            }
                                                                        }
                                                                        if (delayedMessage == null) {
                                                                            delayedMessage = new DelayedMessage(j5);
                                                                            delayedMessage.encryptedChat = encryptedChat;
                                                                            delayedMessage.type = 0;
                                                                            delayedMessage.originalPath = obj;
                                                                            delayedMessage.sendEncryptedRequest = tLObject;
                                                                            delayedMessage.obj = messageObject7;
                                                                        }
                                                                        try {
                                                                            if (!TextUtils.isEmpty(str3)) {
                                                                                if (str15.startsWith("http")) {
                                                                                    delayedMessage.httpLocation = str15;
                                                                                    if (j6 == 0) {
                                                                                        performSendDelayedMessage(delayedMessage);
                                                                                    }
                                                                                    if (j6 != 0) {
                                                                                        if (delayedMessage.sendEncryptedRequest != null) {
                                                                                            tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                                                                        } else {
                                                                                            tL_messages_sendEncryptedMultiMedia = new TL_messages_sendEncryptedMultiMedia();
                                                                                            delayedMessage.sendEncryptedRequest = tL_messages_sendEncryptedMultiMedia;
                                                                                        }
                                                                                        delayedMessage.messageObjects.add(messageObject7);
                                                                                        message2 = message4;
                                                                                        delayedMessage.messages.add(message2);
                                                                                        delayedMessage.originalPaths.add(obj);
                                                                                        delayedMessage.upload = true;
                                                                                        tL_messages_sendEncryptedMultiMedia.messages.add(tLObject);
                                                                                        tL_inputEncryptedFile = new TL_inputEncryptedFile();
                                                                                        if (i16 == 3) {
                                                                                            j3 = 1;
                                                                                        }
                                                                                        tL_inputEncryptedFile.id = j3;
                                                                                        tL_messages_sendEncryptedMultiMedia.files.add(tL_inputEncryptedFile);
                                                                                        performSendDelayedMessage(delayedMessage);
                                                                                    } else {
                                                                                        message2 = message4;
                                                                                    }
                                                                                    if (messageObject2 == null) {
                                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                                    }
                                                                                }
                                                                            }
                                                                            delayedMessage.location = ((PhotoSize) tL_photo8.sizes.get(tL_photo8.sizes.size() - 1)).location;
                                                                            if (j6 == 0) {
                                                                                performSendDelayedMessage(delayedMessage);
                                                                            }
                                                                            if (j6 != 0) {
                                                                                message2 = message4;
                                                                            } else {
                                                                                if (delayedMessage.sendEncryptedRequest != null) {
                                                                                    tL_messages_sendEncryptedMultiMedia = new TL_messages_sendEncryptedMultiMedia();
                                                                                    delayedMessage.sendEncryptedRequest = tL_messages_sendEncryptedMultiMedia;
                                                                                } else {
                                                                                    tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                                                                }
                                                                                delayedMessage.messageObjects.add(messageObject7);
                                                                                message2 = message4;
                                                                                delayedMessage.messages.add(message2);
                                                                                delayedMessage.originalPaths.add(obj);
                                                                                delayedMessage.upload = true;
                                                                                tL_messages_sendEncryptedMultiMedia.messages.add(tLObject);
                                                                                tL_inputEncryptedFile = new TL_inputEncryptedFile();
                                                                                if (i16 == 3) {
                                                                                    j3 = 1;
                                                                                }
                                                                                tL_inputEncryptedFile.id = j3;
                                                                                tL_messages_sendEncryptedMultiMedia.files.add(tL_inputEncryptedFile);
                                                                                performSendDelayedMessage(delayedMessage);
                                                                            }
                                                                            if (messageObject2 == null) {
                                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                            }
                                                                        } catch (Exception e5) {
                                                                            e32 = e5;
                                                                            message2 = message4;
                                                                            th = e32;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                                            if (messageObject7 != null) {
                                                                                messageObject7.messageOwner.send_state = 2;
                                                                            }
                                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                                            processSentMessage(message2.id);
                                                                        }
                                                                    }
                                                                    obj = str14;
                                                                    j5 = j;
                                                                    i16 = i7;
                                                                    message4 = message2;
                                                                    if (j6 != 0) {
                                                                        if (delayedMessage.sendEncryptedRequest != null) {
                                                                            tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
                                                                        } else {
                                                                            tL_messages_sendEncryptedMultiMedia = new TL_messages_sendEncryptedMultiMedia();
                                                                            delayedMessage.sendEncryptedRequest = tL_messages_sendEncryptedMultiMedia;
                                                                        }
                                                                        delayedMessage.messageObjects.add(messageObject7);
                                                                        message2 = message4;
                                                                        delayedMessage.messages.add(message2);
                                                                        delayedMessage.originalPaths.add(obj);
                                                                        delayedMessage.upload = true;
                                                                        tL_messages_sendEncryptedMultiMedia.messages.add(tLObject);
                                                                        tL_inputEncryptedFile = new TL_inputEncryptedFile();
                                                                        if (i16 == 3) {
                                                                            j3 = 1;
                                                                        }
                                                                        tL_inputEncryptedFile.id = j3;
                                                                        tL_messages_sendEncryptedMultiMedia.files.add(tL_inputEncryptedFile);
                                                                        performSendDelayedMessage(delayedMessage);
                                                                    } else {
                                                                        message2 = message4;
                                                                    }
                                                                    if (messageObject2 == null) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        j5 = j4;
                                                        arrayList7 = arrayList4;
                                                        hashMap4 = hashMap3;
                                                        messageObject7 = messageObject3;
                                                        messageObject8 = messageObject2;
                                                        arrayList2 = arrayList;
                                                        if (encryptedChat != null) {
                                                            str8 = str6;
                                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                tL_decryptedMessage = new TL_decryptedMessage();
                                                            } else {
                                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                            }
                                                            tL_decryptedMessage.ttl = message2.ttl;
                                                            if (!(arrayList2 == null || arrayList.isEmpty())) {
                                                                tL_decryptedMessage.entities = arrayList2;
                                                                tL_decryptedMessage.flags |= 128;
                                                            }
                                                            if (message2.reply_to_random_id != 0) {
                                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                tL_decryptedMessage.flags |= 8;
                                                            }
                                                            if (!(hashMap4 == null || hashMap4.get("bot_name") == null)) {
                                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                tL_decryptedMessage.flags |= 2048;
                                                            }
                                                            tL_decryptedMessage.random_id = message2.random_id;
                                                            tL_decryptedMessage.message = str8;
                                                            webPage4 = webPage3;
                                                            if (webPage4 != null || webPage4.url == null) {
                                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                            } else {
                                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaWebPage();
                                                                tL_decryptedMessage.media.url = webPage4.url;
                                                                tL_decryptedMessage.flags |= 512;
                                                            }
                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        } else if (arrayList7 == null) {
                                                            tLObject = new TL_messages_sendBroadcast();
                                                            arrayList8 = new ArrayList();
                                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                            }
                                                            tLObject.message = str6;
                                                            tLObject.contacts = arrayList7;
                                                            tLObject.media = new TL_inputMediaEmpty();
                                                            tLObject.random_id = arrayList8;
                                                            performSendMessageRequest(tLObject, messageObject7, null);
                                                        } else {
                                                            str8 = str6;
                                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                            tL_messages_forwardMessages.message = str8;
                                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder3 = new StringBuilder();
                                                                stringBuilder3.append("silent_");
                                                                stringBuilder3.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                            if (message2.reply_to_msg_id != 0) {
                                                                tL_messages_forwardMessages.flags |= 1;
                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                            }
                                                            if (!z) {
                                                                tL_messages_forwardMessages.no_webpage = true;
                                                            }
                                                            if (!(arrayList2 == null || arrayList.isEmpty())) {
                                                                tL_messages_forwardMessages.entities = arrayList2;
                                                                tL_messages_forwardMessages.flags |= 8;
                                                            }
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        }
                                                    }
                                                }
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                                obj = null;
                                                if (longValue != 0) {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                } else {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        } else {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                }
                                            }
                                        }
                                        messageMedia5 = messageMedia4;
                                        tL_photo5 = tL_photo4;
                                        z3 = z2;
                                        message2.to_id = new TL_peerUser();
                                        if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                            message2.to_id.user_id = encryptedChat.admin_id;
                                        } else {
                                            message2.to_id.user_id = encryptedChat.participant_id;
                                        }
                                        if (i10 == 0) {
                                            message2.ttl = i10;
                                        } else {
                                            message2.ttl = encryptedChat.ttl;
                                            if (message2.ttl != 0) {
                                                if (message2.media != null) {
                                                    message2.media.ttl_seconds = message2.ttl;
                                                    messageMedia4 = message2.media;
                                                    messageMedia4.flags |= 4;
                                                }
                                            }
                                        }
                                        if (message2.ttl != 0) {
                                            if (message2.media.document != null) {
                                                if (MessageObject.isVoiceMessage(message2)) {
                                                    for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                        documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                        if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                            i2 = documentAttribute.duration;
                                                            break;
                                                        }
                                                    }
                                                    i2 = 0;
                                                    message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                } else if (MessageObject.isVideoMessage(message2) || MessageObject.isRoundVideoMessage(message2)) {
                                                    for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                        documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                        if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                            i2 = documentAttribute.duration;
                                                            break;
                                                        }
                                                    }
                                                    i2 = 0;
                                                    message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                }
                                            }
                                        }
                                        z4 = true;
                                        arrayList3 = null;
                                        if (z3 != z4) {
                                            if (MessageObject.isVoiceMessage(message2)) {
                                                if (!MessageObject.isRoundVideoMessage(message2)) {
                                                    z4 = true;
                                                }
                                            }
                                            z4 = true;
                                            message2.media_unread = true;
                                        }
                                        message2.send_state = z4;
                                        messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                        messageObject7.replyMessageObject = messageObject6;
                                        messageObject7.attachPathExists = true;
                                        if (messageObject7.videoEditedInfo == null) {
                                        }
                                        if (hashMap2 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        } else {
                                            str8 = (String) hashMap2.get("groupId");
                                            if (str8 == null) {
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                            } else {
                                                arrayList4 = arrayList3;
                                                longValue = Utilities.parseLong(str8).longValue();
                                                message2.grouped_id = longValue;
                                                message2.flags |= 131072;
                                            }
                                            if (hashMap2.get("final") != null) {
                                                obj = 1;
                                                if (longValue != 0) {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                } else {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        } else {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                } else {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                }
                                            }
                                        }
                                        obj = null;
                                        if (longValue != 0) {
                                            hashMap3 = hashMap2;
                                            messageObject3 = messageObject7;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("group_");
                                            stringBuilder.append(longValue);
                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                            if (arrayList5 == null) {
                                            }
                                            if (delayedMessage == null) {
                                                delayedMessage = new DelayedMessage(j4);
                                                delayedMessage.type = 4;
                                                delayedMessage.groupId = longValue;
                                                delayedMessage.messageObjects = new ArrayList();
                                                delayedMessage.messages = new ArrayList();
                                                delayedMessage.originalPaths = new ArrayList();
                                                delayedMessage.extraHashMap = new HashMap();
                                                delayedMessage.encryptedChat = encryptedChat;
                                            }
                                            if (obj != null) {
                                                delayedMessage.finalGroupMessage = message2.id;
                                            }
                                        } else {
                                            arrayList5 = new ArrayList();
                                            arrayList5.add(messageObject7);
                                            arrayList6 = new ArrayList();
                                            arrayList6.add(message2);
                                            hashMap3 = hashMap2;
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                            messageObject3 = messageObject7;
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            delayedMessage = null;
                                        }
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append("send message user_id = ");
                                        stringBuilder2.append(inputPeer.user_id);
                                        stringBuilder2.append(" chat_id = ");
                                        stringBuilder2.append(inputPeer.chat_id);
                                        stringBuilder2.append(" channel_id = ");
                                        stringBuilder2.append(inputPeer.channel_id);
                                        stringBuilder2.append(" access_hash = ");
                                        stringBuilder2.append(inputPeer.access_hash);
                                        FileLog.m0d(stringBuilder2.toString());
                                        if (i5 != 0) {
                                            if (i5 == 9) {
                                            }
                                            if (i5 >= 1) {
                                            }
                                            j5 = j4;
                                            i4 = i5;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            if (i4 != 4) {
                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                if (messageObject8.messageOwner.ttl == 0) {
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                } else {
                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                    if (chat2 != null) {
                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                    }
                                                }
                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                if (messageObject2.getId() < 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            } else if (i4 == 9) {
                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                if (messageObject8 == null) {
                                                    tL_messages_forwardMessages.clear_draft = true;
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            }
                                        }
                                        j5 = j4;
                                        arrayList7 = arrayList4;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        arrayList2 = arrayList;
                                        if (encryptedChat != null) {
                                            str8 = str6;
                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                            } else {
                                                tL_decryptedMessage = new TL_decryptedMessage();
                                            }
                                            tL_decryptedMessage.ttl = message2.ttl;
                                            tL_decryptedMessage.entities = arrayList2;
                                            tL_decryptedMessage.flags |= 128;
                                            if (message2.reply_to_random_id != 0) {
                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                tL_decryptedMessage.flags |= 8;
                                            }
                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                            tL_decryptedMessage.flags |= 2048;
                                            tL_decryptedMessage.random_id = message2.random_id;
                                            tL_decryptedMessage.message = str8;
                                            webPage4 = webPage3;
                                            if (webPage4 != null) {
                                            }
                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else if (arrayList7 == null) {
                                            str8 = str6;
                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                            tL_messages_forwardMessages.message = str8;
                                            if (messageObject8 != null) {
                                            }
                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append("silent_");
                                                stringBuilder3.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                            }
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (z) {
                                                tL_messages_forwardMessages.no_webpage = true;
                                            }
                                            tL_messages_forwardMessages.entities = arrayList2;
                                            tL_messages_forwardMessages.flags |= 8;
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else {
                                            tLObject = new TL_messages_sendBroadcast();
                                            arrayList8 = new ArrayList();
                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                            }
                                            tLObject.message = str6;
                                            tLObject.contacts = arrayList7;
                                            tLObject.media = new TL_inputMediaEmpty();
                                            tLObject.random_id = arrayList8;
                                            performSendMessageRequest(tLObject, messageObject7, null);
                                        }
                                    } else if (messageObject5.type == 1) {
                                        tL_photo3 = (TL_photo) message2.media.photo;
                                        i4 = 2;
                                        document = tL_document;
                                        user3 = user;
                                        messageMedia3 = messageMedia;
                                        if (hashMap2 == null) {
                                        }
                                        str6 = str4;
                                        i5 = i4;
                                        i10 = i2;
                                        webPage3 = webPage2;
                                        document2 = document;
                                        str7 = str10;
                                        user4 = user3;
                                        messageMedia4 = messageMedia3;
                                        tL_photo4 = tL_photo3;
                                        if (message2.random_id == 0) {
                                            message2.random_id = getNextRandomId();
                                        }
                                        if (encryptedChat == null) {
                                            message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                        } else {
                                            message2.via_bot_name = (String) hashMap2.get("bot_name");
                                            if (message2.via_bot_name == null) {
                                                message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                            }
                                        }
                                        message2.flags |= 2048;
                                        message2.params = hashMap2;
                                        if (messageObject5 != null) {
                                        }
                                        message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                        if (inputPeer instanceof TL_inputPeerChannel) {
                                            message2.unread = true;
                                        } else {
                                            if (obj != null) {
                                                message2.views = 1;
                                                message2.flags |= 1024;
                                            }
                                            chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                            if (chat != null) {
                                                if (chat.megagroup) {
                                                    message2.post = true;
                                                    if (chat.signatures) {
                                                        message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                                    }
                                                } else {
                                                    message2.flags |= Integer.MIN_VALUE;
                                                    message2.unread = true;
                                                }
                                            }
                                        }
                                        message2.flags |= 512;
                                        j4 = j;
                                        message2.dialog_id = j4;
                                        messageObject6 = messageObject;
                                        if (messageObject6 == null) {
                                            user5 = user4;
                                        } else {
                                            if (encryptedChat == null) {
                                                user5 = user4;
                                            } else {
                                                user5 = user4;
                                                if (messageObject6.messageOwner.random_id != 0) {
                                                    message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                                    message2.flags |= 8;
                                                    message2.reply_to_msg_id = messageObject.getId();
                                                }
                                            }
                                            message2.flags |= 8;
                                            message2.reply_to_msg_id = messageObject.getId();
                                        }
                                        replyMarkup2 = replyMarkup;
                                        message2.flags |= 64;
                                        message2.reply_markup = replyMarkup2;
                                        if (i3 == 0) {
                                            messageMedia5 = messageMedia4;
                                            tL_photo5 = tL_photo4;
                                            z3 = z2;
                                            message2.to_id = new TL_peerUser();
                                            if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                                message2.to_id.user_id = encryptedChat.participant_id;
                                            } else {
                                                message2.to_id.user_id = encryptedChat.admin_id;
                                            }
                                            if (i10 == 0) {
                                                message2.ttl = encryptedChat.ttl;
                                                if (message2.ttl != 0) {
                                                    if (message2.media != null) {
                                                        message2.media.ttl_seconds = message2.ttl;
                                                        messageMedia4 = message2.media;
                                                        messageMedia4.flags |= 4;
                                                    }
                                                }
                                            } else {
                                                message2.ttl = i10;
                                            }
                                            if (message2.ttl != 0) {
                                                if (message2.media.document != null) {
                                                    if (MessageObject.isVoiceMessage(message2)) {
                                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                            if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                                i2 = documentAttribute.duration;
                                                                break;
                                                            }
                                                        }
                                                        i2 = 0;
                                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                    } else {
                                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                            if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                                i2 = documentAttribute.duration;
                                                                break;
                                                            }
                                                        }
                                                        i2 = 0;
                                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                    }
                                                }
                                            }
                                        } else {
                                            z3 = z2;
                                            if (!z3) {
                                                messageMedia5 = messageMedia4;
                                                tL_photo5 = tL_photo4;
                                                i6 = i3;
                                                message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                                if (i6 > 0) {
                                                    user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                                    if (user6 != null) {
                                                        processSentMessage(message2.id);
                                                        return;
                                                    } else if (user6.bot) {
                                                        message2.unread = false;
                                                    }
                                                }
                                            } else if (sendMessagesHelper.currentChatInfo != null) {
                                                arrayList3 = new ArrayList();
                                                tL_photo5 = tL_photo4;
                                                it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                                while (it.hasNext()) {
                                                    it2 = it;
                                                    messageMedia5 = messageMedia4;
                                                    inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                    if (inputUser == null) {
                                                        arrayList3.add(inputUser);
                                                    }
                                                    it = it2;
                                                    messageMedia4 = messageMedia5;
                                                }
                                                messageMedia5 = messageMedia4;
                                                message2.to_id = new TL_peerChat();
                                                message2.to_id.chat_id = i3;
                                                z4 = true;
                                                if (z3 != z4) {
                                                    if (MessageObject.isVoiceMessage(message2)) {
                                                        if (!MessageObject.isRoundVideoMessage(message2)) {
                                                            z4 = true;
                                                        }
                                                    }
                                                    z4 = true;
                                                    message2.media_unread = true;
                                                }
                                                message2.send_state = z4;
                                                messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                messageObject7.replyMessageObject = messageObject6;
                                                messageObject7.attachPathExists = true;
                                                if (messageObject7.videoEditedInfo == null) {
                                                }
                                                if (hashMap2 == null) {
                                                    str8 = (String) hashMap2.get("groupId");
                                                    if (str8 == null) {
                                                        arrayList4 = arrayList3;
                                                        longValue = Utilities.parseLong(str8).longValue();
                                                        message2.grouped_id = longValue;
                                                        message2.flags |= 131072;
                                                    } else {
                                                        arrayList4 = arrayList3;
                                                        longValue = 0;
                                                    }
                                                    if (hashMap2.get("final") != null) {
                                                        obj = 1;
                                                        if (longValue != 0) {
                                                            arrayList5 = new ArrayList();
                                                            arrayList5.add(messageObject7);
                                                            arrayList6 = new ArrayList();
                                                            arrayList6.add(message2);
                                                            hashMap3 = hashMap2;
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                            messageObject3 = messageObject7;
                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                            delayedMessage = null;
                                                        } else {
                                                            hashMap3 = hashMap2;
                                                            messageObject3 = messageObject7;
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("group_");
                                                            stringBuilder.append(longValue);
                                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                            if (arrayList5 == null) {
                                                            }
                                                            if (delayedMessage == null) {
                                                                delayedMessage = new DelayedMessage(j4);
                                                                delayedMessage.type = 4;
                                                                delayedMessage.groupId = longValue;
                                                                delayedMessage.messageObjects = new ArrayList();
                                                                delayedMessage.messages = new ArrayList();
                                                                delayedMessage.originalPaths = new ArrayList();
                                                                delayedMessage.extraHashMap = new HashMap();
                                                                delayedMessage.encryptedChat = encryptedChat;
                                                            }
                                                            if (obj != null) {
                                                                delayedMessage.finalGroupMessage = message2.id;
                                                            }
                                                        }
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append("send message user_id = ");
                                                        stringBuilder2.append(inputPeer.user_id);
                                                        stringBuilder2.append(" chat_id = ");
                                                        stringBuilder2.append(inputPeer.chat_id);
                                                        stringBuilder2.append(" channel_id = ");
                                                        stringBuilder2.append(inputPeer.channel_id);
                                                        stringBuilder2.append(" access_hash = ");
                                                        stringBuilder2.append(inputPeer.access_hash);
                                                        FileLog.m0d(stringBuilder2.toString());
                                                        if (i5 != 0) {
                                                            if (i5 == 9) {
                                                            }
                                                            if (i5 >= 1) {
                                                            }
                                                            j5 = j4;
                                                            i4 = i5;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            if (i4 != 4) {
                                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                if (messageObject8.messageOwner.ttl == 0) {
                                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                    if (chat2 != null) {
                                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                    }
                                                                } else {
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                }
                                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                if (messageObject2.getId() < 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            } else if (i4 == 9) {
                                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                if (messageObject8 == null) {
                                                                    tL_messages_forwardMessages.clear_draft = true;
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            }
                                                        }
                                                        j5 = j4;
                                                        arrayList7 = arrayList4;
                                                        hashMap4 = hashMap3;
                                                        messageObject7 = messageObject3;
                                                        messageObject8 = messageObject2;
                                                        arrayList2 = arrayList;
                                                        if (encryptedChat != null) {
                                                            str8 = str6;
                                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                tL_decryptedMessage = new TL_decryptedMessage();
                                                            } else {
                                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                            }
                                                            tL_decryptedMessage.ttl = message2.ttl;
                                                            tL_decryptedMessage.entities = arrayList2;
                                                            tL_decryptedMessage.flags |= 128;
                                                            if (message2.reply_to_random_id != 0) {
                                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                tL_decryptedMessage.flags |= 8;
                                                            }
                                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                            tL_decryptedMessage.flags |= 2048;
                                                            tL_decryptedMessage.random_id = message2.random_id;
                                                            tL_decryptedMessage.message = str8;
                                                            webPage4 = webPage3;
                                                            if (webPage4 != null) {
                                                            }
                                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        } else if (arrayList7 == null) {
                                                            tLObject = new TL_messages_sendBroadcast();
                                                            arrayList8 = new ArrayList();
                                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                            }
                                                            tLObject.message = str6;
                                                            tLObject.contacts = arrayList7;
                                                            tLObject.media = new TL_inputMediaEmpty();
                                                            tLObject.random_id = arrayList8;
                                                            performSendMessageRequest(tLObject, messageObject7, null);
                                                        } else {
                                                            str8 = str6;
                                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                            tL_messages_forwardMessages.message = str8;
                                                            if (messageObject8 != null) {
                                                            }
                                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder3 = new StringBuilder();
                                                                stringBuilder3.append("silent_");
                                                                stringBuilder3.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                            if (message2.reply_to_msg_id != 0) {
                                                                tL_messages_forwardMessages.flags |= 1;
                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                            }
                                                            if (z) {
                                                                tL_messages_forwardMessages.no_webpage = true;
                                                            }
                                                            tL_messages_forwardMessages.entities = arrayList2;
                                                            tL_messages_forwardMessages.flags |= 8;
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        }
                                                    }
                                                }
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                                obj = null;
                                                if (longValue != 0) {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                } else {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        } else {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                }
                                            } else {
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                processSentMessage(message2.id);
                                                return;
                                            }
                                        }
                                        z4 = true;
                                        arrayList3 = null;
                                        if (z3 != z4) {
                                            if (MessageObject.isVoiceMessage(message2)) {
                                                if (!MessageObject.isRoundVideoMessage(message2)) {
                                                    z4 = true;
                                                }
                                            }
                                            z4 = true;
                                            message2.media_unread = true;
                                        }
                                        message2.send_state = z4;
                                        messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                        messageObject7.replyMessageObject = messageObject6;
                                        messageObject7.attachPathExists = true;
                                        if (messageObject7.videoEditedInfo == null) {
                                        }
                                        if (hashMap2 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        } else {
                                            str8 = (String) hashMap2.get("groupId");
                                            if (str8 == null) {
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                            } else {
                                                arrayList4 = arrayList3;
                                                longValue = Utilities.parseLong(str8).longValue();
                                                message2.grouped_id = longValue;
                                                message2.flags |= 131072;
                                            }
                                            if (hashMap2.get("final") != null) {
                                                obj = 1;
                                                if (longValue != 0) {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                } else {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        } else {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                } else {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                }
                                            }
                                        }
                                        obj = null;
                                        if (longValue != 0) {
                                            hashMap3 = hashMap2;
                                            messageObject3 = messageObject7;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("group_");
                                            stringBuilder.append(longValue);
                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                            if (arrayList5 == null) {
                                            }
                                            if (delayedMessage == null) {
                                                delayedMessage = new DelayedMessage(j4);
                                                delayedMessage.type = 4;
                                                delayedMessage.groupId = longValue;
                                                delayedMessage.messageObjects = new ArrayList();
                                                delayedMessage.messages = new ArrayList();
                                                delayedMessage.originalPaths = new ArrayList();
                                                delayedMessage.extraHashMap = new HashMap();
                                                delayedMessage.encryptedChat = encryptedChat;
                                            }
                                            if (obj != null) {
                                                delayedMessage.finalGroupMessage = message2.id;
                                            }
                                        } else {
                                            arrayList5 = new ArrayList();
                                            arrayList5.add(messageObject7);
                                            arrayList6 = new ArrayList();
                                            arrayList6.add(message2);
                                            hashMap3 = hashMap2;
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                            messageObject3 = messageObject7;
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            delayedMessage = null;
                                        }
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append("send message user_id = ");
                                        stringBuilder2.append(inputPeer.user_id);
                                        stringBuilder2.append(" chat_id = ");
                                        stringBuilder2.append(inputPeer.chat_id);
                                        stringBuilder2.append(" channel_id = ");
                                        stringBuilder2.append(inputPeer.channel_id);
                                        stringBuilder2.append(" access_hash = ");
                                        stringBuilder2.append(inputPeer.access_hash);
                                        FileLog.m0d(stringBuilder2.toString());
                                        if (i5 != 0) {
                                            if (i5 == 9) {
                                            }
                                            if (i5 >= 1) {
                                            }
                                            j5 = j4;
                                            i4 = i5;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            if (i4 != 4) {
                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                if (messageObject8.messageOwner.ttl == 0) {
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                } else {
                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                    if (chat2 != null) {
                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                    }
                                                }
                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                if (messageObject2.getId() < 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            } else if (i4 == 9) {
                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                if (messageObject8 == null) {
                                                    tL_messages_forwardMessages.clear_draft = true;
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            }
                                        }
                                        j5 = j4;
                                        arrayList7 = arrayList4;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        arrayList2 = arrayList;
                                        if (encryptedChat != null) {
                                            str8 = str6;
                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                            } else {
                                                tL_decryptedMessage = new TL_decryptedMessage();
                                            }
                                            tL_decryptedMessage.ttl = message2.ttl;
                                            tL_decryptedMessage.entities = arrayList2;
                                            tL_decryptedMessage.flags |= 128;
                                            if (message2.reply_to_random_id != 0) {
                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                tL_decryptedMessage.flags |= 8;
                                            }
                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                            tL_decryptedMessage.flags |= 2048;
                                            tL_decryptedMessage.random_id = message2.random_id;
                                            tL_decryptedMessage.message = str8;
                                            webPage4 = webPage3;
                                            if (webPage4 != null) {
                                            }
                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else if (arrayList7 == null) {
                                            str8 = str6;
                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                            tL_messages_forwardMessages.message = str8;
                                            if (messageObject8 != null) {
                                            }
                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append("silent_");
                                                stringBuilder3.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                            }
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (z) {
                                                tL_messages_forwardMessages.no_webpage = true;
                                            }
                                            tL_messages_forwardMessages.entities = arrayList2;
                                            tL_messages_forwardMessages.flags |= 8;
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else {
                                            tLObject = new TL_messages_sendBroadcast();
                                            arrayList8 = new ArrayList();
                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                            }
                                            tLObject.message = str6;
                                            tLObject.contacts = arrayList7;
                                            tLObject.media = new TL_inputMediaEmpty();
                                            tLObject.random_id = arrayList8;
                                            performSendMessageRequest(tLObject, messageObject7, null);
                                        }
                                    } else {
                                        if (!(messageObject5.type == 3 || messageObject5.type == 5)) {
                                            if (videoEditedInfo == null) {
                                                if (messageObject5.type == 12) {
                                                    tL_userRequest_old2 = new TL_userRequest_old2();
                                                    tL_userRequest_old2.phone = message2.media.phone_number;
                                                    tL_userRequest_old2.first_name = message2.media.first_name;
                                                    tL_userRequest_old2.last_name = message2.media.last_name;
                                                    tL_userRequest_old2.id = message2.media.user_id;
                                                    user3 = tL_userRequest_old2;
                                                    i4 = 6;
                                                    document = tL_document;
                                                    messageMedia3 = messageMedia;
                                                    tL_photo3 = tL_photo;
                                                    if (hashMap2 == null) {
                                                    }
                                                    str6 = str4;
                                                    i5 = i4;
                                                    i10 = i2;
                                                    webPage3 = webPage2;
                                                    document2 = document;
                                                    str7 = str10;
                                                    user4 = user3;
                                                    messageMedia4 = messageMedia3;
                                                    tL_photo4 = tL_photo3;
                                                    if (message2.random_id == 0) {
                                                        message2.random_id = getNextRandomId();
                                                    }
                                                    if (encryptedChat == null) {
                                                        message2.via_bot_name = (String) hashMap2.get("bot_name");
                                                        if (message2.via_bot_name == null) {
                                                            message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                                        }
                                                    } else {
                                                        message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                                    }
                                                    message2.flags |= 2048;
                                                    message2.params = hashMap2;
                                                    if (messageObject5 != null) {
                                                    }
                                                    message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                                    if (inputPeer instanceof TL_inputPeerChannel) {
                                                        if (obj != null) {
                                                            message2.views = 1;
                                                            message2.flags |= 1024;
                                                        }
                                                        chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                                        if (chat != null) {
                                                            if (chat.megagroup) {
                                                                message2.flags |= Integer.MIN_VALUE;
                                                                message2.unread = true;
                                                            } else {
                                                                message2.post = true;
                                                                if (chat.signatures) {
                                                                    message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        message2.unread = true;
                                                    }
                                                    message2.flags |= 512;
                                                    j4 = j;
                                                    message2.dialog_id = j4;
                                                    messageObject6 = messageObject;
                                                    if (messageObject6 == null) {
                                                        if (encryptedChat == null) {
                                                            user5 = user4;
                                                            if (messageObject6.messageOwner.random_id != 0) {
                                                                message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                                                message2.flags |= 8;
                                                                message2.reply_to_msg_id = messageObject.getId();
                                                            }
                                                        } else {
                                                            user5 = user4;
                                                        }
                                                        message2.flags |= 8;
                                                        message2.reply_to_msg_id = messageObject.getId();
                                                    } else {
                                                        user5 = user4;
                                                    }
                                                    replyMarkup2 = replyMarkup;
                                                    message2.flags |= 64;
                                                    message2.reply_markup = replyMarkup2;
                                                    if (i3 == 0) {
                                                        z3 = z2;
                                                        if (!z3) {
                                                            messageMedia5 = messageMedia4;
                                                            tL_photo5 = tL_photo4;
                                                            i6 = i3;
                                                            message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                                            if (i6 > 0) {
                                                                user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                                                if (user6 != null) {
                                                                    processSentMessage(message2.id);
                                                                    return;
                                                                } else if (user6.bot) {
                                                                    message2.unread = false;
                                                                }
                                                            }
                                                        } else if (sendMessagesHelper.currentChatInfo != null) {
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                            processSentMessage(message2.id);
                                                            return;
                                                        } else {
                                                            arrayList3 = new ArrayList();
                                                            tL_photo5 = tL_photo4;
                                                            it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                                            while (it.hasNext()) {
                                                                it2 = it;
                                                                messageMedia5 = messageMedia4;
                                                                inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                                if (inputUser == null) {
                                                                    arrayList3.add(inputUser);
                                                                }
                                                                it = it2;
                                                                messageMedia4 = messageMedia5;
                                                            }
                                                            messageMedia5 = messageMedia4;
                                                            message2.to_id = new TL_peerChat();
                                                            message2.to_id.chat_id = i3;
                                                            z4 = true;
                                                            if (z3 != z4) {
                                                                if (MessageObject.isVoiceMessage(message2)) {
                                                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                                                        z4 = true;
                                                                    }
                                                                }
                                                                z4 = true;
                                                                message2.media_unread = true;
                                                            }
                                                            message2.send_state = z4;
                                                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                            messageObject7.replyMessageObject = messageObject6;
                                                            messageObject7.attachPathExists = true;
                                                            if (messageObject7.videoEditedInfo == null) {
                                                            }
                                                            if (hashMap2 == null) {
                                                                str8 = (String) hashMap2.get("groupId");
                                                                if (str8 == null) {
                                                                    arrayList4 = arrayList3;
                                                                    longValue = Utilities.parseLong(str8).longValue();
                                                                    message2.grouped_id = longValue;
                                                                    message2.flags |= 131072;
                                                                } else {
                                                                    arrayList4 = arrayList3;
                                                                    longValue = 0;
                                                                }
                                                                if (hashMap2.get("final") != null) {
                                                                    obj = 1;
                                                                    if (longValue != 0) {
                                                                        arrayList5 = new ArrayList();
                                                                        arrayList5.add(messageObject7);
                                                                        arrayList6 = new ArrayList();
                                                                        arrayList6.add(message2);
                                                                        hashMap3 = hashMap2;
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                        messageObject3 = messageObject7;
                                                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                        delayedMessage = null;
                                                                    } else {
                                                                        hashMap3 = hashMap2;
                                                                        messageObject3 = messageObject7;
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("group_");
                                                                        stringBuilder.append(longValue);
                                                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                        if (arrayList5 == null) {
                                                                        }
                                                                        if (delayedMessage == null) {
                                                                            delayedMessage = new DelayedMessage(j4);
                                                                            delayedMessage.type = 4;
                                                                            delayedMessage.groupId = longValue;
                                                                            delayedMessage.messageObjects = new ArrayList();
                                                                            delayedMessage.messages = new ArrayList();
                                                                            delayedMessage.originalPaths = new ArrayList();
                                                                            delayedMessage.extraHashMap = new HashMap();
                                                                            delayedMessage.encryptedChat = encryptedChat;
                                                                        }
                                                                        if (obj != null) {
                                                                            delayedMessage.finalGroupMessage = message2.id;
                                                                        }
                                                                    }
                                                                    stringBuilder2 = new StringBuilder();
                                                                    stringBuilder2.append("send message user_id = ");
                                                                    stringBuilder2.append(inputPeer.user_id);
                                                                    stringBuilder2.append(" chat_id = ");
                                                                    stringBuilder2.append(inputPeer.chat_id);
                                                                    stringBuilder2.append(" channel_id = ");
                                                                    stringBuilder2.append(inputPeer.channel_id);
                                                                    stringBuilder2.append(" access_hash = ");
                                                                    stringBuilder2.append(inputPeer.access_hash);
                                                                    FileLog.m0d(stringBuilder2.toString());
                                                                    if (i5 != 0) {
                                                                        if (i5 == 9) {
                                                                        }
                                                                        if (i5 >= 1) {
                                                                        }
                                                                        j5 = j4;
                                                                        i4 = i5;
                                                                        hashMap4 = hashMap3;
                                                                        messageObject7 = messageObject3;
                                                                        messageObject8 = messageObject2;
                                                                        if (i4 != 4) {
                                                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                            if (messageObject8.messageOwner.ttl == 0) {
                                                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                                if (chat2 != null) {
                                                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                                }
                                                                            } else {
                                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                            }
                                                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("silent_");
                                                                                stringBuilder.append(j5);
                                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                            }
                                                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                            if (messageObject2.getId() < 0) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                            }
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        } else if (i4 == 9) {
                                                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                                            if (message2.reply_to_msg_id != 0) {
                                                                                tL_messages_forwardMessages.flags |= 1;
                                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                            }
                                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("silent_");
                                                                                stringBuilder.append(j5);
                                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                            }
                                                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                            if (messageObject8 == null) {
                                                                                tL_messages_forwardMessages.clear_draft = true;
                                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                            }
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        }
                                                                    }
                                                                    j5 = j4;
                                                                    arrayList7 = arrayList4;
                                                                    hashMap4 = hashMap3;
                                                                    messageObject7 = messageObject3;
                                                                    messageObject8 = messageObject2;
                                                                    arrayList2 = arrayList;
                                                                    if (encryptedChat != null) {
                                                                        str8 = str6;
                                                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                            tL_decryptedMessage = new TL_decryptedMessage();
                                                                        } else {
                                                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                        }
                                                                        tL_decryptedMessage.ttl = message2.ttl;
                                                                        tL_decryptedMessage.entities = arrayList2;
                                                                        tL_decryptedMessage.flags |= 128;
                                                                        if (message2.reply_to_random_id != 0) {
                                                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                            tL_decryptedMessage.flags |= 8;
                                                                        }
                                                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                        tL_decryptedMessage.flags |= 2048;
                                                                        tL_decryptedMessage.random_id = message2.random_id;
                                                                        tL_decryptedMessage.message = str8;
                                                                        webPage4 = webPage3;
                                                                        if (webPage4 != null) {
                                                                        }
                                                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                        if (messageObject8 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                    } else if (arrayList7 == null) {
                                                                        tLObject = new TL_messages_sendBroadcast();
                                                                        arrayList8 = new ArrayList();
                                                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                        }
                                                                        tLObject.message = str6;
                                                                        tLObject.contacts = arrayList7;
                                                                        tLObject.media = new TL_inputMediaEmpty();
                                                                        tLObject.random_id = arrayList8;
                                                                        performSendMessageRequest(tLObject, messageObject7, null);
                                                                    } else {
                                                                        str8 = str6;
                                                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                        tL_messages_forwardMessages.message = str8;
                                                                        if (messageObject8 != null) {
                                                                        }
                                                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder3 = new StringBuilder();
                                                                            stringBuilder3.append("silent_");
                                                                            stringBuilder3.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                                        if (message2.reply_to_msg_id != 0) {
                                                                            tL_messages_forwardMessages.flags |= 1;
                                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                        }
                                                                        if (z) {
                                                                            tL_messages_forwardMessages.no_webpage = true;
                                                                        }
                                                                        tL_messages_forwardMessages.entities = arrayList2;
                                                                        tL_messages_forwardMessages.flags |= 8;
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        if (messageObject8 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            arrayList4 = arrayList3;
                                                            longValue = 0;
                                                            obj = null;
                                                            if (longValue != 0) {
                                                                hashMap3 = hashMap2;
                                                                messageObject3 = messageObject7;
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append("group_");
                                                                stringBuilder.append(longValue);
                                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                if (arrayList5 == null) {
                                                                }
                                                                if (delayedMessage == null) {
                                                                    delayedMessage = new DelayedMessage(j4);
                                                                    delayedMessage.type = 4;
                                                                    delayedMessage.groupId = longValue;
                                                                    delayedMessage.messageObjects = new ArrayList();
                                                                    delayedMessage.messages = new ArrayList();
                                                                    delayedMessage.originalPaths = new ArrayList();
                                                                    delayedMessage.extraHashMap = new HashMap();
                                                                    delayedMessage.encryptedChat = encryptedChat;
                                                                }
                                                                if (obj != null) {
                                                                    delayedMessage.finalGroupMessage = message2.id;
                                                                }
                                                            } else {
                                                                arrayList5 = new ArrayList();
                                                                arrayList5.add(messageObject7);
                                                                arrayList6 = new ArrayList();
                                                                arrayList6.add(message2);
                                                                hashMap3 = hashMap2;
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                messageObject3 = messageObject7;
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                delayedMessage = null;
                                                            }
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append("send message user_id = ");
                                                            stringBuilder2.append(inputPeer.user_id);
                                                            stringBuilder2.append(" chat_id = ");
                                                            stringBuilder2.append(inputPeer.chat_id);
                                                            stringBuilder2.append(" channel_id = ");
                                                            stringBuilder2.append(inputPeer.channel_id);
                                                            stringBuilder2.append(" access_hash = ");
                                                            stringBuilder2.append(inputPeer.access_hash);
                                                            FileLog.m0d(stringBuilder2.toString());
                                                            if (i5 != 0) {
                                                                if (i5 == 9) {
                                                                }
                                                                if (i5 >= 1) {
                                                                }
                                                                j5 = j4;
                                                                i4 = i5;
                                                                hashMap4 = hashMap3;
                                                                messageObject7 = messageObject3;
                                                                messageObject8 = messageObject2;
                                                                if (i4 != 4) {
                                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                    } else {
                                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                        if (chat2 != null) {
                                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                        }
                                                                    }
                                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("silent_");
                                                                        stringBuilder.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                    if (messageObject2.getId() < 0) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                    }
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                } else if (i4 == 9) {
                                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                                    if (message2.reply_to_msg_id != 0) {
                                                                        tL_messages_forwardMessages.flags |= 1;
                                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                    }
                                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("silent_");
                                                                        stringBuilder.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                    if (messageObject8 == null) {
                                                                        tL_messages_forwardMessages.clear_draft = true;
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                    }
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                }
                                                            }
                                                            j5 = j4;
                                                            arrayList7 = arrayList4;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            arrayList2 = arrayList;
                                                            if (encryptedChat != null) {
                                                                str8 = str6;
                                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                } else {
                                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                                }
                                                                tL_decryptedMessage.ttl = message2.ttl;
                                                                tL_decryptedMessage.entities = arrayList2;
                                                                tL_decryptedMessage.flags |= 128;
                                                                if (message2.reply_to_random_id != 0) {
                                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                    tL_decryptedMessage.flags |= 8;
                                                                }
                                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                tL_decryptedMessage.flags |= 2048;
                                                                tL_decryptedMessage.random_id = message2.random_id;
                                                                tL_decryptedMessage.message = str8;
                                                                webPage4 = webPage3;
                                                                if (webPage4 != null) {
                                                                }
                                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                if (messageObject8 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                            } else if (arrayList7 == null) {
                                                                str8 = str6;
                                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                tL_messages_forwardMessages.message = str8;
                                                                if (messageObject8 != null) {
                                                                }
                                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder3 = new StringBuilder();
                                                                    stringBuilder3.append("silent_");
                                                                    stringBuilder3.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (z) {
                                                                    tL_messages_forwardMessages.no_webpage = true;
                                                                }
                                                                tL_messages_forwardMessages.entities = arrayList2;
                                                                tL_messages_forwardMessages.flags |= 8;
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                if (messageObject8 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                            } else {
                                                                tLObject = new TL_messages_sendBroadcast();
                                                                arrayList8 = new ArrayList();
                                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                }
                                                                tLObject.message = str6;
                                                                tLObject.contacts = arrayList7;
                                                                tLObject.media = new TL_inputMediaEmpty();
                                                                tLObject.random_id = arrayList8;
                                                                performSendMessageRequest(tLObject, messageObject7, null);
                                                            }
                                                        }
                                                    }
                                                    messageMedia5 = messageMedia4;
                                                    tL_photo5 = tL_photo4;
                                                    z3 = z2;
                                                    message2.to_id = new TL_peerUser();
                                                    if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                                        message2.to_id.user_id = encryptedChat.admin_id;
                                                    } else {
                                                        message2.to_id.user_id = encryptedChat.participant_id;
                                                    }
                                                    if (i10 == 0) {
                                                        message2.ttl = i10;
                                                    } else {
                                                        message2.ttl = encryptedChat.ttl;
                                                        if (message2.ttl != 0) {
                                                            if (message2.media != null) {
                                                                message2.media.ttl_seconds = message2.ttl;
                                                                messageMedia4 = message2.media;
                                                                messageMedia4.flags |= 4;
                                                            }
                                                        }
                                                    }
                                                    if (message2.ttl != 0) {
                                                        if (message2.media.document != null) {
                                                            if (MessageObject.isVoiceMessage(message2)) {
                                                                for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                                    documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                                    if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                                        i2 = documentAttribute.duration;
                                                                        break;
                                                                    }
                                                                }
                                                                i2 = 0;
                                                                message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                            } else {
                                                                for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                                    documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                                    if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                                        i2 = documentAttribute.duration;
                                                                        break;
                                                                    }
                                                                }
                                                                i2 = 0;
                                                                message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                            }
                                                        }
                                                    }
                                                    z4 = true;
                                                    arrayList3 = null;
                                                    if (z3 != z4) {
                                                        if (MessageObject.isVoiceMessage(message2)) {
                                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                                z4 = true;
                                                            }
                                                        }
                                                        z4 = true;
                                                        message2.media_unread = true;
                                                    }
                                                    message2.send_state = z4;
                                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                    messageObject7.replyMessageObject = messageObject6;
                                                    messageObject7.attachPathExists = true;
                                                    if (messageObject7.videoEditedInfo == null) {
                                                    }
                                                    if (hashMap2 == null) {
                                                        arrayList4 = arrayList3;
                                                        longValue = 0;
                                                    } else {
                                                        str8 = (String) hashMap2.get("groupId");
                                                        if (str8 == null) {
                                                            arrayList4 = arrayList3;
                                                            longValue = 0;
                                                        } else {
                                                            arrayList4 = arrayList3;
                                                            longValue = Utilities.parseLong(str8).longValue();
                                                            message2.grouped_id = longValue;
                                                            message2.flags |= 131072;
                                                        }
                                                        if (hashMap2.get("final") != null) {
                                                            obj = 1;
                                                            if (longValue != 0) {
                                                                arrayList5 = new ArrayList();
                                                                arrayList5.add(messageObject7);
                                                                arrayList6 = new ArrayList();
                                                                arrayList6.add(message2);
                                                                hashMap3 = hashMap2;
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                messageObject3 = messageObject7;
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                delayedMessage = null;
                                                            } else {
                                                                hashMap3 = hashMap2;
                                                                messageObject3 = messageObject7;
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append("group_");
                                                                stringBuilder.append(longValue);
                                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                if (arrayList5 == null) {
                                                                }
                                                                if (delayedMessage == null) {
                                                                    delayedMessage = new DelayedMessage(j4);
                                                                    delayedMessage.type = 4;
                                                                    delayedMessage.groupId = longValue;
                                                                    delayedMessage.messageObjects = new ArrayList();
                                                                    delayedMessage.messages = new ArrayList();
                                                                    delayedMessage.originalPaths = new ArrayList();
                                                                    delayedMessage.extraHashMap = new HashMap();
                                                                    delayedMessage.encryptedChat = encryptedChat;
                                                                }
                                                                if (obj != null) {
                                                                    delayedMessage.finalGroupMessage = message2.id;
                                                                }
                                                            }
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append("send message user_id = ");
                                                            stringBuilder2.append(inputPeer.user_id);
                                                            stringBuilder2.append(" chat_id = ");
                                                            stringBuilder2.append(inputPeer.chat_id);
                                                            stringBuilder2.append(" channel_id = ");
                                                            stringBuilder2.append(inputPeer.channel_id);
                                                            stringBuilder2.append(" access_hash = ");
                                                            stringBuilder2.append(inputPeer.access_hash);
                                                            FileLog.m0d(stringBuilder2.toString());
                                                            if (i5 != 0) {
                                                                if (i5 == 9) {
                                                                }
                                                                if (i5 >= 1) {
                                                                }
                                                                j5 = j4;
                                                                i4 = i5;
                                                                hashMap4 = hashMap3;
                                                                messageObject7 = messageObject3;
                                                                messageObject8 = messageObject2;
                                                                if (i4 != 4) {
                                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                        if (chat2 != null) {
                                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                        }
                                                                    } else {
                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                    }
                                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("silent_");
                                                                        stringBuilder.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                    if (messageObject2.getId() < 0) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                    }
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                } else if (i4 == 9) {
                                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                                    if (message2.reply_to_msg_id != 0) {
                                                                        tL_messages_forwardMessages.flags |= 1;
                                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                    }
                                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("silent_");
                                                                        stringBuilder.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                    if (messageObject8 == null) {
                                                                        tL_messages_forwardMessages.clear_draft = true;
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                    }
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                }
                                                            }
                                                            j5 = j4;
                                                            arrayList7 = arrayList4;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            arrayList2 = arrayList;
                                                            if (encryptedChat != null) {
                                                                str8 = str6;
                                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                                } else {
                                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                }
                                                                tL_decryptedMessage.ttl = message2.ttl;
                                                                tL_decryptedMessage.entities = arrayList2;
                                                                tL_decryptedMessage.flags |= 128;
                                                                if (message2.reply_to_random_id != 0) {
                                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                    tL_decryptedMessage.flags |= 8;
                                                                }
                                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                tL_decryptedMessage.flags |= 2048;
                                                                tL_decryptedMessage.random_id = message2.random_id;
                                                                tL_decryptedMessage.message = str8;
                                                                webPage4 = webPage3;
                                                                if (webPage4 != null) {
                                                                }
                                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                if (messageObject8 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                            } else if (arrayList7 == null) {
                                                                tLObject = new TL_messages_sendBroadcast();
                                                                arrayList8 = new ArrayList();
                                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                }
                                                                tLObject.message = str6;
                                                                tLObject.contacts = arrayList7;
                                                                tLObject.media = new TL_inputMediaEmpty();
                                                                tLObject.random_id = arrayList8;
                                                                performSendMessageRequest(tLObject, messageObject7, null);
                                                            } else {
                                                                str8 = str6;
                                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                tL_messages_forwardMessages.message = str8;
                                                                if (messageObject8 != null) {
                                                                }
                                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder3 = new StringBuilder();
                                                                    stringBuilder3.append("silent_");
                                                                    stringBuilder3.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (z) {
                                                                    tL_messages_forwardMessages.no_webpage = true;
                                                                }
                                                                tL_messages_forwardMessages.entities = arrayList2;
                                                                tL_messages_forwardMessages.flags |= 8;
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                if (messageObject8 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    obj = null;
                                                    if (longValue != 0) {
                                                        hashMap3 = hashMap2;
                                                        messageObject3 = messageObject7;
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("group_");
                                                        stringBuilder.append(longValue);
                                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                        if (arrayList5 == null) {
                                                        }
                                                        if (delayedMessage == null) {
                                                            delayedMessage = new DelayedMessage(j4);
                                                            delayedMessage.type = 4;
                                                            delayedMessage.groupId = longValue;
                                                            delayedMessage.messageObjects = new ArrayList();
                                                            delayedMessage.messages = new ArrayList();
                                                            delayedMessage.originalPaths = new ArrayList();
                                                            delayedMessage.extraHashMap = new HashMap();
                                                            delayedMessage.encryptedChat = encryptedChat;
                                                        }
                                                        if (obj != null) {
                                                            delayedMessage.finalGroupMessage = message2.id;
                                                        }
                                                    } else {
                                                        arrayList5 = new ArrayList();
                                                        arrayList5.add(messageObject7);
                                                        arrayList6 = new ArrayList();
                                                        arrayList6.add(message2);
                                                        hashMap3 = hashMap2;
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                        messageObject3 = messageObject7;
                                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                        delayedMessage = null;
                                                    }
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append("send message user_id = ");
                                                    stringBuilder2.append(inputPeer.user_id);
                                                    stringBuilder2.append(" chat_id = ");
                                                    stringBuilder2.append(inputPeer.chat_id);
                                                    stringBuilder2.append(" channel_id = ");
                                                    stringBuilder2.append(inputPeer.channel_id);
                                                    stringBuilder2.append(" access_hash = ");
                                                    stringBuilder2.append(inputPeer.access_hash);
                                                    FileLog.m0d(stringBuilder2.toString());
                                                    if (i5 != 0) {
                                                        if (i5 == 9) {
                                                        }
                                                        if (i5 >= 1) {
                                                        }
                                                        j5 = j4;
                                                        i4 = i5;
                                                        hashMap4 = hashMap3;
                                                        messageObject7 = messageObject3;
                                                        messageObject8 = messageObject2;
                                                        if (i4 != 4) {
                                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                            if (messageObject8.messageOwner.ttl == 0) {
                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                            } else {
                                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                if (chat2 != null) {
                                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                }
                                                            }
                                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append("silent_");
                                                                stringBuilder.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                            if (messageObject2.getId() < 0) {
                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                            }
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                        } else if (i4 == 9) {
                                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                            if (message2.reply_to_msg_id != 0) {
                                                                tL_messages_forwardMessages.flags |= 1;
                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                            }
                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append("silent_");
                                                                stringBuilder.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                            if (messageObject8 == null) {
                                                                tL_messages_forwardMessages.clear_draft = true;
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                        }
                                                    }
                                                    j5 = j4;
                                                    arrayList7 = arrayList4;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    arrayList2 = arrayList;
                                                    if (encryptedChat != null) {
                                                        str8 = str6;
                                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                        } else {
                                                            tL_decryptedMessage = new TL_decryptedMessage();
                                                        }
                                                        tL_decryptedMessage.ttl = message2.ttl;
                                                        tL_decryptedMessage.entities = arrayList2;
                                                        tL_decryptedMessage.flags |= 128;
                                                        if (message2.reply_to_random_id != 0) {
                                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                            tL_decryptedMessage.flags |= 8;
                                                        }
                                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                        tL_decryptedMessage.flags |= 2048;
                                                        tL_decryptedMessage.random_id = message2.random_id;
                                                        tL_decryptedMessage.message = str8;
                                                        webPage4 = webPage3;
                                                        if (webPage4 != null) {
                                                        }
                                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                        if (messageObject8 == null) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                    } else if (arrayList7 == null) {
                                                        str8 = str6;
                                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                        tL_messages_forwardMessages.message = str8;
                                                        if (messageObject8 != null) {
                                                        }
                                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder3 = new StringBuilder();
                                                            stringBuilder3.append("silent_");
                                                            stringBuilder3.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (z) {
                                                            tL_messages_forwardMessages.no_webpage = true;
                                                        }
                                                        tL_messages_forwardMessages.entities = arrayList2;
                                                        tL_messages_forwardMessages.flags |= 8;
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                        if (messageObject8 == null) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                    } else {
                                                        tLObject = new TL_messages_sendBroadcast();
                                                        arrayList8 = new ArrayList();
                                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                        }
                                                        tLObject.message = str6;
                                                        tLObject.contacts = arrayList7;
                                                        tLObject.media = new TL_inputMediaEmpty();
                                                        tLObject.random_id = arrayList8;
                                                        performSendMessageRequest(tLObject, messageObject7, null);
                                                    }
                                                }
                                                if (!(messageObject5.type == 8 || messageObject5.type == 9 || messageObject5.type == 13)) {
                                                    if (messageObject5.type != 14) {
                                                        if (messageObject5.type != 2) {
                                                            document = (TL_document) message2.media.document;
                                                            i4 = 8;
                                                            user3 = user;
                                                            messageMedia3 = messageMedia;
                                                            tL_photo3 = tL_photo;
                                                            if (hashMap2 == null) {
                                                            }
                                                            str6 = str4;
                                                            i5 = i4;
                                                            i10 = i2;
                                                            webPage3 = webPage2;
                                                            document2 = document;
                                                            str7 = str10;
                                                            user4 = user3;
                                                            messageMedia4 = messageMedia3;
                                                            tL_photo4 = tL_photo3;
                                                            if (message2.random_id == 0) {
                                                                message2.random_id = getNextRandomId();
                                                            }
                                                            if (encryptedChat == null) {
                                                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                                            } else {
                                                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                                                if (message2.via_bot_name == null) {
                                                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                                                }
                                                            }
                                                            message2.flags |= 2048;
                                                            message2.params = hashMap2;
                                                            if (messageObject5 != null) {
                                                            }
                                                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                                            if (inputPeer instanceof TL_inputPeerChannel) {
                                                                message2.unread = true;
                                                            } else {
                                                                if (obj != null) {
                                                                    message2.views = 1;
                                                                    message2.flags |= 1024;
                                                                }
                                                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                                                if (chat != null) {
                                                                    if (chat.megagroup) {
                                                                        message2.post = true;
                                                                        if (chat.signatures) {
                                                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                                                        }
                                                                    } else {
                                                                        message2.flags |= Integer.MIN_VALUE;
                                                                        message2.unread = true;
                                                                    }
                                                                }
                                                            }
                                                            message2.flags |= 512;
                                                            j4 = j;
                                                            message2.dialog_id = j4;
                                                            messageObject6 = messageObject;
                                                            if (messageObject6 == null) {
                                                                user5 = user4;
                                                            } else {
                                                                if (encryptedChat == null) {
                                                                    user5 = user4;
                                                                } else {
                                                                    user5 = user4;
                                                                    if (messageObject6.messageOwner.random_id != 0) {
                                                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                                                        message2.flags |= 8;
                                                                        message2.reply_to_msg_id = messageObject.getId();
                                                                    }
                                                                }
                                                                message2.flags |= 8;
                                                                message2.reply_to_msg_id = messageObject.getId();
                                                            }
                                                            replyMarkup2 = replyMarkup;
                                                            message2.flags |= 64;
                                                            message2.reply_markup = replyMarkup2;
                                                            if (i3 == 0) {
                                                                messageMedia5 = messageMedia4;
                                                                tL_photo5 = tL_photo4;
                                                                z3 = z2;
                                                                message2.to_id = new TL_peerUser();
                                                                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                                                    message2.to_id.user_id = encryptedChat.participant_id;
                                                                } else {
                                                                    message2.to_id.user_id = encryptedChat.admin_id;
                                                                }
                                                                if (i10 == 0) {
                                                                    message2.ttl = encryptedChat.ttl;
                                                                    if (message2.ttl != 0) {
                                                                        if (message2.media != null) {
                                                                            message2.media.ttl_seconds = message2.ttl;
                                                                            messageMedia4 = message2.media;
                                                                            messageMedia4.flags |= 4;
                                                                        }
                                                                    }
                                                                } else {
                                                                    message2.ttl = i10;
                                                                }
                                                                if (message2.ttl != 0) {
                                                                    if (message2.media.document != null) {
                                                                        if (MessageObject.isVoiceMessage(message2)) {
                                                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                                                    i2 = documentAttribute.duration;
                                                                                    break;
                                                                                }
                                                                            }
                                                                            i2 = 0;
                                                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                                        } else {
                                                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                                                    i2 = documentAttribute.duration;
                                                                                    break;
                                                                                }
                                                                            }
                                                                            i2 = 0;
                                                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                                        }
                                                                    }
                                                                }
                                                            } else {
                                                                z3 = z2;
                                                                if (!z3) {
                                                                    messageMedia5 = messageMedia4;
                                                                    tL_photo5 = tL_photo4;
                                                                    i6 = i3;
                                                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                                                    if (i6 > 0) {
                                                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                                                        if (user6 != null) {
                                                                            processSentMessage(message2.id);
                                                                            return;
                                                                        } else if (user6.bot) {
                                                                            message2.unread = false;
                                                                        }
                                                                    }
                                                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                                                    arrayList3 = new ArrayList();
                                                                    tL_photo5 = tL_photo4;
                                                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                                                    while (it.hasNext()) {
                                                                        it2 = it;
                                                                        messageMedia5 = messageMedia4;
                                                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                                        if (inputUser == null) {
                                                                            arrayList3.add(inputUser);
                                                                        }
                                                                        it = it2;
                                                                        messageMedia4 = messageMedia5;
                                                                    }
                                                                    messageMedia5 = messageMedia4;
                                                                    message2.to_id = new TL_peerChat();
                                                                    message2.to_id.chat_id = i3;
                                                                    z4 = true;
                                                                    if (z3 != z4) {
                                                                        if (MessageObject.isVoiceMessage(message2)) {
                                                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                                                z4 = true;
                                                                            }
                                                                        }
                                                                        z4 = true;
                                                                        message2.media_unread = true;
                                                                    }
                                                                    message2.send_state = z4;
                                                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                                    messageObject7.replyMessageObject = messageObject6;
                                                                    messageObject7.attachPathExists = true;
                                                                    if (messageObject7.videoEditedInfo == null) {
                                                                    }
                                                                    if (hashMap2 == null) {
                                                                        str8 = (String) hashMap2.get("groupId");
                                                                        if (str8 == null) {
                                                                            arrayList4 = arrayList3;
                                                                            longValue = Utilities.parseLong(str8).longValue();
                                                                            message2.grouped_id = longValue;
                                                                            message2.flags |= 131072;
                                                                        } else {
                                                                            arrayList4 = arrayList3;
                                                                            longValue = 0;
                                                                        }
                                                                        if (hashMap2.get("final") != null) {
                                                                            obj = 1;
                                                                            if (longValue != 0) {
                                                                                arrayList5 = new ArrayList();
                                                                                arrayList5.add(messageObject7);
                                                                                arrayList6 = new ArrayList();
                                                                                arrayList6.add(message2);
                                                                                hashMap3 = hashMap2;
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                                messageObject3 = messageObject7;
                                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                                delayedMessage = null;
                                                                            } else {
                                                                                hashMap3 = hashMap2;
                                                                                messageObject3 = messageObject7;
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("group_");
                                                                                stringBuilder.append(longValue);
                                                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                                if (arrayList5 == null) {
                                                                                }
                                                                                if (delayedMessage == null) {
                                                                                    delayedMessage = new DelayedMessage(j4);
                                                                                    delayedMessage.type = 4;
                                                                                    delayedMessage.groupId = longValue;
                                                                                    delayedMessage.messageObjects = new ArrayList();
                                                                                    delayedMessage.messages = new ArrayList();
                                                                                    delayedMessage.originalPaths = new ArrayList();
                                                                                    delayedMessage.extraHashMap = new HashMap();
                                                                                    delayedMessage.encryptedChat = encryptedChat;
                                                                                }
                                                                                if (obj != null) {
                                                                                    delayedMessage.finalGroupMessage = message2.id;
                                                                                }
                                                                            }
                                                                            stringBuilder2 = new StringBuilder();
                                                                            stringBuilder2.append("send message user_id = ");
                                                                            stringBuilder2.append(inputPeer.user_id);
                                                                            stringBuilder2.append(" chat_id = ");
                                                                            stringBuilder2.append(inputPeer.chat_id);
                                                                            stringBuilder2.append(" channel_id = ");
                                                                            stringBuilder2.append(inputPeer.channel_id);
                                                                            stringBuilder2.append(" access_hash = ");
                                                                            stringBuilder2.append(inputPeer.access_hash);
                                                                            FileLog.m0d(stringBuilder2.toString());
                                                                            if (i5 != 0) {
                                                                                if (i5 == 9) {
                                                                                }
                                                                                if (i5 >= 1) {
                                                                                }
                                                                                j5 = j4;
                                                                                i4 = i5;
                                                                                hashMap4 = hashMap3;
                                                                                messageObject7 = messageObject3;
                                                                                messageObject8 = messageObject2;
                                                                                if (i4 != 4) {
                                                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                                        if (chat2 != null) {
                                                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                                        }
                                                                                    } else {
                                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                                    }
                                                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                        stringBuilder = new StringBuilder();
                                                                                        stringBuilder.append("silent_");
                                                                                        stringBuilder.append(j5);
                                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                                    }
                                                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                                    if (messageObject2.getId() < 0) {
                                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                                    }
                                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                                } else if (i4 == 9) {
                                                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                                                    if (message2.reply_to_msg_id != 0) {
                                                                                        tL_messages_forwardMessages.flags |= 1;
                                                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                                    }
                                                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                        stringBuilder = new StringBuilder();
                                                                                        stringBuilder.append("silent_");
                                                                                        stringBuilder.append(j5);
                                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                                    }
                                                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                                    if (messageObject8 == null) {
                                                                                        tL_messages_forwardMessages.clear_draft = true;
                                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                                    }
                                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                                }
                                                                            }
                                                                            j5 = j4;
                                                                            arrayList7 = arrayList4;
                                                                            hashMap4 = hashMap3;
                                                                            messageObject7 = messageObject3;
                                                                            messageObject8 = messageObject2;
                                                                            arrayList2 = arrayList;
                                                                            if (encryptedChat != null) {
                                                                                str8 = str6;
                                                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                                                } else {
                                                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                                }
                                                                                tL_decryptedMessage.ttl = message2.ttl;
                                                                                tL_decryptedMessage.entities = arrayList2;
                                                                                tL_decryptedMessage.flags |= 128;
                                                                                if (message2.reply_to_random_id != 0) {
                                                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                                    tL_decryptedMessage.flags |= 8;
                                                                                }
                                                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                                tL_decryptedMessage.flags |= 2048;
                                                                                tL_decryptedMessage.random_id = message2.random_id;
                                                                                tL_decryptedMessage.message = str8;
                                                                                webPage4 = webPage3;
                                                                                if (webPage4 != null) {
                                                                                }
                                                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                                if (messageObject8 == null) {
                                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                                }
                                                                            } else if (arrayList7 == null) {
                                                                                tLObject = new TL_messages_sendBroadcast();
                                                                                arrayList8 = new ArrayList();
                                                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                                }
                                                                                tLObject.message = str6;
                                                                                tLObject.contacts = arrayList7;
                                                                                tLObject.media = new TL_inputMediaEmpty();
                                                                                tLObject.random_id = arrayList8;
                                                                                performSendMessageRequest(tLObject, messageObject7, null);
                                                                            } else {
                                                                                str8 = str6;
                                                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                                tL_messages_forwardMessages.message = str8;
                                                                                if (messageObject8 != null) {
                                                                                }
                                                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                    stringBuilder3 = new StringBuilder();
                                                                                    stringBuilder3.append("silent_");
                                                                                    stringBuilder3.append(j5);
                                                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                                }
                                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                                if (message2.reply_to_msg_id != 0) {
                                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                                }
                                                                                if (z) {
                                                                                    tL_messages_forwardMessages.no_webpage = true;
                                                                                }
                                                                                tL_messages_forwardMessages.entities = arrayList2;
                                                                                tL_messages_forwardMessages.flags |= 8;
                                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                                if (messageObject8 == null) {
                                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    arrayList4 = arrayList3;
                                                                    longValue = 0;
                                                                    obj = null;
                                                                    if (longValue != 0) {
                                                                        hashMap3 = hashMap2;
                                                                        messageObject3 = messageObject7;
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("group_");
                                                                        stringBuilder.append(longValue);
                                                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                        if (arrayList5 == null) {
                                                                        }
                                                                        if (delayedMessage == null) {
                                                                            delayedMessage = new DelayedMessage(j4);
                                                                            delayedMessage.type = 4;
                                                                            delayedMessage.groupId = longValue;
                                                                            delayedMessage.messageObjects = new ArrayList();
                                                                            delayedMessage.messages = new ArrayList();
                                                                            delayedMessage.originalPaths = new ArrayList();
                                                                            delayedMessage.extraHashMap = new HashMap();
                                                                            delayedMessage.encryptedChat = encryptedChat;
                                                                        }
                                                                        if (obj != null) {
                                                                            delayedMessage.finalGroupMessage = message2.id;
                                                                        }
                                                                    } else {
                                                                        arrayList5 = new ArrayList();
                                                                        arrayList5.add(messageObject7);
                                                                        arrayList6 = new ArrayList();
                                                                        arrayList6.add(message2);
                                                                        hashMap3 = hashMap2;
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                        messageObject3 = messageObject7;
                                                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                        delayedMessage = null;
                                                                    }
                                                                    stringBuilder2 = new StringBuilder();
                                                                    stringBuilder2.append("send message user_id = ");
                                                                    stringBuilder2.append(inputPeer.user_id);
                                                                    stringBuilder2.append(" chat_id = ");
                                                                    stringBuilder2.append(inputPeer.chat_id);
                                                                    stringBuilder2.append(" channel_id = ");
                                                                    stringBuilder2.append(inputPeer.channel_id);
                                                                    stringBuilder2.append(" access_hash = ");
                                                                    stringBuilder2.append(inputPeer.access_hash);
                                                                    FileLog.m0d(stringBuilder2.toString());
                                                                    if (i5 != 0) {
                                                                        if (i5 == 9) {
                                                                        }
                                                                        if (i5 >= 1) {
                                                                        }
                                                                        j5 = j4;
                                                                        i4 = i5;
                                                                        hashMap4 = hashMap3;
                                                                        messageObject7 = messageObject3;
                                                                        messageObject8 = messageObject2;
                                                                        if (i4 != 4) {
                                                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                            if (messageObject8.messageOwner.ttl == 0) {
                                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                            } else {
                                                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                                if (chat2 != null) {
                                                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                                }
                                                                            }
                                                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("silent_");
                                                                                stringBuilder.append(j5);
                                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                            }
                                                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                            if (messageObject2.getId() < 0) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                            }
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        } else if (i4 == 9) {
                                                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                                            if (message2.reply_to_msg_id != 0) {
                                                                                tL_messages_forwardMessages.flags |= 1;
                                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                            }
                                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("silent_");
                                                                                stringBuilder.append(j5);
                                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                            }
                                                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                            if (messageObject8 == null) {
                                                                                tL_messages_forwardMessages.clear_draft = true;
                                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                            }
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        }
                                                                    }
                                                                    j5 = j4;
                                                                    arrayList7 = arrayList4;
                                                                    hashMap4 = hashMap3;
                                                                    messageObject7 = messageObject3;
                                                                    messageObject8 = messageObject2;
                                                                    arrayList2 = arrayList;
                                                                    if (encryptedChat != null) {
                                                                        str8 = str6;
                                                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                        } else {
                                                                            tL_decryptedMessage = new TL_decryptedMessage();
                                                                        }
                                                                        tL_decryptedMessage.ttl = message2.ttl;
                                                                        tL_decryptedMessage.entities = arrayList2;
                                                                        tL_decryptedMessage.flags |= 128;
                                                                        if (message2.reply_to_random_id != 0) {
                                                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                            tL_decryptedMessage.flags |= 8;
                                                                        }
                                                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                        tL_decryptedMessage.flags |= 2048;
                                                                        tL_decryptedMessage.random_id = message2.random_id;
                                                                        tL_decryptedMessage.message = str8;
                                                                        webPage4 = webPage3;
                                                                        if (webPage4 != null) {
                                                                        }
                                                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                        if (messageObject8 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                    } else if (arrayList7 == null) {
                                                                        str8 = str6;
                                                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                        tL_messages_forwardMessages.message = str8;
                                                                        if (messageObject8 != null) {
                                                                        }
                                                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder3 = new StringBuilder();
                                                                            stringBuilder3.append("silent_");
                                                                            stringBuilder3.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                                        if (message2.reply_to_msg_id != 0) {
                                                                            tL_messages_forwardMessages.flags |= 1;
                                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                        }
                                                                        if (z) {
                                                                            tL_messages_forwardMessages.no_webpage = true;
                                                                        }
                                                                        tL_messages_forwardMessages.entities = arrayList2;
                                                                        tL_messages_forwardMessages.flags |= 8;
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        if (messageObject8 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                    } else {
                                                                        tLObject = new TL_messages_sendBroadcast();
                                                                        arrayList8 = new ArrayList();
                                                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                        }
                                                                        tLObject.message = str6;
                                                                        tLObject.contacts = arrayList7;
                                                                        tLObject.media = new TL_inputMediaEmpty();
                                                                        tLObject.random_id = arrayList8;
                                                                        performSendMessageRequest(tLObject, messageObject7, null);
                                                                    }
                                                                } else {
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                                    processSentMessage(message2.id);
                                                                    return;
                                                                }
                                                            }
                                                            z4 = true;
                                                            arrayList3 = null;
                                                            if (z3 != z4) {
                                                                if (MessageObject.isVoiceMessage(message2)) {
                                                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                                                        z4 = true;
                                                                    }
                                                                }
                                                                z4 = true;
                                                                message2.media_unread = true;
                                                            }
                                                            message2.send_state = z4;
                                                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                            messageObject7.replyMessageObject = messageObject6;
                                                            messageObject7.attachPathExists = true;
                                                            if (messageObject7.videoEditedInfo == null) {
                                                            }
                                                            if (hashMap2 == null) {
                                                                arrayList4 = arrayList3;
                                                                longValue = 0;
                                                            } else {
                                                                str8 = (String) hashMap2.get("groupId");
                                                                if (str8 == null) {
                                                                    arrayList4 = arrayList3;
                                                                    longValue = 0;
                                                                } else {
                                                                    arrayList4 = arrayList3;
                                                                    longValue = Utilities.parseLong(str8).longValue();
                                                                    message2.grouped_id = longValue;
                                                                    message2.flags |= 131072;
                                                                }
                                                                if (hashMap2.get("final") != null) {
                                                                    obj = 1;
                                                                    if (longValue != 0) {
                                                                        arrayList5 = new ArrayList();
                                                                        arrayList5.add(messageObject7);
                                                                        arrayList6 = new ArrayList();
                                                                        arrayList6.add(message2);
                                                                        hashMap3 = hashMap2;
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                        messageObject3 = messageObject7;
                                                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                        delayedMessage = null;
                                                                    } else {
                                                                        hashMap3 = hashMap2;
                                                                        messageObject3 = messageObject7;
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("group_");
                                                                        stringBuilder.append(longValue);
                                                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                        if (arrayList5 == null) {
                                                                        }
                                                                        if (delayedMessage == null) {
                                                                            delayedMessage = new DelayedMessage(j4);
                                                                            delayedMessage.type = 4;
                                                                            delayedMessage.groupId = longValue;
                                                                            delayedMessage.messageObjects = new ArrayList();
                                                                            delayedMessage.messages = new ArrayList();
                                                                            delayedMessage.originalPaths = new ArrayList();
                                                                            delayedMessage.extraHashMap = new HashMap();
                                                                            delayedMessage.encryptedChat = encryptedChat;
                                                                        }
                                                                        if (obj != null) {
                                                                            delayedMessage.finalGroupMessage = message2.id;
                                                                        }
                                                                    }
                                                                    stringBuilder2 = new StringBuilder();
                                                                    stringBuilder2.append("send message user_id = ");
                                                                    stringBuilder2.append(inputPeer.user_id);
                                                                    stringBuilder2.append(" chat_id = ");
                                                                    stringBuilder2.append(inputPeer.chat_id);
                                                                    stringBuilder2.append(" channel_id = ");
                                                                    stringBuilder2.append(inputPeer.channel_id);
                                                                    stringBuilder2.append(" access_hash = ");
                                                                    stringBuilder2.append(inputPeer.access_hash);
                                                                    FileLog.m0d(stringBuilder2.toString());
                                                                    if (i5 != 0) {
                                                                        if (i5 == 9) {
                                                                        }
                                                                        if (i5 >= 1) {
                                                                        }
                                                                        j5 = j4;
                                                                        i4 = i5;
                                                                        hashMap4 = hashMap3;
                                                                        messageObject7 = messageObject3;
                                                                        messageObject8 = messageObject2;
                                                                        if (i4 != 4) {
                                                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                            if (messageObject8.messageOwner.ttl == 0) {
                                                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                                if (chat2 != null) {
                                                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                                }
                                                                            } else {
                                                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                            }
                                                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("silent_");
                                                                                stringBuilder.append(j5);
                                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                            }
                                                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                            if (messageObject2.getId() < 0) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                            }
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        } else if (i4 == 9) {
                                                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                                            if (message2.reply_to_msg_id != 0) {
                                                                                tL_messages_forwardMessages.flags |= 1;
                                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                            }
                                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder = new StringBuilder();
                                                                                stringBuilder.append("silent_");
                                                                                stringBuilder.append(j5);
                                                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                            }
                                                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                            if (messageObject8 == null) {
                                                                                tL_messages_forwardMessages.clear_draft = true;
                                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                            }
                                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        }
                                                                    }
                                                                    j5 = j4;
                                                                    arrayList7 = arrayList4;
                                                                    hashMap4 = hashMap3;
                                                                    messageObject7 = messageObject3;
                                                                    messageObject8 = messageObject2;
                                                                    arrayList2 = arrayList;
                                                                    if (encryptedChat != null) {
                                                                        str8 = str6;
                                                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                            tL_decryptedMessage = new TL_decryptedMessage();
                                                                        } else {
                                                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                        }
                                                                        tL_decryptedMessage.ttl = message2.ttl;
                                                                        tL_decryptedMessage.entities = arrayList2;
                                                                        tL_decryptedMessage.flags |= 128;
                                                                        if (message2.reply_to_random_id != 0) {
                                                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                            tL_decryptedMessage.flags |= 8;
                                                                        }
                                                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                        tL_decryptedMessage.flags |= 2048;
                                                                        tL_decryptedMessage.random_id = message2.random_id;
                                                                        tL_decryptedMessage.message = str8;
                                                                        webPage4 = webPage3;
                                                                        if (webPage4 != null) {
                                                                        }
                                                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                        if (messageObject8 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                    } else if (arrayList7 == null) {
                                                                        tLObject = new TL_messages_sendBroadcast();
                                                                        arrayList8 = new ArrayList();
                                                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                        }
                                                                        tLObject.message = str6;
                                                                        tLObject.contacts = arrayList7;
                                                                        tLObject.media = new TL_inputMediaEmpty();
                                                                        tLObject.random_id = arrayList8;
                                                                        performSendMessageRequest(tLObject, messageObject7, null);
                                                                    } else {
                                                                        str8 = str6;
                                                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                        tL_messages_forwardMessages.message = str8;
                                                                        if (messageObject8 != null) {
                                                                        }
                                                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder3 = new StringBuilder();
                                                                            stringBuilder3.append("silent_");
                                                                            stringBuilder3.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                                        if (message2.reply_to_msg_id != 0) {
                                                                            tL_messages_forwardMessages.flags |= 1;
                                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                        }
                                                                        if (z) {
                                                                            tL_messages_forwardMessages.no_webpage = true;
                                                                        }
                                                                        tL_messages_forwardMessages.entities = arrayList2;
                                                                        tL_messages_forwardMessages.flags |= 8;
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                        if (messageObject8 == null) {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            obj = null;
                                                            if (longValue != 0) {
                                                                hashMap3 = hashMap2;
                                                                messageObject3 = messageObject7;
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append("group_");
                                                                stringBuilder.append(longValue);
                                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                if (arrayList5 == null) {
                                                                }
                                                                if (delayedMessage == null) {
                                                                    delayedMessage = new DelayedMessage(j4);
                                                                    delayedMessage.type = 4;
                                                                    delayedMessage.groupId = longValue;
                                                                    delayedMessage.messageObjects = new ArrayList();
                                                                    delayedMessage.messages = new ArrayList();
                                                                    delayedMessage.originalPaths = new ArrayList();
                                                                    delayedMessage.extraHashMap = new HashMap();
                                                                    delayedMessage.encryptedChat = encryptedChat;
                                                                }
                                                                if (obj != null) {
                                                                    delayedMessage.finalGroupMessage = message2.id;
                                                                }
                                                            } else {
                                                                arrayList5 = new ArrayList();
                                                                arrayList5.add(messageObject7);
                                                                arrayList6 = new ArrayList();
                                                                arrayList6.add(message2);
                                                                hashMap3 = hashMap2;
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                messageObject3 = messageObject7;
                                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                delayedMessage = null;
                                                            }
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append("send message user_id = ");
                                                            stringBuilder2.append(inputPeer.user_id);
                                                            stringBuilder2.append(" chat_id = ");
                                                            stringBuilder2.append(inputPeer.chat_id);
                                                            stringBuilder2.append(" channel_id = ");
                                                            stringBuilder2.append(inputPeer.channel_id);
                                                            stringBuilder2.append(" access_hash = ");
                                                            stringBuilder2.append(inputPeer.access_hash);
                                                            FileLog.m0d(stringBuilder2.toString());
                                                            if (i5 != 0) {
                                                                if (i5 == 9) {
                                                                }
                                                                if (i5 >= 1) {
                                                                }
                                                                j5 = j4;
                                                                i4 = i5;
                                                                hashMap4 = hashMap3;
                                                                messageObject7 = messageObject3;
                                                                messageObject8 = messageObject2;
                                                                if (i4 != 4) {
                                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                    } else {
                                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                        if (chat2 != null) {
                                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                        }
                                                                    }
                                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("silent_");
                                                                        stringBuilder.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                    if (messageObject2.getId() < 0) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                    }
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                } else if (i4 == 9) {
                                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                                    if (message2.reply_to_msg_id != 0) {
                                                                        tL_messages_forwardMessages.flags |= 1;
                                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                    }
                                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder = new StringBuilder();
                                                                        stringBuilder.append("silent_");
                                                                        stringBuilder.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                    if (messageObject8 == null) {
                                                                        tL_messages_forwardMessages.clear_draft = true;
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                    }
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                }
                                                            }
                                                            j5 = j4;
                                                            arrayList7 = arrayList4;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            arrayList2 = arrayList;
                                                            if (encryptedChat != null) {
                                                                str8 = str6;
                                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                } else {
                                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                                }
                                                                tL_decryptedMessage.ttl = message2.ttl;
                                                                tL_decryptedMessage.entities = arrayList2;
                                                                tL_decryptedMessage.flags |= 128;
                                                                if (message2.reply_to_random_id != 0) {
                                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                    tL_decryptedMessage.flags |= 8;
                                                                }
                                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                tL_decryptedMessage.flags |= 2048;
                                                                tL_decryptedMessage.random_id = message2.random_id;
                                                                tL_decryptedMessage.message = str8;
                                                                webPage4 = webPage3;
                                                                if (webPage4 != null) {
                                                                }
                                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                if (messageObject8 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                            } else if (arrayList7 == null) {
                                                                str8 = str6;
                                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                tL_messages_forwardMessages.message = str8;
                                                                if (messageObject8 != null) {
                                                                }
                                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder3 = new StringBuilder();
                                                                    stringBuilder3.append("silent_");
                                                                    stringBuilder3.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (z) {
                                                                    tL_messages_forwardMessages.no_webpage = true;
                                                                }
                                                                tL_messages_forwardMessages.entities = arrayList2;
                                                                tL_messages_forwardMessages.flags |= 8;
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                if (messageObject8 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                            } else {
                                                                tLObject = new TL_messages_sendBroadcast();
                                                                arrayList8 = new ArrayList();
                                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                }
                                                                tLObject.message = str6;
                                                                tLObject.contacts = arrayList7;
                                                                tLObject.media = new TL_inputMediaEmpty();
                                                                tLObject.random_id = arrayList8;
                                                                performSendMessageRequest(tLObject, messageObject7, null);
                                                            }
                                                        }
                                                        i4 = -1;
                                                    }
                                                }
                                                document = (TL_document) message2.media.document;
                                                i4 = 7;
                                                user3 = user;
                                                messageMedia3 = messageMedia;
                                                tL_photo3 = tL_photo;
                                                if (hashMap2 == null) {
                                                }
                                                str6 = str4;
                                                i5 = i4;
                                                i10 = i2;
                                                webPage3 = webPage2;
                                                document2 = document;
                                                str7 = str10;
                                                user4 = user3;
                                                messageMedia4 = messageMedia3;
                                                tL_photo4 = tL_photo3;
                                                if (message2.random_id == 0) {
                                                    message2.random_id = getNextRandomId();
                                                }
                                                if (encryptedChat == null) {
                                                    message2.via_bot_name = (String) hashMap2.get("bot_name");
                                                    if (message2.via_bot_name == null) {
                                                        message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                                    }
                                                } else {
                                                    message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                                }
                                                message2.flags |= 2048;
                                                message2.params = hashMap2;
                                                if (messageObject5 != null) {
                                                }
                                                message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                                if (inputPeer instanceof TL_inputPeerChannel) {
                                                    if (obj != null) {
                                                        message2.views = 1;
                                                        message2.flags |= 1024;
                                                    }
                                                    chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                                    if (chat != null) {
                                                        if (chat.megagroup) {
                                                            message2.flags |= Integer.MIN_VALUE;
                                                            message2.unread = true;
                                                        } else {
                                                            message2.post = true;
                                                            if (chat.signatures) {
                                                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    message2.unread = true;
                                                }
                                                message2.flags |= 512;
                                                j4 = j;
                                                message2.dialog_id = j4;
                                                messageObject6 = messageObject;
                                                if (messageObject6 == null) {
                                                    if (encryptedChat == null) {
                                                        user5 = user4;
                                                        if (messageObject6.messageOwner.random_id != 0) {
                                                            message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                                            message2.flags |= 8;
                                                            message2.reply_to_msg_id = messageObject.getId();
                                                        }
                                                    } else {
                                                        user5 = user4;
                                                    }
                                                    message2.flags |= 8;
                                                    message2.reply_to_msg_id = messageObject.getId();
                                                } else {
                                                    user5 = user4;
                                                }
                                                replyMarkup2 = replyMarkup;
                                                message2.flags |= 64;
                                                message2.reply_markup = replyMarkup2;
                                                if (i3 == 0) {
                                                    z3 = z2;
                                                    if (!z3) {
                                                        messageMedia5 = messageMedia4;
                                                        tL_photo5 = tL_photo4;
                                                        i6 = i3;
                                                        message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                                        if (i6 > 0) {
                                                            user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                                            if (user6 != null) {
                                                                processSentMessage(message2.id);
                                                                return;
                                                            } else if (user6.bot) {
                                                                message2.unread = false;
                                                            }
                                                        }
                                                    } else if (sendMessagesHelper.currentChatInfo != null) {
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                        processSentMessage(message2.id);
                                                        return;
                                                    } else {
                                                        arrayList3 = new ArrayList();
                                                        tL_photo5 = tL_photo4;
                                                        it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                                        while (it.hasNext()) {
                                                            it2 = it;
                                                            messageMedia5 = messageMedia4;
                                                            inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                            if (inputUser == null) {
                                                                arrayList3.add(inputUser);
                                                            }
                                                            it = it2;
                                                            messageMedia4 = messageMedia5;
                                                        }
                                                        messageMedia5 = messageMedia4;
                                                        message2.to_id = new TL_peerChat();
                                                        message2.to_id.chat_id = i3;
                                                        z4 = true;
                                                        if (z3 != z4) {
                                                            if (MessageObject.isVoiceMessage(message2)) {
                                                                if (!MessageObject.isRoundVideoMessage(message2)) {
                                                                    z4 = true;
                                                                }
                                                            }
                                                            z4 = true;
                                                            message2.media_unread = true;
                                                        }
                                                        message2.send_state = z4;
                                                        messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                        messageObject7.replyMessageObject = messageObject6;
                                                        messageObject7.attachPathExists = true;
                                                        if (messageObject7.videoEditedInfo == null) {
                                                        }
                                                        if (hashMap2 == null) {
                                                            str8 = (String) hashMap2.get("groupId");
                                                            if (str8 == null) {
                                                                arrayList4 = arrayList3;
                                                                longValue = Utilities.parseLong(str8).longValue();
                                                                message2.grouped_id = longValue;
                                                                message2.flags |= 131072;
                                                            } else {
                                                                arrayList4 = arrayList3;
                                                                longValue = 0;
                                                            }
                                                            if (hashMap2.get("final") != null) {
                                                                obj = 1;
                                                                if (longValue != 0) {
                                                                    arrayList5 = new ArrayList();
                                                                    arrayList5.add(messageObject7);
                                                                    arrayList6 = new ArrayList();
                                                                    arrayList6.add(message2);
                                                                    hashMap3 = hashMap2;
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                                    messageObject3 = messageObject7;
                                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                                    delayedMessage = null;
                                                                } else {
                                                                    hashMap3 = hashMap2;
                                                                    messageObject3 = messageObject7;
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("group_");
                                                                    stringBuilder.append(longValue);
                                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                                    if (arrayList5 == null) {
                                                                    }
                                                                    if (delayedMessage == null) {
                                                                        delayedMessage = new DelayedMessage(j4);
                                                                        delayedMessage.type = 4;
                                                                        delayedMessage.groupId = longValue;
                                                                        delayedMessage.messageObjects = new ArrayList();
                                                                        delayedMessage.messages = new ArrayList();
                                                                        delayedMessage.originalPaths = new ArrayList();
                                                                        delayedMessage.extraHashMap = new HashMap();
                                                                        delayedMessage.encryptedChat = encryptedChat;
                                                                    }
                                                                    if (obj != null) {
                                                                        delayedMessage.finalGroupMessage = message2.id;
                                                                    }
                                                                }
                                                                stringBuilder2 = new StringBuilder();
                                                                stringBuilder2.append("send message user_id = ");
                                                                stringBuilder2.append(inputPeer.user_id);
                                                                stringBuilder2.append(" chat_id = ");
                                                                stringBuilder2.append(inputPeer.chat_id);
                                                                stringBuilder2.append(" channel_id = ");
                                                                stringBuilder2.append(inputPeer.channel_id);
                                                                stringBuilder2.append(" access_hash = ");
                                                                stringBuilder2.append(inputPeer.access_hash);
                                                                FileLog.m0d(stringBuilder2.toString());
                                                                if (i5 != 0) {
                                                                    if (i5 == 9) {
                                                                    }
                                                                    if (i5 >= 1) {
                                                                    }
                                                                    j5 = j4;
                                                                    i4 = i5;
                                                                    hashMap4 = hashMap3;
                                                                    messageObject7 = messageObject3;
                                                                    messageObject8 = messageObject2;
                                                                    if (i4 != 4) {
                                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                            if (chat2 != null) {
                                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                            }
                                                                        } else {
                                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                        }
                                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder = new StringBuilder();
                                                                            stringBuilder.append("silent_");
                                                                            stringBuilder.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                        if (messageObject2.getId() < 0) {
                                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                        }
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                    } else if (i4 == 9) {
                                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                                        if (message2.reply_to_msg_id != 0) {
                                                                            tL_messages_forwardMessages.flags |= 1;
                                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                        }
                                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder = new StringBuilder();
                                                                            stringBuilder.append("silent_");
                                                                            stringBuilder.append(j5);
                                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                        }
                                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                        if (messageObject8 == null) {
                                                                            tL_messages_forwardMessages.clear_draft = true;
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                        }
                                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                    }
                                                                }
                                                                j5 = j4;
                                                                arrayList7 = arrayList4;
                                                                hashMap4 = hashMap3;
                                                                messageObject7 = messageObject3;
                                                                messageObject8 = messageObject2;
                                                                arrayList2 = arrayList;
                                                                if (encryptedChat != null) {
                                                                    str8 = str6;
                                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                                    } else {
                                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                                    }
                                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                                    tL_decryptedMessage.entities = arrayList2;
                                                                    tL_decryptedMessage.flags |= 128;
                                                                    if (message2.reply_to_random_id != 0) {
                                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                        tL_decryptedMessage.flags |= 8;
                                                                    }
                                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                                    tL_decryptedMessage.flags |= 2048;
                                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                                    tL_decryptedMessage.message = str8;
                                                                    webPage4 = webPage3;
                                                                    if (webPage4 != null) {
                                                                    }
                                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                                    if (messageObject8 == null) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                    }
                                                                } else if (arrayList7 == null) {
                                                                    tLObject = new TL_messages_sendBroadcast();
                                                                    arrayList8 = new ArrayList();
                                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                                    }
                                                                    tLObject.message = str6;
                                                                    tLObject.contacts = arrayList7;
                                                                    tLObject.media = new TL_inputMediaEmpty();
                                                                    tLObject.random_id = arrayList8;
                                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                                } else {
                                                                    str8 = str6;
                                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                                    tL_messages_forwardMessages.message = str8;
                                                                    if (messageObject8 != null) {
                                                                    }
                                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder3 = new StringBuilder();
                                                                        stringBuilder3.append("silent_");
                                                                        stringBuilder3.append(j5);
                                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                                    }
                                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                                    if (message2.reply_to_msg_id != 0) {
                                                                        tL_messages_forwardMessages.flags |= 1;
                                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                    }
                                                                    if (z) {
                                                                        tL_messages_forwardMessages.no_webpage = true;
                                                                    }
                                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                                    tL_messages_forwardMessages.flags |= 8;
                                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                                    if (messageObject8 == null) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        arrayList4 = arrayList3;
                                                        longValue = 0;
                                                        obj = null;
                                                        if (longValue != 0) {
                                                            hashMap3 = hashMap2;
                                                            messageObject3 = messageObject7;
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("group_");
                                                            stringBuilder.append(longValue);
                                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                            if (arrayList5 == null) {
                                                            }
                                                            if (delayedMessage == null) {
                                                                delayedMessage = new DelayedMessage(j4);
                                                                delayedMessage.type = 4;
                                                                delayedMessage.groupId = longValue;
                                                                delayedMessage.messageObjects = new ArrayList();
                                                                delayedMessage.messages = new ArrayList();
                                                                delayedMessage.originalPaths = new ArrayList();
                                                                delayedMessage.extraHashMap = new HashMap();
                                                                delayedMessage.encryptedChat = encryptedChat;
                                                            }
                                                            if (obj != null) {
                                                                delayedMessage.finalGroupMessage = message2.id;
                                                            }
                                                        } else {
                                                            arrayList5 = new ArrayList();
                                                            arrayList5.add(messageObject7);
                                                            arrayList6 = new ArrayList();
                                                            arrayList6.add(message2);
                                                            hashMap3 = hashMap2;
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                            messageObject3 = messageObject7;
                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                            delayedMessage = null;
                                                        }
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append("send message user_id = ");
                                                        stringBuilder2.append(inputPeer.user_id);
                                                        stringBuilder2.append(" chat_id = ");
                                                        stringBuilder2.append(inputPeer.chat_id);
                                                        stringBuilder2.append(" channel_id = ");
                                                        stringBuilder2.append(inputPeer.channel_id);
                                                        stringBuilder2.append(" access_hash = ");
                                                        stringBuilder2.append(inputPeer.access_hash);
                                                        FileLog.m0d(stringBuilder2.toString());
                                                        if (i5 != 0) {
                                                            if (i5 == 9) {
                                                            }
                                                            if (i5 >= 1) {
                                                            }
                                                            j5 = j4;
                                                            i4 = i5;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            if (i4 != 4) {
                                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                if (messageObject8.messageOwner.ttl == 0) {
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                } else {
                                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                    if (chat2 != null) {
                                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                    }
                                                                }
                                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                if (messageObject2.getId() < 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            } else if (i4 == 9) {
                                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                if (messageObject8 == null) {
                                                                    tL_messages_forwardMessages.clear_draft = true;
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            }
                                                        }
                                                        j5 = j4;
                                                        arrayList7 = arrayList4;
                                                        hashMap4 = hashMap3;
                                                        messageObject7 = messageObject3;
                                                        messageObject8 = messageObject2;
                                                        arrayList2 = arrayList;
                                                        if (encryptedChat != null) {
                                                            str8 = str6;
                                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                            } else {
                                                                tL_decryptedMessage = new TL_decryptedMessage();
                                                            }
                                                            tL_decryptedMessage.ttl = message2.ttl;
                                                            tL_decryptedMessage.entities = arrayList2;
                                                            tL_decryptedMessage.flags |= 128;
                                                            if (message2.reply_to_random_id != 0) {
                                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                tL_decryptedMessage.flags |= 8;
                                                            }
                                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                            tL_decryptedMessage.flags |= 2048;
                                                            tL_decryptedMessage.random_id = message2.random_id;
                                                            tL_decryptedMessage.message = str8;
                                                            webPage4 = webPage3;
                                                            if (webPage4 != null) {
                                                            }
                                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        } else if (arrayList7 == null) {
                                                            str8 = str6;
                                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                            tL_messages_forwardMessages.message = str8;
                                                            if (messageObject8 != null) {
                                                            }
                                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder3 = new StringBuilder();
                                                                stringBuilder3.append("silent_");
                                                                stringBuilder3.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                            if (message2.reply_to_msg_id != 0) {
                                                                tL_messages_forwardMessages.flags |= 1;
                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                            }
                                                            if (z) {
                                                                tL_messages_forwardMessages.no_webpage = true;
                                                            }
                                                            tL_messages_forwardMessages.entities = arrayList2;
                                                            tL_messages_forwardMessages.flags |= 8;
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        } else {
                                                            tLObject = new TL_messages_sendBroadcast();
                                                            arrayList8 = new ArrayList();
                                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                            }
                                                            tLObject.message = str6;
                                                            tLObject.contacts = arrayList7;
                                                            tLObject.media = new TL_inputMediaEmpty();
                                                            tLObject.random_id = arrayList8;
                                                            performSendMessageRequest(tLObject, messageObject7, null);
                                                        }
                                                    }
                                                }
                                                messageMedia5 = messageMedia4;
                                                tL_photo5 = tL_photo4;
                                                z3 = z2;
                                                message2.to_id = new TL_peerUser();
                                                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                                    message2.to_id.user_id = encryptedChat.admin_id;
                                                } else {
                                                    message2.to_id.user_id = encryptedChat.participant_id;
                                                }
                                                if (i10 == 0) {
                                                    message2.ttl = i10;
                                                } else {
                                                    message2.ttl = encryptedChat.ttl;
                                                    if (message2.ttl != 0) {
                                                        if (message2.media != null) {
                                                            message2.media.ttl_seconds = message2.ttl;
                                                            messageMedia4 = message2.media;
                                                            messageMedia4.flags |= 4;
                                                        }
                                                    }
                                                }
                                                if (message2.ttl != 0) {
                                                    if (message2.media.document != null) {
                                                        if (MessageObject.isVoiceMessage(message2)) {
                                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                                    i2 = documentAttribute.duration;
                                                                    break;
                                                                }
                                                            }
                                                            i2 = 0;
                                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                        } else {
                                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                                    i2 = documentAttribute.duration;
                                                                    break;
                                                                }
                                                            }
                                                            i2 = 0;
                                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                        }
                                                    }
                                                }
                                                z4 = true;
                                                arrayList3 = null;
                                                if (z3 != z4) {
                                                    if (MessageObject.isVoiceMessage(message2)) {
                                                        if (!MessageObject.isRoundVideoMessage(message2)) {
                                                            z4 = true;
                                                        }
                                                    }
                                                    z4 = true;
                                                    message2.media_unread = true;
                                                }
                                                message2.send_state = z4;
                                                messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                messageObject7.replyMessageObject = messageObject6;
                                                messageObject7.attachPathExists = true;
                                                if (messageObject7.videoEditedInfo == null) {
                                                }
                                                if (hashMap2 == null) {
                                                    arrayList4 = arrayList3;
                                                    longValue = 0;
                                                } else {
                                                    str8 = (String) hashMap2.get("groupId");
                                                    if (str8 == null) {
                                                        arrayList4 = arrayList3;
                                                        longValue = 0;
                                                    } else {
                                                        arrayList4 = arrayList3;
                                                        longValue = Utilities.parseLong(str8).longValue();
                                                        message2.grouped_id = longValue;
                                                        message2.flags |= 131072;
                                                    }
                                                    if (hashMap2.get("final") != null) {
                                                        obj = 1;
                                                        if (longValue != 0) {
                                                            arrayList5 = new ArrayList();
                                                            arrayList5.add(messageObject7);
                                                            arrayList6 = new ArrayList();
                                                            arrayList6.add(message2);
                                                            hashMap3 = hashMap2;
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                            messageObject3 = messageObject7;
                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                            delayedMessage = null;
                                                        } else {
                                                            hashMap3 = hashMap2;
                                                            messageObject3 = messageObject7;
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("group_");
                                                            stringBuilder.append(longValue);
                                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                            if (arrayList5 == null) {
                                                            }
                                                            if (delayedMessage == null) {
                                                                delayedMessage = new DelayedMessage(j4);
                                                                delayedMessage.type = 4;
                                                                delayedMessage.groupId = longValue;
                                                                delayedMessage.messageObjects = new ArrayList();
                                                                delayedMessage.messages = new ArrayList();
                                                                delayedMessage.originalPaths = new ArrayList();
                                                                delayedMessage.extraHashMap = new HashMap();
                                                                delayedMessage.encryptedChat = encryptedChat;
                                                            }
                                                            if (obj != null) {
                                                                delayedMessage.finalGroupMessage = message2.id;
                                                            }
                                                        }
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append("send message user_id = ");
                                                        stringBuilder2.append(inputPeer.user_id);
                                                        stringBuilder2.append(" chat_id = ");
                                                        stringBuilder2.append(inputPeer.chat_id);
                                                        stringBuilder2.append(" channel_id = ");
                                                        stringBuilder2.append(inputPeer.channel_id);
                                                        stringBuilder2.append(" access_hash = ");
                                                        stringBuilder2.append(inputPeer.access_hash);
                                                        FileLog.m0d(stringBuilder2.toString());
                                                        if (i5 != 0) {
                                                            if (i5 == 9) {
                                                            }
                                                            if (i5 >= 1) {
                                                            }
                                                            j5 = j4;
                                                            i4 = i5;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            if (i4 != 4) {
                                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                if (messageObject8.messageOwner.ttl == 0) {
                                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                    if (chat2 != null) {
                                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                    }
                                                                } else {
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                }
                                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                if (messageObject2.getId() < 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            } else if (i4 == 9) {
                                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                if (messageObject8 == null) {
                                                                    tL_messages_forwardMessages.clear_draft = true;
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            }
                                                        }
                                                        j5 = j4;
                                                        arrayList7 = arrayList4;
                                                        hashMap4 = hashMap3;
                                                        messageObject7 = messageObject3;
                                                        messageObject8 = messageObject2;
                                                        arrayList2 = arrayList;
                                                        if (encryptedChat != null) {
                                                            str8 = str6;
                                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                tL_decryptedMessage = new TL_decryptedMessage();
                                                            } else {
                                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                            }
                                                            tL_decryptedMessage.ttl = message2.ttl;
                                                            tL_decryptedMessage.entities = arrayList2;
                                                            tL_decryptedMessage.flags |= 128;
                                                            if (message2.reply_to_random_id != 0) {
                                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                tL_decryptedMessage.flags |= 8;
                                                            }
                                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                            tL_decryptedMessage.flags |= 2048;
                                                            tL_decryptedMessage.random_id = message2.random_id;
                                                            tL_decryptedMessage.message = str8;
                                                            webPage4 = webPage3;
                                                            if (webPage4 != null) {
                                                            }
                                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        } else if (arrayList7 == null) {
                                                            tLObject = new TL_messages_sendBroadcast();
                                                            arrayList8 = new ArrayList();
                                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                            }
                                                            tLObject.message = str6;
                                                            tLObject.contacts = arrayList7;
                                                            tLObject.media = new TL_inputMediaEmpty();
                                                            tLObject.random_id = arrayList8;
                                                            performSendMessageRequest(tLObject, messageObject7, null);
                                                        } else {
                                                            str8 = str6;
                                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                            tL_messages_forwardMessages.message = str8;
                                                            if (messageObject8 != null) {
                                                            }
                                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder3 = new StringBuilder();
                                                                stringBuilder3.append("silent_");
                                                                stringBuilder3.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                            if (message2.reply_to_msg_id != 0) {
                                                                tL_messages_forwardMessages.flags |= 1;
                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                            }
                                                            if (z) {
                                                                tL_messages_forwardMessages.no_webpage = true;
                                                            }
                                                            tL_messages_forwardMessages.entities = arrayList2;
                                                            tL_messages_forwardMessages.flags |= 8;
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        }
                                                    }
                                                }
                                                obj = null;
                                                if (longValue != 0) {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                } else {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        } else {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                }
                                            }
                                        }
                                        document = (TL_document) message2.media.document;
                                        i4 = 3;
                                        user3 = user;
                                        messageMedia3 = messageMedia;
                                        tL_photo3 = tL_photo;
                                        if (hashMap2 == null) {
                                        }
                                        str6 = str4;
                                        i5 = i4;
                                        i10 = i2;
                                        webPage3 = webPage2;
                                        document2 = document;
                                        str7 = str10;
                                        user4 = user3;
                                        messageMedia4 = messageMedia3;
                                        tL_photo4 = tL_photo3;
                                        if (message2.random_id == 0) {
                                            message2.random_id = getNextRandomId();
                                        }
                                        if (encryptedChat == null) {
                                            message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                        } else {
                                            message2.via_bot_name = (String) hashMap2.get("bot_name");
                                            if (message2.via_bot_name == null) {
                                                message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                            }
                                        }
                                        message2.flags |= 2048;
                                        message2.params = hashMap2;
                                        if (messageObject5 != null) {
                                        }
                                        message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                        if (inputPeer instanceof TL_inputPeerChannel) {
                                            message2.unread = true;
                                        } else {
                                            if (obj != null) {
                                                message2.views = 1;
                                                message2.flags |= 1024;
                                            }
                                            chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                            if (chat != null) {
                                                if (chat.megagroup) {
                                                    message2.post = true;
                                                    if (chat.signatures) {
                                                        message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                                    }
                                                } else {
                                                    message2.flags |= Integer.MIN_VALUE;
                                                    message2.unread = true;
                                                }
                                            }
                                        }
                                        message2.flags |= 512;
                                        j4 = j;
                                        message2.dialog_id = j4;
                                        messageObject6 = messageObject;
                                        if (messageObject6 == null) {
                                            user5 = user4;
                                        } else {
                                            if (encryptedChat == null) {
                                                user5 = user4;
                                            } else {
                                                user5 = user4;
                                                if (messageObject6.messageOwner.random_id != 0) {
                                                    message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                                    message2.flags |= 8;
                                                    message2.reply_to_msg_id = messageObject.getId();
                                                }
                                            }
                                            message2.flags |= 8;
                                            message2.reply_to_msg_id = messageObject.getId();
                                        }
                                        replyMarkup2 = replyMarkup;
                                        message2.flags |= 64;
                                        message2.reply_markup = replyMarkup2;
                                        if (i3 == 0) {
                                            messageMedia5 = messageMedia4;
                                            tL_photo5 = tL_photo4;
                                            z3 = z2;
                                            message2.to_id = new TL_peerUser();
                                            if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                                message2.to_id.user_id = encryptedChat.participant_id;
                                            } else {
                                                message2.to_id.user_id = encryptedChat.admin_id;
                                            }
                                            if (i10 == 0) {
                                                message2.ttl = encryptedChat.ttl;
                                                if (message2.ttl != 0) {
                                                    if (message2.media != null) {
                                                        message2.media.ttl_seconds = message2.ttl;
                                                        messageMedia4 = message2.media;
                                                        messageMedia4.flags |= 4;
                                                    }
                                                }
                                            } else {
                                                message2.ttl = i10;
                                            }
                                            if (message2.ttl != 0) {
                                                if (message2.media.document != null) {
                                                    if (MessageObject.isVoiceMessage(message2)) {
                                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                            if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                                i2 = documentAttribute.duration;
                                                                break;
                                                            }
                                                        }
                                                        i2 = 0;
                                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                    } else {
                                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                            if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                                i2 = documentAttribute.duration;
                                                                break;
                                                            }
                                                        }
                                                        i2 = 0;
                                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                                    }
                                                }
                                            }
                                        } else {
                                            z3 = z2;
                                            if (!z3) {
                                                messageMedia5 = messageMedia4;
                                                tL_photo5 = tL_photo4;
                                                i6 = i3;
                                                message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                                if (i6 > 0) {
                                                    user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                                    if (user6 != null) {
                                                        processSentMessage(message2.id);
                                                        return;
                                                    } else if (user6.bot) {
                                                        message2.unread = false;
                                                    }
                                                }
                                            } else if (sendMessagesHelper.currentChatInfo != null) {
                                                arrayList3 = new ArrayList();
                                                tL_photo5 = tL_photo4;
                                                it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                                while (it.hasNext()) {
                                                    it2 = it;
                                                    messageMedia5 = messageMedia4;
                                                    inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                    if (inputUser == null) {
                                                        arrayList3.add(inputUser);
                                                    }
                                                    it = it2;
                                                    messageMedia4 = messageMedia5;
                                                }
                                                messageMedia5 = messageMedia4;
                                                message2.to_id = new TL_peerChat();
                                                message2.to_id.chat_id = i3;
                                                z4 = true;
                                                if (z3 != z4) {
                                                    if (MessageObject.isVoiceMessage(message2)) {
                                                        if (!MessageObject.isRoundVideoMessage(message2)) {
                                                            z4 = true;
                                                        }
                                                    }
                                                    z4 = true;
                                                    message2.media_unread = true;
                                                }
                                                message2.send_state = z4;
                                                messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                                messageObject7.replyMessageObject = messageObject6;
                                                messageObject7.attachPathExists = true;
                                                if (messageObject7.videoEditedInfo == null) {
                                                }
                                                if (hashMap2 == null) {
                                                    str8 = (String) hashMap2.get("groupId");
                                                    if (str8 == null) {
                                                        arrayList4 = arrayList3;
                                                        longValue = Utilities.parseLong(str8).longValue();
                                                        message2.grouped_id = longValue;
                                                        message2.flags |= 131072;
                                                    } else {
                                                        arrayList4 = arrayList3;
                                                        longValue = 0;
                                                    }
                                                    if (hashMap2.get("final") != null) {
                                                        obj = 1;
                                                        if (longValue != 0) {
                                                            arrayList5 = new ArrayList();
                                                            arrayList5.add(messageObject7);
                                                            arrayList6 = new ArrayList();
                                                            arrayList6.add(message2);
                                                            hashMap3 = hashMap2;
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                            messageObject3 = messageObject7;
                                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                            delayedMessage = null;
                                                        } else {
                                                            hashMap3 = hashMap2;
                                                            messageObject3 = messageObject7;
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("group_");
                                                            stringBuilder.append(longValue);
                                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                            if (arrayList5 == null) {
                                                            }
                                                            if (delayedMessage == null) {
                                                                delayedMessage = new DelayedMessage(j4);
                                                                delayedMessage.type = 4;
                                                                delayedMessage.groupId = longValue;
                                                                delayedMessage.messageObjects = new ArrayList();
                                                                delayedMessage.messages = new ArrayList();
                                                                delayedMessage.originalPaths = new ArrayList();
                                                                delayedMessage.extraHashMap = new HashMap();
                                                                delayedMessage.encryptedChat = encryptedChat;
                                                            }
                                                            if (obj != null) {
                                                                delayedMessage.finalGroupMessage = message2.id;
                                                            }
                                                        }
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append("send message user_id = ");
                                                        stringBuilder2.append(inputPeer.user_id);
                                                        stringBuilder2.append(" chat_id = ");
                                                        stringBuilder2.append(inputPeer.chat_id);
                                                        stringBuilder2.append(" channel_id = ");
                                                        stringBuilder2.append(inputPeer.channel_id);
                                                        stringBuilder2.append(" access_hash = ");
                                                        stringBuilder2.append(inputPeer.access_hash);
                                                        FileLog.m0d(stringBuilder2.toString());
                                                        if (i5 != 0) {
                                                            if (i5 == 9) {
                                                            }
                                                            if (i5 >= 1) {
                                                            }
                                                            j5 = j4;
                                                            i4 = i5;
                                                            hashMap4 = hashMap3;
                                                            messageObject7 = messageObject3;
                                                            messageObject8 = messageObject2;
                                                            if (i4 != 4) {
                                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                                if (messageObject8.messageOwner.ttl == 0) {
                                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                                    if (chat2 != null) {
                                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                                    }
                                                                } else {
                                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                                }
                                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                                if (messageObject2.getId() < 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            } else if (i4 == 9) {
                                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                                tL_messages_forwardMessages.peer = inputPeer;
                                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                                if (message2.reply_to_msg_id != 0) {
                                                                    tL_messages_forwardMessages.flags |= 1;
                                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                                }
                                                                if (message2.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder = new StringBuilder();
                                                                    stringBuilder.append("silent_");
                                                                    stringBuilder.append(j5);
                                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                                }
                                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                                if (messageObject8 == null) {
                                                                    tL_messages_forwardMessages.clear_draft = true;
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                                }
                                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            }
                                                        }
                                                        j5 = j4;
                                                        arrayList7 = arrayList4;
                                                        hashMap4 = hashMap3;
                                                        messageObject7 = messageObject3;
                                                        messageObject8 = messageObject2;
                                                        arrayList2 = arrayList;
                                                        if (encryptedChat != null) {
                                                            str8 = str6;
                                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                                tL_decryptedMessage = new TL_decryptedMessage();
                                                            } else {
                                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                            }
                                                            tL_decryptedMessage.ttl = message2.ttl;
                                                            tL_decryptedMessage.entities = arrayList2;
                                                            tL_decryptedMessage.flags |= 128;
                                                            if (message2.reply_to_random_id != 0) {
                                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                                tL_decryptedMessage.flags |= 8;
                                                            }
                                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                            tL_decryptedMessage.flags |= 2048;
                                                            tL_decryptedMessage.random_id = message2.random_id;
                                                            tL_decryptedMessage.message = str8;
                                                            webPage4 = webPage3;
                                                            if (webPage4 != null) {
                                                            }
                                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        } else if (arrayList7 == null) {
                                                            tLObject = new TL_messages_sendBroadcast();
                                                            arrayList8 = new ArrayList();
                                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                            }
                                                            tLObject.message = str6;
                                                            tLObject.contacts = arrayList7;
                                                            tLObject.media = new TL_inputMediaEmpty();
                                                            tLObject.random_id = arrayList8;
                                                            performSendMessageRequest(tLObject, messageObject7, null);
                                                        } else {
                                                            str8 = str6;
                                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                            tL_messages_forwardMessages.message = str8;
                                                            if (messageObject8 != null) {
                                                            }
                                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                            if (message2.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder3 = new StringBuilder();
                                                                stringBuilder3.append("silent_");
                                                                stringBuilder3.append(j5);
                                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                            }
                                                            tL_messages_forwardMessages.peer = inputPeer;
                                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                                            if (message2.reply_to_msg_id != 0) {
                                                                tL_messages_forwardMessages.flags |= 1;
                                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                            }
                                                            if (z) {
                                                                tL_messages_forwardMessages.no_webpage = true;
                                                            }
                                                            tL_messages_forwardMessages.entities = arrayList2;
                                                            tL_messages_forwardMessages.flags |= 8;
                                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                            if (messageObject8 == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                            }
                                                        }
                                                    }
                                                }
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                                obj = null;
                                                if (longValue != 0) {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                } else {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        } else {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                }
                                            } else {
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                                processSentMessage(message2.id);
                                                return;
                                            }
                                        }
                                        z4 = true;
                                        arrayList3 = null;
                                        if (z3 != z4) {
                                            if (MessageObject.isVoiceMessage(message2)) {
                                                if (!MessageObject.isRoundVideoMessage(message2)) {
                                                    z4 = true;
                                                }
                                            }
                                            z4 = true;
                                            message2.media_unread = true;
                                        }
                                        message2.send_state = z4;
                                        messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                        messageObject7.replyMessageObject = messageObject6;
                                        messageObject7.attachPathExists = true;
                                        if (messageObject7.videoEditedInfo == null) {
                                        }
                                        if (hashMap2 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        } else {
                                            str8 = (String) hashMap2.get("groupId");
                                            if (str8 == null) {
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                            } else {
                                                arrayList4 = arrayList3;
                                                longValue = Utilities.parseLong(str8).longValue();
                                                message2.grouped_id = longValue;
                                                message2.flags |= 131072;
                                            }
                                            if (hashMap2.get("final") != null) {
                                                obj = 1;
                                                if (longValue != 0) {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                } else {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        } else {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                } else {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                }
                                            }
                                        }
                                        obj = null;
                                        if (longValue != 0) {
                                            hashMap3 = hashMap2;
                                            messageObject3 = messageObject7;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("group_");
                                            stringBuilder.append(longValue);
                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                            if (arrayList5 == null) {
                                            }
                                            if (delayedMessage == null) {
                                                delayedMessage = new DelayedMessage(j4);
                                                delayedMessage.type = 4;
                                                delayedMessage.groupId = longValue;
                                                delayedMessage.messageObjects = new ArrayList();
                                                delayedMessage.messages = new ArrayList();
                                                delayedMessage.originalPaths = new ArrayList();
                                                delayedMessage.extraHashMap = new HashMap();
                                                delayedMessage.encryptedChat = encryptedChat;
                                            }
                                            if (obj != null) {
                                                delayedMessage.finalGroupMessage = message2.id;
                                            }
                                        } else {
                                            arrayList5 = new ArrayList();
                                            arrayList5.add(messageObject7);
                                            arrayList6 = new ArrayList();
                                            arrayList6.add(message2);
                                            hashMap3 = hashMap2;
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                            messageObject3 = messageObject7;
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            delayedMessage = null;
                                        }
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append("send message user_id = ");
                                        stringBuilder2.append(inputPeer.user_id);
                                        stringBuilder2.append(" chat_id = ");
                                        stringBuilder2.append(inputPeer.chat_id);
                                        stringBuilder2.append(" channel_id = ");
                                        stringBuilder2.append(inputPeer.channel_id);
                                        stringBuilder2.append(" access_hash = ");
                                        stringBuilder2.append(inputPeer.access_hash);
                                        FileLog.m0d(stringBuilder2.toString());
                                        if (i5 != 0) {
                                            if (i5 == 9) {
                                            }
                                            if (i5 >= 1) {
                                            }
                                            j5 = j4;
                                            i4 = i5;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            if (i4 != 4) {
                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                if (messageObject8.messageOwner.ttl == 0) {
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                } else {
                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                    if (chat2 != null) {
                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                    }
                                                }
                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                if (messageObject2.getId() < 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            } else if (i4 == 9) {
                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                if (messageObject8 == null) {
                                                    tL_messages_forwardMessages.clear_draft = true;
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            }
                                        }
                                        j5 = j4;
                                        arrayList7 = arrayList4;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        arrayList2 = arrayList;
                                        if (encryptedChat != null) {
                                            str8 = str6;
                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                            } else {
                                                tL_decryptedMessage = new TL_decryptedMessage();
                                            }
                                            tL_decryptedMessage.ttl = message2.ttl;
                                            tL_decryptedMessage.entities = arrayList2;
                                            tL_decryptedMessage.flags |= 128;
                                            if (message2.reply_to_random_id != 0) {
                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                tL_decryptedMessage.flags |= 8;
                                            }
                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                            tL_decryptedMessage.flags |= 2048;
                                            tL_decryptedMessage.random_id = message2.random_id;
                                            tL_decryptedMessage.message = str8;
                                            webPage4 = webPage3;
                                            if (webPage4 != null) {
                                            }
                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else if (arrayList7 == null) {
                                            str8 = str6;
                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                            tL_messages_forwardMessages.message = str8;
                                            if (messageObject8 != null) {
                                            }
                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append("silent_");
                                                stringBuilder3.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                            }
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (z) {
                                                tL_messages_forwardMessages.no_webpage = true;
                                            }
                                            tL_messages_forwardMessages.entities = arrayList2;
                                            tL_messages_forwardMessages.flags |= 8;
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else {
                                            tLObject = new TL_messages_sendBroadcast();
                                            arrayList8 = new ArrayList();
                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                            }
                                            tLObject.message = str6;
                                            tLObject.contacts = arrayList7;
                                            tLObject.media = new TL_inputMediaEmpty();
                                            tLObject.random_id = arrayList8;
                                            performSendMessageRequest(tLObject, messageObject7, null);
                                        }
                                    }
                                }
                                document = tL_document;
                                user3 = user;
                                messageMedia3 = messageMedia;
                                tL_photo3 = tL_photo;
                                if (hashMap2 == null) {
                                }
                                str6 = str4;
                                i5 = i4;
                                i10 = i2;
                                webPage3 = webPage2;
                                document2 = document;
                                str7 = str10;
                                user4 = user3;
                                messageMedia4 = messageMedia3;
                                tL_photo4 = tL_photo3;
                                if (message2.random_id == 0) {
                                    message2.random_id = getNextRandomId();
                                }
                                if (encryptedChat == null) {
                                    message2.via_bot_name = (String) hashMap2.get("bot_name");
                                    if (message2.via_bot_name == null) {
                                        message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                } else {
                                    message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                                }
                                message2.flags |= 2048;
                                message2.params = hashMap2;
                                if (messageObject5 != null) {
                                }
                                message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                                if (inputPeer instanceof TL_inputPeerChannel) {
                                    if (obj != null) {
                                        message2.views = 1;
                                        message2.flags |= 1024;
                                    }
                                    chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                    if (chat != null) {
                                        if (chat.megagroup) {
                                            message2.flags |= Integer.MIN_VALUE;
                                            message2.unread = true;
                                        } else {
                                            message2.post = true;
                                            if (chat.signatures) {
                                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                            }
                                        }
                                    }
                                } else {
                                    message2.unread = true;
                                }
                                message2.flags |= 512;
                                j4 = j;
                                message2.dialog_id = j4;
                                messageObject6 = messageObject;
                                if (messageObject6 == null) {
                                    if (encryptedChat == null) {
                                        user5 = user4;
                                        if (messageObject6.messageOwner.random_id != 0) {
                                            message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                            message2.flags |= 8;
                                            message2.reply_to_msg_id = messageObject.getId();
                                        }
                                    } else {
                                        user5 = user4;
                                    }
                                    message2.flags |= 8;
                                    message2.reply_to_msg_id = messageObject.getId();
                                } else {
                                    user5 = user4;
                                }
                                replyMarkup2 = replyMarkup;
                                message2.flags |= 64;
                                message2.reply_markup = replyMarkup2;
                                if (i3 == 0) {
                                    z3 = z2;
                                    if (!z3) {
                                        messageMedia5 = messageMedia4;
                                        tL_photo5 = tL_photo4;
                                        i6 = i3;
                                        message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                        if (i6 > 0) {
                                            user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                            if (user6 != null) {
                                                processSentMessage(message2.id);
                                                return;
                                            } else if (user6.bot) {
                                                message2.unread = false;
                                            }
                                        }
                                    } else if (sendMessagesHelper.currentChatInfo != null) {
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                        processSentMessage(message2.id);
                                        return;
                                    } else {
                                        arrayList3 = new ArrayList();
                                        tL_photo5 = tL_photo4;
                                        it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                        while (it.hasNext()) {
                                            it2 = it;
                                            messageMedia5 = messageMedia4;
                                            inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                            if (inputUser == null) {
                                                arrayList3.add(inputUser);
                                            }
                                            it = it2;
                                            messageMedia4 = messageMedia5;
                                        }
                                        messageMedia5 = messageMedia4;
                                        message2.to_id = new TL_peerChat();
                                        message2.to_id.chat_id = i3;
                                        z4 = true;
                                        if (z3 != z4) {
                                            if (MessageObject.isVoiceMessage(message2)) {
                                                if (!MessageObject.isRoundVideoMessage(message2)) {
                                                    z4 = true;
                                                }
                                            }
                                            z4 = true;
                                            message2.media_unread = true;
                                        }
                                        message2.send_state = z4;
                                        messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                        messageObject7.replyMessageObject = messageObject6;
                                        messageObject7.attachPathExists = true;
                                        if (messageObject7.videoEditedInfo == null) {
                                        }
                                        if (hashMap2 == null) {
                                            str8 = (String) hashMap2.get("groupId");
                                            if (str8 == null) {
                                                arrayList4 = arrayList3;
                                                longValue = Utilities.parseLong(str8).longValue();
                                                message2.grouped_id = longValue;
                                                message2.flags |= 131072;
                                            } else {
                                                arrayList4 = arrayList3;
                                                longValue = 0;
                                            }
                                            if (hashMap2.get("final") != null) {
                                                obj = 1;
                                                if (longValue != 0) {
                                                    arrayList5 = new ArrayList();
                                                    arrayList5.add(messageObject7);
                                                    arrayList6 = new ArrayList();
                                                    arrayList6.add(message2);
                                                    hashMap3 = hashMap2;
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                    messageObject3 = messageObject7;
                                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                    delayedMessage = null;
                                                } else {
                                                    hashMap3 = hashMap2;
                                                    messageObject3 = messageObject7;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("group_");
                                                    stringBuilder.append(longValue);
                                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                    if (arrayList5 == null) {
                                                    }
                                                    if (delayedMessage == null) {
                                                        delayedMessage = new DelayedMessage(j4);
                                                        delayedMessage.type = 4;
                                                        delayedMessage.groupId = longValue;
                                                        delayedMessage.messageObjects = new ArrayList();
                                                        delayedMessage.messages = new ArrayList();
                                                        delayedMessage.originalPaths = new ArrayList();
                                                        delayedMessage.extraHashMap = new HashMap();
                                                        delayedMessage.encryptedChat = encryptedChat;
                                                    }
                                                    if (obj != null) {
                                                        delayedMessage.finalGroupMessage = message2.id;
                                                    }
                                                }
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append("send message user_id = ");
                                                stringBuilder2.append(inputPeer.user_id);
                                                stringBuilder2.append(" chat_id = ");
                                                stringBuilder2.append(inputPeer.chat_id);
                                                stringBuilder2.append(" channel_id = ");
                                                stringBuilder2.append(inputPeer.channel_id);
                                                stringBuilder2.append(" access_hash = ");
                                                stringBuilder2.append(inputPeer.access_hash);
                                                FileLog.m0d(stringBuilder2.toString());
                                                if (i5 != 0) {
                                                    if (i5 == 9) {
                                                    }
                                                    if (i5 >= 1) {
                                                    }
                                                    j5 = j4;
                                                    i4 = i5;
                                                    hashMap4 = hashMap3;
                                                    messageObject7 = messageObject3;
                                                    messageObject8 = messageObject2;
                                                    if (i4 != 4) {
                                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                        if (messageObject8.messageOwner.ttl == 0) {
                                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                            if (chat2 != null) {
                                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                            }
                                                        } else {
                                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                        }
                                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                        if (messageObject2.getId() < 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    } else if (i4 == 9) {
                                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                        tL_messages_forwardMessages.peer = inputPeer;
                                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                                        if (message2.reply_to_msg_id != 0) {
                                                            tL_messages_forwardMessages.flags |= 1;
                                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                        }
                                                        if (message2.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append("silent_");
                                                            stringBuilder.append(j5);
                                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                        }
                                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                        if (messageObject8 == null) {
                                                            tL_messages_forwardMessages.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                        }
                                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    }
                                                }
                                                j5 = j4;
                                                arrayList7 = arrayList4;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                arrayList2 = arrayList;
                                                if (encryptedChat != null) {
                                                    str8 = str6;
                                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                        tL_decryptedMessage = new TL_decryptedMessage();
                                                    } else {
                                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                    }
                                                    tL_decryptedMessage.ttl = message2.ttl;
                                                    tL_decryptedMessage.entities = arrayList2;
                                                    tL_decryptedMessage.flags |= 128;
                                                    if (message2.reply_to_random_id != 0) {
                                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                        tL_decryptedMessage.flags |= 8;
                                                    }
                                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                    tL_decryptedMessage.flags |= 2048;
                                                    tL_decryptedMessage.random_id = message2.random_id;
                                                    tL_decryptedMessage.message = str8;
                                                    webPage4 = webPage3;
                                                    if (webPage4 != null) {
                                                    }
                                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                } else if (arrayList7 == null) {
                                                    tLObject = new TL_messages_sendBroadcast();
                                                    arrayList8 = new ArrayList();
                                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                    }
                                                    tLObject.message = str6;
                                                    tLObject.contacts = arrayList7;
                                                    tLObject.media = new TL_inputMediaEmpty();
                                                    tLObject.random_id = arrayList8;
                                                    performSendMessageRequest(tLObject, messageObject7, null);
                                                } else {
                                                    str8 = str6;
                                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                    tL_messages_forwardMessages.message = str8;
                                                    if (messageObject8 != null) {
                                                    }
                                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append("silent_");
                                                        stringBuilder3.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (z) {
                                                        tL_messages_forwardMessages.no_webpage = true;
                                                    }
                                                    tL_messages_forwardMessages.entities = arrayList2;
                                                    tL_messages_forwardMessages.flags |= 8;
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                    if (messageObject8 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                }
                                            }
                                        }
                                        arrayList4 = arrayList3;
                                        longValue = 0;
                                        obj = null;
                                        if (longValue != 0) {
                                            hashMap3 = hashMap2;
                                            messageObject3 = messageObject7;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("group_");
                                            stringBuilder.append(longValue);
                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                            if (arrayList5 == null) {
                                            }
                                            if (delayedMessage == null) {
                                                delayedMessage = new DelayedMessage(j4);
                                                delayedMessage.type = 4;
                                                delayedMessage.groupId = longValue;
                                                delayedMessage.messageObjects = new ArrayList();
                                                delayedMessage.messages = new ArrayList();
                                                delayedMessage.originalPaths = new ArrayList();
                                                delayedMessage.extraHashMap = new HashMap();
                                                delayedMessage.encryptedChat = encryptedChat;
                                            }
                                            if (obj != null) {
                                                delayedMessage.finalGroupMessage = message2.id;
                                            }
                                        } else {
                                            arrayList5 = new ArrayList();
                                            arrayList5.add(messageObject7);
                                            arrayList6 = new ArrayList();
                                            arrayList6.add(message2);
                                            hashMap3 = hashMap2;
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                            messageObject3 = messageObject7;
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            delayedMessage = null;
                                        }
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append("send message user_id = ");
                                        stringBuilder2.append(inputPeer.user_id);
                                        stringBuilder2.append(" chat_id = ");
                                        stringBuilder2.append(inputPeer.chat_id);
                                        stringBuilder2.append(" channel_id = ");
                                        stringBuilder2.append(inputPeer.channel_id);
                                        stringBuilder2.append(" access_hash = ");
                                        stringBuilder2.append(inputPeer.access_hash);
                                        FileLog.m0d(stringBuilder2.toString());
                                        if (i5 != 0) {
                                            if (i5 == 9) {
                                            }
                                            if (i5 >= 1) {
                                            }
                                            j5 = j4;
                                            i4 = i5;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            if (i4 != 4) {
                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                if (messageObject8.messageOwner.ttl == 0) {
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                } else {
                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                    if (chat2 != null) {
                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                    }
                                                }
                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                if (messageObject2.getId() < 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            } else if (i4 == 9) {
                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                if (messageObject8 == null) {
                                                    tL_messages_forwardMessages.clear_draft = true;
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            }
                                        }
                                        j5 = j4;
                                        arrayList7 = arrayList4;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        arrayList2 = arrayList;
                                        if (encryptedChat != null) {
                                            str8 = str6;
                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                            } else {
                                                tL_decryptedMessage = new TL_decryptedMessage();
                                            }
                                            tL_decryptedMessage.ttl = message2.ttl;
                                            tL_decryptedMessage.entities = arrayList2;
                                            tL_decryptedMessage.flags |= 128;
                                            if (message2.reply_to_random_id != 0) {
                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                tL_decryptedMessage.flags |= 8;
                                            }
                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                            tL_decryptedMessage.flags |= 2048;
                                            tL_decryptedMessage.random_id = message2.random_id;
                                            tL_decryptedMessage.message = str8;
                                            webPage4 = webPage3;
                                            if (webPage4 != null) {
                                            }
                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else if (arrayList7 == null) {
                                            str8 = str6;
                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                            tL_messages_forwardMessages.message = str8;
                                            if (messageObject8 != null) {
                                            }
                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append("silent_");
                                                stringBuilder3.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                            }
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (z) {
                                                tL_messages_forwardMessages.no_webpage = true;
                                            }
                                            tL_messages_forwardMessages.entities = arrayList2;
                                            tL_messages_forwardMessages.flags |= 8;
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else {
                                            tLObject = new TL_messages_sendBroadcast();
                                            arrayList8 = new ArrayList();
                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                            }
                                            tLObject.message = str6;
                                            tLObject.contacts = arrayList7;
                                            tLObject.media = new TL_inputMediaEmpty();
                                            tLObject.random_id = arrayList8;
                                            performSendMessageRequest(tLObject, messageObject7, null);
                                        }
                                    }
                                }
                                messageMedia5 = messageMedia4;
                                tL_photo5 = tL_photo4;
                                z3 = z2;
                                message2.to_id = new TL_peerUser();
                                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                    message2.to_id.user_id = encryptedChat.admin_id;
                                } else {
                                    message2.to_id.user_id = encryptedChat.participant_id;
                                }
                                if (i10 == 0) {
                                    message2.ttl = i10;
                                } else {
                                    message2.ttl = encryptedChat.ttl;
                                    if (message2.ttl != 0) {
                                        if (message2.media != null) {
                                            message2.media.ttl_seconds = message2.ttl;
                                            messageMedia4 = message2.media;
                                            messageMedia4.flags |= 4;
                                        }
                                    }
                                }
                                if (message2.ttl != 0) {
                                    if (message2.media.document != null) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        } else {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        }
                                    }
                                }
                                z4 = true;
                                arrayList3 = null;
                                if (z3 != z4) {
                                    if (MessageObject.isVoiceMessage(message2)) {
                                        if (!MessageObject.isRoundVideoMessage(message2)) {
                                            z4 = true;
                                        }
                                    }
                                    z4 = true;
                                    message2.media_unread = true;
                                }
                                message2.send_state = z4;
                                messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                messageObject7.replyMessageObject = messageObject6;
                                messageObject7.attachPathExists = true;
                                if (messageObject7.videoEditedInfo == null) {
                                }
                                if (hashMap2 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    str8 = (String) hashMap2.get("groupId");
                                    if (str8 == null) {
                                        arrayList4 = arrayList3;
                                        longValue = 0;
                                    } else {
                                        arrayList4 = arrayList3;
                                        longValue = Utilities.parseLong(str8).longValue();
                                        message2.grouped_id = longValue;
                                        message2.flags |= 131072;
                                    }
                                    if (hashMap2.get("final") != null) {
                                        obj = 1;
                                        if (longValue != 0) {
                                            arrayList5 = new ArrayList();
                                            arrayList5.add(messageObject7);
                                            arrayList6 = new ArrayList();
                                            arrayList6.add(message2);
                                            hashMap3 = hashMap2;
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                            messageObject3 = messageObject7;
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            delayedMessage = null;
                                        } else {
                                            hashMap3 = hashMap2;
                                            messageObject3 = messageObject7;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("group_");
                                            stringBuilder.append(longValue);
                                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                            if (arrayList5 == null) {
                                            }
                                            if (delayedMessage == null) {
                                                delayedMessage = new DelayedMessage(j4);
                                                delayedMessage.type = 4;
                                                delayedMessage.groupId = longValue;
                                                delayedMessage.messageObjects = new ArrayList();
                                                delayedMessage.messages = new ArrayList();
                                                delayedMessage.originalPaths = new ArrayList();
                                                delayedMessage.extraHashMap = new HashMap();
                                                delayedMessage.encryptedChat = encryptedChat;
                                            }
                                            if (obj != null) {
                                                delayedMessage.finalGroupMessage = message2.id;
                                            }
                                        }
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append("send message user_id = ");
                                        stringBuilder2.append(inputPeer.user_id);
                                        stringBuilder2.append(" chat_id = ");
                                        stringBuilder2.append(inputPeer.chat_id);
                                        stringBuilder2.append(" channel_id = ");
                                        stringBuilder2.append(inputPeer.channel_id);
                                        stringBuilder2.append(" access_hash = ");
                                        stringBuilder2.append(inputPeer.access_hash);
                                        FileLog.m0d(stringBuilder2.toString());
                                        if (i5 != 0) {
                                            if (i5 == 9) {
                                            }
                                            if (i5 >= 1) {
                                            }
                                            j5 = j4;
                                            i4 = i5;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            if (i4 != 4) {
                                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                tL_messages_forwardMessages.to_peer = inputPeer;
                                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                if (messageObject8.messageOwner.ttl == 0) {
                                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                    if (chat2 != null) {
                                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                    }
                                                } else {
                                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                }
                                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                if (messageObject2.getId() < 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            } else if (i4 == 9) {
                                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append("silent_");
                                                    stringBuilder.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                }
                                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                if (messageObject8 == null) {
                                                    tL_messages_forwardMessages.clear_draft = true;
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            }
                                        }
                                        j5 = j4;
                                        arrayList7 = arrayList4;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        arrayList2 = arrayList;
                                        if (encryptedChat != null) {
                                            str8 = str6;
                                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                tL_decryptedMessage = new TL_decryptedMessage();
                                            } else {
                                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                            }
                                            tL_decryptedMessage.ttl = message2.ttl;
                                            tL_decryptedMessage.entities = arrayList2;
                                            tL_decryptedMessage.flags |= 128;
                                            if (message2.reply_to_random_id != 0) {
                                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                tL_decryptedMessage.flags |= 8;
                                            }
                                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                            tL_decryptedMessage.flags |= 2048;
                                            tL_decryptedMessage.random_id = message2.random_id;
                                            tL_decryptedMessage.message = str8;
                                            webPage4 = webPage3;
                                            if (webPage4 != null) {
                                            }
                                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        } else if (arrayList7 == null) {
                                            tLObject = new TL_messages_sendBroadcast();
                                            arrayList8 = new ArrayList();
                                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                            }
                                            tLObject.message = str6;
                                            tLObject.contacts = arrayList7;
                                            tLObject.media = new TL_inputMediaEmpty();
                                            tLObject.random_id = arrayList8;
                                            performSendMessageRequest(tLObject, messageObject7, null);
                                        } else {
                                            str8 = str6;
                                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                                            tL_messages_forwardMessages.message = str8;
                                            if (messageObject8 != null) {
                                            }
                                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append("silent_");
                                                stringBuilder3.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                            }
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (z) {
                                                tL_messages_forwardMessages.no_webpage = true;
                                            }
                                            tL_messages_forwardMessages.entities = arrayList2;
                                            tL_messages_forwardMessages.flags |= 8;
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                            if (messageObject8 == null) {
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                        }
                                    }
                                }
                                obj = null;
                                if (longValue != 0) {
                                    hashMap3 = hashMap2;
                                    messageObject3 = messageObject7;
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("group_");
                                    stringBuilder.append(longValue);
                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                    if (arrayList5 == null) {
                                    }
                                    if (delayedMessage == null) {
                                        delayedMessage = new DelayedMessage(j4);
                                        delayedMessage.type = 4;
                                        delayedMessage.groupId = longValue;
                                        delayedMessage.messageObjects = new ArrayList();
                                        delayedMessage.messages = new ArrayList();
                                        delayedMessage.originalPaths = new ArrayList();
                                        delayedMessage.extraHashMap = new HashMap();
                                        delayedMessage.encryptedChat = encryptedChat;
                                    }
                                    if (obj != null) {
                                        delayedMessage.finalGroupMessage = message2.id;
                                    }
                                } else {
                                    arrayList5 = new ArrayList();
                                    arrayList5.add(messageObject7);
                                    arrayList6 = new ArrayList();
                                    arrayList6.add(message2);
                                    hashMap3 = hashMap2;
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                    messageObject3 = messageObject7;
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                    delayedMessage = null;
                                }
                                stringBuilder2 = new StringBuilder();
                                stringBuilder2.append("send message user_id = ");
                                stringBuilder2.append(inputPeer.user_id);
                                stringBuilder2.append(" chat_id = ");
                                stringBuilder2.append(inputPeer.chat_id);
                                stringBuilder2.append(" channel_id = ");
                                stringBuilder2.append(inputPeer.channel_id);
                                stringBuilder2.append(" access_hash = ");
                                stringBuilder2.append(inputPeer.access_hash);
                                FileLog.m0d(stringBuilder2.toString());
                                if (i5 != 0) {
                                    if (i5 == 9) {
                                    }
                                    if (i5 >= 1) {
                                    }
                                    j5 = j4;
                                    i4 = i5;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    if (i4 != 4) {
                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                        if (messageObject8.messageOwner.ttl == 0) {
                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                        } else {
                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                            if (chat2 != null) {
                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                            }
                                        }
                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("silent_");
                                            stringBuilder.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                        }
                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                        if (messageObject2.getId() < 0) {
                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                        }
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                    } else if (i4 == 9) {
                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("silent_");
                                            stringBuilder.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                        }
                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                        if (messageObject8 == null) {
                                            tL_messages_forwardMessages.clear_draft = true;
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                    }
                                }
                                j5 = j4;
                                arrayList7 = arrayList4;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                arrayList2 = arrayList;
                                if (encryptedChat != null) {
                                    str8 = str6;
                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                    } else {
                                        tL_decryptedMessage = new TL_decryptedMessage();
                                    }
                                    tL_decryptedMessage.ttl = message2.ttl;
                                    tL_decryptedMessage.entities = arrayList2;
                                    tL_decryptedMessage.flags |= 128;
                                    if (message2.reply_to_random_id != 0) {
                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                        tL_decryptedMessage.flags |= 8;
                                    }
                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                    tL_decryptedMessage.flags |= 2048;
                                    tL_decryptedMessage.random_id = message2.random_id;
                                    tL_decryptedMessage.message = str8;
                                    webPage4 = webPage3;
                                    if (webPage4 != null) {
                                    }
                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                    if (messageObject8 == null) {
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                } else if (arrayList7 == null) {
                                    str8 = str6;
                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                    tL_messages_forwardMessages.message = str8;
                                    if (messageObject8 != null) {
                                    }
                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder3 = new StringBuilder();
                                        stringBuilder3.append("silent_");
                                        stringBuilder3.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                    }
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (z) {
                                        tL_messages_forwardMessages.no_webpage = true;
                                    }
                                    tL_messages_forwardMessages.entities = arrayList2;
                                    tL_messages_forwardMessages.flags |= 8;
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                    if (messageObject8 == null) {
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                } else {
                                    tLObject = new TL_messages_sendBroadcast();
                                    arrayList8 = new ArrayList();
                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                    }
                                    tLObject.message = str6;
                                    tLObject.contacts = arrayList7;
                                    tLObject.media = new TL_inputMediaEmpty();
                                    tLObject.random_id = arrayList8;
                                    performSendMessageRequest(tLObject, messageObject7, null);
                                }
                            }
                            str6 = str4;
                            i3 = i10;
                            i10 = i2;
                            webPage3 = webPage2;
                            str7 = str10;
                            messageMedia4 = messageMedia;
                            i5 = 4;
                            tL_photo4 = tL_photo;
                            user4 = user;
                        } catch (Throwable e322) {
                            th = e322;
                            messageObject7 = null;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                            if (messageObject7 != null) {
                                messageObject7.messageOwner.send_state = 2;
                            }
                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                            processSentMessage(message2.id);
                        }
                    } catch (Throwable e3222) {
                        th = e3222;
                        message2 = null;
                        messageObject7 = null;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                        if (messageObject7 != null) {
                            messageObject7.messageOwner.send_state = 2;
                        }
                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                        processSentMessage(message2.id);
                    }
                }
                i3 = i10;
                if (str4 == null) {
                    if (encryptedChat == null) {
                        tL_message_secret = new TL_message_secret();
                    } else {
                        tL_message_secret = new TL_message();
                    }
                    message = tL_message_secret;
                    if (encryptedChat != null) {
                        try {
                            if (webPage2 instanceof TL_webPagePending) {
                                if (webPage2.url == null) {
                                    tL_webPageUrlPending = new TL_webPageUrlPending();
                                    tL_webPageUrlPending.url = webPage2.url;
                                    webPage2 = tL_webPageUrlPending;
                                } else {
                                    webPage2 = null;
                                }
                            }
                        } catch (Throwable e32222) {
                            th = e32222;
                            message2 = message;
                            messageObject7 = null;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                            if (messageObject7 != null) {
                                messageObject7.messageOwner.send_state = 2;
                            }
                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                            processSentMessage(message2.id);
                        }
                    }
                    if (webPage2 != null) {
                        message.media = new TL_messageMediaEmpty();
                    } else {
                        message.media = new TL_messageMediaWebPage();
                        message.media.webpage = webPage2;
                    }
                    i9 = (hashMap2 == null && hashMap2.containsKey("query_id")) ? 9 : 0;
                    message.message = str4;
                } else {
                    messageMedia2 = messageMedia;
                    if (messageMedia2 == null) {
                        if (encryptedChat == null) {
                            message = new TL_message_secret();
                        } else {
                            message = new TL_message();
                        }
                        message.media = messageMedia2;
                        if (hashMap2 == null || !hashMap2.containsKey("query_id")) {
                            message2 = message;
                            i10 = i2;
                            tL_document3 = tL_document;
                            i9 = 1;
                            if (arrayList2 != null) {
                                if (!arrayList.isEmpty()) {
                                    message2.entities = arrayList2;
                                    message2.flags |= 128;
                                }
                            }
                            str4 = str10;
                            if (str4 != null) {
                                message2.message = str4;
                            } else if (message2.message == null) {
                                message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            if (message2.attachPath == null) {
                                message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                            message2.id = i2;
                            message2.local_id = i2;
                            message2.out = true;
                            if (obj != null || inputPeer == null) {
                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                message2.flags |= 256;
                            } else {
                                message2.from_id = -inputPeer.channel_id;
                            }
                            UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                            str7 = str4;
                            webPage3 = webPage2;
                            i5 = i9;
                            messageMedia4 = messageMedia;
                            tL_photo4 = tL_photo;
                            user4 = user;
                            str6 = str;
                        }
                    } else {
                        photo = tL_photo;
                        if (photo != null) {
                            if (encryptedChat == null) {
                                message2 = new TL_message_secret();
                            } else {
                                message2 = new TL_message();
                            }
                            message2.media = new TL_messageMediaPhoto();
                            messageMedia6 = message2.media;
                            messageMedia6.flags |= 3;
                            if (arrayList2 != null) {
                                message2.entities = arrayList2;
                            }
                            if (i2 != 0) {
                                message2.media.ttl_seconds = i2;
                                message2.ttl = i2;
                                messageMedia6 = message2.media;
                                messageMedia6.flags |= 4;
                            }
                            message2.media.photo = photo;
                            i9 = (hashMap2 == null && hashMap2.containsKey("query_id")) ? 9 : 2;
                            if (str5 == null && str3.length() > 0 && str5.startsWith("http")) {
                                message2.attachPath = str5;
                                i10 = i2;
                                tL_document3 = tL_document;
                                if (arrayList2 != null) {
                                    if (arrayList.isEmpty()) {
                                        message2.entities = arrayList2;
                                        message2.flags |= 128;
                                    }
                                }
                                str4 = str10;
                                if (str4 != null) {
                                    message2.message = str4;
                                } else if (message2.message == null) {
                                    message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                if (message2.attachPath == null) {
                                    message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                                message2.id = i2;
                                message2.local_id = i2;
                                message2.out = true;
                                if (obj != null) {
                                }
                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                message2.flags |= 256;
                                UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                                str7 = str4;
                                webPage3 = webPage2;
                                i5 = i9;
                                messageMedia4 = messageMedia;
                                tL_photo4 = tL_photo;
                                user4 = user;
                                str6 = str;
                            } else {
                                message2.attachPath = FileLoader.getPathToAttach(((PhotoSize) photo.sizes.get(photo.sizes.size() - 1)).location, true).toString();
                                i10 = i2;
                                tL_document3 = tL_document;
                                if (arrayList2 != null) {
                                    if (arrayList.isEmpty()) {
                                        message2.entities = arrayList2;
                                        message2.flags |= 128;
                                    }
                                }
                                str4 = str10;
                                if (str4 != null) {
                                    message2.message = str4;
                                } else if (message2.message == null) {
                                    message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                if (message2.attachPath == null) {
                                    message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                                message2.id = i2;
                                message2.local_id = i2;
                                message2.out = true;
                                if (obj != null) {
                                }
                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                message2.flags |= 256;
                                UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                                str7 = str4;
                                webPage3 = webPage2;
                                i5 = i9;
                                messageMedia4 = messageMedia;
                                tL_photo4 = tL_photo;
                                user4 = user;
                                str6 = str;
                            }
                        } else if (tL_game2 == null) {
                            message = new TL_message();
                            message.media = new TL_messageMediaGame();
                            message.media.game = tL_game2;
                            if (hashMap2 != null && hashMap2.containsKey("query_id")) {
                            }
                        } else {
                            user7 = user;
                            if (user7 == null) {
                                if (encryptedChat == null) {
                                    try {
                                        tL_message_secret = new TL_message_secret();
                                    } catch (Throwable e322222) {
                                        th = e322222;
                                        message2 = null;
                                        messageObject7 = message2;
                                        FileLog.m3e(th);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                        if (messageObject7 != null) {
                                            messageObject7.messageOwner.send_state = 2;
                                        }
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                        processSentMessage(message2.id);
                                    }
                                }
                                tL_message_secret = new TL_message();
                                try {
                                    tL_message_secret.media = new TL_messageMediaContact();
                                    tL_message_secret.media.phone_number = user7.phone;
                                    tL_message_secret.media.first_name = user7.first_name;
                                    tL_message_secret.media.last_name = user7.last_name;
                                    tL_message_secret.media.user_id = user7.id;
                                    if (tL_message_secret.media.first_name == null) {
                                        messageMedia7 = tL_message_secret.media;
                                        str9 = TtmlNode.ANONYMOUS_REGION_ID;
                                        messageMedia7.first_name = str9;
                                        user7.first_name = str9;
                                    }
                                    if (tL_message_secret.media.last_name == null) {
                                        messageMedia7 = tL_message_secret.media;
                                        str9 = TtmlNode.ANONYMOUS_REGION_ID;
                                        messageMedia7.last_name = str9;
                                        user7.last_name = str9;
                                    }
                                    if (hashMap2 == null && hashMap2.containsKey("query_id")) {
                                        message2 = tL_message_secret;
                                        i10 = i2;
                                        tL_document3 = tL_document;
                                        i9 = 9;
                                        if (arrayList2 != null) {
                                            if (arrayList.isEmpty()) {
                                                message2.entities = arrayList2;
                                                message2.flags |= 128;
                                            }
                                        }
                                        str4 = str10;
                                        if (str4 != null) {
                                            message2.message = str4;
                                        } else if (message2.message == null) {
                                            message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        if (message2.attachPath == null) {
                                            message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                                        message2.id = i2;
                                        message2.local_id = i2;
                                        message2.out = true;
                                        if (obj != null) {
                                        }
                                        message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        message2.flags |= 256;
                                        UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                                        str7 = str4;
                                        webPage3 = webPage2;
                                        i5 = i9;
                                        messageMedia4 = messageMedia;
                                        tL_photo4 = tL_photo;
                                        user4 = user;
                                        str6 = str;
                                    } else {
                                        message2 = tL_message_secret;
                                        i10 = i2;
                                        tL_document3 = tL_document;
                                        i9 = 6;
                                        if (arrayList2 != null) {
                                            if (arrayList.isEmpty()) {
                                                message2.entities = arrayList2;
                                                message2.flags |= 128;
                                            }
                                        }
                                        str4 = str10;
                                        if (str4 != null) {
                                            message2.message = str4;
                                        } else if (message2.message == null) {
                                            message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        if (message2.attachPath == null) {
                                            message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                                        message2.id = i2;
                                        message2.local_id = i2;
                                        message2.out = true;
                                        if (obj != null) {
                                        }
                                        message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        message2.flags |= 256;
                                        UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                                        str7 = str4;
                                        webPage3 = webPage2;
                                        i5 = i9;
                                        messageMedia4 = messageMedia;
                                        tL_photo4 = tL_photo;
                                        user4 = user;
                                        str6 = str;
                                    }
                                } catch (Throwable e3222222) {
                                    th = e3222222;
                                    message2 = tL_message_secret;
                                    messageObject7 = null;
                                    FileLog.m3e(th);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    if (messageObject7 != null) {
                                        messageObject7.messageOwner.send_state = 2;
                                    }
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                }
                            }
                            i10 = i2;
                            document3 = tL_document;
                            if (document3 == null) {
                                if (encryptedChat == null) {
                                    tL_message_secret2 = new TL_message_secret();
                                } else {
                                    tL_message_secret2 = new TL_message();
                                }
                                try {
                                    tL_message_secret2.media = new TL_messageMediaDocument();
                                    messageMedia8 = tL_message_secret2.media;
                                    messageMedia8.flags |= 3;
                                    if (i10 != 0) {
                                        try {
                                            tL_message_secret2.media.ttl_seconds = i10;
                                            tL_message_secret2.ttl = i10;
                                            messageMedia6 = tL_message_secret2.media;
                                            messageMedia6.flags |= 4;
                                        } catch (Throwable e32222222) {
                                            th = e32222222;
                                            message2 = tL_message_secret2;
                                            messageObject7 = null;
                                            FileLog.m3e(th);
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                            if (messageObject7 != null) {
                                                messageObject7.messageOwner.send_state = 2;
                                            }
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                            processSentMessage(message2.id);
                                        }
                                    }
                                    tL_message_secret2.media.document = document3;
                                    if (hashMap2 != null) {
                                        if (hashMap2.containsKey("query_id")) {
                                            i9 = 9;
                                            if (videoEditedInfo != null) {
                                                str4 = videoEditedInfo.getString();
                                                if (hashMap2 == null) {
                                                    hashMap2 = new HashMap();
                                                }
                                                hashMap2.put("ve", str4);
                                            }
                                            if (encryptedChat != null || document3.dc_id <= 0 || MessageObject.isStickerDocument(tL_document)) {
                                                tL_message_secret2.attachPath = str5;
                                            } else {
                                                tL_message_secret2.attachPath = FileLoader.getPathToAttach(tL_document).toString();
                                            }
                                            if (encryptedChat != null && MessageObject.isStickerDocument(tL_document)) {
                                                i8 = 0;
                                                while (i8 < document3.attributes.size()) {
                                                    documentAttribute2 = (DocumentAttribute) document3.attributes.get(i8);
                                                    message3 = tL_message_secret2;
                                                    try {
                                                        if (documentAttribute2 instanceof TL_documentAttributeSticker) {
                                                            hashMap5 = hashMap2;
                                                            i8++;
                                                            tL_message_secret2 = message3;
                                                            webPage2 = webPage;
                                                        } else {
                                                            document3.attributes.remove(i8);
                                                            tL_documentAttributeSticker_layer55 = new TL_documentAttributeSticker_layer55();
                                                            document3.attributes.add(tL_documentAttributeSticker_layer55);
                                                            tL_documentAttributeSticker_layer55.alt = documentAttribute2.alt;
                                                            if (documentAttribute2.stickerset == null) {
                                                                if (documentAttribute2.stickerset instanceof TL_inputStickerSetShortName) {
                                                                    hashMap5 = hashMap2;
                                                                    stickerSetName = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(documentAttribute2.stickerset.id);
                                                                } else {
                                                                    stickerSetName = documentAttribute2.stickerset.short_name;
                                                                    hashMap5 = hashMap2;
                                                                }
                                                                if (TextUtils.isEmpty(stickerSetName)) {
                                                                    tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetShortName();
                                                                    tL_documentAttributeSticker_layer55.stickerset.short_name = stickerSetName;
                                                                } else {
                                                                    tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                                }
                                                            } else {
                                                                hashMap5 = hashMap2;
                                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                            }
                                                            message2 = message3;
                                                            hashMap2 = hashMap5;
                                                        }
                                                    } catch (Exception e6) {
                                                        e32222222 = e6;
                                                    }
                                                }
                                            }
                                            message3 = tL_message_secret2;
                                            hashMap5 = hashMap2;
                                            message2 = message3;
                                            hashMap2 = hashMap5;
                                        }
                                    }
                                    if (!MessageObject.isVideoDocument(tL_document)) {
                                        if (!MessageObject.isRoundVideoDocument(tL_document)) {
                                            if (videoEditedInfo != null) {
                                                i9 = MessageObject.isVoiceDocument(tL_document) ? 8 : 7;
                                                if (videoEditedInfo != null) {
                                                    str4 = videoEditedInfo.getString();
                                                    if (hashMap2 == null) {
                                                        hashMap2 = new HashMap();
                                                    }
                                                    hashMap2.put("ve", str4);
                                                }
                                                if (encryptedChat != null) {
                                                }
                                                tL_message_secret2.attachPath = str5;
                                                i8 = 0;
                                                while (i8 < document3.attributes.size()) {
                                                    documentAttribute2 = (DocumentAttribute) document3.attributes.get(i8);
                                                    message3 = tL_message_secret2;
                                                    if (documentAttribute2 instanceof TL_documentAttributeSticker) {
                                                        hashMap5 = hashMap2;
                                                        i8++;
                                                        tL_message_secret2 = message3;
                                                        webPage2 = webPage;
                                                    } else {
                                                        document3.attributes.remove(i8);
                                                        tL_documentAttributeSticker_layer55 = new TL_documentAttributeSticker_layer55();
                                                        document3.attributes.add(tL_documentAttributeSticker_layer55);
                                                        tL_documentAttributeSticker_layer55.alt = documentAttribute2.alt;
                                                        if (documentAttribute2.stickerset == null) {
                                                            hashMap5 = hashMap2;
                                                            tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                        } else {
                                                            if (documentAttribute2.stickerset instanceof TL_inputStickerSetShortName) {
                                                                hashMap5 = hashMap2;
                                                                stickerSetName = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(documentAttribute2.stickerset.id);
                                                            } else {
                                                                stickerSetName = documentAttribute2.stickerset.short_name;
                                                                hashMap5 = hashMap2;
                                                            }
                                                            if (TextUtils.isEmpty(stickerSetName)) {
                                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                            } else {
                                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetShortName();
                                                                tL_documentAttributeSticker_layer55.stickerset.short_name = stickerSetName;
                                                            }
                                                        }
                                                        message2 = message3;
                                                        hashMap2 = hashMap5;
                                                    }
                                                }
                                                message3 = tL_message_secret2;
                                                hashMap5 = hashMap2;
                                                message2 = message3;
                                                hashMap2 = hashMap5;
                                            }
                                        }
                                    }
                                    i9 = 3;
                                    if (videoEditedInfo != null) {
                                        str4 = videoEditedInfo.getString();
                                        if (hashMap2 == null) {
                                            hashMap2 = new HashMap();
                                        }
                                        hashMap2.put("ve", str4);
                                    }
                                    if (encryptedChat != null) {
                                    }
                                    tL_message_secret2.attachPath = str5;
                                    i8 = 0;
                                    while (i8 < document3.attributes.size()) {
                                        documentAttribute2 = (DocumentAttribute) document3.attributes.get(i8);
                                        message3 = tL_message_secret2;
                                        if (documentAttribute2 instanceof TL_documentAttributeSticker) {
                                            document3.attributes.remove(i8);
                                            tL_documentAttributeSticker_layer55 = new TL_documentAttributeSticker_layer55();
                                            document3.attributes.add(tL_documentAttributeSticker_layer55);
                                            tL_documentAttributeSticker_layer55.alt = documentAttribute2.alt;
                                            if (documentAttribute2.stickerset == null) {
                                                if (documentAttribute2.stickerset instanceof TL_inputStickerSetShortName) {
                                                    stickerSetName = documentAttribute2.stickerset.short_name;
                                                    hashMap5 = hashMap2;
                                                } else {
                                                    hashMap5 = hashMap2;
                                                    stickerSetName = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(documentAttribute2.stickerset.id);
                                                }
                                                if (TextUtils.isEmpty(stickerSetName)) {
                                                    tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetShortName();
                                                    tL_documentAttributeSticker_layer55.stickerset.short_name = stickerSetName;
                                                } else {
                                                    tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                }
                                            } else {
                                                hashMap5 = hashMap2;
                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                            }
                                            message2 = message3;
                                            hashMap2 = hashMap5;
                                        } else {
                                            hashMap5 = hashMap2;
                                            i8++;
                                            tL_message_secret2 = message3;
                                            webPage2 = webPage;
                                        }
                                    }
                                    message3 = tL_message_secret2;
                                    hashMap5 = hashMap2;
                                    message2 = message3;
                                    hashMap2 = hashMap5;
                                } catch (Exception e7) {
                                    e32222222 = e7;
                                    message3 = tL_message_secret2;
                                    th = e32222222;
                                    message2 = message3;
                                    messageObject7 = null;
                                    FileLog.m3e(th);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    if (messageObject7 != null) {
                                        messageObject7.messageOwner.send_state = 2;
                                    }
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                }
                            }
                            message2 = null;
                            webPage2 = webPage;
                            if (arrayList2 != null) {
                                if (arrayList.isEmpty()) {
                                    message2.entities = arrayList2;
                                    message2.flags |= 128;
                                }
                            }
                            str4 = str10;
                            if (str4 != null) {
                                message2.message = str4;
                            } else if (message2.message == null) {
                                message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            if (message2.attachPath == null) {
                                message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                            message2.id = i2;
                            message2.local_id = i2;
                            message2.out = true;
                            if (obj != null) {
                            }
                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                            message2.flags |= 256;
                            UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                            str7 = str4;
                            webPage3 = webPage2;
                            i5 = i9;
                            messageMedia4 = messageMedia;
                            tL_photo4 = tL_photo;
                            user4 = user;
                            str6 = str;
                        }
                    }
                    message2 = message;
                    i10 = i2;
                    tL_document3 = tL_document;
                    i9 = 9;
                    if (arrayList2 != null) {
                        if (arrayList.isEmpty()) {
                            message2.entities = arrayList2;
                            message2.flags |= 128;
                        }
                    }
                    str4 = str10;
                    if (str4 != null) {
                        message2.message = str4;
                    } else if (message2.message == null) {
                        message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    if (message2.attachPath == null) {
                        message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                    message2.id = i2;
                    message2.local_id = i2;
                    message2.out = true;
                    if (obj != null) {
                    }
                    message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                    message2.flags |= 256;
                    UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                    str7 = str4;
                    webPage3 = webPage2;
                    i5 = i9;
                    messageMedia4 = messageMedia;
                    tL_photo4 = tL_photo;
                    user4 = user;
                    str6 = str;
                }
                message2 = message;
                i10 = i2;
                tL_document3 = tL_document;
                if (arrayList2 != null) {
                    if (arrayList.isEmpty()) {
                        message2.entities = arrayList2;
                        message2.flags |= 128;
                    }
                }
                str4 = str10;
                if (str4 != null) {
                    message2.message = str4;
                } else if (message2.message == null) {
                    message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                }
                try {
                    if (message2.attachPath == null) {
                        message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                    message2.id = i2;
                    message2.local_id = i2;
                    message2.out = true;
                    if (obj != null) {
                    }
                    message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                    message2.flags |= 256;
                    UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                    str7 = str4;
                    webPage3 = webPage2;
                    i5 = i9;
                    messageMedia4 = messageMedia;
                    tL_photo4 = tL_photo;
                    user4 = user;
                    str6 = str;
                } catch (Throwable e322222222) {
                    th = e322222222;
                    messageObject7 = null;
                    FileLog.m3e(th);
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                    if (messageObject7 != null) {
                        messageObject7.messageOwner.send_state = 2;
                    }
                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                    processSentMessage(message2.id);
                }
                document2 = tL_document;
                if (message2.random_id == 0) {
                    message2.random_id = getNextRandomId();
                }
                if (encryptedChat == null) {
                    message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                } else {
                    message2.via_bot_name = (String) hashMap2.get("bot_name");
                    if (message2.via_bot_name == null) {
                        message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                }
                message2.flags |= 2048;
                message2.params = hashMap2;
                if (messageObject5 != null) {
                }
                message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                if (inputPeer instanceof TL_inputPeerChannel) {
                    message2.unread = true;
                } else {
                    if (obj != null) {
                        message2.views = 1;
                        message2.flags |= 1024;
                    }
                    chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                    if (chat != null) {
                        if (chat.megagroup) {
                            message2.post = true;
                            if (chat.signatures) {
                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                            }
                        } else {
                            message2.flags |= Integer.MIN_VALUE;
                            message2.unread = true;
                        }
                    }
                }
                message2.flags |= 512;
                j4 = j;
                message2.dialog_id = j4;
                messageObject6 = messageObject;
                if (messageObject6 == null) {
                    user5 = user4;
                } else {
                    if (encryptedChat == null) {
                        user5 = user4;
                    } else {
                        user5 = user4;
                        if (messageObject6.messageOwner.random_id != 0) {
                            message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                            message2.flags |= 8;
                            message2.reply_to_msg_id = messageObject.getId();
                        }
                    }
                    message2.flags |= 8;
                    message2.reply_to_msg_id = messageObject.getId();
                }
                replyMarkup2 = replyMarkup;
                message2.flags |= 64;
                message2.reply_markup = replyMarkup2;
                if (i3 == 0) {
                    messageMedia5 = messageMedia4;
                    tL_photo5 = tL_photo4;
                    z3 = z2;
                    message2.to_id = new TL_peerUser();
                    if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                        message2.to_id.user_id = encryptedChat.participant_id;
                    } else {
                        message2.to_id.user_id = encryptedChat.admin_id;
                    }
                    if (i10 == 0) {
                        message2.ttl = encryptedChat.ttl;
                        if (message2.ttl != 0) {
                            if (message2.media != null) {
                                message2.media.ttl_seconds = message2.ttl;
                                messageMedia4 = message2.media;
                                messageMedia4.flags |= 4;
                            }
                        }
                    } else {
                        message2.ttl = i10;
                    }
                    if (message2.ttl != 0) {
                        if (message2.media.document != null) {
                            if (MessageObject.isVoiceMessage(message2)) {
                                for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                    documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                    if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                        i2 = documentAttribute.duration;
                                        break;
                                    }
                                }
                                i2 = 0;
                                message2.ttl = Math.max(message2.ttl, i2 + 1);
                            } else {
                                for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                    documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                    if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                        i2 = documentAttribute.duration;
                                        break;
                                    }
                                }
                                i2 = 0;
                                message2.ttl = Math.max(message2.ttl, i2 + 1);
                            }
                        }
                    }
                } else {
                    z3 = z2;
                    if (!z3) {
                        messageMedia5 = messageMedia4;
                        tL_photo5 = tL_photo4;
                        i6 = i3;
                        message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                        if (i6 > 0) {
                            user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                            if (user6 != null) {
                                processSentMessage(message2.id);
                                return;
                            } else if (user6.bot) {
                                message2.unread = false;
                            }
                        }
                    } else if (sendMessagesHelper.currentChatInfo != null) {
                        arrayList3 = new ArrayList();
                        tL_photo5 = tL_photo4;
                        it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                        while (it.hasNext()) {
                            it2 = it;
                            messageMedia5 = messageMedia4;
                            inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                            if (inputUser == null) {
                                arrayList3.add(inputUser);
                            }
                            it = it2;
                            messageMedia4 = messageMedia5;
                        }
                        messageMedia5 = messageMedia4;
                        message2.to_id = new TL_peerChat();
                        message2.to_id.chat_id = i3;
                        z4 = true;
                        if (z3 != z4) {
                            if (MessageObject.isVoiceMessage(message2)) {
                                if (!MessageObject.isRoundVideoMessage(message2)) {
                                    z4 = true;
                                }
                            }
                            z4 = true;
                            message2.media_unread = true;
                        }
                        message2.send_state = z4;
                        messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                        messageObject7.replyMessageObject = messageObject6;
                        messageObject7.attachPathExists = true;
                        if (messageObject7.videoEditedInfo == null) {
                        }
                        if (hashMap2 == null) {
                            str8 = (String) hashMap2.get("groupId");
                            if (str8 == null) {
                                arrayList4 = arrayList3;
                                longValue = Utilities.parseLong(str8).longValue();
                                message2.grouped_id = longValue;
                                message2.flags |= 131072;
                            } else {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            }
                            if (hashMap2.get("final") != null) {
                                obj = 1;
                                if (longValue != 0) {
                                    arrayList5 = new ArrayList();
                                    arrayList5.add(messageObject7);
                                    arrayList6 = new ArrayList();
                                    arrayList6.add(message2);
                                    hashMap3 = hashMap2;
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                    messageObject3 = messageObject7;
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                    delayedMessage = null;
                                } else {
                                    hashMap3 = hashMap2;
                                    messageObject3 = messageObject7;
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("group_");
                                    stringBuilder.append(longValue);
                                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                    if (arrayList5 == null) {
                                    }
                                    if (delayedMessage == null) {
                                        delayedMessage = new DelayedMessage(j4);
                                        delayedMessage.type = 4;
                                        delayedMessage.groupId = longValue;
                                        delayedMessage.messageObjects = new ArrayList();
                                        delayedMessage.messages = new ArrayList();
                                        delayedMessage.originalPaths = new ArrayList();
                                        delayedMessage.extraHashMap = new HashMap();
                                        delayedMessage.encryptedChat = encryptedChat;
                                    }
                                    if (obj != null) {
                                        delayedMessage.finalGroupMessage = message2.id;
                                    }
                                }
                                stringBuilder2 = new StringBuilder();
                                stringBuilder2.append("send message user_id = ");
                                stringBuilder2.append(inputPeer.user_id);
                                stringBuilder2.append(" chat_id = ");
                                stringBuilder2.append(inputPeer.chat_id);
                                stringBuilder2.append(" channel_id = ");
                                stringBuilder2.append(inputPeer.channel_id);
                                stringBuilder2.append(" access_hash = ");
                                stringBuilder2.append(inputPeer.access_hash);
                                FileLog.m0d(stringBuilder2.toString());
                                if (i5 != 0) {
                                    if (i5 == 9) {
                                    }
                                    if (i5 >= 1) {
                                    }
                                    j5 = j4;
                                    i4 = i5;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    if (i4 != 4) {
                                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                        tL_messages_forwardMessages.to_peer = inputPeer;
                                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                        if (messageObject8.messageOwner.ttl == 0) {
                                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                            if (chat2 != null) {
                                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                            }
                                        } else {
                                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                        }
                                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("silent_");
                                            stringBuilder.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                        }
                                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                        if (messageObject2.getId() < 0) {
                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                        } else if (messageObject8.messageOwner.fwd_from != null) {
                                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                        }
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                    } else if (i4 == 9) {
                                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append("silent_");
                                            stringBuilder.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                        }
                                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                        if (messageObject8 == null) {
                                            tL_messages_forwardMessages.clear_draft = true;
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                    }
                                }
                                j5 = j4;
                                arrayList7 = arrayList4;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                arrayList2 = arrayList;
                                if (encryptedChat != null) {
                                    str8 = str6;
                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                        tL_decryptedMessage = new TL_decryptedMessage();
                                    } else {
                                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                    }
                                    tL_decryptedMessage.ttl = message2.ttl;
                                    tL_decryptedMessage.entities = arrayList2;
                                    tL_decryptedMessage.flags |= 128;
                                    if (message2.reply_to_random_id != 0) {
                                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                        tL_decryptedMessage.flags |= 8;
                                    }
                                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                    tL_decryptedMessage.flags |= 2048;
                                    tL_decryptedMessage.random_id = message2.random_id;
                                    tL_decryptedMessage.message = str8;
                                    webPage4 = webPage3;
                                    if (webPage4 != null) {
                                    }
                                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                    if (messageObject8 == null) {
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                } else if (arrayList7 == null) {
                                    tLObject = new TL_messages_sendBroadcast();
                                    arrayList8 = new ArrayList();
                                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                    }
                                    tLObject.message = str6;
                                    tLObject.contacts = arrayList7;
                                    tLObject.media = new TL_inputMediaEmpty();
                                    tLObject.random_id = arrayList8;
                                    performSendMessageRequest(tLObject, messageObject7, null);
                                } else {
                                    str8 = str6;
                                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                                    tL_messages_forwardMessages.message = str8;
                                    if (messageObject8 != null) {
                                    }
                                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder3 = new StringBuilder();
                                        stringBuilder3.append("silent_");
                                        stringBuilder3.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                    }
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (z) {
                                        tL_messages_forwardMessages.no_webpage = true;
                                    }
                                    tL_messages_forwardMessages.entities = arrayList2;
                                    tL_messages_forwardMessages.flags |= 8;
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                    if (messageObject8 == null) {
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                }
                            }
                        }
                        arrayList4 = arrayList3;
                        longValue = 0;
                        obj = null;
                        if (longValue != 0) {
                            hashMap3 = hashMap2;
                            messageObject3 = messageObject7;
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("group_");
                            stringBuilder.append(longValue);
                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                            if (arrayList5 == null) {
                            }
                            if (delayedMessage == null) {
                                delayedMessage = new DelayedMessage(j4);
                                delayedMessage.type = 4;
                                delayedMessage.groupId = longValue;
                                delayedMessage.messageObjects = new ArrayList();
                                delayedMessage.messages = new ArrayList();
                                delayedMessage.originalPaths = new ArrayList();
                                delayedMessage.extraHashMap = new HashMap();
                                delayedMessage.encryptedChat = encryptedChat;
                            }
                            if (obj != null) {
                                delayedMessage.finalGroupMessage = message2.id;
                            }
                        } else {
                            arrayList5 = new ArrayList();
                            arrayList5.add(messageObject7);
                            arrayList6 = new ArrayList();
                            arrayList6.add(message2);
                            hashMap3 = hashMap2;
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                            messageObject3 = messageObject7;
                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                            delayedMessage = null;
                        }
                        stringBuilder2 = new StringBuilder();
                        stringBuilder2.append("send message user_id = ");
                        stringBuilder2.append(inputPeer.user_id);
                        stringBuilder2.append(" chat_id = ");
                        stringBuilder2.append(inputPeer.chat_id);
                        stringBuilder2.append(" channel_id = ");
                        stringBuilder2.append(inputPeer.channel_id);
                        stringBuilder2.append(" access_hash = ");
                        stringBuilder2.append(inputPeer.access_hash);
                        FileLog.m0d(stringBuilder2.toString());
                        if (i5 != 0) {
                            if (i5 == 9) {
                            }
                            if (i5 >= 1) {
                            }
                            j5 = j4;
                            i4 = i5;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            if (i4 != 4) {
                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                tL_messages_forwardMessages.to_peer = inputPeer;
                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                if (messageObject8.messageOwner.ttl == 0) {
                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                } else {
                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                    if (chat2 != null) {
                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                    }
                                }
                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("silent_");
                                    stringBuilder.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                }
                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                if (messageObject2.getId() < 0) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                }
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            } else if (i4 == 9) {
                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("silent_");
                                    stringBuilder.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                }
                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                if (messageObject8 == null) {
                                    tL_messages_forwardMessages.clear_draft = true;
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            }
                        }
                        j5 = j4;
                        arrayList7 = arrayList4;
                        hashMap4 = hashMap3;
                        messageObject7 = messageObject3;
                        messageObject8 = messageObject2;
                        arrayList2 = arrayList;
                        if (encryptedChat != null) {
                            str8 = str6;
                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                            } else {
                                tL_decryptedMessage = new TL_decryptedMessage();
                            }
                            tL_decryptedMessage.ttl = message2.ttl;
                            tL_decryptedMessage.entities = arrayList2;
                            tL_decryptedMessage.flags |= 128;
                            if (message2.reply_to_random_id != 0) {
                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                tL_decryptedMessage.flags |= 8;
                            }
                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                            tL_decryptedMessage.flags |= 2048;
                            tL_decryptedMessage.random_id = message2.random_id;
                            tL_decryptedMessage.message = str8;
                            webPage4 = webPage3;
                            if (webPage4 != null) {
                            }
                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                            if (messageObject8 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                        } else if (arrayList7 == null) {
                            str8 = str6;
                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                            tL_messages_forwardMessages.message = str8;
                            if (messageObject8 != null) {
                            }
                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                            if (message2.to_id instanceof TL_peerChannel) {
                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder3 = new StringBuilder();
                                stringBuilder3.append("silent_");
                                stringBuilder3.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                            }
                            tL_messages_forwardMessages.peer = inputPeer;
                            tL_messages_forwardMessages.random_id = message2.random_id;
                            if (message2.reply_to_msg_id != 0) {
                                tL_messages_forwardMessages.flags |= 1;
                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                            }
                            if (z) {
                                tL_messages_forwardMessages.no_webpage = true;
                            }
                            tL_messages_forwardMessages.entities = arrayList2;
                            tL_messages_forwardMessages.flags |= 8;
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            if (messageObject8 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                        } else {
                            tLObject = new TL_messages_sendBroadcast();
                            arrayList8 = new ArrayList();
                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                            }
                            tLObject.message = str6;
                            tLObject.contacts = arrayList7;
                            tLObject.media = new TL_inputMediaEmpty();
                            tLObject.random_id = arrayList8;
                            performSendMessageRequest(tLObject, messageObject7, null);
                        }
                    } else {
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                        processSentMessage(message2.id);
                        return;
                    }
                }
                z4 = true;
                arrayList3 = null;
                if (z3 != z4) {
                    if (MessageObject.isVoiceMessage(message2)) {
                        if (!MessageObject.isRoundVideoMessage(message2)) {
                            z4 = true;
                        }
                    }
                    z4 = true;
                    message2.media_unread = true;
                }
                message2.send_state = z4;
                messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                messageObject7.replyMessageObject = messageObject6;
                messageObject7.attachPathExists = true;
                if (messageObject7.videoEditedInfo == null) {
                }
                if (hashMap2 == null) {
                    arrayList4 = arrayList3;
                    longValue = 0;
                } else {
                    str8 = (String) hashMap2.get("groupId");
                    if (str8 == null) {
                        arrayList4 = arrayList3;
                        longValue = 0;
                    } else {
                        arrayList4 = arrayList3;
                        longValue = Utilities.parseLong(str8).longValue();
                        message2.grouped_id = longValue;
                        message2.flags |= 131072;
                    }
                    if (hashMap2.get("final") != null) {
                        obj = 1;
                        if (longValue != 0) {
                            arrayList5 = new ArrayList();
                            arrayList5.add(messageObject7);
                            arrayList6 = new ArrayList();
                            arrayList6.add(message2);
                            hashMap3 = hashMap2;
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                            messageObject3 = messageObject7;
                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                            delayedMessage = null;
                        } else {
                            hashMap3 = hashMap2;
                            messageObject3 = messageObject7;
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("group_");
                            stringBuilder.append(longValue);
                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                            if (arrayList5 == null) {
                            }
                            if (delayedMessage == null) {
                                delayedMessage = new DelayedMessage(j4);
                                delayedMessage.type = 4;
                                delayedMessage.groupId = longValue;
                                delayedMessage.messageObjects = new ArrayList();
                                delayedMessage.messages = new ArrayList();
                                delayedMessage.originalPaths = new ArrayList();
                                delayedMessage.extraHashMap = new HashMap();
                                delayedMessage.encryptedChat = encryptedChat;
                            }
                            if (obj != null) {
                                delayedMessage.finalGroupMessage = message2.id;
                            }
                        }
                        stringBuilder2 = new StringBuilder();
                        stringBuilder2.append("send message user_id = ");
                        stringBuilder2.append(inputPeer.user_id);
                        stringBuilder2.append(" chat_id = ");
                        stringBuilder2.append(inputPeer.chat_id);
                        stringBuilder2.append(" channel_id = ");
                        stringBuilder2.append(inputPeer.channel_id);
                        stringBuilder2.append(" access_hash = ");
                        stringBuilder2.append(inputPeer.access_hash);
                        FileLog.m0d(stringBuilder2.toString());
                        if (i5 != 0) {
                            if (i5 == 9) {
                            }
                            if (i5 >= 1) {
                            }
                            j5 = j4;
                            i4 = i5;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            if (i4 != 4) {
                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                tL_messages_forwardMessages.to_peer = inputPeer;
                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                if (messageObject8.messageOwner.ttl == 0) {
                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                    if (chat2 != null) {
                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                    }
                                } else {
                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                }
                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("silent_");
                                    stringBuilder.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                }
                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                if (messageObject2.getId() < 0) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                }
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            } else if (i4 == 9) {
                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("silent_");
                                    stringBuilder.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                }
                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                if (messageObject8 == null) {
                                    tL_messages_forwardMessages.clear_draft = true;
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            }
                        }
                        j5 = j4;
                        arrayList7 = arrayList4;
                        hashMap4 = hashMap3;
                        messageObject7 = messageObject3;
                        messageObject8 = messageObject2;
                        arrayList2 = arrayList;
                        if (encryptedChat != null) {
                            str8 = str6;
                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                tL_decryptedMessage = new TL_decryptedMessage();
                            } else {
                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                            }
                            tL_decryptedMessage.ttl = message2.ttl;
                            tL_decryptedMessage.entities = arrayList2;
                            tL_decryptedMessage.flags |= 128;
                            if (message2.reply_to_random_id != 0) {
                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                tL_decryptedMessage.flags |= 8;
                            }
                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                            tL_decryptedMessage.flags |= 2048;
                            tL_decryptedMessage.random_id = message2.random_id;
                            tL_decryptedMessage.message = str8;
                            webPage4 = webPage3;
                            if (webPage4 != null) {
                            }
                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                            if (messageObject8 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                        } else if (arrayList7 == null) {
                            tLObject = new TL_messages_sendBroadcast();
                            arrayList8 = new ArrayList();
                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                            }
                            tLObject.message = str6;
                            tLObject.contacts = arrayList7;
                            tLObject.media = new TL_inputMediaEmpty();
                            tLObject.random_id = arrayList8;
                            performSendMessageRequest(tLObject, messageObject7, null);
                        } else {
                            str8 = str6;
                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                            tL_messages_forwardMessages.message = str8;
                            if (messageObject8 != null) {
                            }
                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                            if (message2.to_id instanceof TL_peerChannel) {
                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder3 = new StringBuilder();
                                stringBuilder3.append("silent_");
                                stringBuilder3.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                            }
                            tL_messages_forwardMessages.peer = inputPeer;
                            tL_messages_forwardMessages.random_id = message2.random_id;
                            if (message2.reply_to_msg_id != 0) {
                                tL_messages_forwardMessages.flags |= 1;
                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                            }
                            if (z) {
                                tL_messages_forwardMessages.no_webpage = true;
                            }
                            tL_messages_forwardMessages.entities = arrayList2;
                            tL_messages_forwardMessages.flags |= 8;
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            if (messageObject8 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                        }
                    }
                }
                obj = null;
                if (longValue != 0) {
                    hashMap3 = hashMap2;
                    messageObject3 = messageObject7;
                    stringBuilder = new StringBuilder();
                    stringBuilder.append("group_");
                    stringBuilder.append(longValue);
                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                    if (arrayList5 == null) {
                    }
                    if (delayedMessage == null) {
                        delayedMessage = new DelayedMessage(j4);
                        delayedMessage.type = 4;
                        delayedMessage.groupId = longValue;
                        delayedMessage.messageObjects = new ArrayList();
                        delayedMessage.messages = new ArrayList();
                        delayedMessage.originalPaths = new ArrayList();
                        delayedMessage.extraHashMap = new HashMap();
                        delayedMessage.encryptedChat = encryptedChat;
                    }
                    if (obj != null) {
                        delayedMessage.finalGroupMessage = message2.id;
                    }
                } else {
                    arrayList5 = new ArrayList();
                    arrayList5.add(messageObject7);
                    arrayList6 = new ArrayList();
                    arrayList6.add(message2);
                    hashMap3 = hashMap2;
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                    messageObject3 = messageObject7;
                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                    delayedMessage = null;
                }
                stringBuilder2 = new StringBuilder();
                stringBuilder2.append("send message user_id = ");
                stringBuilder2.append(inputPeer.user_id);
                stringBuilder2.append(" chat_id = ");
                stringBuilder2.append(inputPeer.chat_id);
                stringBuilder2.append(" channel_id = ");
                stringBuilder2.append(inputPeer.channel_id);
                stringBuilder2.append(" access_hash = ");
                stringBuilder2.append(inputPeer.access_hash);
                FileLog.m0d(stringBuilder2.toString());
                if (i5 != 0) {
                    if (i5 == 9) {
                    }
                    if (i5 >= 1) {
                    }
                    j5 = j4;
                    i4 = i5;
                    hashMap4 = hashMap3;
                    messageObject7 = messageObject3;
                    messageObject8 = messageObject2;
                    if (i4 != 4) {
                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                        tL_messages_forwardMessages.to_peer = inputPeer;
                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                        if (messageObject8.messageOwner.ttl == 0) {
                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                        } else {
                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                            if (chat2 != null) {
                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                            }
                        }
                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("silent_");
                            stringBuilder.append(j5);
                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                        }
                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                        if (messageObject2.getId() < 0) {
                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                        } else if (messageObject8.messageOwner.fwd_from != null) {
                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                        }
                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                    } else if (i4 == 9) {
                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                        tL_messages_forwardMessages.peer = inputPeer;
                        tL_messages_forwardMessages.random_id = message2.random_id;
                        if (message2.reply_to_msg_id != 0) {
                            tL_messages_forwardMessages.flags |= 1;
                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                        }
                        if (message2.to_id instanceof TL_peerChannel) {
                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("silent_");
                            stringBuilder.append(j5);
                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                        }
                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                        if (messageObject8 == null) {
                            tL_messages_forwardMessages.clear_draft = true;
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                        }
                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                    }
                }
                j5 = j4;
                arrayList7 = arrayList4;
                hashMap4 = hashMap3;
                messageObject7 = messageObject3;
                messageObject8 = messageObject2;
                arrayList2 = arrayList;
                if (encryptedChat != null) {
                    str8 = str6;
                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                    } else {
                        tL_decryptedMessage = new TL_decryptedMessage();
                    }
                    tL_decryptedMessage.ttl = message2.ttl;
                    tL_decryptedMessage.entities = arrayList2;
                    tL_decryptedMessage.flags |= 128;
                    if (message2.reply_to_random_id != 0) {
                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                        tL_decryptedMessage.flags |= 8;
                    }
                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                    tL_decryptedMessage.flags |= 2048;
                    tL_decryptedMessage.random_id = message2.random_id;
                    tL_decryptedMessage.message = str8;
                    webPage4 = webPage3;
                    if (webPage4 != null) {
                    }
                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                    if (messageObject8 == null) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                    }
                } else if (arrayList7 == null) {
                    str8 = str6;
                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                    tL_messages_forwardMessages.message = str8;
                    if (messageObject8 != null) {
                    }
                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                    if (message2.to_id instanceof TL_peerChannel) {
                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                        stringBuilder3 = new StringBuilder();
                        stringBuilder3.append("silent_");
                        stringBuilder3.append(j5);
                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                    }
                    tL_messages_forwardMessages.peer = inputPeer;
                    tL_messages_forwardMessages.random_id = message2.random_id;
                    if (message2.reply_to_msg_id != 0) {
                        tL_messages_forwardMessages.flags |= 1;
                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                    }
                    if (z) {
                        tL_messages_forwardMessages.no_webpage = true;
                    }
                    tL_messages_forwardMessages.entities = arrayList2;
                    tL_messages_forwardMessages.flags |= 8;
                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                    if (messageObject8 == null) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                    }
                } else {
                    tLObject = new TL_messages_sendBroadcast();
                    arrayList8 = new ArrayList();
                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                    }
                    tLObject.message = str6;
                    tLObject.contacts = arrayList7;
                    tLObject.media = new TL_inputMediaEmpty();
                    tLObject.random_id = arrayList8;
                    performSendMessageRequest(tLObject, messageObject7, null);
                }
            } else {
                z2 = z5;
                encryptedChat = null;
            }
            obj = null;
            if (messageObject5 == null) {
                i3 = i10;
                if (str4 == null) {
                    messageMedia2 = messageMedia;
                    if (messageMedia2 == null) {
                        photo = tL_photo;
                        if (photo != null) {
                            if (encryptedChat == null) {
                                message2 = new TL_message();
                            } else {
                                message2 = new TL_message_secret();
                            }
                            message2.media = new TL_messageMediaPhoto();
                            messageMedia6 = message2.media;
                            messageMedia6.flags |= 3;
                            if (arrayList2 != null) {
                                message2.entities = arrayList2;
                            }
                            if (i2 != 0) {
                                message2.media.ttl_seconds = i2;
                                message2.ttl = i2;
                                messageMedia6 = message2.media;
                                messageMedia6.flags |= 4;
                            }
                            message2.media.photo = photo;
                            if (hashMap2 == null) {
                            }
                            if (str5 == null) {
                            }
                            message2.attachPath = FileLoader.getPathToAttach(((PhotoSize) photo.sizes.get(photo.sizes.size() - 1)).location, true).toString();
                            i10 = i2;
                            tL_document3 = tL_document;
                            if (arrayList2 != null) {
                                if (arrayList.isEmpty()) {
                                    message2.entities = arrayList2;
                                    message2.flags |= 128;
                                }
                            }
                            str4 = str10;
                            if (str4 != null) {
                                message2.message = str4;
                            } else if (message2.message == null) {
                                message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            if (message2.attachPath == null) {
                                message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                            message2.id = i2;
                            message2.local_id = i2;
                            message2.out = true;
                            if (obj != null) {
                            }
                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                            message2.flags |= 256;
                            UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                            str7 = str4;
                            webPage3 = webPage2;
                            i5 = i9;
                            messageMedia4 = messageMedia;
                            tL_photo4 = tL_photo;
                            user4 = user;
                            str6 = str;
                        } else if (tL_game2 == null) {
                            user7 = user;
                            if (user7 == null) {
                                i10 = i2;
                                document3 = tL_document;
                                if (document3 == null) {
                                    message2 = null;
                                } else {
                                    if (encryptedChat == null) {
                                        tL_message_secret2 = new TL_message();
                                    } else {
                                        tL_message_secret2 = new TL_message_secret();
                                    }
                                    tL_message_secret2.media = new TL_messageMediaDocument();
                                    messageMedia8 = tL_message_secret2.media;
                                    messageMedia8.flags |= 3;
                                    if (i10 != 0) {
                                        tL_message_secret2.media.ttl_seconds = i10;
                                        tL_message_secret2.ttl = i10;
                                        messageMedia6 = tL_message_secret2.media;
                                        messageMedia6.flags |= 4;
                                    }
                                    tL_message_secret2.media.document = document3;
                                    if (hashMap2 != null) {
                                        if (hashMap2.containsKey("query_id")) {
                                            i9 = 9;
                                            if (videoEditedInfo != null) {
                                                str4 = videoEditedInfo.getString();
                                                if (hashMap2 == null) {
                                                    hashMap2 = new HashMap();
                                                }
                                                hashMap2.put("ve", str4);
                                            }
                                            if (encryptedChat != null) {
                                            }
                                            tL_message_secret2.attachPath = str5;
                                            i8 = 0;
                                            while (i8 < document3.attributes.size()) {
                                                documentAttribute2 = (DocumentAttribute) document3.attributes.get(i8);
                                                message3 = tL_message_secret2;
                                                if (documentAttribute2 instanceof TL_documentAttributeSticker) {
                                                    hashMap5 = hashMap2;
                                                    i8++;
                                                    tL_message_secret2 = message3;
                                                    webPage2 = webPage;
                                                } else {
                                                    document3.attributes.remove(i8);
                                                    tL_documentAttributeSticker_layer55 = new TL_documentAttributeSticker_layer55();
                                                    document3.attributes.add(tL_documentAttributeSticker_layer55);
                                                    tL_documentAttributeSticker_layer55.alt = documentAttribute2.alt;
                                                    if (documentAttribute2.stickerset == null) {
                                                        hashMap5 = hashMap2;
                                                        tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                    } else {
                                                        if (documentAttribute2.stickerset instanceof TL_inputStickerSetShortName) {
                                                            hashMap5 = hashMap2;
                                                            stickerSetName = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(documentAttribute2.stickerset.id);
                                                        } else {
                                                            stickerSetName = documentAttribute2.stickerset.short_name;
                                                            hashMap5 = hashMap2;
                                                        }
                                                        if (TextUtils.isEmpty(stickerSetName)) {
                                                            tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                        } else {
                                                            tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetShortName();
                                                            tL_documentAttributeSticker_layer55.stickerset.short_name = stickerSetName;
                                                        }
                                                    }
                                                    message2 = message3;
                                                    hashMap2 = hashMap5;
                                                }
                                            }
                                            message3 = tL_message_secret2;
                                            hashMap5 = hashMap2;
                                            message2 = message3;
                                            hashMap2 = hashMap5;
                                        }
                                    }
                                    if (MessageObject.isVideoDocument(tL_document)) {
                                        if (MessageObject.isRoundVideoDocument(tL_document)) {
                                            if (videoEditedInfo != null) {
                                                if (MessageObject.isVoiceDocument(tL_document)) {
                                                }
                                                if (videoEditedInfo != null) {
                                                    str4 = videoEditedInfo.getString();
                                                    if (hashMap2 == null) {
                                                        hashMap2 = new HashMap();
                                                    }
                                                    hashMap2.put("ve", str4);
                                                }
                                                if (encryptedChat != null) {
                                                }
                                                tL_message_secret2.attachPath = str5;
                                                i8 = 0;
                                                while (i8 < document3.attributes.size()) {
                                                    documentAttribute2 = (DocumentAttribute) document3.attributes.get(i8);
                                                    message3 = tL_message_secret2;
                                                    if (documentAttribute2 instanceof TL_documentAttributeSticker) {
                                                        document3.attributes.remove(i8);
                                                        tL_documentAttributeSticker_layer55 = new TL_documentAttributeSticker_layer55();
                                                        document3.attributes.add(tL_documentAttributeSticker_layer55);
                                                        tL_documentAttributeSticker_layer55.alt = documentAttribute2.alt;
                                                        if (documentAttribute2.stickerset == null) {
                                                            if (documentAttribute2.stickerset instanceof TL_inputStickerSetShortName) {
                                                                stickerSetName = documentAttribute2.stickerset.short_name;
                                                                hashMap5 = hashMap2;
                                                            } else {
                                                                hashMap5 = hashMap2;
                                                                stickerSetName = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(documentAttribute2.stickerset.id);
                                                            }
                                                            if (TextUtils.isEmpty(stickerSetName)) {
                                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetShortName();
                                                                tL_documentAttributeSticker_layer55.stickerset.short_name = stickerSetName;
                                                            } else {
                                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                            }
                                                        } else {
                                                            hashMap5 = hashMap2;
                                                            tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                        }
                                                        message2 = message3;
                                                        hashMap2 = hashMap5;
                                                    } else {
                                                        hashMap5 = hashMap2;
                                                        i8++;
                                                        tL_message_secret2 = message3;
                                                        webPage2 = webPage;
                                                    }
                                                }
                                                message3 = tL_message_secret2;
                                                hashMap5 = hashMap2;
                                                message2 = message3;
                                                hashMap2 = hashMap5;
                                            }
                                        }
                                    }
                                    i9 = 3;
                                    if (videoEditedInfo != null) {
                                        str4 = videoEditedInfo.getString();
                                        if (hashMap2 == null) {
                                            hashMap2 = new HashMap();
                                        }
                                        hashMap2.put("ve", str4);
                                    }
                                    if (encryptedChat != null) {
                                    }
                                    tL_message_secret2.attachPath = str5;
                                    i8 = 0;
                                    while (i8 < document3.attributes.size()) {
                                        documentAttribute2 = (DocumentAttribute) document3.attributes.get(i8);
                                        message3 = tL_message_secret2;
                                        if (documentAttribute2 instanceof TL_documentAttributeSticker) {
                                            hashMap5 = hashMap2;
                                            i8++;
                                            tL_message_secret2 = message3;
                                            webPage2 = webPage;
                                        } else {
                                            document3.attributes.remove(i8);
                                            tL_documentAttributeSticker_layer55 = new TL_documentAttributeSticker_layer55();
                                            document3.attributes.add(tL_documentAttributeSticker_layer55);
                                            tL_documentAttributeSticker_layer55.alt = documentAttribute2.alt;
                                            if (documentAttribute2.stickerset == null) {
                                                hashMap5 = hashMap2;
                                                tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                            } else {
                                                if (documentAttribute2.stickerset instanceof TL_inputStickerSetShortName) {
                                                    hashMap5 = hashMap2;
                                                    stickerSetName = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(documentAttribute2.stickerset.id);
                                                } else {
                                                    stickerSetName = documentAttribute2.stickerset.short_name;
                                                    hashMap5 = hashMap2;
                                                }
                                                if (TextUtils.isEmpty(stickerSetName)) {
                                                    tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetEmpty();
                                                } else {
                                                    tL_documentAttributeSticker_layer55.stickerset = new TL_inputStickerSetShortName();
                                                    tL_documentAttributeSticker_layer55.stickerset.short_name = stickerSetName;
                                                }
                                            }
                                            message2 = message3;
                                            hashMap2 = hashMap5;
                                        }
                                    }
                                    message3 = tL_message_secret2;
                                    hashMap5 = hashMap2;
                                    message2 = message3;
                                    hashMap2 = hashMap5;
                                }
                                webPage2 = webPage;
                                if (arrayList2 != null) {
                                    if (arrayList.isEmpty()) {
                                        message2.entities = arrayList2;
                                        message2.flags |= 128;
                                    }
                                }
                                str4 = str10;
                                if (str4 != null) {
                                    message2.message = str4;
                                } else if (message2.message == null) {
                                    message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                if (message2.attachPath == null) {
                                    message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                                message2.id = i2;
                                message2.local_id = i2;
                                message2.out = true;
                                if (obj != null) {
                                }
                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                message2.flags |= 256;
                                UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                                str7 = str4;
                                webPage3 = webPage2;
                                i5 = i9;
                                messageMedia4 = messageMedia;
                                tL_photo4 = tL_photo;
                                user4 = user;
                                str6 = str;
                            } else {
                                if (encryptedChat == null) {
                                    tL_message_secret = new TL_message();
                                } else {
                                    tL_message_secret = new TL_message_secret();
                                }
                                tL_message_secret.media = new TL_messageMediaContact();
                                tL_message_secret.media.phone_number = user7.phone;
                                tL_message_secret.media.first_name = user7.first_name;
                                tL_message_secret.media.last_name = user7.last_name;
                                tL_message_secret.media.user_id = user7.id;
                                if (tL_message_secret.media.first_name == null) {
                                    messageMedia7 = tL_message_secret.media;
                                    str9 = TtmlNode.ANONYMOUS_REGION_ID;
                                    messageMedia7.first_name = str9;
                                    user7.first_name = str9;
                                }
                                if (tL_message_secret.media.last_name == null) {
                                    messageMedia7 = tL_message_secret.media;
                                    str9 = TtmlNode.ANONYMOUS_REGION_ID;
                                    messageMedia7.last_name = str9;
                                    user7.last_name = str9;
                                }
                                if (hashMap2 == null) {
                                }
                                message2 = tL_message_secret;
                                i10 = i2;
                                tL_document3 = tL_document;
                                i9 = 6;
                                if (arrayList2 != null) {
                                    if (arrayList.isEmpty()) {
                                        message2.entities = arrayList2;
                                        message2.flags |= 128;
                                    }
                                }
                                str4 = str10;
                                if (str4 != null) {
                                    message2.message = str4;
                                } else if (message2.message == null) {
                                    message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                if (message2.attachPath == null) {
                                    message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                                message2.id = i2;
                                message2.local_id = i2;
                                message2.out = true;
                                if (obj != null) {
                                }
                                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                message2.flags |= 256;
                                UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                                str7 = str4;
                                webPage3 = webPage2;
                                i5 = i9;
                                messageMedia4 = messageMedia;
                                tL_photo4 = tL_photo;
                                user4 = user;
                                str6 = str;
                            }
                        } else {
                            message = new TL_message();
                            message.media = new TL_messageMediaGame();
                            message.media.game = tL_game2;
                        }
                    } else {
                        if (encryptedChat == null) {
                            message = new TL_message();
                        } else {
                            message = new TL_message_secret();
                        }
                        message.media = messageMedia2;
                        message2 = message;
                        i10 = i2;
                        tL_document3 = tL_document;
                        i9 = 1;
                        if (arrayList2 != null) {
                            if (arrayList.isEmpty()) {
                                message2.entities = arrayList2;
                                message2.flags |= 128;
                            }
                        }
                        str4 = str10;
                        if (str4 != null) {
                            message2.message = str4;
                        } else if (message2.message == null) {
                            message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                        }
                        if (message2.attachPath == null) {
                            message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                        }
                        i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                        message2.id = i2;
                        message2.local_id = i2;
                        message2.out = true;
                        if (obj != null) {
                        }
                        message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                        message2.flags |= 256;
                        UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                        str7 = str4;
                        webPage3 = webPage2;
                        i5 = i9;
                        messageMedia4 = messageMedia;
                        tL_photo4 = tL_photo;
                        user4 = user;
                        str6 = str;
                    }
                    message2 = message;
                    i10 = i2;
                    tL_document3 = tL_document;
                    i9 = 9;
                    if (arrayList2 != null) {
                        if (arrayList.isEmpty()) {
                            message2.entities = arrayList2;
                            message2.flags |= 128;
                        }
                    }
                    str4 = str10;
                    if (str4 != null) {
                        message2.message = str4;
                    } else if (message2.message == null) {
                        message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    if (message2.attachPath == null) {
                        message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                    message2.id = i2;
                    message2.local_id = i2;
                    message2.out = true;
                    if (obj != null) {
                    }
                    message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                    message2.flags |= 256;
                    UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                    str7 = str4;
                    webPage3 = webPage2;
                    i5 = i9;
                    messageMedia4 = messageMedia;
                    tL_photo4 = tL_photo;
                    user4 = user;
                    str6 = str;
                } else {
                    if (encryptedChat == null) {
                        tL_message_secret = new TL_message();
                    } else {
                        tL_message_secret = new TL_message_secret();
                    }
                    message = tL_message_secret;
                    if (encryptedChat != null) {
                        if (webPage2 instanceof TL_webPagePending) {
                            if (webPage2.url == null) {
                                webPage2 = null;
                            } else {
                                tL_webPageUrlPending = new TL_webPageUrlPending();
                                tL_webPageUrlPending.url = webPage2.url;
                                webPage2 = tL_webPageUrlPending;
                            }
                        }
                    }
                    if (webPage2 != null) {
                        message.media = new TL_messageMediaWebPage();
                        message.media.webpage = webPage2;
                    } else {
                        message.media = new TL_messageMediaEmpty();
                    }
                    if (hashMap2 == null) {
                    }
                    message.message = str4;
                }
                message2 = message;
                i10 = i2;
                tL_document3 = tL_document;
                if (arrayList2 != null) {
                    if (arrayList.isEmpty()) {
                        message2.entities = arrayList2;
                        message2.flags |= 128;
                    }
                }
                str4 = str10;
                if (str4 != null) {
                    message2.message = str4;
                } else if (message2.message == null) {
                    message2.message = TtmlNode.ANONYMOUS_REGION_ID;
                }
                if (message2.attachPath == null) {
                    message2.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                }
                i2 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                message2.id = i2;
                message2.local_id = i2;
                message2.out = true;
                if (obj != null) {
                }
                message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                message2.flags |= 256;
                UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                str7 = str4;
                webPage3 = webPage2;
                i5 = i9;
                messageMedia4 = messageMedia;
                tL_photo4 = tL_photo;
                user4 = user;
                str6 = str;
            } else {
                message2 = messageObject5.messageOwner;
                if (messageObject2.isForwarded()) {
                    if (messageObject5.type != 0) {
                        i3 = i10;
                        if (messageObject5.type == 4) {
                            messageMedia3 = message2.media;
                            i4 = 1;
                            document = tL_document;
                            user3 = user;
                            tL_photo3 = tL_photo;
                            if (hashMap2 == null) {
                            }
                            str6 = str4;
                            i5 = i4;
                            i10 = i2;
                            webPage3 = webPage2;
                            document2 = document;
                            str7 = str10;
                            user4 = user3;
                            messageMedia4 = messageMedia3;
                            tL_photo4 = tL_photo3;
                            if (message2.random_id == 0) {
                                message2.random_id = getNextRandomId();
                            }
                            if (encryptedChat == null) {
                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                            } else {
                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                if (message2.via_bot_name == null) {
                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                            }
                            message2.flags |= 2048;
                            message2.params = hashMap2;
                            if (messageObject5 != null) {
                            }
                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                            if (inputPeer instanceof TL_inputPeerChannel) {
                                message2.unread = true;
                            } else {
                                if (obj != null) {
                                    message2.views = 1;
                                    message2.flags |= 1024;
                                }
                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                if (chat != null) {
                                    if (chat.megagroup) {
                                        message2.post = true;
                                        if (chat.signatures) {
                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        }
                                    } else {
                                        message2.flags |= Integer.MIN_VALUE;
                                        message2.unread = true;
                                    }
                                }
                            }
                            message2.flags |= 512;
                            j4 = j;
                            message2.dialog_id = j4;
                            messageObject6 = messageObject;
                            if (messageObject6 == null) {
                                user5 = user4;
                            } else {
                                if (encryptedChat == null) {
                                    user5 = user4;
                                } else {
                                    user5 = user4;
                                    if (messageObject6.messageOwner.random_id != 0) {
                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                        message2.flags |= 8;
                                        message2.reply_to_msg_id = messageObject.getId();
                                    }
                                }
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            }
                            replyMarkup2 = replyMarkup;
                            message2.flags |= 64;
                            message2.reply_markup = replyMarkup2;
                            if (i3 == 0) {
                                messageMedia5 = messageMedia4;
                                tL_photo5 = tL_photo4;
                                z3 = z2;
                                message2.to_id = new TL_peerUser();
                                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                    message2.to_id.user_id = encryptedChat.participant_id;
                                } else {
                                    message2.to_id.user_id = encryptedChat.admin_id;
                                }
                                if (i10 == 0) {
                                    message2.ttl = encryptedChat.ttl;
                                    if (message2.ttl != 0) {
                                        if (message2.media != null) {
                                            message2.media.ttl_seconds = message2.ttl;
                                            messageMedia4 = message2.media;
                                            messageMedia4.flags |= 4;
                                        }
                                    }
                                } else {
                                    message2.ttl = i10;
                                }
                                if (message2.ttl != 0) {
                                    if (message2.media.document != null) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        } else {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        }
                                    }
                                }
                            } else {
                                z3 = z2;
                                if (!z3) {
                                    messageMedia5 = messageMedia4;
                                    tL_photo5 = tL_photo4;
                                    i6 = i3;
                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                    if (i6 > 0) {
                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                        if (user6 != null) {
                                            processSentMessage(message2.id);
                                            return;
                                        } else if (user6.bot) {
                                            message2.unread = false;
                                        }
                                    }
                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                    arrayList3 = new ArrayList();
                                    tL_photo5 = tL_photo4;
                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                    while (it.hasNext()) {
                                        it2 = it;
                                        messageMedia5 = messageMedia4;
                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                        if (inputUser == null) {
                                            arrayList3.add(inputUser);
                                        }
                                        it = it2;
                                        messageMedia4 = messageMedia5;
                                    }
                                    messageMedia5 = messageMedia4;
                                    message2.to_id = new TL_peerChat();
                                    message2.to_id.chat_id = i3;
                                    z4 = true;
                                    if (z3 != z4) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                z4 = true;
                                            }
                                        }
                                        z4 = true;
                                        message2.media_unread = true;
                                    }
                                    message2.send_state = z4;
                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                    messageObject7.replyMessageObject = messageObject6;
                                    messageObject7.attachPathExists = true;
                                    if (messageObject7.videoEditedInfo == null) {
                                    }
                                    if (hashMap2 == null) {
                                        str8 = (String) hashMap2.get("groupId");
                                        if (str8 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = Utilities.parseLong(str8).longValue();
                                            message2.grouped_id = longValue;
                                            message2.flags |= 131072;
                                        } else {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        }
                                        if (hashMap2.get("final") != null) {
                                            obj = 1;
                                            if (longValue != 0) {
                                                arrayList5 = new ArrayList();
                                                arrayList5.add(messageObject7);
                                                arrayList6 = new ArrayList();
                                                arrayList6.add(message2);
                                                hashMap3 = hashMap2;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                messageObject3 = messageObject7;
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                delayedMessage = null;
                                            } else {
                                                hashMap3 = hashMap2;
                                                messageObject3 = messageObject7;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("group_");
                                                stringBuilder.append(longValue);
                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                if (arrayList5 == null) {
                                                }
                                                if (delayedMessage == null) {
                                                    delayedMessage = new DelayedMessage(j4);
                                                    delayedMessage.type = 4;
                                                    delayedMessage.groupId = longValue;
                                                    delayedMessage.messageObjects = new ArrayList();
                                                    delayedMessage.messages = new ArrayList();
                                                    delayedMessage.originalPaths = new ArrayList();
                                                    delayedMessage.extraHashMap = new HashMap();
                                                    delayedMessage.encryptedChat = encryptedChat;
                                                }
                                                if (obj != null) {
                                                    delayedMessage.finalGroupMessage = message2.id;
                                                }
                                            }
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append("send message user_id = ");
                                            stringBuilder2.append(inputPeer.user_id);
                                            stringBuilder2.append(" chat_id = ");
                                            stringBuilder2.append(inputPeer.chat_id);
                                            stringBuilder2.append(" channel_id = ");
                                            stringBuilder2.append(inputPeer.channel_id);
                                            stringBuilder2.append(" access_hash = ");
                                            stringBuilder2.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder2.toString());
                                            if (i5 != 0) {
                                                if (i5 == 9) {
                                                }
                                                if (i5 >= 1) {
                                                }
                                                j5 = j4;
                                                i4 = i5;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                if (i4 != 4) {
                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                        if (chat2 != null) {
                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                    }
                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                    if (messageObject2.getId() < 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                } else if (i4 == 9) {
                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                    if (messageObject8 == null) {
                                                        tL_messages_forwardMessages.clear_draft = true;
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                }
                                            }
                                            j5 = j4;
                                            arrayList7 = arrayList4;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            arrayList2 = arrayList;
                                            if (encryptedChat != null) {
                                                str8 = str6;
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                } else {
                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                }
                                                tL_decryptedMessage.ttl = message2.ttl;
                                                tL_decryptedMessage.entities = arrayList2;
                                                tL_decryptedMessage.flags |= 128;
                                                if (message2.reply_to_random_id != 0) {
                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                    tL_decryptedMessage.flags |= 8;
                                                }
                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                tL_decryptedMessage.flags |= 2048;
                                                tL_decryptedMessage.random_id = message2.random_id;
                                                tL_decryptedMessage.message = str8;
                                                webPage4 = webPage3;
                                                if (webPage4 != null) {
                                                }
                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            } else if (arrayList7 == null) {
                                                tLObject = new TL_messages_sendBroadcast();
                                                arrayList8 = new ArrayList();
                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                }
                                                tLObject.message = str6;
                                                tLObject.contacts = arrayList7;
                                                tLObject.media = new TL_inputMediaEmpty();
                                                tLObject.random_id = arrayList8;
                                                performSendMessageRequest(tLObject, messageObject7, null);
                                            } else {
                                                str8 = str6;
                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                tL_messages_forwardMessages.message = str8;
                                                if (messageObject8 != null) {
                                                }
                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append("silent_");
                                                    stringBuilder3.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                }
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (z) {
                                                    tL_messages_forwardMessages.no_webpage = true;
                                                }
                                                tL_messages_forwardMessages.entities = arrayList2;
                                                tL_messages_forwardMessages.flags |= 8;
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            }
                                        }
                                    }
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                    obj = null;
                                    if (longValue != 0) {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    } else {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            } else {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    }
                                } else {
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                    return;
                                }
                            }
                            z4 = true;
                            arrayList3 = null;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            } else {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        } else if (messageObject5.type == 1) {
                            tL_photo3 = (TL_photo) message2.media.photo;
                            i4 = 2;
                            document = tL_document;
                            user3 = user;
                            messageMedia3 = messageMedia;
                            if (hashMap2 == null) {
                            }
                            str6 = str4;
                            i5 = i4;
                            i10 = i2;
                            webPage3 = webPage2;
                            document2 = document;
                            str7 = str10;
                            user4 = user3;
                            messageMedia4 = messageMedia3;
                            tL_photo4 = tL_photo3;
                            if (message2.random_id == 0) {
                                message2.random_id = getNextRandomId();
                            }
                            if (encryptedChat == null) {
                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                if (message2.via_bot_name == null) {
                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                            } else {
                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                            }
                            message2.flags |= 2048;
                            message2.params = hashMap2;
                            if (messageObject5 != null) {
                            }
                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                            if (inputPeer instanceof TL_inputPeerChannel) {
                                if (obj != null) {
                                    message2.views = 1;
                                    message2.flags |= 1024;
                                }
                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                if (chat != null) {
                                    if (chat.megagroup) {
                                        message2.flags |= Integer.MIN_VALUE;
                                        message2.unread = true;
                                    } else {
                                        message2.post = true;
                                        if (chat.signatures) {
                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        }
                                    }
                                }
                            } else {
                                message2.unread = true;
                            }
                            message2.flags |= 512;
                            j4 = j;
                            message2.dialog_id = j4;
                            messageObject6 = messageObject;
                            if (messageObject6 == null) {
                                if (encryptedChat == null) {
                                    user5 = user4;
                                    if (messageObject6.messageOwner.random_id != 0) {
                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                        message2.flags |= 8;
                                        message2.reply_to_msg_id = messageObject.getId();
                                    }
                                } else {
                                    user5 = user4;
                                }
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            } else {
                                user5 = user4;
                            }
                            replyMarkup2 = replyMarkup;
                            message2.flags |= 64;
                            message2.reply_markup = replyMarkup2;
                            if (i3 == 0) {
                                z3 = z2;
                                if (!z3) {
                                    messageMedia5 = messageMedia4;
                                    tL_photo5 = tL_photo4;
                                    i6 = i3;
                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                    if (i6 > 0) {
                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                        if (user6 != null) {
                                            processSentMessage(message2.id);
                                            return;
                                        } else if (user6.bot) {
                                            message2.unread = false;
                                        }
                                    }
                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                    return;
                                } else {
                                    arrayList3 = new ArrayList();
                                    tL_photo5 = tL_photo4;
                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                    while (it.hasNext()) {
                                        it2 = it;
                                        messageMedia5 = messageMedia4;
                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                        if (inputUser == null) {
                                            arrayList3.add(inputUser);
                                        }
                                        it = it2;
                                        messageMedia4 = messageMedia5;
                                    }
                                    messageMedia5 = messageMedia4;
                                    message2.to_id = new TL_peerChat();
                                    message2.to_id.chat_id = i3;
                                    z4 = true;
                                    if (z3 != z4) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                z4 = true;
                                            }
                                        }
                                        z4 = true;
                                        message2.media_unread = true;
                                    }
                                    message2.send_state = z4;
                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                    messageObject7.replyMessageObject = messageObject6;
                                    messageObject7.attachPathExists = true;
                                    if (messageObject7.videoEditedInfo == null) {
                                    }
                                    if (hashMap2 == null) {
                                        str8 = (String) hashMap2.get("groupId");
                                        if (str8 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = Utilities.parseLong(str8).longValue();
                                            message2.grouped_id = longValue;
                                            message2.flags |= 131072;
                                        } else {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        }
                                        if (hashMap2.get("final") != null) {
                                            obj = 1;
                                            if (longValue != 0) {
                                                arrayList5 = new ArrayList();
                                                arrayList5.add(messageObject7);
                                                arrayList6 = new ArrayList();
                                                arrayList6.add(message2);
                                                hashMap3 = hashMap2;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                messageObject3 = messageObject7;
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                delayedMessage = null;
                                            } else {
                                                hashMap3 = hashMap2;
                                                messageObject3 = messageObject7;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("group_");
                                                stringBuilder.append(longValue);
                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                if (arrayList5 == null) {
                                                }
                                                if (delayedMessage == null) {
                                                    delayedMessage = new DelayedMessage(j4);
                                                    delayedMessage.type = 4;
                                                    delayedMessage.groupId = longValue;
                                                    delayedMessage.messageObjects = new ArrayList();
                                                    delayedMessage.messages = new ArrayList();
                                                    delayedMessage.originalPaths = new ArrayList();
                                                    delayedMessage.extraHashMap = new HashMap();
                                                    delayedMessage.encryptedChat = encryptedChat;
                                                }
                                                if (obj != null) {
                                                    delayedMessage.finalGroupMessage = message2.id;
                                                }
                                            }
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append("send message user_id = ");
                                            stringBuilder2.append(inputPeer.user_id);
                                            stringBuilder2.append(" chat_id = ");
                                            stringBuilder2.append(inputPeer.chat_id);
                                            stringBuilder2.append(" channel_id = ");
                                            stringBuilder2.append(inputPeer.channel_id);
                                            stringBuilder2.append(" access_hash = ");
                                            stringBuilder2.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder2.toString());
                                            if (i5 != 0) {
                                                if (i5 == 9) {
                                                }
                                                if (i5 >= 1) {
                                                }
                                                j5 = j4;
                                                i4 = i5;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                if (i4 != 4) {
                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                        if (chat2 != null) {
                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                    }
                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                    if (messageObject2.getId() < 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                } else if (i4 == 9) {
                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                    if (messageObject8 == null) {
                                                        tL_messages_forwardMessages.clear_draft = true;
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                }
                                            }
                                            j5 = j4;
                                            arrayList7 = arrayList4;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            arrayList2 = arrayList;
                                            if (encryptedChat != null) {
                                                str8 = str6;
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                } else {
                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                }
                                                tL_decryptedMessage.ttl = message2.ttl;
                                                tL_decryptedMessage.entities = arrayList2;
                                                tL_decryptedMessage.flags |= 128;
                                                if (message2.reply_to_random_id != 0) {
                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                    tL_decryptedMessage.flags |= 8;
                                                }
                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                tL_decryptedMessage.flags |= 2048;
                                                tL_decryptedMessage.random_id = message2.random_id;
                                                tL_decryptedMessage.message = str8;
                                                webPage4 = webPage3;
                                                if (webPage4 != null) {
                                                }
                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            } else if (arrayList7 == null) {
                                                tLObject = new TL_messages_sendBroadcast();
                                                arrayList8 = new ArrayList();
                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                }
                                                tLObject.message = str6;
                                                tLObject.contacts = arrayList7;
                                                tLObject.media = new TL_inputMediaEmpty();
                                                tLObject.random_id = arrayList8;
                                                performSendMessageRequest(tLObject, messageObject7, null);
                                            } else {
                                                str8 = str6;
                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                tL_messages_forwardMessages.message = str8;
                                                if (messageObject8 != null) {
                                                }
                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append("silent_");
                                                    stringBuilder3.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                }
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (z) {
                                                    tL_messages_forwardMessages.no_webpage = true;
                                                }
                                                tL_messages_forwardMessages.entities = arrayList2;
                                                tL_messages_forwardMessages.flags |= 8;
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            }
                                        }
                                    }
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                    obj = null;
                                    if (longValue != 0) {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    } else {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            } else {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    }
                                }
                            }
                            messageMedia5 = messageMedia4;
                            tL_photo5 = tL_photo4;
                            z3 = z2;
                            message2.to_id = new TL_peerUser();
                            if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                message2.to_id.user_id = encryptedChat.admin_id;
                            } else {
                                message2.to_id.user_id = encryptedChat.participant_id;
                            }
                            if (i10 == 0) {
                                message2.ttl = i10;
                            } else {
                                message2.ttl = encryptedChat.ttl;
                                if (message2.ttl != 0) {
                                    if (message2.media != null) {
                                        message2.media.ttl_seconds = message2.ttl;
                                        messageMedia4 = message2.media;
                                        messageMedia4.flags |= 4;
                                    }
                                }
                            }
                            if (message2.ttl != 0) {
                                if (message2.media.document != null) {
                                    if (MessageObject.isVoiceMessage(message2)) {
                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                            if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                i2 = documentAttribute.duration;
                                                break;
                                            }
                                        }
                                        i2 = 0;
                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                    } else {
                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                            if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                i2 = documentAttribute.duration;
                                                break;
                                            }
                                        }
                                        i2 = 0;
                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                    }
                                }
                            }
                            z4 = true;
                            arrayList3 = null;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            } else {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        } else if (videoEditedInfo == null) {
                            document = (TL_document) message2.media.document;
                            i4 = 3;
                            user3 = user;
                            messageMedia3 = messageMedia;
                            tL_photo3 = tL_photo;
                            if (hashMap2 == null) {
                            }
                            str6 = str4;
                            i5 = i4;
                            i10 = i2;
                            webPage3 = webPage2;
                            document2 = document;
                            str7 = str10;
                            user4 = user3;
                            messageMedia4 = messageMedia3;
                            tL_photo4 = tL_photo3;
                            if (message2.random_id == 0) {
                                message2.random_id = getNextRandomId();
                            }
                            if (encryptedChat == null) {
                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                            } else {
                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                if (message2.via_bot_name == null) {
                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                            }
                            message2.flags |= 2048;
                            message2.params = hashMap2;
                            if (messageObject5 != null) {
                            }
                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                            if (inputPeer instanceof TL_inputPeerChannel) {
                                message2.unread = true;
                            } else {
                                if (obj != null) {
                                    message2.views = 1;
                                    message2.flags |= 1024;
                                }
                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                if (chat != null) {
                                    if (chat.megagroup) {
                                        message2.post = true;
                                        if (chat.signatures) {
                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        }
                                    } else {
                                        message2.flags |= Integer.MIN_VALUE;
                                        message2.unread = true;
                                    }
                                }
                            }
                            message2.flags |= 512;
                            j4 = j;
                            message2.dialog_id = j4;
                            messageObject6 = messageObject;
                            if (messageObject6 == null) {
                                user5 = user4;
                            } else {
                                if (encryptedChat == null) {
                                    user5 = user4;
                                } else {
                                    user5 = user4;
                                    if (messageObject6.messageOwner.random_id != 0) {
                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                        message2.flags |= 8;
                                        message2.reply_to_msg_id = messageObject.getId();
                                    }
                                }
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            }
                            replyMarkup2 = replyMarkup;
                            message2.flags |= 64;
                            message2.reply_markup = replyMarkup2;
                            if (i3 == 0) {
                                messageMedia5 = messageMedia4;
                                tL_photo5 = tL_photo4;
                                z3 = z2;
                                message2.to_id = new TL_peerUser();
                                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                    message2.to_id.user_id = encryptedChat.participant_id;
                                } else {
                                    message2.to_id.user_id = encryptedChat.admin_id;
                                }
                                if (i10 == 0) {
                                    message2.ttl = encryptedChat.ttl;
                                    if (message2.ttl != 0) {
                                        if (message2.media != null) {
                                            message2.media.ttl_seconds = message2.ttl;
                                            messageMedia4 = message2.media;
                                            messageMedia4.flags |= 4;
                                        }
                                    }
                                } else {
                                    message2.ttl = i10;
                                }
                                if (message2.ttl != 0) {
                                    if (message2.media.document != null) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        } else {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        }
                                    }
                                }
                            } else {
                                z3 = z2;
                                if (!z3) {
                                    messageMedia5 = messageMedia4;
                                    tL_photo5 = tL_photo4;
                                    i6 = i3;
                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                    if (i6 > 0) {
                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                        if (user6 != null) {
                                            processSentMessage(message2.id);
                                            return;
                                        } else if (user6.bot) {
                                            message2.unread = false;
                                        }
                                    }
                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                    arrayList3 = new ArrayList();
                                    tL_photo5 = tL_photo4;
                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                    while (it.hasNext()) {
                                        it2 = it;
                                        messageMedia5 = messageMedia4;
                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                        if (inputUser == null) {
                                            arrayList3.add(inputUser);
                                        }
                                        it = it2;
                                        messageMedia4 = messageMedia5;
                                    }
                                    messageMedia5 = messageMedia4;
                                    message2.to_id = new TL_peerChat();
                                    message2.to_id.chat_id = i3;
                                    z4 = true;
                                    if (z3 != z4) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                z4 = true;
                                            }
                                        }
                                        z4 = true;
                                        message2.media_unread = true;
                                    }
                                    message2.send_state = z4;
                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                    messageObject7.replyMessageObject = messageObject6;
                                    messageObject7.attachPathExists = true;
                                    if (messageObject7.videoEditedInfo == null) {
                                    }
                                    if (hashMap2 == null) {
                                        str8 = (String) hashMap2.get("groupId");
                                        if (str8 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = Utilities.parseLong(str8).longValue();
                                            message2.grouped_id = longValue;
                                            message2.flags |= 131072;
                                        } else {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        }
                                        if (hashMap2.get("final") != null) {
                                            obj = 1;
                                            if (longValue != 0) {
                                                arrayList5 = new ArrayList();
                                                arrayList5.add(messageObject7);
                                                arrayList6 = new ArrayList();
                                                arrayList6.add(message2);
                                                hashMap3 = hashMap2;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                messageObject3 = messageObject7;
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                delayedMessage = null;
                                            } else {
                                                hashMap3 = hashMap2;
                                                messageObject3 = messageObject7;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("group_");
                                                stringBuilder.append(longValue);
                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                if (arrayList5 == null) {
                                                }
                                                if (delayedMessage == null) {
                                                    delayedMessage = new DelayedMessage(j4);
                                                    delayedMessage.type = 4;
                                                    delayedMessage.groupId = longValue;
                                                    delayedMessage.messageObjects = new ArrayList();
                                                    delayedMessage.messages = new ArrayList();
                                                    delayedMessage.originalPaths = new ArrayList();
                                                    delayedMessage.extraHashMap = new HashMap();
                                                    delayedMessage.encryptedChat = encryptedChat;
                                                }
                                                if (obj != null) {
                                                    delayedMessage.finalGroupMessage = message2.id;
                                                }
                                            }
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append("send message user_id = ");
                                            stringBuilder2.append(inputPeer.user_id);
                                            stringBuilder2.append(" chat_id = ");
                                            stringBuilder2.append(inputPeer.chat_id);
                                            stringBuilder2.append(" channel_id = ");
                                            stringBuilder2.append(inputPeer.channel_id);
                                            stringBuilder2.append(" access_hash = ");
                                            stringBuilder2.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder2.toString());
                                            if (i5 != 0) {
                                                if (i5 == 9) {
                                                }
                                                if (i5 >= 1) {
                                                }
                                                j5 = j4;
                                                i4 = i5;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                if (i4 != 4) {
                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                        if (chat2 != null) {
                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                    }
                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                    if (messageObject2.getId() < 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                } else if (i4 == 9) {
                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                    if (messageObject8 == null) {
                                                        tL_messages_forwardMessages.clear_draft = true;
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                }
                                            }
                                            j5 = j4;
                                            arrayList7 = arrayList4;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            arrayList2 = arrayList;
                                            if (encryptedChat != null) {
                                                str8 = str6;
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                } else {
                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                }
                                                tL_decryptedMessage.ttl = message2.ttl;
                                                tL_decryptedMessage.entities = arrayList2;
                                                tL_decryptedMessage.flags |= 128;
                                                if (message2.reply_to_random_id != 0) {
                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                    tL_decryptedMessage.flags |= 8;
                                                }
                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                tL_decryptedMessage.flags |= 2048;
                                                tL_decryptedMessage.random_id = message2.random_id;
                                                tL_decryptedMessage.message = str8;
                                                webPage4 = webPage3;
                                                if (webPage4 != null) {
                                                }
                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            } else if (arrayList7 == null) {
                                                tLObject = new TL_messages_sendBroadcast();
                                                arrayList8 = new ArrayList();
                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                }
                                                tLObject.message = str6;
                                                tLObject.contacts = arrayList7;
                                                tLObject.media = new TL_inputMediaEmpty();
                                                tLObject.random_id = arrayList8;
                                                performSendMessageRequest(tLObject, messageObject7, null);
                                            } else {
                                                str8 = str6;
                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                tL_messages_forwardMessages.message = str8;
                                                if (messageObject8 != null) {
                                                }
                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append("silent_");
                                                    stringBuilder3.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                }
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (z) {
                                                    tL_messages_forwardMessages.no_webpage = true;
                                                }
                                                tL_messages_forwardMessages.entities = arrayList2;
                                                tL_messages_forwardMessages.flags |= 8;
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            }
                                        }
                                    }
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                    obj = null;
                                    if (longValue != 0) {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    } else {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            } else {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    }
                                } else {
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                    return;
                                }
                            }
                            z4 = true;
                            arrayList3 = null;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            } else {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        } else if (messageObject5.type == 12) {
                            tL_userRequest_old2 = new TL_userRequest_old2();
                            tL_userRequest_old2.phone = message2.media.phone_number;
                            tL_userRequest_old2.first_name = message2.media.first_name;
                            tL_userRequest_old2.last_name = message2.media.last_name;
                            tL_userRequest_old2.id = message2.media.user_id;
                            user3 = tL_userRequest_old2;
                            i4 = 6;
                            document = tL_document;
                            messageMedia3 = messageMedia;
                            tL_photo3 = tL_photo;
                            if (hashMap2 == null) {
                            }
                            str6 = str4;
                            i5 = i4;
                            i10 = i2;
                            webPage3 = webPage2;
                            document2 = document;
                            str7 = str10;
                            user4 = user3;
                            messageMedia4 = messageMedia3;
                            tL_photo4 = tL_photo3;
                            if (message2.random_id == 0) {
                                message2.random_id = getNextRandomId();
                            }
                            if (encryptedChat == null) {
                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                if (message2.via_bot_name == null) {
                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                            } else {
                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                            }
                            message2.flags |= 2048;
                            message2.params = hashMap2;
                            if (messageObject5 != null) {
                            }
                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                            if (inputPeer instanceof TL_inputPeerChannel) {
                                if (obj != null) {
                                    message2.views = 1;
                                    message2.flags |= 1024;
                                }
                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                if (chat != null) {
                                    if (chat.megagroup) {
                                        message2.flags |= Integer.MIN_VALUE;
                                        message2.unread = true;
                                    } else {
                                        message2.post = true;
                                        if (chat.signatures) {
                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        }
                                    }
                                }
                            } else {
                                message2.unread = true;
                            }
                            message2.flags |= 512;
                            j4 = j;
                            message2.dialog_id = j4;
                            messageObject6 = messageObject;
                            if (messageObject6 == null) {
                                if (encryptedChat == null) {
                                    user5 = user4;
                                    if (messageObject6.messageOwner.random_id != 0) {
                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                        message2.flags |= 8;
                                        message2.reply_to_msg_id = messageObject.getId();
                                    }
                                } else {
                                    user5 = user4;
                                }
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            } else {
                                user5 = user4;
                            }
                            replyMarkup2 = replyMarkup;
                            message2.flags |= 64;
                            message2.reply_markup = replyMarkup2;
                            if (i3 == 0) {
                                z3 = z2;
                                if (!z3) {
                                    messageMedia5 = messageMedia4;
                                    tL_photo5 = tL_photo4;
                                    i6 = i3;
                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                    if (i6 > 0) {
                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                        if (user6 != null) {
                                            processSentMessage(message2.id);
                                            return;
                                        } else if (user6.bot) {
                                            message2.unread = false;
                                        }
                                    }
                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                    return;
                                } else {
                                    arrayList3 = new ArrayList();
                                    tL_photo5 = tL_photo4;
                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                    while (it.hasNext()) {
                                        it2 = it;
                                        messageMedia5 = messageMedia4;
                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                        if (inputUser == null) {
                                            arrayList3.add(inputUser);
                                        }
                                        it = it2;
                                        messageMedia4 = messageMedia5;
                                    }
                                    messageMedia5 = messageMedia4;
                                    message2.to_id = new TL_peerChat();
                                    message2.to_id.chat_id = i3;
                                    z4 = true;
                                    if (z3 != z4) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                z4 = true;
                                            }
                                        }
                                        z4 = true;
                                        message2.media_unread = true;
                                    }
                                    message2.send_state = z4;
                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                    messageObject7.replyMessageObject = messageObject6;
                                    messageObject7.attachPathExists = true;
                                    if (messageObject7.videoEditedInfo == null) {
                                    }
                                    if (hashMap2 == null) {
                                        str8 = (String) hashMap2.get("groupId");
                                        if (str8 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = Utilities.parseLong(str8).longValue();
                                            message2.grouped_id = longValue;
                                            message2.flags |= 131072;
                                        } else {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        }
                                        if (hashMap2.get("final") != null) {
                                            obj = 1;
                                            if (longValue != 0) {
                                                arrayList5 = new ArrayList();
                                                arrayList5.add(messageObject7);
                                                arrayList6 = new ArrayList();
                                                arrayList6.add(message2);
                                                hashMap3 = hashMap2;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                messageObject3 = messageObject7;
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                delayedMessage = null;
                                            } else {
                                                hashMap3 = hashMap2;
                                                messageObject3 = messageObject7;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("group_");
                                                stringBuilder.append(longValue);
                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                if (arrayList5 == null) {
                                                }
                                                if (delayedMessage == null) {
                                                    delayedMessage = new DelayedMessage(j4);
                                                    delayedMessage.type = 4;
                                                    delayedMessage.groupId = longValue;
                                                    delayedMessage.messageObjects = new ArrayList();
                                                    delayedMessage.messages = new ArrayList();
                                                    delayedMessage.originalPaths = new ArrayList();
                                                    delayedMessage.extraHashMap = new HashMap();
                                                    delayedMessage.encryptedChat = encryptedChat;
                                                }
                                                if (obj != null) {
                                                    delayedMessage.finalGroupMessage = message2.id;
                                                }
                                            }
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append("send message user_id = ");
                                            stringBuilder2.append(inputPeer.user_id);
                                            stringBuilder2.append(" chat_id = ");
                                            stringBuilder2.append(inputPeer.chat_id);
                                            stringBuilder2.append(" channel_id = ");
                                            stringBuilder2.append(inputPeer.channel_id);
                                            stringBuilder2.append(" access_hash = ");
                                            stringBuilder2.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder2.toString());
                                            if (i5 != 0) {
                                                if (i5 == 9) {
                                                }
                                                if (i5 >= 1) {
                                                }
                                                j5 = j4;
                                                i4 = i5;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                if (i4 != 4) {
                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                        if (chat2 != null) {
                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                    }
                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                    if (messageObject2.getId() < 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                } else if (i4 == 9) {
                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                    if (messageObject8 == null) {
                                                        tL_messages_forwardMessages.clear_draft = true;
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                }
                                            }
                                            j5 = j4;
                                            arrayList7 = arrayList4;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            arrayList2 = arrayList;
                                            if (encryptedChat != null) {
                                                str8 = str6;
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                } else {
                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                }
                                                tL_decryptedMessage.ttl = message2.ttl;
                                                tL_decryptedMessage.entities = arrayList2;
                                                tL_decryptedMessage.flags |= 128;
                                                if (message2.reply_to_random_id != 0) {
                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                    tL_decryptedMessage.flags |= 8;
                                                }
                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                tL_decryptedMessage.flags |= 2048;
                                                tL_decryptedMessage.random_id = message2.random_id;
                                                tL_decryptedMessage.message = str8;
                                                webPage4 = webPage3;
                                                if (webPage4 != null) {
                                                }
                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            } else if (arrayList7 == null) {
                                                tLObject = new TL_messages_sendBroadcast();
                                                arrayList8 = new ArrayList();
                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                }
                                                tLObject.message = str6;
                                                tLObject.contacts = arrayList7;
                                                tLObject.media = new TL_inputMediaEmpty();
                                                tLObject.random_id = arrayList8;
                                                performSendMessageRequest(tLObject, messageObject7, null);
                                            } else {
                                                str8 = str6;
                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                tL_messages_forwardMessages.message = str8;
                                                if (messageObject8 != null) {
                                                }
                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append("silent_");
                                                    stringBuilder3.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                }
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (z) {
                                                    tL_messages_forwardMessages.no_webpage = true;
                                                }
                                                tL_messages_forwardMessages.entities = arrayList2;
                                                tL_messages_forwardMessages.flags |= 8;
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            }
                                        }
                                    }
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                    obj = null;
                                    if (longValue != 0) {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    } else {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            } else {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    }
                                }
                            }
                            messageMedia5 = messageMedia4;
                            tL_photo5 = tL_photo4;
                            z3 = z2;
                            message2.to_id = new TL_peerUser();
                            if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                message2.to_id.user_id = encryptedChat.admin_id;
                            } else {
                                message2.to_id.user_id = encryptedChat.participant_id;
                            }
                            if (i10 == 0) {
                                message2.ttl = i10;
                            } else {
                                message2.ttl = encryptedChat.ttl;
                                if (message2.ttl != 0) {
                                    if (message2.media != null) {
                                        message2.media.ttl_seconds = message2.ttl;
                                        messageMedia4 = message2.media;
                                        messageMedia4.flags |= 4;
                                    }
                                }
                            }
                            if (message2.ttl != 0) {
                                if (message2.media.document != null) {
                                    if (MessageObject.isVoiceMessage(message2)) {
                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                            if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                i2 = documentAttribute.duration;
                                                break;
                                            }
                                        }
                                        i2 = 0;
                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                    } else {
                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                            if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                i2 = documentAttribute.duration;
                                                break;
                                            }
                                        }
                                        i2 = 0;
                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                    }
                                }
                            }
                            z4 = true;
                            arrayList3 = null;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            } else {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        } else if (messageObject5.type != 14) {
                            document = (TL_document) message2.media.document;
                            i4 = 7;
                            user3 = user;
                            messageMedia3 = messageMedia;
                            tL_photo3 = tL_photo;
                            if (hashMap2 == null) {
                            }
                            str6 = str4;
                            i5 = i4;
                            i10 = i2;
                            webPage3 = webPage2;
                            document2 = document;
                            str7 = str10;
                            user4 = user3;
                            messageMedia4 = messageMedia3;
                            tL_photo4 = tL_photo3;
                            if (message2.random_id == 0) {
                                message2.random_id = getNextRandomId();
                            }
                            if (encryptedChat == null) {
                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                            } else {
                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                if (message2.via_bot_name == null) {
                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                            }
                            message2.flags |= 2048;
                            message2.params = hashMap2;
                            if (messageObject5 != null) {
                            }
                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                            if (inputPeer instanceof TL_inputPeerChannel) {
                                message2.unread = true;
                            } else {
                                if (obj != null) {
                                    message2.views = 1;
                                    message2.flags |= 1024;
                                }
                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                if (chat != null) {
                                    if (chat.megagroup) {
                                        message2.post = true;
                                        if (chat.signatures) {
                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        }
                                    } else {
                                        message2.flags |= Integer.MIN_VALUE;
                                        message2.unread = true;
                                    }
                                }
                            }
                            message2.flags |= 512;
                            j4 = j;
                            message2.dialog_id = j4;
                            messageObject6 = messageObject;
                            if (messageObject6 == null) {
                                user5 = user4;
                            } else {
                                if (encryptedChat == null) {
                                    user5 = user4;
                                } else {
                                    user5 = user4;
                                    if (messageObject6.messageOwner.random_id != 0) {
                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                        message2.flags |= 8;
                                        message2.reply_to_msg_id = messageObject.getId();
                                    }
                                }
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            }
                            replyMarkup2 = replyMarkup;
                            message2.flags |= 64;
                            message2.reply_markup = replyMarkup2;
                            if (i3 == 0) {
                                messageMedia5 = messageMedia4;
                                tL_photo5 = tL_photo4;
                                z3 = z2;
                                message2.to_id = new TL_peerUser();
                                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                    message2.to_id.user_id = encryptedChat.participant_id;
                                } else {
                                    message2.to_id.user_id = encryptedChat.admin_id;
                                }
                                if (i10 == 0) {
                                    message2.ttl = encryptedChat.ttl;
                                    if (message2.ttl != 0) {
                                        if (message2.media != null) {
                                            message2.media.ttl_seconds = message2.ttl;
                                            messageMedia4 = message2.media;
                                            messageMedia4.flags |= 4;
                                        }
                                    }
                                } else {
                                    message2.ttl = i10;
                                }
                                if (message2.ttl != 0) {
                                    if (message2.media.document != null) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        } else {
                                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                    i2 = documentAttribute.duration;
                                                    break;
                                                }
                                            }
                                            i2 = 0;
                                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                                        }
                                    }
                                }
                            } else {
                                z3 = z2;
                                if (!z3) {
                                    messageMedia5 = messageMedia4;
                                    tL_photo5 = tL_photo4;
                                    i6 = i3;
                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                    if (i6 > 0) {
                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                        if (user6 != null) {
                                            processSentMessage(message2.id);
                                            return;
                                        } else if (user6.bot) {
                                            message2.unread = false;
                                        }
                                    }
                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                    arrayList3 = new ArrayList();
                                    tL_photo5 = tL_photo4;
                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                    while (it.hasNext()) {
                                        it2 = it;
                                        messageMedia5 = messageMedia4;
                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                        if (inputUser == null) {
                                            arrayList3.add(inputUser);
                                        }
                                        it = it2;
                                        messageMedia4 = messageMedia5;
                                    }
                                    messageMedia5 = messageMedia4;
                                    message2.to_id = new TL_peerChat();
                                    message2.to_id.chat_id = i3;
                                    z4 = true;
                                    if (z3 != z4) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                z4 = true;
                                            }
                                        }
                                        z4 = true;
                                        message2.media_unread = true;
                                    }
                                    message2.send_state = z4;
                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                    messageObject7.replyMessageObject = messageObject6;
                                    messageObject7.attachPathExists = true;
                                    if (messageObject7.videoEditedInfo == null) {
                                    }
                                    if (hashMap2 == null) {
                                        str8 = (String) hashMap2.get("groupId");
                                        if (str8 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = Utilities.parseLong(str8).longValue();
                                            message2.grouped_id = longValue;
                                            message2.flags |= 131072;
                                        } else {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        }
                                        if (hashMap2.get("final") != null) {
                                            obj = 1;
                                            if (longValue != 0) {
                                                arrayList5 = new ArrayList();
                                                arrayList5.add(messageObject7);
                                                arrayList6 = new ArrayList();
                                                arrayList6.add(message2);
                                                hashMap3 = hashMap2;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                messageObject3 = messageObject7;
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                delayedMessage = null;
                                            } else {
                                                hashMap3 = hashMap2;
                                                messageObject3 = messageObject7;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("group_");
                                                stringBuilder.append(longValue);
                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                if (arrayList5 == null) {
                                                }
                                                if (delayedMessage == null) {
                                                    delayedMessage = new DelayedMessage(j4);
                                                    delayedMessage.type = 4;
                                                    delayedMessage.groupId = longValue;
                                                    delayedMessage.messageObjects = new ArrayList();
                                                    delayedMessage.messages = new ArrayList();
                                                    delayedMessage.originalPaths = new ArrayList();
                                                    delayedMessage.extraHashMap = new HashMap();
                                                    delayedMessage.encryptedChat = encryptedChat;
                                                }
                                                if (obj != null) {
                                                    delayedMessage.finalGroupMessage = message2.id;
                                                }
                                            }
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append("send message user_id = ");
                                            stringBuilder2.append(inputPeer.user_id);
                                            stringBuilder2.append(" chat_id = ");
                                            stringBuilder2.append(inputPeer.chat_id);
                                            stringBuilder2.append(" channel_id = ");
                                            stringBuilder2.append(inputPeer.channel_id);
                                            stringBuilder2.append(" access_hash = ");
                                            stringBuilder2.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder2.toString());
                                            if (i5 != 0) {
                                                if (i5 == 9) {
                                                }
                                                if (i5 >= 1) {
                                                }
                                                j5 = j4;
                                                i4 = i5;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                if (i4 != 4) {
                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                        if (chat2 != null) {
                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                    }
                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                    if (messageObject2.getId() < 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                } else if (i4 == 9) {
                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                    if (messageObject8 == null) {
                                                        tL_messages_forwardMessages.clear_draft = true;
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                }
                                            }
                                            j5 = j4;
                                            arrayList7 = arrayList4;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            arrayList2 = arrayList;
                                            if (encryptedChat != null) {
                                                str8 = str6;
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                } else {
                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                }
                                                tL_decryptedMessage.ttl = message2.ttl;
                                                tL_decryptedMessage.entities = arrayList2;
                                                tL_decryptedMessage.flags |= 128;
                                                if (message2.reply_to_random_id != 0) {
                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                    tL_decryptedMessage.flags |= 8;
                                                }
                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                tL_decryptedMessage.flags |= 2048;
                                                tL_decryptedMessage.random_id = message2.random_id;
                                                tL_decryptedMessage.message = str8;
                                                webPage4 = webPage3;
                                                if (webPage4 != null) {
                                                }
                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            } else if (arrayList7 == null) {
                                                tLObject = new TL_messages_sendBroadcast();
                                                arrayList8 = new ArrayList();
                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                }
                                                tLObject.message = str6;
                                                tLObject.contacts = arrayList7;
                                                tLObject.media = new TL_inputMediaEmpty();
                                                tLObject.random_id = arrayList8;
                                                performSendMessageRequest(tLObject, messageObject7, null);
                                            } else {
                                                str8 = str6;
                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                tL_messages_forwardMessages.message = str8;
                                                if (messageObject8 != null) {
                                                }
                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append("silent_");
                                                    stringBuilder3.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                }
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (z) {
                                                    tL_messages_forwardMessages.no_webpage = true;
                                                }
                                                tL_messages_forwardMessages.entities = arrayList2;
                                                tL_messages_forwardMessages.flags |= 8;
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            }
                                        }
                                    }
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                    obj = null;
                                    if (longValue != 0) {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    } else {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            } else {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    }
                                } else {
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                    return;
                                }
                            }
                            z4 = true;
                            arrayList3 = null;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            } else {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        } else if (messageObject5.type != 2) {
                            i4 = -1;
                        } else {
                            document = (TL_document) message2.media.document;
                            i4 = 8;
                            user3 = user;
                            messageMedia3 = messageMedia;
                            tL_photo3 = tL_photo;
                            if (hashMap2 == null) {
                            }
                            str6 = str4;
                            i5 = i4;
                            i10 = i2;
                            webPage3 = webPage2;
                            document2 = document;
                            str7 = str10;
                            user4 = user3;
                            messageMedia4 = messageMedia3;
                            tL_photo4 = tL_photo3;
                            if (message2.random_id == 0) {
                                message2.random_id = getNextRandomId();
                            }
                            if (encryptedChat == null) {
                                message2.via_bot_name = (String) hashMap2.get("bot_name");
                                if (message2.via_bot_name == null) {
                                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                            } else {
                                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                            }
                            message2.flags |= 2048;
                            message2.params = hashMap2;
                            if (messageObject5 != null) {
                            }
                            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                            if (inputPeer instanceof TL_inputPeerChannel) {
                                if (obj != null) {
                                    message2.views = 1;
                                    message2.flags |= 1024;
                                }
                                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                                if (chat != null) {
                                    if (chat.megagroup) {
                                        message2.flags |= Integer.MIN_VALUE;
                                        message2.unread = true;
                                    } else {
                                        message2.post = true;
                                        if (chat.signatures) {
                                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                        }
                                    }
                                }
                            } else {
                                message2.unread = true;
                            }
                            message2.flags |= 512;
                            j4 = j;
                            message2.dialog_id = j4;
                            messageObject6 = messageObject;
                            if (messageObject6 == null) {
                                if (encryptedChat == null) {
                                    user5 = user4;
                                    if (messageObject6.messageOwner.random_id != 0) {
                                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                        message2.flags |= 8;
                                        message2.reply_to_msg_id = messageObject.getId();
                                    }
                                } else {
                                    user5 = user4;
                                }
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            } else {
                                user5 = user4;
                            }
                            replyMarkup2 = replyMarkup;
                            message2.flags |= 64;
                            message2.reply_markup = replyMarkup2;
                            if (i3 == 0) {
                                z3 = z2;
                                if (!z3) {
                                    messageMedia5 = messageMedia4;
                                    tL_photo5 = tL_photo4;
                                    i6 = i3;
                                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                                    if (i6 > 0) {
                                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                        if (user6 != null) {
                                            processSentMessage(message2.id);
                                            return;
                                        } else if (user6.bot) {
                                            message2.unread = false;
                                        }
                                    }
                                } else if (sendMessagesHelper.currentChatInfo != null) {
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                                    processSentMessage(message2.id);
                                    return;
                                } else {
                                    arrayList3 = new ArrayList();
                                    tL_photo5 = tL_photo4;
                                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                    while (it.hasNext()) {
                                        it2 = it;
                                        messageMedia5 = messageMedia4;
                                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                        if (inputUser == null) {
                                            arrayList3.add(inputUser);
                                        }
                                        it = it2;
                                        messageMedia4 = messageMedia5;
                                    }
                                    messageMedia5 = messageMedia4;
                                    message2.to_id = new TL_peerChat();
                                    message2.to_id.chat_id = i3;
                                    z4 = true;
                                    if (z3 != z4) {
                                        if (MessageObject.isVoiceMessage(message2)) {
                                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                                z4 = true;
                                            }
                                        }
                                        z4 = true;
                                        message2.media_unread = true;
                                    }
                                    message2.send_state = z4;
                                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                                    messageObject7.replyMessageObject = messageObject6;
                                    messageObject7.attachPathExists = true;
                                    if (messageObject7.videoEditedInfo == null) {
                                    }
                                    if (hashMap2 == null) {
                                        str8 = (String) hashMap2.get("groupId");
                                        if (str8 == null) {
                                            arrayList4 = arrayList3;
                                            longValue = Utilities.parseLong(str8).longValue();
                                            message2.grouped_id = longValue;
                                            message2.flags |= 131072;
                                        } else {
                                            arrayList4 = arrayList3;
                                            longValue = 0;
                                        }
                                        if (hashMap2.get("final") != null) {
                                            obj = 1;
                                            if (longValue != 0) {
                                                arrayList5 = new ArrayList();
                                                arrayList5.add(messageObject7);
                                                arrayList6 = new ArrayList();
                                                arrayList6.add(message2);
                                                hashMap3 = hashMap2;
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                                messageObject3 = messageObject7;
                                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                delayedMessage = null;
                                            } else {
                                                hashMap3 = hashMap2;
                                                messageObject3 = messageObject7;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("group_");
                                                stringBuilder.append(longValue);
                                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                                if (arrayList5 == null) {
                                                }
                                                if (delayedMessage == null) {
                                                    delayedMessage = new DelayedMessage(j4);
                                                    delayedMessage.type = 4;
                                                    delayedMessage.groupId = longValue;
                                                    delayedMessage.messageObjects = new ArrayList();
                                                    delayedMessage.messages = new ArrayList();
                                                    delayedMessage.originalPaths = new ArrayList();
                                                    delayedMessage.extraHashMap = new HashMap();
                                                    delayedMessage.encryptedChat = encryptedChat;
                                                }
                                                if (obj != null) {
                                                    delayedMessage.finalGroupMessage = message2.id;
                                                }
                                            }
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append("send message user_id = ");
                                            stringBuilder2.append(inputPeer.user_id);
                                            stringBuilder2.append(" chat_id = ");
                                            stringBuilder2.append(inputPeer.chat_id);
                                            stringBuilder2.append(" channel_id = ");
                                            stringBuilder2.append(inputPeer.channel_id);
                                            stringBuilder2.append(" access_hash = ");
                                            stringBuilder2.append(inputPeer.access_hash);
                                            FileLog.m0d(stringBuilder2.toString());
                                            if (i5 != 0) {
                                                if (i5 == 9) {
                                                }
                                                if (i5 >= 1) {
                                                }
                                                j5 = j4;
                                                i4 = i5;
                                                hashMap4 = hashMap3;
                                                messageObject7 = messageObject3;
                                                messageObject8 = messageObject2;
                                                if (i4 != 4) {
                                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                                    if (messageObject8.messageOwner.ttl == 0) {
                                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                        if (chat2 != null) {
                                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                        }
                                                    } else {
                                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                                    }
                                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                                    if (messageObject2.getId() < 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                } else if (i4 == 9) {
                                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                                    tL_messages_forwardMessages.peer = inputPeer;
                                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                                    if (message2.reply_to_msg_id != 0) {
                                                        tL_messages_forwardMessages.flags |= 1;
                                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                    }
                                                    if (message2.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        stringBuilder.append(j5);
                                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                                    }
                                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                                    if (messageObject8 == null) {
                                                        tL_messages_forwardMessages.clear_draft = true;
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                    }
                                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                }
                                            }
                                            j5 = j4;
                                            arrayList7 = arrayList4;
                                            hashMap4 = hashMap3;
                                            messageObject7 = messageObject3;
                                            messageObject8 = messageObject2;
                                            arrayList2 = arrayList;
                                            if (encryptedChat != null) {
                                                str8 = str6;
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                                    tL_decryptedMessage = new TL_decryptedMessage();
                                                } else {
                                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                                }
                                                tL_decryptedMessage.ttl = message2.ttl;
                                                tL_decryptedMessage.entities = arrayList2;
                                                tL_decryptedMessage.flags |= 128;
                                                if (message2.reply_to_random_id != 0) {
                                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                                    tL_decryptedMessage.flags |= 8;
                                                }
                                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                                tL_decryptedMessage.flags |= 2048;
                                                tL_decryptedMessage.random_id = message2.random_id;
                                                tL_decryptedMessage.message = str8;
                                                webPage4 = webPage3;
                                                if (webPage4 != null) {
                                                }
                                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            } else if (arrayList7 == null) {
                                                tLObject = new TL_messages_sendBroadcast();
                                                arrayList8 = new ArrayList();
                                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                                }
                                                tLObject.message = str6;
                                                tLObject.contacts = arrayList7;
                                                tLObject.media = new TL_inputMediaEmpty();
                                                tLObject.random_id = arrayList8;
                                                performSendMessageRequest(tLObject, messageObject7, null);
                                            } else {
                                                str8 = str6;
                                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                                tL_messages_forwardMessages.message = str8;
                                                if (messageObject8 != null) {
                                                }
                                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                                if (message2.to_id instanceof TL_peerChannel) {
                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append("silent_");
                                                    stringBuilder3.append(j5);
                                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                                }
                                                tL_messages_forwardMessages.peer = inputPeer;
                                                tL_messages_forwardMessages.random_id = message2.random_id;
                                                if (message2.reply_to_msg_id != 0) {
                                                    tL_messages_forwardMessages.flags |= 1;
                                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                                }
                                                if (z) {
                                                    tL_messages_forwardMessages.no_webpage = true;
                                                }
                                                tL_messages_forwardMessages.entities = arrayList2;
                                                tL_messages_forwardMessages.flags |= 8;
                                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                                if (messageObject8 == null) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                                }
                                            }
                                        }
                                    }
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                    obj = null;
                                    if (longValue != 0) {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    } else {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            } else {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    }
                                }
                            }
                            messageMedia5 = messageMedia4;
                            tL_photo5 = tL_photo4;
                            z3 = z2;
                            message2.to_id = new TL_peerUser();
                            if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                                message2.to_id.user_id = encryptedChat.admin_id;
                            } else {
                                message2.to_id.user_id = encryptedChat.participant_id;
                            }
                            if (i10 == 0) {
                                message2.ttl = i10;
                            } else {
                                message2.ttl = encryptedChat.ttl;
                                if (message2.ttl != 0) {
                                    if (message2.media != null) {
                                        message2.media.ttl_seconds = message2.ttl;
                                        messageMedia4 = message2.media;
                                        messageMedia4.flags |= 4;
                                    }
                                }
                            }
                            if (message2.ttl != 0) {
                                if (message2.media.document != null) {
                                    if (MessageObject.isVoiceMessage(message2)) {
                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                            if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                                i2 = documentAttribute.duration;
                                                break;
                                            }
                                        }
                                        i2 = 0;
                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                    } else {
                                        for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                            documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                            if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                                i2 = documentAttribute.duration;
                                                break;
                                            }
                                        }
                                        i2 = 0;
                                        message2.ttl = Math.max(message2.ttl, i2 + 1);
                                    }
                                }
                            }
                            z4 = true;
                            arrayList3 = null;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                arrayList4 = arrayList3;
                                longValue = 0;
                            } else {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        }
                    }
                    if (messageObject5.messageOwner.media instanceof TL_messageMediaGame) {
                        str4 = message2.message;
                    }
                    i3 = i10;
                    i4 = 0;
                    document = tL_document;
                    user3 = user;
                    messageMedia3 = messageMedia;
                    tL_photo3 = tL_photo;
                    if (hashMap2 == null) {
                    }
                    str6 = str4;
                    i5 = i4;
                    i10 = i2;
                    webPage3 = webPage2;
                    document2 = document;
                    str7 = str10;
                    user4 = user3;
                    messageMedia4 = messageMedia3;
                    tL_photo4 = tL_photo3;
                    if (message2.random_id == 0) {
                        message2.random_id = getNextRandomId();
                    }
                    if (encryptedChat == null) {
                        message2.via_bot_name = (String) hashMap2.get("bot_name");
                        if (message2.via_bot_name == null) {
                            message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                        }
                    } else {
                        message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
                    }
                    message2.flags |= 2048;
                    message2.params = hashMap2;
                    if (messageObject5 != null) {
                    }
                    message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                    if (inputPeer instanceof TL_inputPeerChannel) {
                        if (obj != null) {
                            message2.views = 1;
                            message2.flags |= 1024;
                        }
                        chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                        if (chat != null) {
                            if (chat.megagroup) {
                                message2.flags |= Integer.MIN_VALUE;
                                message2.unread = true;
                            } else {
                                message2.post = true;
                                if (chat.signatures) {
                                    message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                                }
                            }
                        }
                    } else {
                        message2.unread = true;
                    }
                    message2.flags |= 512;
                    j4 = j;
                    message2.dialog_id = j4;
                    messageObject6 = messageObject;
                    if (messageObject6 == null) {
                        if (encryptedChat == null) {
                            user5 = user4;
                            if (messageObject6.messageOwner.random_id != 0) {
                                message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                                message2.flags |= 8;
                                message2.reply_to_msg_id = messageObject.getId();
                            }
                        } else {
                            user5 = user4;
                        }
                        message2.flags |= 8;
                        message2.reply_to_msg_id = messageObject.getId();
                    } else {
                        user5 = user4;
                    }
                    replyMarkup2 = replyMarkup;
                    message2.flags |= 64;
                    message2.reply_markup = replyMarkup2;
                    if (i3 == 0) {
                        z3 = z2;
                        if (!z3) {
                            messageMedia5 = messageMedia4;
                            tL_photo5 = tL_photo4;
                            i6 = i3;
                            message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                            if (i6 > 0) {
                                user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                                if (user6 != null) {
                                    processSentMessage(message2.id);
                                    return;
                                } else if (user6.bot) {
                                    message2.unread = false;
                                }
                            }
                        } else if (sendMessagesHelper.currentChatInfo != null) {
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                            processSentMessage(message2.id);
                            return;
                        } else {
                            arrayList3 = new ArrayList();
                            tL_photo5 = tL_photo4;
                            it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                            while (it.hasNext()) {
                                it2 = it;
                                messageMedia5 = messageMedia4;
                                inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                if (inputUser == null) {
                                    arrayList3.add(inputUser);
                                }
                                it = it2;
                                messageMedia4 = messageMedia5;
                            }
                            messageMedia5 = messageMedia4;
                            message2.to_id = new TL_peerChat();
                            message2.to_id.chat_id = i3;
                            z4 = true;
                            if (z3 != z4) {
                                if (MessageObject.isVoiceMessage(message2)) {
                                    if (!MessageObject.isRoundVideoMessage(message2)) {
                                        z4 = true;
                                    }
                                }
                                z4 = true;
                                message2.media_unread = true;
                            }
                            message2.send_state = z4;
                            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                            messageObject7.replyMessageObject = messageObject6;
                            messageObject7.attachPathExists = true;
                            if (messageObject7.videoEditedInfo == null) {
                            }
                            if (hashMap2 == null) {
                                str8 = (String) hashMap2.get("groupId");
                                if (str8 == null) {
                                    arrayList4 = arrayList3;
                                    longValue = Utilities.parseLong(str8).longValue();
                                    message2.grouped_id = longValue;
                                    message2.flags |= 131072;
                                } else {
                                    arrayList4 = arrayList3;
                                    longValue = 0;
                                }
                                if (hashMap2.get("final") != null) {
                                    obj = 1;
                                    if (longValue != 0) {
                                        arrayList5 = new ArrayList();
                                        arrayList5.add(messageObject7);
                                        arrayList6 = new ArrayList();
                                        arrayList6.add(message2);
                                        hashMap3 = hashMap2;
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                        messageObject3 = messageObject7;
                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                        delayedMessage = null;
                                    } else {
                                        hashMap3 = hashMap2;
                                        messageObject3 = messageObject7;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("group_");
                                        stringBuilder.append(longValue);
                                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                        if (arrayList5 == null) {
                                        }
                                        if (delayedMessage == null) {
                                            delayedMessage = new DelayedMessage(j4);
                                            delayedMessage.type = 4;
                                            delayedMessage.groupId = longValue;
                                            delayedMessage.messageObjects = new ArrayList();
                                            delayedMessage.messages = new ArrayList();
                                            delayedMessage.originalPaths = new ArrayList();
                                            delayedMessage.extraHashMap = new HashMap();
                                            delayedMessage.encryptedChat = encryptedChat;
                                        }
                                        if (obj != null) {
                                            delayedMessage.finalGroupMessage = message2.id;
                                        }
                                    }
                                    stringBuilder2 = new StringBuilder();
                                    stringBuilder2.append("send message user_id = ");
                                    stringBuilder2.append(inputPeer.user_id);
                                    stringBuilder2.append(" chat_id = ");
                                    stringBuilder2.append(inputPeer.chat_id);
                                    stringBuilder2.append(" channel_id = ");
                                    stringBuilder2.append(inputPeer.channel_id);
                                    stringBuilder2.append(" access_hash = ");
                                    stringBuilder2.append(inputPeer.access_hash);
                                    FileLog.m0d(stringBuilder2.toString());
                                    if (i5 != 0) {
                                        if (i5 == 9) {
                                        }
                                        if (i5 >= 1) {
                                        }
                                        j5 = j4;
                                        i4 = i5;
                                        hashMap4 = hashMap3;
                                        messageObject7 = messageObject3;
                                        messageObject8 = messageObject2;
                                        if (i4 != 4) {
                                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                            tL_messages_forwardMessages.to_peer = inputPeer;
                                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                            if (messageObject8.messageOwner.ttl == 0) {
                                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                                if (chat2 != null) {
                                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                                }
                                            } else {
                                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                            }
                                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                            if (messageObject2.getId() < 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        } else if (i4 == 9) {
                                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                            tL_messages_forwardMessages.peer = inputPeer;
                                            tL_messages_forwardMessages.random_id = message2.random_id;
                                            if (message2.reply_to_msg_id != 0) {
                                                tL_messages_forwardMessages.flags |= 1;
                                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                            }
                                            if (message2.to_id instanceof TL_peerChannel) {
                                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("silent_");
                                                stringBuilder.append(j5);
                                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                            }
                                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                            if (messageObject8 == null) {
                                                tL_messages_forwardMessages.clear_draft = true;
                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                            }
                                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        }
                                    }
                                    j5 = j4;
                                    arrayList7 = arrayList4;
                                    hashMap4 = hashMap3;
                                    messageObject7 = messageObject3;
                                    messageObject8 = messageObject2;
                                    arrayList2 = arrayList;
                                    if (encryptedChat != null) {
                                        str8 = str6;
                                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                            tL_decryptedMessage = new TL_decryptedMessage();
                                        } else {
                                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                        }
                                        tL_decryptedMessage.ttl = message2.ttl;
                                        tL_decryptedMessage.entities = arrayList2;
                                        tL_decryptedMessage.flags |= 128;
                                        if (message2.reply_to_random_id != 0) {
                                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                            tL_decryptedMessage.flags |= 8;
                                        }
                                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                        tL_decryptedMessage.flags |= 2048;
                                        tL_decryptedMessage.random_id = message2.random_id;
                                        tL_decryptedMessage.message = str8;
                                        webPage4 = webPage3;
                                        if (webPage4 != null) {
                                        }
                                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    } else if (arrayList7 == null) {
                                        tLObject = new TL_messages_sendBroadcast();
                                        arrayList8 = new ArrayList();
                                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                        }
                                        tLObject.message = str6;
                                        tLObject.contacts = arrayList7;
                                        tLObject.media = new TL_inputMediaEmpty();
                                        tLObject.random_id = arrayList8;
                                        performSendMessageRequest(tLObject, messageObject7, null);
                                    } else {
                                        str8 = str6;
                                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                                        tL_messages_forwardMessages.message = str8;
                                        if (messageObject8 != null) {
                                        }
                                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                        if (message2.to_id instanceof TL_peerChannel) {
                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append("silent_");
                                            stringBuilder3.append(j5);
                                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                        }
                                        tL_messages_forwardMessages.peer = inputPeer;
                                        tL_messages_forwardMessages.random_id = message2.random_id;
                                        if (message2.reply_to_msg_id != 0) {
                                            tL_messages_forwardMessages.flags |= 1;
                                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                        }
                                        if (z) {
                                            tL_messages_forwardMessages.no_webpage = true;
                                        }
                                        tL_messages_forwardMessages.entities = arrayList2;
                                        tL_messages_forwardMessages.flags |= 8;
                                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                        if (messageObject8 == null) {
                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                        }
                                    }
                                }
                            }
                            arrayList4 = arrayList3;
                            longValue = 0;
                            obj = null;
                            if (longValue != 0) {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            } else {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    } else {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            }
                        }
                    }
                    messageMedia5 = messageMedia4;
                    tL_photo5 = tL_photo4;
                    z3 = z2;
                    message2.to_id = new TL_peerUser();
                    if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                        message2.to_id.user_id = encryptedChat.admin_id;
                    } else {
                        message2.to_id.user_id = encryptedChat.participant_id;
                    }
                    if (i10 == 0) {
                        message2.ttl = i10;
                    } else {
                        message2.ttl = encryptedChat.ttl;
                        if (message2.ttl != 0) {
                            if (message2.media != null) {
                                message2.media.ttl_seconds = message2.ttl;
                                messageMedia4 = message2.media;
                                messageMedia4.flags |= 4;
                            }
                        }
                    }
                    if (message2.ttl != 0) {
                        if (message2.media.document != null) {
                            if (MessageObject.isVoiceMessage(message2)) {
                                for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                    documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                    if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                        i2 = documentAttribute.duration;
                                        break;
                                    }
                                }
                                i2 = 0;
                                message2.ttl = Math.max(message2.ttl, i2 + 1);
                            } else {
                                for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                    documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                    if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                        i2 = documentAttribute.duration;
                                        break;
                                    }
                                }
                                i2 = 0;
                                message2.ttl = Math.max(message2.ttl, i2 + 1);
                            }
                        }
                    }
                    z4 = true;
                    arrayList3 = null;
                    if (z3 != z4) {
                        if (MessageObject.isVoiceMessage(message2)) {
                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                z4 = true;
                            }
                        }
                        z4 = true;
                        message2.media_unread = true;
                    }
                    message2.send_state = z4;
                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                    messageObject7.replyMessageObject = messageObject6;
                    messageObject7.attachPathExists = true;
                    if (messageObject7.videoEditedInfo == null) {
                    }
                    if (hashMap2 == null) {
                        arrayList4 = arrayList3;
                        longValue = 0;
                    } else {
                        str8 = (String) hashMap2.get("groupId");
                        if (str8 == null) {
                            arrayList4 = arrayList3;
                            longValue = 0;
                        } else {
                            arrayList4 = arrayList3;
                            longValue = Utilities.parseLong(str8).longValue();
                            message2.grouped_id = longValue;
                            message2.flags |= 131072;
                        }
                        if (hashMap2.get("final") != null) {
                            obj = 1;
                            if (longValue != 0) {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            } else {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    } else {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            } else {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            }
                        }
                    }
                    obj = null;
                    if (longValue != 0) {
                        hashMap3 = hashMap2;
                        messageObject3 = messageObject7;
                        stringBuilder = new StringBuilder();
                        stringBuilder.append("group_");
                        stringBuilder.append(longValue);
                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                        if (arrayList5 == null) {
                        }
                        if (delayedMessage == null) {
                            delayedMessage = new DelayedMessage(j4);
                            delayedMessage.type = 4;
                            delayedMessage.groupId = longValue;
                            delayedMessage.messageObjects = new ArrayList();
                            delayedMessage.messages = new ArrayList();
                            delayedMessage.originalPaths = new ArrayList();
                            delayedMessage.extraHashMap = new HashMap();
                            delayedMessage.encryptedChat = encryptedChat;
                        }
                        if (obj != null) {
                            delayedMessage.finalGroupMessage = message2.id;
                        }
                    } else {
                        arrayList5 = new ArrayList();
                        arrayList5.add(messageObject7);
                        arrayList6 = new ArrayList();
                        arrayList6.add(message2);
                        hashMap3 = hashMap2;
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                        messageObject3 = messageObject7;
                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                        delayedMessage = null;
                    }
                    stringBuilder2 = new StringBuilder();
                    stringBuilder2.append("send message user_id = ");
                    stringBuilder2.append(inputPeer.user_id);
                    stringBuilder2.append(" chat_id = ");
                    stringBuilder2.append(inputPeer.chat_id);
                    stringBuilder2.append(" channel_id = ");
                    stringBuilder2.append(inputPeer.channel_id);
                    stringBuilder2.append(" access_hash = ");
                    stringBuilder2.append(inputPeer.access_hash);
                    FileLog.m0d(stringBuilder2.toString());
                    if (i5 != 0) {
                        if (i5 == 9) {
                        }
                        if (i5 >= 1) {
                        }
                        j5 = j4;
                        i4 = i5;
                        hashMap4 = hashMap3;
                        messageObject7 = messageObject3;
                        messageObject8 = messageObject2;
                        if (i4 != 4) {
                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                            tL_messages_forwardMessages.to_peer = inputPeer;
                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                            if (messageObject8.messageOwner.ttl == 0) {
                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                            } else {
                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                if (chat2 != null) {
                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                }
                            }
                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("silent_");
                                stringBuilder.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                            }
                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                            if (messageObject2.getId() < 0) {
                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                            }
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                        } else if (i4 == 9) {
                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                            tL_messages_forwardMessages.peer = inputPeer;
                            tL_messages_forwardMessages.random_id = message2.random_id;
                            if (message2.reply_to_msg_id != 0) {
                                tL_messages_forwardMessages.flags |= 1;
                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                            }
                            if (message2.to_id instanceof TL_peerChannel) {
                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("silent_");
                                stringBuilder.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                            }
                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                            if (messageObject8 == null) {
                                tL_messages_forwardMessages.clear_draft = true;
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                        }
                    }
                    j5 = j4;
                    arrayList7 = arrayList4;
                    hashMap4 = hashMap3;
                    messageObject7 = messageObject3;
                    messageObject8 = messageObject2;
                    arrayList2 = arrayList;
                    if (encryptedChat != null) {
                        str8 = str6;
                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                        } else {
                            tL_decryptedMessage = new TL_decryptedMessage();
                        }
                        tL_decryptedMessage.ttl = message2.ttl;
                        tL_decryptedMessage.entities = arrayList2;
                        tL_decryptedMessage.flags |= 128;
                        if (message2.reply_to_random_id != 0) {
                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                            tL_decryptedMessage.flags |= 8;
                        }
                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                        tL_decryptedMessage.flags |= 2048;
                        tL_decryptedMessage.random_id = message2.random_id;
                        tL_decryptedMessage.message = str8;
                        webPage4 = webPage3;
                        if (webPage4 != null) {
                        }
                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                        if (messageObject8 == null) {
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                        }
                    } else if (arrayList7 == null) {
                        str8 = str6;
                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                        tL_messages_forwardMessages.message = str8;
                        if (messageObject8 != null) {
                        }
                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                        if (message2.to_id instanceof TL_peerChannel) {
                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder3 = new StringBuilder();
                            stringBuilder3.append("silent_");
                            stringBuilder3.append(j5);
                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                        }
                        tL_messages_forwardMessages.peer = inputPeer;
                        tL_messages_forwardMessages.random_id = message2.random_id;
                        if (message2.reply_to_msg_id != 0) {
                            tL_messages_forwardMessages.flags |= 1;
                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                        }
                        if (z) {
                            tL_messages_forwardMessages.no_webpage = true;
                        }
                        tL_messages_forwardMessages.entities = arrayList2;
                        tL_messages_forwardMessages.flags |= 8;
                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                        if (messageObject8 == null) {
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                        }
                    } else {
                        tLObject = new TL_messages_sendBroadcast();
                        arrayList8 = new ArrayList();
                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                        }
                        tLObject.message = str6;
                        tLObject.contacts = arrayList7;
                        tLObject.media = new TL_inputMediaEmpty();
                        tLObject.random_id = arrayList8;
                        performSendMessageRequest(tLObject, messageObject7, null);
                    }
                }
                str6 = str4;
                i3 = i10;
                i10 = i2;
                webPage3 = webPage2;
                str7 = str10;
                messageMedia4 = messageMedia;
                i5 = 4;
                tL_photo4 = tL_photo;
                user4 = user;
            }
            document2 = tL_document;
            if (message2.random_id == 0) {
                message2.random_id = getNextRandomId();
            }
            if (encryptedChat == null) {
                message2.via_bot_id = Utilities.parseInt((String) hashMap2.get("bot")).intValue();
            } else {
                message2.via_bot_name = (String) hashMap2.get("bot_name");
                if (message2.via_bot_name == null) {
                    message2.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                }
            }
            message2.flags |= 2048;
            message2.params = hashMap2;
            if (messageObject5 != null) {
            }
            message2.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
            if (inputPeer instanceof TL_inputPeerChannel) {
                message2.unread = true;
            } else {
                if (obj != null) {
                    message2.views = 1;
                    message2.flags |= 1024;
                }
                chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(inputPeer.channel_id));
                if (chat != null) {
                    if (chat.megagroup) {
                        message2.post = true;
                        if (chat.signatures) {
                            message2.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                        }
                    } else {
                        message2.flags |= Integer.MIN_VALUE;
                        message2.unread = true;
                    }
                }
            }
            message2.flags |= 512;
            j4 = j;
            message2.dialog_id = j4;
            messageObject6 = messageObject;
            if (messageObject6 == null) {
                user5 = user4;
            } else {
                if (encryptedChat == null) {
                    user5 = user4;
                } else {
                    user5 = user4;
                    if (messageObject6.messageOwner.random_id != 0) {
                        message2.reply_to_random_id = messageObject6.messageOwner.random_id;
                        message2.flags |= 8;
                        message2.reply_to_msg_id = messageObject.getId();
                    }
                }
                message2.flags |= 8;
                message2.reply_to_msg_id = messageObject.getId();
            }
            replyMarkup2 = replyMarkup;
            message2.flags |= 64;
            message2.reply_markup = replyMarkup2;
            if (i3 == 0) {
                messageMedia5 = messageMedia4;
                tL_photo5 = tL_photo4;
                z3 = z2;
                message2.to_id = new TL_peerUser();
                if (encryptedChat.participant_id != UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                    message2.to_id.user_id = encryptedChat.participant_id;
                } else {
                    message2.to_id.user_id = encryptedChat.admin_id;
                }
                if (i10 == 0) {
                    message2.ttl = encryptedChat.ttl;
                    if (message2.ttl != 0) {
                        if (message2.media != null) {
                            message2.media.ttl_seconds = message2.ttl;
                            messageMedia4 = message2.media;
                            messageMedia4.flags |= 4;
                        }
                    }
                } else {
                    message2.ttl = i10;
                }
                if (message2.ttl != 0) {
                    if (message2.media.document != null) {
                        if (MessageObject.isVoiceMessage(message2)) {
                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                if (!(documentAttribute instanceof TL_documentAttributeVideo)) {
                                    i2 = documentAttribute.duration;
                                    break;
                                }
                            }
                            i2 = 0;
                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                        } else {
                            for (i2 = 0; i2 < message2.media.document.attributes.size(); i2++) {
                                documentAttribute = (DocumentAttribute) message2.media.document.attributes.get(i2);
                                if (!(documentAttribute instanceof TL_documentAttributeAudio)) {
                                    i2 = documentAttribute.duration;
                                    break;
                                }
                            }
                            i2 = 0;
                            message2.ttl = Math.max(message2.ttl, i2 + 1);
                        }
                    }
                }
            } else {
                z3 = z2;
                if (!z3) {
                    messageMedia5 = messageMedia4;
                    tL_photo5 = tL_photo4;
                    i6 = i3;
                    message2.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(i6);
                    if (i6 > 0) {
                        user6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(i6));
                        if (user6 != null) {
                            processSentMessage(message2.id);
                            return;
                        } else if (user6.bot) {
                            message2.unread = false;
                        }
                    }
                } else if (sendMessagesHelper.currentChatInfo != null) {
                    arrayList3 = new ArrayList();
                    tL_photo5 = tL_photo4;
                    it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                    while (it.hasNext()) {
                        it2 = it;
                        messageMedia5 = messageMedia4;
                        inputUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                        if (inputUser == null) {
                            arrayList3.add(inputUser);
                        }
                        it = it2;
                        messageMedia4 = messageMedia5;
                    }
                    messageMedia5 = messageMedia4;
                    message2.to_id = new TL_peerChat();
                    message2.to_id.chat_id = i3;
                    z4 = true;
                    if (z3 != z4) {
                        if (MessageObject.isVoiceMessage(message2)) {
                            if (!MessageObject.isRoundVideoMessage(message2)) {
                                z4 = true;
                            }
                        }
                        z4 = true;
                        message2.media_unread = true;
                    }
                    message2.send_state = z4;
                    messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
                    messageObject7.replyMessageObject = messageObject6;
                    messageObject7.attachPathExists = true;
                    if (messageObject7.videoEditedInfo == null) {
                    }
                    if (hashMap2 == null) {
                        str8 = (String) hashMap2.get("groupId");
                        if (str8 == null) {
                            arrayList4 = arrayList3;
                            longValue = Utilities.parseLong(str8).longValue();
                            message2.grouped_id = longValue;
                            message2.flags |= 131072;
                        } else {
                            arrayList4 = arrayList3;
                            longValue = 0;
                        }
                        if (hashMap2.get("final") != null) {
                            obj = 1;
                            if (longValue != 0) {
                                arrayList5 = new ArrayList();
                                arrayList5.add(messageObject7);
                                arrayList6 = new ArrayList();
                                arrayList6.add(message2);
                                hashMap3 = hashMap2;
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                                MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                                messageObject3 = messageObject7;
                                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                delayedMessage = null;
                            } else {
                                hashMap3 = hashMap2;
                                messageObject3 = messageObject7;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(longValue);
                                arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                                if (arrayList5 == null) {
                                }
                                if (delayedMessage == null) {
                                    delayedMessage = new DelayedMessage(j4);
                                    delayedMessage.type = 4;
                                    delayedMessage.groupId = longValue;
                                    delayedMessage.messageObjects = new ArrayList();
                                    delayedMessage.messages = new ArrayList();
                                    delayedMessage.originalPaths = new ArrayList();
                                    delayedMessage.extraHashMap = new HashMap();
                                    delayedMessage.encryptedChat = encryptedChat;
                                }
                                if (obj != null) {
                                    delayedMessage.finalGroupMessage = message2.id;
                                }
                            }
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("send message user_id = ");
                            stringBuilder2.append(inputPeer.user_id);
                            stringBuilder2.append(" chat_id = ");
                            stringBuilder2.append(inputPeer.chat_id);
                            stringBuilder2.append(" channel_id = ");
                            stringBuilder2.append(inputPeer.channel_id);
                            stringBuilder2.append(" access_hash = ");
                            stringBuilder2.append(inputPeer.access_hash);
                            FileLog.m0d(stringBuilder2.toString());
                            if (i5 != 0) {
                                if (i5 == 9) {
                                }
                                if (i5 >= 1) {
                                }
                                j5 = j4;
                                i4 = i5;
                                hashMap4 = hashMap3;
                                messageObject7 = messageObject3;
                                messageObject8 = messageObject2;
                                if (i4 != 4) {
                                    tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                    tL_messages_forwardMessages.to_peer = inputPeer;
                                    tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                    if (messageObject8.messageOwner.ttl == 0) {
                                        chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                        tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                        if (chat2 != null) {
                                            tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                        }
                                    } else {
                                        tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                    }
                                    if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                    if (messageObject2.getId() < 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                    } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                    } else if (messageObject8.messageOwner.fwd_from != null) {
                                        tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                } else if (i4 == 9) {
                                    tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                    tL_messages_forwardMessages.peer = inputPeer;
                                    tL_messages_forwardMessages.random_id = message2.random_id;
                                    if (message2.reply_to_msg_id != 0) {
                                        tL_messages_forwardMessages.flags |= 1;
                                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                    }
                                    if (message2.to_id instanceof TL_peerChannel) {
                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append("silent_");
                                        stringBuilder.append(j5);
                                        tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                    }
                                    tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                    tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                    if (messageObject8 == null) {
                                        tL_messages_forwardMessages.clear_draft = true;
                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                    }
                                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                }
                            }
                            j5 = j4;
                            arrayList7 = arrayList4;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            arrayList2 = arrayList;
                            if (encryptedChat != null) {
                                str8 = str6;
                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                    tL_decryptedMessage = new TL_decryptedMessage();
                                } else {
                                    tL_decryptedMessage = new TL_decryptedMessage_layer45();
                                }
                                tL_decryptedMessage.ttl = message2.ttl;
                                tL_decryptedMessage.entities = arrayList2;
                                tL_decryptedMessage.flags |= 128;
                                if (message2.reply_to_random_id != 0) {
                                    tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                    tL_decryptedMessage.flags |= 8;
                                }
                                tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                                tL_decryptedMessage.flags |= 2048;
                                tL_decryptedMessage.random_id = message2.random_id;
                                tL_decryptedMessage.message = str8;
                                webPage4 = webPage3;
                                if (webPage4 != null) {
                                }
                                tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            } else if (arrayList7 == null) {
                                tLObject = new TL_messages_sendBroadcast();
                                arrayList8 = new ArrayList();
                                for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                    arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                                }
                                tLObject.message = str6;
                                tLObject.contacts = arrayList7;
                                tLObject.media = new TL_inputMediaEmpty();
                                tLObject.random_id = arrayList8;
                                performSendMessageRequest(tLObject, messageObject7, null);
                            } else {
                                str8 = str6;
                                tL_messages_forwardMessages = new TL_messages_sendMessage();
                                tL_messages_forwardMessages.message = str8;
                                if (messageObject8 != null) {
                                }
                                tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder3 = new StringBuilder();
                                    stringBuilder3.append("silent_");
                                    stringBuilder3.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                                }
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (z) {
                                    tL_messages_forwardMessages.no_webpage = true;
                                }
                                tL_messages_forwardMessages.entities = arrayList2;
                                tL_messages_forwardMessages.flags |= 8;
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                                if (messageObject8 == null) {
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                            }
                        }
                    }
                    arrayList4 = arrayList3;
                    longValue = 0;
                    obj = null;
                    if (longValue != 0) {
                        hashMap3 = hashMap2;
                        messageObject3 = messageObject7;
                        stringBuilder = new StringBuilder();
                        stringBuilder.append("group_");
                        stringBuilder.append(longValue);
                        arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                        if (arrayList5 == null) {
                        }
                        if (delayedMessage == null) {
                            delayedMessage = new DelayedMessage(j4);
                            delayedMessage.type = 4;
                            delayedMessage.groupId = longValue;
                            delayedMessage.messageObjects = new ArrayList();
                            delayedMessage.messages = new ArrayList();
                            delayedMessage.originalPaths = new ArrayList();
                            delayedMessage.extraHashMap = new HashMap();
                            delayedMessage.encryptedChat = encryptedChat;
                        }
                        if (obj != null) {
                            delayedMessage.finalGroupMessage = message2.id;
                        }
                    } else {
                        arrayList5 = new ArrayList();
                        arrayList5.add(messageObject7);
                        arrayList6 = new ArrayList();
                        arrayList6.add(message2);
                        hashMap3 = hashMap2;
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                        MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                        messageObject3 = messageObject7;
                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                        delayedMessage = null;
                    }
                    stringBuilder2 = new StringBuilder();
                    stringBuilder2.append("send message user_id = ");
                    stringBuilder2.append(inputPeer.user_id);
                    stringBuilder2.append(" chat_id = ");
                    stringBuilder2.append(inputPeer.chat_id);
                    stringBuilder2.append(" channel_id = ");
                    stringBuilder2.append(inputPeer.channel_id);
                    stringBuilder2.append(" access_hash = ");
                    stringBuilder2.append(inputPeer.access_hash);
                    FileLog.m0d(stringBuilder2.toString());
                    if (i5 != 0) {
                        if (i5 == 9) {
                        }
                        if (i5 >= 1) {
                        }
                        j5 = j4;
                        i4 = i5;
                        hashMap4 = hashMap3;
                        messageObject7 = messageObject3;
                        messageObject8 = messageObject2;
                        if (i4 != 4) {
                            tL_messages_forwardMessages = new TL_messages_forwardMessages();
                            tL_messages_forwardMessages.to_peer = inputPeer;
                            tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                            if (messageObject8.messageOwner.ttl == 0) {
                                tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                            } else {
                                chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                if (chat2 != null) {
                                    tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                }
                            }
                            if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("silent_");
                                stringBuilder.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                            }
                            tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                            if (messageObject2.getId() < 0) {
                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                            } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                            } else if (messageObject8.messageOwner.fwd_from != null) {
                                tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                            }
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                        } else if (i4 == 9) {
                            tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                            tL_messages_forwardMessages.peer = inputPeer;
                            tL_messages_forwardMessages.random_id = message2.random_id;
                            if (message2.reply_to_msg_id != 0) {
                                tL_messages_forwardMessages.flags |= 1;
                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                            }
                            if (message2.to_id instanceof TL_peerChannel) {
                                notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder = new StringBuilder();
                                stringBuilder.append("silent_");
                                stringBuilder.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                            }
                            tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                            tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                            if (messageObject8 == null) {
                                tL_messages_forwardMessages.clear_draft = true;
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                        }
                    }
                    j5 = j4;
                    arrayList7 = arrayList4;
                    hashMap4 = hashMap3;
                    messageObject7 = messageObject3;
                    messageObject8 = messageObject2;
                    arrayList2 = arrayList;
                    if (encryptedChat != null) {
                        str8 = str6;
                        if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                            tL_decryptedMessage = new TL_decryptedMessage_layer45();
                        } else {
                            tL_decryptedMessage = new TL_decryptedMessage();
                        }
                        tL_decryptedMessage.ttl = message2.ttl;
                        tL_decryptedMessage.entities = arrayList2;
                        tL_decryptedMessage.flags |= 128;
                        if (message2.reply_to_random_id != 0) {
                            tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                            tL_decryptedMessage.flags |= 8;
                        }
                        tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                        tL_decryptedMessage.flags |= 2048;
                        tL_decryptedMessage.random_id = message2.random_id;
                        tL_decryptedMessage.message = str8;
                        webPage4 = webPage3;
                        if (webPage4 != null) {
                        }
                        tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                        if (messageObject8 == null) {
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                        }
                    } else if (arrayList7 == null) {
                        str8 = str6;
                        tL_messages_forwardMessages = new TL_messages_sendMessage();
                        tL_messages_forwardMessages.message = str8;
                        if (messageObject8 != null) {
                        }
                        tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                        if (message2.to_id instanceof TL_peerChannel) {
                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder3 = new StringBuilder();
                            stringBuilder3.append("silent_");
                            stringBuilder3.append(j5);
                            tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                        }
                        tL_messages_forwardMessages.peer = inputPeer;
                        tL_messages_forwardMessages.random_id = message2.random_id;
                        if (message2.reply_to_msg_id != 0) {
                            tL_messages_forwardMessages.flags |= 1;
                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                        }
                        if (z) {
                            tL_messages_forwardMessages.no_webpage = true;
                        }
                        tL_messages_forwardMessages.entities = arrayList2;
                        tL_messages_forwardMessages.flags |= 8;
                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                        if (messageObject8 == null) {
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                        }
                    } else {
                        tLObject = new TL_messages_sendBroadcast();
                        arrayList8 = new ArrayList();
                        for (i7 = 0; i7 < arrayList7.size(); i7++) {
                            arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                        }
                        tLObject.message = str6;
                        tLObject.contacts = arrayList7;
                        tLObject.media = new TL_inputMediaEmpty();
                        tLObject.random_id = arrayList8;
                        performSendMessageRequest(tLObject, messageObject7, null);
                    }
                } else {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                    processSentMessage(message2.id);
                    return;
                }
            }
            z4 = true;
            arrayList3 = null;
            if (z3 != z4) {
                if (MessageObject.isVoiceMessage(message2)) {
                    if (!MessageObject.isRoundVideoMessage(message2)) {
                        z4 = true;
                    }
                }
                z4 = true;
                message2.media_unread = true;
            }
            message2.send_state = z4;
            messageObject7 = new MessageObject(sendMessagesHelper.currentAccount, message2, z4);
            try {
                messageObject7.replyMessageObject = messageObject6;
                messageObject7.attachPathExists = true;
                if (messageObject7.videoEditedInfo == null) {
                }
                if (hashMap2 == null) {
                    arrayList4 = arrayList3;
                    longValue = 0;
                } else {
                    str8 = (String) hashMap2.get("groupId");
                    if (str8 == null) {
                        arrayList4 = arrayList3;
                        longValue = 0;
                    } else {
                        arrayList4 = arrayList3;
                        longValue = Utilities.parseLong(str8).longValue();
                        message2.grouped_id = longValue;
                        message2.flags |= 131072;
                    }
                    if (hashMap2.get("final") != null) {
                        obj = 1;
                        if (longValue != 0) {
                            arrayList5 = new ArrayList();
                            arrayList5.add(messageObject7);
                            arrayList6 = new ArrayList();
                            arrayList6.add(message2);
                            hashMap3 = hashMap2;
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                            MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                            messageObject3 = messageObject7;
                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                            delayedMessage = null;
                        } else {
                            hashMap3 = hashMap2;
                            messageObject3 = messageObject7;
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("group_");
                            stringBuilder.append(longValue);
                            arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                            if (arrayList5 == null) {
                            }
                            if (delayedMessage == null) {
                                delayedMessage = new DelayedMessage(j4);
                                delayedMessage.type = 4;
                                delayedMessage.groupId = longValue;
                                delayedMessage.messageObjects = new ArrayList();
                                delayedMessage.messages = new ArrayList();
                                delayedMessage.originalPaths = new ArrayList();
                                delayedMessage.extraHashMap = new HashMap();
                                delayedMessage.encryptedChat = encryptedChat;
                            }
                            if (obj != null) {
                                delayedMessage.finalGroupMessage = message2.id;
                            }
                        }
                        stringBuilder2 = new StringBuilder();
                        stringBuilder2.append("send message user_id = ");
                        stringBuilder2.append(inputPeer.user_id);
                        stringBuilder2.append(" chat_id = ");
                        stringBuilder2.append(inputPeer.chat_id);
                        stringBuilder2.append(" channel_id = ");
                        stringBuilder2.append(inputPeer.channel_id);
                        stringBuilder2.append(" access_hash = ");
                        stringBuilder2.append(inputPeer.access_hash);
                        FileLog.m0d(stringBuilder2.toString());
                        if (i5 != 0) {
                            if (i5 == 9) {
                            }
                            if (i5 >= 1) {
                            }
                            j5 = j4;
                            i4 = i5;
                            hashMap4 = hashMap3;
                            messageObject7 = messageObject3;
                            messageObject8 = messageObject2;
                            if (i4 != 4) {
                                tL_messages_forwardMessages = new TL_messages_forwardMessages();
                                tL_messages_forwardMessages.to_peer = inputPeer;
                                tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                                if (messageObject8.messageOwner.ttl == 0) {
                                    chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                                    tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                                    if (chat2 != null) {
                                        tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                                    }
                                } else {
                                    tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                                }
                                if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("silent_");
                                    stringBuilder.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                }
                                tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                                if (messageObject2.getId() < 0) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                                } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                                } else if (messageObject8.messageOwner.fwd_from != null) {
                                    tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                                }
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            } else if (i4 == 9) {
                                tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                                tL_messages_forwardMessages.peer = inputPeer;
                                tL_messages_forwardMessages.random_id = message2.random_id;
                                if (message2.reply_to_msg_id != 0) {
                                    tL_messages_forwardMessages.flags |= 1;
                                    tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                                }
                                if (message2.to_id instanceof TL_peerChannel) {
                                    notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append("silent_");
                                    stringBuilder.append(j5);
                                    tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                                }
                                tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                                tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                                if (messageObject8 == null) {
                                    tL_messages_forwardMessages.clear_draft = true;
                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                                }
                                performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            }
                        }
                        j5 = j4;
                        arrayList7 = arrayList4;
                        hashMap4 = hashMap3;
                        messageObject7 = messageObject3;
                        messageObject8 = messageObject2;
                        arrayList2 = arrayList;
                        if (encryptedChat != null) {
                            str8 = str6;
                            if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                                tL_decryptedMessage = new TL_decryptedMessage();
                            } else {
                                tL_decryptedMessage = new TL_decryptedMessage_layer45();
                            }
                            tL_decryptedMessage.ttl = message2.ttl;
                            tL_decryptedMessage.entities = arrayList2;
                            tL_decryptedMessage.flags |= 128;
                            if (message2.reply_to_random_id != 0) {
                                tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                                tL_decryptedMessage.flags |= 8;
                            }
                            tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                            tL_decryptedMessage.flags |= 2048;
                            tL_decryptedMessage.random_id = message2.random_id;
                            tL_decryptedMessage.message = str8;
                            webPage4 = webPage3;
                            if (webPage4 != null) {
                            }
                            tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                            if (messageObject8 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                        } else if (arrayList7 == null) {
                            tLObject = new TL_messages_sendBroadcast();
                            arrayList8 = new ArrayList();
                            for (i7 = 0; i7 < arrayList7.size(); i7++) {
                                arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                            }
                            tLObject.message = str6;
                            tLObject.contacts = arrayList7;
                            tLObject.media = new TL_inputMediaEmpty();
                            tLObject.random_id = arrayList8;
                            performSendMessageRequest(tLObject, messageObject7, null);
                        } else {
                            str8 = str6;
                            tL_messages_forwardMessages = new TL_messages_sendMessage();
                            tL_messages_forwardMessages.message = str8;
                            if (messageObject8 != null) {
                            }
                            tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                            if (message2.to_id instanceof TL_peerChannel) {
                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                stringBuilder3 = new StringBuilder();
                                stringBuilder3.append("silent_");
                                stringBuilder3.append(j5);
                                tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                            }
                            tL_messages_forwardMessages.peer = inputPeer;
                            tL_messages_forwardMessages.random_id = message2.random_id;
                            if (message2.reply_to_msg_id != 0) {
                                tL_messages_forwardMessages.flags |= 1;
                                tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                            }
                            if (z) {
                                tL_messages_forwardMessages.no_webpage = true;
                            }
                            tL_messages_forwardMessages.entities = arrayList2;
                            tL_messages_forwardMessages.flags |= 8;
                            performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                            if (messageObject8 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                            }
                        }
                    }
                }
                obj = null;
                if (longValue != 0) {
                    hashMap3 = hashMap2;
                    messageObject3 = messageObject7;
                    stringBuilder = new StringBuilder();
                    stringBuilder.append("group_");
                    stringBuilder.append(longValue);
                    arrayList5 = (ArrayList) sendMessagesHelper.delayedMessages.get(stringBuilder.toString());
                    if (arrayList5 == null) {
                    }
                    if (delayedMessage == null) {
                        delayedMessage = new DelayedMessage(j4);
                        delayedMessage.type = 4;
                        delayedMessage.groupId = longValue;
                        delayedMessage.messageObjects = new ArrayList();
                        delayedMessage.messages = new ArrayList();
                        delayedMessage.originalPaths = new ArrayList();
                        delayedMessage.extraHashMap = new HashMap();
                        delayedMessage.encryptedChat = encryptedChat;
                    }
                    if (obj != null) {
                        delayedMessage.finalGroupMessage = message2.id;
                    }
                } else {
                    arrayList5 = new ArrayList();
                    arrayList5.add(messageObject7);
                    arrayList6 = new ArrayList();
                    arrayList6.add(message2);
                    hashMap3 = hashMap2;
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages(arrayList6, false, true, false, 0);
                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j4, arrayList5);
                    messageObject3 = messageObject7;
                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                    delayedMessage = null;
                }
                stringBuilder2 = new StringBuilder();
                stringBuilder2.append("send message user_id = ");
                stringBuilder2.append(inputPeer.user_id);
                stringBuilder2.append(" chat_id = ");
                stringBuilder2.append(inputPeer.chat_id);
                stringBuilder2.append(" channel_id = ");
                stringBuilder2.append(inputPeer.channel_id);
                stringBuilder2.append(" access_hash = ");
                stringBuilder2.append(inputPeer.access_hash);
                FileLog.m0d(stringBuilder2.toString());
                if (i5 != 0) {
                    if (i5 == 9) {
                    }
                    if (i5 >= 1) {
                    }
                    j5 = j4;
                    i4 = i5;
                    hashMap4 = hashMap3;
                    messageObject7 = messageObject3;
                    messageObject8 = messageObject2;
                    if (i4 != 4) {
                        tL_messages_forwardMessages = new TL_messages_forwardMessages();
                        tL_messages_forwardMessages.to_peer = inputPeer;
                        tL_messages_forwardMessages.with_my_score = messageObject8.messageOwner.with_my_score;
                        if (messageObject8.messageOwner.ttl == 0) {
                            tL_messages_forwardMessages.from_peer = new TL_inputPeerEmpty();
                        } else {
                            chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject8.messageOwner.ttl));
                            tL_messages_forwardMessages.from_peer = new TL_inputPeerChannel();
                            tL_messages_forwardMessages.from_peer.channel_id = -messageObject8.messageOwner.ttl;
                            if (chat2 != null) {
                                tL_messages_forwardMessages.from_peer.access_hash = chat2.access_hash;
                            }
                        }
                        if (messageObject8.messageOwner.to_id instanceof TL_peerChannel) {
                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("silent_");
                            stringBuilder.append(j5);
                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                        }
                        tL_messages_forwardMessages.random_id.add(Long.valueOf(message2.random_id));
                        if (messageObject2.getId() < 0) {
                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject2.getId()));
                        } else if (messageObject8.messageOwner.fwd_msg_id == 0) {
                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_msg_id));
                        } else if (messageObject8.messageOwner.fwd_from != null) {
                            tL_messages_forwardMessages.id.add(Integer.valueOf(messageObject8.messageOwner.fwd_from.channel_post));
                        }
                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                    } else if (i4 == 9) {
                        tL_messages_forwardMessages = new TL_messages_sendInlineBotResult();
                        tL_messages_forwardMessages.peer = inputPeer;
                        tL_messages_forwardMessages.random_id = message2.random_id;
                        if (message2.reply_to_msg_id != 0) {
                            tL_messages_forwardMessages.flags |= 1;
                            tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                        }
                        if (message2.to_id instanceof TL_peerChannel) {
                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder = new StringBuilder();
                            stringBuilder.append("silent_");
                            stringBuilder.append(j5);
                            tL_messages_forwardMessages.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                        }
                        tL_messages_forwardMessages.query_id = Utilities.parseLong((String) hashMap4.get("query_id")).longValue();
                        tL_messages_forwardMessages.id = (String) hashMap4.get(TtmlNode.ATTR_ID);
                        if (messageObject8 == null) {
                            tL_messages_forwardMessages.clear_draft = true;
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                        }
                        performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                    }
                }
                j5 = j4;
                arrayList7 = arrayList4;
                hashMap4 = hashMap3;
                messageObject7 = messageObject3;
                messageObject8 = messageObject2;
                arrayList2 = arrayList;
                if (encryptedChat != null) {
                    str8 = str6;
                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) < 73) {
                        tL_decryptedMessage = new TL_decryptedMessage_layer45();
                    } else {
                        tL_decryptedMessage = new TL_decryptedMessage();
                    }
                    tL_decryptedMessage.ttl = message2.ttl;
                    tL_decryptedMessage.entities = arrayList2;
                    tL_decryptedMessage.flags |= 128;
                    if (message2.reply_to_random_id != 0) {
                        tL_decryptedMessage.reply_to_random_id = message2.reply_to_random_id;
                        tL_decryptedMessage.flags |= 8;
                    }
                    tL_decryptedMessage.via_bot_name = (String) hashMap4.get("bot_name");
                    tL_decryptedMessage.flags |= 2048;
                    tL_decryptedMessage.random_id = message2.random_id;
                    tL_decryptedMessage.message = str8;
                    webPage4 = webPage3;
                    if (webPage4 != null) {
                    }
                    tL_decryptedMessage.media = new TL_decryptedMessageMediaEmpty();
                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, messageObject7.messageOwner, encryptedChat, null, null, messageObject7);
                    if (messageObject8 == null) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                    }
                } else if (arrayList7 == null) {
                    str8 = str6;
                    tL_messages_forwardMessages = new TL_messages_sendMessage();
                    tL_messages_forwardMessages.message = str8;
                    if (messageObject8 != null) {
                    }
                    tL_messages_forwardMessages.clear_draft = messageObject8 != null;
                    if (message2.to_id instanceof TL_peerChannel) {
                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                        stringBuilder3 = new StringBuilder();
                        stringBuilder3.append("silent_");
                        stringBuilder3.append(j5);
                        tL_messages_forwardMessages.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), false);
                    }
                    tL_messages_forwardMessages.peer = inputPeer;
                    tL_messages_forwardMessages.random_id = message2.random_id;
                    if (message2.reply_to_msg_id != 0) {
                        tL_messages_forwardMessages.flags |= 1;
                        tL_messages_forwardMessages.reply_to_msg_id = message2.reply_to_msg_id;
                    }
                    if (z) {
                        tL_messages_forwardMessages.no_webpage = true;
                    }
                    tL_messages_forwardMessages.entities = arrayList2;
                    tL_messages_forwardMessages.flags |= 8;
                    performSendMessageRequest(tL_messages_forwardMessages, messageObject7, null);
                    if (messageObject8 == null) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j5, false);
                    }
                } else {
                    tLObject = new TL_messages_sendBroadcast();
                    arrayList8 = new ArrayList();
                    for (i7 = 0; i7 < arrayList7.size(); i7++) {
                        arrayList8.add(Long.valueOf(Utilities.random.nextLong()));
                    }
                    tLObject.message = str6;
                    tLObject.contacts = arrayList7;
                    tLObject.media = new TL_inputMediaEmpty();
                    tLObject.random_id = arrayList8;
                    performSendMessageRequest(tLObject, messageObject7, null);
                }
            } catch (Exception e8) {
                e322222222 = e8;
                th = e322222222;
                FileLog.m3e(th);
                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(message2);
                if (messageObject7 != null) {
                    messageObject7.messageOwner.send_state = 2;
                }
                NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
                processSentMessage(message2.id);
            }
        }
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage) {
        performSendDelayedMessage(delayedMessage, -1);
    }

    private void performSendDelayedMessage(DelayedMessage delayedMessage, int i) {
        SendMessagesHelper sendMessagesHelper = this;
        DelayedMessage delayedMessage2 = delayedMessage;
        boolean z = false;
        boolean z2 = true;
        String file;
        if (delayedMessage2.type == 0) {
            if (delayedMessage2.httpLocation != null) {
                putToDelayedMessages(delayedMessage2.httpLocation, delayedMessage2);
                ImageLoader.getInstance().loadHttpFile(delayedMessage2.httpLocation, "file", sendMessagesHelper.currentAccount);
            } else if (delayedMessage2.sendRequest != null) {
                file = FileLoader.getPathToAttach(delayedMessage2.location).toString();
                putToDelayedMessages(file, delayedMessage2);
                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(file, false, true, 16777216);
            } else {
                file = FileLoader.getPathToAttach(delayedMessage2.location).toString();
                if (!(delayedMessage2.sendEncryptedRequest == null || delayedMessage2.location.dc_id == 0)) {
                    File file2 = new File(file);
                    if (!file2.exists()) {
                        file = FileLoader.getPathToAttach(delayedMessage2.location, true).toString();
                        file2 = new File(file);
                    }
                    if (!file2.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage2.location), delayedMessage2);
                        FileLoader.getInstance(sendMessagesHelper.currentAccount).loadFile(delayedMessage2.location, "jpg", 0, 0);
                        return;
                    }
                }
                putToDelayedMessages(file, delayedMessage2);
                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(file, true, true, 16777216);
            }
        } else if (delayedMessage2.type == 1) {
            Document document;
            if (delayedMessage2.videoEditedInfo == null || !delayedMessage2.videoEditedInfo.needConvert()) {
                if (delayedMessage2.videoEditedInfo != null) {
                    if (delayedMessage2.videoEditedInfo.file != null) {
                        if (delayedMessage2.sendRequest instanceof TL_messages_sendMedia) {
                            r2 = ((TL_messages_sendMedia) delayedMessage2.sendRequest).media;
                        } else {
                            r2 = ((TL_messages_sendBroadcast) delayedMessage2.sendRequest).media;
                        }
                        r2.file = delayedMessage2.videoEditedInfo.file;
                        delayedMessage2.videoEditedInfo.file = null;
                    } else if (delayedMessage2.videoEditedInfo.encryptedFile != null) {
                        TL_decryptedMessage tL_decryptedMessage = (TL_decryptedMessage) delayedMessage2.sendEncryptedRequest;
                        tL_decryptedMessage.media.size = (int) delayedMessage2.videoEditedInfo.estimatedSize;
                        tL_decryptedMessage.media.key = delayedMessage2.videoEditedInfo.key;
                        tL_decryptedMessage.media.iv = delayedMessage2.videoEditedInfo.iv;
                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(tL_decryptedMessage, delayedMessage2.obj.messageOwner, delayedMessage2.encryptedChat, delayedMessage2.videoEditedInfo.encryptedFile, delayedMessage2.originalPath, delayedMessage2.obj);
                        delayedMessage2.videoEditedInfo.encryptedFile = null;
                        return;
                    }
                }
                String str;
                if (delayedMessage2.sendRequest != null) {
                    if (delayedMessage2.sendRequest instanceof TL_messages_sendMedia) {
                        r2 = ((TL_messages_sendMedia) delayedMessage2.sendRequest).media;
                    } else {
                        r2 = ((TL_messages_sendBroadcast) delayedMessage2.sendRequest).media;
                    }
                    if (r2.file == null) {
                        file = delayedMessage2.obj.messageOwner.attachPath;
                        document = delayedMessage2.obj.getDocument();
                        if (file == null) {
                            r2 = new StringBuilder();
                            r2.append(FileLoader.getDirectory(4));
                            r2.append("/");
                            r2.append(document.id);
                            r2.append(".mp4");
                            file = r2.toString();
                        }
                        str = file;
                        putToDelayedMessages(str, delayedMessage2);
                        if (delayedMessage2.obj.videoEditedInfo == null || !delayedMessage2.obj.videoEditedInfo.needConvert()) {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str, false, false, ConnectionsManager.FileTypeVideo);
                        } else {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str, false, false, document.size, ConnectionsManager.FileTypeVideo);
                        }
                    } else {
                        r2 = new StringBuilder();
                        r2.append(FileLoader.getDirectory(4));
                        r2.append("/");
                        r2.append(delayedMessage2.location.volume_id);
                        r2.append("_");
                        r2.append(delayedMessage2.location.local_id);
                        r2.append(".jpg");
                        file = r2.toString();
                        putToDelayedMessages(file, delayedMessage2);
                        FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(file, false, true, 16777216);
                    }
                } else {
                    file = delayedMessage2.obj.messageOwner.attachPath;
                    document = delayedMessage2.obj.getDocument();
                    if (file == null) {
                        r2 = new StringBuilder();
                        r2.append(FileLoader.getDirectory(4));
                        r2.append("/");
                        r2.append(document.id);
                        r2.append(".mp4");
                        file = r2.toString();
                    }
                    str = file;
                    if (delayedMessage2.sendEncryptedRequest == null || document.dc_id == 0 || new File(str).exists()) {
                        putToDelayedMessages(str, delayedMessage2);
                        if (delayedMessage2.obj.videoEditedInfo == null || !delayedMessage2.obj.videoEditedInfo.needConvert()) {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str, true, false, ConnectionsManager.FileTypeVideo);
                        } else {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str, true, false, document.size, ConnectionsManager.FileTypeVideo);
                        }
                    } else {
                        putToDelayedMessages(FileLoader.getAttachFileName(document), delayedMessage2);
                        FileLoader.getInstance(sendMessagesHelper.currentAccount).loadFile(document, true, 0);
                        return;
                    }
                }
            }
            file = delayedMessage2.obj.messageOwner.attachPath;
            document = delayedMessage2.obj.getDocument();
            if (file == null) {
                r2 = new StringBuilder();
                r2.append(FileLoader.getDirectory(4));
                r2.append("/");
                r2.append(document.id);
                r2.append(".mp4");
                file = r2.toString();
            }
            putToDelayedMessages(file, delayedMessage2);
            MediaController.getInstance().scheduleVideoConvert(delayedMessage2.obj);
        } else if (delayedMessage2.type == 2) {
            if (delayedMessage2.httpLocation != null) {
                putToDelayedMessages(delayedMessage2.httpLocation, delayedMessage2);
                ImageLoader.getInstance().loadHttpFile(delayedMessage2.httpLocation, "gif", sendMessagesHelper.currentAccount);
            } else if (delayedMessage2.sendRequest != null) {
                if (delayedMessage2.sendRequest instanceof TL_messages_sendMedia) {
                    r2 = ((TL_messages_sendMedia) delayedMessage2.sendRequest).media;
                } else {
                    r2 = ((TL_messages_sendBroadcast) delayedMessage2.sendRequest).media;
                }
                if (r2.file == null) {
                    file = delayedMessage2.obj.messageOwner.attachPath;
                    putToDelayedMessages(file, delayedMessage2);
                    FileLoader instance = FileLoader.getInstance(sendMessagesHelper.currentAccount);
                    if (delayedMessage2.sendRequest != null) {
                        z2 = false;
                    }
                    instance.uploadFile(file, z2, false, ConnectionsManager.FileTypeFile);
                } else if (r2.thumb == null && delayedMessage2.location != null) {
                    r2 = new StringBuilder();
                    r2.append(FileLoader.getDirectory(4));
                    r2.append("/");
                    r2.append(delayedMessage2.location.volume_id);
                    r2.append("_");
                    r2.append(delayedMessage2.location.local_id);
                    r2.append(".jpg");
                    file = r2.toString();
                    putToDelayedMessages(file, delayedMessage2);
                    FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(file, false, true, 16777216);
                }
            } else {
                file = delayedMessage2.obj.messageOwner.attachPath;
                r4 = delayedMessage2.obj.getDocument();
                if (delayedMessage2.sendEncryptedRequest == null || r4.dc_id == 0 || new File(file).exists()) {
                    putToDelayedMessages(file, delayedMessage2);
                    FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(file, true, false, ConnectionsManager.FileTypeFile);
                } else {
                    putToDelayedMessages(FileLoader.getAttachFileName(r4), delayedMessage2);
                    FileLoader.getInstance(sendMessagesHelper.currentAccount).loadFile(r4, true, 0);
                }
            }
        } else if (delayedMessage2.type == 3) {
            file = delayedMessage2.obj.messageOwner.attachPath;
            putToDelayedMessages(file, delayedMessage2);
            FileLoader instance2 = FileLoader.getInstance(sendMessagesHelper.currentAccount);
            if (delayedMessage2.sendRequest == null) {
                z = true;
            }
            instance2.uploadFile(file, z, true, ConnectionsManager.FileTypeAudio);
        } else if (delayedMessage2.type == 4) {
            boolean z3 = i < 0;
            if (delayedMessage2.location == null && delayedMessage2.httpLocation == null && !delayedMessage2.upload) {
                if (i < 0) {
                    if (!delayedMessage2.messageObjects.isEmpty()) {
                        putToSendingMessages(((MessageObject) delayedMessage2.messageObjects.get(delayedMessage2.messageObjects.size() - 1)).messageOwner);
                    }
                    sendReadyToSendGroup(delayedMessage2, z3, true);
                }
            }
            int size = i < 0 ? delayedMessage2.messageObjects.size() - 1 : i;
            MessageObject messageObject = (MessageObject) delayedMessage2.messageObjects.get(size);
            StringBuilder stringBuilder;
            String stringBuilder2;
            if (messageObject.getDocument() != null) {
                if (delayedMessage2.videoEditedInfo != null) {
                    file = messageObject.messageOwner.attachPath;
                    r4 = messageObject.getDocument();
                    if (file == null) {
                        r2 = new StringBuilder();
                        r2.append(FileLoader.getDirectory(4));
                        r2.append("/");
                        r2.append(r4.id);
                        r2.append(".mp4");
                        file = r2.toString();
                    }
                    putToDelayedMessages(file, delayedMessage2);
                    delayedMessage2.extraHashMap.put(messageObject, file);
                    HashMap hashMap = delayedMessage2.extraHashMap;
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(file);
                    stringBuilder.append("_i");
                    hashMap.put(stringBuilder.toString(), messageObject);
                    if (delayedMessage2.location != null) {
                        hashMap = delayedMessage2.extraHashMap;
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(file);
                        stringBuilder.append("_t");
                        hashMap.put(stringBuilder.toString(), delayedMessage2.location);
                    }
                    MediaController.getInstance().scheduleVideoConvert(messageObject);
                } else {
                    Document document2 = messageObject.getDocument();
                    String str2 = messageObject.messageOwner.attachPath;
                    if (str2 == null) {
                        StringBuilder stringBuilder3 = new StringBuilder();
                        stringBuilder3.append(FileLoader.getDirectory(4));
                        stringBuilder3.append("/");
                        stringBuilder3.append(document2.id);
                        stringBuilder3.append(".mp4");
                        str2 = stringBuilder3.toString();
                    }
                    String str3 = str2;
                    HashMap hashMap2;
                    StringBuilder stringBuilder4;
                    if (delayedMessage2.sendRequest != null) {
                        r2 = ((TL_inputSingleMedia) ((TL_messages_sendMultiMedia) delayedMessage2.sendRequest).multi_media.get(size)).media;
                        if (r2.file == null) {
                            putToDelayedMessages(str3, delayedMessage2);
                            delayedMessage2.extraHashMap.put(messageObject, str3);
                            delayedMessage2.extraHashMap.put(str3, r2);
                            hashMap2 = delayedMessage2.extraHashMap;
                            stringBuilder4 = new StringBuilder();
                            stringBuilder4.append(str3);
                            stringBuilder4.append("_i");
                            hashMap2.put(stringBuilder4.toString(), messageObject);
                            if (delayedMessage2.location != null) {
                                hashMap2 = delayedMessage2.extraHashMap;
                                stringBuilder4 = new StringBuilder();
                                stringBuilder4.append(str3);
                                stringBuilder4.append("_t");
                                hashMap2.put(stringBuilder4.toString(), delayedMessage2.location);
                            }
                            if (messageObject.videoEditedInfo == null || !messageObject.videoEditedInfo.needConvert()) {
                                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str3, false, false, ConnectionsManager.FileTypeVideo);
                            } else {
                                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str3, false, false, document2.size, ConnectionsManager.FileTypeVideo);
                            }
                        } else {
                            stringBuilder = new StringBuilder();
                            stringBuilder.append(FileLoader.getDirectory(4));
                            stringBuilder.append("/");
                            stringBuilder.append(delayedMessage2.location.volume_id);
                            stringBuilder.append("_");
                            stringBuilder.append(delayedMessage2.location.local_id);
                            stringBuilder.append(".jpg");
                            stringBuilder2 = stringBuilder.toString();
                            putToDelayedMessages(stringBuilder2, delayedMessage2);
                            HashMap hashMap3 = delayedMessage2.extraHashMap;
                            StringBuilder stringBuilder5 = new StringBuilder();
                            stringBuilder5.append(stringBuilder2);
                            stringBuilder5.append("_o");
                            hashMap3.put(stringBuilder5.toString(), str3);
                            delayedMessage2.extraHashMap.put(messageObject, stringBuilder2);
                            delayedMessage2.extraHashMap.put(stringBuilder2, r2);
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(stringBuilder2, false, true, 16777216);
                        }
                    } else {
                        TL_messages_sendEncryptedMultiMedia tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage2.sendEncryptedRequest;
                        putToDelayedMessages(str3, delayedMessage2);
                        delayedMessage2.extraHashMap.put(messageObject, str3);
                        delayedMessage2.extraHashMap.put(str3, tL_messages_sendEncryptedMultiMedia.files.get(size));
                        hashMap2 = delayedMessage2.extraHashMap;
                        stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(str3);
                        stringBuilder4.append("_i");
                        hashMap2.put(stringBuilder4.toString(), messageObject);
                        if (delayedMessage2.location != null) {
                            hashMap2 = delayedMessage2.extraHashMap;
                            stringBuilder4 = new StringBuilder();
                            stringBuilder4.append(str3);
                            stringBuilder4.append("_t");
                            hashMap2.put(stringBuilder4.toString(), delayedMessage2.location);
                        }
                        if (messageObject.videoEditedInfo == null || !messageObject.videoEditedInfo.needConvert()) {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str3, true, false, ConnectionsManager.FileTypeVideo);
                        } else {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(str3, true, false, document2.size, ConnectionsManager.FileTypeVideo);
                        }
                    }
                }
                delayedMessage2.videoEditedInfo = null;
                delayedMessage2.location = null;
            } else if (delayedMessage2.httpLocation != null) {
                putToDelayedMessages(delayedMessage2.httpLocation, delayedMessage2);
                delayedMessage2.extraHashMap.put(messageObject, delayedMessage2.httpLocation);
                delayedMessage2.extraHashMap.put(delayedMessage2.httpLocation, messageObject);
                ImageLoader.getInstance().loadHttpFile(delayedMessage2.httpLocation, "file", sendMessagesHelper.currentAccount);
                delayedMessage2.httpLocation = null;
            } else {
                Object obj;
                if (delayedMessage2.sendRequest != null) {
                    obj = ((TL_inputSingleMedia) ((TL_messages_sendMultiMedia) delayedMessage2.sendRequest).multi_media.get(size)).media;
                } else {
                    obj = (TLObject) ((TL_messages_sendEncryptedMultiMedia) delayedMessage2.sendEncryptedRequest).files.get(size);
                }
                stringBuilder = new StringBuilder();
                stringBuilder.append(FileLoader.getDirectory(4));
                stringBuilder.append("/");
                stringBuilder.append(delayedMessage2.location.volume_id);
                stringBuilder.append("_");
                stringBuilder.append(delayedMessage2.location.local_id);
                stringBuilder.append(".jpg");
                stringBuilder2 = stringBuilder.toString();
                putToDelayedMessages(stringBuilder2, delayedMessage2);
                delayedMessage2.extraHashMap.put(stringBuilder2, obj);
                delayedMessage2.extraHashMap.put(messageObject, stringBuilder2);
                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(stringBuilder2, delayedMessage2.sendEncryptedRequest != null, true, 16777216);
                delayedMessage2.location = null;
            }
            delayedMessage2.upload = false;
            sendReadyToSendGroup(delayedMessage2, z3, true);
        }
    }

    private void uploadMultiMedia(final DelayedMessage delayedMessage, final InputMedia inputMedia, InputEncryptedFile inputEncryptedFile, String str) {
        int i;
        if (inputMedia != null) {
            TL_messages_sendMultiMedia tL_messages_sendMultiMedia = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
            for (i = 0; i < tL_messages_sendMultiMedia.multi_media.size(); i++) {
                if (((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media == inputMedia) {
                    putToSendingMessages((Message) delayedMessage.messages.get(i));
                    NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.FileUploadProgressChanged, str, Float.valueOf(1.0f), Boolean.valueOf(false));
                    break;
                }
            }
            inputEncryptedFile = new TL_messages_uploadMedia();
            inputEncryptedFile.media = inputMedia;
            inputEncryptedFile.peer = ((TL_messages_sendMultiMedia) delayedMessage.sendRequest).peer;
            ConnectionsManager.getInstance(this.currentAccount).sendRequest(inputEncryptedFile, new RequestDelegate() {
                public void run(final TLObject tLObject, TL_error tL_error) {
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public void run() {
                            InputMedia tL_inputMediaPhoto;
                            TL_messages_sendMultiMedia tL_messages_sendMultiMedia;
                            int i;
                            if (tLObject != null) {
                                MessageMedia messageMedia = (MessageMedia) tLObject;
                                if ((inputMedia instanceof TL_inputMediaUploadedPhoto) && (messageMedia instanceof TL_messageMediaPhoto)) {
                                    tL_inputMediaPhoto = new TL_inputMediaPhoto();
                                    tL_inputMediaPhoto.id = new TL_inputPhoto();
                                    tL_inputMediaPhoto.id.id = messageMedia.photo.id;
                                    tL_inputMediaPhoto.id.access_hash = messageMedia.photo.access_hash;
                                    if (tL_inputMediaPhoto != null) {
                                        delayedMessage.markAsError();
                                    }
                                    if (inputMedia.ttl_seconds != 0) {
                                        tL_inputMediaPhoto.ttl_seconds = inputMedia.ttl_seconds;
                                        tL_inputMediaPhoto.flags |= 1;
                                    }
                                    tL_messages_sendMultiMedia = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                                    for (i = 0; i < tL_messages_sendMultiMedia.multi_media.size(); i++) {
                                        if (((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media != inputMedia) {
                                            ((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media = tL_inputMediaPhoto;
                                            break;
                                        }
                                    }
                                    SendMessagesHelper.this.sendReadyToSendGroup(delayedMessage, false, true);
                                    return;
                                } else if ((inputMedia instanceof TL_inputMediaUploadedDocument) && (messageMedia instanceof TL_messageMediaDocument)) {
                                    tL_inputMediaPhoto = new TL_inputMediaDocument();
                                    tL_inputMediaPhoto.id = new TL_inputDocument();
                                    tL_inputMediaPhoto.id.id = messageMedia.document.id;
                                    tL_inputMediaPhoto.id.access_hash = messageMedia.document.access_hash;
                                    if (tL_inputMediaPhoto != null) {
                                        if (inputMedia.ttl_seconds != 0) {
                                            tL_inputMediaPhoto.ttl_seconds = inputMedia.ttl_seconds;
                                            tL_inputMediaPhoto.flags |= 1;
                                        }
                                        tL_messages_sendMultiMedia = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                                        for (i = 0; i < tL_messages_sendMultiMedia.multi_media.size(); i++) {
                                            if (((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media != inputMedia) {
                                                ((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media = tL_inputMediaPhoto;
                                                break;
                                            }
                                        }
                                        SendMessagesHelper.this.sendReadyToSendGroup(delayedMessage, false, true);
                                        return;
                                    }
                                    delayedMessage.markAsError();
                                }
                            }
                            tL_inputMediaPhoto = null;
                            if (tL_inputMediaPhoto != null) {
                                if (inputMedia.ttl_seconds != 0) {
                                    tL_inputMediaPhoto.ttl_seconds = inputMedia.ttl_seconds;
                                    tL_inputMediaPhoto.flags |= 1;
                                }
                                tL_messages_sendMultiMedia = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                                for (i = 0; i < tL_messages_sendMultiMedia.multi_media.size(); i++) {
                                    if (((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media != inputMedia) {
                                        ((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media = tL_inputMediaPhoto;
                                        break;
                                    }
                                }
                                SendMessagesHelper.this.sendReadyToSendGroup(delayedMessage, false, true);
                                return;
                            }
                            delayedMessage.markAsError();
                        }
                    });
                }
            });
        } else if (inputEncryptedFile != null) {
            TL_messages_sendEncryptedMultiMedia tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
            for (i = 0; i < tL_messages_sendEncryptedMultiMedia.files.size(); i++) {
                if (tL_messages_sendEncryptedMultiMedia.files.get(i) == inputEncryptedFile) {
                    putToSendingMessages((Message) delayedMessage.messages.get(i));
                    NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.FileUploadProgressChanged, str, Float.valueOf(1.0f), Boolean.valueOf(false));
                    break;
                }
            }
            sendReadyToSendGroup(delayedMessage, false, true);
        }
    }

    private void sendReadyToSendGroup(DelayedMessage delayedMessage, boolean z, boolean z2) {
        if (delayedMessage.messageObjects.isEmpty()) {
            delayedMessage.markAsError();
            return;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("group_");
        stringBuilder.append(delayedMessage.groupId);
        String stringBuilder2 = stringBuilder.toString();
        if (delayedMessage.finalGroupMessage != ((MessageObject) delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1)).getId()) {
            if (z) {
                putToDelayedMessages(stringBuilder2, delayedMessage);
            }
            return;
        }
        boolean z3 = false;
        if (z) {
            this.delayedMessages.remove(stringBuilder2);
            MessagesStorage.getInstance(this.currentAccount).putMessages(delayedMessage.messages, false, true, false, 0);
            MessagesController.getInstance(this.currentAccount).updateInterfaceWithMessages(delayedMessage.peer, delayedMessage.messageObjects);
            NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
        }
        if (delayedMessage.sendRequest instanceof TL_messages_sendMultiMedia) {
            TL_messages_sendMultiMedia tL_messages_sendMultiMedia = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
            int i;
            while (i < tL_messages_sendMultiMedia.multi_media.size()) {
                InputMedia inputMedia = ((TL_inputSingleMedia) tL_messages_sendMultiMedia.multi_media.get(i)).media;
                if (!(inputMedia instanceof TL_inputMediaUploadedPhoto)) {
                    if (!(inputMedia instanceof TL_inputMediaUploadedDocument)) {
                        i++;
                    }
                }
                return;
            }
            if (z2) {
                z = findMaxDelayedMessageForMessageId(delayedMessage.finalGroupMessage, delayedMessage.peer);
                if (z) {
                    z.addDelayedRequest(delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths);
                    if (delayedMessage.requests) {
                        z.requests.addAll(delayedMessage.requests);
                    }
                    return;
                }
            }
        }
        TL_messages_sendEncryptedMultiMedia tL_messages_sendEncryptedMultiMedia = (TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest;
        while (z3 < tL_messages_sendEncryptedMultiMedia.files.size()) {
            if (!(((InputEncryptedFile) tL_messages_sendEncryptedMultiMedia.files.get(z3)) instanceof TL_inputEncryptedFile)) {
                z3++;
            } else {
                return;
            }
        }
        if (delayedMessage.sendRequest instanceof TL_messages_sendMultiMedia) {
            performSendMessageRequestMulti((TL_messages_sendMultiMedia) delayedMessage.sendRequest, delayedMessage.messageObjects, delayedMessage.originalPaths);
        } else {
            SecretChatHelper.getInstance(this.currentAccount).performSendEncryptedRequest((TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest, delayedMessage);
        }
        delayedMessage.sendDelayedRequests();
    }

    protected void stopVideoService(final String str) {
        MessagesStorage.getInstance(this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

            /* renamed from: org.telegram.messenger.SendMessagesHelper$11$1 */
            class C04701 implements Runnable {
                C04701() {
                }

                public void run() {
                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, str, Integer.valueOf(SendMessagesHelper.this.currentAccount));
                }
            }

            public void run() {
                AndroidUtilities.runOnUIThread(new C04701());
            }
        });
    }

    protected void putToSendingMessages(Message message) {
        this.sendingMessages.put(message.id, message);
    }

    protected void removeFromSendingMessages(int i) {
        this.sendingMessages.remove(i);
    }

    public boolean isSendingMessage(int i) {
        return this.sendingMessages.indexOfKey(i) >= 0;
    }

    private void performSendMessageRequestMulti(final TL_messages_sendMultiMedia tL_messages_sendMultiMedia, final ArrayList<MessageObject> arrayList, final ArrayList<String> arrayList2) {
        for (int i = 0; i < arrayList.size(); i++) {
            putToSendingMessages(((MessageObject) arrayList.get(i)).messageOwner);
        }
        ConnectionsManager.getInstance(this.currentAccount).sendRequest((TLObject) tL_messages_sendMultiMedia, new RequestDelegate() {
            public void run(final TLObject tLObject, final TL_error tL_error) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public void run() {
                        boolean z;
                        if (tL_error == null) {
                            SparseArray sparseArray = new SparseArray();
                            LongSparseArray longSparseArray = new LongSparseArray();
                            final Updates updates = (Updates) tLObject;
                            ArrayList arrayList = ((Updates) tLObject).updates;
                            int i = 0;
                            while (i < arrayList.size()) {
                                Update update = (Update) arrayList.get(i);
                                if (update instanceof TL_updateMessageID) {
                                    TL_updateMessageID tL_updateMessageID = (TL_updateMessageID) update;
                                    longSparseArray.put(tL_updateMessageID.random_id, Integer.valueOf(tL_updateMessageID.id));
                                    arrayList.remove(i);
                                    i--;
                                } else if (update instanceof TL_updateNewMessage) {
                                    final TL_updateNewMessage tL_updateNewMessage = (TL_updateNewMessage) update;
                                    sparseArray.put(tL_updateNewMessage.message.id, tL_updateNewMessage.message);
                                    Utilities.stageQueue.postRunnable(new Runnable() {
                                        public void run() {
                                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, tL_updateNewMessage.pts, -1, tL_updateNewMessage.pts_count);
                                        }
                                    });
                                    arrayList.remove(i);
                                    i--;
                                } else if (update instanceof TL_updateNewChannelMessage) {
                                    final TL_updateNewChannelMessage tL_updateNewChannelMessage = (TL_updateNewChannelMessage) update;
                                    sparseArray.put(tL_updateNewChannelMessage.message.id, tL_updateNewChannelMessage.message);
                                    Utilities.stageQueue.postRunnable(new Runnable() {
                                        public void run() {
                                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewChannelDifferenceParams(tL_updateNewChannelMessage.pts, tL_updateNewChannelMessage.pts_count, tL_updateNewChannelMessage.message.to_id.channel_id);
                                        }
                                    });
                                    arrayList.remove(i);
                                    i--;
                                }
                                i++;
                            }
                            int i2 = 0;
                            while (i2 < arrayList.size()) {
                                MessageObject messageObject = (MessageObject) arrayList.get(i2);
                                String str = (String) arrayList2.get(i2);
                                final Message message = messageObject.messageOwner;
                                final int i3 = message.id;
                                final ArrayList arrayList2 = new ArrayList();
                                String str2 = message.attachPath;
                                Integer num = (Integer) longSparseArray.get(message.random_id);
                                if (num != null) {
                                    Message message2 = (Message) sparseArray.get(num.intValue());
                                    if (message2 != null) {
                                        arrayList2.add(message2);
                                        message.id = message2.id;
                                        if ((message.flags & Integer.MIN_VALUE) != 0) {
                                            message2.flags |= Integer.MIN_VALUE;
                                        }
                                        LongSparseArray longSparseArray2 = longSparseArray;
                                        Integer num2 = (Integer) MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.get(Long.valueOf(message2.dialog_id));
                                        if (num2 == null) {
                                            num2 = Integer.valueOf(MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getDialogReadMax(message2.out, message2.dialog_id));
                                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.put(Long.valueOf(message2.dialog_id), num2);
                                        }
                                        message2.unread = num2.intValue() < message2.id;
                                        SendMessagesHelper.this.updateMediaPaths(messageObject, message2, str, false);
                                        StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, 1);
                                        message.send_state = 0;
                                        NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i3), Integer.valueOf(message.id), message, Long.valueOf(message.dialog_id));
                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

                                            /* renamed from: org.telegram.messenger.SendMessagesHelper$12$1$3$1 */
                                            class C04731 implements Runnable {
                                                C04731() {
                                                }

                                                public void run() {
                                                    DataQuery.getInstance(SendMessagesHelper.this.currentAccount).increasePeerRaiting(message.dialog_id);
                                                    NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i3), Integer.valueOf(message.id), message, Long.valueOf(message.dialog_id));
                                                    SendMessagesHelper.this.processSentMessage(i3);
                                                    SendMessagesHelper.this.removeFromSendingMessages(i3);
                                                }
                                            }

                                            public void run() {
                                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).updateMessageStateAndId(message.random_id, Integer.valueOf(i3), message.id, 0, false, message.to_id.channel_id);
                                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList2, true, false, false, 0);
                                                AndroidUtilities.runOnUIThread(new C04731());
                                            }
                                        });
                                        i2++;
                                        longSparseArray = longSparseArray2;
                                    }
                                }
                                z = true;
                            }
                            z = false;
                            Utilities.stageQueue.postRunnable(new Runnable() {
                                public void run() {
                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates(updates, false);
                                }
                            });
                        } else {
                            AlertsCreator.processError(SendMessagesHelper.this.currentAccount, tL_error, null, tL_messages_sendMultiMedia, new Object[0]);
                            z = true;
                        }
                        if (z) {
                            for (int i4 = 0; i4 < arrayList.size(); i4++) {
                                Message message3 = ((MessageObject) arrayList.get(i4)).messageOwner;
                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(message3);
                                message3.send_state = 2;
                                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message3.id));
                                SendMessagesHelper.this.processSentMessage(message3.id);
                                SendMessagesHelper.this.removeFromSendingMessages(message3.id);
                            }
                        }
                    }
                });
            }
        }, (QuickAckDelegate) null, 68);
    }

    private void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str) {
        performSendMessageRequest(tLObject, messageObject, str, null, false);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int i, long j) {
        DelayedMessage delayedMessage = null;
        int i2 = Integer.MIN_VALUE;
        for (Entry value : this.delayedMessages.entrySet()) {
            ArrayList arrayList = (ArrayList) value.getValue();
            int size = arrayList.size();
            int i3 = i2;
            DelayedMessage delayedMessage2 = delayedMessage;
            for (int i4 = 0; i4 < size; i4++) {
                DelayedMessage delayedMessage3 = (DelayedMessage) arrayList.get(i4);
                if ((delayedMessage3.type == 4 || delayedMessage3.type == 0) && delayedMessage3.peer == j) {
                    int id = delayedMessage3.obj != null ? delayedMessage3.obj.getId() : (delayedMessage3.messageObjects == null || delayedMessage3.messageObjects.isEmpty()) ? 0 : ((MessageObject) delayedMessage3.messageObjects.get(delayedMessage3.messageObjects.size() - 1)).getId();
                    if (id != 0 && id > i && delayedMessage2 == null && i3 < id) {
                        delayedMessage2 = delayedMessage3;
                        i3 = id;
                    }
                }
            }
            delayedMessage = delayedMessage2;
            i2 = i3;
        }
        return delayedMessage;
    }

    private void performSendMessageRequest(TLObject tLObject, MessageObject messageObject, String str, DelayedMessage delayedMessage, boolean z) {
        if (z) {
            z = findMaxDelayedMessageForMessageId(messageObject.getId(), messageObject.getDialogId());
            if (z) {
                z.addDelayedRequest(tLObject, messageObject, str);
                if (!(delayedMessage == null || delayedMessage.requests == null)) {
                    z.requests.addAll(delayedMessage.requests);
                }
                return;
            }
        }
        z = messageObject.messageOwner;
        putToSendingMessages(z);
        final Message message = z;
        final TLObject tLObject2 = tLObject;
        final MessageObject messageObject2 = messageObject;
        final String str2 = str;
        ConnectionsManager.getInstance(this.currentAccount).sendRequest(tLObject, new RequestDelegate() {
            public void run(final TLObject tLObject, final TL_error tL_error) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public void run() {
                        boolean z;
                        Message message = null;
                        if (tL_error == null) {
                            NotificationCenter instance;
                            int i;
                            Object[] objArr;
                            final int i2 = message.id;
                            final boolean z2 = tLObject2 instanceof TL_messages_sendBroadcast;
                            final ArrayList arrayList = new ArrayList();
                            final String str = message.attachPath;
                            int i3;
                            if (tLObject instanceof TL_updateShortSentMessage) {
                                final TL_updateShortSentMessage tL_updateShortSentMessage = (TL_updateShortSentMessage) tLObject;
                                message = message;
                                Message message2 = message;
                                i3 = tL_updateShortSentMessage.id;
                                message2.id = i3;
                                message.local_id = i3;
                                message.date = tL_updateShortSentMessage.date;
                                message.entities = tL_updateShortSentMessage.entities;
                                message.out = tL_updateShortSentMessage.out;
                                if (tL_updateShortSentMessage.media != null) {
                                    message.media = tL_updateShortSentMessage.media;
                                    message = message;
                                    message.flags |= 512;
                                    ImageLoader.saveMessageThumbs(message);
                                }
                                if ((tL_updateShortSentMessage.media instanceof TL_messageMediaGame) && !TextUtils.isEmpty(tL_updateShortSentMessage.message)) {
                                    message.message = tL_updateShortSentMessage.message;
                                }
                                if (!message.entities.isEmpty()) {
                                    message = message;
                                    message.flags |= 128;
                                }
                                Utilities.stageQueue.postRunnable(new Runnable() {
                                    public void run() {
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, tL_updateShortSentMessage.pts, tL_updateShortSentMessage.date, tL_updateShortSentMessage.pts_count);
                                    }
                                });
                                arrayList.add(message);
                            } else if (tLObject instanceof Updates) {
                                boolean z3;
                                final Updates updates = (Updates) tLObject;
                                ArrayList arrayList2 = ((Updates) tLObject).updates;
                                i3 = 0;
                                while (i3 < arrayList2.size()) {
                                    Update update = (Update) arrayList2.get(i3);
                                    if (update instanceof TL_updateNewMessage) {
                                        final TL_updateNewMessage tL_updateNewMessage = (TL_updateNewMessage) update;
                                        message = tL_updateNewMessage.message;
                                        arrayList.add(message);
                                        Utilities.stageQueue.postRunnable(new Runnable() {
                                            public void run() {
                                                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, tL_updateNewMessage.pts, -1, tL_updateNewMessage.pts_count);
                                            }
                                        });
                                        arrayList2.remove(i3);
                                        break;
                                    } else if (update instanceof TL_updateNewChannelMessage) {
                                        final TL_updateNewChannelMessage tL_updateNewChannelMessage = (TL_updateNewChannelMessage) update;
                                        message = tL_updateNewChannelMessage.message;
                                        arrayList.add(message);
                                        if ((message.flags & Integer.MIN_VALUE) != 0) {
                                            Message message3 = tL_updateNewChannelMessage.message;
                                            message3.flags = Integer.MIN_VALUE | message3.flags;
                                        }
                                        Utilities.stageQueue.postRunnable(new Runnable() {
                                            public void run() {
                                                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewChannelDifferenceParams(tL_updateNewChannelMessage.pts, tL_updateNewChannelMessage.pts_count, tL_updateNewChannelMessage.message.to_id.channel_id);
                                            }
                                        });
                                        arrayList2.remove(i3);
                                    } else {
                                        i3++;
                                    }
                                }
                                if (message != null) {
                                    ImageLoader.saveMessageThumbs(message);
                                    Integer num = (Integer) MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.get(Long.valueOf(message.dialog_id));
                                    if (num == null) {
                                        num = Integer.valueOf(MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getDialogReadMax(message.out, message.dialog_id));
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.put(Long.valueOf(message.dialog_id), num);
                                    }
                                    message.unread = num.intValue() < message.id;
                                    message.id = message.id;
                                    SendMessagesHelper.this.updateMediaPaths(messageObject2, message, str2, false);
                                    z3 = false;
                                } else {
                                    z3 = true;
                                }
                                Utilities.stageQueue.postRunnable(new Runnable() {
                                    public void run() {
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates(updates, false);
                                    }
                                });
                                z = z3;
                                if (MessageObject.isLiveLocationMessage(message)) {
                                    LocationController.getInstance(SendMessagesHelper.this.currentAccount).addSharingLocation(message.dialog_id, message.id, message.media.period, message);
                                }
                                if (!z) {
                                    StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, 1);
                                    message.send_state = 0;
                                    instance = NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount);
                                    i = NotificationCenter.messageReceivedByServer;
                                    objArr = new Object[4];
                                    objArr[0] = Integer.valueOf(i2);
                                    objArr[1] = Integer.valueOf(z2 ? i2 : message.id);
                                    objArr[2] = message;
                                    objArr[3] = Long.valueOf(message.dialog_id);
                                    instance.postNotificationName(i, objArr);
                                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

                                        /* renamed from: org.telegram.messenger.SendMessagesHelper$13$1$5$1 */
                                        class C04811 implements Runnable {
                                            C04811() {
                                            }

                                            public void run() {
                                                if (z2) {
                                                    for (int i = 0; i < arrayList.size(); i++) {
                                                        Message message = (Message) arrayList.get(i);
                                                        ArrayList arrayList = new ArrayList();
                                                        MessageObject messageObject = new MessageObject(SendMessagesHelper.this.currentAccount, message, false);
                                                        arrayList.add(messageObject);
                                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).updateInterfaceWithMessages(messageObject.getDialogId(), arrayList, true);
                                                    }
                                                    NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                                }
                                                DataQuery.getInstance(SendMessagesHelper.this.currentAccount).increasePeerRaiting(message.dialog_id);
                                                NotificationCenter instance = NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount);
                                                int i2 = NotificationCenter.messageReceivedByServer;
                                                Object[] objArr = new Object[4];
                                                objArr[0] = Integer.valueOf(i2);
                                                objArr[1] = Integer.valueOf(z2 ? i2 : message.id);
                                                objArr[2] = message;
                                                objArr[3] = Long.valueOf(message.dialog_id);
                                                instance.postNotificationName(i2, objArr);
                                                SendMessagesHelper.this.processSentMessage(i2);
                                                SendMessagesHelper.this.removeFromSendingMessages(i2);
                                            }
                                        }

                                        public void run() {
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).updateMessageStateAndId(message.random_id, Integer.valueOf(i2), z2 ? i2 : message.id, 0, false, message.to_id.channel_id);
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, true, false, z2, 0);
                                            if (z2) {
                                                ArrayList arrayList = new ArrayList();
                                                arrayList.add(message);
                                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, true, false, false, 0);
                                            }
                                            AndroidUtilities.runOnUIThread(new C04811());
                                            if (MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message) || MessageObject.isNewGifMessage(message)) {
                                                SendMessagesHelper.this.stopVideoService(str);
                                            }
                                        }
                                    });
                                }
                            }
                            z = false;
                            if (MessageObject.isLiveLocationMessage(message)) {
                                LocationController.getInstance(SendMessagesHelper.this.currentAccount).addSharingLocation(message.dialog_id, message.id, message.media.period, message);
                            }
                            if (z) {
                                StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, 1);
                                message.send_state = 0;
                                instance = NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount);
                                i = NotificationCenter.messageReceivedByServer;
                                objArr = new Object[4];
                                objArr[0] = Integer.valueOf(i2);
                                if (z2) {
                                }
                                objArr[1] = Integer.valueOf(z2 ? i2 : message.id);
                                objArr[2] = message;
                                objArr[3] = Long.valueOf(message.dialog_id);
                                instance.postNotificationName(i, objArr);
                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue().postRunnable(/* anonymous class already generated */);
                            }
                        } else {
                            AlertsCreator.processError(SendMessagesHelper.this.currentAccount, tL_error, null, tLObject2, new Object[0]);
                            z = true;
                        }
                        if (z) {
                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(message);
                            message.send_state = 2;
                            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message.id));
                            SendMessagesHelper.this.processSentMessage(message.id);
                            if (MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message) || MessageObject.isNewGifMessage(message)) {
                                SendMessagesHelper.this.stopVideoService(message.attachPath);
                            }
                            SendMessagesHelper.this.removeFromSendingMessages(message.id);
                        }
                    }
                });
            }
        }, new QuickAckDelegate() {
            public void run() {
                final int i = z.id;
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public void run() {
                        z.send_state = 0;
                        NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByAck, Integer.valueOf(i));
                    }
                });
            }
        }, 68 | (tLObject instanceof TL_messages_sendMessage ? true : false));
        if (delayedMessage != null) {
            delayedMessage.sendDelayedRequests();
        }
    }

    private void updateMediaPaths(MessageObject messageObject, Message message, String str, boolean z) {
        SendMessagesHelper sendMessagesHelper = this;
        MessageObject messageObject2 = messageObject;
        Message message2 = message;
        String str2 = str;
        boolean z2 = z;
        Message message3 = messageObject2.messageOwner;
        if (message2 != null) {
            long j = -2147483648L;
            int i = 0;
            int i2;
            StringBuilder stringBuilder;
            File file;
            if ((message2.media instanceof TL_messageMediaPhoto) && message2.media.photo != null && (message3.media instanceof TL_messageMediaPhoto) && message3.media.photo != null) {
                if (message2.media.ttl_seconds == 0) {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putSentFile(str2, message2.media.photo, 0);
                }
                if (message3.media.photo.sizes.size() == 1 && (((PhotoSize) message3.media.photo.sizes.get(0)).location instanceof TL_fileLocationUnavailable)) {
                    message3.media.photo.sizes = message2.media.photo.sizes;
                } else {
                    int i3 = 0;
                    while (i3 < message2.media.photo.sizes.size()) {
                        PhotoSize photoSize = (PhotoSize) message2.media.photo.sizes.get(i3);
                        if (!(photoSize == null || photoSize.location == null || (photoSize instanceof TL_photoSizeEmpty))) {
                            if (photoSize.type != null) {
                                i2 = i;
                                while (i2 < message3.media.photo.sizes.size()) {
                                    PhotoSize photoSize2 = (PhotoSize) message3.media.photo.sizes.get(i2);
                                    if (!(photoSize2 == null || photoSize2.location == null)) {
                                        if (photoSize2.type != null) {
                                            if ((photoSize2.location.volume_id == j && photoSize.type.equals(photoSize2.type)) || (photoSize.f43w == photoSize2.f43w && photoSize.f42h == photoSize2.f42h)) {
                                                StringBuilder stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(photoSize2.location.volume_id);
                                                stringBuilder2.append("_");
                                                stringBuilder2.append(photoSize2.location.local_id);
                                                String stringBuilder3 = stringBuilder2.toString();
                                                StringBuilder stringBuilder4 = new StringBuilder();
                                                stringBuilder4.append(photoSize.location.volume_id);
                                                stringBuilder4.append("_");
                                                stringBuilder4.append(photoSize.location.local_id);
                                                String stringBuilder5 = stringBuilder4.toString();
                                                if (!stringBuilder3.equals(stringBuilder5)) {
                                                    File file2;
                                                    File directory = FileLoader.getDirectory(4);
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(stringBuilder3);
                                                    stringBuilder.append(".jpg");
                                                    file = new File(directory, stringBuilder.toString());
                                                    if (message2.media.ttl_seconds != 0 || (message2.media.photo.sizes.size() != 1 && photoSize.f43w <= 90 && photoSize.f42h <= 90)) {
                                                        File directory2 = FileLoader.getDirectory(4);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(stringBuilder5);
                                                        stringBuilder.append(".jpg");
                                                        file2 = new File(directory2, stringBuilder.toString());
                                                    } else {
                                                        file2 = FileLoader.getPathToAttach(photoSize);
                                                    }
                                                    file.renameTo(file2);
                                                    ImageLoader.getInstance().replaceImageInCache(stringBuilder3, stringBuilder5, photoSize.location, z2);
                                                    photoSize2.location = photoSize.location;
                                                    photoSize2.size = photoSize.size;
                                                }
                                            }
                                        }
                                    }
                                    i2++;
                                    j = -2147483648L;
                                }
                            }
                        }
                        i3++;
                        j = -2147483648L;
                        i = 0;
                    }
                }
                message2.message = message3.message;
                message2.attachPath = message3.attachPath;
                message3.media.photo.id = message2.media.photo.id;
                message3.media.photo.access_hash = message2.media.photo.access_hash;
            } else if ((message2.media instanceof TL_messageMediaDocument) && message2.media.document != null && (message3.media instanceof TL_messageMediaDocument) && message3.media.document != null) {
                DocumentAttribute documentAttribute;
                if (MessageObject.isVideoMessage(message)) {
                    if (message2.media.ttl_seconds == 0) {
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putSentFile(str2, message2.media.document, 2);
                    }
                    message2.attachPath = message3.attachPath;
                } else if (!(MessageObject.isVoiceMessage(message) || MessageObject.isRoundVideoMessage(message) || message2.media.ttl_seconds != 0)) {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putSentFile(str2, message2.media.document, 1);
                }
                PhotoSize photoSize3 = message3.media.document.thumb;
                PhotoSize photoSize4 = message2.media.document.thumb;
                if (photoSize3 != null && photoSize3.location != null && photoSize3.location.volume_id == -2147483648L && photoSize4 != null && photoSize4.location != null && !(photoSize4 instanceof TL_photoSizeEmpty) && !(photoSize3 instanceof TL_photoSizeEmpty)) {
                    StringBuilder stringBuilder6 = new StringBuilder();
                    stringBuilder6.append(photoSize3.location.volume_id);
                    stringBuilder6.append("_");
                    stringBuilder6.append(photoSize3.location.local_id);
                    String stringBuilder7 = stringBuilder6.toString();
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(photoSize4.location.volume_id);
                    stringBuilder.append("_");
                    stringBuilder.append(photoSize4.location.local_id);
                    String stringBuilder8 = stringBuilder.toString();
                    if (!stringBuilder7.equals(stringBuilder8)) {
                        File directory3 = FileLoader.getDirectory(4);
                        StringBuilder stringBuilder9 = new StringBuilder();
                        stringBuilder9.append(stringBuilder7);
                        stringBuilder9.append(".jpg");
                        File file3 = new File(directory3, stringBuilder9.toString());
                        file = FileLoader.getDirectory(4);
                        StringBuilder stringBuilder10 = new StringBuilder();
                        stringBuilder10.append(stringBuilder8);
                        stringBuilder10.append(".jpg");
                        file3.renameTo(new File(file, stringBuilder10.toString()));
                        ImageLoader.getInstance().replaceImageInCache(stringBuilder7, stringBuilder8, photoSize4.location, z2);
                        photoSize3.location = photoSize4.location;
                        photoSize3.size = photoSize4.size;
                    }
                } else if (photoSize3 != null && MessageObject.isStickerMessage(message) && photoSize3.location != null) {
                    photoSize4.location = photoSize3.location;
                } else if ((photoSize3 != null && (photoSize3.location instanceof TL_fileLocationUnavailable)) || (photoSize3 instanceof TL_photoSizeEmpty)) {
                    message3.media.document.thumb = message2.media.document.thumb;
                }
                message3.media.document.dc_id = message2.media.document.dc_id;
                message3.media.document.id = message2.media.document.id;
                message3.media.document.access_hash = message2.media.document.access_hash;
                byte[] bArr = null;
                for (i2 = 0; i2 < message3.media.document.attributes.size(); i2++) {
                    documentAttribute = (DocumentAttribute) message3.media.document.attributes.get(i2);
                    if (documentAttribute instanceof TL_documentAttributeAudio) {
                        bArr = documentAttribute.waveform;
                        break;
                    }
                }
                message3.media.document.attributes = message2.media.document.attributes;
                if (bArr != null) {
                    for (i2 = 0; i2 < message3.media.document.attributes.size(); i2++) {
                        documentAttribute = (DocumentAttribute) message3.media.document.attributes.get(i2);
                        if (documentAttribute instanceof TL_documentAttributeAudio) {
                            documentAttribute.waveform = bArr;
                            documentAttribute.flags |= 4;
                        }
                    }
                }
                message3.media.document.size = message2.media.document.size;
                message3.media.document.mime_type = message2.media.document.mime_type;
                if ((message2.flags & 4) == 0 && MessageObject.isOut(message)) {
                    if (MessageObject.isNewGifDocument(message2.media.document)) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).addRecentGif(message2.media.document, message2.date);
                    } else if (MessageObject.isStickerDocument(message2.media.document)) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).addRecentSticker(0, message2.media.document, message2.date, false);
                    }
                }
                if (message3.attachPath == null || !message3.attachPath.startsWith(FileLoader.getDirectory(4).getAbsolutePath())) {
                    message2.attachPath = message3.attachPath;
                    message2.message = message3.message;
                } else {
                    File file4 = new File(message3.attachPath);
                    File pathToAttach = FileLoader.getPathToAttach(message2.media.document, message2.media.ttl_seconds != 0);
                    if (!file4.renameTo(pathToAttach)) {
                        message2.attachPath = message3.attachPath;
                        message2.message = message3.message;
                    } else if (MessageObject.isVideoMessage(message)) {
                        messageObject2.attachPathExists = true;
                    } else {
                        messageObject2.mediaExists = messageObject2.attachPathExists;
                        messageObject2.attachPathExists = false;
                        message3.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                        if (str2 != null && str2.startsWith("http")) {
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).addRecentLocalFile(str2, pathToAttach.toString(), message3.media.document);
                        }
                    }
                }
            } else if ((message2.media instanceof TL_messageMediaContact) && (message3.media instanceof TL_messageMediaContact)) {
                message3.media = message2.media;
            } else if (message2.media instanceof TL_messageMediaWebPage) {
                message3.media = message2.media;
            } else if (message2.media instanceof TL_messageMediaGame) {
                message3.media = message2.media;
                if ((message3.media instanceof TL_messageMediaGame) && !TextUtils.isEmpty(message2.message)) {
                    message3.entities = message2.entities;
                    message3.message = message2.message;
                }
            }
        }
    }

    private void putToDelayedMessages(String str, DelayedMessage delayedMessage) {
        ArrayList arrayList = (ArrayList) this.delayedMessages.get(str);
        if (arrayList == null) {
            arrayList = new ArrayList();
            this.delayedMessages.put(str, arrayList);
        }
        arrayList.add(delayedMessage);
    }

    protected ArrayList<DelayedMessage> getDelayedMessages(String str) {
        return (ArrayList) this.delayedMessages.get(str);
    }

    protected long getNextRandomId() {
        long j = 0;
        while (j == 0) {
            j = Utilities.random.nextLong();
        }
        return j;
    }

    public void checkUnsentMessages() {
        MessagesStorage.getInstance(this.currentAccount).getUnsentMessages(1000);
    }

    protected void processUnsentMessages(ArrayList<Message> arrayList, ArrayList<User> arrayList2, ArrayList<Chat> arrayList3, ArrayList<EncryptedChat> arrayList4) {
        final ArrayList<User> arrayList5 = arrayList2;
        final ArrayList<Chat> arrayList6 = arrayList3;
        final ArrayList<EncryptedChat> arrayList7 = arrayList4;
        final ArrayList<Message> arrayList8 = arrayList;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public void run() {
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putUsers(arrayList5, true);
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putChats(arrayList6, true);
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putEncryptedChats(arrayList7, true);
                for (int i = 0; i < arrayList8.size(); i++) {
                    SendMessagesHelper.this.retrySendMessage(new MessageObject(SendMessagesHelper.this.currentAccount, (Message) arrayList8.get(i), false), true);
                }
            }
        });
    }

    public TL_photo generatePhotoSizes(String str, Uri uri) {
        Bitmap loadBitmap = ImageLoader.loadBitmap(str, uri, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true);
        if (loadBitmap == null && AndroidUtilities.getPhotoSize() != 800) {
            loadBitmap = ImageLoader.loadBitmap(str, uri, 800.0f, 800.0f, true);
        }
        str = new ArrayList();
        uri = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, true);
        if (uri != null) {
            str.add(uri);
        }
        uri = ImageLoader.scaleAndSaveImage(loadBitmap, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), 80, false, 101, 101);
        if (uri != null) {
            str.add(uri);
        }
        if (loadBitmap != null) {
            loadBitmap.recycle();
        }
        if (str.isEmpty() != null) {
            return null;
        }
        UserConfig.getInstance(this.currentAccount).saveConfig(false);
        uri = new TL_photo();
        uri.date = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
        uri.sizes = str;
        return uri;
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static boolean prepareSendingDocumentInternal(int i, String str, String str2, Uri uri, String str3, long j, MessageObject messageObject, CharSequence charSequence, ArrayList<MessageEntity> arrayList) {
        Throwable e;
        MediaMetadataRetriever mediaMetadataRetriever;
        String str4 = str;
        String str5 = str2;
        Uri uri2 = uri;
        String str6 = str3;
        if ((str4 == null || str.length() == 0) && uri2 == null) {
            return false;
        }
        if (uri2 != null && AndroidUtilities.isInternalUri(uri)) {
            return false;
        }
        if (str4 != null && AndroidUtilities.isInternalUri(Uri.fromFile(new File(str4)))) {
            return false;
        }
        boolean z;
        String str7;
        File file;
        int i2;
        String name;
        String str8;
        int lastIndexOf;
        String toLowerCase;
        int i3;
        int i4;
        Object obj;
        String str9;
        String str10;
        Object tL_documentAttributeAudio;
        String str11;
        Object obj2;
        TL_document tL_document;
        int i5;
        TL_documentAttributeFilename tL_documentAttributeFilename;
        Object obj3;
        Bitmap loadBitmap;
        Options options;
        RandomAccessFile randomAccessFile;
        ByteBuffer map;
        TL_documentAttributeSticker tL_documentAttributeSticker;
        TL_documentAttributeImageSize tL_documentAttributeImageSize;
        final TL_document tL_document2;
        HashMap hashMap;
        final int i6;
        final long j2;
        final MessageObject messageObject2;
        final ArrayList<MessageEntity> arrayList2;
        final HashMap hashMap2;
        StringBuilder stringBuilder;
        MediaMetadataRetriever mediaMetadataRetriever2;
        int i7;
        AudioInfo audioInfo;
        String str12;
        MimeTypeMap singleton = MimeTypeMap.getSingleton();
        if (uri2 != null) {
            str4 = str6 != null ? singleton.getExtensionFromMimeType(str6) : null;
            if (str4 == null) {
                str4 = "txt";
                z = false;
            } else {
                z = true;
            }
            String copyFileToCache = MediaController.copyFileToCache(uri2, str4);
            if (copyFileToCache == null) {
                return false;
            }
            if (z) {
                str7 = copyFileToCache;
                file = new File(str7);
                if (file.exists()) {
                    if (file.length() == 0) {
                        z = ((int) j) != 0;
                        i2 = z ^ 1;
                        name = file.getName();
                        str8 = TtmlNode.ANONYMOUS_REGION_ID;
                        if (str4 != null) {
                            lastIndexOf = str7.lastIndexOf(46);
                            str4 = lastIndexOf == -1 ? str7.substring(lastIndexOf + 1) : str8;
                        }
                        toLowerCase = str4.toLowerCase();
                        if (!toLowerCase.equals("mp3")) {
                            if (toLowerCase.equals("m4a")) {
                                if (!(toLowerCase.equals("opus") || toLowerCase.equals("ogg"))) {
                                    if (toLowerCase.equals("flac")) {
                                        i3 = i2;
                                        i4 = 0;
                                        obj = null;
                                        str9 = null;
                                        str10 = null;
                                        if (i4 == 0) {
                                            tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                            tL_documentAttributeAudio.duration = i4;
                                            tL_documentAttributeAudio.title = str9;
                                            tL_documentAttributeAudio.performer = str10;
                                            if (tL_documentAttributeAudio.title == null) {
                                                tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                            }
                                            tL_documentAttributeAudio.flags |= 1;
                                            if (tL_documentAttributeAudio.performer == null) {
                                                tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                            }
                                            tL_documentAttributeAudio.flags |= 2;
                                            if (obj != null) {
                                                tL_documentAttributeAudio.voice = true;
                                            }
                                        } else {
                                            tL_documentAttributeAudio = null;
                                        }
                                        if (str5 != null) {
                                            if (str5.endsWith("attheme")) {
                                                str11 = str5;
                                                obj2 = 1;
                                                if (obj2 == null || z) {
                                                    tL_document = null;
                                                } else {
                                                    i5 = 4;
                                                    tL_document = (TL_document) MessagesStorage.getInstance(i).getSentFile(str11, !z ? 1 : 4);
                                                    if (!(tL_document != null || str7.equals(str11) || z)) {
                                                        MessagesStorage instance = MessagesStorage.getInstance(i);
                                                        StringBuilder stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append(str7);
                                                        stringBuilder2.append(file.length());
                                                        str9 = stringBuilder2.toString();
                                                        if (!z) {
                                                            i5 = 1;
                                                        }
                                                        tL_document = (TL_document) instance.getSentFile(str9, i5);
                                                    }
                                                }
                                                if (tL_document == null) {
                                                    tL_document = new TL_document();
                                                    tL_document.id = 0;
                                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                    tL_documentAttributeFilename.file_name = name;
                                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                                    tL_document.size = (int) file.length();
                                                    tL_document.dc_id = 0;
                                                    if (tL_documentAttributeAudio != null) {
                                                        tL_document.attributes.add(tL_documentAttributeAudio);
                                                    }
                                                    if (str4.length() == 0) {
                                                        lastIndexOf = toLowerCase.hashCode();
                                                        if (lastIndexOf == 109967) {
                                                            if (toLowerCase.equals("ogg")) {
                                                                obj3 = 2;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = str4;
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                }
                                                            }
                                                        } else if (lastIndexOf == 3145576) {
                                                            if (toLowerCase.equals("flac")) {
                                                                obj3 = 3;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                }
                                                            }
                                                        } else if (lastIndexOf == 3418175) {
                                                            if (toLowerCase.equals("opus")) {
                                                                obj3 = 1;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = str4;
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                }
                                                            }
                                                        } else if (lastIndexOf == 3645340) {
                                                            if (toLowerCase.equals("webp")) {
                                                                obj3 = null;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                }
                                                            }
                                                        }
                                                        obj3 = -1;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                    tL_document.mime_type = "application/octet-stream";
                                                    if (tL_document.mime_type.equals("image/gif")) {
                                                        try {
                                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                            if (loadBitmap != null) {
                                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                                tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                                loadBitmap.recycle();
                                                            }
                                                        } catch (Throwable e2) {
                                                            FileLog.m3e(e2);
                                                        }
                                                    }
                                                    if (tL_document.mime_type.equals("image/webp") && r20 != 0) {
                                                        options = new Options();
                                                        try {
                                                            options.inJustDecodeBounds = true;
                                                            randomAccessFile = new RandomAccessFile(str7, "r");
                                                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                            randomAccessFile.close();
                                                        } catch (Throwable e22) {
                                                            FileLog.m3e(e22);
                                                        }
                                                        if (options.outWidth != 0 && options.outHeight != 0 && options.outWidth <= 800 && options.outHeight <= 800) {
                                                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                            tL_document.attributes.add(tL_documentAttributeSticker);
                                                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                                            tL_documentAttributeImageSize.w = options.outWidth;
                                                            tL_documentAttributeImageSize.h = options.outHeight;
                                                            tL_document.attributes.add(tL_documentAttributeImageSize);
                                                        }
                                                    }
                                                    if (tL_document.thumb == null) {
                                                        tL_document.thumb = new TL_photoSizeEmpty();
                                                        tL_document.thumb.type = "s";
                                                    }
                                                }
                                                tL_document2 = tL_document;
                                                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                                hashMap = new HashMap();
                                                if (str11 != null) {
                                                    hashMap.put("originalPath", str11);
                                                }
                                                i6 = i;
                                                j2 = j;
                                                messageObject2 = messageObject;
                                                arrayList2 = arrayList;
                                                hashMap2 = hashMap;
                                                AndroidUtilities.runOnUIThread(new Runnable() {
                                                    public void run() {
                                                        SendMessagesHelper.getInstance(i6).sendMessage(tL_document2, null, str7, j2, messageObject2, str8, arrayList2, null, hashMap2, 0);
                                                    }
                                                });
                                                return true;
                                            } else if (tL_documentAttributeAudio == null) {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(str5);
                                                stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                                stringBuilder.append(file.length());
                                                str5 = stringBuilder.toString();
                                            } else {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(str5);
                                                stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder.append(file.length());
                                                str5 = stringBuilder.toString();
                                            }
                                        }
                                        str11 = str5;
                                        obj2 = null;
                                        if (obj2 == null) {
                                        }
                                        tL_document = null;
                                        if (tL_document == null) {
                                            tL_document = new TL_document();
                                            tL_document.id = 0;
                                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                            tL_documentAttributeFilename.file_name = name;
                                            tL_document.attributes.add(tL_documentAttributeFilename);
                                            tL_document.size = (int) file.length();
                                            tL_document.dc_id = 0;
                                            if (tL_documentAttributeAudio != null) {
                                                tL_document.attributes.add(tL_documentAttributeAudio);
                                            }
                                            if (str4.length() == 0) {
                                                lastIndexOf = toLowerCase.hashCode();
                                                if (lastIndexOf == 109967) {
                                                    if (toLowerCase.equals("ogg")) {
                                                        obj3 = 2;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3145576) {
                                                    if (toLowerCase.equals("flac")) {
                                                        obj3 = 3;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3418175) {
                                                    if (toLowerCase.equals("opus")) {
                                                        obj3 = 1;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3645340) {
                                                    if (toLowerCase.equals("webp")) {
                                                        obj3 = null;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                }
                                                obj3 = -1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                            tL_document.mime_type = "application/octet-stream";
                                            if (tL_document.mime_type.equals("image/gif")) {
                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                if (loadBitmap != null) {
                                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                    loadBitmap.recycle();
                                                }
                                            }
                                            options = new Options();
                                            options.inJustDecodeBounds = true;
                                            randomAccessFile = new RandomAccessFile(str7, "r");
                                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                            randomAccessFile.close();
                                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                            tL_document.attributes.add(tL_documentAttributeSticker);
                                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                            tL_documentAttributeImageSize.w = options.outWidth;
                                            tL_documentAttributeImageSize.h = options.outHeight;
                                            tL_document.attributes.add(tL_documentAttributeImageSize);
                                            if (tL_document.thumb == null) {
                                                tL_document.thumb = new TL_photoSizeEmpty();
                                                tL_document.thumb.type = "s";
                                            }
                                        }
                                        tL_document2 = tL_document;
                                        if (charSequence == null) {
                                        }
                                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                        hashMap = new HashMap();
                                        if (str11 != null) {
                                            hashMap.put("originalPath", str11);
                                        }
                                        i6 = i;
                                        j2 = j;
                                        messageObject2 = messageObject;
                                        arrayList2 = arrayList;
                                        hashMap2 = hashMap;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        return true;
                                    }
                                }
                                try {
                                    mediaMetadataRetriever2 = new MediaMetadataRetriever();
                                    try {
                                        mediaMetadataRetriever2.setDataSource(file.getAbsolutePath());
                                        str10 = mediaMetadataRetriever2.extractMetadata(9);
                                        if (str10 == null) {
                                            i3 = i2;
                                            i5 = (int) Math.ceil((double) (((float) Long.parseLong(str10)) / 1000.0f));
                                            str9 = mediaMetadataRetriever2.extractMetadata(7);
                                            str10 = mediaMetadataRetriever2.extractMetadata(2);
                                        } else {
                                            i3 = i2;
                                            i5 = 0;
                                            str9 = null;
                                            str10 = null;
                                        }
                                        if (toLowerCase.equals("ogg")) {
                                            i7 = i5;
                                        } else {
                                            i7 = i5;
                                            if (MediaController.isOpusFile(file.getAbsolutePath()) == 1) {
                                                obj = 1;
                                                if (mediaMetadataRetriever2 != null) {
                                                    try {
                                                        mediaMetadataRetriever2.release();
                                                    } catch (Throwable e222) {
                                                        FileLog.m3e(e222);
                                                    }
                                                }
                                                i4 = i7;
                                                if (i4 == 0) {
                                                    tL_documentAttributeAudio = null;
                                                } else {
                                                    tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                                    tL_documentAttributeAudio.duration = i4;
                                                    tL_documentAttributeAudio.title = str9;
                                                    tL_documentAttributeAudio.performer = str10;
                                                    if (tL_documentAttributeAudio.title == null) {
                                                        tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                                    }
                                                    tL_documentAttributeAudio.flags |= 1;
                                                    if (tL_documentAttributeAudio.performer == null) {
                                                        tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                                    }
                                                    tL_documentAttributeAudio.flags |= 2;
                                                    if (obj != null) {
                                                        tL_documentAttributeAudio.voice = true;
                                                    }
                                                }
                                                if (str5 != null) {
                                                    if (str5.endsWith("attheme")) {
                                                        str11 = str5;
                                                        obj2 = 1;
                                                        if (obj2 == null) {
                                                        }
                                                        tL_document = null;
                                                        if (tL_document == null) {
                                                            tL_document = new TL_document();
                                                            tL_document.id = 0;
                                                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                            tL_documentAttributeFilename.file_name = name;
                                                            tL_document.attributes.add(tL_documentAttributeFilename);
                                                            tL_document.size = (int) file.length();
                                                            tL_document.dc_id = 0;
                                                            if (tL_documentAttributeAudio != null) {
                                                                tL_document.attributes.add(tL_documentAttributeAudio);
                                                            }
                                                            if (str4.length() == 0) {
                                                                lastIndexOf = toLowerCase.hashCode();
                                                                if (lastIndexOf == 109967) {
                                                                    if (toLowerCase.equals("ogg")) {
                                                                        obj3 = 2;
                                                                        switch (obj3) {
                                                                            case null:
                                                                                tL_document.mime_type = "image/webp";
                                                                                break;
                                                                            case 1:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                                break;
                                                                            case 2:
                                                                                tL_document.mime_type = "audio/ogg";
                                                                                break;
                                                                            case 3:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                                break;
                                                                            default:
                                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                                if (str4 == null) {
                                                                                    tL_document.mime_type = str4;
                                                                                    break;
                                                                                }
                                                                                tL_document.mime_type = "application/octet-stream";
                                                                                break;
                                                                        }
                                                                    }
                                                                } else if (lastIndexOf == 3145576) {
                                                                    if (toLowerCase.equals("flac")) {
                                                                        obj3 = 3;
                                                                        switch (obj3) {
                                                                            case null:
                                                                                tL_document.mime_type = "image/webp";
                                                                                break;
                                                                            case 1:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                                break;
                                                                            case 2:
                                                                                tL_document.mime_type = "audio/ogg";
                                                                                break;
                                                                            case 3:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                                break;
                                                                            default:
                                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                                if (str4 == null) {
                                                                                    tL_document.mime_type = "application/octet-stream";
                                                                                    break;
                                                                                }
                                                                                tL_document.mime_type = str4;
                                                                                break;
                                                                        }
                                                                    }
                                                                } else if (lastIndexOf == 3418175) {
                                                                    if (toLowerCase.equals("opus")) {
                                                                        obj3 = 1;
                                                                        switch (obj3) {
                                                                            case null:
                                                                                tL_document.mime_type = "image/webp";
                                                                                break;
                                                                            case 1:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                                break;
                                                                            case 2:
                                                                                tL_document.mime_type = "audio/ogg";
                                                                                break;
                                                                            case 3:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                                break;
                                                                            default:
                                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                                if (str4 == null) {
                                                                                    tL_document.mime_type = str4;
                                                                                    break;
                                                                                }
                                                                                tL_document.mime_type = "application/octet-stream";
                                                                                break;
                                                                        }
                                                                    }
                                                                } else if (lastIndexOf == 3645340) {
                                                                    if (toLowerCase.equals("webp")) {
                                                                        obj3 = null;
                                                                        switch (obj3) {
                                                                            case null:
                                                                                tL_document.mime_type = "image/webp";
                                                                                break;
                                                                            case 1:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                                break;
                                                                            case 2:
                                                                                tL_document.mime_type = "audio/ogg";
                                                                                break;
                                                                            case 3:
                                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                                break;
                                                                            default:
                                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                                if (str4 == null) {
                                                                                    tL_document.mime_type = "application/octet-stream";
                                                                                    break;
                                                                                }
                                                                                tL_document.mime_type = str4;
                                                                                break;
                                                                        }
                                                                    }
                                                                }
                                                                obj3 = -1;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                }
                                                            }
                                                            tL_document.mime_type = "application/octet-stream";
                                                            if (tL_document.mime_type.equals("image/gif")) {
                                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                                if (loadBitmap != null) {
                                                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                                    loadBitmap.recycle();
                                                                }
                                                            }
                                                            options = new Options();
                                                            options.inJustDecodeBounds = true;
                                                            randomAccessFile = new RandomAccessFile(str7, "r");
                                                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                            randomAccessFile.close();
                                                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                            tL_document.attributes.add(tL_documentAttributeSticker);
                                                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                                            tL_documentAttributeImageSize.w = options.outWidth;
                                                            tL_documentAttributeImageSize.h = options.outHeight;
                                                            tL_document.attributes.add(tL_documentAttributeImageSize);
                                                            if (tL_document.thumb == null) {
                                                                tL_document.thumb = new TL_photoSizeEmpty();
                                                                tL_document.thumb.type = "s";
                                                            }
                                                        }
                                                        tL_document2 = tL_document;
                                                        if (charSequence == null) {
                                                        }
                                                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                                        hashMap = new HashMap();
                                                        if (str11 != null) {
                                                            hashMap.put("originalPath", str11);
                                                        }
                                                        i6 = i;
                                                        j2 = j;
                                                        messageObject2 = messageObject;
                                                        arrayList2 = arrayList;
                                                        hashMap2 = hashMap;
                                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                        return true;
                                                    } else if (tL_documentAttributeAudio == null) {
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(str5);
                                                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder.append(file.length());
                                                        str5 = stringBuilder.toString();
                                                    } else {
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(str5);
                                                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                                        stringBuilder.append(file.length());
                                                        str5 = stringBuilder.toString();
                                                    }
                                                }
                                                str11 = str5;
                                                obj2 = null;
                                                if (obj2 == null) {
                                                }
                                                tL_document = null;
                                                if (tL_document == null) {
                                                    tL_document = new TL_document();
                                                    tL_document.id = 0;
                                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                    tL_documentAttributeFilename.file_name = name;
                                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                                    tL_document.size = (int) file.length();
                                                    tL_document.dc_id = 0;
                                                    if (tL_documentAttributeAudio != null) {
                                                        tL_document.attributes.add(tL_documentAttributeAudio);
                                                    }
                                                    if (str4.length() == 0) {
                                                        lastIndexOf = toLowerCase.hashCode();
                                                        if (lastIndexOf == 109967) {
                                                            if (toLowerCase.equals("ogg")) {
                                                                obj3 = 2;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = str4;
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                }
                                                            }
                                                        } else if (lastIndexOf == 3145576) {
                                                            if (toLowerCase.equals("flac")) {
                                                                obj3 = 3;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                }
                                                            }
                                                        } else if (lastIndexOf == 3418175) {
                                                            if (toLowerCase.equals("opus")) {
                                                                obj3 = 1;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = str4;
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                }
                                                            }
                                                        } else if (lastIndexOf == 3645340) {
                                                            if (toLowerCase.equals("webp")) {
                                                                obj3 = null;
                                                                switch (obj3) {
                                                                    case null:
                                                                        tL_document.mime_type = "image/webp";
                                                                        break;
                                                                    case 1:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                        break;
                                                                    case 2:
                                                                        tL_document.mime_type = "audio/ogg";
                                                                        break;
                                                                    case 3:
                                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                        break;
                                                                    default:
                                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                        if (str4 == null) {
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                        }
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                }
                                                            }
                                                        }
                                                        obj3 = -1;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                    tL_document.mime_type = "application/octet-stream";
                                                    if (tL_document.mime_type.equals("image/gif")) {
                                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                        if (loadBitmap != null) {
                                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                            loadBitmap.recycle();
                                                        }
                                                    }
                                                    options = new Options();
                                                    options.inJustDecodeBounds = true;
                                                    randomAccessFile = new RandomAccessFile(str7, "r");
                                                    map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                    randomAccessFile.close();
                                                    tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                                    tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                                    tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                    tL_document.attributes.add(tL_documentAttributeSticker);
                                                    tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                                    tL_documentAttributeImageSize.w = options.outWidth;
                                                    tL_documentAttributeImageSize.h = options.outHeight;
                                                    tL_document.attributes.add(tL_documentAttributeImageSize);
                                                    if (tL_document.thumb == null) {
                                                        tL_document.thumb = new TL_photoSizeEmpty();
                                                        tL_document.thumb.type = "s";
                                                    }
                                                }
                                                tL_document2 = tL_document;
                                                if (charSequence == null) {
                                                }
                                                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                                hashMap = new HashMap();
                                                if (str11 != null) {
                                                    hashMap.put("originalPath", str11);
                                                }
                                                i6 = i;
                                                j2 = j;
                                                messageObject2 = messageObject;
                                                arrayList2 = arrayList;
                                                hashMap2 = hashMap;
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                return true;
                                            }
                                        }
                                        obj = null;
                                        if (mediaMetadataRetriever2 != null) {
                                            mediaMetadataRetriever2.release();
                                        }
                                        i4 = i7;
                                    } catch (Exception e3) {
                                        e222 = e3;
                                        i7 = i5;
                                        str10 = null;
                                        mediaMetadataRetriever = mediaMetadataRetriever2;
                                        r5 = e222;
                                        try {
                                            Throwable th;
                                            FileLog.m3e(th);
                                            if (mediaMetadataRetriever != null) {
                                                try {
                                                    mediaMetadataRetriever.release();
                                                } catch (Throwable e2222) {
                                                    FileLog.m3e(e2222);
                                                }
                                            }
                                            i4 = i7;
                                            obj = null;
                                            if (i4 == 0) {
                                                tL_documentAttributeAudio = null;
                                            } else {
                                                tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                                tL_documentAttributeAudio.duration = i4;
                                                tL_documentAttributeAudio.title = str9;
                                                tL_documentAttributeAudio.performer = str10;
                                                if (tL_documentAttributeAudio.title == null) {
                                                    tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                                }
                                                tL_documentAttributeAudio.flags |= 1;
                                                if (tL_documentAttributeAudio.performer == null) {
                                                    tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                                }
                                                tL_documentAttributeAudio.flags |= 2;
                                                if (obj != null) {
                                                    tL_documentAttributeAudio.voice = true;
                                                }
                                            }
                                            if (str5 != null) {
                                                if (str5.endsWith("attheme")) {
                                                    str11 = str5;
                                                    obj2 = 1;
                                                    if (obj2 == null) {
                                                    }
                                                    tL_document = null;
                                                    if (tL_document == null) {
                                                        tL_document = new TL_document();
                                                        tL_document.id = 0;
                                                        tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                        tL_documentAttributeFilename.file_name = name;
                                                        tL_document.attributes.add(tL_documentAttributeFilename);
                                                        tL_document.size = (int) file.length();
                                                        tL_document.dc_id = 0;
                                                        if (tL_documentAttributeAudio != null) {
                                                            tL_document.attributes.add(tL_documentAttributeAudio);
                                                        }
                                                        if (str4.length() == 0) {
                                                            lastIndexOf = toLowerCase.hashCode();
                                                            if (lastIndexOf == 109967) {
                                                                if (toLowerCase.equals("ogg")) {
                                                                    obj3 = 2;
                                                                    switch (obj3) {
                                                                        case null:
                                                                            tL_document.mime_type = "image/webp";
                                                                            break;
                                                                        case 1:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                            break;
                                                                        case 2:
                                                                            tL_document.mime_type = "audio/ogg";
                                                                            break;
                                                                        case 3:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                            break;
                                                                        default:
                                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                            if (str4 == null) {
                                                                                tL_document.mime_type = str4;
                                                                                break;
                                                                            }
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                    }
                                                                }
                                                            } else if (lastIndexOf == 3145576) {
                                                                if (toLowerCase.equals("flac")) {
                                                                    obj3 = 3;
                                                                    switch (obj3) {
                                                                        case null:
                                                                            tL_document.mime_type = "image/webp";
                                                                            break;
                                                                        case 1:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                            break;
                                                                        case 2:
                                                                            tL_document.mime_type = "audio/ogg";
                                                                            break;
                                                                        case 3:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                            break;
                                                                        default:
                                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                            if (str4 == null) {
                                                                                tL_document.mime_type = "application/octet-stream";
                                                                                break;
                                                                            }
                                                                            tL_document.mime_type = str4;
                                                                            break;
                                                                    }
                                                                }
                                                            } else if (lastIndexOf == 3418175) {
                                                                if (toLowerCase.equals("opus")) {
                                                                    obj3 = 1;
                                                                    switch (obj3) {
                                                                        case null:
                                                                            tL_document.mime_type = "image/webp";
                                                                            break;
                                                                        case 1:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                            break;
                                                                        case 2:
                                                                            tL_document.mime_type = "audio/ogg";
                                                                            break;
                                                                        case 3:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                            break;
                                                                        default:
                                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                            if (str4 == null) {
                                                                                tL_document.mime_type = str4;
                                                                                break;
                                                                            }
                                                                            tL_document.mime_type = "application/octet-stream";
                                                                            break;
                                                                    }
                                                                }
                                                            } else if (lastIndexOf == 3645340) {
                                                                if (toLowerCase.equals("webp")) {
                                                                    obj3 = null;
                                                                    switch (obj3) {
                                                                        case null:
                                                                            tL_document.mime_type = "image/webp";
                                                                            break;
                                                                        case 1:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                            break;
                                                                        case 2:
                                                                            tL_document.mime_type = "audio/ogg";
                                                                            break;
                                                                        case 3:
                                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                            break;
                                                                        default:
                                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                            if (str4 == null) {
                                                                                tL_document.mime_type = "application/octet-stream";
                                                                                break;
                                                                            }
                                                                            tL_document.mime_type = str4;
                                                                            break;
                                                                    }
                                                                }
                                                            }
                                                            obj3 = -1;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                            }
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        if (tL_document.mime_type.equals("image/gif")) {
                                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                            if (loadBitmap != null) {
                                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                                tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                                loadBitmap.recycle();
                                                            }
                                                        }
                                                        options = new Options();
                                                        options.inJustDecodeBounds = true;
                                                        randomAccessFile = new RandomAccessFile(str7, "r");
                                                        map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                                        Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                        randomAccessFile.close();
                                                        tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                                        tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                                        tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                        tL_document.attributes.add(tL_documentAttributeSticker);
                                                        tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                                        tL_documentAttributeImageSize.w = options.outWidth;
                                                        tL_documentAttributeImageSize.h = options.outHeight;
                                                        tL_document.attributes.add(tL_documentAttributeImageSize);
                                                        if (tL_document.thumb == null) {
                                                            tL_document.thumb = new TL_photoSizeEmpty();
                                                            tL_document.thumb.type = "s";
                                                        }
                                                    }
                                                    tL_document2 = tL_document;
                                                    if (charSequence == null) {
                                                    }
                                                    str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                                    hashMap = new HashMap();
                                                    if (str11 != null) {
                                                        hashMap.put("originalPath", str11);
                                                    }
                                                    i6 = i;
                                                    j2 = j;
                                                    messageObject2 = messageObject;
                                                    arrayList2 = arrayList;
                                                    hashMap2 = hashMap;
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    return true;
                                                } else if (tL_documentAttributeAudio == null) {
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(str5);
                                                    stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder.append(file.length());
                                                    str5 = stringBuilder.toString();
                                                } else {
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(str5);
                                                    stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                                    stringBuilder.append(file.length());
                                                    str5 = stringBuilder.toString();
                                                }
                                            }
                                            str11 = str5;
                                            obj2 = null;
                                            if (obj2 == null) {
                                            }
                                            tL_document = null;
                                            if (tL_document == null) {
                                                tL_document = new TL_document();
                                                tL_document.id = 0;
                                                tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                tL_documentAttributeFilename.file_name = name;
                                                tL_document.attributes.add(tL_documentAttributeFilename);
                                                tL_document.size = (int) file.length();
                                                tL_document.dc_id = 0;
                                                if (tL_documentAttributeAudio != null) {
                                                    tL_document.attributes.add(tL_documentAttributeAudio);
                                                }
                                                if (str4.length() == 0) {
                                                    lastIndexOf = toLowerCase.hashCode();
                                                    if (lastIndexOf == 109967) {
                                                        if (toLowerCase.equals("ogg")) {
                                                            obj3 = 2;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                            }
                                                        }
                                                    } else if (lastIndexOf == 3145576) {
                                                        if (toLowerCase.equals("flac")) {
                                                            obj3 = 3;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                            }
                                                        }
                                                    } else if (lastIndexOf == 3418175) {
                                                        if (toLowerCase.equals("opus")) {
                                                            obj3 = 1;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                            }
                                                        }
                                                    } else if (lastIndexOf == 3645340) {
                                                        if (toLowerCase.equals("webp")) {
                                                            obj3 = null;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                            }
                                                        }
                                                    }
                                                    obj3 = -1;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = str4;
                                                                break;
                                                            }
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                    }
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                if (tL_document.mime_type.equals("image/gif")) {
                                                    loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                    if (loadBitmap != null) {
                                                        tL_documentAttributeFilename.file_name = "animation.gif";
                                                        tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                        loadBitmap.recycle();
                                                    }
                                                }
                                                options = new Options();
                                                options.inJustDecodeBounds = true;
                                                randomAccessFile = new RandomAccessFile(str7, "r");
                                                map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                                Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                randomAccessFile.close();
                                                tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                                tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                                tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                tL_document.attributes.add(tL_documentAttributeSticker);
                                                tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                                tL_documentAttributeImageSize.w = options.outWidth;
                                                tL_documentAttributeImageSize.h = options.outHeight;
                                                tL_document.attributes.add(tL_documentAttributeImageSize);
                                                if (tL_document.thumb == null) {
                                                    tL_document.thumb = new TL_photoSizeEmpty();
                                                    tL_document.thumb.type = "s";
                                                }
                                            }
                                            tL_document2 = tL_document;
                                            if (charSequence == null) {
                                            }
                                            str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                            hashMap = new HashMap();
                                            if (str11 != null) {
                                                hashMap.put("originalPath", str11);
                                            }
                                            i6 = i;
                                            j2 = j;
                                            messageObject2 = messageObject;
                                            arrayList2 = arrayList;
                                            hashMap2 = hashMap;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            return true;
                                        } catch (Throwable e22222) {
                                            Throwable th2 = e22222;
                                            mediaMetadataRetriever2 = mediaMetadataRetriever;
                                            if (mediaMetadataRetriever2 != null) {
                                                try {
                                                    mediaMetadataRetriever2.release();
                                                } catch (Throwable e222222) {
                                                    FileLog.m3e(e222222);
                                                }
                                            }
                                            throw th2;
                                        }
                                    } catch (Throwable e2222222) {
                                        th2 = e2222222;
                                        if (mediaMetadataRetriever2 != null) {
                                            mediaMetadataRetriever2.release();
                                        }
                                        throw th2;
                                    }
                                } catch (Throwable e22222222) {
                                    i3 = i2;
                                    th = e22222222;
                                    mediaMetadataRetriever = null;
                                    str9 = null;
                                    str10 = null;
                                    i7 = 0;
                                    FileLog.m3e(th);
                                    if (mediaMetadataRetriever != null) {
                                        mediaMetadataRetriever.release();
                                    }
                                    i4 = i7;
                                    obj = null;
                                    if (i4 == 0) {
                                        tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                        tL_documentAttributeAudio.duration = i4;
                                        tL_documentAttributeAudio.title = str9;
                                        tL_documentAttributeAudio.performer = str10;
                                        if (tL_documentAttributeAudio.title == null) {
                                            tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        tL_documentAttributeAudio.flags |= 1;
                                        if (tL_documentAttributeAudio.performer == null) {
                                            tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                        }
                                        tL_documentAttributeAudio.flags |= 2;
                                        if (obj != null) {
                                            tL_documentAttributeAudio.voice = true;
                                        }
                                    } else {
                                        tL_documentAttributeAudio = null;
                                    }
                                    if (str5 != null) {
                                        if (str5.endsWith("attheme")) {
                                            str11 = str5;
                                            obj2 = 1;
                                            if (obj2 == null) {
                                            }
                                            tL_document = null;
                                            if (tL_document == null) {
                                                tL_document = new TL_document();
                                                tL_document.id = 0;
                                                tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                tL_documentAttributeFilename.file_name = name;
                                                tL_document.attributes.add(tL_documentAttributeFilename);
                                                tL_document.size = (int) file.length();
                                                tL_document.dc_id = 0;
                                                if (tL_documentAttributeAudio != null) {
                                                    tL_document.attributes.add(tL_documentAttributeAudio);
                                                }
                                                if (str4.length() == 0) {
                                                    lastIndexOf = toLowerCase.hashCode();
                                                    if (lastIndexOf == 109967) {
                                                        if (toLowerCase.equals("ogg")) {
                                                            obj3 = 2;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                            }
                                                        }
                                                    } else if (lastIndexOf == 3145576) {
                                                        if (toLowerCase.equals("flac")) {
                                                            obj3 = 3;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                            }
                                                        }
                                                    } else if (lastIndexOf == 3418175) {
                                                        if (toLowerCase.equals("opus")) {
                                                            obj3 = 1;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = str4;
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                            }
                                                        }
                                                    } else if (lastIndexOf == 3645340) {
                                                        if (toLowerCase.equals("webp")) {
                                                            obj3 = null;
                                                            switch (obj3) {
                                                                case null:
                                                                    tL_document.mime_type = "image/webp";
                                                                    break;
                                                                case 1:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                    break;
                                                                case 2:
                                                                    tL_document.mime_type = "audio/ogg";
                                                                    break;
                                                                case 3:
                                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                    break;
                                                                default:
                                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                    if (str4 == null) {
                                                                        tL_document.mime_type = "application/octet-stream";
                                                                        break;
                                                                    }
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                            }
                                                        }
                                                    }
                                                    obj3 = -1;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                            }
                                                            tL_document.mime_type = str4;
                                                            break;
                                                    }
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                if (tL_document.mime_type.equals("image/gif")) {
                                                    loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                    if (loadBitmap != null) {
                                                        tL_documentAttributeFilename.file_name = "animation.gif";
                                                        tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                        loadBitmap.recycle();
                                                    }
                                                }
                                                options = new Options();
                                                options.inJustDecodeBounds = true;
                                                randomAccessFile = new RandomAccessFile(str7, "r");
                                                map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                                Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                                randomAccessFile.close();
                                                tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                                tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                                tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                tL_document.attributes.add(tL_documentAttributeSticker);
                                                tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                                tL_documentAttributeImageSize.w = options.outWidth;
                                                tL_documentAttributeImageSize.h = options.outHeight;
                                                tL_document.attributes.add(tL_documentAttributeImageSize);
                                                if (tL_document.thumb == null) {
                                                    tL_document.thumb = new TL_photoSizeEmpty();
                                                    tL_document.thumb.type = "s";
                                                }
                                            }
                                            tL_document2 = tL_document;
                                            if (charSequence == null) {
                                            }
                                            str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                            hashMap = new HashMap();
                                            if (str11 != null) {
                                                hashMap.put("originalPath", str11);
                                            }
                                            i6 = i;
                                            j2 = j;
                                            messageObject2 = messageObject;
                                            arrayList2 = arrayList;
                                            hashMap2 = hashMap;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            return true;
                                        } else if (tL_documentAttributeAudio == null) {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(str5);
                                            stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                            stringBuilder.append(file.length());
                                            str5 = stringBuilder.toString();
                                        } else {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(str5);
                                            stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                            stringBuilder.append(file.length());
                                            str5 = stringBuilder.toString();
                                        }
                                    }
                                    str11 = str5;
                                    obj2 = null;
                                    if (obj2 == null) {
                                    }
                                    tL_document = null;
                                    if (tL_document == null) {
                                        tL_document = new TL_document();
                                        tL_document.id = 0;
                                        tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                        tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                        tL_documentAttributeFilename.file_name = name;
                                        tL_document.attributes.add(tL_documentAttributeFilename);
                                        tL_document.size = (int) file.length();
                                        tL_document.dc_id = 0;
                                        if (tL_documentAttributeAudio != null) {
                                            tL_document.attributes.add(tL_documentAttributeAudio);
                                        }
                                        if (str4.length() == 0) {
                                            lastIndexOf = toLowerCase.hashCode();
                                            if (lastIndexOf == 109967) {
                                                if (toLowerCase.equals("ogg")) {
                                                    obj3 = 2;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = str4;
                                                                break;
                                                            }
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                    }
                                                }
                                            } else if (lastIndexOf == 3145576) {
                                                if (toLowerCase.equals("flac")) {
                                                    obj3 = 3;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                            }
                                                            tL_document.mime_type = str4;
                                                            break;
                                                    }
                                                }
                                            } else if (lastIndexOf == 3418175) {
                                                if (toLowerCase.equals("opus")) {
                                                    obj3 = 1;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = str4;
                                                                break;
                                                            }
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                    }
                                                }
                                            } else if (lastIndexOf == 3645340) {
                                                if (toLowerCase.equals("webp")) {
                                                    obj3 = null;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                            }
                                                            tL_document.mime_type = str4;
                                                            break;
                                                    }
                                                }
                                            }
                                            obj3 = -1;
                                            switch (obj3) {
                                                case null:
                                                    tL_document.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    tL_document.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                    if (str4 == null) {
                                                        tL_document.mime_type = str4;
                                                        break;
                                                    }
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                        tL_document.mime_type = "application/octet-stream";
                                        if (tL_document.mime_type.equals("image/gif")) {
                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap != null) {
                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                loadBitmap.recycle();
                                            }
                                        }
                                        options = new Options();
                                        options.inJustDecodeBounds = true;
                                        randomAccessFile = new RandomAccessFile(str7, "r");
                                        map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                        Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                        randomAccessFile.close();
                                        tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                        tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                        tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                        tL_document.attributes.add(tL_documentAttributeSticker);
                                        tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                        tL_documentAttributeImageSize.w = options.outWidth;
                                        tL_documentAttributeImageSize.h = options.outHeight;
                                        tL_document.attributes.add(tL_documentAttributeImageSize);
                                        if (tL_document.thumb == null) {
                                            tL_document.thumb = new TL_photoSizeEmpty();
                                            tL_document.thumb.type = "s";
                                        }
                                    }
                                    tL_document2 = tL_document;
                                    if (charSequence == null) {
                                    }
                                    str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                    hashMap = new HashMap();
                                    if (str11 != null) {
                                        hashMap.put("originalPath", str11);
                                    }
                                    i6 = i;
                                    j2 = j;
                                    messageObject2 = messageObject;
                                    arrayList2 = arrayList;
                                    hashMap2 = hashMap;
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                    return true;
                                } catch (Throwable e222222222) {
                                    th2 = e222222222;
                                    mediaMetadataRetriever2 = null;
                                    if (mediaMetadataRetriever2 != null) {
                                        mediaMetadataRetriever2.release();
                                    }
                                    throw th2;
                                }
                                if (i4 == 0) {
                                    tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                    tL_documentAttributeAudio.duration = i4;
                                    tL_documentAttributeAudio.title = str9;
                                    tL_documentAttributeAudio.performer = str10;
                                    if (tL_documentAttributeAudio.title == null) {
                                        tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    tL_documentAttributeAudio.flags |= 1;
                                    if (tL_documentAttributeAudio.performer == null) {
                                        tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    tL_documentAttributeAudio.flags |= 2;
                                    if (obj != null) {
                                        tL_documentAttributeAudio.voice = true;
                                    }
                                } else {
                                    tL_documentAttributeAudio = null;
                                }
                                if (str5 != null) {
                                    if (str5.endsWith("attheme")) {
                                        str11 = str5;
                                        obj2 = 1;
                                        if (obj2 == null) {
                                        }
                                        tL_document = null;
                                        if (tL_document == null) {
                                            tL_document = new TL_document();
                                            tL_document.id = 0;
                                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                            tL_documentAttributeFilename.file_name = name;
                                            tL_document.attributes.add(tL_documentAttributeFilename);
                                            tL_document.size = (int) file.length();
                                            tL_document.dc_id = 0;
                                            if (tL_documentAttributeAudio != null) {
                                                tL_document.attributes.add(tL_documentAttributeAudio);
                                            }
                                            if (str4.length() == 0) {
                                                lastIndexOf = toLowerCase.hashCode();
                                                if (lastIndexOf == 109967) {
                                                    if (toLowerCase.equals("ogg")) {
                                                        obj3 = 2;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3145576) {
                                                    if (toLowerCase.equals("flac")) {
                                                        obj3 = 3;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3418175) {
                                                    if (toLowerCase.equals("opus")) {
                                                        obj3 = 1;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3645340) {
                                                    if (toLowerCase.equals("webp")) {
                                                        obj3 = null;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                }
                                                obj3 = -1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                            tL_document.mime_type = "application/octet-stream";
                                            if (tL_document.mime_type.equals("image/gif")) {
                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                if (loadBitmap != null) {
                                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                    loadBitmap.recycle();
                                                }
                                            }
                                            options = new Options();
                                            options.inJustDecodeBounds = true;
                                            randomAccessFile = new RandomAccessFile(str7, "r");
                                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                            randomAccessFile.close();
                                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                            tL_document.attributes.add(tL_documentAttributeSticker);
                                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                            tL_documentAttributeImageSize.w = options.outWidth;
                                            tL_documentAttributeImageSize.h = options.outHeight;
                                            tL_document.attributes.add(tL_documentAttributeImageSize);
                                            if (tL_document.thumb == null) {
                                                tL_document.thumb = new TL_photoSizeEmpty();
                                                tL_document.thumb.type = "s";
                                            }
                                        }
                                        tL_document2 = tL_document;
                                        if (charSequence == null) {
                                        }
                                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                        hashMap = new HashMap();
                                        if (str11 != null) {
                                            hashMap.put("originalPath", str11);
                                        }
                                        i6 = i;
                                        j2 = j;
                                        messageObject2 = messageObject;
                                        arrayList2 = arrayList;
                                        hashMap2 = hashMap;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        return true;
                                    } else if (tL_documentAttributeAudio == null) {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str5);
                                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                        stringBuilder.append(file.length());
                                        str5 = stringBuilder.toString();
                                    } else {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str5);
                                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                        stringBuilder.append(file.length());
                                        str5 = stringBuilder.toString();
                                    }
                                }
                                str11 = str5;
                                obj2 = null;
                                if (obj2 == null) {
                                }
                                tL_document = null;
                                if (tL_document == null) {
                                    tL_document = new TL_document();
                                    tL_document.id = 0;
                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                    tL_documentAttributeFilename.file_name = name;
                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                    tL_document.size = (int) file.length();
                                    tL_document.dc_id = 0;
                                    if (tL_documentAttributeAudio != null) {
                                        tL_document.attributes.add(tL_documentAttributeAudio);
                                    }
                                    if (str4.length() == 0) {
                                        lastIndexOf = toLowerCase.hashCode();
                                        if (lastIndexOf == 109967) {
                                            if (toLowerCase.equals("ogg")) {
                                                obj3 = 2;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3145576) {
                                            if (toLowerCase.equals("flac")) {
                                                obj3 = 3;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3418175) {
                                            if (toLowerCase.equals("opus")) {
                                                obj3 = 1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3645340) {
                                            if (toLowerCase.equals("webp")) {
                                                obj3 = null;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        }
                                        obj3 = -1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                    tL_document.mime_type = "application/octet-stream";
                                    if (tL_document.mime_type.equals("image/gif")) {
                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap != null) {
                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                            loadBitmap.recycle();
                                        }
                                    }
                                    options = new Options();
                                    options.inJustDecodeBounds = true;
                                    randomAccessFile = new RandomAccessFile(str7, "r");
                                    map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                    randomAccessFile.close();
                                    tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                    tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                    tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                    tL_document.attributes.add(tL_documentAttributeSticker);
                                    tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                    tL_documentAttributeImageSize.w = options.outWidth;
                                    tL_documentAttributeImageSize.h = options.outHeight;
                                    tL_document.attributes.add(tL_documentAttributeImageSize);
                                    if (tL_document.thumb == null) {
                                        tL_document.thumb = new TL_photoSizeEmpty();
                                        tL_document.thumb.type = "s";
                                    }
                                }
                                tL_document2 = tL_document;
                                if (charSequence == null) {
                                }
                                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                hashMap = new HashMap();
                                if (str11 != null) {
                                    hashMap.put("originalPath", str11);
                                }
                                i6 = i;
                                j2 = j;
                                messageObject2 = messageObject;
                                arrayList2 = arrayList;
                                hashMap2 = hashMap;
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                return true;
                            }
                        }
                        i3 = i2;
                        audioInfo = AudioInfo.getAudioInfo(file);
                        if (audioInfo != null || audioInfo.getDuration() == 0) {
                            str11 = null;
                            str12 = null;
                        } else {
                            str12 = audioInfo.getArtist();
                            str11 = audioInfo.getTitle();
                        }
                        str9 = str11;
                        str10 = str12;
                        i4 = 0;
                        obj = null;
                        if (i4 == 0) {
                            tL_documentAttributeAudio = null;
                        } else {
                            tL_documentAttributeAudio = new TL_documentAttributeAudio();
                            tL_documentAttributeAudio.duration = i4;
                            tL_documentAttributeAudio.title = str9;
                            tL_documentAttributeAudio.performer = str10;
                            if (tL_documentAttributeAudio.title == null) {
                                tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            tL_documentAttributeAudio.flags |= 1;
                            if (tL_documentAttributeAudio.performer == null) {
                                tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            tL_documentAttributeAudio.flags |= 2;
                            if (obj != null) {
                                tL_documentAttributeAudio.voice = true;
                            }
                        }
                        if (str5 != null) {
                            if (str5.endsWith("attheme")) {
                                str11 = str5;
                                obj2 = 1;
                                if (obj2 == null) {
                                }
                                tL_document = null;
                                if (tL_document == null) {
                                    tL_document = new TL_document();
                                    tL_document.id = 0;
                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                    tL_documentAttributeFilename.file_name = name;
                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                    tL_document.size = (int) file.length();
                                    tL_document.dc_id = 0;
                                    if (tL_documentAttributeAudio != null) {
                                        tL_document.attributes.add(tL_documentAttributeAudio);
                                    }
                                    if (str4.length() == 0) {
                                        lastIndexOf = toLowerCase.hashCode();
                                        if (lastIndexOf == 109967) {
                                            if (toLowerCase.equals("ogg")) {
                                                obj3 = 2;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3145576) {
                                            if (toLowerCase.equals("flac")) {
                                                obj3 = 3;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3418175) {
                                            if (toLowerCase.equals("opus")) {
                                                obj3 = 1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3645340) {
                                            if (toLowerCase.equals("webp")) {
                                                obj3 = null;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        }
                                        obj3 = -1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                    tL_document.mime_type = "application/octet-stream";
                                    if (tL_document.mime_type.equals("image/gif")) {
                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap != null) {
                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                            loadBitmap.recycle();
                                        }
                                    }
                                    options = new Options();
                                    options.inJustDecodeBounds = true;
                                    randomAccessFile = new RandomAccessFile(str7, "r");
                                    map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                    randomAccessFile.close();
                                    tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                    tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                    tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                    tL_document.attributes.add(tL_documentAttributeSticker);
                                    tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                    tL_documentAttributeImageSize.w = options.outWidth;
                                    tL_documentAttributeImageSize.h = options.outHeight;
                                    tL_document.attributes.add(tL_documentAttributeImageSize);
                                    if (tL_document.thumb == null) {
                                        tL_document.thumb = new TL_photoSizeEmpty();
                                        tL_document.thumb.type = "s";
                                    }
                                }
                                tL_document2 = tL_document;
                                if (charSequence == null) {
                                }
                                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                hashMap = new HashMap();
                                if (str11 != null) {
                                    hashMap.put("originalPath", str11);
                                }
                                i6 = i;
                                j2 = j;
                                messageObject2 = messageObject;
                                arrayList2 = arrayList;
                                hashMap2 = hashMap;
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                return true;
                            } else if (tL_documentAttributeAudio == null) {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str5);
                                stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                stringBuilder.append(file.length());
                                str5 = stringBuilder.toString();
                            } else {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str5);
                                stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                stringBuilder.append(file.length());
                                str5 = stringBuilder.toString();
                            }
                        }
                        str11 = str5;
                        obj2 = null;
                        if (obj2 == null) {
                        }
                        tL_document = null;
                        if (tL_document == null) {
                            tL_document = new TL_document();
                            tL_document.id = 0;
                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                            tL_documentAttributeFilename.file_name = name;
                            tL_document.attributes.add(tL_documentAttributeFilename);
                            tL_document.size = (int) file.length();
                            tL_document.dc_id = 0;
                            if (tL_documentAttributeAudio != null) {
                                tL_document.attributes.add(tL_documentAttributeAudio);
                            }
                            if (str4.length() == 0) {
                                lastIndexOf = toLowerCase.hashCode();
                                if (lastIndexOf == 109967) {
                                    if (toLowerCase.equals("ogg")) {
                                        obj3 = 2;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3145576) {
                                    if (toLowerCase.equals("flac")) {
                                        obj3 = 3;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3418175) {
                                    if (toLowerCase.equals("opus")) {
                                        obj3 = 1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3645340) {
                                    if (toLowerCase.equals("webp")) {
                                        obj3 = null;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                }
                                obj3 = -1;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = str4;
                                            break;
                                        }
                                        tL_document.mime_type = "application/octet-stream";
                                        break;
                                }
                            }
                            tL_document.mime_type = "application/octet-stream";
                            if (tL_document.mime_type.equals("image/gif")) {
                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                if (loadBitmap != null) {
                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                    loadBitmap.recycle();
                                }
                            }
                            options = new Options();
                            options.inJustDecodeBounds = true;
                            randomAccessFile = new RandomAccessFile(str7, "r");
                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                            randomAccessFile.close();
                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                            tL_document.attributes.add(tL_documentAttributeSticker);
                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                            tL_documentAttributeImageSize.w = options.outWidth;
                            tL_documentAttributeImageSize.h = options.outHeight;
                            tL_document.attributes.add(tL_documentAttributeImageSize);
                            if (tL_document.thumb == null) {
                                tL_document.thumb = new TL_photoSizeEmpty();
                                tL_document.thumb.type = "s";
                            }
                        }
                        tL_document2 = tL_document;
                        if (charSequence == null) {
                        }
                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                        hashMap = new HashMap();
                        if (str11 != null) {
                            hashMap.put("originalPath", str11);
                        }
                        i6 = i;
                        j2 = j;
                        messageObject2 = messageObject;
                        arrayList2 = arrayList;
                        hashMap2 = hashMap;
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                        return true;
                    }
                }
                return false;
            }
            str7 = copyFileToCache;
        } else {
            str7 = str4;
        }
        str4 = null;
        file = new File(str7);
        if (file.exists()) {
            if (file.length() == 0) {
                if (((int) j) != 0) {
                }
                i2 = z ^ 1;
                name = file.getName();
                str8 = TtmlNode.ANONYMOUS_REGION_ID;
                if (str4 != null) {
                    lastIndexOf = str7.lastIndexOf(46);
                    if (lastIndexOf == -1) {
                    }
                }
                toLowerCase = str4.toLowerCase();
                if (toLowerCase.equals("mp3")) {
                    if (toLowerCase.equals("m4a")) {
                        if (toLowerCase.equals("flac")) {
                            i3 = i2;
                            i4 = 0;
                            obj = null;
                            str9 = null;
                            str10 = null;
                            if (i4 == 0) {
                                tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                tL_documentAttributeAudio.duration = i4;
                                tL_documentAttributeAudio.title = str9;
                                tL_documentAttributeAudio.performer = str10;
                                if (tL_documentAttributeAudio.title == null) {
                                    tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                tL_documentAttributeAudio.flags |= 1;
                                if (tL_documentAttributeAudio.performer == null) {
                                    tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                tL_documentAttributeAudio.flags |= 2;
                                if (obj != null) {
                                    tL_documentAttributeAudio.voice = true;
                                }
                            } else {
                                tL_documentAttributeAudio = null;
                            }
                            if (str5 != null) {
                                if (str5.endsWith("attheme")) {
                                    str11 = str5;
                                    obj2 = 1;
                                    if (obj2 == null) {
                                    }
                                    tL_document = null;
                                    if (tL_document == null) {
                                        tL_document = new TL_document();
                                        tL_document.id = 0;
                                        tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                        tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                        tL_documentAttributeFilename.file_name = name;
                                        tL_document.attributes.add(tL_documentAttributeFilename);
                                        tL_document.size = (int) file.length();
                                        tL_document.dc_id = 0;
                                        if (tL_documentAttributeAudio != null) {
                                            tL_document.attributes.add(tL_documentAttributeAudio);
                                        }
                                        if (str4.length() == 0) {
                                            lastIndexOf = toLowerCase.hashCode();
                                            if (lastIndexOf == 109967) {
                                                if (toLowerCase.equals("ogg")) {
                                                    obj3 = 2;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = str4;
                                                                break;
                                                            }
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                    }
                                                }
                                            } else if (lastIndexOf == 3145576) {
                                                if (toLowerCase.equals("flac")) {
                                                    obj3 = 3;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                            }
                                                            tL_document.mime_type = str4;
                                                            break;
                                                    }
                                                }
                                            } else if (lastIndexOf == 3418175) {
                                                if (toLowerCase.equals("opus")) {
                                                    obj3 = 1;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = str4;
                                                                break;
                                                            }
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                    }
                                                }
                                            } else if (lastIndexOf == 3645340) {
                                                if (toLowerCase.equals("webp")) {
                                                    obj3 = null;
                                                    switch (obj3) {
                                                        case null:
                                                            tL_document.mime_type = "image/webp";
                                                            break;
                                                        case 1:
                                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                            break;
                                                        case 2:
                                                            tL_document.mime_type = "audio/ogg";
                                                            break;
                                                        case 3:
                                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                            break;
                                                        default:
                                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                            if (str4 == null) {
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                            }
                                                            tL_document.mime_type = str4;
                                                            break;
                                                    }
                                                }
                                            }
                                            obj3 = -1;
                                            switch (obj3) {
                                                case null:
                                                    tL_document.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    tL_document.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                    if (str4 == null) {
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    tL_document.mime_type = str4;
                                                    break;
                                            }
                                        }
                                        tL_document.mime_type = "application/octet-stream";
                                        if (tL_document.mime_type.equals("image/gif")) {
                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            if (loadBitmap != null) {
                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                loadBitmap.recycle();
                                            }
                                        }
                                        options = new Options();
                                        options.inJustDecodeBounds = true;
                                        randomAccessFile = new RandomAccessFile(str7, "r");
                                        map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                        Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                        randomAccessFile.close();
                                        tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                        tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                        tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                        tL_document.attributes.add(tL_documentAttributeSticker);
                                        tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                        tL_documentAttributeImageSize.w = options.outWidth;
                                        tL_documentAttributeImageSize.h = options.outHeight;
                                        tL_document.attributes.add(tL_documentAttributeImageSize);
                                        if (tL_document.thumb == null) {
                                            tL_document.thumb = new TL_photoSizeEmpty();
                                            tL_document.thumb.type = "s";
                                        }
                                    }
                                    tL_document2 = tL_document;
                                    if (charSequence == null) {
                                    }
                                    str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                    hashMap = new HashMap();
                                    if (str11 != null) {
                                        hashMap.put("originalPath", str11);
                                    }
                                    i6 = i;
                                    j2 = j;
                                    messageObject2 = messageObject;
                                    arrayList2 = arrayList;
                                    hashMap2 = hashMap;
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                    return true;
                                } else if (tL_documentAttributeAudio == null) {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(str5);
                                    stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                    stringBuilder.append(file.length());
                                    str5 = stringBuilder.toString();
                                } else {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(str5);
                                    stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                    stringBuilder.append(file.length());
                                    str5 = stringBuilder.toString();
                                }
                            }
                            str11 = str5;
                            obj2 = null;
                            if (obj2 == null) {
                            }
                            tL_document = null;
                            if (tL_document == null) {
                                tL_document = new TL_document();
                                tL_document.id = 0;
                                tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                tL_documentAttributeFilename.file_name = name;
                                tL_document.attributes.add(tL_documentAttributeFilename);
                                tL_document.size = (int) file.length();
                                tL_document.dc_id = 0;
                                if (tL_documentAttributeAudio != null) {
                                    tL_document.attributes.add(tL_documentAttributeAudio);
                                }
                                if (str4.length() == 0) {
                                    lastIndexOf = toLowerCase.hashCode();
                                    if (lastIndexOf == 109967) {
                                        if (toLowerCase.equals("ogg")) {
                                            obj3 = 2;
                                            switch (obj3) {
                                                case null:
                                                    tL_document.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    tL_document.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                    if (str4 == null) {
                                                        tL_document.mime_type = str4;
                                                        break;
                                                    }
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                    } else if (lastIndexOf == 3145576) {
                                        if (toLowerCase.equals("flac")) {
                                            obj3 = 3;
                                            switch (obj3) {
                                                case null:
                                                    tL_document.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    tL_document.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                    if (str4 == null) {
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    tL_document.mime_type = str4;
                                                    break;
                                            }
                                        }
                                    } else if (lastIndexOf == 3418175) {
                                        if (toLowerCase.equals("opus")) {
                                            obj3 = 1;
                                            switch (obj3) {
                                                case null:
                                                    tL_document.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    tL_document.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                    if (str4 == null) {
                                                        tL_document.mime_type = str4;
                                                        break;
                                                    }
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                    } else if (lastIndexOf == 3645340) {
                                        if (toLowerCase.equals("webp")) {
                                            obj3 = null;
                                            switch (obj3) {
                                                case null:
                                                    tL_document.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    tL_document.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                    if (str4 == null) {
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    tL_document.mime_type = str4;
                                                    break;
                                            }
                                        }
                                    }
                                    obj3 = -1;
                                    switch (obj3) {
                                        case null:
                                            tL_document.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            tL_document.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                            if (str4 == null) {
                                                tL_document.mime_type = str4;
                                                break;
                                            }
                                            tL_document.mime_type = "application/octet-stream";
                                            break;
                                    }
                                }
                                tL_document.mime_type = "application/octet-stream";
                                if (tL_document.mime_type.equals("image/gif")) {
                                    loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                    if (loadBitmap != null) {
                                        tL_documentAttributeFilename.file_name = "animation.gif";
                                        tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                        loadBitmap.recycle();
                                    }
                                }
                                options = new Options();
                                options.inJustDecodeBounds = true;
                                randomAccessFile = new RandomAccessFile(str7, "r");
                                map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                randomAccessFile.close();
                                tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                tL_document.attributes.add(tL_documentAttributeSticker);
                                tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                tL_documentAttributeImageSize.w = options.outWidth;
                                tL_documentAttributeImageSize.h = options.outHeight;
                                tL_document.attributes.add(tL_documentAttributeImageSize);
                                if (tL_document.thumb == null) {
                                    tL_document.thumb = new TL_photoSizeEmpty();
                                    tL_document.thumb.type = "s";
                                }
                            }
                            tL_document2 = tL_document;
                            if (charSequence == null) {
                            }
                            str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                            hashMap = new HashMap();
                            if (str11 != null) {
                                hashMap.put("originalPath", str11);
                            }
                            i6 = i;
                            j2 = j;
                            messageObject2 = messageObject;
                            arrayList2 = arrayList;
                            hashMap2 = hashMap;
                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                            return true;
                        }
                        mediaMetadataRetriever2 = new MediaMetadataRetriever();
                        mediaMetadataRetriever2.setDataSource(file.getAbsolutePath());
                        str10 = mediaMetadataRetriever2.extractMetadata(9);
                        if (str10 == null) {
                            i3 = i2;
                            i5 = 0;
                            str9 = null;
                            str10 = null;
                        } else {
                            i3 = i2;
                            i5 = (int) Math.ceil((double) (((float) Long.parseLong(str10)) / 1000.0f));
                            str9 = mediaMetadataRetriever2.extractMetadata(7);
                            str10 = mediaMetadataRetriever2.extractMetadata(2);
                        }
                        if (toLowerCase.equals("ogg")) {
                            i7 = i5;
                        } else {
                            i7 = i5;
                            if (MediaController.isOpusFile(file.getAbsolutePath()) == 1) {
                                obj = 1;
                                if (mediaMetadataRetriever2 != null) {
                                    mediaMetadataRetriever2.release();
                                }
                                i4 = i7;
                                if (i4 == 0) {
                                    tL_documentAttributeAudio = null;
                                } else {
                                    tL_documentAttributeAudio = new TL_documentAttributeAudio();
                                    tL_documentAttributeAudio.duration = i4;
                                    tL_documentAttributeAudio.title = str9;
                                    tL_documentAttributeAudio.performer = str10;
                                    if (tL_documentAttributeAudio.title == null) {
                                        tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    tL_documentAttributeAudio.flags |= 1;
                                    if (tL_documentAttributeAudio.performer == null) {
                                        tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    tL_documentAttributeAudio.flags |= 2;
                                    if (obj != null) {
                                        tL_documentAttributeAudio.voice = true;
                                    }
                                }
                                if (str5 != null) {
                                    if (str5.endsWith("attheme")) {
                                        str11 = str5;
                                        obj2 = 1;
                                        if (obj2 == null) {
                                        }
                                        tL_document = null;
                                        if (tL_document == null) {
                                            tL_document = new TL_document();
                                            tL_document.id = 0;
                                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                            tL_documentAttributeFilename.file_name = name;
                                            tL_document.attributes.add(tL_documentAttributeFilename);
                                            tL_document.size = (int) file.length();
                                            tL_document.dc_id = 0;
                                            if (tL_documentAttributeAudio != null) {
                                                tL_document.attributes.add(tL_documentAttributeAudio);
                                            }
                                            if (str4.length() == 0) {
                                                lastIndexOf = toLowerCase.hashCode();
                                                if (lastIndexOf == 109967) {
                                                    if (toLowerCase.equals("ogg")) {
                                                        obj3 = 2;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3145576) {
                                                    if (toLowerCase.equals("flac")) {
                                                        obj3 = 3;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3418175) {
                                                    if (toLowerCase.equals("opus")) {
                                                        obj3 = 1;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = str4;
                                                                    break;
                                                                }
                                                                tL_document.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (lastIndexOf == 3645340) {
                                                    if (toLowerCase.equals("webp")) {
                                                        obj3 = null;
                                                        switch (obj3) {
                                                            case null:
                                                                tL_document.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                tL_document.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                                if (str4 == null) {
                                                                    tL_document.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                tL_document.mime_type = str4;
                                                                break;
                                                        }
                                                    }
                                                }
                                                obj3 = -1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                            tL_document.mime_type = "application/octet-stream";
                                            if (tL_document.mime_type.equals("image/gif")) {
                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                if (loadBitmap != null) {
                                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                                    loadBitmap.recycle();
                                                }
                                            }
                                            options = new Options();
                                            options.inJustDecodeBounds = true;
                                            randomAccessFile = new RandomAccessFile(str7, "r");
                                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                            randomAccessFile.close();
                                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                            tL_document.attributes.add(tL_documentAttributeSticker);
                                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                            tL_documentAttributeImageSize.w = options.outWidth;
                                            tL_documentAttributeImageSize.h = options.outHeight;
                                            tL_document.attributes.add(tL_documentAttributeImageSize);
                                            if (tL_document.thumb == null) {
                                                tL_document.thumb = new TL_photoSizeEmpty();
                                                tL_document.thumb.type = "s";
                                            }
                                        }
                                        tL_document2 = tL_document;
                                        if (charSequence == null) {
                                        }
                                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                        hashMap = new HashMap();
                                        if (str11 != null) {
                                            hashMap.put("originalPath", str11);
                                        }
                                        i6 = i;
                                        j2 = j;
                                        messageObject2 = messageObject;
                                        arrayList2 = arrayList;
                                        hashMap2 = hashMap;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        return true;
                                    } else if (tL_documentAttributeAudio == null) {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str5);
                                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                        stringBuilder.append(file.length());
                                        str5 = stringBuilder.toString();
                                    } else {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str5);
                                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                        stringBuilder.append(file.length());
                                        str5 = stringBuilder.toString();
                                    }
                                }
                                str11 = str5;
                                obj2 = null;
                                if (obj2 == null) {
                                }
                                tL_document = null;
                                if (tL_document == null) {
                                    tL_document = new TL_document();
                                    tL_document.id = 0;
                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                    tL_documentAttributeFilename.file_name = name;
                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                    tL_document.size = (int) file.length();
                                    tL_document.dc_id = 0;
                                    if (tL_documentAttributeAudio != null) {
                                        tL_document.attributes.add(tL_documentAttributeAudio);
                                    }
                                    if (str4.length() == 0) {
                                        lastIndexOf = toLowerCase.hashCode();
                                        if (lastIndexOf == 109967) {
                                            if (toLowerCase.equals("ogg")) {
                                                obj3 = 2;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3145576) {
                                            if (toLowerCase.equals("flac")) {
                                                obj3 = 3;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3418175) {
                                            if (toLowerCase.equals("opus")) {
                                                obj3 = 1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3645340) {
                                            if (toLowerCase.equals("webp")) {
                                                obj3 = null;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        }
                                        obj3 = -1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                    tL_document.mime_type = "application/octet-stream";
                                    if (tL_document.mime_type.equals("image/gif")) {
                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap != null) {
                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                            loadBitmap.recycle();
                                        }
                                    }
                                    options = new Options();
                                    options.inJustDecodeBounds = true;
                                    randomAccessFile = new RandomAccessFile(str7, "r");
                                    map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                    randomAccessFile.close();
                                    tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                    tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                    tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                    tL_document.attributes.add(tL_documentAttributeSticker);
                                    tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                    tL_documentAttributeImageSize.w = options.outWidth;
                                    tL_documentAttributeImageSize.h = options.outHeight;
                                    tL_document.attributes.add(tL_documentAttributeImageSize);
                                    if (tL_document.thumb == null) {
                                        tL_document.thumb = new TL_photoSizeEmpty();
                                        tL_document.thumb.type = "s";
                                    }
                                }
                                tL_document2 = tL_document;
                                if (charSequence == null) {
                                }
                                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                hashMap = new HashMap();
                                if (str11 != null) {
                                    hashMap.put("originalPath", str11);
                                }
                                i6 = i;
                                j2 = j;
                                messageObject2 = messageObject;
                                arrayList2 = arrayList;
                                hashMap2 = hashMap;
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                return true;
                            }
                        }
                        obj = null;
                        if (mediaMetadataRetriever2 != null) {
                            mediaMetadataRetriever2.release();
                        }
                        i4 = i7;
                        if (i4 == 0) {
                            tL_documentAttributeAudio = new TL_documentAttributeAudio();
                            tL_documentAttributeAudio.duration = i4;
                            tL_documentAttributeAudio.title = str9;
                            tL_documentAttributeAudio.performer = str10;
                            if (tL_documentAttributeAudio.title == null) {
                                tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            tL_documentAttributeAudio.flags |= 1;
                            if (tL_documentAttributeAudio.performer == null) {
                                tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            tL_documentAttributeAudio.flags |= 2;
                            if (obj != null) {
                                tL_documentAttributeAudio.voice = true;
                            }
                        } else {
                            tL_documentAttributeAudio = null;
                        }
                        if (str5 != null) {
                            if (str5.endsWith("attheme")) {
                                str11 = str5;
                                obj2 = 1;
                                if (obj2 == null) {
                                }
                                tL_document = null;
                                if (tL_document == null) {
                                    tL_document = new TL_document();
                                    tL_document.id = 0;
                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                    tL_documentAttributeFilename.file_name = name;
                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                    tL_document.size = (int) file.length();
                                    tL_document.dc_id = 0;
                                    if (tL_documentAttributeAudio != null) {
                                        tL_document.attributes.add(tL_documentAttributeAudio);
                                    }
                                    if (str4.length() == 0) {
                                        lastIndexOf = toLowerCase.hashCode();
                                        if (lastIndexOf == 109967) {
                                            if (toLowerCase.equals("ogg")) {
                                                obj3 = 2;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3145576) {
                                            if (toLowerCase.equals("flac")) {
                                                obj3 = 3;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3418175) {
                                            if (toLowerCase.equals("opus")) {
                                                obj3 = 1;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = str4;
                                                            break;
                                                        }
                                                        tL_document.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (lastIndexOf == 3645340) {
                                            if (toLowerCase.equals("webp")) {
                                                obj3 = null;
                                                switch (obj3) {
                                                    case null:
                                                        tL_document.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        tL_document.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                        if (str4 == null) {
                                                            tL_document.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        tL_document.mime_type = str4;
                                                        break;
                                                }
                                            }
                                        }
                                        obj3 = -1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                    tL_document.mime_type = "application/octet-stream";
                                    if (tL_document.mime_type.equals("image/gif")) {
                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        if (loadBitmap != null) {
                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                            loadBitmap.recycle();
                                        }
                                    }
                                    options = new Options();
                                    options.inJustDecodeBounds = true;
                                    randomAccessFile = new RandomAccessFile(str7, "r");
                                    map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                                    randomAccessFile.close();
                                    tL_documentAttributeSticker = new TL_documentAttributeSticker();
                                    tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                    tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                    tL_document.attributes.add(tL_documentAttributeSticker);
                                    tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                                    tL_documentAttributeImageSize.w = options.outWidth;
                                    tL_documentAttributeImageSize.h = options.outHeight;
                                    tL_document.attributes.add(tL_documentAttributeImageSize);
                                    if (tL_document.thumb == null) {
                                        tL_document.thumb = new TL_photoSizeEmpty();
                                        tL_document.thumb.type = "s";
                                    }
                                }
                                tL_document2 = tL_document;
                                if (charSequence == null) {
                                }
                                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                hashMap = new HashMap();
                                if (str11 != null) {
                                    hashMap.put("originalPath", str11);
                                }
                                i6 = i;
                                j2 = j;
                                messageObject2 = messageObject;
                                arrayList2 = arrayList;
                                hashMap2 = hashMap;
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                return true;
                            } else if (tL_documentAttributeAudio == null) {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str5);
                                stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                stringBuilder.append(file.length());
                                str5 = stringBuilder.toString();
                            } else {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str5);
                                stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                stringBuilder.append(file.length());
                                str5 = stringBuilder.toString();
                            }
                        }
                        str11 = str5;
                        obj2 = null;
                        if (obj2 == null) {
                        }
                        tL_document = null;
                        if (tL_document == null) {
                            tL_document = new TL_document();
                            tL_document.id = 0;
                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                            tL_documentAttributeFilename.file_name = name;
                            tL_document.attributes.add(tL_documentAttributeFilename);
                            tL_document.size = (int) file.length();
                            tL_document.dc_id = 0;
                            if (tL_documentAttributeAudio != null) {
                                tL_document.attributes.add(tL_documentAttributeAudio);
                            }
                            if (str4.length() == 0) {
                                lastIndexOf = toLowerCase.hashCode();
                                if (lastIndexOf == 109967) {
                                    if (toLowerCase.equals("ogg")) {
                                        obj3 = 2;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3145576) {
                                    if (toLowerCase.equals("flac")) {
                                        obj3 = 3;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3418175) {
                                    if (toLowerCase.equals("opus")) {
                                        obj3 = 1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3645340) {
                                    if (toLowerCase.equals("webp")) {
                                        obj3 = null;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                }
                                obj3 = -1;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = str4;
                                            break;
                                        }
                                        tL_document.mime_type = "application/octet-stream";
                                        break;
                                }
                            }
                            tL_document.mime_type = "application/octet-stream";
                            if (tL_document.mime_type.equals("image/gif")) {
                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                if (loadBitmap != null) {
                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                    loadBitmap.recycle();
                                }
                            }
                            options = new Options();
                            options.inJustDecodeBounds = true;
                            randomAccessFile = new RandomAccessFile(str7, "r");
                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                            randomAccessFile.close();
                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                            tL_document.attributes.add(tL_documentAttributeSticker);
                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                            tL_documentAttributeImageSize.w = options.outWidth;
                            tL_documentAttributeImageSize.h = options.outHeight;
                            tL_document.attributes.add(tL_documentAttributeImageSize);
                            if (tL_document.thumb == null) {
                                tL_document.thumb = new TL_photoSizeEmpty();
                                tL_document.thumb.type = "s";
                            }
                        }
                        tL_document2 = tL_document;
                        if (charSequence == null) {
                        }
                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                        hashMap = new HashMap();
                        if (str11 != null) {
                            hashMap.put("originalPath", str11);
                        }
                        i6 = i;
                        j2 = j;
                        messageObject2 = messageObject;
                        arrayList2 = arrayList;
                        hashMap2 = hashMap;
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                        return true;
                    }
                }
                i3 = i2;
                audioInfo = AudioInfo.getAudioInfo(file);
                if (audioInfo != null) {
                }
                str11 = null;
                str12 = null;
                str9 = str11;
                str10 = str12;
                i4 = 0;
                obj = null;
                if (i4 == 0) {
                    tL_documentAttributeAudio = null;
                } else {
                    tL_documentAttributeAudio = new TL_documentAttributeAudio();
                    tL_documentAttributeAudio.duration = i4;
                    tL_documentAttributeAudio.title = str9;
                    tL_documentAttributeAudio.performer = str10;
                    if (tL_documentAttributeAudio.title == null) {
                        tL_documentAttributeAudio.title = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    tL_documentAttributeAudio.flags |= 1;
                    if (tL_documentAttributeAudio.performer == null) {
                        tL_documentAttributeAudio.performer = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    tL_documentAttributeAudio.flags |= 2;
                    if (obj != null) {
                        tL_documentAttributeAudio.voice = true;
                    }
                }
                if (str5 != null) {
                    if (str5.endsWith("attheme")) {
                        str11 = str5;
                        obj2 = 1;
                        if (obj2 == null) {
                        }
                        tL_document = null;
                        if (tL_document == null) {
                            tL_document = new TL_document();
                            tL_document.id = 0;
                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                            tL_documentAttributeFilename.file_name = name;
                            tL_document.attributes.add(tL_documentAttributeFilename);
                            tL_document.size = (int) file.length();
                            tL_document.dc_id = 0;
                            if (tL_documentAttributeAudio != null) {
                                tL_document.attributes.add(tL_documentAttributeAudio);
                            }
                            if (str4.length() == 0) {
                                lastIndexOf = toLowerCase.hashCode();
                                if (lastIndexOf == 109967) {
                                    if (toLowerCase.equals("ogg")) {
                                        obj3 = 2;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3145576) {
                                    if (toLowerCase.equals("flac")) {
                                        obj3 = 3;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3418175) {
                                    if (toLowerCase.equals("opus")) {
                                        obj3 = 1;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = str4;
                                                    break;
                                                }
                                                tL_document.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (lastIndexOf == 3645340) {
                                    if (toLowerCase.equals("webp")) {
                                        obj3 = null;
                                        switch (obj3) {
                                            case null:
                                                tL_document.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                tL_document.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                                if (str4 == null) {
                                                    tL_document.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                tL_document.mime_type = str4;
                                                break;
                                        }
                                    }
                                }
                                obj3 = -1;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = "application/octet-stream";
                                            break;
                                        }
                                        tL_document.mime_type = str4;
                                        break;
                                }
                            }
                            tL_document.mime_type = "application/octet-stream";
                            if (tL_document.mime_type.equals("image/gif")) {
                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                if (loadBitmap != null) {
                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                                    loadBitmap.recycle();
                                }
                            }
                            options = new Options();
                            options.inJustDecodeBounds = true;
                            randomAccessFile = new RandomAccessFile(str7, "r");
                            map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                            Utilities.loadWebpImage(null, map, map.limit(), options, true);
                            randomAccessFile.close();
                            tL_documentAttributeSticker = new TL_documentAttributeSticker();
                            tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                            tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                            tL_document.attributes.add(tL_documentAttributeSticker);
                            tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                            tL_documentAttributeImageSize.w = options.outWidth;
                            tL_documentAttributeImageSize.h = options.outHeight;
                            tL_document.attributes.add(tL_documentAttributeImageSize);
                            if (tL_document.thumb == null) {
                                tL_document.thumb = new TL_photoSizeEmpty();
                                tL_document.thumb.type = "s";
                            }
                        }
                        tL_document2 = tL_document;
                        if (charSequence == null) {
                        }
                        str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                        hashMap = new HashMap();
                        if (str11 != null) {
                            hashMap.put("originalPath", str11);
                        }
                        i6 = i;
                        j2 = j;
                        messageObject2 = messageObject;
                        arrayList2 = arrayList;
                        hashMap2 = hashMap;
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                        return true;
                    } else if (tL_documentAttributeAudio == null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(str5);
                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                        stringBuilder.append(file.length());
                        str5 = stringBuilder.toString();
                    } else {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(str5);
                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                        stringBuilder.append(file.length());
                        str5 = stringBuilder.toString();
                    }
                }
                str11 = str5;
                obj2 = null;
                if (obj2 == null) {
                }
                tL_document = null;
                if (tL_document == null) {
                    tL_document = new TL_document();
                    tL_document.id = 0;
                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                    tL_documentAttributeFilename.file_name = name;
                    tL_document.attributes.add(tL_documentAttributeFilename);
                    tL_document.size = (int) file.length();
                    tL_document.dc_id = 0;
                    if (tL_documentAttributeAudio != null) {
                        tL_document.attributes.add(tL_documentAttributeAudio);
                    }
                    if (str4.length() == 0) {
                        lastIndexOf = toLowerCase.hashCode();
                        if (lastIndexOf == 109967) {
                            if (toLowerCase.equals("ogg")) {
                                obj3 = 2;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = str4;
                                            break;
                                        }
                                        tL_document.mime_type = "application/octet-stream";
                                        break;
                                }
                            }
                        } else if (lastIndexOf == 3145576) {
                            if (toLowerCase.equals("flac")) {
                                obj3 = 3;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = "application/octet-stream";
                                            break;
                                        }
                                        tL_document.mime_type = str4;
                                        break;
                                }
                            }
                        } else if (lastIndexOf == 3418175) {
                            if (toLowerCase.equals("opus")) {
                                obj3 = 1;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = str4;
                                            break;
                                        }
                                        tL_document.mime_type = "application/octet-stream";
                                        break;
                                }
                            }
                        } else if (lastIndexOf == 3645340) {
                            if (toLowerCase.equals("webp")) {
                                obj3 = null;
                                switch (obj3) {
                                    case null:
                                        tL_document.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        tL_document.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                        if (str4 == null) {
                                            tL_document.mime_type = "application/octet-stream";
                                            break;
                                        }
                                        tL_document.mime_type = str4;
                                        break;
                                }
                            }
                        }
                        obj3 = -1;
                        switch (obj3) {
                            case null:
                                tL_document.mime_type = "image/webp";
                                break;
                            case 1:
                                tL_document.mime_type = MimeTypes.AUDIO_OPUS;
                                break;
                            case 2:
                                tL_document.mime_type = "audio/ogg";
                                break;
                            case 3:
                                tL_document.mime_type = MimeTypes.AUDIO_FLAC;
                                break;
                            default:
                                str4 = singleton.getMimeTypeFromExtension(toLowerCase);
                                if (str4 == null) {
                                    tL_document.mime_type = str4;
                                    break;
                                }
                                tL_document.mime_type = "application/octet-stream";
                                break;
                        }
                    }
                    tL_document.mime_type = "application/octet-stream";
                    if (tL_document.mime_type.equals("image/gif")) {
                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                        if (loadBitmap != null) {
                            tL_documentAttributeFilename.file_name = "animation.gif";
                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, 90.0f, 90.0f, 55, z);
                            loadBitmap.recycle();
                        }
                    }
                    options = new Options();
                    options.inJustDecodeBounds = true;
                    randomAccessFile = new RandomAccessFile(str7, "r");
                    map = randomAccessFile.getChannel().map(MapMode.READ_ONLY, 0, (long) str7.length());
                    Utilities.loadWebpImage(null, map, map.limit(), options, true);
                    randomAccessFile.close();
                    tL_documentAttributeSticker = new TL_documentAttributeSticker();
                    tL_documentAttributeSticker.alt = TtmlNode.ANONYMOUS_REGION_ID;
                    tL_documentAttributeSticker.stickerset = new TL_inputStickerSetEmpty();
                    tL_document.attributes.add(tL_documentAttributeSticker);
                    tL_documentAttributeImageSize = new TL_documentAttributeImageSize();
                    tL_documentAttributeImageSize.w = options.outWidth;
                    tL_documentAttributeImageSize.h = options.outHeight;
                    tL_document.attributes.add(tL_documentAttributeImageSize);
                    if (tL_document.thumb == null) {
                        tL_document.thumb = new TL_photoSizeEmpty();
                        tL_document.thumb.type = "s";
                    }
                }
                tL_document2 = tL_document;
                if (charSequence == null) {
                }
                str8 = charSequence == null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                hashMap = new HashMap();
                if (str11 != null) {
                    hashMap.put("originalPath", str11);
                }
                i6 = i;
                j2 = j;
                messageObject2 = messageObject;
                arrayList2 = arrayList;
                hashMap2 = hashMap;
                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                return true;
            }
        }
        return false;
    }

    public static void prepareSendingDocument(String str, String str2, Uri uri, String str3, long j, MessageObject messageObject, InputContentInfoCompat inputContentInfoCompat) {
        if ((str != null && str2 != null) || uri != null) {
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = null;
            if (uri != null) {
                arrayList3 = new ArrayList();
                arrayList3.add(uri);
            }
            if (str != null) {
                arrayList.add(str);
                arrayList2.add(str2);
            }
            prepareSendingDocuments(arrayList, arrayList2, arrayList3, str3, j, messageObject, inputContentInfoCompat);
        }
    }

    public static void prepareSendingAudioDocuments(ArrayList<MessageObject> arrayList, long j, MessageObject messageObject) {
        final int i = UserConfig.selectedAccount;
        final ArrayList<MessageObject> arrayList2 = arrayList;
        final long j2 = j;
        final MessageObject messageObject2 = messageObject;
        new Thread(new Runnable() {
            public void run() {
                int size = arrayList2.size();
                for (int i = 0; i < size; i++) {
                    final MessageObject messageObject = (MessageObject) arrayList2.get(i);
                    String str = messageObject.messageOwner.attachPath;
                    File file = new File(str);
                    int i2 = 1;
                    int i3 = ((int) j2) == 0 ? 1 : 0;
                    if (str != null) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append(str);
                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                        stringBuilder.append(file.length());
                        str = stringBuilder.toString();
                    }
                    TL_document tL_document = null;
                    if (i3 == 0) {
                        MessagesStorage instance = MessagesStorage.getInstance(i);
                        if (i3 != 0) {
                            i2 = 4;
                        }
                        tL_document = (TL_document) instance.getSentFile(str, i2);
                    }
                    if (tL_document == null) {
                        tL_document = (TL_document) messageObject.messageOwner.media.document;
                    }
                    if (i3 != 0) {
                        if (MessagesController.getInstance(i).getEncryptedChat(Integer.valueOf((int) (j2 >> 32))) == null) {
                            return;
                        }
                    }
                    final HashMap hashMap = new HashMap();
                    if (str != null) {
                        hashMap.put("originalPath", str);
                    }
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public void run() {
                            SendMessagesHelper.getInstance(i).sendMessage(tL_document, null, messageObject.messageOwner.attachPath, j2, messageObject2, null, null, null, hashMap, 0);
                        }
                    });
                }
            }
        }).start();
    }

    public static void prepareSendingDocuments(ArrayList<String> arrayList, ArrayList<String> arrayList2, ArrayList<Uri> arrayList3, String str, long j, MessageObject messageObject, InputContentInfoCompat inputContentInfoCompat) {
        if (!(arrayList == null && arrayList2 == null && arrayList3 == null) && (arrayList == null || arrayList2 == null || arrayList.size() == arrayList2.size())) {
            final int i = UserConfig.selectedAccount;
            final ArrayList<String> arrayList4 = arrayList;
            final ArrayList<String> arrayList5 = arrayList2;
            final String str2 = str;
            final long j2 = j;
            final MessageObject messageObject2 = messageObject;
            final ArrayList<Uri> arrayList6 = arrayList3;
            final InputContentInfoCompat inputContentInfoCompat2 = inputContentInfoCompat;
            new Thread(new Runnable() {

                /* renamed from: org.telegram.messenger.SendMessagesHelper$18$1 */
                class C04861 implements Runnable {
                    C04861() {
                    }

                    public void run() {
                        try {
                            Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("UnsupportedAttachment", C0446R.string.UnsupportedAttachment), 0).show();
                        } catch (Throwable e) {
                            FileLog.m3e(e);
                        }
                    }
                }

                public void run() {
                    int i;
                    int i2 = 0;
                    if (arrayList4 != null) {
                        int i3 = 0;
                        i = i3;
                        while (i3 < arrayList4.size()) {
                            if (!SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList4.get(i3), (String) arrayList5.get(i3), null, str2, j2, messageObject2, null, null)) {
                                i = 1;
                            }
                            i3++;
                        }
                    } else {
                        i = 0;
                    }
                    if (arrayList6 != null) {
                        while (i2 < arrayList6.size()) {
                            if (!SendMessagesHelper.prepareSendingDocumentInternal(i, null, null, (Uri) arrayList6.get(i2), str2, j2, messageObject2, null, null)) {
                                i = 1;
                            }
                            i2++;
                        }
                    }
                    if (inputContentInfoCompat2 != null) {
                        inputContentInfoCompat2.releasePermission();
                    }
                    if (i != 0) {
                        AndroidUtilities.runOnUIThread(new C04861());
                    }
                }
            }).start();
        }
    }

    public static void prepareSendingPhoto(String str, Uri uri, long j, MessageObject messageObject, CharSequence charSequence, ArrayList<MessageEntity> arrayList, ArrayList<InputDocument> arrayList2, InputContentInfoCompat inputContentInfoCompat, int i) {
        ArrayList<InputDocument> arrayList3 = arrayList2;
        SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
        sendingMediaInfo.path = str;
        sendingMediaInfo.uri = uri;
        if (charSequence != null) {
            sendingMediaInfo.caption = charSequence.toString();
        }
        sendingMediaInfo.entities = arrayList;
        sendingMediaInfo.ttl = i;
        if (!(arrayList3 == null || arrayList2.isEmpty())) {
            sendingMediaInfo.masks = new ArrayList(arrayList3);
        }
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(sendingMediaInfo);
        prepareSendingMedia(arrayList4, j, messageObject, inputContentInfoCompat, false, false);
    }

    public static void prepareSendingBotContextResult(BotInlineResult botInlineResult, HashMap<String, String> hashMap, long j, MessageObject messageObject) {
        final BotInlineResult botInlineResult2 = botInlineResult;
        if (botInlineResult2 != null) {
            final int i = UserConfig.selectedAccount;
            final long j2;
            if (botInlineResult2.send_message instanceof TL_botInlineMessageMediaAuto) {
                j2 = j;
                final HashMap<String, String> hashMap2 = hashMap;
                final MessageObject messageObject2 = messageObject;
                new Thread(new Runnable() {
                    /* JADX WARNING: inconsistent code. */
                    /* Code decompiled incorrectly, please refer to instructions dump. */
                    public void run() {
                        TL_game tL_game;
                        TL_document tL_document;
                        String str;
                        TL_photo tL_photo;
                        String absolutePath;
                        if (botInlineResult2 instanceof TL_botInlineMediaResult) {
                            if (botInlineResult2.type.equals("game")) {
                                if (((int) j2) != 0) {
                                    TL_game tL_game2 = new TL_game();
                                    tL_game2.title = botInlineResult2.title;
                                    tL_game2.description = botInlineResult2.description;
                                    tL_game2.short_name = botInlineResult2.id;
                                    tL_game2.photo = botInlineResult2.photo;
                                    if (botInlineResult2.document instanceof TL_document) {
                                        tL_game2.document = botInlineResult2.document;
                                        tL_game2.flags = 1 | tL_game2.flags;
                                    }
                                    tL_game = tL_game2;
                                    tL_document = null;
                                    str = tL_document;
                                    tL_photo = str;
                                } else {
                                    return;
                                }
                            } else if (botInlineResult2.document != null) {
                                if (botInlineResult2.document instanceof TL_document) {
                                    tL_document = (TL_document) botInlineResult2.document;
                                    str = null;
                                    tL_photo = str;
                                    tL_game = tL_photo;
                                }
                            } else if (botInlineResult2.photo != null && (botInlineResult2.photo instanceof TL_photo)) {
                                tL_photo = (TL_photo) botInlineResult2.photo;
                                tL_document = null;
                                str = tL_document;
                                tL_game = str;
                            }
                            if (!(hashMap2 == null || botInlineResult2.content == null)) {
                                hashMap2.put("originalPath", botInlineResult2.content.url);
                            }
                            AndroidUtilities.runOnUIThread(new Runnable() {
                                public void run() {
                                    if (tL_document != null) {
                                        SendMessagesHelper.getInstance(i).sendMessage(tL_document, null, str, j2, messageObject2, botInlineResult2.send_message.message, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, hashMap2, 0);
                                    } else if (tL_photo != null) {
                                        SendMessagesHelper.getInstance(i).sendMessage(tL_photo, botInlineResult2.content != null ? botInlineResult2.content.url : null, j2, messageObject2, botInlineResult2.send_message.message, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, hashMap2, 0);
                                    } else if (tL_game != null) {
                                        SendMessagesHelper.getInstance(i).sendMessage(tL_game, j2, botInlineResult2.send_message.reply_markup, hashMap2);
                                    }
                                }
                            });
                        } else if (botInlineResult2.content != null) {
                            File directory = FileLoader.getDirectory(4);
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append(Utilities.MD5(botInlineResult2.content.url));
                            stringBuilder.append(".");
                            stringBuilder.append(ImageLoader.getHttpUrlExtension(botInlineResult2.content.url, "file"));
                            File file = new File(directory, stringBuilder.toString());
                            if (file.exists()) {
                                absolutePath = file.getAbsolutePath();
                            } else {
                                absolutePath = botInlineResult2.content.url;
                            }
                            String str2 = botInlineResult2.type;
                            boolean z = true;
                            boolean z2;
                            switch (str2.hashCode()) {
                                case -1890252483:
                                    if (str2.equals("sticker")) {
                                        z2 = true;
                                        break;
                                    }
                                case 102340:
                                    if (str2.equals("gif")) {
                                        z2 = true;
                                        break;
                                    }
                                case 3143036:
                                    if (str2.equals("file")) {
                                        z2 = true;
                                        break;
                                    }
                                case 93166550:
                                    if (str2.equals(MimeTypes.BASE_TYPE_AUDIO)) {
                                        z2 = false;
                                        break;
                                    }
                                case 106642994:
                                    if (str2.equals("photo")) {
                                        z2 = true;
                                        break;
                                    }
                                case 112202875:
                                    if (str2.equals(MimeTypes.BASE_TYPE_VIDEO)) {
                                        z2 = true;
                                        break;
                                    }
                                case 112386354:
                                    if (str2.equals("voice")) {
                                        z2 = true;
                                        break;
                                    }
                                default:
                            }
                        }
                        tL_document = null;
                        str = tL_document;
                        tL_photo = str;
                        tL_game = tL_photo;
                        hashMap2.put("originalPath", botInlineResult2.content.url);
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                        if (r5.file_name == null) {
                            r5.file_name = "file";
                        }
                        if (r0.mime_type == null) {
                            r0.mime_type = "application/octet-stream";
                        }
                        if (r0.thumb == null) {
                            r0.thumb = new TL_photoSize();
                            int[] inlineResultWidthAndHeight = MessageObject.getInlineResultWidthAndHeight(botInlineResult2);
                            r0.thumb.f43w = inlineResultWidthAndHeight[0];
                            r0.thumb.f42h = inlineResultWidthAndHeight[1];
                            r0.thumb.size = 0;
                            r0.thumb.location = new TL_fileLocationUnavailable();
                            r0.thumb.type = "x";
                        }
                        tL_document = r0;
                        tL_photo = null;
                        tL_game = tL_photo;
                        str = absolutePath;
                        hashMap2.put("originalPath", botInlineResult2.content.url);
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                    }
                }).run();
            } else if (botInlineResult2.send_message instanceof TL_botInlineMessageText) {
                WebPage webPage = null;
                j2 = j;
                if (((int) j2) == 0) {
                    for (int i2 = 0; i2 < botInlineResult2.send_message.entities.size(); i2++) {
                        MessageEntity messageEntity = (MessageEntity) botInlineResult2.send_message.entities.get(i2);
                        if (messageEntity instanceof TL_messageEntityUrl) {
                            webPage = new TL_webPagePending();
                            webPage.url = botInlineResult2.send_message.message.substring(messageEntity.offset, messageEntity.offset + messageEntity.length);
                            break;
                        }
                    }
                }
                long j3 = j2;
                MessageObject messageObject3 = messageObject;
                getInstance(i).sendMessage(botInlineResult2.send_message.message, j3, messageObject3, webPage, botInlineResult2.send_message.no_webpage ^ 1, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, hashMap);
            } else {
                j2 = j;
                MessageMedia tL_messageMediaVenue;
                if (botInlineResult2.send_message instanceof TL_botInlineMessageMediaVenue) {
                    tL_messageMediaVenue = new TL_messageMediaVenue();
                    tL_messageMediaVenue.geo = botInlineResult2.send_message.geo;
                    tL_messageMediaVenue.address = botInlineResult2.send_message.address;
                    tL_messageMediaVenue.title = botInlineResult2.send_message.title;
                    tL_messageMediaVenue.provider = botInlineResult2.send_message.provider;
                    tL_messageMediaVenue.venue_id = botInlineResult2.send_message.venue_id;
                    tL_messageMediaVenue.venue_type = TtmlNode.ANONYMOUS_REGION_ID;
                    getInstance(i).sendMessage(tL_messageMediaVenue, j2, messageObject, botInlineResult2.send_message.reply_markup, (HashMap) hashMap);
                } else if (botInlineResult2.send_message instanceof TL_botInlineMessageMediaGeo) {
                    if (botInlineResult2.send_message.period != 0) {
                        tL_messageMediaVenue = new TL_messageMediaGeoLive();
                        tL_messageMediaVenue.period = botInlineResult2.send_message.period;
                        tL_messageMediaVenue.geo = botInlineResult2.send_message.geo;
                        getInstance(i).sendMessage(tL_messageMediaVenue, j2, messageObject, botInlineResult2.send_message.reply_markup, (HashMap) hashMap);
                    } else {
                        tL_messageMediaVenue = new TL_messageMediaGeo();
                        tL_messageMediaVenue.geo = botInlineResult2.send_message.geo;
                        getInstance(i).sendMessage(tL_messageMediaVenue, j2, messageObject, botInlineResult2.send_message.reply_markup, (HashMap) hashMap);
                    }
                } else if (botInlineResult2.send_message instanceof TL_botInlineMessageMediaContact) {
                    User tL_user = new TL_user();
                    tL_user.phone = botInlineResult2.send_message.phone_number;
                    tL_user.first_name = botInlineResult2.send_message.first_name;
                    tL_user.last_name = botInlineResult2.send_message.last_name;
                    getInstance(i).sendMessage(tL_user, j2, messageObject, botInlineResult2.send_message.reply_markup, (HashMap) hashMap);
                }
            }
        }
    }

    private static String getTrimmedString(String str) {
        String trim = str.trim();
        if (trim.length() == 0) {
            return trim;
        }
        while (str.startsWith("\n")) {
            str = str.substring(1);
        }
        while (str.endsWith("\n")) {
            str = str.substring(0, str.length() - 1);
        }
        return str;
    }

    public static void prepareSendingText(final String str, final long j) {
        final int i = UserConfig.selectedAccount;
        MessagesStorage.getInstance(i).getStorageQueue().postRunnable(new Runnable() {

            /* renamed from: org.telegram.messenger.SendMessagesHelper$20$1 */
            class C04891 implements Runnable {

                /* renamed from: org.telegram.messenger.SendMessagesHelper$20$1$1 */
                class C04881 implements Runnable {
                    C04881() {
                    }

                    public void run() {
                        String access$1700 = SendMessagesHelper.getTrimmedString(str);
                        if (access$1700.length() != 0) {
                            int ceil = (int) Math.ceil((double) (((float) access$1700.length()) / 4096.0f));
                            int i = 0;
                            while (i < ceil) {
                                int i2 = i * 4096;
                                i++;
                                SendMessagesHelper.getInstance(i).sendMessage(access$1700.substring(i2, Math.min(i * 4096, access$1700.length())), j, null, null, true, null, null, null);
                            }
                        }
                    }
                }

                C04891() {
                }

                public void run() {
                    AndroidUtilities.runOnUIThread(new C04881());
                }
            }

            public void run() {
                Utilities.stageQueue.postRunnable(new C04891());
            }
        });
    }

    public static void prepareSendingMedia(ArrayList<SendingMediaInfo> arrayList, long j, MessageObject messageObject, InputContentInfoCompat inputContentInfoCompat, boolean z, boolean z2) {
        if (!arrayList.isEmpty()) {
            final int i = UserConfig.selectedAccount;
            final ArrayList<SendingMediaInfo> arrayList2 = arrayList;
            final long j2 = j;
            final boolean z3 = z;
            final boolean z4 = z2;
            final MessageObject messageObject2 = messageObject;
            final InputContentInfoCompat inputContentInfoCompat2 = inputContentInfoCompat;
            mediaSendQueue.postRunnable(new Runnable() {
                public void run() {
                    int peerLayerVersion;
                    int i;
                    C18201 c18201;
                    ArrayList arrayList;
                    ArrayList arrayList2;
                    ArrayList arrayList3;
                    ArrayList arrayList4;
                    String str;
                    long j;
                    int i2;
                    boolean z;
                    long j2;
                    final SendingMediaInfo sendingMediaInfo;
                    long j3;
                    HashMap hashMap;
                    MessagesStorage instance;
                    String str2;
                    long j4;
                    int i3;
                    Document document;
                    TLObject tLObject;
                    StringBuilder stringBuilder;
                    ArrayList arrayList5;
                    File file;
                    TL_document tL_document;
                    int i4;
                    TL_documentAttributeFilename tL_documentAttributeFilename;
                    File file2;
                    StringBuilder stringBuilder2;
                    File file3;
                    float f;
                    Bitmap loadBitmap;
                    Throwable e;
                    Throwable th;
                    TL_document tL_document2;
                    String str3;
                    final String file4;
                    long j5;
                    C18201 c182012;
                    int i5;
                    final SendingMediaInfo sendingMediaInfo2;
                    ArrayList arrayList6;
                    final HashMap hashMap2;
                    int i6;
                    boolean z2;
                    int i7;
                    HashMap hashMap3;
                    Object obj;
                    TL_photo tL_photo;
                    boolean z3;
                    TL_photoSize tL_photoSize;
                    TL_photo tL_photo2;
                    boolean z4;
                    HashMap hashMap4;
                    int i8;
                    StringBuilder stringBuilder3;
                    String str4;
                    String str5;
                    Object obj2;
                    ArrayList arrayList7;
                    ArrayList arrayList8;
                    ArrayList arrayList9;
                    File file5;
                    StringBuilder stringBuilder4;
                    MediaSendPrepareWorker mediaSendPrepareWorker;
                    TL_photo tL_photo3;
                    TL_photo tL_photo4;
                    final HashMap hashMap5;
                    AbstractSerializedData serializedData;
                    int i9;
                    StringBuilder stringBuilder5;
                    ArrayList arrayList10;
                    VideoEditedInfo access$2000;
                    StringBuilder stringBuilder6;
                    final SendingMediaInfo sendingMediaInfo3;
                    String str6;
                    final MediaSendPrepareWorker mediaSendPrepareWorker2;
                    long currentTimeMillis = System.currentTimeMillis();
                    boolean size = arrayList2.size();
                    boolean z5 = true;
                    boolean z6 = ((int) j2) == 0;
                    if (z6) {
                        EncryptedChat encryptedChat = MessagesController.getInstance(i).getEncryptedChat(Integer.valueOf((int) (j2 >> 32)));
                        if (encryptedChat != null) {
                            peerLayerVersion = AndroidUtilities.getPeerLayerVersion(encryptedChat.layer);
                            if (z6) {
                                if (peerLayerVersion >= 73) {
                                }
                                i = peerLayerVersion;
                                c18201 = null;
                                arrayList = null;
                                arrayList2 = arrayList;
                                arrayList3 = arrayList2;
                                arrayList4 = arrayList3;
                                str = arrayList4;
                                j = 0;
                                i2 = 0;
                                z = false;
                                j2 = 0;
                                while (z < size) {
                                    sendingMediaInfo = (SendingMediaInfo) arrayList2.get(z);
                                    if (z4) {
                                        if (z6) {
                                            peerLayerVersion = i;
                                            if (peerLayerVersion >= 73) {
                                            }
                                        } else {
                                            peerLayerVersion = i;
                                        }
                                        if (size > z5 && i2 % 10 == 0) {
                                            j2 = Utilities.random.nextLong();
                                            i = 0;
                                            j3 = j2;
                                            if (sendingMediaInfo.searchImage == null) {
                                                if (sendingMediaInfo.searchImage.type != z5) {
                                                    hashMap = new HashMap();
                                                    if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                                        if (z6) {
                                                            instance = MessagesStorage.getInstance(i);
                                                            str2 = sendingMediaInfo.searchImage.imageUrl;
                                                            if (z6) {
                                                                j4 = j3;
                                                                i3 = 1;
                                                            } else {
                                                                j4 = j3;
                                                                i3 = 4;
                                                            }
                                                            document = (Document) instance.getSentFile(str2, i3);
                                                            if (document instanceof TL_document) {
                                                                tLObject = (TL_document) document;
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                                stringBuilder.append(".");
                                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                                arrayList5 = arrayList;
                                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                            }
                                                        } else {
                                                            j4 = j3;
                                                        }
                                                        tLObject = null;
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                        stringBuilder.append(".");
                                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                        arrayList5 = arrayList;
                                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                    } else {
                                                        tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                                        j4 = j3;
                                                        arrayList5 = arrayList;
                                                        file = FileLoader.getPathToAttach(tLObject, z5);
                                                    }
                                                    if (tLObject != null) {
                                                        if (sendingMediaInfo.searchImage.localUrl != null) {
                                                            hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                                        }
                                                        tL_document = new TL_document();
                                                        i4 = z;
                                                        tL_document.id = 0;
                                                        tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                        tL_documentAttributeFilename.file_name = "animation.gif";
                                                        tL_document.attributes.add(tL_documentAttributeFilename);
                                                        tL_document.size = sendingMediaInfo.searchImage.size;
                                                        tL_document.dc_id = 0;
                                                        if (file.toString().endsWith("mp4")) {
                                                            tL_document.mime_type = "image/gif";
                                                        } else {
                                                            tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                            tL_document.attributes.add(new TL_documentAttributeAnimated());
                                                        }
                                                        if (file.exists()) {
                                                            file = null;
                                                            file2 = null;
                                                        } else {
                                                            file2 = file;
                                                        }
                                                        if (file == null) {
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                            stringBuilder2.append(".");
                                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                            file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                            file = file3.exists() ? null : file3;
                                                        }
                                                        if (file != null) {
                                                            try {
                                                                if (file.getAbsolutePath().endsWith("mp4")) {
                                                                    f = 90.0f;
                                                                    try {
                                                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                                    } catch (Exception e2) {
                                                                        e = e2;
                                                                        th = e;
                                                                        FileLog.m3e(th);
                                                                        if (tL_document.thumb == null) {
                                                                            tL_document.thumb = new TL_photoSize();
                                                                            tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                                            tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                                            tL_document.thumb.size = 0;
                                                                            tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                                            tL_document.thumb.type = "x";
                                                                        }
                                                                        tL_document2 = tL_document;
                                                                        str3 = sendingMediaInfo.searchImage.imageUrl;
                                                                        if (file2 == null) {
                                                                        }
                                                                        file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                                                        hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                                        j5 = currentTimeMillis;
                                                                        currentTimeMillis = j4;
                                                                        c182012 = c18201;
                                                                        i5 = i4;
                                                                        sendingMediaInfo2 = sendingMediaInfo;
                                                                        arrayList6 = arrayList5;
                                                                        hashMap2 = hashMap;
                                                                        AndroidUtilities.runOnUIThread(new Runnable() {
                                                                            public void run() {
                                                                                SendMessagesHelper.getInstance(i).sendMessage(tL_document2, null, file4, j2, messageObject2, sendingMediaInfo2.caption, sendingMediaInfo2.entities, null, hashMap2, 0);
                                                                            }
                                                                        });
                                                                        i6 = peerLayerVersion;
                                                                        z2 = z6;
                                                                        i7 = i5;
                                                                        j = j2;
                                                                        hashMap3 = c182012;
                                                                        arrayList = arrayList6;
                                                                        z = i7 + 1;
                                                                        obj = hashMap3;
                                                                        j2 = currentTimeMillis;
                                                                        i2 = i;
                                                                        i = i6;
                                                                        z6 = z2;
                                                                        currentTimeMillis = j5;
                                                                        z5 = true;
                                                                    }
                                                                } else {
                                                                    try {
                                                                        loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                                        f = 90.0f;
                                                                    } catch (Throwable e3) {
                                                                        th = e3;
                                                                        FileLog.m3e(th);
                                                                        if (tL_document.thumb == null) {
                                                                            tL_document.thumb = new TL_photoSize();
                                                                            tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                                            tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                                            tL_document.thumb.size = 0;
                                                                            tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                                            tL_document.thumb.type = "x";
                                                                        }
                                                                        tL_document2 = tL_document;
                                                                        str3 = sendingMediaInfo.searchImage.imageUrl;
                                                                        file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                                                        hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                                        j5 = currentTimeMillis;
                                                                        currentTimeMillis = j4;
                                                                        c182012 = c18201;
                                                                        i5 = i4;
                                                                        sendingMediaInfo2 = sendingMediaInfo;
                                                                        arrayList6 = arrayList5;
                                                                        hashMap2 = hashMap;
                                                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                                        i6 = peerLayerVersion;
                                                                        z2 = z6;
                                                                        i7 = i5;
                                                                        j = j2;
                                                                        hashMap3 = c182012;
                                                                        arrayList = arrayList6;
                                                                        z = i7 + 1;
                                                                        obj = hashMap3;
                                                                        j2 = currentTimeMillis;
                                                                        i2 = i;
                                                                        i = i6;
                                                                        z6 = z2;
                                                                        currentTimeMillis = j5;
                                                                        z5 = true;
                                                                    }
                                                                }
                                                                if (loadBitmap != null) {
                                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                                    loadBitmap.recycle();
                                                                }
                                                            } catch (Exception e4) {
                                                                e3 = e4;
                                                                th = e3;
                                                                FileLog.m3e(th);
                                                                if (tL_document.thumb == null) {
                                                                    tL_document.thumb = new TL_photoSize();
                                                                    tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                                    tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                                    tL_document.thumb.size = 0;
                                                                    tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                                    tL_document.thumb.type = "x";
                                                                }
                                                                tL_document2 = tL_document;
                                                                str3 = sendingMediaInfo.searchImage.imageUrl;
                                                                if (file2 == null) {
                                                                }
                                                                file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                                                hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                                j5 = currentTimeMillis;
                                                                currentTimeMillis = j4;
                                                                c182012 = c18201;
                                                                i5 = i4;
                                                                sendingMediaInfo2 = sendingMediaInfo;
                                                                arrayList6 = arrayList5;
                                                                hashMap2 = hashMap;
                                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                                i6 = peerLayerVersion;
                                                                z2 = z6;
                                                                i7 = i5;
                                                                j = j2;
                                                                hashMap3 = c182012;
                                                                arrayList = arrayList6;
                                                                z = i7 + 1;
                                                                obj = hashMap3;
                                                                j2 = currentTimeMillis;
                                                                i2 = i;
                                                                i = i6;
                                                                z6 = z2;
                                                                currentTimeMillis = j5;
                                                                z5 = true;
                                                            }
                                                        }
                                                        if (tL_document.thumb == null) {
                                                            tL_document.thumb = new TL_photoSize();
                                                            tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                            tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                            tL_document.thumb.size = 0;
                                                            tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                            tL_document.thumb.type = "x";
                                                        }
                                                        tL_document2 = tL_document;
                                                    } else {
                                                        i4 = z;
                                                        file2 = file;
                                                        tL_document2 = tLObject;
                                                    }
                                                    str3 = sendingMediaInfo.searchImage.imageUrl;
                                                    if (file2 == null) {
                                                    }
                                                    file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                                    if (!(hashMap == null || sendingMediaInfo.searchImage.imageUrl == null)) {
                                                        hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                    }
                                                    j5 = currentTimeMillis;
                                                    currentTimeMillis = j4;
                                                    c182012 = c18201;
                                                    i5 = i4;
                                                    sendingMediaInfo2 = sendingMediaInfo;
                                                    arrayList6 = arrayList5;
                                                    hashMap2 = hashMap;
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                } else {
                                                    arrayList6 = arrayList;
                                                    i5 = z;
                                                    j5 = currentTimeMillis;
                                                    c182012 = c18201;
                                                    currentTimeMillis = j3;
                                                    if (z6 && sendingMediaInfo.ttl == 0) {
                                                        tL_photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(sendingMediaInfo.searchImage.imageUrl, !z6 ? 0 : 3);
                                                    } else {
                                                        tL_photo = null;
                                                    }
                                                    if (tL_photo != null) {
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                        stringBuilder.append(".");
                                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                        if (file.exists() && file.length() != 0) {
                                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                                            if (tL_photo != null) {
                                                                z3 = false;
                                                                if (tL_photo == null) {
                                                                    stringBuilder2 = new StringBuilder();
                                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                                    stringBuilder2.append(".");
                                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                                    file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                                    if (file2.exists()) {
                                                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                                    }
                                                                    if (tL_photo == null) {
                                                                        tL_photo = new TL_photo();
                                                                        tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                                        tL_photoSize = new TL_photoSize();
                                                                        tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                                        tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                                        tL_photoSize.size = 0;
                                                                        tL_photoSize.location = new TL_fileLocationUnavailable();
                                                                        tL_photoSize.type = "x";
                                                                        tL_photo.sizes.add(tL_photoSize);
                                                                    }
                                                                }
                                                                tL_photo2 = tL_photo;
                                                                z4 = z3;
                                                            }
                                                        }
                                                        z3 = true;
                                                        if (tL_photo == null) {
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                            stringBuilder2.append(".");
                                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                            file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                            if (file2.exists()) {
                                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                            }
                                                            if (tL_photo == null) {
                                                                tL_photo = new TL_photo();
                                                                tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                                tL_photoSize = new TL_photoSize();
                                                                tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                                tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                                tL_photoSize.size = 0;
                                                                tL_photoSize.location = new TL_fileLocationUnavailable();
                                                                tL_photoSize.type = "x";
                                                                tL_photo.sizes.add(tL_photoSize);
                                                            }
                                                        }
                                                        tL_photo2 = tL_photo;
                                                        z4 = z3;
                                                    } else {
                                                        tL_photo2 = tL_photo;
                                                        z4 = true;
                                                    }
                                                    if (tL_photo2 != null) {
                                                        hashMap4 = new HashMap();
                                                        if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                            hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                        }
                                                        if (z4) {
                                                            i8 = i + 1;
                                                            stringBuilder3 = new StringBuilder();
                                                            stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                            stringBuilder3.append(currentTimeMillis);
                                                            hashMap4.put("groupId", stringBuilder3.toString());
                                                            if (i8 != 10) {
                                                                if (i5 == size - 1) {
                                                                    i = i8;
                                                                }
                                                            }
                                                            hashMap4.put("final", "1");
                                                            i = i8;
                                                            j2 = 0;
                                                        }
                                                        sendingMediaInfo2 = sendingMediaInfo;
                                                        hashMap2 = hashMap4;
                                                        AndroidUtilities.runOnUIThread(new Runnable() {
                                                            public void run() {
                                                                SendMessagesHelper.getInstance(i).sendMessage(tL_photo2, z4 ? sendingMediaInfo2.searchImage.imageUrl : null, j2, messageObject2, sendingMediaInfo2.caption, sendingMediaInfo2.entities, null, hashMap2, sendingMediaInfo2.ttl);
                                                            }
                                                        });
                                                    }
                                                }
                                                i6 = peerLayerVersion;
                                                z2 = z6;
                                                i7 = i5;
                                                j = j2;
                                                hashMap3 = c182012;
                                                arrayList = arrayList6;
                                            } else {
                                                arrayList6 = arrayList;
                                                z5 = z;
                                                j5 = currentTimeMillis;
                                                c182012 = c18201;
                                                currentTimeMillis = j3;
                                                if (sendingMediaInfo.isVideo) {
                                                    i6 = peerLayerVersion;
                                                    z2 = z6;
                                                    i7 = z5;
                                                    str4 = sendingMediaInfo.path;
                                                    str3 = sendingMediaInfo.path;
                                                    if (str3 == null && sendingMediaInfo.uri != null) {
                                                        str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                                        str4 = sendingMediaInfo.uri.toString();
                                                    }
                                                    if (z3) {
                                                        str = FileLoader.getFileExtension(new File(str3));
                                                    } else if (str3 == null && (str3.endsWith(".gif") || str3.endsWith(".webp"))) {
                                                        str = str3.endsWith(".gif") ? "gif" : "webp";
                                                    } else {
                                                        if (str3 == null && sendingMediaInfo.uri != null) {
                                                            if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                                str4 = sendingMediaInfo.uri.toString();
                                                                str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                                str = "gif";
                                                            } else if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                                str4 = sendingMediaInfo.uri.toString();
                                                                str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                                str = "webp";
                                                            }
                                                        }
                                                        str5 = str4;
                                                        obj2 = null;
                                                        if (obj2 == null) {
                                                            if (arrayList6 != null) {
                                                                arrayList = new ArrayList();
                                                                arrayList7 = new ArrayList();
                                                                arrayList8 = new ArrayList();
                                                                arrayList9 = new ArrayList();
                                                            } else {
                                                                arrayList7 = arrayList2;
                                                                arrayList8 = arrayList3;
                                                                arrayList9 = arrayList4;
                                                                arrayList = arrayList6;
                                                            }
                                                            arrayList.add(str3);
                                                            arrayList7.add(str5);
                                                            arrayList8.add(sendingMediaInfo.caption);
                                                            arrayList9.add(sendingMediaInfo.entities);
                                                            arrayList2 = arrayList7;
                                                            arrayList3 = arrayList8;
                                                            arrayList4 = arrayList9;
                                                            j = j2;
                                                            hashMap3 = c182012;
                                                        } else {
                                                            if (str3 == null) {
                                                                file5 = new File(str3);
                                                                stringBuilder4 = new StringBuilder();
                                                                stringBuilder4.append(str5);
                                                                stringBuilder4.append(file5.length());
                                                                stringBuilder4.append("_");
                                                                stringBuilder4.append(file5.lastModified());
                                                                str4 = stringBuilder4.toString();
                                                            } else {
                                                                str4 = null;
                                                            }
                                                            if (c182012 == null) {
                                                                hashMap3 = c182012;
                                                                mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                                if (tL_photo3 == null) {
                                                                    try {
                                                                        mediaSendPrepareWorker.sync.await();
                                                                    } catch (Throwable e32) {
                                                                        FileLog.m3e(e32);
                                                                    }
                                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                                }
                                                            } else {
                                                                hashMap3 = c182012;
                                                                if (z2 && sendingMediaInfo.ttl == 0) {
                                                                    tL_photo4 = (TL_photo) MessagesStorage.getInstance(i).getSentFile(str4, !z2 ? 0 : 3);
                                                                    if (tL_photo4 == null && sendingMediaInfo.uri != null) {
                                                                        tL_photo4 = (TL_photo) MessagesStorage.getInstance(i).getSentFile(AndroidUtilities.getPath(sendingMediaInfo.uri), !z2 ? 0 : 3);
                                                                    }
                                                                    tL_photo3 = tL_photo4;
                                                                } else {
                                                                    tL_photo3 = null;
                                                                }
                                                                if (tL_photo3 == null) {
                                                                    tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                                }
                                                            }
                                                            if (tL_photo3 == null) {
                                                                hashMap5 = new HashMap();
                                                                z4 = sendingMediaInfo.masks == null && !sendingMediaInfo.masks.isEmpty();
                                                                tL_photo3.has_stickers = z4;
                                                                if (z4) {
                                                                    serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                                    serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                                    for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                        ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                                    }
                                                                    hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                                }
                                                                if (str4 != null) {
                                                                    hashMap5.put("originalPath", str4);
                                                                }
                                                                if (z4) {
                                                                    i8 = i;
                                                                } else {
                                                                    i8 = i + 1;
                                                                    stringBuilder5 = new StringBuilder();
                                                                    stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                                    stringBuilder5.append(currentTimeMillis);
                                                                    hashMap5.put("groupId", stringBuilder5.toString());
                                                                    if (i8 == 10 || i7 == size - 1) {
                                                                        hashMap5.put("final", "1");
                                                                        j2 = 0;
                                                                    }
                                                                }
                                                                AndroidUtilities.runOnUIThread(new Runnable() {
                                                                    public void run() {
                                                                        SendMessagesHelper.getInstance(i).sendMessage(tL_photo3, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities, null, hashMap5, sendingMediaInfo.ttl);
                                                                    }
                                                                });
                                                                i = i8;
                                                                j = j2;
                                                            } else {
                                                                if (arrayList6 != null) {
                                                                    arrayList = new ArrayList();
                                                                    arrayList8 = new ArrayList();
                                                                    arrayList9 = new ArrayList();
                                                                    arrayList10 = new ArrayList();
                                                                } else {
                                                                    arrayList8 = arrayList2;
                                                                    arrayList9 = arrayList3;
                                                                    arrayList10 = arrayList4;
                                                                    arrayList = arrayList6;
                                                                }
                                                                arrayList.add(str3);
                                                                arrayList8.add(str4);
                                                                arrayList9.add(sendingMediaInfo.caption);
                                                                arrayList10.add(sendingMediaInfo.entities);
                                                                arrayList2 = arrayList8;
                                                                arrayList3 = arrayList9;
                                                                arrayList4 = arrayList10;
                                                                j = j2;
                                                            }
                                                        }
                                                    }
                                                    str5 = str4;
                                                    obj2 = 1;
                                                    if (obj2 == null) {
                                                        if (str3 == null) {
                                                            str4 = null;
                                                        } else {
                                                            file5 = new File(str3);
                                                            stringBuilder4 = new StringBuilder();
                                                            stringBuilder4.append(str5);
                                                            stringBuilder4.append(file5.length());
                                                            stringBuilder4.append("_");
                                                            stringBuilder4.append(file5.lastModified());
                                                            str4 = stringBuilder4.toString();
                                                        }
                                                        if (c182012 == null) {
                                                            hashMap3 = c182012;
                                                            if (z2) {
                                                            }
                                                            tL_photo3 = null;
                                                            if (tL_photo3 == null) {
                                                                tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                            }
                                                        } else {
                                                            hashMap3 = c182012;
                                                            mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                            if (tL_photo3 == null) {
                                                                mediaSendPrepareWorker.sync.await();
                                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                            }
                                                        }
                                                        if (tL_photo3 == null) {
                                                            if (arrayList6 != null) {
                                                                arrayList8 = arrayList2;
                                                                arrayList9 = arrayList3;
                                                                arrayList10 = arrayList4;
                                                                arrayList = arrayList6;
                                                            } else {
                                                                arrayList = new ArrayList();
                                                                arrayList8 = new ArrayList();
                                                                arrayList9 = new ArrayList();
                                                                arrayList10 = new ArrayList();
                                                            }
                                                            arrayList.add(str3);
                                                            arrayList8.add(str4);
                                                            arrayList9.add(sendingMediaInfo.caption);
                                                            arrayList10.add(sendingMediaInfo.entities);
                                                            arrayList2 = arrayList8;
                                                            arrayList3 = arrayList9;
                                                            arrayList4 = arrayList10;
                                                            j = j2;
                                                        } else {
                                                            hashMap5 = new HashMap();
                                                            if (sendingMediaInfo.masks == null) {
                                                            }
                                                            tL_photo3.has_stickers = z4;
                                                            if (z4) {
                                                                serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                                serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                                for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                    ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                                }
                                                                hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                            }
                                                            if (str4 != null) {
                                                                hashMap5.put("originalPath", str4);
                                                            }
                                                            if (z4) {
                                                                i8 = i;
                                                            } else {
                                                                i8 = i + 1;
                                                                stringBuilder5 = new StringBuilder();
                                                                stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                                stringBuilder5.append(currentTimeMillis);
                                                                hashMap5.put("groupId", stringBuilder5.toString());
                                                                hashMap5.put("final", "1");
                                                                j2 = 0;
                                                            }
                                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                            i = i8;
                                                            j = j2;
                                                        }
                                                    } else {
                                                        if (arrayList6 != null) {
                                                            arrayList7 = arrayList2;
                                                            arrayList8 = arrayList3;
                                                            arrayList9 = arrayList4;
                                                            arrayList = arrayList6;
                                                        } else {
                                                            arrayList = new ArrayList();
                                                            arrayList7 = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList7.add(str5);
                                                        arrayList8.add(sendingMediaInfo.caption);
                                                        arrayList9.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList7;
                                                        arrayList3 = arrayList8;
                                                        arrayList4 = arrayList9;
                                                        j = j2;
                                                        hashMap3 = c182012;
                                                    }
                                                } else {
                                                    if (z3) {
                                                        access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                                    } else {
                                                        access$2000 = null;
                                                    }
                                                    if (!z3 || (access$2000 == null && !sendingMediaInfo.path.endsWith("mp4"))) {
                                                        i6 = peerLayerVersion;
                                                        z2 = z6;
                                                        i7 = z5;
                                                        sendingMediaInfo = sendingMediaInfo;
                                                        SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                                    } else {
                                                        boolean z7;
                                                        long j6;
                                                        long j7;
                                                        int i10;
                                                        TL_document tL_document3;
                                                        str4 = sendingMediaInfo.path;
                                                        str3 = sendingMediaInfo.path;
                                                        file = new File(str3);
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append(str3);
                                                        String str7 = str4;
                                                        stringBuilder3.append(file.length());
                                                        stringBuilder3.append("_");
                                                        stringBuilder3.append(file.lastModified());
                                                        str4 = stringBuilder3.toString();
                                                        if (access$2000 != null) {
                                                            z7 = access$2000.muted;
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append(str4);
                                                            stringBuilder.append(access$2000.estimatedDuration);
                                                            stringBuilder.append("_");
                                                            stringBuilder.append(access$2000.startTime);
                                                            stringBuilder.append("_");
                                                            stringBuilder.append(access$2000.endTime);
                                                            stringBuilder.append(access$2000.muted ? "_m" : TtmlNode.ANONYMOUS_REGION_ID);
                                                            str4 = stringBuilder.toString();
                                                            if (access$2000.resultWidth != access$2000.originalWidth) {
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append(str4);
                                                                stringBuilder.append("_");
                                                                stringBuilder.append(access$2000.resultWidth);
                                                                str4 = stringBuilder.toString();
                                                            }
                                                            j6 = 0;
                                                            j7 = access$2000.startTime >= 0 ? access$2000.startTime : 0;
                                                        } else {
                                                            j6 = 0;
                                                            j7 = 0;
                                                            z7 = false;
                                                        }
                                                        if (z6 || sendingMediaInfo.ttl != 0) {
                                                            i10 = z5;
                                                            tL_document = null;
                                                        } else {
                                                            i10 = z5;
                                                            tL_document = (TL_document) MessagesStorage.getInstance(i).getSentFile(str4, !z6 ? 2 : 5);
                                                        }
                                                        if (tL_document == null) {
                                                            TL_documentAttributeVideo tL_documentAttributeVideo;
                                                            Bitmap access$2100 = SendMessagesHelper.createVideoThumbnail(sendingMediaInfo.path, j7);
                                                            if (access$2100 == null) {
                                                                access$2100 = ThumbnailUtils.createVideoThumbnail(sendingMediaInfo.path, 1);
                                                            }
                                                            PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(access$2100, 90.0f, 90.0f, 55, z6);
                                                            if (!(access$2100 == null || scaleAndSaveImage == null)) {
                                                                access$2100 = null;
                                                            }
                                                            tL_document3 = new TL_document();
                                                            tL_document3.thumb = scaleAndSaveImage;
                                                            if (tL_document3.thumb == null) {
                                                                tL_document3.thumb = new TL_photoSizeEmpty();
                                                                tL_document3.thumb.type = "s";
                                                            } else {
                                                                tL_document3.thumb.type = "s";
                                                            }
                                                            tL_document3.mime_type = MimeTypes.VIDEO_MP4;
                                                            UserConfig.getInstance(i).saveConfig(false);
                                                            if (!z6) {
                                                                tL_documentAttributeVideo = new TL_documentAttributeVideo();
                                                                tL_documentAttributeVideo.supports_streaming = true;
                                                            } else if (peerLayerVersion >= 66) {
                                                                tL_documentAttributeVideo = new TL_documentAttributeVideo();
                                                            } else {
                                                                tL_documentAttributeVideo = new TL_documentAttributeVideo_layer65();
                                                            }
                                                            tL_document3.attributes.add(tL_documentAttributeVideo);
                                                            Bitmap bitmap;
                                                            if (access$2000 == null || !access$2000.needConvert()) {
                                                                bitmap = access$2100;
                                                                if (file.exists()) {
                                                                    tL_document3.size = (int) file.length();
                                                                }
                                                                SendMessagesHelper.fillVideoAttribute(sendingMediaInfo.path, tL_documentAttributeVideo, null);
                                                                loadBitmap = bitmap;
                                                            } else {
                                                                if (access$2000.muted) {
                                                                    tL_document3.attributes.add(new TL_documentAttributeAnimated());
                                                                    SendMessagesHelper.fillVideoAttribute(sendingMediaInfo.path, tL_documentAttributeVideo, access$2000);
                                                                    access$2000.originalWidth = tL_documentAttributeVideo.w;
                                                                    access$2000.originalHeight = tL_documentAttributeVideo.h;
                                                                    tL_documentAttributeVideo.w = access$2000.resultWidth;
                                                                    tL_documentAttributeVideo.h = access$2000.resultHeight;
                                                                    bitmap = access$2100;
                                                                } else {
                                                                    bitmap = access$2100;
                                                                    tL_documentAttributeVideo.duration = (int) (access$2000.estimatedDuration / 1000);
                                                                    if (access$2000.rotationValue != 90) {
                                                                        if (access$2000.rotationValue != 270) {
                                                                            tL_documentAttributeVideo.w = access$2000.resultWidth;
                                                                            tL_documentAttributeVideo.h = access$2000.resultHeight;
                                                                        }
                                                                    }
                                                                    tL_documentAttributeVideo.w = access$2000.resultHeight;
                                                                    tL_documentAttributeVideo.h = access$2000.resultWidth;
                                                                }
                                                                tL_document3.size = (int) access$2000.estimatedSize;
                                                                stringBuilder = new StringBuilder();
                                                                stringBuilder.append("-2147483648_");
                                                                stringBuilder.append(SharedConfig.getLastLocalId());
                                                                stringBuilder.append(".mp4");
                                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                                SharedConfig.saveConfig();
                                                                str7 = file.getAbsolutePath();
                                                                loadBitmap = bitmap;
                                                            }
                                                        } else {
                                                            tL_document3 = tL_document;
                                                            loadBitmap = null;
                                                        }
                                                        HashMap hashMap6 = new HashMap();
                                                        if (str4 != null) {
                                                            hashMap6.put("originalPath", str4);
                                                        }
                                                        if (z7 || !z4) {
                                                            i7 = i10;
                                                        } else {
                                                            i8 = i + 1;
                                                            StringBuilder stringBuilder7 = new StringBuilder();
                                                            stringBuilder7.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                            stringBuilder7.append(currentTimeMillis);
                                                            hashMap6.put("groupId", stringBuilder7.toString());
                                                            if (i8 != 10) {
                                                                i7 = i10;
                                                                if (i7 != size - 1) {
                                                                    i = i8;
                                                                }
                                                            } else {
                                                                i7 = i10;
                                                            }
                                                            hashMap6.put("final", "1");
                                                            i = i8;
                                                            j2 = j6;
                                                        }
                                                        SendingMediaInfo sendingMediaInfo4 = sendingMediaInfo;
                                                        final VideoEditedInfo videoEditedInfo = access$2000;
                                                        final String str8 = str7;
                                                        i6 = peerLayerVersion;
                                                        final SendingMediaInfo sendingMediaInfo5 = sendingMediaInfo4;
                                                        z2 = z6;
                                                        final HashMap hashMap7 = hashMap6;
                                                        AndroidUtilities.runOnUIThread(new Runnable(null) {
                                                            public void run() {
                                                                if (!(loadBitmap == null || null == null)) {
                                                                    ImageLoader.getInstance().putImageToCache(new BitmapDrawable(loadBitmap), null);
                                                                }
                                                                SendMessagesHelper.getInstance(i).sendMessage(tL_document3, videoEditedInfo, str8, j2, messageObject2, sendingMediaInfo5.caption, sendingMediaInfo5.entities, null, hashMap7, sendingMediaInfo5.ttl);
                                                            }
                                                        });
                                                    }
                                                    j = j2;
                                                    hashMap3 = c182012;
                                                }
                                                arrayList = arrayList6;
                                            }
                                            z = i7 + 1;
                                            obj = hashMap3;
                                            j2 = currentTimeMillis;
                                            i2 = i;
                                            i = i6;
                                            z6 = z2;
                                            currentTimeMillis = j5;
                                            z5 = true;
                                        }
                                    } else {
                                        peerLayerVersion = i;
                                    }
                                    i = i2;
                                    j3 = j2;
                                    j2 = j;
                                    if (sendingMediaInfo.searchImage == null) {
                                        arrayList6 = arrayList;
                                        z5 = z;
                                        j5 = currentTimeMillis;
                                        c182012 = c18201;
                                        currentTimeMillis = j3;
                                        if (sendingMediaInfo.isVideo) {
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = z5;
                                            str4 = sendingMediaInfo.path;
                                            str3 = sendingMediaInfo.path;
                                            str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                            str4 = sendingMediaInfo.uri.toString();
                                            if (z3) {
                                                str = FileLoader.getFileExtension(new File(str3));
                                            } else {
                                                if (str3 == null) {
                                                }
                                                if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                    str4 = sendingMediaInfo.uri.toString();
                                                    str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                    str = "gif";
                                                } else {
                                                    if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                        str4 = sendingMediaInfo.uri.toString();
                                                        str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                        str = "webp";
                                                    }
                                                    str5 = str4;
                                                    obj2 = null;
                                                    if (obj2 == null) {
                                                        if (arrayList6 != null) {
                                                            arrayList = new ArrayList();
                                                            arrayList7 = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                        } else {
                                                            arrayList7 = arrayList2;
                                                            arrayList8 = arrayList3;
                                                            arrayList9 = arrayList4;
                                                            arrayList = arrayList6;
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList7.add(str5);
                                                        arrayList8.add(sendingMediaInfo.caption);
                                                        arrayList9.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList7;
                                                        arrayList3 = arrayList8;
                                                        arrayList4 = arrayList9;
                                                        j = j2;
                                                        hashMap3 = c182012;
                                                    } else {
                                                        if (str3 == null) {
                                                            file5 = new File(str3);
                                                            stringBuilder4 = new StringBuilder();
                                                            stringBuilder4.append(str5);
                                                            stringBuilder4.append(file5.length());
                                                            stringBuilder4.append("_");
                                                            stringBuilder4.append(file5.lastModified());
                                                            str4 = stringBuilder4.toString();
                                                        } else {
                                                            str4 = null;
                                                        }
                                                        if (c182012 == null) {
                                                            hashMap3 = c182012;
                                                            mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                            if (tL_photo3 == null) {
                                                                mediaSendPrepareWorker.sync.await();
                                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                            }
                                                        } else {
                                                            hashMap3 = c182012;
                                                            if (z2) {
                                                            }
                                                            tL_photo3 = null;
                                                            if (tL_photo3 == null) {
                                                                tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                            }
                                                        }
                                                        if (tL_photo3 == null) {
                                                            hashMap5 = new HashMap();
                                                            if (sendingMediaInfo.masks == null) {
                                                            }
                                                            tL_photo3.has_stickers = z4;
                                                            if (z4) {
                                                                serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                                serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                                for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                    ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                                }
                                                                hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                            }
                                                            if (str4 != null) {
                                                                hashMap5.put("originalPath", str4);
                                                            }
                                                            if (z4) {
                                                                i8 = i + 1;
                                                                stringBuilder5 = new StringBuilder();
                                                                stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                                stringBuilder5.append(currentTimeMillis);
                                                                hashMap5.put("groupId", stringBuilder5.toString());
                                                                hashMap5.put("final", "1");
                                                                j2 = 0;
                                                            } else {
                                                                i8 = i;
                                                            }
                                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                            i = i8;
                                                            j = j2;
                                                        } else {
                                                            if (arrayList6 != null) {
                                                                arrayList = new ArrayList();
                                                                arrayList8 = new ArrayList();
                                                                arrayList9 = new ArrayList();
                                                                arrayList10 = new ArrayList();
                                                            } else {
                                                                arrayList8 = arrayList2;
                                                                arrayList9 = arrayList3;
                                                                arrayList10 = arrayList4;
                                                                arrayList = arrayList6;
                                                            }
                                                            arrayList.add(str3);
                                                            arrayList8.add(str4);
                                                            arrayList9.add(sendingMediaInfo.caption);
                                                            arrayList10.add(sendingMediaInfo.entities);
                                                            arrayList2 = arrayList8;
                                                            arrayList3 = arrayList9;
                                                            arrayList4 = arrayList10;
                                                            j = j2;
                                                        }
                                                    }
                                                }
                                            }
                                            str5 = str4;
                                            obj2 = 1;
                                            if (obj2 == null) {
                                                if (str3 == null) {
                                                    str4 = null;
                                                } else {
                                                    file5 = new File(str3);
                                                    stringBuilder4 = new StringBuilder();
                                                    stringBuilder4.append(str5);
                                                    stringBuilder4.append(file5.length());
                                                    stringBuilder4.append("_");
                                                    stringBuilder4.append(file5.lastModified());
                                                    str4 = stringBuilder4.toString();
                                                }
                                                if (c182012 == null) {
                                                    hashMap3 = c182012;
                                                    if (z2) {
                                                    }
                                                    tL_photo3 = null;
                                                    if (tL_photo3 == null) {
                                                        tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                    }
                                                } else {
                                                    hashMap3 = c182012;
                                                    mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                    if (tL_photo3 == null) {
                                                        mediaSendPrepareWorker.sync.await();
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                    }
                                                }
                                                if (tL_photo3 == null) {
                                                    if (arrayList6 != null) {
                                                        arrayList8 = arrayList2;
                                                        arrayList9 = arrayList3;
                                                        arrayList10 = arrayList4;
                                                        arrayList = arrayList6;
                                                    } else {
                                                        arrayList = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                        arrayList10 = new ArrayList();
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList8.add(str4);
                                                    arrayList9.add(sendingMediaInfo.caption);
                                                    arrayList10.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList8;
                                                    arrayList3 = arrayList9;
                                                    arrayList4 = arrayList10;
                                                    j = j2;
                                                } else {
                                                    hashMap5 = new HashMap();
                                                    if (sendingMediaInfo.masks == null) {
                                                    }
                                                    tL_photo3.has_stickers = z4;
                                                    if (z4) {
                                                        serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                        serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                        for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                            ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                        }
                                                        hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                    }
                                                    if (str4 != null) {
                                                        hashMap5.put("originalPath", str4);
                                                    }
                                                    if (z4) {
                                                        i8 = i;
                                                    } else {
                                                        i8 = i + 1;
                                                        stringBuilder5 = new StringBuilder();
                                                        stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder5.append(currentTimeMillis);
                                                        hashMap5.put("groupId", stringBuilder5.toString());
                                                        hashMap5.put("final", "1");
                                                        j2 = 0;
                                                    }
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    i = i8;
                                                    j = j2;
                                                }
                                            } else {
                                                if (arrayList6 != null) {
                                                    arrayList7 = arrayList2;
                                                    arrayList8 = arrayList3;
                                                    arrayList9 = arrayList4;
                                                    arrayList = arrayList6;
                                                } else {
                                                    arrayList = new ArrayList();
                                                    arrayList7 = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                }
                                                arrayList.add(str3);
                                                arrayList7.add(str5);
                                                arrayList8.add(sendingMediaInfo.caption);
                                                arrayList9.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList7;
                                                arrayList3 = arrayList8;
                                                arrayList4 = arrayList9;
                                                j = j2;
                                                hashMap3 = c182012;
                                            }
                                        } else {
                                            if (z3) {
                                                if (sendingMediaInfo.videoEditedInfo == null) {
                                                }
                                                access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                            } else {
                                                access$2000 = null;
                                            }
                                            if (z3) {
                                            }
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = z5;
                                            sendingMediaInfo = sendingMediaInfo;
                                            SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                            j = j2;
                                            hashMap3 = c182012;
                                        }
                                        arrayList = arrayList6;
                                    } else {
                                        if (sendingMediaInfo.searchImage.type != z5) {
                                            arrayList6 = arrayList;
                                            i5 = z;
                                            j5 = currentTimeMillis;
                                            c182012 = c18201;
                                            currentTimeMillis = j3;
                                            if (z6) {
                                            }
                                            tL_photo = null;
                                            if (tL_photo != null) {
                                                tL_photo2 = tL_photo;
                                                z4 = true;
                                            } else {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                                if (tL_photo != null) {
                                                    z3 = false;
                                                    if (tL_photo == null) {
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                        stringBuilder2.append(".");
                                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                        file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                        if (file2.exists()) {
                                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                        }
                                                        if (tL_photo == null) {
                                                            tL_photo = new TL_photo();
                                                            tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                            tL_photoSize = new TL_photoSize();
                                                            tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                            tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                            tL_photoSize.size = 0;
                                                            tL_photoSize.location = new TL_fileLocationUnavailable();
                                                            tL_photoSize.type = "x";
                                                            tL_photo.sizes.add(tL_photoSize);
                                                        }
                                                    }
                                                    tL_photo2 = tL_photo;
                                                    z4 = z3;
                                                }
                                                z3 = true;
                                                if (tL_photo == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file2.exists()) {
                                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                    }
                                                    if (tL_photo == null) {
                                                        tL_photo = new TL_photo();
                                                        tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_photoSize = new TL_photoSize();
                                                        tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                        tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                        tL_photoSize.size = 0;
                                                        tL_photoSize.location = new TL_fileLocationUnavailable();
                                                        tL_photoSize.type = "x";
                                                        tL_photo.sizes.add(tL_photoSize);
                                                    }
                                                }
                                                tL_photo2 = tL_photo;
                                                z4 = z3;
                                            }
                                            if (tL_photo2 != null) {
                                                hashMap4 = new HashMap();
                                                if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                    hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                }
                                                if (z4) {
                                                    i8 = i + 1;
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder3.append(currentTimeMillis);
                                                    hashMap4.put("groupId", stringBuilder3.toString());
                                                    if (i8 != 10) {
                                                        if (i5 == size - 1) {
                                                            i = i8;
                                                        }
                                                    }
                                                    hashMap4.put("final", "1");
                                                    i = i8;
                                                    j2 = 0;
                                                }
                                                sendingMediaInfo2 = sendingMediaInfo;
                                                hashMap2 = hashMap4;
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            }
                                        } else {
                                            hashMap = new HashMap();
                                            if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                                if (z6) {
                                                    j4 = j3;
                                                } else {
                                                    instance = MessagesStorage.getInstance(i);
                                                    str2 = sendingMediaInfo.searchImage.imageUrl;
                                                    if (z6) {
                                                        j4 = j3;
                                                        i3 = 4;
                                                    } else {
                                                        j4 = j3;
                                                        i3 = 1;
                                                    }
                                                    document = (Document) instance.getSentFile(str2, i3);
                                                    if (document instanceof TL_document) {
                                                        tLObject = (TL_document) document;
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                        stringBuilder.append(".");
                                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                        arrayList5 = arrayList;
                                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                    }
                                                }
                                                tLObject = null;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                arrayList5 = arrayList;
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            } else {
                                                tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                                j4 = j3;
                                                arrayList5 = arrayList;
                                                file = FileLoader.getPathToAttach(tLObject, z5);
                                            }
                                            if (tLObject != null) {
                                                i4 = z;
                                                file2 = file;
                                                tL_document2 = tLObject;
                                            } else {
                                                if (sendingMediaInfo.searchImage.localUrl != null) {
                                                    hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                                }
                                                tL_document = new TL_document();
                                                i4 = z;
                                                tL_document.id = 0;
                                                tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                tL_document.attributes.add(tL_documentAttributeFilename);
                                                tL_document.size = sendingMediaInfo.searchImage.size;
                                                tL_document.dc_id = 0;
                                                if (file.toString().endsWith("mp4")) {
                                                    tL_document.mime_type = "image/gif";
                                                } else {
                                                    tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                    tL_document.attributes.add(new TL_documentAttributeAnimated());
                                                }
                                                if (file.exists()) {
                                                    file = null;
                                                    file2 = null;
                                                } else {
                                                    file2 = file;
                                                }
                                                if (file == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file3.exists()) {
                                                    }
                                                }
                                                if (file != null) {
                                                    if (file.getAbsolutePath().endsWith("mp4")) {
                                                        f = 90.0f;
                                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                    } else {
                                                        loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                        f = 90.0f;
                                                    }
                                                    if (loadBitmap != null) {
                                                        tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                        loadBitmap.recycle();
                                                    }
                                                }
                                                if (tL_document.thumb == null) {
                                                    tL_document.thumb = new TL_photoSize();
                                                    tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                    tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                    tL_document.thumb.size = 0;
                                                    tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                    tL_document.thumb.type = "x";
                                                }
                                                tL_document2 = tL_document;
                                            }
                                            str3 = sendingMediaInfo.searchImage.imageUrl;
                                            if (file2 == null) {
                                            }
                                            file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                            hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                            j5 = currentTimeMillis;
                                            currentTimeMillis = j4;
                                            c182012 = c18201;
                                            i5 = i4;
                                            sendingMediaInfo2 = sendingMediaInfo;
                                            arrayList6 = arrayList5;
                                            hashMap2 = hashMap;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        }
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = i5;
                                        j = j2;
                                        hashMap3 = c182012;
                                        arrayList = arrayList6;
                                    }
                                    z = i7 + 1;
                                    obj = hashMap3;
                                    j2 = currentTimeMillis;
                                    i2 = i;
                                    i = i6;
                                    z6 = z2;
                                    currentTimeMillis = j5;
                                    z5 = true;
                                }
                                arrayList6 = arrayList;
                                j5 = currentTimeMillis;
                                if (j != 0) {
                                    AndroidUtilities.runOnUIThread(new Runnable() {
                                        public void run() {
                                            SendMessagesHelper instance = SendMessagesHelper.getInstance(i);
                                            HashMap access$1000 = instance.delayedMessages;
                                            StringBuilder stringBuilder = new StringBuilder();
                                            stringBuilder.append("group_");
                                            stringBuilder.append(j);
                                            ArrayList arrayList = (ArrayList) access$1000.get(stringBuilder.toString());
                                            if (arrayList != null && !arrayList.isEmpty()) {
                                                DelayedMessage delayedMessage = (DelayedMessage) arrayList.get(0);
                                                MessageObject messageObject = (MessageObject) delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1);
                                                delayedMessage.finalGroupMessage = messageObject.getId();
                                                messageObject.messageOwner.params.put("final", "1");
                                                messages_Messages tL_messages_messages = new TL_messages_messages();
                                                tL_messages_messages.messages.add(messageObject.messageOwner);
                                                MessagesStorage.getInstance(i).putMessages(tL_messages_messages, delayedMessage.peer, -2, 0, false);
                                                instance.sendReadyToSendGroup(delayedMessage, true, true);
                                            }
                                        }
                                    });
                                }
                                if (inputContentInfoCompat2 != null) {
                                    inputContentInfoCompat2.releasePermission();
                                }
                                if (arrayList6 != null) {
                                    arrayList = arrayList6;
                                    if (!arrayList.isEmpty()) {
                                        for (i8 = 0; i8 < arrayList.size(); i8++) {
                                            SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str, j2, messageObject2, (CharSequence) arrayList3.get(i8), (ArrayList) arrayList4.get(i8));
                                        }
                                    }
                                }
                                if (BuildVars.LOGS_ENABLED) {
                                    stringBuilder6 = new StringBuilder();
                                    stringBuilder6.append("total send time = ");
                                    stringBuilder6.append(System.currentTimeMillis() - j5);
                                    FileLog.m0d(stringBuilder6.toString());
                                }
                            }
                            if (!z3 && z4) {
                                hashMap = new HashMap();
                                z3 = false;
                                while (z3 < size) {
                                    sendingMediaInfo3 = (SendingMediaInfo) arrayList2.get(z3);
                                    if (sendingMediaInfo3.searchImage == null && !sendingMediaInfo3.isVideo) {
                                        file4 = sendingMediaInfo3.path;
                                        str6 = sendingMediaInfo3.path;
                                        if (str6 == null && sendingMediaInfo3.uri != null) {
                                            str6 = AndroidUtilities.getPath(sendingMediaInfo3.uri);
                                            file4 = sendingMediaInfo3.uri.toString();
                                        }
                                        if (str6 != null) {
                                            if (!str6.endsWith(".gif")) {
                                                if (str6.endsWith(".webp")) {
                                                }
                                            }
                                        }
                                        if (str6 == null && sendingMediaInfo3.uri != null) {
                                            if (!MediaController.isGif(sendingMediaInfo3.uri)) {
                                                if (MediaController.isWebp(sendingMediaInfo3.uri)) {
                                                }
                                            }
                                        }
                                        if (str6 == null) {
                                            File file6 = new File(str6);
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append(file4);
                                            i = peerLayerVersion;
                                            stringBuilder3.append(file6.length());
                                            stringBuilder3.append("_");
                                            stringBuilder3.append(file6.lastModified());
                                            file4 = stringBuilder3.toString();
                                        } else {
                                            i = peerLayerVersion;
                                            file4 = null;
                                        }
                                        if (z6 && sendingMediaInfo3.ttl == 0) {
                                            tL_photo4 = (TL_photo) MessagesStorage.getInstance(i).getSentFile(file4, !z6 ? 0 : 3);
                                            if (tL_photo4 == null && sendingMediaInfo3.uri != null) {
                                                tL_photo4 = (TL_photo) MessagesStorage.getInstance(i).getSentFile(AndroidUtilities.getPath(sendingMediaInfo3.uri), !z6 ? 0 : 3);
                                            }
                                        } else {
                                            tL_photo4 = null;
                                        }
                                        mediaSendPrepareWorker2 = new MediaSendPrepareWorker();
                                        hashMap.put(sendingMediaInfo3, mediaSendPrepareWorker2);
                                        if (tL_photo4 == null) {
                                            mediaSendPrepareWorker2.photo = tL_photo4;
                                        } else {
                                            mediaSendPrepareWorker2.sync = new CountDownLatch(1);
                                            SendMessagesHelper.mediaSendThreadPool.execute(new Runnable() {
                                                public void run() {
                                                    mediaSendPrepareWorker2.photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo3.path, sendingMediaInfo3.uri);
                                                    mediaSendPrepareWorker2.sync.countDown();
                                                }
                                            });
                                        }
                                        z3++;
                                        peerLayerVersion = i;
                                    }
                                    i = peerLayerVersion;
                                    z3++;
                                    peerLayerVersion = i;
                                }
                                i = peerLayerVersion;
                                c18201 = hashMap;
                                arrayList = null;
                                arrayList2 = arrayList;
                                arrayList3 = arrayList2;
                                arrayList4 = arrayList3;
                                str = arrayList4;
                                j = 0;
                                i2 = 0;
                                z = false;
                                j2 = 0;
                                while (z < size) {
                                    sendingMediaInfo = (SendingMediaInfo) arrayList2.get(z);
                                    if (z4) {
                                        peerLayerVersion = i;
                                    } else {
                                        if (z6) {
                                            peerLayerVersion = i;
                                        } else {
                                            peerLayerVersion = i;
                                            if (peerLayerVersion >= 73) {
                                            }
                                        }
                                        j2 = Utilities.random.nextLong();
                                        i = 0;
                                        j3 = j2;
                                        if (sendingMediaInfo.searchImage == null) {
                                            if (sendingMediaInfo.searchImage.type != z5) {
                                                hashMap = new HashMap();
                                                if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                                    tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                                    j4 = j3;
                                                    arrayList5 = arrayList;
                                                    file = FileLoader.getPathToAttach(tLObject, z5);
                                                } else {
                                                    if (z6) {
                                                        instance = MessagesStorage.getInstance(i);
                                                        str2 = sendingMediaInfo.searchImage.imageUrl;
                                                        if (z6) {
                                                            j4 = j3;
                                                            i3 = 1;
                                                        } else {
                                                            j4 = j3;
                                                            i3 = 4;
                                                        }
                                                        document = (Document) instance.getSentFile(str2, i3);
                                                        if (document instanceof TL_document) {
                                                            tLObject = (TL_document) document;
                                                            stringBuilder = new StringBuilder();
                                                            stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                            stringBuilder.append(".");
                                                            stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                            arrayList5 = arrayList;
                                                            file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                        }
                                                    } else {
                                                        j4 = j3;
                                                    }
                                                    tLObject = null;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                    stringBuilder.append(".");
                                                    stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                    arrayList5 = arrayList;
                                                    file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                }
                                                if (tLObject != null) {
                                                    if (sendingMediaInfo.searchImage.localUrl != null) {
                                                        hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                                    }
                                                    tL_document = new TL_document();
                                                    i4 = z;
                                                    tL_document.id = 0;
                                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                                    tL_document.size = sendingMediaInfo.searchImage.size;
                                                    tL_document.dc_id = 0;
                                                    if (file.toString().endsWith("mp4")) {
                                                        tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                        tL_document.attributes.add(new TL_documentAttributeAnimated());
                                                    } else {
                                                        tL_document.mime_type = "image/gif";
                                                    }
                                                    if (file.exists()) {
                                                        file2 = file;
                                                    } else {
                                                        file = null;
                                                        file2 = null;
                                                    }
                                                    if (file == null) {
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                        stringBuilder2.append(".");
                                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                        file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                        if (file3.exists()) {
                                                        }
                                                    }
                                                    if (file != null) {
                                                        if (file.getAbsolutePath().endsWith("mp4")) {
                                                            loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                            f = 90.0f;
                                                        } else {
                                                            f = 90.0f;
                                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                        }
                                                        if (loadBitmap != null) {
                                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                            loadBitmap.recycle();
                                                        }
                                                    }
                                                    if (tL_document.thumb == null) {
                                                        tL_document.thumb = new TL_photoSize();
                                                        tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                        tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                        tL_document.thumb.size = 0;
                                                        tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                        tL_document.thumb.type = "x";
                                                    }
                                                    tL_document2 = tL_document;
                                                } else {
                                                    i4 = z;
                                                    file2 = file;
                                                    tL_document2 = tLObject;
                                                }
                                                str3 = sendingMediaInfo.searchImage.imageUrl;
                                                if (file2 == null) {
                                                }
                                                file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                                hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                j5 = currentTimeMillis;
                                                currentTimeMillis = j4;
                                                c182012 = c18201;
                                                i5 = i4;
                                                sendingMediaInfo2 = sendingMediaInfo;
                                                arrayList6 = arrayList5;
                                                hashMap2 = hashMap;
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            } else {
                                                arrayList6 = arrayList;
                                                i5 = z;
                                                j5 = currentTimeMillis;
                                                c182012 = c18201;
                                                currentTimeMillis = j3;
                                                if (z6) {
                                                }
                                                tL_photo = null;
                                                if (tL_photo != null) {
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                    stringBuilder.append(".");
                                                    stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                    file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                    tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                                    if (tL_photo != null) {
                                                        z3 = false;
                                                        if (tL_photo == null) {
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                            stringBuilder2.append(".");
                                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                            file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                            if (file2.exists()) {
                                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                            }
                                                            if (tL_photo == null) {
                                                                tL_photo = new TL_photo();
                                                                tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                                tL_photoSize = new TL_photoSize();
                                                                tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                                tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                                tL_photoSize.size = 0;
                                                                tL_photoSize.location = new TL_fileLocationUnavailable();
                                                                tL_photoSize.type = "x";
                                                                tL_photo.sizes.add(tL_photoSize);
                                                            }
                                                        }
                                                        tL_photo2 = tL_photo;
                                                        z4 = z3;
                                                    }
                                                    z3 = true;
                                                    if (tL_photo == null) {
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                        stringBuilder2.append(".");
                                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                        file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                        if (file2.exists()) {
                                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                        }
                                                        if (tL_photo == null) {
                                                            tL_photo = new TL_photo();
                                                            tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                            tL_photoSize = new TL_photoSize();
                                                            tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                            tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                            tL_photoSize.size = 0;
                                                            tL_photoSize.location = new TL_fileLocationUnavailable();
                                                            tL_photoSize.type = "x";
                                                            tL_photo.sizes.add(tL_photoSize);
                                                        }
                                                    }
                                                    tL_photo2 = tL_photo;
                                                    z4 = z3;
                                                } else {
                                                    tL_photo2 = tL_photo;
                                                    z4 = true;
                                                }
                                                if (tL_photo2 != null) {
                                                    hashMap4 = new HashMap();
                                                    if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                        hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                    }
                                                    if (z4) {
                                                        i8 = i + 1;
                                                        stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder3.append(currentTimeMillis);
                                                        hashMap4.put("groupId", stringBuilder3.toString());
                                                        if (i8 != 10) {
                                                            if (i5 == size - 1) {
                                                                i = i8;
                                                            }
                                                        }
                                                        hashMap4.put("final", "1");
                                                        i = i8;
                                                        j2 = 0;
                                                    }
                                                    sendingMediaInfo2 = sendingMediaInfo;
                                                    hashMap2 = hashMap4;
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                }
                                            }
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = i5;
                                            j = j2;
                                            hashMap3 = c182012;
                                            arrayList = arrayList6;
                                        } else {
                                            arrayList6 = arrayList;
                                            z5 = z;
                                            j5 = currentTimeMillis;
                                            c182012 = c18201;
                                            currentTimeMillis = j3;
                                            if (sendingMediaInfo.isVideo) {
                                                if (z3) {
                                                    access$2000 = null;
                                                } else {
                                                    if (sendingMediaInfo.videoEditedInfo == null) {
                                                    }
                                                    access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                                }
                                                if (z3) {
                                                }
                                                i6 = peerLayerVersion;
                                                z2 = z6;
                                                i7 = z5;
                                                sendingMediaInfo = sendingMediaInfo;
                                                SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                                j = j2;
                                                hashMap3 = c182012;
                                            } else {
                                                i6 = peerLayerVersion;
                                                z2 = z6;
                                                i7 = z5;
                                                str4 = sendingMediaInfo.path;
                                                str3 = sendingMediaInfo.path;
                                                str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                                str4 = sendingMediaInfo.uri.toString();
                                                if (z3) {
                                                    str = FileLoader.getFileExtension(new File(str3));
                                                } else {
                                                    if (str3 == null) {
                                                    }
                                                    if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                        str4 = sendingMediaInfo.uri.toString();
                                                        str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                        str = "gif";
                                                    } else {
                                                        if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                            str4 = sendingMediaInfo.uri.toString();
                                                            str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                            str = "webp";
                                                        }
                                                        str5 = str4;
                                                        obj2 = null;
                                                        if (obj2 == null) {
                                                            if (arrayList6 != null) {
                                                                arrayList = new ArrayList();
                                                                arrayList7 = new ArrayList();
                                                                arrayList8 = new ArrayList();
                                                                arrayList9 = new ArrayList();
                                                            } else {
                                                                arrayList7 = arrayList2;
                                                                arrayList8 = arrayList3;
                                                                arrayList9 = arrayList4;
                                                                arrayList = arrayList6;
                                                            }
                                                            arrayList.add(str3);
                                                            arrayList7.add(str5);
                                                            arrayList8.add(sendingMediaInfo.caption);
                                                            arrayList9.add(sendingMediaInfo.entities);
                                                            arrayList2 = arrayList7;
                                                            arrayList3 = arrayList8;
                                                            arrayList4 = arrayList9;
                                                            j = j2;
                                                            hashMap3 = c182012;
                                                        } else {
                                                            if (str3 == null) {
                                                                file5 = new File(str3);
                                                                stringBuilder4 = new StringBuilder();
                                                                stringBuilder4.append(str5);
                                                                stringBuilder4.append(file5.length());
                                                                stringBuilder4.append("_");
                                                                stringBuilder4.append(file5.lastModified());
                                                                str4 = stringBuilder4.toString();
                                                            } else {
                                                                str4 = null;
                                                            }
                                                            if (c182012 == null) {
                                                                hashMap3 = c182012;
                                                                mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                                if (tL_photo3 == null) {
                                                                    mediaSendPrepareWorker.sync.await();
                                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                                }
                                                            } else {
                                                                hashMap3 = c182012;
                                                                if (z2) {
                                                                }
                                                                tL_photo3 = null;
                                                                if (tL_photo3 == null) {
                                                                    tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                                }
                                                            }
                                                            if (tL_photo3 == null) {
                                                                hashMap5 = new HashMap();
                                                                if (sendingMediaInfo.masks == null) {
                                                                }
                                                                tL_photo3.has_stickers = z4;
                                                                if (z4) {
                                                                    serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                                    serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                                    for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                        ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                                    }
                                                                    hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                                }
                                                                if (str4 != null) {
                                                                    hashMap5.put("originalPath", str4);
                                                                }
                                                                if (z4) {
                                                                    i8 = i + 1;
                                                                    stringBuilder5 = new StringBuilder();
                                                                    stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                                    stringBuilder5.append(currentTimeMillis);
                                                                    hashMap5.put("groupId", stringBuilder5.toString());
                                                                    hashMap5.put("final", "1");
                                                                    j2 = 0;
                                                                } else {
                                                                    i8 = i;
                                                                }
                                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                                i = i8;
                                                                j = j2;
                                                            } else {
                                                                if (arrayList6 != null) {
                                                                    arrayList = new ArrayList();
                                                                    arrayList8 = new ArrayList();
                                                                    arrayList9 = new ArrayList();
                                                                    arrayList10 = new ArrayList();
                                                                } else {
                                                                    arrayList8 = arrayList2;
                                                                    arrayList9 = arrayList3;
                                                                    arrayList10 = arrayList4;
                                                                    arrayList = arrayList6;
                                                                }
                                                                arrayList.add(str3);
                                                                arrayList8.add(str4);
                                                                arrayList9.add(sendingMediaInfo.caption);
                                                                arrayList10.add(sendingMediaInfo.entities);
                                                                arrayList2 = arrayList8;
                                                                arrayList3 = arrayList9;
                                                                arrayList4 = arrayList10;
                                                                j = j2;
                                                            }
                                                        }
                                                    }
                                                }
                                                str5 = str4;
                                                obj2 = 1;
                                                if (obj2 == null) {
                                                    if (str3 == null) {
                                                        str4 = null;
                                                    } else {
                                                        file5 = new File(str3);
                                                        stringBuilder4 = new StringBuilder();
                                                        stringBuilder4.append(str5);
                                                        stringBuilder4.append(file5.length());
                                                        stringBuilder4.append("_");
                                                        stringBuilder4.append(file5.lastModified());
                                                        str4 = stringBuilder4.toString();
                                                    }
                                                    if (c182012 == null) {
                                                        hashMap3 = c182012;
                                                        if (z2) {
                                                        }
                                                        tL_photo3 = null;
                                                        if (tL_photo3 == null) {
                                                            tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                        }
                                                    } else {
                                                        hashMap3 = c182012;
                                                        mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                        if (tL_photo3 == null) {
                                                            mediaSendPrepareWorker.sync.await();
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                        }
                                                    }
                                                    if (tL_photo3 == null) {
                                                        if (arrayList6 != null) {
                                                            arrayList8 = arrayList2;
                                                            arrayList9 = arrayList3;
                                                            arrayList10 = arrayList4;
                                                            arrayList = arrayList6;
                                                        } else {
                                                            arrayList = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                            arrayList10 = new ArrayList();
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList8.add(str4);
                                                        arrayList9.add(sendingMediaInfo.caption);
                                                        arrayList10.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList8;
                                                        arrayList3 = arrayList9;
                                                        arrayList4 = arrayList10;
                                                        j = j2;
                                                    } else {
                                                        hashMap5 = new HashMap();
                                                        if (sendingMediaInfo.masks == null) {
                                                        }
                                                        tL_photo3.has_stickers = z4;
                                                        if (z4) {
                                                            serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                            serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                            for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                            }
                                                            hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                        }
                                                        if (str4 != null) {
                                                            hashMap5.put("originalPath", str4);
                                                        }
                                                        if (z4) {
                                                            i8 = i;
                                                        } else {
                                                            i8 = i + 1;
                                                            stringBuilder5 = new StringBuilder();
                                                            stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                            stringBuilder5.append(currentTimeMillis);
                                                            hashMap5.put("groupId", stringBuilder5.toString());
                                                            hashMap5.put("final", "1");
                                                            j2 = 0;
                                                        }
                                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                        i = i8;
                                                        j = j2;
                                                    }
                                                } else {
                                                    if (arrayList6 != null) {
                                                        arrayList7 = arrayList2;
                                                        arrayList8 = arrayList3;
                                                        arrayList9 = arrayList4;
                                                        arrayList = arrayList6;
                                                    } else {
                                                        arrayList = new ArrayList();
                                                        arrayList7 = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList7.add(str5);
                                                    arrayList8.add(sendingMediaInfo.caption);
                                                    arrayList9.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList7;
                                                    arrayList3 = arrayList8;
                                                    arrayList4 = arrayList9;
                                                    j = j2;
                                                    hashMap3 = c182012;
                                                }
                                            }
                                            arrayList = arrayList6;
                                        }
                                        z = i7 + 1;
                                        obj = hashMap3;
                                        j2 = currentTimeMillis;
                                        i2 = i;
                                        i = i6;
                                        z6 = z2;
                                        currentTimeMillis = j5;
                                        z5 = true;
                                    }
                                    i = i2;
                                    j3 = j2;
                                    j2 = j;
                                    if (sendingMediaInfo.searchImage == null) {
                                        arrayList6 = arrayList;
                                        z5 = z;
                                        j5 = currentTimeMillis;
                                        c182012 = c18201;
                                        currentTimeMillis = j3;
                                        if (sendingMediaInfo.isVideo) {
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = z5;
                                            str4 = sendingMediaInfo.path;
                                            str3 = sendingMediaInfo.path;
                                            str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                            str4 = sendingMediaInfo.uri.toString();
                                            if (z3) {
                                                if (str3 == null) {
                                                }
                                                if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                    if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                        str4 = sendingMediaInfo.uri.toString();
                                                        str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                        str = "webp";
                                                    }
                                                    str5 = str4;
                                                    obj2 = null;
                                                    if (obj2 == null) {
                                                        if (arrayList6 != null) {
                                                            arrayList = new ArrayList();
                                                            arrayList7 = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                        } else {
                                                            arrayList7 = arrayList2;
                                                            arrayList8 = arrayList3;
                                                            arrayList9 = arrayList4;
                                                            arrayList = arrayList6;
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList7.add(str5);
                                                        arrayList8.add(sendingMediaInfo.caption);
                                                        arrayList9.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList7;
                                                        arrayList3 = arrayList8;
                                                        arrayList4 = arrayList9;
                                                        j = j2;
                                                        hashMap3 = c182012;
                                                    } else {
                                                        if (str3 == null) {
                                                            file5 = new File(str3);
                                                            stringBuilder4 = new StringBuilder();
                                                            stringBuilder4.append(str5);
                                                            stringBuilder4.append(file5.length());
                                                            stringBuilder4.append("_");
                                                            stringBuilder4.append(file5.lastModified());
                                                            str4 = stringBuilder4.toString();
                                                        } else {
                                                            str4 = null;
                                                        }
                                                        if (c182012 == null) {
                                                            hashMap3 = c182012;
                                                            mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                            if (tL_photo3 == null) {
                                                                mediaSendPrepareWorker.sync.await();
                                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                            }
                                                        } else {
                                                            hashMap3 = c182012;
                                                            if (z2) {
                                                            }
                                                            tL_photo3 = null;
                                                            if (tL_photo3 == null) {
                                                                tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                            }
                                                        }
                                                        if (tL_photo3 == null) {
                                                            hashMap5 = new HashMap();
                                                            if (sendingMediaInfo.masks == null) {
                                                            }
                                                            tL_photo3.has_stickers = z4;
                                                            if (z4) {
                                                                serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                                serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                                for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                    ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                                }
                                                                hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                            }
                                                            if (str4 != null) {
                                                                hashMap5.put("originalPath", str4);
                                                            }
                                                            if (z4) {
                                                                i8 = i + 1;
                                                                stringBuilder5 = new StringBuilder();
                                                                stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                                stringBuilder5.append(currentTimeMillis);
                                                                hashMap5.put("groupId", stringBuilder5.toString());
                                                                hashMap5.put("final", "1");
                                                                j2 = 0;
                                                            } else {
                                                                i8 = i;
                                                            }
                                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                            i = i8;
                                                            j = j2;
                                                        } else {
                                                            if (arrayList6 != null) {
                                                                arrayList = new ArrayList();
                                                                arrayList8 = new ArrayList();
                                                                arrayList9 = new ArrayList();
                                                                arrayList10 = new ArrayList();
                                                            } else {
                                                                arrayList8 = arrayList2;
                                                                arrayList9 = arrayList3;
                                                                arrayList10 = arrayList4;
                                                                arrayList = arrayList6;
                                                            }
                                                            arrayList.add(str3);
                                                            arrayList8.add(str4);
                                                            arrayList9.add(sendingMediaInfo.caption);
                                                            arrayList10.add(sendingMediaInfo.entities);
                                                            arrayList2 = arrayList8;
                                                            arrayList3 = arrayList9;
                                                            arrayList4 = arrayList10;
                                                            j = j2;
                                                        }
                                                    }
                                                } else {
                                                    str4 = sendingMediaInfo.uri.toString();
                                                    str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                    str = "gif";
                                                }
                                            } else {
                                                str = FileLoader.getFileExtension(new File(str3));
                                            }
                                            str5 = str4;
                                            obj2 = 1;
                                            if (obj2 == null) {
                                                if (str3 == null) {
                                                    str4 = null;
                                                } else {
                                                    file5 = new File(str3);
                                                    stringBuilder4 = new StringBuilder();
                                                    stringBuilder4.append(str5);
                                                    stringBuilder4.append(file5.length());
                                                    stringBuilder4.append("_");
                                                    stringBuilder4.append(file5.lastModified());
                                                    str4 = stringBuilder4.toString();
                                                }
                                                if (c182012 == null) {
                                                    hashMap3 = c182012;
                                                    if (z2) {
                                                    }
                                                    tL_photo3 = null;
                                                    if (tL_photo3 == null) {
                                                        tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                    }
                                                } else {
                                                    hashMap3 = c182012;
                                                    mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                    if (tL_photo3 == null) {
                                                        mediaSendPrepareWorker.sync.await();
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                    }
                                                }
                                                if (tL_photo3 == null) {
                                                    if (arrayList6 != null) {
                                                        arrayList8 = arrayList2;
                                                        arrayList9 = arrayList3;
                                                        arrayList10 = arrayList4;
                                                        arrayList = arrayList6;
                                                    } else {
                                                        arrayList = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                        arrayList10 = new ArrayList();
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList8.add(str4);
                                                    arrayList9.add(sendingMediaInfo.caption);
                                                    arrayList10.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList8;
                                                    arrayList3 = arrayList9;
                                                    arrayList4 = arrayList10;
                                                    j = j2;
                                                } else {
                                                    hashMap5 = new HashMap();
                                                    if (sendingMediaInfo.masks == null) {
                                                    }
                                                    tL_photo3.has_stickers = z4;
                                                    if (z4) {
                                                        serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                        serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                        for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                            ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                        }
                                                        hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                    }
                                                    if (str4 != null) {
                                                        hashMap5.put("originalPath", str4);
                                                    }
                                                    if (z4) {
                                                        i8 = i;
                                                    } else {
                                                        i8 = i + 1;
                                                        stringBuilder5 = new StringBuilder();
                                                        stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder5.append(currentTimeMillis);
                                                        hashMap5.put("groupId", stringBuilder5.toString());
                                                        hashMap5.put("final", "1");
                                                        j2 = 0;
                                                    }
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    i = i8;
                                                    j = j2;
                                                }
                                            } else {
                                                if (arrayList6 != null) {
                                                    arrayList7 = arrayList2;
                                                    arrayList8 = arrayList3;
                                                    arrayList9 = arrayList4;
                                                    arrayList = arrayList6;
                                                } else {
                                                    arrayList = new ArrayList();
                                                    arrayList7 = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                }
                                                arrayList.add(str3);
                                                arrayList7.add(str5);
                                                arrayList8.add(sendingMediaInfo.caption);
                                                arrayList9.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList7;
                                                arrayList3 = arrayList8;
                                                arrayList4 = arrayList9;
                                                j = j2;
                                                hashMap3 = c182012;
                                            }
                                        } else {
                                            if (z3) {
                                                if (sendingMediaInfo.videoEditedInfo == null) {
                                                }
                                                access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                            } else {
                                                access$2000 = null;
                                            }
                                            if (z3) {
                                            }
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = z5;
                                            sendingMediaInfo = sendingMediaInfo;
                                            SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                            j = j2;
                                            hashMap3 = c182012;
                                        }
                                        arrayList = arrayList6;
                                    } else {
                                        if (sendingMediaInfo.searchImage.type != z5) {
                                            arrayList6 = arrayList;
                                            i5 = z;
                                            j5 = currentTimeMillis;
                                            c182012 = c18201;
                                            currentTimeMillis = j3;
                                            if (z6) {
                                            }
                                            tL_photo = null;
                                            if (tL_photo != null) {
                                                tL_photo2 = tL_photo;
                                                z4 = true;
                                            } else {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                                if (tL_photo != null) {
                                                    z3 = false;
                                                    if (tL_photo == null) {
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                        stringBuilder2.append(".");
                                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                        file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                        if (file2.exists()) {
                                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                        }
                                                        if (tL_photo == null) {
                                                            tL_photo = new TL_photo();
                                                            tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                            tL_photoSize = new TL_photoSize();
                                                            tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                            tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                            tL_photoSize.size = 0;
                                                            tL_photoSize.location = new TL_fileLocationUnavailable();
                                                            tL_photoSize.type = "x";
                                                            tL_photo.sizes.add(tL_photoSize);
                                                        }
                                                    }
                                                    tL_photo2 = tL_photo;
                                                    z4 = z3;
                                                }
                                                z3 = true;
                                                if (tL_photo == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file2.exists()) {
                                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                    }
                                                    if (tL_photo == null) {
                                                        tL_photo = new TL_photo();
                                                        tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_photoSize = new TL_photoSize();
                                                        tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                        tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                        tL_photoSize.size = 0;
                                                        tL_photoSize.location = new TL_fileLocationUnavailable();
                                                        tL_photoSize.type = "x";
                                                        tL_photo.sizes.add(tL_photoSize);
                                                    }
                                                }
                                                tL_photo2 = tL_photo;
                                                z4 = z3;
                                            }
                                            if (tL_photo2 != null) {
                                                hashMap4 = new HashMap();
                                                if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                    hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                }
                                                if (z4) {
                                                    i8 = i + 1;
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder3.append(currentTimeMillis);
                                                    hashMap4.put("groupId", stringBuilder3.toString());
                                                    if (i8 != 10) {
                                                        if (i5 == size - 1) {
                                                            i = i8;
                                                        }
                                                    }
                                                    hashMap4.put("final", "1");
                                                    i = i8;
                                                    j2 = 0;
                                                }
                                                sendingMediaInfo2 = sendingMediaInfo;
                                                hashMap2 = hashMap4;
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            }
                                        } else {
                                            hashMap = new HashMap();
                                            if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                                if (z6) {
                                                    j4 = j3;
                                                } else {
                                                    instance = MessagesStorage.getInstance(i);
                                                    str2 = sendingMediaInfo.searchImage.imageUrl;
                                                    if (z6) {
                                                        j4 = j3;
                                                        i3 = 4;
                                                    } else {
                                                        j4 = j3;
                                                        i3 = 1;
                                                    }
                                                    document = (Document) instance.getSentFile(str2, i3);
                                                    if (document instanceof TL_document) {
                                                        tLObject = (TL_document) document;
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                        stringBuilder.append(".");
                                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                        arrayList5 = arrayList;
                                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                    }
                                                }
                                                tLObject = null;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                arrayList5 = arrayList;
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            } else {
                                                tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                                j4 = j3;
                                                arrayList5 = arrayList;
                                                file = FileLoader.getPathToAttach(tLObject, z5);
                                            }
                                            if (tLObject != null) {
                                                i4 = z;
                                                file2 = file;
                                                tL_document2 = tLObject;
                                            } else {
                                                if (sendingMediaInfo.searchImage.localUrl != null) {
                                                    hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                                }
                                                tL_document = new TL_document();
                                                i4 = z;
                                                tL_document.id = 0;
                                                tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                tL_document.attributes.add(tL_documentAttributeFilename);
                                                tL_document.size = sendingMediaInfo.searchImage.size;
                                                tL_document.dc_id = 0;
                                                if (file.toString().endsWith("mp4")) {
                                                    tL_document.mime_type = "image/gif";
                                                } else {
                                                    tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                    tL_document.attributes.add(new TL_documentAttributeAnimated());
                                                }
                                                if (file.exists()) {
                                                    file = null;
                                                    file2 = null;
                                                } else {
                                                    file2 = file;
                                                }
                                                if (file == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file3.exists()) {
                                                    }
                                                }
                                                if (file != null) {
                                                    if (file.getAbsolutePath().endsWith("mp4")) {
                                                        f = 90.0f;
                                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                    } else {
                                                        loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                        f = 90.0f;
                                                    }
                                                    if (loadBitmap != null) {
                                                        tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                        loadBitmap.recycle();
                                                    }
                                                }
                                                if (tL_document.thumb == null) {
                                                    tL_document.thumb = new TL_photoSize();
                                                    tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                    tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                    tL_document.thumb.size = 0;
                                                    tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                    tL_document.thumb.type = "x";
                                                }
                                                tL_document2 = tL_document;
                                            }
                                            str3 = sendingMediaInfo.searchImage.imageUrl;
                                            if (file2 == null) {
                                            }
                                            file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                            hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                            j5 = currentTimeMillis;
                                            currentTimeMillis = j4;
                                            c182012 = c18201;
                                            i5 = i4;
                                            sendingMediaInfo2 = sendingMediaInfo;
                                            arrayList6 = arrayList5;
                                            hashMap2 = hashMap;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        }
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = i5;
                                        j = j2;
                                        hashMap3 = c182012;
                                        arrayList = arrayList6;
                                    }
                                    z = i7 + 1;
                                    obj = hashMap3;
                                    j2 = currentTimeMillis;
                                    i2 = i;
                                    i = i6;
                                    z6 = z2;
                                    currentTimeMillis = j5;
                                    z5 = true;
                                }
                                arrayList6 = arrayList;
                                j5 = currentTimeMillis;
                                if (j != 0) {
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                }
                                if (inputContentInfoCompat2 != null) {
                                    inputContentInfoCompat2.releasePermission();
                                }
                                if (arrayList6 != null) {
                                    arrayList = arrayList6;
                                    if (arrayList.isEmpty()) {
                                        for (i8 = 0; i8 < arrayList.size(); i8++) {
                                            SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str, j2, messageObject2, (CharSequence) arrayList3.get(i8), (ArrayList) arrayList4.get(i8));
                                        }
                                    }
                                }
                                if (BuildVars.LOGS_ENABLED) {
                                    stringBuilder6 = new StringBuilder();
                                    stringBuilder6.append("total send time = ");
                                    stringBuilder6.append(System.currentTimeMillis() - j5);
                                    FileLog.m0d(stringBuilder6.toString());
                                }
                            }
                            i = peerLayerVersion;
                            c18201 = null;
                            arrayList = null;
                            arrayList2 = arrayList;
                            arrayList3 = arrayList2;
                            arrayList4 = arrayList3;
                            str = arrayList4;
                            j = 0;
                            i2 = 0;
                            z = false;
                            j2 = 0;
                            while (z < size) {
                                sendingMediaInfo = (SendingMediaInfo) arrayList2.get(z);
                                if (z4) {
                                    if (z6) {
                                        peerLayerVersion = i;
                                        if (peerLayerVersion >= 73) {
                                        }
                                    } else {
                                        peerLayerVersion = i;
                                    }
                                    j2 = Utilities.random.nextLong();
                                    i = 0;
                                    j3 = j2;
                                    if (sendingMediaInfo.searchImage == null) {
                                        if (sendingMediaInfo.searchImage.type != z5) {
                                            hashMap = new HashMap();
                                            if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                                tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                                j4 = j3;
                                                arrayList5 = arrayList;
                                                file = FileLoader.getPathToAttach(tLObject, z5);
                                            } else {
                                                if (z6) {
                                                    instance = MessagesStorage.getInstance(i);
                                                    str2 = sendingMediaInfo.searchImage.imageUrl;
                                                    if (z6) {
                                                        j4 = j3;
                                                        i3 = 1;
                                                    } else {
                                                        j4 = j3;
                                                        i3 = 4;
                                                    }
                                                    document = (Document) instance.getSentFile(str2, i3);
                                                    if (document instanceof TL_document) {
                                                        tLObject = (TL_document) document;
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                        stringBuilder.append(".");
                                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                        arrayList5 = arrayList;
                                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                    }
                                                } else {
                                                    j4 = j3;
                                                }
                                                tLObject = null;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                arrayList5 = arrayList;
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            }
                                            if (tLObject != null) {
                                                if (sendingMediaInfo.searchImage.localUrl != null) {
                                                    hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                                }
                                                tL_document = new TL_document();
                                                i4 = z;
                                                tL_document.id = 0;
                                                tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                                tL_documentAttributeFilename.file_name = "animation.gif";
                                                tL_document.attributes.add(tL_documentAttributeFilename);
                                                tL_document.size = sendingMediaInfo.searchImage.size;
                                                tL_document.dc_id = 0;
                                                if (file.toString().endsWith("mp4")) {
                                                    tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                    tL_document.attributes.add(new TL_documentAttributeAnimated());
                                                } else {
                                                    tL_document.mime_type = "image/gif";
                                                }
                                                if (file.exists()) {
                                                    file2 = file;
                                                } else {
                                                    file = null;
                                                    file2 = null;
                                                }
                                                if (file == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file3.exists()) {
                                                    }
                                                }
                                                if (file != null) {
                                                    if (file.getAbsolutePath().endsWith("mp4")) {
                                                        loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                        f = 90.0f;
                                                    } else {
                                                        f = 90.0f;
                                                        loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                    }
                                                    if (loadBitmap != null) {
                                                        tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                        loadBitmap.recycle();
                                                    }
                                                }
                                                if (tL_document.thumb == null) {
                                                    tL_document.thumb = new TL_photoSize();
                                                    tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                    tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                    tL_document.thumb.size = 0;
                                                    tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                    tL_document.thumb.type = "x";
                                                }
                                                tL_document2 = tL_document;
                                            } else {
                                                i4 = z;
                                                file2 = file;
                                                tL_document2 = tLObject;
                                            }
                                            str3 = sendingMediaInfo.searchImage.imageUrl;
                                            if (file2 == null) {
                                            }
                                            file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                            hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                            j5 = currentTimeMillis;
                                            currentTimeMillis = j4;
                                            c182012 = c18201;
                                            i5 = i4;
                                            sendingMediaInfo2 = sendingMediaInfo;
                                            arrayList6 = arrayList5;
                                            hashMap2 = hashMap;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        } else {
                                            arrayList6 = arrayList;
                                            i5 = z;
                                            j5 = currentTimeMillis;
                                            c182012 = c18201;
                                            currentTimeMillis = j3;
                                            if (z6) {
                                            }
                                            tL_photo = null;
                                            if (tL_photo != null) {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                                if (tL_photo != null) {
                                                    z3 = false;
                                                    if (tL_photo == null) {
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                        stringBuilder2.append(".");
                                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                        file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                        if (file2.exists()) {
                                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                        }
                                                        if (tL_photo == null) {
                                                            tL_photo = new TL_photo();
                                                            tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                            tL_photoSize = new TL_photoSize();
                                                            tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                            tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                            tL_photoSize.size = 0;
                                                            tL_photoSize.location = new TL_fileLocationUnavailable();
                                                            tL_photoSize.type = "x";
                                                            tL_photo.sizes.add(tL_photoSize);
                                                        }
                                                    }
                                                    tL_photo2 = tL_photo;
                                                    z4 = z3;
                                                }
                                                z3 = true;
                                                if (tL_photo == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file2.exists()) {
                                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                    }
                                                    if (tL_photo == null) {
                                                        tL_photo = new TL_photo();
                                                        tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_photoSize = new TL_photoSize();
                                                        tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                        tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                        tL_photoSize.size = 0;
                                                        tL_photoSize.location = new TL_fileLocationUnavailable();
                                                        tL_photoSize.type = "x";
                                                        tL_photo.sizes.add(tL_photoSize);
                                                    }
                                                }
                                                tL_photo2 = tL_photo;
                                                z4 = z3;
                                            } else {
                                                tL_photo2 = tL_photo;
                                                z4 = true;
                                            }
                                            if (tL_photo2 != null) {
                                                hashMap4 = new HashMap();
                                                if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                    hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                                }
                                                if (z4) {
                                                    i8 = i + 1;
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder3.append(currentTimeMillis);
                                                    hashMap4.put("groupId", stringBuilder3.toString());
                                                    if (i8 != 10) {
                                                        if (i5 == size - 1) {
                                                            i = i8;
                                                        }
                                                    }
                                                    hashMap4.put("final", "1");
                                                    i = i8;
                                                    j2 = 0;
                                                }
                                                sendingMediaInfo2 = sendingMediaInfo;
                                                hashMap2 = hashMap4;
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            }
                                        }
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = i5;
                                        j = j2;
                                        hashMap3 = c182012;
                                        arrayList = arrayList6;
                                    } else {
                                        arrayList6 = arrayList;
                                        z5 = z;
                                        j5 = currentTimeMillis;
                                        c182012 = c18201;
                                        currentTimeMillis = j3;
                                        if (sendingMediaInfo.isVideo) {
                                            if (z3) {
                                                access$2000 = null;
                                            } else {
                                                if (sendingMediaInfo.videoEditedInfo == null) {
                                                }
                                                access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                            }
                                            if (z3) {
                                            }
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = z5;
                                            sendingMediaInfo = sendingMediaInfo;
                                            SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                            j = j2;
                                            hashMap3 = c182012;
                                        } else {
                                            i6 = peerLayerVersion;
                                            z2 = z6;
                                            i7 = z5;
                                            str4 = sendingMediaInfo.path;
                                            str3 = sendingMediaInfo.path;
                                            str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                            str4 = sendingMediaInfo.uri.toString();
                                            if (z3) {
                                                str = FileLoader.getFileExtension(new File(str3));
                                            } else {
                                                if (str3 == null) {
                                                }
                                                if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                    str4 = sendingMediaInfo.uri.toString();
                                                    str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                    str = "gif";
                                                } else {
                                                    if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                        str4 = sendingMediaInfo.uri.toString();
                                                        str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                        str = "webp";
                                                    }
                                                    str5 = str4;
                                                    obj2 = null;
                                                    if (obj2 == null) {
                                                        if (arrayList6 != null) {
                                                            arrayList = new ArrayList();
                                                            arrayList7 = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                        } else {
                                                            arrayList7 = arrayList2;
                                                            arrayList8 = arrayList3;
                                                            arrayList9 = arrayList4;
                                                            arrayList = arrayList6;
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList7.add(str5);
                                                        arrayList8.add(sendingMediaInfo.caption);
                                                        arrayList9.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList7;
                                                        arrayList3 = arrayList8;
                                                        arrayList4 = arrayList9;
                                                        j = j2;
                                                        hashMap3 = c182012;
                                                    } else {
                                                        if (str3 == null) {
                                                            file5 = new File(str3);
                                                            stringBuilder4 = new StringBuilder();
                                                            stringBuilder4.append(str5);
                                                            stringBuilder4.append(file5.length());
                                                            stringBuilder4.append("_");
                                                            stringBuilder4.append(file5.lastModified());
                                                            str4 = stringBuilder4.toString();
                                                        } else {
                                                            str4 = null;
                                                        }
                                                        if (c182012 == null) {
                                                            hashMap3 = c182012;
                                                            mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                            if (tL_photo3 == null) {
                                                                mediaSendPrepareWorker.sync.await();
                                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                            }
                                                        } else {
                                                            hashMap3 = c182012;
                                                            if (z2) {
                                                            }
                                                            tL_photo3 = null;
                                                            if (tL_photo3 == null) {
                                                                tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                            }
                                                        }
                                                        if (tL_photo3 == null) {
                                                            hashMap5 = new HashMap();
                                                            if (sendingMediaInfo.masks == null) {
                                                            }
                                                            tL_photo3.has_stickers = z4;
                                                            if (z4) {
                                                                serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                                serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                                for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                    ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                                }
                                                                hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                            }
                                                            if (str4 != null) {
                                                                hashMap5.put("originalPath", str4);
                                                            }
                                                            if (z4) {
                                                                i8 = i + 1;
                                                                stringBuilder5 = new StringBuilder();
                                                                stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                                stringBuilder5.append(currentTimeMillis);
                                                                hashMap5.put("groupId", stringBuilder5.toString());
                                                                hashMap5.put("final", "1");
                                                                j2 = 0;
                                                            } else {
                                                                i8 = i;
                                                            }
                                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                            i = i8;
                                                            j = j2;
                                                        } else {
                                                            if (arrayList6 != null) {
                                                                arrayList = new ArrayList();
                                                                arrayList8 = new ArrayList();
                                                                arrayList9 = new ArrayList();
                                                                arrayList10 = new ArrayList();
                                                            } else {
                                                                arrayList8 = arrayList2;
                                                                arrayList9 = arrayList3;
                                                                arrayList10 = arrayList4;
                                                                arrayList = arrayList6;
                                                            }
                                                            arrayList.add(str3);
                                                            arrayList8.add(str4);
                                                            arrayList9.add(sendingMediaInfo.caption);
                                                            arrayList10.add(sendingMediaInfo.entities);
                                                            arrayList2 = arrayList8;
                                                            arrayList3 = arrayList9;
                                                            arrayList4 = arrayList10;
                                                            j = j2;
                                                        }
                                                    }
                                                }
                                            }
                                            str5 = str4;
                                            obj2 = 1;
                                            if (obj2 == null) {
                                                if (str3 == null) {
                                                    str4 = null;
                                                } else {
                                                    file5 = new File(str3);
                                                    stringBuilder4 = new StringBuilder();
                                                    stringBuilder4.append(str5);
                                                    stringBuilder4.append(file5.length());
                                                    stringBuilder4.append("_");
                                                    stringBuilder4.append(file5.lastModified());
                                                    str4 = stringBuilder4.toString();
                                                }
                                                if (c182012 == null) {
                                                    hashMap3 = c182012;
                                                    if (z2) {
                                                    }
                                                    tL_photo3 = null;
                                                    if (tL_photo3 == null) {
                                                        tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                    }
                                                } else {
                                                    hashMap3 = c182012;
                                                    mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                    if (tL_photo3 == null) {
                                                        mediaSendPrepareWorker.sync.await();
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                    }
                                                }
                                                if (tL_photo3 == null) {
                                                    if (arrayList6 != null) {
                                                        arrayList8 = arrayList2;
                                                        arrayList9 = arrayList3;
                                                        arrayList10 = arrayList4;
                                                        arrayList = arrayList6;
                                                    } else {
                                                        arrayList = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                        arrayList10 = new ArrayList();
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList8.add(str4);
                                                    arrayList9.add(sendingMediaInfo.caption);
                                                    arrayList10.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList8;
                                                    arrayList3 = arrayList9;
                                                    arrayList4 = arrayList10;
                                                    j = j2;
                                                } else {
                                                    hashMap5 = new HashMap();
                                                    if (sendingMediaInfo.masks == null) {
                                                    }
                                                    tL_photo3.has_stickers = z4;
                                                    if (z4) {
                                                        serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                        serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                        for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                            ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                        }
                                                        hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                    }
                                                    if (str4 != null) {
                                                        hashMap5.put("originalPath", str4);
                                                    }
                                                    if (z4) {
                                                        i8 = i;
                                                    } else {
                                                        i8 = i + 1;
                                                        stringBuilder5 = new StringBuilder();
                                                        stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder5.append(currentTimeMillis);
                                                        hashMap5.put("groupId", stringBuilder5.toString());
                                                        hashMap5.put("final", "1");
                                                        j2 = 0;
                                                    }
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    i = i8;
                                                    j = j2;
                                                }
                                            } else {
                                                if (arrayList6 != null) {
                                                    arrayList7 = arrayList2;
                                                    arrayList8 = arrayList3;
                                                    arrayList9 = arrayList4;
                                                    arrayList = arrayList6;
                                                } else {
                                                    arrayList = new ArrayList();
                                                    arrayList7 = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                }
                                                arrayList.add(str3);
                                                arrayList7.add(str5);
                                                arrayList8.add(sendingMediaInfo.caption);
                                                arrayList9.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList7;
                                                arrayList3 = arrayList8;
                                                arrayList4 = arrayList9;
                                                j = j2;
                                                hashMap3 = c182012;
                                            }
                                        }
                                        arrayList = arrayList6;
                                    }
                                    z = i7 + 1;
                                    obj = hashMap3;
                                    j2 = currentTimeMillis;
                                    i2 = i;
                                    i = i6;
                                    z6 = z2;
                                    currentTimeMillis = j5;
                                    z5 = true;
                                } else {
                                    peerLayerVersion = i;
                                }
                                i = i2;
                                j3 = j2;
                                j2 = j;
                                if (sendingMediaInfo.searchImage == null) {
                                    arrayList6 = arrayList;
                                    z5 = z;
                                    j5 = currentTimeMillis;
                                    c182012 = c18201;
                                    currentTimeMillis = j3;
                                    if (sendingMediaInfo.isVideo) {
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = z5;
                                        str4 = sendingMediaInfo.path;
                                        str3 = sendingMediaInfo.path;
                                        str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                        str4 = sendingMediaInfo.uri.toString();
                                        if (z3) {
                                            if (str3 == null) {
                                            }
                                            if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                    str4 = sendingMediaInfo.uri.toString();
                                                    str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                    str = "webp";
                                                }
                                                str5 = str4;
                                                obj2 = null;
                                                if (obj2 == null) {
                                                    if (arrayList6 != null) {
                                                        arrayList = new ArrayList();
                                                        arrayList7 = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                    } else {
                                                        arrayList7 = arrayList2;
                                                        arrayList8 = arrayList3;
                                                        arrayList9 = arrayList4;
                                                        arrayList = arrayList6;
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList7.add(str5);
                                                    arrayList8.add(sendingMediaInfo.caption);
                                                    arrayList9.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList7;
                                                    arrayList3 = arrayList8;
                                                    arrayList4 = arrayList9;
                                                    j = j2;
                                                    hashMap3 = c182012;
                                                } else {
                                                    if (str3 == null) {
                                                        file5 = new File(str3);
                                                        stringBuilder4 = new StringBuilder();
                                                        stringBuilder4.append(str5);
                                                        stringBuilder4.append(file5.length());
                                                        stringBuilder4.append("_");
                                                        stringBuilder4.append(file5.lastModified());
                                                        str4 = stringBuilder4.toString();
                                                    } else {
                                                        str4 = null;
                                                    }
                                                    if (c182012 == null) {
                                                        hashMap3 = c182012;
                                                        mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                        if (tL_photo3 == null) {
                                                            mediaSendPrepareWorker.sync.await();
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                        }
                                                    } else {
                                                        hashMap3 = c182012;
                                                        if (z2) {
                                                        }
                                                        tL_photo3 = null;
                                                        if (tL_photo3 == null) {
                                                            tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                        }
                                                    }
                                                    if (tL_photo3 == null) {
                                                        hashMap5 = new HashMap();
                                                        if (sendingMediaInfo.masks == null) {
                                                        }
                                                        tL_photo3.has_stickers = z4;
                                                        if (z4) {
                                                            serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                            serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                            for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                            }
                                                            hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                        }
                                                        if (str4 != null) {
                                                            hashMap5.put("originalPath", str4);
                                                        }
                                                        if (z4) {
                                                            i8 = i + 1;
                                                            stringBuilder5 = new StringBuilder();
                                                            stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                            stringBuilder5.append(currentTimeMillis);
                                                            hashMap5.put("groupId", stringBuilder5.toString());
                                                            hashMap5.put("final", "1");
                                                            j2 = 0;
                                                        } else {
                                                            i8 = i;
                                                        }
                                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                        i = i8;
                                                        j = j2;
                                                    } else {
                                                        if (arrayList6 != null) {
                                                            arrayList = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                            arrayList10 = new ArrayList();
                                                        } else {
                                                            arrayList8 = arrayList2;
                                                            arrayList9 = arrayList3;
                                                            arrayList10 = arrayList4;
                                                            arrayList = arrayList6;
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList8.add(str4);
                                                        arrayList9.add(sendingMediaInfo.caption);
                                                        arrayList10.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList8;
                                                        arrayList3 = arrayList9;
                                                        arrayList4 = arrayList10;
                                                        j = j2;
                                                    }
                                                }
                                            } else {
                                                str4 = sendingMediaInfo.uri.toString();
                                                str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                str = "gif";
                                            }
                                        } else {
                                            str = FileLoader.getFileExtension(new File(str3));
                                        }
                                        str5 = str4;
                                        obj2 = 1;
                                        if (obj2 == null) {
                                            if (str3 == null) {
                                                str4 = null;
                                            } else {
                                                file5 = new File(str3);
                                                stringBuilder4 = new StringBuilder();
                                                stringBuilder4.append(str5);
                                                stringBuilder4.append(file5.length());
                                                stringBuilder4.append("_");
                                                stringBuilder4.append(file5.lastModified());
                                                str4 = stringBuilder4.toString();
                                            }
                                            if (c182012 == null) {
                                                hashMap3 = c182012;
                                                if (z2) {
                                                }
                                                tL_photo3 = null;
                                                if (tL_photo3 == null) {
                                                    tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                }
                                            } else {
                                                hashMap3 = c182012;
                                                mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                if (tL_photo3 == null) {
                                                    mediaSendPrepareWorker.sync.await();
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                }
                                            }
                                            if (tL_photo3 == null) {
                                                if (arrayList6 != null) {
                                                    arrayList8 = arrayList2;
                                                    arrayList9 = arrayList3;
                                                    arrayList10 = arrayList4;
                                                    arrayList = arrayList6;
                                                } else {
                                                    arrayList = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                    arrayList10 = new ArrayList();
                                                }
                                                arrayList.add(str3);
                                                arrayList8.add(str4);
                                                arrayList9.add(sendingMediaInfo.caption);
                                                arrayList10.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList8;
                                                arrayList3 = arrayList9;
                                                arrayList4 = arrayList10;
                                                j = j2;
                                            } else {
                                                hashMap5 = new HashMap();
                                                if (sendingMediaInfo.masks == null) {
                                                }
                                                tL_photo3.has_stickers = z4;
                                                if (z4) {
                                                    serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                    serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                    for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                        ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                    }
                                                    hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                }
                                                if (str4 != null) {
                                                    hashMap5.put("originalPath", str4);
                                                }
                                                if (z4) {
                                                    i8 = i;
                                                } else {
                                                    i8 = i + 1;
                                                    stringBuilder5 = new StringBuilder();
                                                    stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder5.append(currentTimeMillis);
                                                    hashMap5.put("groupId", stringBuilder5.toString());
                                                    hashMap5.put("final", "1");
                                                    j2 = 0;
                                                }
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                i = i8;
                                                j = j2;
                                            }
                                        } else {
                                            if (arrayList6 != null) {
                                                arrayList7 = arrayList2;
                                                arrayList8 = arrayList3;
                                                arrayList9 = arrayList4;
                                                arrayList = arrayList6;
                                            } else {
                                                arrayList = new ArrayList();
                                                arrayList7 = new ArrayList();
                                                arrayList8 = new ArrayList();
                                                arrayList9 = new ArrayList();
                                            }
                                            arrayList.add(str3);
                                            arrayList7.add(str5);
                                            arrayList8.add(sendingMediaInfo.caption);
                                            arrayList9.add(sendingMediaInfo.entities);
                                            arrayList2 = arrayList7;
                                            arrayList3 = arrayList8;
                                            arrayList4 = arrayList9;
                                            j = j2;
                                            hashMap3 = c182012;
                                        }
                                    } else {
                                        if (z3) {
                                            if (sendingMediaInfo.videoEditedInfo == null) {
                                            }
                                            access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                        } else {
                                            access$2000 = null;
                                        }
                                        if (z3) {
                                        }
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = z5;
                                        sendingMediaInfo = sendingMediaInfo;
                                        SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                        j = j2;
                                        hashMap3 = c182012;
                                    }
                                    arrayList = arrayList6;
                                } else {
                                    if (sendingMediaInfo.searchImage.type != z5) {
                                        arrayList6 = arrayList;
                                        i5 = z;
                                        j5 = currentTimeMillis;
                                        c182012 = c18201;
                                        currentTimeMillis = j3;
                                        if (z6) {
                                        }
                                        tL_photo = null;
                                        if (tL_photo != null) {
                                            tL_photo2 = tL_photo;
                                            z4 = true;
                                        } else {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                            stringBuilder.append(".");
                                            stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                            file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                            if (tL_photo != null) {
                                                z3 = false;
                                                if (tL_photo == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file2.exists()) {
                                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                    }
                                                    if (tL_photo == null) {
                                                        tL_photo = new TL_photo();
                                                        tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_photoSize = new TL_photoSize();
                                                        tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                        tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                        tL_photoSize.size = 0;
                                                        tL_photoSize.location = new TL_fileLocationUnavailable();
                                                        tL_photoSize.type = "x";
                                                        tL_photo.sizes.add(tL_photoSize);
                                                    }
                                                }
                                                tL_photo2 = tL_photo;
                                                z4 = z3;
                                            }
                                            z3 = true;
                                            if (tL_photo == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (file2.exists()) {
                                                    tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                }
                                                if (tL_photo == null) {
                                                    tL_photo = new TL_photo();
                                                    tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_photoSize = new TL_photoSize();
                                                    tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                    tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                    tL_photoSize.size = 0;
                                                    tL_photoSize.location = new TL_fileLocationUnavailable();
                                                    tL_photoSize.type = "x";
                                                    tL_photo.sizes.add(tL_photoSize);
                                                }
                                            }
                                            tL_photo2 = tL_photo;
                                            z4 = z3;
                                        }
                                        if (tL_photo2 != null) {
                                            hashMap4 = new HashMap();
                                            if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                            }
                                            if (z4) {
                                                i8 = i + 1;
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder3.append(currentTimeMillis);
                                                hashMap4.put("groupId", stringBuilder3.toString());
                                                if (i8 != 10) {
                                                    if (i5 == size - 1) {
                                                        i = i8;
                                                    }
                                                }
                                                hashMap4.put("final", "1");
                                                i = i8;
                                                j2 = 0;
                                            }
                                            sendingMediaInfo2 = sendingMediaInfo;
                                            hashMap2 = hashMap4;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        }
                                    } else {
                                        hashMap = new HashMap();
                                        if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                            if (z6) {
                                                j4 = j3;
                                            } else {
                                                instance = MessagesStorage.getInstance(i);
                                                str2 = sendingMediaInfo.searchImage.imageUrl;
                                                if (z6) {
                                                    j4 = j3;
                                                    i3 = 4;
                                                } else {
                                                    j4 = j3;
                                                    i3 = 1;
                                                }
                                                document = (Document) instance.getSentFile(str2, i3);
                                                if (document instanceof TL_document) {
                                                    tLObject = (TL_document) document;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                    stringBuilder.append(".");
                                                    stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                    arrayList5 = arrayList;
                                                    file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                }
                                            }
                                            tLObject = null;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                            stringBuilder.append(".");
                                            stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                            arrayList5 = arrayList;
                                            file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                        } else {
                                            tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                            j4 = j3;
                                            arrayList5 = arrayList;
                                            file = FileLoader.getPathToAttach(tLObject, z5);
                                        }
                                        if (tLObject != null) {
                                            i4 = z;
                                            file2 = file;
                                            tL_document2 = tLObject;
                                        } else {
                                            if (sendingMediaInfo.searchImage.localUrl != null) {
                                                hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                            }
                                            tL_document = new TL_document();
                                            i4 = z;
                                            tL_document.id = 0;
                                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                            tL_document.attributes.add(tL_documentAttributeFilename);
                                            tL_document.size = sendingMediaInfo.searchImage.size;
                                            tL_document.dc_id = 0;
                                            if (file.toString().endsWith("mp4")) {
                                                tL_document.mime_type = "image/gif";
                                            } else {
                                                tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                tL_document.attributes.add(new TL_documentAttributeAnimated());
                                            }
                                            if (file.exists()) {
                                                file = null;
                                                file2 = null;
                                            } else {
                                                file2 = file;
                                            }
                                            if (file == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (file3.exists()) {
                                                }
                                            }
                                            if (file != null) {
                                                if (file.getAbsolutePath().endsWith("mp4")) {
                                                    f = 90.0f;
                                                    loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                } else {
                                                    loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                    f = 90.0f;
                                                }
                                                if (loadBitmap != null) {
                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                    loadBitmap.recycle();
                                                }
                                            }
                                            if (tL_document.thumb == null) {
                                                tL_document.thumb = new TL_photoSize();
                                                tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                tL_document.thumb.size = 0;
                                                tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                tL_document.thumb.type = "x";
                                            }
                                            tL_document2 = tL_document;
                                        }
                                        str3 = sendingMediaInfo.searchImage.imageUrl;
                                        if (file2 == null) {
                                        }
                                        file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                        hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                        j5 = currentTimeMillis;
                                        currentTimeMillis = j4;
                                        c182012 = c18201;
                                        i5 = i4;
                                        sendingMediaInfo2 = sendingMediaInfo;
                                        arrayList6 = arrayList5;
                                        hashMap2 = hashMap;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                    }
                                    i6 = peerLayerVersion;
                                    z2 = z6;
                                    i7 = i5;
                                    j = j2;
                                    hashMap3 = c182012;
                                    arrayList = arrayList6;
                                }
                                z = i7 + 1;
                                obj = hashMap3;
                                j2 = currentTimeMillis;
                                i2 = i;
                                i = i6;
                                z6 = z2;
                                currentTimeMillis = j5;
                                z5 = true;
                            }
                            arrayList6 = arrayList;
                            j5 = currentTimeMillis;
                            if (j != 0) {
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                            }
                            if (inputContentInfoCompat2 != null) {
                                inputContentInfoCompat2.releasePermission();
                            }
                            if (arrayList6 != null) {
                                arrayList = arrayList6;
                                if (arrayList.isEmpty()) {
                                    for (i8 = 0; i8 < arrayList.size(); i8++) {
                                        SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str, j2, messageObject2, (CharSequence) arrayList3.get(i8), (ArrayList) arrayList4.get(i8));
                                    }
                                }
                            }
                            if (BuildVars.LOGS_ENABLED) {
                                stringBuilder6 = new StringBuilder();
                                stringBuilder6.append("total send time = ");
                                stringBuilder6.append(System.currentTimeMillis() - j5);
                                FileLog.m0d(stringBuilder6.toString());
                            }
                        }
                    }
                    peerLayerVersion = 0;
                    if (z6) {
                        if (peerLayerVersion >= 73) {
                        }
                        i = peerLayerVersion;
                        c18201 = null;
                        arrayList = null;
                        arrayList2 = arrayList;
                        arrayList3 = arrayList2;
                        arrayList4 = arrayList3;
                        str = arrayList4;
                        j = 0;
                        i2 = 0;
                        z = false;
                        j2 = 0;
                        while (z < size) {
                            sendingMediaInfo = (SendingMediaInfo) arrayList2.get(z);
                            if (z4) {
                                peerLayerVersion = i;
                            } else {
                                if (z6) {
                                    peerLayerVersion = i;
                                } else {
                                    peerLayerVersion = i;
                                    if (peerLayerVersion >= 73) {
                                    }
                                }
                                j2 = Utilities.random.nextLong();
                                i = 0;
                                j3 = j2;
                                if (sendingMediaInfo.searchImage == null) {
                                    if (sendingMediaInfo.searchImage.type != z5) {
                                        hashMap = new HashMap();
                                        if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                            tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                            j4 = j3;
                                            arrayList5 = arrayList;
                                            file = FileLoader.getPathToAttach(tLObject, z5);
                                        } else {
                                            if (z6) {
                                                instance = MessagesStorage.getInstance(i);
                                                str2 = sendingMediaInfo.searchImage.imageUrl;
                                                if (z6) {
                                                    j4 = j3;
                                                    i3 = 1;
                                                } else {
                                                    j4 = j3;
                                                    i3 = 4;
                                                }
                                                document = (Document) instance.getSentFile(str2, i3);
                                                if (document instanceof TL_document) {
                                                    tLObject = (TL_document) document;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                    stringBuilder.append(".");
                                                    stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                    arrayList5 = arrayList;
                                                    file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                                }
                                            } else {
                                                j4 = j3;
                                            }
                                            tLObject = null;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                            stringBuilder.append(".");
                                            stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                            arrayList5 = arrayList;
                                            file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                        }
                                        if (tLObject != null) {
                                            if (sendingMediaInfo.searchImage.localUrl != null) {
                                                hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                            }
                                            tL_document = new TL_document();
                                            i4 = z;
                                            tL_document.id = 0;
                                            tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                            tL_documentAttributeFilename.file_name = "animation.gif";
                                            tL_document.attributes.add(tL_documentAttributeFilename);
                                            tL_document.size = sendingMediaInfo.searchImage.size;
                                            tL_document.dc_id = 0;
                                            if (file.toString().endsWith("mp4")) {
                                                tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                                tL_document.attributes.add(new TL_documentAttributeAnimated());
                                            } else {
                                                tL_document.mime_type = "image/gif";
                                            }
                                            if (file.exists()) {
                                                file2 = file;
                                            } else {
                                                file = null;
                                                file2 = null;
                                            }
                                            if (file == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (file3.exists()) {
                                                }
                                            }
                                            if (file != null) {
                                                if (file.getAbsolutePath().endsWith("mp4")) {
                                                    loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                    f = 90.0f;
                                                } else {
                                                    f = 90.0f;
                                                    loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                }
                                                if (loadBitmap != null) {
                                                    tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                    loadBitmap.recycle();
                                                }
                                            }
                                            if (tL_document.thumb == null) {
                                                tL_document.thumb = new TL_photoSize();
                                                tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                                tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                                tL_document.thumb.size = 0;
                                                tL_document.thumb.location = new TL_fileLocationUnavailable();
                                                tL_document.thumb.type = "x";
                                            }
                                            tL_document2 = tL_document;
                                        } else {
                                            i4 = z;
                                            file2 = file;
                                            tL_document2 = tLObject;
                                        }
                                        str3 = sendingMediaInfo.searchImage.imageUrl;
                                        if (file2 == null) {
                                        }
                                        file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                        hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                        j5 = currentTimeMillis;
                                        currentTimeMillis = j4;
                                        c182012 = c18201;
                                        i5 = i4;
                                        sendingMediaInfo2 = sendingMediaInfo;
                                        arrayList6 = arrayList5;
                                        hashMap2 = hashMap;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                    } else {
                                        arrayList6 = arrayList;
                                        i5 = z;
                                        j5 = currentTimeMillis;
                                        c182012 = c18201;
                                        currentTimeMillis = j3;
                                        if (z6) {
                                        }
                                        tL_photo = null;
                                        if (tL_photo != null) {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                            stringBuilder.append(".");
                                            stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                            file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                            if (tL_photo != null) {
                                                z3 = false;
                                                if (tL_photo == null) {
                                                    stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                    stringBuilder2.append(".");
                                                    stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                    file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                    if (file2.exists()) {
                                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                    }
                                                    if (tL_photo == null) {
                                                        tL_photo = new TL_photo();
                                                        tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                        tL_photoSize = new TL_photoSize();
                                                        tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                        tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                        tL_photoSize.size = 0;
                                                        tL_photoSize.location = new TL_fileLocationUnavailable();
                                                        tL_photoSize.type = "x";
                                                        tL_photo.sizes.add(tL_photoSize);
                                                    }
                                                }
                                                tL_photo2 = tL_photo;
                                                z4 = z3;
                                            }
                                            z3 = true;
                                            if (tL_photo == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (file2.exists()) {
                                                    tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                }
                                                if (tL_photo == null) {
                                                    tL_photo = new TL_photo();
                                                    tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_photoSize = new TL_photoSize();
                                                    tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                    tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                    tL_photoSize.size = 0;
                                                    tL_photoSize.location = new TL_fileLocationUnavailable();
                                                    tL_photoSize.type = "x";
                                                    tL_photo.sizes.add(tL_photoSize);
                                                }
                                            }
                                            tL_photo2 = tL_photo;
                                            z4 = z3;
                                        } else {
                                            tL_photo2 = tL_photo;
                                            z4 = true;
                                        }
                                        if (tL_photo2 != null) {
                                            hashMap4 = new HashMap();
                                            if (sendingMediaInfo.searchImage.imageUrl != null) {
                                                hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                            }
                                            if (z4) {
                                                i8 = i + 1;
                                                stringBuilder3 = new StringBuilder();
                                                stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder3.append(currentTimeMillis);
                                                hashMap4.put("groupId", stringBuilder3.toString());
                                                if (i8 != 10) {
                                                    if (i5 == size - 1) {
                                                        i = i8;
                                                    }
                                                }
                                                hashMap4.put("final", "1");
                                                i = i8;
                                                j2 = 0;
                                            }
                                            sendingMediaInfo2 = sendingMediaInfo;
                                            hashMap2 = hashMap4;
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        }
                                    }
                                    i6 = peerLayerVersion;
                                    z2 = z6;
                                    i7 = i5;
                                    j = j2;
                                    hashMap3 = c182012;
                                    arrayList = arrayList6;
                                } else {
                                    arrayList6 = arrayList;
                                    z5 = z;
                                    j5 = currentTimeMillis;
                                    c182012 = c18201;
                                    currentTimeMillis = j3;
                                    if (sendingMediaInfo.isVideo) {
                                        if (z3) {
                                            access$2000 = null;
                                        } else {
                                            if (sendingMediaInfo.videoEditedInfo == null) {
                                            }
                                            access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                        }
                                        if (z3) {
                                        }
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = z5;
                                        sendingMediaInfo = sendingMediaInfo;
                                        SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                        j = j2;
                                        hashMap3 = c182012;
                                    } else {
                                        i6 = peerLayerVersion;
                                        z2 = z6;
                                        i7 = z5;
                                        str4 = sendingMediaInfo.path;
                                        str3 = sendingMediaInfo.path;
                                        str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                        str4 = sendingMediaInfo.uri.toString();
                                        if (z3) {
                                            str = FileLoader.getFileExtension(new File(str3));
                                        } else {
                                            if (str3 == null) {
                                            }
                                            if (MediaController.isGif(sendingMediaInfo.uri)) {
                                                str4 = sendingMediaInfo.uri.toString();
                                                str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                                str = "gif";
                                            } else {
                                                if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                    str4 = sendingMediaInfo.uri.toString();
                                                    str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                    str = "webp";
                                                }
                                                str5 = str4;
                                                obj2 = null;
                                                if (obj2 == null) {
                                                    if (arrayList6 != null) {
                                                        arrayList = new ArrayList();
                                                        arrayList7 = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                    } else {
                                                        arrayList7 = arrayList2;
                                                        arrayList8 = arrayList3;
                                                        arrayList9 = arrayList4;
                                                        arrayList = arrayList6;
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList7.add(str5);
                                                    arrayList8.add(sendingMediaInfo.caption);
                                                    arrayList9.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList7;
                                                    arrayList3 = arrayList8;
                                                    arrayList4 = arrayList9;
                                                    j = j2;
                                                    hashMap3 = c182012;
                                                } else {
                                                    if (str3 == null) {
                                                        file5 = new File(str3);
                                                        stringBuilder4 = new StringBuilder();
                                                        stringBuilder4.append(str5);
                                                        stringBuilder4.append(file5.length());
                                                        stringBuilder4.append("_");
                                                        stringBuilder4.append(file5.lastModified());
                                                        str4 = stringBuilder4.toString();
                                                    } else {
                                                        str4 = null;
                                                    }
                                                    if (c182012 == null) {
                                                        hashMap3 = c182012;
                                                        mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                        if (tL_photo3 == null) {
                                                            mediaSendPrepareWorker.sync.await();
                                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                                        }
                                                    } else {
                                                        hashMap3 = c182012;
                                                        if (z2) {
                                                        }
                                                        tL_photo3 = null;
                                                        if (tL_photo3 == null) {
                                                            tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                        }
                                                    }
                                                    if (tL_photo3 == null) {
                                                        hashMap5 = new HashMap();
                                                        if (sendingMediaInfo.masks == null) {
                                                        }
                                                        tL_photo3.has_stickers = z4;
                                                        if (z4) {
                                                            serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                            serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                            for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                                ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                            }
                                                            hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                        }
                                                        if (str4 != null) {
                                                            hashMap5.put("originalPath", str4);
                                                        }
                                                        if (z4) {
                                                            i8 = i + 1;
                                                            stringBuilder5 = new StringBuilder();
                                                            stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                            stringBuilder5.append(currentTimeMillis);
                                                            hashMap5.put("groupId", stringBuilder5.toString());
                                                            hashMap5.put("final", "1");
                                                            j2 = 0;
                                                        } else {
                                                            i8 = i;
                                                        }
                                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                        i = i8;
                                                        j = j2;
                                                    } else {
                                                        if (arrayList6 != null) {
                                                            arrayList = new ArrayList();
                                                            arrayList8 = new ArrayList();
                                                            arrayList9 = new ArrayList();
                                                            arrayList10 = new ArrayList();
                                                        } else {
                                                            arrayList8 = arrayList2;
                                                            arrayList9 = arrayList3;
                                                            arrayList10 = arrayList4;
                                                            arrayList = arrayList6;
                                                        }
                                                        arrayList.add(str3);
                                                        arrayList8.add(str4);
                                                        arrayList9.add(sendingMediaInfo.caption);
                                                        arrayList10.add(sendingMediaInfo.entities);
                                                        arrayList2 = arrayList8;
                                                        arrayList3 = arrayList9;
                                                        arrayList4 = arrayList10;
                                                        j = j2;
                                                    }
                                                }
                                            }
                                        }
                                        str5 = str4;
                                        obj2 = 1;
                                        if (obj2 == null) {
                                            if (str3 == null) {
                                                str4 = null;
                                            } else {
                                                file5 = new File(str3);
                                                stringBuilder4 = new StringBuilder();
                                                stringBuilder4.append(str5);
                                                stringBuilder4.append(file5.length());
                                                stringBuilder4.append("_");
                                                stringBuilder4.append(file5.lastModified());
                                                str4 = stringBuilder4.toString();
                                            }
                                            if (c182012 == null) {
                                                hashMap3 = c182012;
                                                if (z2) {
                                                }
                                                tL_photo3 = null;
                                                if (tL_photo3 == null) {
                                                    tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                }
                                            } else {
                                                hashMap3 = c182012;
                                                mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                if (tL_photo3 == null) {
                                                    mediaSendPrepareWorker.sync.await();
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                }
                                            }
                                            if (tL_photo3 == null) {
                                                if (arrayList6 != null) {
                                                    arrayList8 = arrayList2;
                                                    arrayList9 = arrayList3;
                                                    arrayList10 = arrayList4;
                                                    arrayList = arrayList6;
                                                } else {
                                                    arrayList = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                    arrayList10 = new ArrayList();
                                                }
                                                arrayList.add(str3);
                                                arrayList8.add(str4);
                                                arrayList9.add(sendingMediaInfo.caption);
                                                arrayList10.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList8;
                                                arrayList3 = arrayList9;
                                                arrayList4 = arrayList10;
                                                j = j2;
                                            } else {
                                                hashMap5 = new HashMap();
                                                if (sendingMediaInfo.masks == null) {
                                                }
                                                tL_photo3.has_stickers = z4;
                                                if (z4) {
                                                    serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                    serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                    for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                        ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                    }
                                                    hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                }
                                                if (str4 != null) {
                                                    hashMap5.put("originalPath", str4);
                                                }
                                                if (z4) {
                                                    i8 = i;
                                                } else {
                                                    i8 = i + 1;
                                                    stringBuilder5 = new StringBuilder();
                                                    stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder5.append(currentTimeMillis);
                                                    hashMap5.put("groupId", stringBuilder5.toString());
                                                    hashMap5.put("final", "1");
                                                    j2 = 0;
                                                }
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                i = i8;
                                                j = j2;
                                            }
                                        } else {
                                            if (arrayList6 != null) {
                                                arrayList7 = arrayList2;
                                                arrayList8 = arrayList3;
                                                arrayList9 = arrayList4;
                                                arrayList = arrayList6;
                                            } else {
                                                arrayList = new ArrayList();
                                                arrayList7 = new ArrayList();
                                                arrayList8 = new ArrayList();
                                                arrayList9 = new ArrayList();
                                            }
                                            arrayList.add(str3);
                                            arrayList7.add(str5);
                                            arrayList8.add(sendingMediaInfo.caption);
                                            arrayList9.add(sendingMediaInfo.entities);
                                            arrayList2 = arrayList7;
                                            arrayList3 = arrayList8;
                                            arrayList4 = arrayList9;
                                            j = j2;
                                            hashMap3 = c182012;
                                        }
                                    }
                                    arrayList = arrayList6;
                                }
                                z = i7 + 1;
                                obj = hashMap3;
                                j2 = currentTimeMillis;
                                i2 = i;
                                i = i6;
                                z6 = z2;
                                currentTimeMillis = j5;
                                z5 = true;
                            }
                            i = i2;
                            j3 = j2;
                            j2 = j;
                            if (sendingMediaInfo.searchImage == null) {
                                arrayList6 = arrayList;
                                z5 = z;
                                j5 = currentTimeMillis;
                                c182012 = c18201;
                                currentTimeMillis = j3;
                                if (sendingMediaInfo.isVideo) {
                                    i6 = peerLayerVersion;
                                    z2 = z6;
                                    i7 = z5;
                                    str4 = sendingMediaInfo.path;
                                    str3 = sendingMediaInfo.path;
                                    str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                    str4 = sendingMediaInfo.uri.toString();
                                    if (z3) {
                                        if (str3 == null) {
                                        }
                                        if (MediaController.isGif(sendingMediaInfo.uri)) {
                                            if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                str4 = sendingMediaInfo.uri.toString();
                                                str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                str = "webp";
                                            }
                                            str5 = str4;
                                            obj2 = null;
                                            if (obj2 == null) {
                                                if (arrayList6 != null) {
                                                    arrayList = new ArrayList();
                                                    arrayList7 = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                } else {
                                                    arrayList7 = arrayList2;
                                                    arrayList8 = arrayList3;
                                                    arrayList9 = arrayList4;
                                                    arrayList = arrayList6;
                                                }
                                                arrayList.add(str3);
                                                arrayList7.add(str5);
                                                arrayList8.add(sendingMediaInfo.caption);
                                                arrayList9.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList7;
                                                arrayList3 = arrayList8;
                                                arrayList4 = arrayList9;
                                                j = j2;
                                                hashMap3 = c182012;
                                            } else {
                                                if (str3 == null) {
                                                    file5 = new File(str3);
                                                    stringBuilder4 = new StringBuilder();
                                                    stringBuilder4.append(str5);
                                                    stringBuilder4.append(file5.length());
                                                    stringBuilder4.append("_");
                                                    stringBuilder4.append(file5.lastModified());
                                                    str4 = stringBuilder4.toString();
                                                } else {
                                                    str4 = null;
                                                }
                                                if (c182012 == null) {
                                                    hashMap3 = c182012;
                                                    mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                    if (tL_photo3 == null) {
                                                        mediaSendPrepareWorker.sync.await();
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                    }
                                                } else {
                                                    hashMap3 = c182012;
                                                    if (z2) {
                                                    }
                                                    tL_photo3 = null;
                                                    if (tL_photo3 == null) {
                                                        tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                    }
                                                }
                                                if (tL_photo3 == null) {
                                                    hashMap5 = new HashMap();
                                                    if (sendingMediaInfo.masks == null) {
                                                    }
                                                    tL_photo3.has_stickers = z4;
                                                    if (z4) {
                                                        serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                        serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                        for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                            ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                        }
                                                        hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                    }
                                                    if (str4 != null) {
                                                        hashMap5.put("originalPath", str4);
                                                    }
                                                    if (z4) {
                                                        i8 = i + 1;
                                                        stringBuilder5 = new StringBuilder();
                                                        stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder5.append(currentTimeMillis);
                                                        hashMap5.put("groupId", stringBuilder5.toString());
                                                        hashMap5.put("final", "1");
                                                        j2 = 0;
                                                    } else {
                                                        i8 = i;
                                                    }
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    i = i8;
                                                    j = j2;
                                                } else {
                                                    if (arrayList6 != null) {
                                                        arrayList = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                        arrayList10 = new ArrayList();
                                                    } else {
                                                        arrayList8 = arrayList2;
                                                        arrayList9 = arrayList3;
                                                        arrayList10 = arrayList4;
                                                        arrayList = arrayList6;
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList8.add(str4);
                                                    arrayList9.add(sendingMediaInfo.caption);
                                                    arrayList10.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList8;
                                                    arrayList3 = arrayList9;
                                                    arrayList4 = arrayList10;
                                                    j = j2;
                                                }
                                            }
                                        } else {
                                            str4 = sendingMediaInfo.uri.toString();
                                            str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                            str = "gif";
                                        }
                                    } else {
                                        str = FileLoader.getFileExtension(new File(str3));
                                    }
                                    str5 = str4;
                                    obj2 = 1;
                                    if (obj2 == null) {
                                        if (str3 == null) {
                                            str4 = null;
                                        } else {
                                            file5 = new File(str3);
                                            stringBuilder4 = new StringBuilder();
                                            stringBuilder4.append(str5);
                                            stringBuilder4.append(file5.length());
                                            stringBuilder4.append("_");
                                            stringBuilder4.append(file5.lastModified());
                                            str4 = stringBuilder4.toString();
                                        }
                                        if (c182012 == null) {
                                            hashMap3 = c182012;
                                            if (z2) {
                                            }
                                            tL_photo3 = null;
                                            if (tL_photo3 == null) {
                                                tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                            }
                                        } else {
                                            hashMap3 = c182012;
                                            mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                            if (tL_photo3 == null) {
                                                mediaSendPrepareWorker.sync.await();
                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                            }
                                        }
                                        if (tL_photo3 == null) {
                                            if (arrayList6 != null) {
                                                arrayList8 = arrayList2;
                                                arrayList9 = arrayList3;
                                                arrayList10 = arrayList4;
                                                arrayList = arrayList6;
                                            } else {
                                                arrayList = new ArrayList();
                                                arrayList8 = new ArrayList();
                                                arrayList9 = new ArrayList();
                                                arrayList10 = new ArrayList();
                                            }
                                            arrayList.add(str3);
                                            arrayList8.add(str4);
                                            arrayList9.add(sendingMediaInfo.caption);
                                            arrayList10.add(sendingMediaInfo.entities);
                                            arrayList2 = arrayList8;
                                            arrayList3 = arrayList9;
                                            arrayList4 = arrayList10;
                                            j = j2;
                                        } else {
                                            hashMap5 = new HashMap();
                                            if (sendingMediaInfo.masks == null) {
                                            }
                                            tL_photo3.has_stickers = z4;
                                            if (z4) {
                                                serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                    ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                }
                                                hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                            }
                                            if (str4 != null) {
                                                hashMap5.put("originalPath", str4);
                                            }
                                            if (z4) {
                                                i8 = i;
                                            } else {
                                                i8 = i + 1;
                                                stringBuilder5 = new StringBuilder();
                                                stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder5.append(currentTimeMillis);
                                                hashMap5.put("groupId", stringBuilder5.toString());
                                                hashMap5.put("final", "1");
                                                j2 = 0;
                                            }
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            i = i8;
                                            j = j2;
                                        }
                                    } else {
                                        if (arrayList6 != null) {
                                            arrayList7 = arrayList2;
                                            arrayList8 = arrayList3;
                                            arrayList9 = arrayList4;
                                            arrayList = arrayList6;
                                        } else {
                                            arrayList = new ArrayList();
                                            arrayList7 = new ArrayList();
                                            arrayList8 = new ArrayList();
                                            arrayList9 = new ArrayList();
                                        }
                                        arrayList.add(str3);
                                        arrayList7.add(str5);
                                        arrayList8.add(sendingMediaInfo.caption);
                                        arrayList9.add(sendingMediaInfo.entities);
                                        arrayList2 = arrayList7;
                                        arrayList3 = arrayList8;
                                        arrayList4 = arrayList9;
                                        j = j2;
                                        hashMap3 = c182012;
                                    }
                                } else {
                                    if (z3) {
                                        if (sendingMediaInfo.videoEditedInfo == null) {
                                        }
                                        access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                    } else {
                                        access$2000 = null;
                                    }
                                    if (z3) {
                                    }
                                    i6 = peerLayerVersion;
                                    z2 = z6;
                                    i7 = z5;
                                    sendingMediaInfo = sendingMediaInfo;
                                    SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                    j = j2;
                                    hashMap3 = c182012;
                                }
                                arrayList = arrayList6;
                            } else {
                                if (sendingMediaInfo.searchImage.type != z5) {
                                    arrayList6 = arrayList;
                                    i5 = z;
                                    j5 = currentTimeMillis;
                                    c182012 = c18201;
                                    currentTimeMillis = j3;
                                    if (z6) {
                                    }
                                    tL_photo = null;
                                    if (tL_photo != null) {
                                        tL_photo2 = tL_photo;
                                        z4 = true;
                                    } else {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                        stringBuilder.append(".");
                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                        if (tL_photo != null) {
                                            z3 = false;
                                            if (tL_photo == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (file2.exists()) {
                                                    tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                }
                                                if (tL_photo == null) {
                                                    tL_photo = new TL_photo();
                                                    tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_photoSize = new TL_photoSize();
                                                    tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                    tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                    tL_photoSize.size = 0;
                                                    tL_photoSize.location = new TL_fileLocationUnavailable();
                                                    tL_photoSize.type = "x";
                                                    tL_photo.sizes.add(tL_photoSize);
                                                }
                                            }
                                            tL_photo2 = tL_photo;
                                            z4 = z3;
                                        }
                                        z3 = true;
                                        if (tL_photo == null) {
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                            stringBuilder2.append(".");
                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                            file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                            if (file2.exists()) {
                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                            }
                                            if (tL_photo == null) {
                                                tL_photo = new TL_photo();
                                                tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_photoSize = new TL_photoSize();
                                                tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                tL_photoSize.size = 0;
                                                tL_photoSize.location = new TL_fileLocationUnavailable();
                                                tL_photoSize.type = "x";
                                                tL_photo.sizes.add(tL_photoSize);
                                            }
                                        }
                                        tL_photo2 = tL_photo;
                                        z4 = z3;
                                    }
                                    if (tL_photo2 != null) {
                                        hashMap4 = new HashMap();
                                        if (sendingMediaInfo.searchImage.imageUrl != null) {
                                            hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                        }
                                        if (z4) {
                                            i8 = i + 1;
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                            stringBuilder3.append(currentTimeMillis);
                                            hashMap4.put("groupId", stringBuilder3.toString());
                                            if (i8 != 10) {
                                                if (i5 == size - 1) {
                                                    i = i8;
                                                }
                                            }
                                            hashMap4.put("final", "1");
                                            i = i8;
                                            j2 = 0;
                                        }
                                        sendingMediaInfo2 = sendingMediaInfo;
                                        hashMap2 = hashMap4;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                    }
                                } else {
                                    hashMap = new HashMap();
                                    if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                        if (z6) {
                                            j4 = j3;
                                        } else {
                                            instance = MessagesStorage.getInstance(i);
                                            str2 = sendingMediaInfo.searchImage.imageUrl;
                                            if (z6) {
                                                j4 = j3;
                                                i3 = 4;
                                            } else {
                                                j4 = j3;
                                                i3 = 1;
                                            }
                                            document = (Document) instance.getSentFile(str2, i3);
                                            if (document instanceof TL_document) {
                                                tLObject = (TL_document) document;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                arrayList5 = arrayList;
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            }
                                        }
                                        tLObject = null;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                        stringBuilder.append(".");
                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                        arrayList5 = arrayList;
                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                    } else {
                                        tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                        j4 = j3;
                                        arrayList5 = arrayList;
                                        file = FileLoader.getPathToAttach(tLObject, z5);
                                    }
                                    if (tLObject != null) {
                                        i4 = z;
                                        file2 = file;
                                        tL_document2 = tLObject;
                                    } else {
                                        if (sendingMediaInfo.searchImage.localUrl != null) {
                                            hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                        }
                                        tL_document = new TL_document();
                                        i4 = z;
                                        tL_document.id = 0;
                                        tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                        tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                        tL_documentAttributeFilename.file_name = "animation.gif";
                                        tL_document.attributes.add(tL_documentAttributeFilename);
                                        tL_document.size = sendingMediaInfo.searchImage.size;
                                        tL_document.dc_id = 0;
                                        if (file.toString().endsWith("mp4")) {
                                            tL_document.mime_type = "image/gif";
                                        } else {
                                            tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                            tL_document.attributes.add(new TL_documentAttributeAnimated());
                                        }
                                        if (file.exists()) {
                                            file = null;
                                            file2 = null;
                                        } else {
                                            file2 = file;
                                        }
                                        if (file == null) {
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                            stringBuilder2.append(".");
                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                            file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                            if (file3.exists()) {
                                            }
                                        }
                                        if (file != null) {
                                            if (file.getAbsolutePath().endsWith("mp4")) {
                                                f = 90.0f;
                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            } else {
                                                loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                f = 90.0f;
                                            }
                                            if (loadBitmap != null) {
                                                tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                loadBitmap.recycle();
                                            }
                                        }
                                        if (tL_document.thumb == null) {
                                            tL_document.thumb = new TL_photoSize();
                                            tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                            tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                            tL_document.thumb.size = 0;
                                            tL_document.thumb.location = new TL_fileLocationUnavailable();
                                            tL_document.thumb.type = "x";
                                        }
                                        tL_document2 = tL_document;
                                    }
                                    str3 = sendingMediaInfo.searchImage.imageUrl;
                                    if (file2 == null) {
                                    }
                                    file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                    hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                    j5 = currentTimeMillis;
                                    currentTimeMillis = j4;
                                    c182012 = c18201;
                                    i5 = i4;
                                    sendingMediaInfo2 = sendingMediaInfo;
                                    arrayList6 = arrayList5;
                                    hashMap2 = hashMap;
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                }
                                i6 = peerLayerVersion;
                                z2 = z6;
                                i7 = i5;
                                j = j2;
                                hashMap3 = c182012;
                                arrayList = arrayList6;
                            }
                            z = i7 + 1;
                            obj = hashMap3;
                            j2 = currentTimeMillis;
                            i2 = i;
                            i = i6;
                            z6 = z2;
                            currentTimeMillis = j5;
                            z5 = true;
                        }
                        arrayList6 = arrayList;
                        j5 = currentTimeMillis;
                        if (j != 0) {
                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                        }
                        if (inputContentInfoCompat2 != null) {
                            inputContentInfoCompat2.releasePermission();
                        }
                        if (arrayList6 != null) {
                            arrayList = arrayList6;
                            if (arrayList.isEmpty()) {
                                for (i8 = 0; i8 < arrayList.size(); i8++) {
                                    SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str, j2, messageObject2, (CharSequence) arrayList3.get(i8), (ArrayList) arrayList4.get(i8));
                                }
                            }
                        }
                        if (BuildVars.LOGS_ENABLED) {
                            stringBuilder6 = new StringBuilder();
                            stringBuilder6.append("total send time = ");
                            stringBuilder6.append(System.currentTimeMillis() - j5);
                            FileLog.m0d(stringBuilder6.toString());
                        }
                    }
                    hashMap = new HashMap();
                    z3 = false;
                    while (z3 < size) {
                        sendingMediaInfo3 = (SendingMediaInfo) arrayList2.get(z3);
                        file4 = sendingMediaInfo3.path;
                        str6 = sendingMediaInfo3.path;
                        str6 = AndroidUtilities.getPath(sendingMediaInfo3.uri);
                        file4 = sendingMediaInfo3.uri.toString();
                        if (str6 != null) {
                            if (str6.endsWith(".gif")) {
                                if (str6.endsWith(".webp")) {
                                }
                            }
                            i = peerLayerVersion;
                            z3++;
                            peerLayerVersion = i;
                        }
                        if (MediaController.isGif(sendingMediaInfo3.uri)) {
                            if (MediaController.isWebp(sendingMediaInfo3.uri)) {
                            }
                            if (str6 == null) {
                                i = peerLayerVersion;
                                file4 = null;
                            } else {
                                File file62 = new File(str6);
                                stringBuilder3 = new StringBuilder();
                                stringBuilder3.append(file4);
                                i = peerLayerVersion;
                                stringBuilder3.append(file62.length());
                                stringBuilder3.append("_");
                                stringBuilder3.append(file62.lastModified());
                                file4 = stringBuilder3.toString();
                            }
                            if (z6) {
                            }
                            tL_photo4 = null;
                            mediaSendPrepareWorker2 = new MediaSendPrepareWorker();
                            hashMap.put(sendingMediaInfo3, mediaSendPrepareWorker2);
                            if (tL_photo4 == null) {
                                mediaSendPrepareWorker2.sync = new CountDownLatch(1);
                                SendMessagesHelper.mediaSendThreadPool.execute(/* anonymous class already generated */);
                            } else {
                                mediaSendPrepareWorker2.photo = tL_photo4;
                            }
                            z3++;
                            peerLayerVersion = i;
                        }
                        i = peerLayerVersion;
                        z3++;
                        peerLayerVersion = i;
                    }
                    i = peerLayerVersion;
                    c18201 = hashMap;
                    arrayList = null;
                    arrayList2 = arrayList;
                    arrayList3 = arrayList2;
                    arrayList4 = arrayList3;
                    str = arrayList4;
                    j = 0;
                    i2 = 0;
                    z = false;
                    j2 = 0;
                    while (z < size) {
                        sendingMediaInfo = (SendingMediaInfo) arrayList2.get(z);
                        if (z4) {
                            if (z6) {
                                peerLayerVersion = i;
                                if (peerLayerVersion >= 73) {
                                }
                            } else {
                                peerLayerVersion = i;
                            }
                            j2 = Utilities.random.nextLong();
                            i = 0;
                            j3 = j2;
                            if (sendingMediaInfo.searchImage == null) {
                                if (sendingMediaInfo.searchImage.type != z5) {
                                    hashMap = new HashMap();
                                    if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                        tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                        j4 = j3;
                                        arrayList5 = arrayList;
                                        file = FileLoader.getPathToAttach(tLObject, z5);
                                    } else {
                                        if (z6) {
                                            instance = MessagesStorage.getInstance(i);
                                            str2 = sendingMediaInfo.searchImage.imageUrl;
                                            if (z6) {
                                                j4 = j3;
                                                i3 = 1;
                                            } else {
                                                j4 = j3;
                                                i3 = 4;
                                            }
                                            document = (Document) instance.getSentFile(str2, i3);
                                            if (document instanceof TL_document) {
                                                tLObject = (TL_document) document;
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                                stringBuilder.append(".");
                                                stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                                arrayList5 = arrayList;
                                                file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                            }
                                        } else {
                                            j4 = j3;
                                        }
                                        tLObject = null;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                        stringBuilder.append(".");
                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                        arrayList5 = arrayList;
                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                    }
                                    if (tLObject != null) {
                                        if (sendingMediaInfo.searchImage.localUrl != null) {
                                            hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                        }
                                        tL_document = new TL_document();
                                        i4 = z;
                                        tL_document.id = 0;
                                        tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                        tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                        tL_documentAttributeFilename.file_name = "animation.gif";
                                        tL_document.attributes.add(tL_documentAttributeFilename);
                                        tL_document.size = sendingMediaInfo.searchImage.size;
                                        tL_document.dc_id = 0;
                                        if (file.toString().endsWith("mp4")) {
                                            tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                            tL_document.attributes.add(new TL_documentAttributeAnimated());
                                        } else {
                                            tL_document.mime_type = "image/gif";
                                        }
                                        if (file.exists()) {
                                            file2 = file;
                                        } else {
                                            file = null;
                                            file2 = null;
                                        }
                                        if (file == null) {
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                            stringBuilder2.append(".");
                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                            file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                            if (file3.exists()) {
                                            }
                                        }
                                        if (file != null) {
                                            if (file.getAbsolutePath().endsWith("mp4")) {
                                                loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                                f = 90.0f;
                                            } else {
                                                f = 90.0f;
                                                loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                            }
                                            if (loadBitmap != null) {
                                                tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                                loadBitmap.recycle();
                                            }
                                        }
                                        if (tL_document.thumb == null) {
                                            tL_document.thumb = new TL_photoSize();
                                            tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                            tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                            tL_document.thumb.size = 0;
                                            tL_document.thumb.location = new TL_fileLocationUnavailable();
                                            tL_document.thumb.type = "x";
                                        }
                                        tL_document2 = tL_document;
                                    } else {
                                        i4 = z;
                                        file2 = file;
                                        tL_document2 = tLObject;
                                    }
                                    str3 = sendingMediaInfo.searchImage.imageUrl;
                                    if (file2 == null) {
                                    }
                                    file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                    hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                    j5 = currentTimeMillis;
                                    currentTimeMillis = j4;
                                    c182012 = c18201;
                                    i5 = i4;
                                    sendingMediaInfo2 = sendingMediaInfo;
                                    arrayList6 = arrayList5;
                                    hashMap2 = hashMap;
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                } else {
                                    arrayList6 = arrayList;
                                    i5 = z;
                                    j5 = currentTimeMillis;
                                    c182012 = c18201;
                                    currentTimeMillis = j3;
                                    if (z6) {
                                    }
                                    tL_photo = null;
                                    if (tL_photo != null) {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                        stringBuilder.append(".");
                                        stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                        file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                        tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                        if (tL_photo != null) {
                                            z3 = false;
                                            if (tL_photo == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                                file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (file2.exists()) {
                                                    tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                                }
                                                if (tL_photo == null) {
                                                    tL_photo = new TL_photo();
                                                    tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    tL_photoSize = new TL_photoSize();
                                                    tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                    tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                    tL_photoSize.size = 0;
                                                    tL_photoSize.location = new TL_fileLocationUnavailable();
                                                    tL_photoSize.type = "x";
                                                    tL_photo.sizes.add(tL_photoSize);
                                                }
                                            }
                                            tL_photo2 = tL_photo;
                                            z4 = z3;
                                        }
                                        z3 = true;
                                        if (tL_photo == null) {
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                            stringBuilder2.append(".");
                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                            file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                            if (file2.exists()) {
                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                            }
                                            if (tL_photo == null) {
                                                tL_photo = new TL_photo();
                                                tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_photoSize = new TL_photoSize();
                                                tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                tL_photoSize.size = 0;
                                                tL_photoSize.location = new TL_fileLocationUnavailable();
                                                tL_photoSize.type = "x";
                                                tL_photo.sizes.add(tL_photoSize);
                                            }
                                        }
                                        tL_photo2 = tL_photo;
                                        z4 = z3;
                                    } else {
                                        tL_photo2 = tL_photo;
                                        z4 = true;
                                    }
                                    if (tL_photo2 != null) {
                                        hashMap4 = new HashMap();
                                        if (sendingMediaInfo.searchImage.imageUrl != null) {
                                            hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                        }
                                        if (z4) {
                                            i8 = i + 1;
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                            stringBuilder3.append(currentTimeMillis);
                                            hashMap4.put("groupId", stringBuilder3.toString());
                                            if (i8 != 10) {
                                                if (i5 == size - 1) {
                                                    i = i8;
                                                }
                                            }
                                            hashMap4.put("final", "1");
                                            i = i8;
                                            j2 = 0;
                                        }
                                        sendingMediaInfo2 = sendingMediaInfo;
                                        hashMap2 = hashMap4;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                    }
                                }
                                i6 = peerLayerVersion;
                                z2 = z6;
                                i7 = i5;
                                j = j2;
                                hashMap3 = c182012;
                                arrayList = arrayList6;
                            } else {
                                arrayList6 = arrayList;
                                z5 = z;
                                j5 = currentTimeMillis;
                                c182012 = c18201;
                                currentTimeMillis = j3;
                                if (sendingMediaInfo.isVideo) {
                                    if (z3) {
                                        access$2000 = null;
                                    } else {
                                        if (sendingMediaInfo.videoEditedInfo == null) {
                                        }
                                        access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                    }
                                    if (z3) {
                                    }
                                    i6 = peerLayerVersion;
                                    z2 = z6;
                                    i7 = z5;
                                    sendingMediaInfo = sendingMediaInfo;
                                    SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                    j = j2;
                                    hashMap3 = c182012;
                                } else {
                                    i6 = peerLayerVersion;
                                    z2 = z6;
                                    i7 = z5;
                                    str4 = sendingMediaInfo.path;
                                    str3 = sendingMediaInfo.path;
                                    str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                    str4 = sendingMediaInfo.uri.toString();
                                    if (z3) {
                                        str = FileLoader.getFileExtension(new File(str3));
                                    } else {
                                        if (str3 == null) {
                                        }
                                        if (MediaController.isGif(sendingMediaInfo.uri)) {
                                            str4 = sendingMediaInfo.uri.toString();
                                            str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                            str = "gif";
                                        } else {
                                            if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                                str4 = sendingMediaInfo.uri.toString();
                                                str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                                str = "webp";
                                            }
                                            str5 = str4;
                                            obj2 = null;
                                            if (obj2 == null) {
                                                if (arrayList6 != null) {
                                                    arrayList = new ArrayList();
                                                    arrayList7 = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                } else {
                                                    arrayList7 = arrayList2;
                                                    arrayList8 = arrayList3;
                                                    arrayList9 = arrayList4;
                                                    arrayList = arrayList6;
                                                }
                                                arrayList.add(str3);
                                                arrayList7.add(str5);
                                                arrayList8.add(sendingMediaInfo.caption);
                                                arrayList9.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList7;
                                                arrayList3 = arrayList8;
                                                arrayList4 = arrayList9;
                                                j = j2;
                                                hashMap3 = c182012;
                                            } else {
                                                if (str3 == null) {
                                                    file5 = new File(str3);
                                                    stringBuilder4 = new StringBuilder();
                                                    stringBuilder4.append(str5);
                                                    stringBuilder4.append(file5.length());
                                                    stringBuilder4.append("_");
                                                    stringBuilder4.append(file5.lastModified());
                                                    str4 = stringBuilder4.toString();
                                                } else {
                                                    str4 = null;
                                                }
                                                if (c182012 == null) {
                                                    hashMap3 = c182012;
                                                    mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                    if (tL_photo3 == null) {
                                                        mediaSendPrepareWorker.sync.await();
                                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                                    }
                                                } else {
                                                    hashMap3 = c182012;
                                                    if (z2) {
                                                    }
                                                    tL_photo3 = null;
                                                    if (tL_photo3 == null) {
                                                        tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                    }
                                                }
                                                if (tL_photo3 == null) {
                                                    hashMap5 = new HashMap();
                                                    if (sendingMediaInfo.masks == null) {
                                                    }
                                                    tL_photo3.has_stickers = z4;
                                                    if (z4) {
                                                        serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                        serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                        for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                            ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                        }
                                                        hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                    }
                                                    if (str4 != null) {
                                                        hashMap5.put("originalPath", str4);
                                                    }
                                                    if (z4) {
                                                        i8 = i + 1;
                                                        stringBuilder5 = new StringBuilder();
                                                        stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                        stringBuilder5.append(currentTimeMillis);
                                                        hashMap5.put("groupId", stringBuilder5.toString());
                                                        hashMap5.put("final", "1");
                                                        j2 = 0;
                                                    } else {
                                                        i8 = i;
                                                    }
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    i = i8;
                                                    j = j2;
                                                } else {
                                                    if (arrayList6 != null) {
                                                        arrayList = new ArrayList();
                                                        arrayList8 = new ArrayList();
                                                        arrayList9 = new ArrayList();
                                                        arrayList10 = new ArrayList();
                                                    } else {
                                                        arrayList8 = arrayList2;
                                                        arrayList9 = arrayList3;
                                                        arrayList10 = arrayList4;
                                                        arrayList = arrayList6;
                                                    }
                                                    arrayList.add(str3);
                                                    arrayList8.add(str4);
                                                    arrayList9.add(sendingMediaInfo.caption);
                                                    arrayList10.add(sendingMediaInfo.entities);
                                                    arrayList2 = arrayList8;
                                                    arrayList3 = arrayList9;
                                                    arrayList4 = arrayList10;
                                                    j = j2;
                                                }
                                            }
                                        }
                                    }
                                    str5 = str4;
                                    obj2 = 1;
                                    if (obj2 == null) {
                                        if (str3 == null) {
                                            str4 = null;
                                        } else {
                                            file5 = new File(str3);
                                            stringBuilder4 = new StringBuilder();
                                            stringBuilder4.append(str5);
                                            stringBuilder4.append(file5.length());
                                            stringBuilder4.append("_");
                                            stringBuilder4.append(file5.lastModified());
                                            str4 = stringBuilder4.toString();
                                        }
                                        if (c182012 == null) {
                                            hashMap3 = c182012;
                                            if (z2) {
                                            }
                                            tL_photo3 = null;
                                            if (tL_photo3 == null) {
                                                tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                            }
                                        } else {
                                            hashMap3 = c182012;
                                            mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                            if (tL_photo3 == null) {
                                                mediaSendPrepareWorker.sync.await();
                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                            }
                                        }
                                        if (tL_photo3 == null) {
                                            if (arrayList6 != null) {
                                                arrayList8 = arrayList2;
                                                arrayList9 = arrayList3;
                                                arrayList10 = arrayList4;
                                                arrayList = arrayList6;
                                            } else {
                                                arrayList = new ArrayList();
                                                arrayList8 = new ArrayList();
                                                arrayList9 = new ArrayList();
                                                arrayList10 = new ArrayList();
                                            }
                                            arrayList.add(str3);
                                            arrayList8.add(str4);
                                            arrayList9.add(sendingMediaInfo.caption);
                                            arrayList10.add(sendingMediaInfo.entities);
                                            arrayList2 = arrayList8;
                                            arrayList3 = arrayList9;
                                            arrayList4 = arrayList10;
                                            j = j2;
                                        } else {
                                            hashMap5 = new HashMap();
                                            if (sendingMediaInfo.masks == null) {
                                            }
                                            tL_photo3.has_stickers = z4;
                                            if (z4) {
                                                serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                    ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                }
                                                hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                            }
                                            if (str4 != null) {
                                                hashMap5.put("originalPath", str4);
                                            }
                                            if (z4) {
                                                i8 = i;
                                            } else {
                                                i8 = i + 1;
                                                stringBuilder5 = new StringBuilder();
                                                stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder5.append(currentTimeMillis);
                                                hashMap5.put("groupId", stringBuilder5.toString());
                                                hashMap5.put("final", "1");
                                                j2 = 0;
                                            }
                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                            i = i8;
                                            j = j2;
                                        }
                                    } else {
                                        if (arrayList6 != null) {
                                            arrayList7 = arrayList2;
                                            arrayList8 = arrayList3;
                                            arrayList9 = arrayList4;
                                            arrayList = arrayList6;
                                        } else {
                                            arrayList = new ArrayList();
                                            arrayList7 = new ArrayList();
                                            arrayList8 = new ArrayList();
                                            arrayList9 = new ArrayList();
                                        }
                                        arrayList.add(str3);
                                        arrayList7.add(str5);
                                        arrayList8.add(sendingMediaInfo.caption);
                                        arrayList9.add(sendingMediaInfo.entities);
                                        arrayList2 = arrayList7;
                                        arrayList3 = arrayList8;
                                        arrayList4 = arrayList9;
                                        j = j2;
                                        hashMap3 = c182012;
                                    }
                                }
                                arrayList = arrayList6;
                            }
                            z = i7 + 1;
                            obj = hashMap3;
                            j2 = currentTimeMillis;
                            i2 = i;
                            i = i6;
                            z6 = z2;
                            currentTimeMillis = j5;
                            z5 = true;
                        } else {
                            peerLayerVersion = i;
                        }
                        i = i2;
                        j3 = j2;
                        j2 = j;
                        if (sendingMediaInfo.searchImage == null) {
                            arrayList6 = arrayList;
                            z5 = z;
                            j5 = currentTimeMillis;
                            c182012 = c18201;
                            currentTimeMillis = j3;
                            if (sendingMediaInfo.isVideo) {
                                i6 = peerLayerVersion;
                                z2 = z6;
                                i7 = z5;
                                str4 = sendingMediaInfo.path;
                                str3 = sendingMediaInfo.path;
                                str3 = AndroidUtilities.getPath(sendingMediaInfo.uri);
                                str4 = sendingMediaInfo.uri.toString();
                                if (z3) {
                                    if (str3 == null) {
                                    }
                                    if (MediaController.isGif(sendingMediaInfo.uri)) {
                                        if (MediaController.isWebp(sendingMediaInfo.uri)) {
                                            str4 = sendingMediaInfo.uri.toString();
                                            str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "webp");
                                            str = "webp";
                                        }
                                        str5 = str4;
                                        obj2 = null;
                                        if (obj2 == null) {
                                            if (arrayList6 != null) {
                                                arrayList = new ArrayList();
                                                arrayList7 = new ArrayList();
                                                arrayList8 = new ArrayList();
                                                arrayList9 = new ArrayList();
                                            } else {
                                                arrayList7 = arrayList2;
                                                arrayList8 = arrayList3;
                                                arrayList9 = arrayList4;
                                                arrayList = arrayList6;
                                            }
                                            arrayList.add(str3);
                                            arrayList7.add(str5);
                                            arrayList8.add(sendingMediaInfo.caption);
                                            arrayList9.add(sendingMediaInfo.entities);
                                            arrayList2 = arrayList7;
                                            arrayList3 = arrayList8;
                                            arrayList4 = arrayList9;
                                            j = j2;
                                            hashMap3 = c182012;
                                        } else {
                                            if (str3 == null) {
                                                file5 = new File(str3);
                                                stringBuilder4 = new StringBuilder();
                                                stringBuilder4.append(str5);
                                                stringBuilder4.append(file5.length());
                                                stringBuilder4.append("_");
                                                stringBuilder4.append(file5.lastModified());
                                                str4 = stringBuilder4.toString();
                                            } else {
                                                str4 = null;
                                            }
                                            if (c182012 == null) {
                                                hashMap3 = c182012;
                                                mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                                tL_photo3 = mediaSendPrepareWorker.photo;
                                                if (tL_photo3 == null) {
                                                    mediaSendPrepareWorker.sync.await();
                                                    tL_photo3 = mediaSendPrepareWorker.photo;
                                                }
                                            } else {
                                                hashMap3 = c182012;
                                                if (z2) {
                                                }
                                                tL_photo3 = null;
                                                if (tL_photo3 == null) {
                                                    tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                                }
                                            }
                                            if (tL_photo3 == null) {
                                                hashMap5 = new HashMap();
                                                if (sendingMediaInfo.masks == null) {
                                                }
                                                tL_photo3.has_stickers = z4;
                                                if (z4) {
                                                    serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                                    serializedData.writeInt32(sendingMediaInfo.masks.size());
                                                    for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                        ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                                    }
                                                    hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                }
                                                if (str4 != null) {
                                                    hashMap5.put("originalPath", str4);
                                                }
                                                if (z4) {
                                                    i8 = i + 1;
                                                    stringBuilder5 = new StringBuilder();
                                                    stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder5.append(currentTimeMillis);
                                                    hashMap5.put("groupId", stringBuilder5.toString());
                                                    hashMap5.put("final", "1");
                                                    j2 = 0;
                                                } else {
                                                    i8 = i;
                                                }
                                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                i = i8;
                                                j = j2;
                                            } else {
                                                if (arrayList6 != null) {
                                                    arrayList = new ArrayList();
                                                    arrayList8 = new ArrayList();
                                                    arrayList9 = new ArrayList();
                                                    arrayList10 = new ArrayList();
                                                } else {
                                                    arrayList8 = arrayList2;
                                                    arrayList9 = arrayList3;
                                                    arrayList10 = arrayList4;
                                                    arrayList = arrayList6;
                                                }
                                                arrayList.add(str3);
                                                arrayList8.add(str4);
                                                arrayList9.add(sendingMediaInfo.caption);
                                                arrayList10.add(sendingMediaInfo.entities);
                                                arrayList2 = arrayList8;
                                                arrayList3 = arrayList9;
                                                arrayList4 = arrayList10;
                                                j = j2;
                                            }
                                        }
                                    } else {
                                        str4 = sendingMediaInfo.uri.toString();
                                        str3 = MediaController.copyFileToCache(sendingMediaInfo.uri, "gif");
                                        str = "gif";
                                    }
                                } else {
                                    str = FileLoader.getFileExtension(new File(str3));
                                }
                                str5 = str4;
                                obj2 = 1;
                                if (obj2 == null) {
                                    if (str3 == null) {
                                        str4 = null;
                                    } else {
                                        file5 = new File(str3);
                                        stringBuilder4 = new StringBuilder();
                                        stringBuilder4.append(str5);
                                        stringBuilder4.append(file5.length());
                                        stringBuilder4.append("_");
                                        stringBuilder4.append(file5.lastModified());
                                        str4 = stringBuilder4.toString();
                                    }
                                    if (c182012 == null) {
                                        hashMap3 = c182012;
                                        if (z2) {
                                        }
                                        tL_photo3 = null;
                                        if (tL_photo3 == null) {
                                            tL_photo3 = SendMessagesHelper.getInstance(i).generatePhotoSizes(sendingMediaInfo.path, sendingMediaInfo.uri);
                                        }
                                    } else {
                                        hashMap3 = c182012;
                                        mediaSendPrepareWorker = (MediaSendPrepareWorker) hashMap3.get(sendingMediaInfo);
                                        tL_photo3 = mediaSendPrepareWorker.photo;
                                        if (tL_photo3 == null) {
                                            mediaSendPrepareWorker.sync.await();
                                            tL_photo3 = mediaSendPrepareWorker.photo;
                                        }
                                    }
                                    if (tL_photo3 == null) {
                                        if (arrayList6 != null) {
                                            arrayList8 = arrayList2;
                                            arrayList9 = arrayList3;
                                            arrayList10 = arrayList4;
                                            arrayList = arrayList6;
                                        } else {
                                            arrayList = new ArrayList();
                                            arrayList8 = new ArrayList();
                                            arrayList9 = new ArrayList();
                                            arrayList10 = new ArrayList();
                                        }
                                        arrayList.add(str3);
                                        arrayList8.add(str4);
                                        arrayList9.add(sendingMediaInfo.caption);
                                        arrayList10.add(sendingMediaInfo.entities);
                                        arrayList2 = arrayList8;
                                        arrayList3 = arrayList9;
                                        arrayList4 = arrayList10;
                                        j = j2;
                                    } else {
                                        hashMap5 = new HashMap();
                                        if (sendingMediaInfo.masks == null) {
                                        }
                                        tL_photo3.has_stickers = z4;
                                        if (z4) {
                                            serializedData = new SerializedData((sendingMediaInfo.masks.size() * 20) + 4);
                                            serializedData.writeInt32(sendingMediaInfo.masks.size());
                                            for (i9 = 0; i9 < sendingMediaInfo.masks.size(); i9++) {
                                                ((InputDocument) sendingMediaInfo.masks.get(i9)).serializeToStream(serializedData);
                                            }
                                            hashMap5.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                        }
                                        if (str4 != null) {
                                            hashMap5.put("originalPath", str4);
                                        }
                                        if (z4) {
                                            i8 = i;
                                        } else {
                                            i8 = i + 1;
                                            stringBuilder5 = new StringBuilder();
                                            stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                            stringBuilder5.append(currentTimeMillis);
                                            hashMap5.put("groupId", stringBuilder5.toString());
                                            hashMap5.put("final", "1");
                                            j2 = 0;
                                        }
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        i = i8;
                                        j = j2;
                                    }
                                } else {
                                    if (arrayList6 != null) {
                                        arrayList7 = arrayList2;
                                        arrayList8 = arrayList3;
                                        arrayList9 = arrayList4;
                                        arrayList = arrayList6;
                                    } else {
                                        arrayList = new ArrayList();
                                        arrayList7 = new ArrayList();
                                        arrayList8 = new ArrayList();
                                        arrayList9 = new ArrayList();
                                    }
                                    arrayList.add(str3);
                                    arrayList7.add(str5);
                                    arrayList8.add(sendingMediaInfo.caption);
                                    arrayList9.add(sendingMediaInfo.entities);
                                    arrayList2 = arrayList7;
                                    arrayList3 = arrayList8;
                                    arrayList4 = arrayList9;
                                    j = j2;
                                    hashMap3 = c182012;
                                }
                            } else {
                                if (z3) {
                                    if (sendingMediaInfo.videoEditedInfo == null) {
                                    }
                                    access$2000 = sendingMediaInfo.videoEditedInfo == null ? sendingMediaInfo.videoEditedInfo : SendMessagesHelper.createCompressionSettings(sendingMediaInfo.path);
                                } else {
                                    access$2000 = null;
                                }
                                if (z3) {
                                }
                                i6 = peerLayerVersion;
                                z2 = z6;
                                i7 = z5;
                                sendingMediaInfo = sendingMediaInfo;
                                SendMessagesHelper.prepareSendingDocumentInternal(i, sendingMediaInfo.path, sendingMediaInfo.path, null, null, j2, messageObject2, sendingMediaInfo.caption, sendingMediaInfo.entities);
                                j = j2;
                                hashMap3 = c182012;
                            }
                            arrayList = arrayList6;
                        } else {
                            if (sendingMediaInfo.searchImage.type != z5) {
                                arrayList6 = arrayList;
                                i5 = z;
                                j5 = currentTimeMillis;
                                c182012 = c18201;
                                currentTimeMillis = j3;
                                if (z6) {
                                }
                                tL_photo = null;
                                if (tL_photo != null) {
                                    tL_photo2 = tL_photo;
                                    z4 = true;
                                } else {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                    stringBuilder.append(".");
                                    stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                    file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                    tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file.toString(), null);
                                    if (tL_photo != null) {
                                        z3 = false;
                                        if (tL_photo == null) {
                                            stringBuilder2 = new StringBuilder();
                                            stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                            stringBuilder2.append(".");
                                            stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                            file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                            if (file2.exists()) {
                                                tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                            }
                                            if (tL_photo == null) {
                                                tL_photo = new TL_photo();
                                                tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                tL_photoSize = new TL_photoSize();
                                                tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                                tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                                tL_photoSize.size = 0;
                                                tL_photoSize.location = new TL_fileLocationUnavailable();
                                                tL_photoSize.type = "x";
                                                tL_photo.sizes.add(tL_photoSize);
                                            }
                                        }
                                        tL_photo2 = tL_photo;
                                        z4 = z3;
                                    }
                                    z3 = true;
                                    if (tL_photo == null) {
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                        stringBuilder2.append(".");
                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                        file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                        if (file2.exists()) {
                                            tL_photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(file2.toString(), null);
                                        }
                                        if (tL_photo == null) {
                                            tL_photo = new TL_photo();
                                            tL_photo.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            tL_photoSize = new TL_photoSize();
                                            tL_photoSize.w = sendingMediaInfo.searchImage.width;
                                            tL_photoSize.h = sendingMediaInfo.searchImage.height;
                                            tL_photoSize.size = 0;
                                            tL_photoSize.location = new TL_fileLocationUnavailable();
                                            tL_photoSize.type = "x";
                                            tL_photo.sizes.add(tL_photoSize);
                                        }
                                    }
                                    tL_photo2 = tL_photo;
                                    z4 = z3;
                                }
                                if (tL_photo2 != null) {
                                    hashMap4 = new HashMap();
                                    if (sendingMediaInfo.searchImage.imageUrl != null) {
                                        hashMap4.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                    }
                                    if (z4) {
                                        i8 = i + 1;
                                        stringBuilder3 = new StringBuilder();
                                        stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                        stringBuilder3.append(currentTimeMillis);
                                        hashMap4.put("groupId", stringBuilder3.toString());
                                        if (i8 != 10) {
                                            if (i5 == size - 1) {
                                                i = i8;
                                            }
                                        }
                                        hashMap4.put("final", "1");
                                        i = i8;
                                        j2 = 0;
                                    }
                                    sendingMediaInfo2 = sendingMediaInfo;
                                    hashMap2 = hashMap4;
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                }
                            } else {
                                hashMap = new HashMap();
                                if (sendingMediaInfo.searchImage.document instanceof TL_document) {
                                    if (z6) {
                                        j4 = j3;
                                    } else {
                                        instance = MessagesStorage.getInstance(i);
                                        str2 = sendingMediaInfo.searchImage.imageUrl;
                                        if (z6) {
                                            j4 = j3;
                                            i3 = 4;
                                        } else {
                                            j4 = j3;
                                            i3 = 1;
                                        }
                                        document = (Document) instance.getSentFile(str2, i3);
                                        if (document instanceof TL_document) {
                                            tLObject = (TL_document) document;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                            stringBuilder.append(".");
                                            stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                            arrayList5 = arrayList;
                                            file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                        }
                                    }
                                    tLObject = null;
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(Utilities.MD5(sendingMediaInfo.searchImage.imageUrl));
                                    stringBuilder.append(".");
                                    stringBuilder.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.imageUrl, "jpg"));
                                    arrayList5 = arrayList;
                                    file = new File(FileLoader.getDirectory(4), stringBuilder.toString());
                                } else {
                                    tLObject = (TL_document) sendingMediaInfo.searchImage.document;
                                    j4 = j3;
                                    arrayList5 = arrayList;
                                    file = FileLoader.getPathToAttach(tLObject, z5);
                                }
                                if (tLObject != null) {
                                    i4 = z;
                                    file2 = file;
                                    tL_document2 = tLObject;
                                } else {
                                    if (sendingMediaInfo.searchImage.localUrl != null) {
                                        hashMap.put(UpdateFragment.FRAGMENT_URL, sendingMediaInfo.searchImage.localUrl);
                                    }
                                    tL_document = new TL_document();
                                    i4 = z;
                                    tL_document.id = 0;
                                    tL_document.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                    tL_documentAttributeFilename = new TL_documentAttributeFilename();
                                    tL_documentAttributeFilename.file_name = "animation.gif";
                                    tL_document.attributes.add(tL_documentAttributeFilename);
                                    tL_document.size = sendingMediaInfo.searchImage.size;
                                    tL_document.dc_id = 0;
                                    if (file.toString().endsWith("mp4")) {
                                        tL_document.mime_type = "image/gif";
                                    } else {
                                        tL_document.mime_type = MimeTypes.VIDEO_MP4;
                                        tL_document.attributes.add(new TL_documentAttributeAnimated());
                                    }
                                    if (file.exists()) {
                                        file = null;
                                        file2 = null;
                                    } else {
                                        file2 = file;
                                    }
                                    if (file == null) {
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append(Utilities.MD5(sendingMediaInfo.searchImage.thumbUrl));
                                        stringBuilder2.append(".");
                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(sendingMediaInfo.searchImage.thumbUrl, "jpg"));
                                        file3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                        if (file3.exists()) {
                                        }
                                    }
                                    if (file != null) {
                                        if (file.getAbsolutePath().endsWith("mp4")) {
                                            f = 90.0f;
                                            loadBitmap = ImageLoader.loadBitmap(file.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                        } else {
                                            loadBitmap = ThumbnailUtils.createVideoThumbnail(file.getAbsolutePath(), 1);
                                            f = 90.0f;
                                        }
                                        if (loadBitmap != null) {
                                            tL_document.thumb = ImageLoader.scaleAndSaveImage(loadBitmap, f, f, 55, z6);
                                            loadBitmap.recycle();
                                        }
                                    }
                                    if (tL_document.thumb == null) {
                                        tL_document.thumb = new TL_photoSize();
                                        tL_document.thumb.f43w = sendingMediaInfo.searchImage.width;
                                        tL_document.thumb.f42h = sendingMediaInfo.searchImage.height;
                                        tL_document.thumb.size = 0;
                                        tL_document.thumb.location = new TL_fileLocationUnavailable();
                                        tL_document.thumb.type = "x";
                                    }
                                    tL_document2 = tL_document;
                                }
                                str3 = sendingMediaInfo.searchImage.imageUrl;
                                if (file2 == null) {
                                }
                                file4 = file2 == null ? file2.toString() : sendingMediaInfo.searchImage.imageUrl;
                                hashMap.put("originalPath", sendingMediaInfo.searchImage.imageUrl);
                                j5 = currentTimeMillis;
                                currentTimeMillis = j4;
                                c182012 = c18201;
                                i5 = i4;
                                sendingMediaInfo2 = sendingMediaInfo;
                                arrayList6 = arrayList5;
                                hashMap2 = hashMap;
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                            }
                            i6 = peerLayerVersion;
                            z2 = z6;
                            i7 = i5;
                            j = j2;
                            hashMap3 = c182012;
                            arrayList = arrayList6;
                        }
                        z = i7 + 1;
                        obj = hashMap3;
                        j2 = currentTimeMillis;
                        i2 = i;
                        i = i6;
                        z6 = z2;
                        currentTimeMillis = j5;
                        z5 = true;
                    }
                    arrayList6 = arrayList;
                    j5 = currentTimeMillis;
                    if (j != 0) {
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                    }
                    if (inputContentInfoCompat2 != null) {
                        inputContentInfoCompat2.releasePermission();
                    }
                    if (arrayList6 != null) {
                        arrayList = arrayList6;
                        if (arrayList.isEmpty()) {
                            for (i8 = 0; i8 < arrayList.size(); i8++) {
                                SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList.get(i8), (String) arrayList2.get(i8), null, str, j2, messageObject2, (CharSequence) arrayList3.get(i8), (ArrayList) arrayList4.get(i8));
                            }
                        }
                    }
                    if (BuildVars.LOGS_ENABLED) {
                        stringBuilder6 = new StringBuilder();
                        stringBuilder6.append("total send time = ");
                        stringBuilder6.append(System.currentTimeMillis() - j5);
                        FileLog.m0d(stringBuilder6.toString());
                    }
                }
            });
        }
    }

    private static void fillVideoAttribute(String str, TL_documentAttributeVideo tL_documentAttributeVideo, VideoEditedInfo videoEditedInfo) {
        Throwable e;
        MediaMetadataRetriever mediaMetadataRetriever = null;
        try {
            MediaMetadataRetriever mediaMetadataRetriever2 = new MediaMetadataRetriever();
            try {
                mediaMetadataRetriever2.setDataSource(str);
                String extractMetadata = mediaMetadataRetriever2.extractMetadata(18);
                if (extractMetadata != null) {
                    tL_documentAttributeVideo.w = Integer.parseInt(extractMetadata);
                }
                extractMetadata = mediaMetadataRetriever2.extractMetadata(19);
                if (extractMetadata != null) {
                    tL_documentAttributeVideo.h = Integer.parseInt(extractMetadata);
                }
                extractMetadata = mediaMetadataRetriever2.extractMetadata(9);
                if (extractMetadata != null) {
                    tL_documentAttributeVideo.duration = (int) Math.ceil((double) (((float) Long.parseLong(extractMetadata)) / 1000.0f));
                }
                if (VERSION.SDK_INT >= 17) {
                    extractMetadata = mediaMetadataRetriever2.extractMetadata(24);
                    if (extractMetadata != null) {
                        int intValue = Utilities.parseInt(extractMetadata).intValue();
                        if (videoEditedInfo != null) {
                            videoEditedInfo.rotationValue = intValue;
                        } else if (intValue == 90 || intValue == 270) {
                            videoEditedInfo = tL_documentAttributeVideo.w;
                            tL_documentAttributeVideo.w = tL_documentAttributeVideo.h;
                            tL_documentAttributeVideo.h = videoEditedInfo;
                        }
                    }
                }
                videoEditedInfo = true;
                if (mediaMetadataRetriever2 != null) {
                    try {
                        mediaMetadataRetriever2.release();
                    } catch (Throwable e2) {
                        FileLog.m3e(e2);
                    }
                }
            } catch (Exception e3) {
                e = e3;
                mediaMetadataRetriever = mediaMetadataRetriever2;
                try {
                    FileLog.m3e(e);
                    if (mediaMetadataRetriever != null) {
                        try {
                            mediaMetadataRetriever.release();
                        } catch (Throwable e4) {
                            FileLog.m3e(e4);
                        }
                    }
                    videoEditedInfo = null;
                    if (videoEditedInfo != null) {
                        try {
                            str = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
                            if (str == null) {
                                tL_documentAttributeVideo.duration = (int) Math.ceil((double) (((float) str.getDuration()) / NUM));
                                tL_documentAttributeVideo.w = str.getVideoWidth();
                                tL_documentAttributeVideo.h = str.getVideoHeight();
                                str.release();
                            }
                        } catch (Throwable e5) {
                            FileLog.m3e(e5);
                            return;
                        }
                    }
                } catch (Throwable th) {
                    str = th;
                    mediaMetadataRetriever2 = mediaMetadataRetriever;
                    if (mediaMetadataRetriever2 != null) {
                        try {
                            mediaMetadataRetriever2.release();
                        } catch (Throwable e6) {
                            FileLog.m3e(e6);
                        }
                    }
                    throw str;
                }
            } catch (Throwable th2) {
                str = th2;
                if (mediaMetadataRetriever2 != null) {
                    mediaMetadataRetriever2.release();
                }
                throw str;
            }
        } catch (Exception e7) {
            e4 = e7;
            FileLog.m3e(e4);
            if (mediaMetadataRetriever != null) {
                mediaMetadataRetriever.release();
            }
            videoEditedInfo = null;
            if (videoEditedInfo != null) {
                str = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
                if (str == null) {
                    tL_documentAttributeVideo.duration = (int) Math.ceil((double) (((float) str.getDuration()) / NUM));
                    tL_documentAttributeVideo.w = str.getVideoWidth();
                    tL_documentAttributeVideo.h = str.getVideoHeight();
                    str.release();
                }
            }
        }
        if (videoEditedInfo != null) {
            str = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(str)));
            if (str == null) {
                tL_documentAttributeVideo.duration = (int) Math.ceil((double) (((float) str.getDuration()) / NUM));
                tL_documentAttributeVideo.w = str.getVideoWidth();
                tL_documentAttributeVideo.h = str.getVideoHeight();
                str.release();
            }
        }
    }

    private static android.graphics.Bitmap createVideoThumbnail(java.lang.String r3, long r4) {
        /* JADX: method processing error */
/*
Error: java.lang.NullPointerException
	at jadx.core.dex.visitors.regions.ProcessTryCatchRegions.searchTryCatchDominators(ProcessTryCatchRegions.java:75)
	at jadx.core.dex.visitors.regions.ProcessTryCatchRegions.process(ProcessTryCatchRegions.java:45)
	at jadx.core.dex.visitors.regions.RegionMakerVisitor.postProcessRegions(RegionMakerVisitor.java:63)
	at jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:58)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:31)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:17)
	at jadx.core.ProcessClass.process(ProcessClass.java:34)
	at jadx.core.ProcessClass.processDependencies(ProcessClass.java:60)
	at jadx.core.ProcessClass.process(ProcessClass.java:39)
	at jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:282)
	at jadx.api.JavaClass.decompile(JavaClass.java:62)
	at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:200)
*/
        /*
        r0 = new android.media.MediaMetadataRetriever;
        r0.<init>();
        r1 = 1;
        r2 = 0;
        r0.setDataSource(r3);	 Catch:{ Exception -> 0x0017, all -> 0x0012 }
        r3 = r0.getFrameAtTime(r4, r1);	 Catch:{ Exception -> 0x0017, all -> 0x0012 }
        r0.release();	 Catch:{ RuntimeException -> 0x001b }
        goto L_0x001b;
    L_0x0012:
        r3 = move-exception;
        r0.release();	 Catch:{ RuntimeException -> 0x0016 }
    L_0x0016:
        throw r3;
    L_0x0017:
        r0.release();	 Catch:{ RuntimeException -> 0x001a }
    L_0x001a:
        r3 = r2;
    L_0x001b:
        if (r3 != 0) goto L_0x001e;
    L_0x001d:
        return r2;
    L_0x001e:
        r4 = r3.getWidth();
        r5 = r3.getHeight();
        r0 = java.lang.Math.max(r4, r5);
        r2 = 90;
        if (r0 <= r2) goto L_0x0048;
    L_0x002e:
        r2 = NUM; // 0x42b40000 float:90.0 double:5.529052754E-315;
        r0 = (float) r0;
        r2 = r2 / r0;
        r4 = (float) r4;
        r4 = r4 * r2;
        r4 = java.lang.Math.round(r4);
        r5 = (float) r5;
        r2 = r2 * r5;
        r5 = java.lang.Math.round(r2);
        r4 = org.telegram.messenger.Bitmaps.createScaledBitmap(r3, r4, r5, r1);
        if (r4 == r3) goto L_0x0048;
    L_0x0044:
        r3.recycle();
        r3 = r4;
    L_0x0048:
        return r3;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.createVideoThumbnail(java.lang.String, long):android.graphics.Bitmap");
    }

    private static org.telegram.messenger.VideoEditedInfo createCompressionSettings(java.lang.String r25) {
        /* JADX: method processing error */
/*
Error: java.lang.NullPointerException
	at jadx.core.dex.visitors.regions.ProcessTryCatchRegions.searchTryCatchDominators(ProcessTryCatchRegions.java:75)
	at jadx.core.dex.visitors.regions.ProcessTryCatchRegions.process(ProcessTryCatchRegions.java:45)
	at jadx.core.dex.visitors.regions.RegionMakerVisitor.postProcessRegions(RegionMakerVisitor.java:63)
	at jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:58)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:31)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:17)
	at jadx.core.ProcessClass.process(ProcessClass.java:34)
	at jadx.core.ProcessClass.processDependencies(ProcessClass.java:60)
	at jadx.core.ProcessClass.process(ProcessClass.java:39)
	at jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:282)
	at jadx.api.JavaClass.decompile(JavaClass.java:62)
	at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:200)
*/
        /*
        r1 = r25;
        r2 = 0;
        r3 = new com.coremedia.iso.IsoFile;	 Catch:{ Exception -> 0x02a9 }
        r3.<init>(r1);	 Catch:{ Exception -> 0x02a9 }
        r4 = "/moov/trak/";	 Catch:{ Exception -> 0x02a9 }
        r4 = com.googlecode.mp4parser.util.Path.getPaths(r3, r4);	 Catch:{ Exception -> 0x02a9 }
        r5 = "/moov/trak/mdia/minf/stbl/stsd/mp4a/";	 Catch:{ Exception -> 0x02a9 }
        r5 = com.googlecode.mp4parser.util.Path.getPath(r3, r5);	 Catch:{ Exception -> 0x02a9 }
        if (r5 != 0) goto L_0x001f;	 Catch:{ Exception -> 0x02a9 }
    L_0x0016:
        r5 = org.telegram.messenger.BuildVars.LOGS_ENABLED;	 Catch:{ Exception -> 0x02a9 }
        if (r5 == 0) goto L_0x001f;	 Catch:{ Exception -> 0x02a9 }
    L_0x001a:
        r5 = "video hasn't mp4a atom";	 Catch:{ Exception -> 0x02a9 }
        org.telegram.messenger.FileLog.m0d(r5);	 Catch:{ Exception -> 0x02a9 }
    L_0x001f:
        r5 = "/moov/trak/mdia/minf/stbl/stsd/avc1/";	 Catch:{ Exception -> 0x02a9 }
        r3 = com.googlecode.mp4parser.util.Path.getPath(r3, r5);	 Catch:{ Exception -> 0x02a9 }
        if (r3 != 0) goto L_0x0031;	 Catch:{ Exception -> 0x02a9 }
    L_0x0027:
        r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED;	 Catch:{ Exception -> 0x02a9 }
        if (r1 == 0) goto L_0x0030;	 Catch:{ Exception -> 0x02a9 }
    L_0x002b:
        r1 = "video hasn't avc1 atom";	 Catch:{ Exception -> 0x02a9 }
        org.telegram.messenger.FileLog.m0d(r1);	 Catch:{ Exception -> 0x02a9 }
    L_0x0030:
        return r2;	 Catch:{ Exception -> 0x02a9 }
    L_0x0031:
        r7 = 0;	 Catch:{ Exception -> 0x02a9 }
        r8 = r2;	 Catch:{ Exception -> 0x02a9 }
        r15 = r7;	 Catch:{ Exception -> 0x02a9 }
        r7 = 0;	 Catch:{ Exception -> 0x02a9 }
        r9 = 0;	 Catch:{ Exception -> 0x02a9 }
        r11 = 0;	 Catch:{ Exception -> 0x02a9 }
        r13 = 0;	 Catch:{ Exception -> 0x02a9 }
        r14 = 0;	 Catch:{ Exception -> 0x02a9 }
    L_0x003b:
        r5 = r4.size();	 Catch:{ Exception -> 0x02a9 }
        if (r7 >= r5) goto L_0x00e5;	 Catch:{ Exception -> 0x02a9 }
    L_0x0041:
        r5 = r4.get(r7);	 Catch:{ Exception -> 0x02a9 }
        r5 = (com.coremedia.iso.boxes.Box) r5;	 Catch:{ Exception -> 0x02a9 }
        r5 = (com.coremedia.iso.boxes.TrackBox) r5;	 Catch:{ Exception -> 0x02a9 }
        r3 = r5.getMediaBox();	 Catch:{ Exception -> 0x008a }
        r2 = r3.getMediaHeaderBox();	 Catch:{ Exception -> 0x008a }
        r3 = r3.getMediaInformationBox();	 Catch:{ Exception -> 0x008a }
        r3 = r3.getSampleTableBox();	 Catch:{ Exception -> 0x008a }
        r3 = r3.getSampleSizeBox();	 Catch:{ Exception -> 0x008a }
        r3 = r3.getSampleSizes();	 Catch:{ Exception -> 0x008a }
        r19 = r4;
        r6 = 0;
        r17 = 0;
    L_0x0066:
        r4 = r3.length;	 Catch:{ Exception -> 0x0087 }
        if (r6 >= r4) goto L_0x0072;	 Catch:{ Exception -> 0x0087 }
    L_0x0069:
        r20 = r3[r6];	 Catch:{ Exception -> 0x0087 }
        r22 = r17 + r20;	 Catch:{ Exception -> 0x0087 }
        r6 = r6 + 1;	 Catch:{ Exception -> 0x0087 }
        r17 = r22;	 Catch:{ Exception -> 0x0087 }
        goto L_0x0066;	 Catch:{ Exception -> 0x0087 }
    L_0x0072:
        r3 = r2.getDuration();	 Catch:{ Exception -> 0x0087 }
        r3 = (float) r3;	 Catch:{ Exception -> 0x0087 }
        r1 = r2.getTimescale();	 Catch:{ Exception -> 0x0087 }
        r1 = (float) r1;
        r3 = r3 / r1;
        r1 = 8;
        r1 = r1 * r17;
        r1 = (float) r1;
        r1 = r1 / r3;
        r1 = (int) r1;
        r1 = (long) r1;
        r15 = r3;
        goto L_0x0095;
    L_0x0087:
        r0 = move-exception;
        r1 = r0;
        goto L_0x0090;
    L_0x008a:
        r0 = move-exception;
        r19 = r4;
        r1 = r0;
        r17 = 0;
    L_0x0090:
        org.telegram.messenger.FileLog.m3e(r1);	 Catch:{ Exception -> 0x02a9 }
        r1 = 0;	 Catch:{ Exception -> 0x02a9 }
    L_0x0095:
        r3 = r5.getTrackHeaderBox();	 Catch:{ Exception -> 0x02a9 }
        r4 = r3.getWidth();	 Catch:{ Exception -> 0x02a9 }
        r20 = 0;	 Catch:{ Exception -> 0x02a9 }
        r6 = (r4 > r20 ? 1 : (r4 == r20 ? 0 : -1));	 Catch:{ Exception -> 0x02a9 }
        if (r6 == 0) goto L_0x00d9;	 Catch:{ Exception -> 0x02a9 }
    L_0x00a3:
        r4 = r3.getHeight();	 Catch:{ Exception -> 0x02a9 }
        r6 = (r4 > r20 ? 1 : (r4 == r20 ? 0 : -1));	 Catch:{ Exception -> 0x02a9 }
        if (r6 == 0) goto L_0x00d9;	 Catch:{ Exception -> 0x02a9 }
    L_0x00ab:
        if (r8 == 0) goto L_0x00c5;	 Catch:{ Exception -> 0x02a9 }
    L_0x00ad:
        r4 = r8.getWidth();	 Catch:{ Exception -> 0x02a9 }
        r20 = r3.getWidth();	 Catch:{ Exception -> 0x02a9 }
        r6 = (r4 > r20 ? 1 : (r4 == r20 ? 0 : -1));	 Catch:{ Exception -> 0x02a9 }
        if (r6 < 0) goto L_0x00c5;	 Catch:{ Exception -> 0x02a9 }
    L_0x00b9:
        r4 = r8.getHeight();	 Catch:{ Exception -> 0x02a9 }
        r20 = r3.getHeight();	 Catch:{ Exception -> 0x02a9 }
        r6 = (r4 > r20 ? 1 : (r4 == r20 ? 0 : -1));	 Catch:{ Exception -> 0x02a9 }
        if (r6 >= 0) goto L_0x00dc;	 Catch:{ Exception -> 0x02a9 }
    L_0x00c5:
        r4 = 100000; // 0x186a0 float:1.4013E-40 double:4.94066E-319;	 Catch:{ Exception -> 0x02a9 }
        r1 = r1 / r4;	 Catch:{ Exception -> 0x02a9 }
        r1 = r1 * r4;
        r6 = (int) r1;
        r1 = 900000; // 0xdbba0 float:1.261169E-39 double:4.44659E-318;
        if (r6 <= r1) goto L_0x00d1;
    L_0x00d0:
        goto L_0x00d2;
    L_0x00d1:
        r1 = r6;
    L_0x00d2:
        r4 = r11 + r17;
        r14 = r1;
        r8 = r3;
        r11 = r4;
        r13 = r6;
        goto L_0x00dc;
    L_0x00d9:
        r1 = r9 + r17;
        r9 = r1;
    L_0x00dc:
        r7 = r7 + 1;
        r4 = r19;
        r1 = r25;
        r2 = 0;
        goto L_0x003b;
    L_0x00e5:
        r1 = 900000; // 0xdbba0 float:1.261169E-39 double:4.44659E-318;
        if (r8 != 0) goto L_0x00f5;
    L_0x00ea:
        r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED;
        if (r1 == 0) goto L_0x00f3;
    L_0x00ee:
        r1 = "video hasn't trackHeaderBox atom";
        org.telegram.messenger.FileLog.m0d(r1);
    L_0x00f3:
        r1 = 0;
        return r1;
    L_0x00f5:
        r2 = android.os.Build.VERSION.SDK_INT;
        r3 = 18;
        if (r2 >= r3) goto L_0x017a;
    L_0x00fb:
        r2 = "video/avc";	 Catch:{ Exception -> 0x0178 }
        r2 = org.telegram.messenger.MediaController.selectCodec(r2);	 Catch:{ Exception -> 0x0178 }
        if (r2 != 0) goto L_0x010e;	 Catch:{ Exception -> 0x0178 }
    L_0x0103:
        r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED;	 Catch:{ Exception -> 0x0178 }
        if (r1 == 0) goto L_0x010c;	 Catch:{ Exception -> 0x0178 }
    L_0x0107:
        r1 = "no codec info for video/avc";	 Catch:{ Exception -> 0x0178 }
        org.telegram.messenger.FileLog.m0d(r1);	 Catch:{ Exception -> 0x0178 }
    L_0x010c:
        r1 = 0;	 Catch:{ Exception -> 0x0178 }
        return r1;	 Catch:{ Exception -> 0x0178 }
    L_0x010e:
        r3 = r2.getName();	 Catch:{ Exception -> 0x0178 }
        r4 = "OMX.google.h264.encoder";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 != 0) goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x011a:
        r4 = "OMX.ST.VFM.H264Enc";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 != 0) goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x0122:
        r4 = "OMX.Exynos.avc.enc";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 != 0) goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x012a:
        r4 = "OMX.MARVELL.VIDEO.HW.CODA7542ENCODER";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 != 0) goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x0132:
        r4 = "OMX.MARVELL.VIDEO.H264ENCODER";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 != 0) goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x013a:
        r4 = "OMX.k3.video.encoder.avc";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 != 0) goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x0142:
        r4 = "OMX.TI.DUCATI1.VIDEO.H264E";	 Catch:{ Exception -> 0x0178 }
        r4 = r3.equals(r4);	 Catch:{ Exception -> 0x0178 }
        if (r4 == 0) goto L_0x014b;	 Catch:{ Exception -> 0x0178 }
    L_0x014a:
        goto L_0x015e;	 Catch:{ Exception -> 0x0178 }
    L_0x014b:
        r3 = "video/avc";	 Catch:{ Exception -> 0x0178 }
        r2 = org.telegram.messenger.MediaController.selectColorFormat(r2, r3);	 Catch:{ Exception -> 0x0178 }
        if (r2 != 0) goto L_0x017a;	 Catch:{ Exception -> 0x0178 }
    L_0x0153:
        r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED;	 Catch:{ Exception -> 0x0178 }
        if (r1 == 0) goto L_0x015c;	 Catch:{ Exception -> 0x0178 }
    L_0x0157:
        r1 = "no color format for video/avc";	 Catch:{ Exception -> 0x0178 }
        org.telegram.messenger.FileLog.m0d(r1);	 Catch:{ Exception -> 0x0178 }
    L_0x015c:
        r1 = 0;	 Catch:{ Exception -> 0x0178 }
        return r1;	 Catch:{ Exception -> 0x0178 }
    L_0x015e:
        r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED;	 Catch:{ Exception -> 0x0178 }
        if (r1 == 0) goto L_0x0176;	 Catch:{ Exception -> 0x0178 }
    L_0x0162:
        r1 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x0178 }
        r1.<init>();	 Catch:{ Exception -> 0x0178 }
        r2 = "unsupported encoder = ";	 Catch:{ Exception -> 0x0178 }
        r1.append(r2);	 Catch:{ Exception -> 0x0178 }
        r1.append(r3);	 Catch:{ Exception -> 0x0178 }
        r1 = r1.toString();	 Catch:{ Exception -> 0x0178 }
        org.telegram.messenger.FileLog.m0d(r1);	 Catch:{ Exception -> 0x0178 }
    L_0x0176:
        r1 = 0;
        return r1;
    L_0x0178:
        r1 = 0;
        return r1;
    L_0x017a:
        r2 = NUM; // 0x447a0000 float:1000.0 double:5.676053805E-315;
        r15 = r15 * r2;
        r3 = new org.telegram.messenger.VideoEditedInfo;
        r3.<init>();
        r4 = -1;
        r3.startTime = r4;
        r3.endTime = r4;
        r3.bitrate = r14;
        r4 = r25;
        r3.originalPath = r4;
        r5 = (double) r15;
        r5 = java.lang.Math.ceil(r5);
        r5 = (long) r5;
        r3.estimatedDuration = r5;
        r5 = r8.getWidth();
        r5 = (int) r5;
        r3.originalWidth = r5;
        r3.resultWidth = r5;
        r5 = r8.getHeight();
        r5 = (int) r5;
        r3.originalHeight = r5;
        r3.resultHeight = r5;
        r5 = r8.getMatrix();
        r6 = com.googlecode.mp4parser.util.Matrix.ROTATE_90;
        r6 = r5.equals(r6);
        if (r6 == 0) goto L_0x01b9;
    L_0x01b4:
        r5 = 90;
        r3.rotationValue = r5;
        goto L_0x01d6;
    L_0x01b9:
        r6 = com.googlecode.mp4parser.util.Matrix.ROTATE_180;
        r6 = r5.equals(r6);
        if (r6 == 0) goto L_0x01c6;
    L_0x01c1:
        r5 = 180; // 0xb4 float:2.52E-43 double:8.9E-322;
        r3.rotationValue = r5;
        goto L_0x01d6;
    L_0x01c6:
        r6 = com.googlecode.mp4parser.util.Matrix.ROTATE_270;
        r5 = r5.equals(r6);
        if (r5 == 0) goto L_0x01d3;
    L_0x01ce:
        r5 = 270; // 0x10e float:3.78E-43 double:1.334E-321;
        r3.rotationValue = r5;
        goto L_0x01d6;
    L_0x01d3:
        r5 = 0;
        r3.rotationValue = r5;
    L_0x01d6:
        r5 = org.telegram.messenger.MessagesController.getGlobalMainSettings();
        r6 = "compress_video2";
        r7 = 1;
        r5 = r5.getInt(r6, r7);
        r6 = r3.originalWidth;
        r8 = 1280; // 0x500 float:1.794E-42 double:6.324E-321;
        r16 = 2;
        if (r6 > r8) goto L_0x0218;
    L_0x01e9:
        r6 = r3.originalHeight;
        if (r6 <= r8) goto L_0x01ee;
    L_0x01ed:
        goto L_0x0218;
    L_0x01ee:
        r6 = r3.originalWidth;
        r8 = 848; // 0x350 float:1.188E-42 double:4.19E-321;
        if (r6 > r8) goto L_0x0216;
    L_0x01f4:
        r6 = r3.originalHeight;
        if (r6 <= r8) goto L_0x01f9;
    L_0x01f8:
        goto L_0x0216;
    L_0x01f9:
        r6 = r3.originalWidth;
        r8 = 640; // 0x280 float:8.97E-43 double:3.16E-321;
        if (r6 > r8) goto L_0x0214;
    L_0x01ff:
        r6 = r3.originalHeight;
        if (r6 <= r8) goto L_0x0204;
    L_0x0203:
        goto L_0x0214;
    L_0x0204:
        r6 = r3.originalWidth;
        r8 = 480; // 0x1e0 float:6.73E-43 double:2.37E-321;
        if (r6 > r8) goto L_0x0211;
    L_0x020a:
        r6 = r3.originalHeight;
        if (r6 <= r8) goto L_0x020f;
    L_0x020e:
        goto L_0x0211;
    L_0x020f:
        r6 = r7;
        goto L_0x0219;
    L_0x0211:
        r6 = r16;
        goto L_0x0219;
    L_0x0214:
        r6 = 3;
        goto L_0x0219;
    L_0x0216:
        r6 = 4;
        goto L_0x0219;
    L_0x0218:
        r6 = 5;
    L_0x0219:
        if (r5 < r6) goto L_0x021d;
    L_0x021b:
        r5 = r6 + -1;
    L_0x021d:
        r6 = r6 - r7;
        if (r5 == r6) goto L_0x0277;
    L_0x0220:
        switch(r5) {
            case 0: goto L_0x0237;
            case 1: goto L_0x0234;
            case 2: goto L_0x022e;
            default: goto L_0x0223;
        };
    L_0x0223:
        r1 = 2500000; // 0x2625a0 float:3.503246E-39 double:1.235164E-317;
        r7 = NUM; // 0x44a00000 float:1280.0 double:5.68835786E-315;
    L_0x0228:
        r24 = r7;
        r7 = r1;
        r1 = r24;
        goto L_0x023c;
    L_0x022e:
        r1 = NUM; // 0x44540000 float:848.0 double:5.66374975E-315;
        r7 = 1100000; // 0x10c8e0 float:1.541428E-39 double:5.43472E-318;
        goto L_0x023c;
    L_0x0234:
        r7 = NUM; // 0x44200000 float:640.0 double:5.646912627E-315;
        goto L_0x0228;
    L_0x0237:
        r1 = NUM; // 0x43d80000 float:432.0 double:5.623599685E-315;
        r7 = 400000; // 0x61a80 float:5.6052E-40 double:1.976263E-318;
    L_0x023c:
        r8 = r3.originalWidth;
        r2 = r3.originalHeight;
        if (r8 <= r2) goto L_0x0247;
    L_0x0242:
        r2 = r3.originalWidth;
    L_0x0244:
        r2 = (float) r2;
        r1 = r1 / r2;
        goto L_0x024a;
    L_0x0247:
        r2 = r3.originalHeight;
        goto L_0x0244;
    L_0x024a:
        r2 = r3.originalWidth;
        r2 = (float) r2;
        r2 = r2 * r1;
        r8 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = r2 / r8;
        r2 = java.lang.Math.round(r2);
        r2 = r2 * 2;
        r3.resultWidth = r2;
        r2 = r3.originalHeight;
        r2 = (float) r2;
        r2 = r2 * r1;
        r2 = r2 / r8;
        r2 = java.lang.Math.round(r2);
        r2 = r2 * 2;
        r3.resultHeight = r2;
        if (r14 == 0) goto L_0x0277;
    L_0x0268:
        r2 = (float) r13;
        r2 = r2 / r1;
        r1 = (int) r2;
        r14 = java.lang.Math.min(r7, r1);
        r1 = r14 / 8;
        r1 = (float) r1;
        r1 = r1 * r15;
        r2 = NUM; // 0x447a0000 float:1000.0 double:5.676053805E-315;
        r1 = r1 / r2;
        r11 = (long) r1;
    L_0x0277:
        if (r5 != r6) goto L_0x0291;
    L_0x0279:
        r1 = r3.originalWidth;
        r3.resultWidth = r1;
        r1 = r3.originalHeight;
        r3.resultHeight = r1;
        r3.bitrate = r13;
        r1 = new java.io.File;
        r1.<init>(r4);
        r1 = r1.length();
        r1 = (int) r1;
        r1 = (long) r1;
        r3.estimatedSize = r1;
        goto L_0x02a8;
    L_0x0291:
        r3.bitrate = r14;
        r1 = r9 + r11;
        r1 = (int) r1;
        r1 = (long) r1;
        r3.estimatedSize = r1;
        r1 = r3.estimatedSize;
        r4 = r3.estimatedSize;
        r6 = 32768; // 0x8000 float:4.5918E-41 double:1.61895E-319;
        r4 = r4 / r6;
        r6 = 16;
        r4 = r4 * r6;
        r6 = r1 + r4;
        r3.estimatedSize = r6;
    L_0x02a8:
        return r3;
    L_0x02a9:
        r0 = move-exception;
        r1 = r0;
        org.telegram.messenger.FileLog.m3e(r1);
        r1 = 0;
        return r1;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.createCompressionSettings(java.lang.String):org.telegram.messenger.VideoEditedInfo");
    }

    public static void prepareSendingVideo(String str, long j, long j2, int i, int i2, VideoEditedInfo videoEditedInfo, long j3, MessageObject messageObject, CharSequence charSequence, ArrayList<MessageEntity> arrayList, int i3) {
        if (str != null) {
            if (str.length() != 0) {
                final int i4 = UserConfig.selectedAccount;
                final VideoEditedInfo videoEditedInfo2 = videoEditedInfo;
                final String str2 = str;
                final long j4 = j3;
                final long j5 = j2;
                final int i5 = i3;
                final int i6 = i2;
                final int i7 = i;
                final long j6 = j;
                final CharSequence charSequence2 = charSequence;
                AnonymousClass22 anonymousClass22 = r0;
                final MessageObject messageObject2 = messageObject;
                final ArrayList<MessageEntity> arrayList2 = arrayList;
                AnonymousClass22 anonymousClass222 = new Runnable() {
                    public void run() {
                        TL_document tL_document;
                        String str;
                        String str2;
                        Bitmap bitmap;
                        final VideoEditedInfo access$2000 = videoEditedInfo2 != null ? videoEditedInfo2 : SendMessagesHelper.createCompressionSettings(str2);
                        boolean z = ((int) j4) == 0;
                        boolean z2 = access$2000 != null && access$2000.roundVideo;
                        if (access$2000 == null && !str2.endsWith("mp4")) {
                            if (!z2) {
                                SendMessagesHelper.prepareSendingDocumentInternal(i4, str2, str2, null, null, j4, messageObject2, charSequence2, arrayList2);
                            }
                        }
                        String str3 = str2;
                        String str4 = str2;
                        File file = new File(str4);
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append(str4);
                        stringBuilder.append(file.length());
                        stringBuilder.append("_");
                        stringBuilder.append(file.lastModified());
                        str4 = stringBuilder.toString();
                        long j = 0;
                        if (access$2000 != null) {
                            if (!z2) {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str4);
                                stringBuilder.append(j5);
                                stringBuilder.append("_");
                                stringBuilder.append(access$2000.startTime);
                                stringBuilder.append("_");
                                stringBuilder.append(access$2000.endTime);
                                stringBuilder.append(access$2000.muted ? "_m" : TtmlNode.ANONYMOUS_REGION_ID);
                                str4 = stringBuilder.toString();
                                if (access$2000.resultWidth != access$2000.originalWidth) {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(str4);
                                    stringBuilder.append("_");
                                    stringBuilder.append(access$2000.resultWidth);
                                    str4 = stringBuilder.toString();
                                }
                            }
                            if (access$2000.startTime >= 0) {
                                j = access$2000.startTime;
                            }
                        }
                        if (z || i5 != 0) {
                            tL_document = null;
                        } else {
                            tL_document = (TL_document) MessagesStorage.getInstance(i4).getSentFile(str4, !z ? 2 : 5);
                        }
                        if (tL_document == null) {
                            String str5;
                            TL_documentAttributeVideo tL_documentAttributeVideo;
                            Bitmap access$2100 = SendMessagesHelper.createVideoThumbnail(str2, j);
                            if (access$2100 == null) {
                                access$2100 = ThumbnailUtils.createVideoThumbnail(str2, 1);
                            }
                            PhotoSize scaleAndSaveImage = ImageLoader.scaleAndSaveImage(access$2100, 90.0f, 90.0f, 55, z);
                            if (access$2100 == null || scaleAndSaveImage == null) {
                                str5 = null;
                            } else if (!z2) {
                                str5 = null;
                                access$2100 = str5;
                            } else if (z) {
                                Utilities.blurBitmap(access$2100, 7, VERSION.SDK_INT < 21 ? 0 : 1, access$2100.getWidth(), access$2100.getHeight(), access$2100.getRowBytes());
                                r13 = new StringBuilder();
                                r13.append(scaleAndSaveImage.location.volume_id);
                                r13.append("_");
                                r13.append(scaleAndSaveImage.location.local_id);
                                r13.append("@%d_%d_b2");
                                str5 = String.format(r13.toString(), new Object[]{Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density)), Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density))});
                            } else {
                                Utilities.blurBitmap(access$2100, 3, VERSION.SDK_INT < 21 ? 0 : 1, access$2100.getWidth(), access$2100.getHeight(), access$2100.getRowBytes());
                                r13 = new StringBuilder();
                                r13.append(scaleAndSaveImage.location.volume_id);
                                r13.append("_");
                                r13.append(scaleAndSaveImage.location.local_id);
                                r13.append("@%d_%d_b");
                                str5 = String.format(r13.toString(), new Object[]{Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density)), Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density))});
                            }
                            tL_document = new TL_document();
                            tL_document.thumb = scaleAndSaveImage;
                            if (tL_document.thumb == null) {
                                tL_document.thumb = new TL_photoSizeEmpty();
                                tL_document.thumb.type = "s";
                            } else {
                                tL_document.thumb.type = "s";
                            }
                            tL_document.mime_type = MimeTypes.VIDEO_MP4;
                            UserConfig.getInstance(i4).saveConfig(false);
                            if (z) {
                                EncryptedChat encryptedChat = MessagesController.getInstance(i4).getEncryptedChat(Integer.valueOf((int) (j4 >> 32)));
                                if (encryptedChat != null) {
                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 66) {
                                        tL_documentAttributeVideo = new TL_documentAttributeVideo();
                                    } else {
                                        tL_documentAttributeVideo = new TL_documentAttributeVideo_layer65();
                                    }
                                } else {
                                    return;
                                }
                            }
                            tL_documentAttributeVideo = new TL_documentAttributeVideo();
                            tL_documentAttributeVideo.supports_streaming = true;
                            tL_documentAttributeVideo.round_message = z2;
                            tL_document.attributes.add(tL_documentAttributeVideo);
                            if (access$2000 == null || !access$2000.needConvert()) {
                                if (file.exists()) {
                                    tL_document.size = (int) file.length();
                                }
                                SendMessagesHelper.fillVideoAttribute(str2, tL_documentAttributeVideo, null);
                                str = str3;
                            } else {
                                if (access$2000.muted) {
                                    tL_document.attributes.add(new TL_documentAttributeAnimated());
                                    SendMessagesHelper.fillVideoAttribute(str2, tL_documentAttributeVideo, access$2000);
                                    access$2000.originalWidth = tL_documentAttributeVideo.w;
                                    access$2000.originalHeight = tL_documentAttributeVideo.h;
                                    tL_documentAttributeVideo.w = access$2000.resultWidth;
                                    tL_documentAttributeVideo.h = access$2000.resultHeight;
                                } else {
                                    tL_documentAttributeVideo.duration = (int) (j5 / 1000);
                                    if (access$2000.rotationValue != 90) {
                                        if (access$2000.rotationValue != 270) {
                                            tL_documentAttributeVideo.w = i7;
                                            tL_documentAttributeVideo.h = i6;
                                        }
                                    }
                                    tL_documentAttributeVideo.w = i6;
                                    tL_documentAttributeVideo.h = i7;
                                }
                                tL_document.size = (int) j6;
                                StringBuilder stringBuilder2 = new StringBuilder();
                                stringBuilder2.append("-2147483648_");
                                stringBuilder2.append(SharedConfig.getLastLocalId());
                                stringBuilder2.append(".mp4");
                                File file2 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                SharedConfig.saveConfig();
                                str = file2.getAbsolutePath();
                            }
                            str2 = str5;
                            bitmap = access$2100;
                        } else {
                            str = str3;
                            bitmap = null;
                            str2 = bitmap;
                        }
                        final TL_document tL_document2 = tL_document;
                        final HashMap hashMap = new HashMap();
                        String charSequence = charSequence2 != null ? charSequence2.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                        if (str4 != null) {
                            hashMap.put("originalPath", str4);
                        }
                        str4 = str;
                        str = charSequence;
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public void run() {
                                if (!(bitmap == null || str2 == null)) {
                                    ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str2);
                                }
                                SendMessagesHelper.getInstance(i4).sendMessage(tL_document2, access$2000, str4, j4, messageObject2, str, arrayList2, null, hashMap, i5);
                            }
                        });
                    }
                };
                new Thread(anonymousClass22).start();
            }
        }
    }
}
