package org.telegram.messenger;

import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaCodecInfo;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.support.v13.view.inputmethod.InputContentInfoCompat;
import android.text.TextUtils;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.webkit.MimeTypeMap;
import android.widget.Toast;
import com.coremedia.iso.IsoFile;
import com.coremedia.iso.boxes.Box;
import com.coremedia.iso.boxes.MediaBox;
import com.coremedia.iso.boxes.MediaHeaderBox;
import com.coremedia.iso.boxes.SampleSizeBox;
import com.coremedia.iso.boxes.TrackBox;
import com.coremedia.iso.boxes.TrackHeaderBox;
import com.googlecode.mp4parser.util.Matrix;
import com.googlecode.mp4parser.util.Path;
import java.io.File;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel.MapMode;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map.Entry;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import net.hockeyapp.android.UpdateFragment;
import org.telegram.messenger.MediaController.SearchImage;
import org.telegram.messenger.NotificationCenter.NotificationCenterDelegate;
import org.telegram.messenger.audioinfo.AudioInfo;
import org.telegram.messenger.beta.R;
import org.telegram.messenger.exoplayer2.DefaultRenderersFactory;
import org.telegram.messenger.exoplayer2.util.MimeTypes;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC.BotInlineResult;
import org.telegram.tgnet.TLRPC.Chat;
import org.telegram.tgnet.TLRPC.ChatFull;
import org.telegram.tgnet.TLRPC.ChatParticipant;
import org.telegram.tgnet.TLRPC.DecryptedMessage;
import org.telegram.tgnet.TLRPC.Document;
import org.telegram.tgnet.TLRPC.DocumentAttribute;
import org.telegram.tgnet.TLRPC.EncryptedChat;
import org.telegram.tgnet.TLRPC.FileLocation;
import org.telegram.tgnet.TLRPC.InputDocument;
import org.telegram.tgnet.TLRPC.InputEncryptedFile;
import org.telegram.tgnet.TLRPC.InputFile;
import org.telegram.tgnet.TLRPC.InputMedia;
import org.telegram.tgnet.TLRPC.InputPeer;
import org.telegram.tgnet.TLRPC.InputUser;
import org.telegram.tgnet.TLRPC.KeyboardButton;
import org.telegram.tgnet.TLRPC.Message;
import org.telegram.tgnet.TLRPC.MessageEntity;
import org.telegram.tgnet.TLRPC.MessageFwdHeader;
import org.telegram.tgnet.TLRPC.MessageMedia;
import org.telegram.tgnet.TLRPC.Peer;
import org.telegram.tgnet.TLRPC.Photo;
import org.telegram.tgnet.TLRPC.PhotoSize;
import org.telegram.tgnet.TLRPC.ReplyMarkup;
import org.telegram.tgnet.TLRPC.TL_botInlineMediaResult;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaAuto;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaContact;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaGeo;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageMediaVenue;
import org.telegram.tgnet.TLRPC.TL_botInlineMessageText;
import org.telegram.tgnet.TLRPC.TL_decryptedMessage;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionAbortKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionAcceptKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionCommitKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionDeleteMessages;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionFlushHistory;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionNoop;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionNotifyLayer;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionReadMessages;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionRequestKey;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionResend;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionScreenshotMessages;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionTyping;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaContact;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaEmpty;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaGeoPoint;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVenue;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_decryptedMessage_layer45;
import org.telegram.tgnet.TLRPC.TL_document;
import org.telegram.tgnet.TLRPC.TL_documentAttributeAnimated;
import org.telegram.tgnet.TLRPC.TL_documentAttributeAudio;
import org.telegram.tgnet.TLRPC.TL_documentAttributeFilename;
import org.telegram.tgnet.TLRPC.TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC.TL_documentAttributeSticker;
import org.telegram.tgnet.TLRPC.TL_documentAttributeSticker_layer55;
import org.telegram.tgnet.TLRPC.TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC.TL_documentAttributeVideo_layer65;
import org.telegram.tgnet.TLRPC.TL_error;
import org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC.TL_game;
import org.telegram.tgnet.TLRPC.TL_geoPoint;
import org.telegram.tgnet.TLRPC.TL_inputDocument;
import org.telegram.tgnet.TLRPC.TL_inputEncryptedFile;
import org.telegram.tgnet.TLRPC.TL_inputGeoPoint;
import org.telegram.tgnet.TLRPC.TL_inputMediaContact;
import org.telegram.tgnet.TLRPC.TL_inputMediaDocument;
import org.telegram.tgnet.TLRPC.TL_inputMediaEmpty;
import org.telegram.tgnet.TLRPC.TL_inputMediaGame;
import org.telegram.tgnet.TLRPC.TL_inputMediaGeoLive;
import org.telegram.tgnet.TLRPC.TL_inputMediaGeoPoint;
import org.telegram.tgnet.TLRPC.TL_inputMediaGifExternal;
import org.telegram.tgnet.TLRPC.TL_inputMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument;
import org.telegram.tgnet.TLRPC.TL_inputMediaUploadedPhoto;
import org.telegram.tgnet.TLRPC.TL_inputMediaVenue;
import org.telegram.tgnet.TLRPC.TL_inputPeerChannel;
import org.telegram.tgnet.TLRPC.TL_inputPeerEmpty;
import org.telegram.tgnet.TLRPC.TL_inputPeerUser;
import org.telegram.tgnet.TLRPC.TL_inputPhoto;
import org.telegram.tgnet.TLRPC.TL_inputSingleMedia;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetEmpty;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC.TL_message;
import org.telegram.tgnet.TLRPC.TL_messageActionScreenshotTaken;
import org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC.TL_messageEntityBold;
import org.telegram.tgnet.TLRPC.TL_messageEntityCode;
import org.telegram.tgnet.TLRPC.TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC.TL_messageEntityPre;
import org.telegram.tgnet.TLRPC.TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC.TL_messageEntityUrl;
import org.telegram.tgnet.TLRPC.TL_messageFwdHeader;
import org.telegram.tgnet.TLRPC.TL_messageMediaContact;
import org.telegram.tgnet.TLRPC.TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC.TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC.TL_messageMediaGame;
import org.telegram.tgnet.TLRPC.TL_messageMediaGeo;
import org.telegram.tgnet.TLRPC.TL_messageMediaGeoLive;
import org.telegram.tgnet.TLRPC.TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC.TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_messageMediaVenue;
import org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_messageService;
import org.telegram.tgnet.TLRPC.TL_message_secret;
import org.telegram.tgnet.TLRPC.TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC.TL_messages_editMessage;
import org.telegram.tgnet.TLRPC.TL_messages_forwardMessages;
import org.telegram.tgnet.TLRPC.TL_messages_getBotCallbackAnswer;
import org.telegram.tgnet.TLRPC.TL_messages_messages;
import org.telegram.tgnet.TLRPC.TL_messages_sendBroadcast;
import org.telegram.tgnet.TLRPC.TL_messages_sendEncryptedMultiMedia;
import org.telegram.tgnet.TLRPC.TL_messages_sendInlineBotResult;
import org.telegram.tgnet.TLRPC.TL_messages_sendMedia;
import org.telegram.tgnet.TLRPC.TL_messages_sendMessage;
import org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia;
import org.telegram.tgnet.TLRPC.TL_messages_sendScreenshotNotification;
import org.telegram.tgnet.TLRPC.TL_messages_uploadMedia;
import org.telegram.tgnet.TLRPC.TL_payments_getPaymentForm;
import org.telegram.tgnet.TLRPC.TL_payments_getPaymentReceipt;
import org.telegram.tgnet.TLRPC.TL_payments_paymentForm;
import org.telegram.tgnet.TLRPC.TL_payments_paymentReceipt;
import org.telegram.tgnet.TLRPC.TL_peerChannel;
import org.telegram.tgnet.TLRPC.TL_peerChat;
import org.telegram.tgnet.TLRPC.TL_peerUser;
import org.telegram.tgnet.TLRPC.TL_photo;
import org.telegram.tgnet.TLRPC.TL_photoCachedSize;
import org.telegram.tgnet.TLRPC.TL_photoSize;
import org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC.TL_updateMessageID;
import org.telegram.tgnet.TLRPC.TL_updateNewChannelMessage;
import org.telegram.tgnet.TLRPC.TL_updateNewMessage;
import org.telegram.tgnet.TLRPC.TL_updateShortSentMessage;
import org.telegram.tgnet.TLRPC.TL_user;
import org.telegram.tgnet.TLRPC.TL_userContact_old2;
import org.telegram.tgnet.TLRPC.TL_userRequest_old2;
import org.telegram.tgnet.TLRPC.TL_webPagePending;
import org.telegram.tgnet.TLRPC.TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC.Update;
import org.telegram.tgnet.TLRPC.Updates;
import org.telegram.tgnet.TLRPC.User;
import org.telegram.tgnet.TLRPC.WebPage;
import org.telegram.tgnet.TLRPC.messages_Messages;
import org.telegram.ui.ActionBar.AlertDialog.Builder;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.PaymentFormActivity;

public class SendMessagesHelper implements NotificationCenterDelegate {
    private static volatile SendMessagesHelper[] Instance = new SendMessagesHelper[3];
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    private int currentAccount;
    private ChatFull currentChatInfo = null;
    private HashMap<String, ArrayList<DelayedMessage>> delayedMessages = new HashMap();
    private LocationProvider locationProvider = new LocationProvider(new C18201());
    private SparseArray<Message> sendingMessages = new SparseArray();
    private SparseArray<MessageObject> unsentMessages = new SparseArray();
    private HashMap<String, Boolean> waitingForCallback = new HashMap();
    private HashMap<String, MessageObject> waitingForLocation = new HashMap();

    /* renamed from: org.telegram.messenger.SendMessagesHelper$2 */
    class C04972 implements Runnable {
        C04972() {
        }

        public void run() {
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidUpload);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidFailUpload);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FilePreparingStarted);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileNewChunkAvailable);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FilePreparingFailed);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidFailedLoad);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidLoaded);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidLoaded);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidFailedLoad);
        }
    }

    protected class DelayedMessage {
        public EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public FileLocation location;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public long peer;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int type;
        public boolean upload;
        public VideoEditedInfo videoEditedInfo;

        public DelayedMessage(long peer) {
            this.peer = peer;
        }

        public void addDelayedRequest(TLObject req, MessageObject msgObj, String originalPath) {
            DelayedMessageSendAfterRequest request = new DelayedMessageSendAfterRequest();
            request.request = req;
            request.msgObj = msgObj;
            request.originalPath = originalPath;
            if (this.requests == null) {
                this.requests = new ArrayList();
            }
            this.requests.add(request);
        }

        public void addDelayedRequest(TLObject req, ArrayList<MessageObject> msgObjs, ArrayList<String> originalPaths) {
            DelayedMessageSendAfterRequest request = new DelayedMessageSendAfterRequest();
            request.request = req;
            request.msgObjs = msgObjs;
            request.originalPaths = originalPaths;
            if (this.requests == null) {
                this.requests = new ArrayList();
            }
            this.requests.add(request);
        }

        public void sendDelayedRequests() {
            if (this.requests != null) {
                if (this.type == 4 || this.type == 0) {
                    int size = this.requests.size();
                    for (int a = 0; a < size; a++) {
                        DelayedMessageSendAfterRequest request = (DelayedMessageSendAfterRequest) this.requests.get(a);
                        if (request.request instanceof TL_messages_sendEncryptedMultiMedia) {
                            SecretChatHelper.getInstance(SendMessagesHelper.this.currentAccount).performSendEncryptedRequest((TL_messages_sendEncryptedMultiMedia) request.request, this);
                        } else if (request.request instanceof TL_messages_sendMultiMedia) {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TL_messages_sendMultiMedia) request.request, request.msgObjs, request.originalPaths);
                        } else {
                            SendMessagesHelper.this.performSendMessageRequest(request.request, request.msgObj, request.originalPath);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int a = 0; a < this.messageObjects.size(); a++) {
                    MessageObject obj = (MessageObject) this.messageObjects.get(a);
                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(obj.messageOwner);
                    obj.messageOwner.send_state = 2;
                    NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(obj.getId()));
                    SendMessagesHelper.this.processSentMessage(obj.getId());
                }
                HashMap access$1000 = SendMessagesHelper.this.delayedMessages;
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("group_");
                stringBuilder.append(this.groupId);
                access$1000.remove(stringBuilder.toString());
            } else {
                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(this.obj.messageOwner);
                this.obj.messageOwner.send_state = 2;
                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
            }
            sendDelayedRequests();
        }
    }

    protected class DelayedMessageSendAfterRequest {
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public TLObject request;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    public static class LocationProvider {
        private LocationProviderDelegate delegate;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        private Location lastKnownLocation;
        private LocationManager locationManager;
        private Runnable locationQueryCancelRunnable;
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        /* renamed from: org.telegram.messenger.SendMessagesHelper$LocationProvider$1 */
        class C05111 implements Runnable {
            C05111() {
            }

            public void run() {
                if (LocationProvider.this.locationQueryCancelRunnable == this) {
                    if (LocationProvider.this.delegate != null) {
                        if (LocationProvider.this.lastKnownLocation != null) {
                            LocationProvider.this.delegate.onLocationAcquired(LocationProvider.this.lastKnownLocation);
                        } else {
                            LocationProvider.this.delegate.onUnableLocationAcquire();
                        }
                    }
                    LocationProvider.this.cleanup();
                }
            }
        }

        private class GpsLocationListener implements LocationListener {
            private GpsLocationListener() {
            }

            public void onLocationChanged(Location location) {
                if (location != null) {
                    if (LocationProvider.this.locationQueryCancelRunnable != null) {
                        if (BuildVars.LOGS_ENABLED) {
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append("found location ");
                            stringBuilder.append(location);
                            FileLog.m0d(stringBuilder.toString());
                        }
                        LocationProvider.this.lastKnownLocation = location;
                        if (location.getAccuracy() < 100.0f) {
                            if (LocationProvider.this.delegate != null) {
                                LocationProvider.this.delegate.onLocationAcquired(location);
                            }
                            if (LocationProvider.this.locationQueryCancelRunnable != null) {
                                AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                            }
                            LocationProvider.this.cleanup();
                        }
                    }
                }
            }

            public void onStatusChanged(String provider, int status, Bundle extras) {
            }

            public void onProviderEnabled(String provider) {
            }

            public void onProviderDisabled(String provider) {
            }
        }

        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        private void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1, 0.0f, this.gpsLocationListener);
            } catch (Throwable e) {
                FileLog.m3e(e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1, 0.0f, this.networkLocationListener);
            } catch (Throwable e2) {
                FileLog.m3e(e2);
            }
            try {
                this.lastKnownLocation = this.locationManager.getLastKnownLocation("gps");
                if (this.lastKnownLocation == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Throwable e22) {
                FileLog.m3e(e22);
            }
            if (this.locationQueryCancelRunnable != null) {
                AndroidUtilities.cancelRunOnUIThread(this.locationQueryCancelRunnable);
            }
            this.locationQueryCancelRunnable = new C05111();
            AndroidUtilities.runOnUIThread(this.locationQueryCancelRunnable, DefaultRenderersFactory.DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS);
        }

        public void stop() {
            if (this.locationManager != null) {
                if (this.locationQueryCancelRunnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(this.locationQueryCancelRunnable);
                }
                cleanup();
            }
        }
    }

    private static class MediaSendPrepareWorker {
        public volatile TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    public static class SendingMediaInfo {
        public String caption;
        public ArrayList<MessageEntity> entities;
        public boolean isVideo;
        public ArrayList<InputDocument> masks;
        public String path;
        public SearchImage searchImage;
        public int ttl;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    /* renamed from: org.telegram.messenger.SendMessagesHelper$1 */
    class C18201 implements LocationProviderDelegate {
        C18201() {
        }

        public void onLocationAcquired(Location location) {
            SendMessagesHelper.this.sendLocation(location);
            SendMessagesHelper.this.waitingForLocation.clear();
        }

        public void onUnableLocationAcquire() {
            HashMap<String, MessageObject> waitingForLocationCopy = new HashMap(SendMessagesHelper.this.waitingForLocation);
            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, waitingForLocationCopy);
            SendMessagesHelper.this.waitingForLocation.clear();
        }
    }

    static {
        int availableProcessors;
        if (VERSION.SDK_INT >= 17) {
            availableProcessors = Runtime.getRuntime().availableProcessors();
        } else {
            availableProcessors = 2;
        }
        int cores = availableProcessors;
        mediaSendThreadPool = new ThreadPoolExecutor(cores, cores, 60, TimeUnit.SECONDS, new LinkedBlockingQueue());
    }

    public static SendMessagesHelper getInstance(int num) {
        SendMessagesHelper localInstance = Instance[num];
        if (localInstance == null) {
            synchronized (SendMessagesHelper.class) {
                localInstance = Instance[num];
                if (localInstance == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper = new SendMessagesHelper(num);
                    localInstance = sendMessagesHelper;
                    sendMessagesHelperArr[num] = sendMessagesHelper;
                }
            }
        }
        return localInstance;
    }

    public SendMessagesHelper(int instance) {
        this.currentAccount = instance;
        AndroidUtilities.runOnUIThread(new C04972());
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.currentChatInfo = null;
        this.locationProvider.stop();
    }

    public void setCurrentChatInfo(ChatFull info) {
        this.currentChatInfo = info;
    }

    public void didReceivedNotification(int id, int account, Object... args) {
        SendMessagesHelper sendMessagesHelper = this;
        int i = id;
        int i2 = 4;
        int i3 = 1;
        int a = 0;
        int a2;
        int a3;
        int index;
        String str;
        int index2;
        if (i == NotificationCenter.FileDidUpload) {
            String location = args[0];
            InputFile file = args[1];
            InputEncryptedFile encryptedFile = args[2];
            ArrayList<DelayedMessage> arr = (ArrayList) sendMessagesHelper.delayedMessages.get(location);
            if (arr != null) {
                while (true) {
                    a2 = a;
                    if (a2 >= arr.size()) {
                        break;
                    }
                    ArrayList<DelayedMessage> arr2;
                    DelayedMessage message = (DelayedMessage) arr.get(a2);
                    InputMedia media = null;
                    if ((message.sendRequest instanceof TL_messages_sendMedia) != 0) {
                        media = ((TL_messages_sendMedia) message.sendRequest).media;
                    } else if ((message.sendRequest instanceof TL_messages_sendBroadcast) != 0) {
                        media = ((TL_messages_sendBroadcast) message.sendRequest).media;
                    } else if ((message.sendRequest instanceof TL_messages_sendMultiMedia) != 0) {
                        media = (InputMedia) message.extraHashMap.get(location);
                    }
                    a = media;
                    InputMedia media2;
                    DelayedMessage message2;
                    MessageObject decryptedMessage;
                    if (file == null || a == 0) {
                        media2 = a;
                        message2 = message;
                        a3 = a2;
                        arr2 = arr;
                        a = encryptedFile;
                        if (a == 0 || message2.sendEncryptedRequest == null) {
                            a2 = a3;
                        } else {
                            DecryptedMessage decryptedMessage2;
                            TL_decryptedMessage decryptedMessage3;
                            if (message2.type == i2) {
                                DecryptedMessage decryptedMessage4;
                                TL_messages_sendEncryptedMultiMedia req = message2.sendEncryptedRequest;
                                InputEncryptedFile arr3 = (InputEncryptedFile) message2.extraHashMap.get(location);
                                index = req.files.indexOf(arr3);
                                if (index >= 0) {
                                    req.files.set(index, a);
                                    if (arr3.id == 1) {
                                        HashMap hashMap = message2.extraHashMap;
                                        StringBuilder stringBuilder = new StringBuilder();
                                        stringBuilder.append(location);
                                        decryptedMessage3 = null;
                                        stringBuilder.append("_i");
                                        decryptedMessage = (MessageObject) hashMap.get(stringBuilder.toString());
                                        hashMap = message2.extraHashMap;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(location);
                                        MessageObject messageObject = decryptedMessage;
                                        stringBuilder.append("_t");
                                        message2.location = (FileLocation) hashMap.get(stringBuilder.toString());
                                        stopVideoService(((MessageObject) message2.messageObjects.get(index)).messageOwner.attachPath);
                                    } else {
                                        decryptedMessage3 = null;
                                    }
                                    decryptedMessage4 = (TL_decryptedMessage) req.messages.get(index);
                                } else {
                                    decryptedMessage4 = null;
                                }
                                decryptedMessage2 = decryptedMessage4;
                            } else {
                                decryptedMessage3 = null;
                                decryptedMessage2 = (TL_decryptedMessage) message2.sendEncryptedRequest;
                            }
                            if (decryptedMessage2 != null) {
                                if ((decryptedMessage2.media instanceof TL_decryptedMessageMediaVideo) || (decryptedMessage2.media instanceof TL_decryptedMessageMediaPhoto) || (decryptedMessage2.media instanceof TL_decryptedMessageMediaDocument)) {
                                    decryptedMessage2.media.size = (int) ((Long) args[5]).longValue();
                                }
                                decryptedMessage2.media.key = (byte[]) args[3];
                                decryptedMessage2.media.iv = (byte[]) args[4];
                                if (message2.type == 4) {
                                    uploadMultiMedia(message2, null, a, location);
                                } else {
                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(decryptedMessage2, message2.obj.messageOwner, message2.encryptedChat, a, message2.originalPath, message2.obj);
                                }
                            }
                            arr2.remove(a3);
                            a2 = a3 - 1;
                        }
                    } else {
                        InputEncryptedFile encryptedFile2;
                        if (message.type == 0) {
                            a.file = file;
                            TLObject tLObject = message.sendRequest;
                            MessageObject messageObject2 = message.obj;
                            str = message.originalPath;
                            media2 = a;
                            DelayedMessage message3 = message;
                            decryptedMessage = messageObject2;
                            a3 = a2;
                            String str2 = str;
                            arr2 = arr;
                            encryptedFile2 = encryptedFile;
                            performSendMessageRequest(tLObject, decryptedMessage, str2, message3, 1);
                            message2 = message3;
                        } else {
                            media2 = a;
                            a3 = a2;
                            arr2 = arr;
                            encryptedFile2 = encryptedFile;
                            message2 = message;
                            if (message2.type == i3) {
                                if (media2.file == 0) {
                                    media2.file = file;
                                    if (media2.thumb != 0 || message2.location == 0) {
                                        performSendMessageRequest(message2.sendRequest, message2.obj, message2.originalPath);
                                    } else {
                                        performSendDelayedMessage(message2);
                                    }
                                } else {
                                    media2.thumb = file;
                                    media2.flags |= i2;
                                    performSendMessageRequest(message2.sendRequest, message2.obj, message2.originalPath);
                                }
                            } else if (message2.type == 2) {
                                if (media2.file == 0) {
                                    media2.file = file;
                                    if (media2.thumb != 0 || message2.location == 0) {
                                        performSendMessageRequest(message2.sendRequest, message2.obj, message2.originalPath);
                                    } else {
                                        performSendDelayedMessage(message2);
                                    }
                                } else {
                                    media2.thumb = file;
                                    media2.flags |= i2;
                                    performSendMessageRequest(message2.sendRequest, message2.obj, message2.originalPath);
                                }
                            } else if (message2.type == 3) {
                                media2.file = file;
                                performSendMessageRequest(message2.sendRequest, message2.obj, message2.originalPath);
                            } else if (message2.type == i2) {
                                if ((media2 instanceof TL_inputMediaUploadedDocument) == 0) {
                                    media2.file = file;
                                    uploadMultiMedia(message2, media2, null, location);
                                } else if (media2.file == 0) {
                                    media2.file = file;
                                    a = message2.extraHashMap;
                                    r2 = new StringBuilder();
                                    r2.append(location);
                                    r2.append("_i");
                                    index2 = message2.messageObjects.indexOf((MessageObject) a.get(r2.toString()));
                                    HashMap hashMap2 = message2.extraHashMap;
                                    arr = new StringBuilder();
                                    arr.append(location);
                                    arr.append("_t");
                                    message2.location = (FileLocation) hashMap2.get(arr.toString());
                                    stopVideoService(((MessageObject) message2.messageObjects.get(index2)).messageOwner.attachPath);
                                    if (media2.thumb != null || message2.location == null) {
                                        uploadMultiMedia(message2, media2, null, location);
                                    } else {
                                        performSendDelayedMessage(message2, index2);
                                    }
                                } else {
                                    media2.thumb = file;
                                    media2.flags |= i2;
                                    a = message2.extraHashMap;
                                    r2 = new StringBuilder();
                                    r2.append(location);
                                    r2.append("_o");
                                    uploadMultiMedia(message2, media2, null, (String) a.get(r2.toString()));
                                }
                            }
                        }
                        arr2.remove(a3);
                        a2 = a3 - 1;
                        a = encryptedFile2;
                    }
                    i3 = 1;
                    encryptedFile = a;
                    a = a2 + 1;
                    arr = arr2;
                    i2 = 4;
                }
                a = encryptedFile;
                if (arr.isEmpty()) {
                    sendMessagesHelper.delayedMessages.remove(location);
                }
            }
        } else if (i == NotificationCenter.FileDidFailUpload) {
            location = args[0];
            boolean enc = ((Boolean) args[1]).booleanValue();
            arr = (ArrayList) sendMessagesHelper.delayedMessages.get(location);
            if (arr != null) {
                while (a < arr.size()) {
                    obj = (DelayedMessage) arr.get(a);
                    if ((enc && obj.sendEncryptedRequest != null) || !(enc || obj.sendRequest == null)) {
                        obj.markAsError();
                        arr.remove(a);
                        a--;
                    }
                    a++;
                }
                if (arr.isEmpty()) {
                    sendMessagesHelper.delayedMessages.remove(location);
                }
            }
        } else if (i == NotificationCenter.FilePreparingStarted) {
            messageObject = args[0];
            if (messageObject.getId() != 0) {
                finalPath = args[1];
                arr = (ArrayList) sendMessagesHelper.delayedMessages.get(messageObject.messageOwner.attachPath);
                if (arr != null) {
                    while (a < arr.size()) {
                        obj = (DelayedMessage) arr.get(a);
                        if (obj.type == 4) {
                            index = obj.messageObjects.indexOf(messageObject);
                            HashMap hashMap3 = obj.extraHashMap;
                            StringBuilder stringBuilder2 = new StringBuilder();
                            stringBuilder2.append(messageObject.messageOwner.attachPath);
                            stringBuilder2.append("_t");
                            obj.location = (FileLocation) hashMap3.get(stringBuilder2.toString());
                            performSendDelayedMessage(obj, index);
                            arr.remove(a);
                            break;
                        } else if (obj.obj == messageObject) {
                            obj.videoEditedInfo = null;
                            performSendDelayedMessage(obj);
                            arr.remove(a);
                            break;
                        } else {
                            a++;
                        }
                    }
                    if (arr.isEmpty()) {
                        sendMessagesHelper.delayedMessages.remove(messageObject.messageOwner.attachPath);
                    }
                }
            }
        } else if (i == NotificationCenter.FileNewChunkAvailable) {
            messageObject = (MessageObject) args[0];
            if (messageObject.getId() != 0) {
                finalPath = (String) args[1];
                long availableSize = ((Long) args[2]).longValue();
                long finalSize = ((Long) args[3]).longValue();
                long finalSize2 = finalSize;
                FileLoader.getInstance(sendMessagesHelper.currentAccount).checkUploadNewDataAvailable(finalPath, ((int) messageObject.getDialogId()) == 0, availableSize, finalSize);
                long finalSize3 = finalSize2;
                if (finalSize3 != 0) {
                    ArrayList<DelayedMessage> arr4 = (ArrayList) sendMessagesHelper.delayedMessages.get(messageObject.messageOwner.attachPath);
                    if (arr4 != null) {
                        int a4 = 0;
                        while (a4 < arr4.size()) {
                            String finalPath;
                            DelayedMessage message4 = (DelayedMessage) arr4.get(a4);
                            ArrayList<Message> messages;
                            if (message4.type == 4) {
                                for (int b = a; b < message4.messageObjects.size(); b++) {
                                    MessageObject obj = (MessageObject) message4.messageObjects.get(b);
                                    if (obj == messageObject) {
                                        obj.videoEditedInfo = null;
                                        finalPath = finalPath;
                                        obj.messageOwner.params.remove("ve");
                                        obj.messageOwner.media.document.size = (int) finalSize3;
                                        messages = new ArrayList();
                                        messages.add(obj.messageOwner);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages((ArrayList) messages, false, true, false, 0);
                                        break;
                                    }
                                }
                                finalPath = finalPath;
                            } else {
                                finalPath = finalPath;
                                if (message4.obj == messageObject) {
                                    message4.obj.videoEditedInfo = null;
                                    message4.obj.messageOwner.params.remove("ve");
                                    message4.obj.messageOwner.media.document.size = (int) finalSize3;
                                    messages = new ArrayList();
                                    messages.add(message4.obj.messageOwner);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages((ArrayList) messages, false, true, false, 0);
                                    break;
                                }
                            }
                            a4++;
                            finalPath = finalPath;
                            a = 0;
                        }
                    }
                }
            }
        } else {
            MessageObject messageObject3 = null;
            String finalPath2;
            ArrayList<DelayedMessage> arr5;
            if (i == NotificationCenter.FilePreparingFailed) {
                messageObject = (MessageObject) args[0];
                if (messageObject.getId() != 0) {
                    finalPath2 = args[1];
                    stopVideoService(messageObject.messageOwner.attachPath);
                    arr5 = (ArrayList) sendMessagesHelper.delayedMessages.get(finalPath2);
                    if (arr5 != null) {
                        a2 = 0;
                        while (a2 < arr5.size()) {
                            obj = (DelayedMessage) arr5.get(a2);
                            if (obj.type == 4) {
                                for (index = 0; index < obj.messages.size(); index++) {
                                    if (obj.messageObjects.get(index) == messageObject) {
                                        obj.markAsError();
                                        arr5.remove(a2);
                                        a2--;
                                        break;
                                    }
                                }
                            } else if (obj.obj == messageObject) {
                                obj.markAsError();
                                arr5.remove(a2);
                                a2--;
                            }
                            a2++;
                        }
                        if (arr5.isEmpty()) {
                            sendMessagesHelper.delayedMessages.remove(finalPath2);
                        }
                    }
                }
            } else if (i == NotificationCenter.httpFileDidLoaded) {
                str = args[0];
                ArrayList<DelayedMessage> arr6 = (ArrayList) sendMessagesHelper.delayedMessages.get(str);
                if (arr6 != null) {
                    a = 0;
                    while (true) {
                        a3 = a;
                        if (a3 >= arr6.size()) {
                            break;
                        }
                        MessageObject messageObject4;
                        int fileType;
                        ArrayList<DelayedMessage> arr7;
                        final DelayedMessage message5 = (DelayedMessage) arr6.get(a3);
                        if (message5.type == 0) {
                            messageObject4 = message5.obj;
                            fileType = 0;
                        } else {
                            if (message5.type == 2) {
                                fileType = 1;
                                messageObject4 = message5.obj;
                            } else if (message5.type == 4) {
                                messageObject4 = (MessageObject) message5.extraHashMap.get(str);
                                if (messageObject4.getDocument() != null) {
                                    fileType = 1;
                                } else {
                                    fileType = 0;
                                }
                            } else {
                                fileType = -1;
                                messageObject4 = messageObject3;
                            }
                            fileType = fileType;
                        }
                        MessageObject messageObject5 = messageObject4;
                        final File cacheFile;
                        MessageObject arr8;
                        if (fileType == 0) {
                            StringBuilder stringBuilder3 = new StringBuilder();
                            stringBuilder3.append(Utilities.MD5(str));
                            stringBuilder3.append(".");
                            stringBuilder3.append(ImageLoader.getHttpUrlExtension(str, "file"));
                            String md5 = stringBuilder3.toString();
                            cacheFile = new File(FileLoader.getDirectory(4), md5);
                            C04993 c04993 = r0;
                            DispatchQueue dispatchQueue = Utilities.globalQueue;
                            final MessageObject messageObject6 = messageObject5;
                            obj = message5;
                            arr7 = arr6;
                            arr8 = messageObject5;
                            final String messageObject7 = str;
                            C04993 c049932 = new Runnable() {
                                public void run() {
                                    final TL_photo photo = SendMessagesHelper.this.generatePhotoSizes(cacheFile.toString(), null);
                                    AndroidUtilities.runOnUIThread(new Runnable() {
                                        public void run() {
                                            if (photo != null) {
                                                messageObject6.messageOwner.media.photo = photo;
                                                messageObject6.messageOwner.attachPath = cacheFile.toString();
                                                ArrayList<Message> messages = new ArrayList();
                                                messages.add(messageObject6.messageOwner);
                                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages((ArrayList) messages, false, true, false, 0);
                                                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.updateMessageMedia, messageObject6.messageOwner);
                                                obj.location = ((PhotoSize) photo.sizes.get(photo.sizes.size() - 1)).location;
                                                obj.httpLocation = null;
                                                if (obj.type == 4) {
                                                    SendMessagesHelper.this.performSendDelayedMessage(obj, obj.messageObjects.indexOf(messageObject6));
                                                } else {
                                                    SendMessagesHelper.this.performSendDelayedMessage(obj);
                                                }
                                                return;
                                            }
                                            if (BuildVars.LOGS_ENABLED) {
                                                StringBuilder stringBuilder = new StringBuilder();
                                                stringBuilder.append("can't load image ");
                                                stringBuilder.append(messageObject7);
                                                stringBuilder.append(" to file ");
                                                stringBuilder.append(cacheFile.toString());
                                                FileLog.m1e(stringBuilder.toString());
                                            }
                                            obj.markAsError();
                                        }
                                    });
                                }
                            };
                            dispatchQueue.postRunnable(c04993);
                        } else {
                            arr7 = arr6;
                            arr8 = messageObject5;
                            if (fileType == 1) {
                                finalPath2 = new StringBuilder();
                                finalPath2.append(Utilities.MD5(str));
                                finalPath2.append(".gif");
                                cacheFile = new File(FileLoader.getDirectory(4), finalPath2.toString());
                                Utilities.globalQueue.postRunnable(new Runnable() {
                                    public void run() {
                                        final Document document = message5.obj.getDocument();
                                        if (document.thumb.location instanceof TL_fileLocationUnavailable) {
                                            try {
                                                boolean z = true;
                                                Bitmap bitmap = ImageLoader.loadBitmap(cacheFile.getAbsolutePath(), null, 90.0f, 90.0f, true);
                                                if (bitmap != null) {
                                                    if (message5.sendEncryptedRequest == null) {
                                                        z = false;
                                                    }
                                                    document.thumb = ImageLoader.scaleAndSaveImage(bitmap, 90.0f, 90.0f, 55, z);
                                                    bitmap.recycle();
                                                }
                                            } catch (Throwable e) {
                                                document.thumb = null;
                                                FileLog.m3e(e);
                                            }
                                            if (document.thumb == null) {
                                                document.thumb = new TL_photoSizeEmpty();
                                                document.thumb.type = "s";
                                            }
                                        }
                                        AndroidUtilities.runOnUIThread(new Runnable() {
                                            public void run() {
                                                message5.httpLocation = null;
                                                message5.obj.messageOwner.attachPath = cacheFile.toString();
                                                message5.location = document.thumb.location;
                                                ArrayList<Message> messages = new ArrayList();
                                                messages.add(arr8.messageOwner);
                                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages((ArrayList) messages, false, true, false, 0);
                                                SendMessagesHelper.this.performSendDelayedMessage(message5);
                                                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.updateMessageMedia, message5.obj.messageOwner);
                                            }
                                        });
                                    }
                                });
                                a = a3 + 1;
                                arr6 = arr7;
                                messageObject3 = null;
                            }
                        }
                        a = a3 + 1;
                        arr6 = arr7;
                        messageObject3 = null;
                    }
                    sendMessagesHelper.delayedMessages.remove(str);
                }
            } else if (i == NotificationCenter.FileDidLoaded) {
                location = args[0];
                ArrayList<DelayedMessage> arr9 = (ArrayList) sendMessagesHelper.delayedMessages.get(location);
                if (arr9 != null) {
                    a = 0;
                    while (true) {
                        index2 = a;
                        if (index2 >= arr9.size()) {
                            break;
                        }
                        performSendDelayedMessage((DelayedMessage) arr9.get(index2));
                        a = index2 + 1;
                    }
                    sendMessagesHelper.delayedMessages.remove(location);
                }
            } else if (i == NotificationCenter.httpFileDidFailedLoad || i == NotificationCenter.FileDidFailedLoad) {
                fileType = 0;
                finalPath2 = args[0];
                arr5 = (ArrayList) sendMessagesHelper.delayedMessages.get(finalPath2);
                if (arr5 != null) {
                    while (fileType < arr5.size()) {
                        ((DelayedMessage) arr5.get(fileType)).markAsError();
                        fileType++;
                    }
                    sendMessagesHelper.delayedMessages.remove(finalPath2);
                }
            }
        }
    }

    public void cancelSendingMessage(MessageObject object) {
        MessageObject messageObject = object;
        ArrayList<String> keysToRemove = new ArrayList();
        boolean enc = false;
        for (Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> messages = (ArrayList) entry.getValue();
            int a = 0;
            while (a < messages.size()) {
                DelayedMessage message = (DelayedMessage) messages.get(a);
                if (message.type == 4) {
                    int index = -1;
                    MessageObject messageObject2 = null;
                    for (int b = 0; b < message.messageObjects.size(); b++) {
                        messageObject2 = (MessageObject) message.messageObjects.get(b);
                        if (messageObject2.getId() == object.getId()) {
                            index = b;
                            break;
                        }
                    }
                    if (index >= 0) {
                        message.messageObjects.remove(index);
                        message.messages.remove(index);
                        message.originalPaths.remove(index);
                        if (message.sendRequest != null) {
                            message.sendRequest.multi_media.remove(index);
                        } else {
                            TL_messages_sendEncryptedMultiMedia request = message.sendEncryptedRequest;
                            request.messages.remove(index);
                            request.files.remove(index);
                        }
                        MediaController.getInstance().cancelVideoConvert(messageObject);
                        String keyToRemove = (String) message.extraHashMap.get(messageObject2);
                        if (keyToRemove != null) {
                            keysToRemove.add(keyToRemove);
                        }
                        if (message.messageObjects.isEmpty()) {
                            message.sendDelayedRequests();
                        } else {
                            if (message.finalGroupMessage == object.getId()) {
                                MessageObject prevMessage = (MessageObject) message.messageObjects.get(message.messageObjects.size() - 1);
                                message.finalGroupMessage = prevMessage.getId();
                                prevMessage.messageOwner.params.put("final", "1");
                                messages_Messages messagesRes = new TL_messages_messages();
                                messagesRes.messages.add(prevMessage.messageOwner);
                                MessagesStorage.getInstance(r0.currentAccount).putMessages(messagesRes, message.peer, -2, 0, false);
                            }
                            sendReadyToSendGroup(message, false, true);
                        }
                    }
                } else if (message.obj.getId() == object.getId()) {
                    messages.remove(a);
                    message.sendDelayedRequests();
                    MediaController.getInstance().cancelVideoConvert(message.obj);
                    if (messages.size() == 0) {
                        keysToRemove.add(entry.getKey());
                        if (message.sendEncryptedRequest != null) {
                            enc = true;
                        }
                    }
                } else {
                    a++;
                }
            }
        }
        int a2 = 0;
        while (true) {
            int a3 = a2;
            if (a3 < keysToRemove.size()) {
                String key = (String) keysToRemove.get(a3);
                if (key.startsWith("http")) {
                    ImageLoader.getInstance().cancelLoadHttpFile(key);
                } else {
                    FileLoader.getInstance(r0.currentAccount).cancelUploadFile(key, enc);
                }
                stopVideoService(key);
                r0.delayedMessages.remove(key);
                a2 = a3 + 1;
            } else {
                ArrayList<Integer> messages2 = new ArrayList();
                messages2.add(Integer.valueOf(object.getId()));
                MessagesController.getInstance(r0.currentAccount).deleteMessages(messages2, null, null, messageObject.messageOwner.to_id.channel_id, false);
                return;
            }
        }
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean unsent) {
        if (messageObject.getId() >= 0) {
            return false;
        }
        if (messageObject.messageOwner.action instanceof TL_messageEncryptedAction) {
            EncryptedChat encryptedChat = MessagesController.getInstance(this.currentAccount).getEncryptedChat(Integer.valueOf((int) (messageObject.getDialogId() >> 32)));
            if (encryptedChat == null) {
                MessagesStorage.getInstance(this.currentAccount).markMessageAsSendError(messageObject.messageOwner);
                messageObject.messageOwner.send_state = 2;
                NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            if (messageObject.messageOwner.random_id == 0) {
                messageObject.messageOwner.random_id = getNextRandomId();
            }
            if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionSetMessageTTL) {
                SecretChatHelper.getInstance(this.currentAccount).sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionDeleteMessages) {
                SecretChatHelper.getInstance(this.currentAccount).sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionFlushHistory) {
                SecretChatHelper.getInstance(this.currentAccount).sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionNotifyLayer) {
                SecretChatHelper.getInstance(this.currentAccount).sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionReadMessages) {
                SecretChatHelper.getInstance(this.currentAccount).sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionScreenshotMessages) {
                SecretChatHelper.getInstance(this.currentAccount).sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
            } else if (!(messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionTyping)) {
                if (!(messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionResend)) {
                    if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionCommitKey) {
                        SecretChatHelper.getInstance(this.currentAccount).sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                    } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionAbortKey) {
                        SecretChatHelper.getInstance(this.currentAccount).sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0);
                    } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionRequestKey) {
                        SecretChatHelper.getInstance(this.currentAccount).sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                    } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionAcceptKey) {
                        SecretChatHelper.getInstance(this.currentAccount).sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                    } else if (messageObject.messageOwner.action.encryptedAction instanceof TL_decryptedMessageActionNoop) {
                        SecretChatHelper.getInstance(this.currentAccount).sendNoopMessage(encryptedChat, messageObject.messageOwner);
                    }
                }
            }
            return true;
        }
        if (messageObject.messageOwner.action instanceof TL_messageActionScreenshotTaken) {
            sendScreenshotMessage(MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf((int) messageObject.getDialogId())), messageObject.messageOwner.reply_to_msg_id, messageObject.messageOwner);
        }
        if (unsent) {
            this.unsentMessages.put(messageObject.getId(), messageObject);
        }
        sendMessage(messageObject);
        return true;
    }

    protected void processSentMessage(int id) {
        int prevSize = this.unsentMessages.size();
        this.unsentMessages.remove(id);
        if (prevSize != 0 && this.unsentMessages.size() == 0) {
            checkUnsentMessages();
        }
    }

    public void processForwardFromMyName(MessageObject messageObject, long did) {
        SendMessagesHelper sendMessagesHelper = this;
        MessageObject messageObject2 = messageObject;
        long j = did;
        if (messageObject2 != null) {
            ArrayList<MessageObject> arrayList;
            if (messageObject2.messageOwner.media == null || (messageObject2.messageOwner.media instanceof TL_messageMediaEmpty) || (messageObject2.messageOwner.media instanceof TL_messageMediaWebPage) || (messageObject2.messageOwner.media instanceof TL_messageMediaGame) || (messageObject2.messageOwner.media instanceof TL_messageMediaInvoice)) {
                if (messageObject2.messageOwner.message != null) {
                    ArrayList<MessageEntity> arrayList2;
                    WebPage webPage = null;
                    if (messageObject2.messageOwner.media instanceof TL_messageMediaWebPage) {
                        webPage = messageObject2.messageOwner.media.webpage;
                    }
                    WebPage webPage2 = webPage;
                    if (messageObject2.messageOwner.entities == null || messageObject2.messageOwner.entities.isEmpty()) {
                        arrayList2 = null;
                    } else {
                        arrayList2 = new ArrayList();
                        for (int a = 0; a < messageObject2.messageOwner.entities.size(); a++) {
                            MessageEntity entity = (MessageEntity) messageObject2.messageOwner.entities.get(a);
                            if ((entity instanceof TL_messageEntityBold) || (entity instanceof TL_messageEntityItalic) || (entity instanceof TL_messageEntityPre) || (entity instanceof TL_messageEntityCode) || (entity instanceof TL_messageEntityTextUrl)) {
                                arrayList2.add(entity);
                            }
                        }
                    }
                    long j2 = j;
                    sendMessage(messageObject2.messageOwner.message, j2, messageObject2.replyMessageObject, webPage2, true, arrayList2, null, null);
                } else if (((int) j) != 0) {
                    arrayList = new ArrayList();
                    arrayList.add(messageObject2);
                    sendMessage(arrayList, j);
                }
            } else if (messageObject2.messageOwner.media.photo instanceof TL_photo) {
                sendMessage((TL_photo) messageObject2.messageOwner.media.photo, null, j, messageObject2.replyMessageObject, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, null, null, messageObject2.messageOwner.media.ttl_seconds);
            } else if (messageObject2.messageOwner.media.document instanceof TL_document) {
                sendMessage((TL_document) messageObject2.messageOwner.media.document, null, messageObject2.messageOwner.attachPath, j, messageObject2.replyMessageObject, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, null, null, messageObject2.messageOwner.media.ttl_seconds);
            } else {
                if (!(messageObject2.messageOwner.media instanceof TL_messageMediaVenue)) {
                    if (!(messageObject2.messageOwner.media instanceof TL_messageMediaGeo)) {
                        if (messageObject2.messageOwner.media.phone_number != null) {
                            User user = new TL_userContact_old2();
                            user.phone = messageObject2.messageOwner.media.phone_number;
                            user.first_name = messageObject2.messageOwner.media.first_name;
                            user.last_name = messageObject2.messageOwner.media.last_name;
                            user.id = messageObject2.messageOwner.media.user_id;
                            sendMessage(user, j, messageObject2.replyMessageObject, null, null);
                        } else if (((int) j) != 0) {
                            arrayList = new ArrayList();
                            arrayList.add(messageObject2);
                            sendMessage(arrayList, j);
                        }
                    }
                }
                sendMessage(messageObject2.messageOwner.media, j, messageObject2.replyMessageObject, null, null);
            }
        }
    }

    public void sendScreenshotMessage(User user, int messageId, Message resendMessage) {
        if (!(user == null || messageId == 0)) {
            if (user.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
                Message message;
                TL_messages_sendScreenshotNotification req = new TL_messages_sendScreenshotNotification();
                req.peer = new TL_inputPeerUser();
                req.peer.access_hash = user.access_hash;
                req.peer.user_id = user.id;
                if (resendMessage != null) {
                    message = resendMessage;
                    req.reply_to_msg_id = messageId;
                    req.random_id = resendMessage.random_id;
                } else {
                    message = new TL_messageService();
                    message.random_id = getNextRandomId();
                    message.dialog_id = (long) user.id;
                    message.unread = true;
                    message.out = true;
                    int newMessageId = UserConfig.getInstance(this.currentAccount).getNewMessageId();
                    message.id = newMessageId;
                    message.local_id = newMessageId;
                    message.from_id = UserConfig.getInstance(this.currentAccount).getClientUserId();
                    message.flags |= 256;
                    message.flags |= 8;
                    message.reply_to_msg_id = messageId;
                    message.to_id = new TL_peerUser();
                    message.to_id.user_id = user.id;
                    message.date = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
                    message.action = new TL_messageActionScreenshotTaken();
                    UserConfig.getInstance(this.currentAccount).saveConfig(false);
                }
                req.random_id = message.random_id;
                MessageObject newMsgObj = new MessageObject(this.currentAccount, message, false);
                newMsgObj.messageOwner.send_state = 1;
                ArrayList<MessageObject> objArr = new ArrayList();
                objArr.add(newMsgObj);
                MessagesController.getInstance(this.currentAccount).updateInterfaceWithMessages(message.dialog_id, objArr);
                NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                ArrayList<Message> arr = new ArrayList();
                arr.add(message);
                MessagesStorage.getInstance(this.currentAccount).putMessages((ArrayList) arr, false, true, false, 0);
                performSendMessageRequest(req, newMsgObj, null);
            }
        }
    }

    public void sendSticker(Document document, long peer, MessageObject replyingMessageObject) {
        Document document2 = document;
        long j = peer;
        if (document2 != null) {
            SendMessagesHelper sendMessagesHelper;
            if (((int) j) == 0) {
                if (MessagesController.getInstance(this.currentAccount).getEncryptedChat(Integer.valueOf((int) (j >> 32))) != null) {
                    Document newDocument = new TL_document();
                    newDocument.id = document2.id;
                    newDocument.access_hash = document2.access_hash;
                    newDocument.date = document2.date;
                    newDocument.mime_type = document2.mime_type;
                    newDocument.size = document2.size;
                    newDocument.dc_id = document2.dc_id;
                    newDocument.attributes = new ArrayList(document2.attributes);
                    if (newDocument.mime_type == null) {
                        newDocument.mime_type = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    if (document2.thumb instanceof TL_photoSize) {
                        File file = FileLoader.getPathToAttach(document2.thumb, true);
                        if (file.exists()) {
                            try {
                                int len = (int) file.length();
                                byte[] arr = new byte[((int) file.length())];
                                new RandomAccessFile(file, "r").readFully(arr);
                                newDocument.thumb = new TL_photoCachedSize();
                                newDocument.thumb.location = document2.thumb.location;
                                newDocument.thumb.size = document2.thumb.size;
                                newDocument.thumb.f43w = document2.thumb.f43w;
                                newDocument.thumb.f42h = document2.thumb.f42h;
                                newDocument.thumb.type = document2.thumb.type;
                                newDocument.thumb.bytes = arr;
                            } catch (Throwable e) {
                                FileLog.m3e(e);
                            }
                        }
                    }
                    if (newDocument.thumb == null) {
                        newDocument.thumb = new TL_photoSizeEmpty();
                        newDocument.thumb.type = "s";
                    }
                    document2 = newDocument;
                } else {
                    return;
                }
            }
            sendMessagesHelper = this;
            Document document3 = document2;
            if (document3 instanceof TL_document) {
                sendMessagesHelper.sendMessage((TL_document) document3, null, null, j, replyingMessageObject, null, null, null, null, null);
            }
        }
    }

    public int sendMessage(ArrayList<MessageObject> messages, long peer) {
        SendMessagesHelper sendMessagesHelper;
        long j;
        SendMessagesHelper sendMessagesHelper2 = this;
        ArrayList<MessageObject> arrayList = messages;
        long j2 = peer;
        if (arrayList != null) {
            if (!messages.isEmpty()) {
                int lower_id = (int) j2;
                int sendResult = 0;
                int a;
                if (lower_id == 0) {
                    int a2 = 0;
                    while (true) {
                        a = a2;
                        if (a >= messages.size()) {
                            break;
                        }
                        processForwardFromMyName((MessageObject) arrayList.get(a), peer);
                        a2 = a + 1;
                    }
                } else {
                    Peer to_id = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getPeer((int) j2);
                    boolean isMegagroup = false;
                    boolean isSignature = false;
                    boolean canSendStickers = true;
                    boolean canSendMedia = true;
                    boolean canSendPreview = true;
                    if (lower_id <= 0) {
                        Chat chat = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getChat(Integer.valueOf(-lower_id));
                        if (ChatObject.isChannel(chat)) {
                            isMegagroup = chat.megagroup;
                            isSignature = chat.signatures;
                            if (chat.banned_rights != null) {
                                canSendStickers = chat.banned_rights.send_stickers ^ 1;
                                canSendMedia = chat.banned_rights.send_media ^ 1;
                                canSendPreview = chat.banned_rights.embed_links ^ 1;
                            }
                        }
                    } else if (MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(lower_id)) == null) {
                        return 0;
                    }
                    boolean isMegagroup2 = isMegagroup;
                    boolean isSignature2 = isSignature;
                    boolean canSendStickers2 = canSendStickers;
                    boolean canSendMedia2 = canSendMedia;
                    boolean canSendPreview2 = canSendPreview;
                    LongSparseArray<Long> groupsMap = new LongSparseArray();
                    ArrayList<MessageObject> objArr = new ArrayList();
                    ArrayList<Message> arr = new ArrayList();
                    ArrayList randomIds = new ArrayList();
                    ArrayList<Integer> ids = new ArrayList();
                    LongSparseArray messagesByRandomIds = new LongSparseArray();
                    InputPeer inputPeer = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getInputPeer(lower_id);
                    int myId = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                    ArrayList<Integer> ids2 = ids;
                    InputPeer inputPeer2 = inputPeer;
                    canSendPreview = j2 == ((long) myId);
                    ArrayList<Integer> ids3 = ids2;
                    int sendResult2 = 0;
                    sendResult = 0;
                    ArrayList<Message> arrayList2 = arr;
                    ArrayList<MessageObject> objArr2 = objArr;
                    ArrayList<Message> arr2 = arrayList2;
                    while (true) {
                        int lower_id2 = lower_id;
                        if (sendResult >= messages.size()) {
                            break;
                        }
                        LongSparseArray<Long> groupsMap2;
                        InputPeer inputPeer3;
                        Peer to_id2;
                        int myId2;
                        int lower_id3;
                        ArrayList<Message> arr3;
                        ArrayList<MessageObject> objArr3;
                        ArrayList<Long> randomIds2;
                        ArrayList<Integer> ids4;
                        LongSparseArray<Message> messagesByRandomIds2;
                        MessageObject lower_id4 = (MessageObject) arrayList.get(sendResult);
                        if (lower_id4.getId() > 0) {
                            if (!lower_id4.needDrawBluredPreview()) {
                                if (canSendStickers2 || !(lower_id4.isSticker() || lower_id4.isGif() || lower_id4.isGame())) {
                                    boolean toMyself;
                                    ArrayList<Message> arr4;
                                    ArrayList<MessageObject> objArr4;
                                    MessageFwdHeader messageFwdHeader;
                                    LongSparseArray<Long> groupsMap3;
                                    LongSparseArray<Message> messagesByRandomIds3;
                                    Peer to_id3;
                                    int i;
                                    InputPeer inputPeer4;
                                    if (canSendMedia2) {
                                        toMyself = canSendPreview;
                                    } else {
                                        toMyself = canSendPreview;
                                        if ((lower_id4.messageOwner.media instanceof TL_messageMediaPhoto) || (lower_id4.messageOwner.media instanceof TL_messageMediaDocument)) {
                                            if (sendResult2 == 0) {
                                                sendResult2 = 2;
                                                groupsMap2 = groupsMap;
                                                inputPeer3 = inputPeer2;
                                                to_id2 = to_id;
                                                myId2 = myId;
                                                lower_id3 = lower_id2;
                                                canSendPreview = toMyself;
                                            } else {
                                                arr3 = arr2;
                                                groupsMap2 = groupsMap;
                                                objArr3 = objArr2;
                                                randomIds2 = randomIds;
                                                ids4 = ids3;
                                                inputPeer3 = inputPeer2;
                                                messagesByRandomIds2 = messagesByRandomIds;
                                                to_id2 = to_id;
                                                myId2 = myId;
                                                lower_id3 = lower_id2;
                                                canSendPreview = toMyself;
                                                myId = sendResult;
                                            }
                                        }
                                    }
                                    boolean groupedIdChanged = false;
                                    Message newMsg = new TL_message();
                                    ArrayList<Integer> ids5 = ids3;
                                    InputPeer inputPeer5 = inputPeer2;
                                    boolean z = lower_id4.getDialogId() == ((long) myId) && lower_id4.messageOwner.from_id == UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                    boolean forwardFromSaved = z;
                                    if (lower_id4.isForwarded()) {
                                        newMsg.fwd_from = new TL_messageFwdHeader();
                                        newMsg.fwd_from.flags = lower_id4.messageOwner.fwd_from.flags;
                                        newMsg.fwd_from.from_id = lower_id4.messageOwner.fwd_from.from_id;
                                        newMsg.fwd_from.date = lower_id4.messageOwner.fwd_from.date;
                                        newMsg.fwd_from.channel_id = lower_id4.messageOwner.fwd_from.channel_id;
                                        newMsg.fwd_from.channel_post = lower_id4.messageOwner.fwd_from.channel_post;
                                        newMsg.fwd_from.post_author = lower_id4.messageOwner.fwd_from.post_author;
                                        newMsg.flags = 4;
                                        arr4 = arr2;
                                        objArr4 = objArr2;
                                    } else if (forwardFromSaved) {
                                        arr4 = arr2;
                                        objArr4 = objArr2;
                                    } else {
                                        newMsg.fwd_from = new TL_messageFwdHeader();
                                        newMsg.fwd_from.channel_post = lower_id4.getId();
                                        MessageFwdHeader messageFwdHeader2 = newMsg.fwd_from;
                                        messageFwdHeader2.flags |= 4;
                                        if (lower_id4.isFromUser()) {
                                            newMsg.fwd_from.from_id = lower_id4.messageOwner.from_id;
                                            messageFwdHeader2 = newMsg.fwd_from;
                                            messageFwdHeader2.flags |= 1;
                                        } else {
                                            newMsg.fwd_from.channel_id = lower_id4.messageOwner.to_id.channel_id;
                                            messageFwdHeader2 = newMsg.fwd_from;
                                            messageFwdHeader2.flags |= 2;
                                            if (lower_id4.messageOwner.post && lower_id4.messageOwner.from_id > 0) {
                                                newMsg.fwd_from.from_id = lower_id4.messageOwner.from_id;
                                                messageFwdHeader2 = newMsg.fwd_from;
                                                messageFwdHeader2.flags |= 1;
                                            }
                                        }
                                        if (lower_id4.messageOwner.post_author != null) {
                                            newMsg.fwd_from.post_author = lower_id4.messageOwner.post_author;
                                            messageFwdHeader2 = newMsg.fwd_from;
                                            messageFwdHeader2.flags |= 8;
                                            arr4 = arr2;
                                            objArr4 = objArr2;
                                        } else {
                                            if (!lower_id4.isOutOwner() && lower_id4.messageOwner.from_id > 0 && lower_id4.messageOwner.post) {
                                                User signUser = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getUser(Integer.valueOf(lower_id4.messageOwner.from_id));
                                                if (signUser != null) {
                                                    arr4 = arr2;
                                                    objArr4 = objArr2;
                                                    newMsg.fwd_from.post_author = ContactsController.formatName(signUser.first_name, signUser.last_name);
                                                    messageFwdHeader = newMsg.fwd_from;
                                                    messageFwdHeader.flags |= 8;
                                                }
                                            }
                                            arr4 = arr2;
                                            objArr4 = objArr2;
                                        }
                                        newMsg.date = lower_id4.messageOwner.date;
                                        newMsg.flags = 4;
                                    }
                                    if (j2 == ((long) myId) && newMsg.fwd_from != null) {
                                        messageFwdHeader = newMsg.fwd_from;
                                        messageFwdHeader.flags |= 16;
                                        newMsg.fwd_from.saved_from_msg_id = lower_id4.getId();
                                        newMsg.fwd_from.saved_from_peer = lower_id4.messageOwner.to_id;
                                    }
                                    if (canSendPreview2 || !(lower_id4.messageOwner.media instanceof TL_messageMediaWebPage)) {
                                        newMsg.media = lower_id4.messageOwner.media;
                                    } else {
                                        newMsg.media = new TL_messageMediaEmpty();
                                    }
                                    if (newMsg.media != null) {
                                        newMsg.flags |= 512;
                                    }
                                    if (isMegagroup2) {
                                        newMsg.flags |= Integer.MIN_VALUE;
                                    }
                                    if (lower_id4.messageOwner.via_bot_id != 0) {
                                        newMsg.via_bot_id = lower_id4.messageOwner.via_bot_id;
                                        newMsg.flags |= 2048;
                                    }
                                    newMsg.message = lower_id4.messageOwner.message;
                                    newMsg.fwd_msg_id = lower_id4.getId();
                                    newMsg.attachPath = lower_id4.messageOwner.attachPath;
                                    newMsg.entities = lower_id4.messageOwner.entities;
                                    if (!newMsg.entities.isEmpty()) {
                                        newMsg.flags |= 128;
                                    }
                                    if (newMsg.attachPath == null) {
                                        newMsg.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    a = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getNewMessageId();
                                    newMsg.id = a;
                                    newMsg.local_id = a;
                                    newMsg.out = true;
                                    long j3 = lower_id4.messageOwner.grouped_id;
                                    long lastGroupedId = j3;
                                    if (j3 != 0) {
                                        Long gId = (Long) groupsMap.get(lower_id4.messageOwner.grouped_id);
                                        if (gId == null) {
                                            gId = Long.valueOf(Utilities.random.nextLong());
                                            groupsMap.put(lower_id4.messageOwner.grouped_id, gId);
                                        }
                                        newMsg.grouped_id = gId.longValue();
                                        newMsg.flags |= 131072;
                                    }
                                    if (sendResult != messages.size() - 1) {
                                        MessageObject next = (MessageObject) arrayList.get(sendResult + 1);
                                        groupsMap3 = groupsMap;
                                        if (next.messageOwner.grouped_id != lower_id4.messageOwner.grouped_id) {
                                            groupedIdChanged = true;
                                        }
                                    } else {
                                        groupsMap3 = groupsMap;
                                    }
                                    if (to_id.channel_id == 0 || isMegagroup2) {
                                        newMsg.from_id = UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId();
                                        newMsg.flags |= 256;
                                    } else {
                                        newMsg.from_id = isSignature2 ? UserConfig.getInstance(sendMessagesHelper2.currentAccount).getClientUserId() : -to_id.channel_id;
                                        newMsg.post = true;
                                    }
                                    if (newMsg.random_id == 0) {
                                        newMsg.random_id = getNextRandomId();
                                    }
                                    randomIds.add(Long.valueOf(newMsg.random_id));
                                    messagesByRandomIds.put(newMsg.random_id, newMsg);
                                    ArrayList<Integer> ids6 = ids5;
                                    ids6.add(Integer.valueOf(newMsg.fwd_msg_id));
                                    newMsg.date = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount).getCurrentTime();
                                    InputPeer inputPeer6 = inputPeer5;
                                    if (!(inputPeer6 instanceof TL_inputPeerChannel)) {
                                        if ((lower_id4.messageOwner.flags & 1024) != 0) {
                                            newMsg.views = lower_id4.messageOwner.views;
                                            newMsg.flags |= 1024;
                                        }
                                        newMsg.unread = true;
                                    } else if (isMegagroup2) {
                                        newMsg.unread = true;
                                    } else {
                                        newMsg.views = 1;
                                        newMsg.flags |= 1024;
                                    }
                                    newMsg.dialog_id = j2;
                                    newMsg.to_id = to_id;
                                    if (MessageObject.isVoiceMessage(newMsg) || MessageObject.isRoundVideoMessage(newMsg)) {
                                        newMsg.media_unread = true;
                                    }
                                    if (lower_id4.messageOwner.to_id instanceof TL_peerChannel) {
                                        newMsg.ttl = -lower_id4.messageOwner.to_id.channel_id;
                                    }
                                    MessageObject newMsgObj = new MessageObject(sendMessagesHelper2.currentAccount, newMsg, true);
                                    newMsgObj.messageOwner.send_state = 1;
                                    ArrayList<MessageObject> objArr5 = objArr4;
                                    objArr5.add(newMsgObj);
                                    final ArrayList<Message> inputPeer7 = arr4;
                                    inputPeer7.add(newMsg);
                                    sendMessagesHelper2.putToSendingMessages(newMsg);
                                    MessageObject newMsgObj2;
                                    Message newMsg2;
                                    if (BuildVars.LOGS_ENABLED) {
                                        newMsgObj2 = newMsgObj;
                                        StringBuilder stringBuilder = new StringBuilder();
                                        newMsg2 = newMsg;
                                        stringBuilder.append("forward message user_id = ");
                                        stringBuilder.append(inputPeer6.user_id);
                                        stringBuilder.append(" chat_id = ");
                                        stringBuilder.append(inputPeer6.chat_id);
                                        stringBuilder.append(" channel_id = ");
                                        stringBuilder.append(inputPeer6.channel_id);
                                        stringBuilder.append(" access_hash = ");
                                        messagesByRandomIds3 = messagesByRandomIds;
                                        to_id3 = to_id;
                                        stringBuilder.append(inputPeer6.access_hash);
                                        FileLog.m0d(stringBuilder.toString());
                                    } else {
                                        newMsgObj2 = newMsgObj;
                                        newMsg2 = newMsg;
                                        messagesByRandomIds3 = messagesByRandomIds;
                                        to_id3 = to_id;
                                    }
                                    if (!((groupedIdChanged && inputPeer7.size() > 0) || inputPeer7.size() == 100 || sendResult == messages.size() - 1)) {
                                        if (sendResult == messages.size() - 1 || ((MessageObject) arrayList.get(sendResult + 1)).getDialogId() == lower_id4.getDialogId()) {
                                            inputPeer3 = inputPeer6;
                                            ids4 = ids6;
                                            randomIds2 = randomIds;
                                            arr3 = inputPeer7;
                                            myId2 = myId;
                                            lower_id3 = lower_id2;
                                            canSendPreview = toMyself;
                                            groupsMap2 = groupsMap3;
                                            to_id2 = to_id3;
                                            messagesByRandomIds2 = messagesByRandomIds3;
                                            myId = sendResult;
                                            objArr3 = objArr5;
                                        }
                                    }
                                    MessagesStorage.getInstance(sendMessagesHelper2.currentAccount).putMessages(new ArrayList(inputPeer7), false, true, false, 0);
                                    MessagesController.getInstance(sendMessagesHelper2.currentAccount).updateInterfaceWithMessages(j2, objArr5);
                                    NotificationCenter.getInstance(sendMessagesHelper2.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                    UserConfig.getInstance(sendMessagesHelper2.currentAccount).saveConfig(false);
                                    TL_messages_forwardMessages req = new TL_messages_forwardMessages();
                                    req.to_peer = inputPeer6;
                                    req.grouped = lastGroupedId != 0;
                                    if (req.to_peer instanceof TL_inputPeerChannel) {
                                        SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper2.currentAccount);
                                        StringBuilder stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append("silent_");
                                        stringBuilder2.append(j2);
                                        req.silent = notificationsSettings.getBoolean(stringBuilder2.toString(), false);
                                    }
                                    if (lower_id4.messageOwner.to_id instanceof TL_peerChannel) {
                                        Chat chat2 = MessagesController.getInstance(sendMessagesHelper2.currentAccount).getChat(Integer.valueOf(lower_id4.messageOwner.to_id.channel_id));
                                        req.from_peer = new TL_inputPeerChannel();
                                        req.from_peer.channel_id = lower_id4.messageOwner.to_id.channel_id;
                                        if (chat2 != null) {
                                            i = sendResult;
                                            inputPeer4 = inputPeer6;
                                            req.from_peer.access_hash = chat2.access_hash;
                                        } else {
                                            i = sendResult;
                                            inputPeer4 = inputPeer6;
                                        }
                                    } else {
                                        i = sendResult;
                                        inputPeer4 = inputPeer6;
                                        req.from_peer = new TL_inputPeerEmpty();
                                    }
                                    req.random_id = randomIds;
                                    req.id = ids6;
                                    boolean z2 = messages.size() == 1 && ((MessageObject) arrayList.get(0)).messageOwner.with_my_score;
                                    req.with_my_score = z2;
                                    inputPeer3 = inputPeer4;
                                    messagesByRandomIds2 = messagesByRandomIds3;
                                    final ArrayList<MessageObject> newMsgArr = objArr5;
                                    int i2 = 1;
                                    ids4 = ids6;
                                    ArrayList<MessageObject> objArr6 = objArr5;
                                    final LongSparseArray<Message> messagesByRandomIdsFinal = messagesByRandomIds2;
                                    randomIds2 = randomIds;
                                    canSendMedia = isMegagroup2;
                                    myId2 = myId;
                                    myId = i;
                                    arr3 = inputPeer7;
                                    SendMessagesHelper sendMessagesHelper3 = sendMessagesHelper2;
                                    RequestDelegate requestDelegate = r0;
                                    groupsMap2 = groupsMap3;
                                    objArr3 = objArr6;
                                    final long j4 = j2;
                                    ConnectionsManager instance = ConnectionsManager.getInstance(sendMessagesHelper2.currentAccount);
                                    to_id2 = to_id3;
                                    to_id = to_id2;
                                    int lower_id5 = lower_id2;
                                    lower_id = req;
                                    lower_id3 = lower_id5;
                                    TL_messages_forwardMessages req2 = req;
                                    canSendPreview = toMyself;
                                    C18215 c18215 = new RequestDelegate() {
                                        public void run(TLObject response, TL_error error) {
                                            int a;
                                            int index;
                                            C18215 c18215 = this;
                                            final TL_error tL_error = error;
                                            if (tL_error == null) {
                                                boolean z;
                                                SparseLongArray newMessagesByIds = new SparseLongArray();
                                                Updates updates = (Updates) response;
                                                a = 0;
                                                while (true) {
                                                    z = true;
                                                    if (a >= updates.updates.size()) {
                                                        break;
                                                    }
                                                    Update update = (Update) updates.updates.get(a);
                                                    if (update instanceof TL_updateMessageID) {
                                                        TL_updateMessageID updateMessageID = (TL_updateMessageID) update;
                                                        newMessagesByIds.put(updateMessageID.id, updateMessageID.random_id);
                                                        updates.updates.remove(a);
                                                        a--;
                                                    }
                                                    a++;
                                                }
                                                Integer value = (Integer) MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.get(Long.valueOf(j4));
                                                if (value == null) {
                                                    value = Integer.valueOf(MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getDialogReadMax(true, j4));
                                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.put(Long.valueOf(j4), value);
                                                }
                                                Integer value2 = value;
                                                int sentCount = 0;
                                                a = 0;
                                                while (a < updates.updates.size()) {
                                                    int a2;
                                                    SparseLongArray newMessagesByIds2;
                                                    Message message;
                                                    Update update2 = (Update) updates.updates.get(a);
                                                    if (!(update2 instanceof TL_updateNewMessage)) {
                                                        if (!(update2 instanceof TL_updateNewChannelMessage)) {
                                                            a2 = a;
                                                            newMessagesByIds2 = newMessagesByIds;
                                                            z = true;
                                                            a = a2 + 1;
                                                            newMessagesByIds = newMessagesByIds2;
                                                        }
                                                    }
                                                    updates.updates.remove(a);
                                                    a2 = a - 1;
                                                    if (update2 instanceof TL_updateNewMessage) {
                                                        TL_updateNewMessage updateNewMessage = (TL_updateNewMessage) update2;
                                                        message = updateNewMessage.message;
                                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, updateNewMessage.pts, -1, updateNewMessage.pts_count);
                                                    } else {
                                                        TL_updateNewChannelMessage updateNewChannelMessage = (TL_updateNewChannelMessage) update2;
                                                        message = updateNewChannelMessage.message;
                                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewChannelDifferenceParams(updateNewChannelMessage.pts, updateNewChannelMessage.pts_count, message.to_id.channel_id);
                                                        if (canSendMedia) {
                                                            message.flags |= Integer.MIN_VALUE;
                                                        }
                                                    }
                                                    Message message2 = message;
                                                    ImageLoader.saveMessageThumbs(message2);
                                                    message2.unread = value2.intValue() < message2.id ? z : false;
                                                    if (canSendPreview) {
                                                        message2.out = z;
                                                        message2.unread = false;
                                                        message2.media_unread = false;
                                                    }
                                                    long random_id = newMessagesByIds.get(message2.id);
                                                    if (random_id != 0) {
                                                        message = (Message) messagesByRandomIdsFinal.get(random_id);
                                                        if (message != null) {
                                                            index = inputPeer7.indexOf(message);
                                                            if (index != -1) {
                                                                MessageObject msgObj = (MessageObject) newMsgArr.get(index);
                                                                inputPeer7.remove(index);
                                                                newMsgArr.remove(index);
                                                                int oldId = message.id;
                                                                ArrayList<Message> sentMessages = new ArrayList();
                                                                sentMessages.add(message2);
                                                                ArrayList<Message> sentMessages2 = sentMessages;
                                                                message.id = message2.id;
                                                                int sentCount2 = sentCount + 1;
                                                                SendMessagesHelper.this.updateMediaPaths(msgObj, message2, null, 1);
                                                                final Message message3 = message;
                                                                final int i = oldId;
                                                                newMessagesByIds2 = newMessagesByIds;
                                                                C05031 c05031 = r0;
                                                                final ArrayList<Message> arrayList = sentMessages2;
                                                                DispatchQueue storageQueue = MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue();
                                                                final Message message4 = message2;
                                                                C05031 c050312 = new Runnable() {

                                                                    /* renamed from: org.telegram.messenger.SendMessagesHelper$5$1$1 */
                                                                    class C05021 implements Runnable {
                                                                        C05021() {
                                                                        }

                                                                        public void run() {
                                                                            message3.send_state = 0;
                                                                            DataQuery.getInstance(SendMessagesHelper.this.currentAccount).increasePeerRaiting(j4);
                                                                            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(i), Integer.valueOf(message4.id), message4, Long.valueOf(j4));
                                                                            SendMessagesHelper.this.processSentMessage(i);
                                                                            SendMessagesHelper.this.removeFromSendingMessages(i);
                                                                        }
                                                                    }

                                                                    public void run() {
                                                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).updateMessageStateAndId(message3.random_id, Integer.valueOf(i), message3.id, 0, false, to_id.channel_id);
                                                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, true, false, false, 0);
                                                                        AndroidUtilities.runOnUIThread(new C05021());
                                                                    }
                                                                };
                                                                storageQueue.postRunnable(c05031);
                                                                sentCount = sentCount2;
                                                            }
                                                        }
                                                        newMessagesByIds2 = newMessagesByIds;
                                                    } else {
                                                        newMessagesByIds2 = newMessagesByIds;
                                                    }
                                                    z = true;
                                                    a = a2 + 1;
                                                    newMessagesByIds = newMessagesByIds2;
                                                }
                                                if (updates.updates.isEmpty()) {
                                                    index = false;
                                                } else {
                                                    index = false;
                                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates(updates, false);
                                                }
                                                StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, sentCount);
                                            } else {
                                                index = false;
                                                AndroidUtilities.runOnUIThread(new Runnable() {
                                                    public void run() {
                                                        AlertsCreator.processError(SendMessagesHelper.this.currentAccount, tL_error, null, lower_id, new Object[0]);
                                                    }
                                                });
                                            }
                                            while (true) {
                                                a = index;
                                                if (a < inputPeer7.size()) {
                                                    final Message newMsgObj = (Message) inputPeer7.get(a);
                                                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(newMsgObj);
                                                    AndroidUtilities.runOnUIThread(new Runnable() {
                                                        public void run() {
                                                            newMsgObj.send_state = 2;
                                                            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsgObj.id));
                                                            SendMessagesHelper.this.processSentMessage(newMsgObj.id);
                                                            SendMessagesHelper.this.removeFromSendingMessages(newMsgObj.id);
                                                        }
                                                    });
                                                    index = a + 1;
                                                } else {
                                                    return;
                                                }
                                            }
                                        }
                                    };
                                    instance.sendRequest(req2, requestDelegate, 68);
                                    if (myId != messages.size() - 1) {
                                        objArr2 = new ArrayList();
                                        arr2 = new ArrayList();
                                        sendResult = new ArrayList();
                                        groupsMap = new ArrayList();
                                        messagesByRandomIds = new LongSparseArray();
                                        randomIds = sendResult;
                                        ids3 = groupsMap;
                                        sendResult = myId + 1;
                                        inputPeer2 = inputPeer3;
                                        groupsMap = groupsMap2;
                                        to_id = to_id2;
                                        myId = myId2;
                                        lower_id = lower_id3;
                                        sendMessagesHelper2 = this;
                                        j2 = peer;
                                    }
                                } else if (sendResult2 == 0) {
                                    sendResult2 = 1;
                                    groupsMap2 = groupsMap;
                                    inputPeer3 = inputPeer2;
                                    to_id2 = to_id;
                                    myId2 = myId;
                                    lower_id3 = lower_id2;
                                }
                                myId = sendResult;
                                sendResult = myId + 1;
                                inputPeer2 = inputPeer3;
                                groupsMap = groupsMap2;
                                to_id = to_id2;
                                myId = myId2;
                                lower_id = lower_id3;
                                sendMessagesHelper2 = this;
                                j2 = peer;
                            }
                            arr3 = arr2;
                            groupsMap2 = groupsMap;
                            objArr3 = objArr2;
                            randomIds2 = randomIds;
                            ids4 = ids3;
                            inputPeer3 = inputPeer2;
                            messagesByRandomIds2 = messagesByRandomIds;
                            to_id2 = to_id;
                            myId2 = myId;
                            lower_id3 = lower_id2;
                            myId = sendResult;
                        } else {
                            arr3 = arr2;
                            groupsMap2 = groupsMap;
                            objArr3 = objArr2;
                            randomIds2 = randomIds;
                            ids4 = ids3;
                            inputPeer3 = inputPeer2;
                            messagesByRandomIds2 = messagesByRandomIds;
                            to_id2 = to_id;
                            myId2 = myId;
                            lower_id3 = lower_id2;
                            myId = sendResult;
                        }
                        messagesByRandomIds = messagesByRandomIds2;
                        ids3 = ids4;
                        randomIds = randomIds2;
                        arr2 = arr3;
                        objArr2 = objArr3;
                        sendResult = myId + 1;
                        inputPeer2 = inputPeer3;
                        groupsMap = groupsMap2;
                        to_id = to_id2;
                        myId = myId2;
                        lower_id = lower_id3;
                        sendMessagesHelper2 = this;
                        j2 = peer;
                    }
                    sendResult = sendResult2;
                }
                sendMessagesHelper = this;
                j = peer;
                return sendResult;
            }
        }
        sendMessagesHelper = sendMessagesHelper2;
        j = j2;
        return 0;
    }

    public int editMessage(MessageObject messageObject, String message, boolean searchLinks, final BaseFragment fragment, ArrayList<MessageEntity> entities, final Runnable callback) {
        if (!(fragment == null || fragment.getParentActivity() == null)) {
            if (callback != null) {
                final TL_messages_editMessage req = new TL_messages_editMessage();
                req.peer = MessagesController.getInstance(this.currentAccount).getInputPeer((int) messageObject.getDialogId());
                req.message = message;
                req.flags |= 2048;
                req.id = messageObject.getId();
                req.no_webpage = searchLinks ^ 1;
                if (entities != null) {
                    req.entities = entities;
                    req.flags |= 8;
                }
                return ConnectionsManager.getInstance(this.currentAccount).sendRequest(req, new RequestDelegate() {

                    /* renamed from: org.telegram.messenger.SendMessagesHelper$6$1 */
                    class C05061 implements Runnable {
                        C05061() {
                        }

                        public void run() {
                            callback.run();
                        }
                    }

                    public void run(TLObject response, final TL_error error) {
                        AndroidUtilities.runOnUIThread(new C05061());
                        if (error == null) {
                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates((Updates) response, false);
                        } else {
                            AndroidUtilities.runOnUIThread(new Runnable() {
                                public void run() {
                                    AlertsCreator.processError(SendMessagesHelper.this.currentAccount, error, fragment, req, new Object[0]);
                                }
                            });
                        }
                    }
                });
            }
        }
        return 0;
    }

    private void sendLocation(Location location) {
        MessageMedia mediaGeo = new TL_messageMediaGeo();
        mediaGeo.geo = new TL_geoPoint();
        mediaGeo.geo.lat = location.getLatitude();
        mediaGeo.geo._long = location.getLongitude();
        for (Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject messageObject = (MessageObject) entry.getValue();
            sendMessage(mediaGeo, messageObject.getDialogId(), messageObject, null, null);
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, KeyboardButton button) {
        if (messageObject != null) {
            if (button != null) {
                String key = new StringBuilder();
                key.append(messageObject.getDialogId());
                key.append("_");
                key.append(messageObject.getId());
                key.append("_");
                key.append(Utilities.bytesToHex(button.data));
                key.append("_");
                key.append(button instanceof TL_keyboardButtonGame ? "1" : "0");
                this.waitingForLocation.put(key.toString(), messageObject);
                this.locationProvider.start();
            }
        }
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, KeyboardButton button) {
        if (messageObject != null) {
            if (button != null) {
                String key = new StringBuilder();
                key.append(messageObject.getDialogId());
                key.append("_");
                key.append(messageObject.getId());
                key.append("_");
                key.append(Utilities.bytesToHex(button.data));
                key.append("_");
                key.append(button instanceof TL_keyboardButtonGame ? "1" : "0");
                return this.waitingForLocation.containsKey(key.toString());
            }
        }
        return false;
    }

    public void sendNotificationCallback(long dialogId, int msgId, byte[] data) {
        final long j = dialogId;
        final int i = msgId;
        final byte[] bArr = data;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public void run() {
                int lowerId = (int) j;
                String key = new StringBuilder();
                key.append(j);
                key.append("_");
                key.append(i);
                key.append("_");
                key.append(Utilities.bytesToHex(bArr));
                key.append("_");
                key.append(0);
                key = key.toString();
                SendMessagesHelper.this.waitingForCallback.put(key, Boolean.valueOf(true));
                if (lowerId > 0) {
                    if (MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getUser(Integer.valueOf(lowerId)) == null) {
                        User user = MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getUserSync(lowerId);
                        if (user != null) {
                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putUser(user, true);
                        }
                    }
                } else if (MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getChat(Integer.valueOf(-lowerId)) == null) {
                    Chat chat = MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getChatSync(-lowerId);
                    if (chat != null) {
                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putChat(chat, true);
                    }
                }
                TL_messages_getBotCallbackAnswer req = new TL_messages_getBotCallbackAnswer();
                req.peer = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getInputPeer(lowerId);
                req.msg_id = i;
                req.game = false;
                if (bArr != null) {
                    req.flags |= 1;
                    req.data = bArr;
                }
                ConnectionsManager.getInstance(SendMessagesHelper.this.currentAccount).sendRequest(req, new RequestDelegate() {

                    /* renamed from: org.telegram.messenger.SendMessagesHelper$7$1$1 */
                    class C05081 implements Runnable {
                        C05081() {
                        }

                        public void run() {
                            SendMessagesHelper.this.waitingForCallback.remove(key);
                        }
                    }

                    public void run(TLObject response, TL_error error) {
                        AndroidUtilities.runOnUIThread(new C05081());
                    }
                }, 2);
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).markDialogAsRead(j, i, i, 0, false, 0, true);
            }
        });
    }

    public void sendCallback(boolean cache, MessageObject messageObject, KeyboardButton button, ChatActivity parentFragment) {
        SendMessagesHelper sendMessagesHelper = this;
        MessageObject messageObject2 = messageObject;
        KeyboardButton keyboardButton = button;
        if (!(messageObject2 == null || keyboardButton == null)) {
            if (parentFragment != null) {
                boolean cacheFinal;
                int type;
                if (keyboardButton instanceof TL_keyboardButtonGame) {
                    cacheFinal = false;
                    type = 1;
                } else {
                    cacheFinal = cache;
                    if (keyboardButton instanceof TL_keyboardButtonBuy) {
                        type = 2;
                    } else {
                        type = 0;
                    }
                }
                boolean cacheFinal2 = cacheFinal;
                int type2 = type;
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(messageObject.getDialogId());
                stringBuilder.append("_");
                stringBuilder.append(messageObject.getId());
                stringBuilder.append("_");
                stringBuilder.append(Utilities.bytesToHex(keyboardButton.data));
                stringBuilder.append("_");
                stringBuilder.append(type2);
                String key = stringBuilder.toString();
                sendMessagesHelper.waitingForCallback.put(key, Boolean.valueOf(true));
                final String str = key;
                final boolean z = cacheFinal2;
                final MessageObject messageObject3 = messageObject2;
                final KeyboardButton keyboardButton2 = keyboardButton;
                final ChatActivity chatActivity = parentFragment;
                C18248 requestDelegate = new RequestDelegate() {
                    public void run(final TLObject response, TL_error error) {
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public void run() {
                                SendMessagesHelper.this.waitingForCallback.remove(str);
                                if (z && response == null) {
                                    SendMessagesHelper.this.sendCallback(false, messageObject3, keyboardButton2, chatActivity);
                                } else if (response != null) {
                                    if (!(keyboardButton2 instanceof TL_keyboardButtonBuy)) {
                                        TL_messages_botCallbackAnswer res = response;
                                        if (!(z || res.cache_time == 0)) {
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).saveBotCache(str, res);
                                        }
                                        TL_game game = null;
                                        if (res.message != null) {
                                            if (!res.alert) {
                                                int uid = messageObject3.messageOwner.from_id;
                                                if (messageObject3.messageOwner.via_bot_id != 0) {
                                                    uid = messageObject3.messageOwner.via_bot_id;
                                                }
                                                String name = null;
                                                if (uid > 0) {
                                                    User user = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getUser(Integer.valueOf(uid));
                                                    if (user != null) {
                                                        name = ContactsController.formatName(user.first_name, user.last_name);
                                                    }
                                                } else {
                                                    Chat chat = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getChat(Integer.valueOf(-uid));
                                                    if (chat != null) {
                                                        name = chat.title;
                                                    }
                                                }
                                                if (name == null) {
                                                    name = "bot";
                                                }
                                                chatActivity.showAlert(name, res.message);
                                            } else if (chatActivity.getParentActivity() != null) {
                                                Builder builder = new Builder(chatActivity.getParentActivity());
                                                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                                                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
                                                builder.setMessage(res.message);
                                                chatActivity.showDialog(builder.create());
                                            }
                                        } else if (res.url != null && chatActivity.getParentActivity() != null) {
                                            int uid2 = messageObject3.messageOwner.from_id;
                                            if (messageObject3.messageOwner.via_bot_id != 0) {
                                                uid2 = messageObject3.messageOwner.via_bot_id;
                                            }
                                            User user2 = MessagesController.getInstance(SendMessagesHelper.this.currentAccount).getUser(Integer.valueOf(uid2));
                                            boolean z = user2 != null && user2.verified;
                                            boolean verified = z;
                                            if (keyboardButton2 instanceof TL_keyboardButtonGame) {
                                                if (messageObject3.messageOwner.media instanceof TL_messageMediaGame) {
                                                    game = messageObject3.messageOwner.media.game;
                                                }
                                                if (game != null) {
                                                    boolean z2;
                                                    ChatActivity chatActivity = chatActivity;
                                                    MessageObject messageObject = messageObject3;
                                                    String str = res.url;
                                                    if (!verified) {
                                                        SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(SendMessagesHelper.this.currentAccount);
                                                        StringBuilder stringBuilder = new StringBuilder();
                                                        stringBuilder.append("askgame_");
                                                        stringBuilder.append(uid2);
                                                        if (notificationsSettings.getBoolean(stringBuilder.toString(), true)) {
                                                            z2 = true;
                                                            chatActivity.showOpenGameAlert(game, messageObject, str, z2, uid2);
                                                        }
                                                    }
                                                    z2 = false;
                                                    chatActivity.showOpenGameAlert(game, messageObject, str, z2, uid2);
                                                } else {
                                                    return;
                                                }
                                            }
                                            chatActivity.showOpenUrlAlert(res.url, false);
                                        }
                                    } else if (response instanceof TL_payments_paymentForm) {
                                        TL_payments_paymentForm form = response;
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putUsers(form.users, false);
                                        chatActivity.presentFragment(new PaymentFormActivity(form, messageObject3));
                                    } else if (response instanceof TL_payments_paymentReceipt) {
                                        chatActivity.presentFragment(new PaymentFormActivity(messageObject3, (TL_payments_paymentReceipt) response));
                                    }
                                }
                            }
                        });
                    }
                };
                if (cacheFinal2) {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).getBotCache(key, requestDelegate);
                } else if (!(keyboardButton instanceof TL_keyboardButtonBuy)) {
                    TL_messages_getBotCallbackAnswer req = new TL_messages_getBotCallbackAnswer();
                    req.peer = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputPeer((int) messageObject.getDialogId());
                    req.msg_id = messageObject.getId();
                    req.game = keyboardButton instanceof TL_keyboardButtonGame;
                    if (keyboardButton.data != null) {
                        req.flags |= 1;
                        req.data = keyboardButton.data;
                    }
                    ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).sendRequest(req, requestDelegate, 2);
                } else if ((messageObject2.messageOwner.media.flags & 4) == 0) {
                    TL_payments_getPaymentForm req2 = new TL_payments_getPaymentForm();
                    req2.msg_id = messageObject.getId();
                    ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).sendRequest(req2, requestDelegate, 2);
                } else {
                    TL_payments_getPaymentReceipt req3 = new TL_payments_getPaymentReceipt();
                    req3.msg_id = messageObject2.messageOwner.media.receipt_msg_id;
                    ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).sendRequest(req3, requestDelegate, 2);
                }
            }
        }
    }

    public boolean isSendingCallback(MessageObject messageObject, KeyboardButton button) {
        int type = 0;
        if (messageObject != null) {
            if (button != null) {
                String key;
                if (button instanceof TL_keyboardButtonGame) {
                    type = 1;
                } else if (button instanceof TL_keyboardButtonBuy) {
                    type = 2;
                } else {
                    key = new StringBuilder();
                    key.append(messageObject.getDialogId());
                    key.append("_");
                    key.append(messageObject.getId());
                    key.append("_");
                    key.append(Utilities.bytesToHex(button.data));
                    key.append("_");
                    key.append(type);
                    return this.waitingForCallback.containsKey(key.toString());
                }
                key = new StringBuilder();
                key.append(messageObject.getDialogId());
                key.append("_");
                key.append(messageObject.getId());
                key.append("_");
                key.append(Utilities.bytesToHex(button.data));
                key.append("_");
                key.append(type);
                return this.waitingForCallback.containsKey(key.toString());
            }
        }
        return false;
    }

    public void sendGame(InputPeer peer, TL_inputMediaGame game, long random_id, long taskId) {
        if (peer != null) {
            if (game != null) {
                long data;
                TL_messages_sendMedia request = new TL_messages_sendMedia();
                request.peer = peer;
                if (request.peer instanceof TL_inputPeerChannel) {
                    SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("silent_");
                    stringBuilder.append(peer.channel_id);
                    request.silent = notificationsSettings.getBoolean(stringBuilder.toString(), false);
                }
                request.random_id = random_id != 0 ? random_id : getNextRandomId();
                request.message = TtmlNode.ANONYMOUS_REGION_ID;
                request.media = game;
                if (taskId == 0) {
                    data = null;
                    try {
                        data = new NativeByteBuffer(((peer.getObjectSize() + game.getObjectSize()) + 4) + 8);
                        data.writeInt32(3);
                        data.writeInt64(random_id);
                        peer.serializeToStream(data);
                        game.serializeToStream(data);
                    } catch (Throwable e) {
                        FileLog.m3e(e);
                    }
                    data = MessagesStorage.getInstance(this.currentAccount).createPendingTask(data);
                } else {
                    data = taskId;
                }
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(request, new RequestDelegate() {
                    public void run(TLObject response, TL_error error) {
                        if (error == null) {
                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates((Updates) response, false);
                        }
                        if (data != 0) {
                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).removePendingTask(data);
                        }
                    }
                });
            }
        }
    }

    public void sendMessage(MessageObject retryMessageObject) {
        MessageObject messageObject = retryMessageObject;
        long dialogId = retryMessageObject.getDialogId();
        String str = messageObject.messageOwner.attachPath;
        ReplyMarkup replyMarkup = messageObject.messageOwner.reply_markup;
        ReplyMarkup replyMarkup2 = replyMarkup;
        sendMessage(null, null, null, null, null, null, null, null, dialogId, str, null, null, true, messageObject, null, replyMarkup2, messageObject.messageOwner.params, 0);
    }

    public void sendMessage(User user, long peer, MessageObject reply_to_msg, ReplyMarkup replyMarkup, HashMap<String, String> params) {
        sendMessage(null, null, null, null, null, user, null, null, peer, null, reply_to_msg, null, true, null, null, replyMarkup, params, 0);
    }

    public void sendMessage(TL_document document, VideoEditedInfo videoEditedInfo, String path, long peer, MessageObject reply_to_msg, String caption, ArrayList<MessageEntity> entities, ReplyMarkup replyMarkup, HashMap<String, String> params, int ttl) {
        sendMessage(null, caption, null, null, videoEditedInfo, null, document, null, peer, path, reply_to_msg, null, true, null, entities, replyMarkup, params, ttl);
    }

    public void sendMessage(String message, long peer, MessageObject reply_to_msg, WebPage webPage, boolean searchLinks, ArrayList<MessageEntity> entities, ReplyMarkup replyMarkup, HashMap<String, String> params) {
        sendMessage(message, null, null, null, null, null, null, null, peer, null, reply_to_msg, webPage, searchLinks, null, entities, replyMarkup, params, 0);
    }

    public void sendMessage(MessageMedia location, long peer, MessageObject reply_to_msg, ReplyMarkup replyMarkup, HashMap<String, String> params) {
        sendMessage(null, null, location, null, null, null, null, null, peer, null, reply_to_msg, null, true, null, null, replyMarkup, params, 0);
    }

    public void sendMessage(TL_game game, long peer, ReplyMarkup replyMarkup, HashMap<String, String> params) {
        sendMessage(null, null, null, null, null, null, null, game, peer, null, null, null, true, null, null, replyMarkup, params, 0);
    }

    public void sendMessage(TL_photo photo, String path, long peer, MessageObject reply_to_msg, String caption, ArrayList<MessageEntity> entities, ReplyMarkup replyMarkup, HashMap<String, String> params, int ttl) {
        sendMessage(null, caption, null, photo, null, null, null, null, peer, path, reply_to_msg, null, true, null, entities, replyMarkup, params, ttl);
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void sendMessage(String message, String caption, MessageMedia location, TL_photo photo, VideoEditedInfo videoEditedInfo, User user, TL_document document, TL_game game, long peer, String path, MessageObject reply_to_msg, WebPage webPage, boolean searchLinks, MessageObject retryMessageObject, ArrayList<MessageEntity> entities, ReplyMarkup replyMarkup, HashMap<String, String> params, int ttl) {
        int i;
        int high_id;
        TLObject encryptedChat;
        TLObject webPage2;
        String caption2;
        MessageMedia location2;
        TL_document document2;
        Throwable e;
        VideoEditedInfo videoEditedInfo2;
        User message2;
        InputPeer inputPeer;
        TL_document tL_document;
        String str;
        User user2;
        MessageObject messageObject;
        String str2;
        TL_photo photo2;
        int i2;
        Throwable th;
        Object[] objArr;
        VideoEditedInfo videoEditedInfo3;
        MessageMedia messageMedia;
        TL_document tL_document2;
        WebPage webPage3;
        Photo photo3;
        Message params2;
        Message newMsg;
        HashMap<String, String> hashMap;
        User user3;
        InputPeer sendToPeer;
        TL_photo tL_photo;
        TL_document tL_document3;
        ArrayList<InputUser> sendToPeers;
        int high_id2;
        int i3;
        ArrayList<InputUser> arrayList;
        HashMap<String, String> hashMap2;
        MessageObject messageObject2;
        Message message3;
        TLObject tLObject;
        TLObject tLObject2;
        String message4;
        HashMap<String, String> params3;
        InputPeer sendToPeer2;
        VideoEditedInfo videoEditedInfo4;
        int type;
        TLObject encryptedChat2;
        User user4;
        TL_document document3;
        MessageObject messageObject3;
        Object obj;
        HashMap<String, String> hashMap3;
        Object delayedMessage;
        String str3;
        HashMap<String, String> hashMap4;
        InputPeer sendToPeer3;
        String originalPath;
        HashMap originalPath2;
        HashMap<String, String> hashMap5;
        MessageMedia messageMedia2;
        Message newMsg2;
        int i4;
        TL_document caption3;
        SendMessagesHelper sendMessagesHelper = this;
        User user5 = message;
        MessageMedia messageMedia3 = location;
        TL_photo tL_photo2 = photo;
        User user6 = user;
        TL_document tL_document4 = document;
        TL_game tL_game = game;
        long j = peer;
        String str4 = path;
        MessageObject messageObject4 = reply_to_msg;
        WebPage webPage4 = webPage;
        MessageObject messageObject5 = retryMessageObject;
        ArrayList<MessageEntity> arrayList2 = entities;
        Message newMsg3 = params;
        int i5 = ttl;
        long j2 = 0;
        if (j != 0) {
            String caption4;
            NotificationCenter instance;
            int i6;
            int type2;
            String message5;
            HashMap<String, String> params4;
            TLObject sendToPeer4;
            ArrayList<InputUser> arrayList3;
            int i7;
            MessageObject messageObject6;
            WebPage webPage5;
            MessageMedia messageMedia4;
            int type3;
            String str5;
            String ve;
            String name;
            String name2;
            long j3;
            int high_id3;
            int lower_id;
            long groupId;
            boolean isFinalGroupMedia;
            long groupId2;
            long groupId3;
            ArrayList<Message> arr;
            ArrayList<MessageObject> objArr2;
            ArrayList params5;
            DelayedMessage delayedMessage2;
            ArrayList<MessageEntity> arrayList4;
            InputPeer sendToPeer5;
            StringBuilder stringBuilder;
            long j4;
            int type4;
            EncryptedChat encryptedChat3;
            HashMap<String, String> params6;
            long j5;
            InputPeer sendToPeer6;
            long newMsg4;
            InputPeer sendToPeer7;
            TL_messages_forwardMessages reqSend;
            Chat chat;
            SharedPreferences notificationsSettings;
            StringBuilder stringBuilder2;
            ArrayList<InputUser> arrayList5;
            EncryptedChat encryptedChat4;
            TL_messages_sendInlineBotResult reqSend2;
            EncryptedChat encryptedChat5;
            int count;
            DecryptedMessage reqSend3;
            TL_messages_sendBroadcast reqSend4;
            ArrayList<Long> random_ids;
            ArrayList<InputUser> sendToPeers2;
            TL_messages_sendMessage reqSend5;
            TL_messages_sendMessage tL_messages_sendMessage;
            if (user5 == null && caption == null) {
                caption4 = TtmlNode.ANONYMOUS_REGION_ID;
            } else {
                caption4 = caption;
            }
            String originalPath3 = null;
            if (newMsg3 != null && newMsg3.containsKey("originalPath")) {
                originalPath3 = (String) newMsg3.get("originalPath");
            }
            DelayedMessage delayedMessage3 = null;
            int i8 = -1;
            String originalPath4 = originalPath3;
            int lower_id2 = (int) j;
            int high_id4 = (int) (j >> 32);
            boolean isChannel = false;
            InputPeer sendToPeer8 = lower_id2 != 0 ? MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputPeer(lower_id2) : null;
            if (lower_id2 == 0) {
                TLObject encryptedChat6 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getEncryptedChat(Integer.valueOf(high_id4));
                if (encryptedChat6 == null) {
                    if (messageObject5 != null) {
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(messageObject5.messageOwner);
                        messageObject5.messageOwner.send_state = 2;
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        Object[] objArr3 = new Object[1];
                        objArr3[0] = Integer.valueOf(retryMessageObject.getId());
                        instance.postNotificationName(i6, objArr3);
                        processSentMessage(retryMessageObject.getId());
                    } else {
                        i = lower_id2;
                    }
                    return;
                }
                high_id = high_id4;
                i = lower_id2;
                encryptedChat = encryptedChat6;
            } else {
                high_id = high_id4;
                i = lower_id2;
                if (sendToPeer8 instanceof TL_inputPeerChannel) {
                    Chat chat2 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(sendToPeer8.channel_id));
                    boolean z = (chat2 == null || chat2.megagroup) ? false : true;
                    isChannel = z;
                }
                encryptedChat = null;
            }
            Message message6;
            if (messageObject5 != null) {
                try {
                    message6 = messageObject5.messageOwner;
                    try {
                        if (retryMessageObject.isForwarded()) {
                            i6 = i5;
                            webPage2 = webPage4;
                            type2 = 4;
                            caption2 = caption4;
                            location2 = location;
                            document2 = document;
                            message5 = user5;
                            params4 = newMsg3;
                            user5 = user;
                            newMsg3 = message6;
                            tL_photo2 = photo;
                        } else {
                            MessageMedia location3;
                            TL_document document4;
                            User user7;
                            TL_photo tL_photo3;
                            if (messageObject5.type == 0) {
                                if (!(messageObject5.messageOwner.media instanceof TL_messageMediaGame)) {
                                    user5 = message6.message;
                                }
                                i8 = 0;
                            } else if (messageObject5.type == 4) {
                                i8 = 1;
                                location3 = message6.media;
                                document4 = document;
                                user7 = user;
                                tL_photo3 = photo;
                                if (newMsg3 != null) {
                                    try {
                                        if (newMsg3.containsKey("query_id")) {
                                            type2 = 9;
                                            i6 = i5;
                                            webPage2 = webPage4;
                                            document2 = document4;
                                            caption2 = caption4;
                                            location2 = location3;
                                            message5 = user5;
                                            params4 = newMsg3;
                                            user5 = user7;
                                            newMsg3 = message6;
                                            tL_photo2 = tL_photo3;
                                        }
                                    } catch (Exception e2) {
                                        e = e2;
                                        videoEditedInfo2 = videoEditedInfo;
                                        message2 = user5;
                                        inputPeer = sendToPeer8;
                                        sendToPeer4 = encryptedChat;
                                        webPage2 = webPage4;
                                        tL_document = document4;
                                        str = caption4;
                                        user2 = user7;
                                        messageObject = null;
                                        type2 = i8;
                                        str2 = originalPath4;
                                        location2 = location3;
                                        photo2 = tL_photo3;
                                        arrayList3 = null;
                                        i2 = high_id;
                                        i7 = i;
                                        th = e;
                                        params4 = newMsg3;
                                        newMsg3 = message6;
                                        messageObject6 = messageObject5;
                                        FileLog.m3e(th);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                        if (messageObject != null) {
                                            messageObject.messageOwner.send_state = 2;
                                        }
                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                        i6 = NotificationCenter.messageSendError;
                                        objArr = new Object[1];
                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                        instance.postNotificationName(i6, objArr);
                                        processSentMessage(newMsg3.id);
                                        videoEditedInfo3 = videoEditedInfo2;
                                        messageMedia = location2;
                                        tL_document2 = tL_document;
                                    }
                                }
                                i6 = i5;
                                webPage2 = webPage4;
                                document2 = document4;
                                caption2 = caption4;
                                type2 = i8;
                                location2 = location3;
                                message5 = user5;
                                params4 = newMsg3;
                                user5 = user7;
                                newMsg3 = message6;
                                tL_photo2 = tL_photo3;
                            } else if (messageObject5.type == 1) {
                                i8 = 2;
                                tL_photo3 = message6.media.photo;
                                document4 = document;
                                user7 = user;
                                location3 = location;
                                if (newMsg3 != null) {
                                    if (newMsg3.containsKey("query_id")) {
                                        type2 = 9;
                                        i6 = i5;
                                        webPage2 = webPage4;
                                        document2 = document4;
                                        caption2 = caption4;
                                        location2 = location3;
                                        message5 = user5;
                                        params4 = newMsg3;
                                        user5 = user7;
                                        newMsg3 = message6;
                                        tL_photo2 = tL_photo3;
                                    }
                                }
                                i6 = i5;
                                webPage2 = webPage4;
                                document2 = document4;
                                caption2 = caption4;
                                type2 = i8;
                                location2 = location3;
                                message5 = user5;
                                params4 = newMsg3;
                                user5 = user7;
                                newMsg3 = message6;
                                tL_photo2 = tL_photo3;
                            } else {
                                TL_document tL_document5;
                                if (!(messageObject5.type == 3 || messageObject5.type == 5)) {
                                    if (videoEditedInfo == null) {
                                        if (messageObject5.type == 12) {
                                            user6 = new TL_userRequest_old2();
                                            try {
                                                user6.phone = message6.media.phone_number;
                                                user6.first_name = message6.media.first_name;
                                                user6.last_name = message6.media.last_name;
                                                user6.id = message6.media.user_id;
                                                i8 = 6;
                                                user7 = user6;
                                                document4 = document;
                                                location3 = location;
                                                tL_photo3 = photo;
                                                if (newMsg3 != null) {
                                                    if (newMsg3.containsKey("query_id")) {
                                                        type2 = 9;
                                                        i6 = i5;
                                                        webPage2 = webPage4;
                                                        document2 = document4;
                                                        caption2 = caption4;
                                                        location2 = location3;
                                                        message5 = user5;
                                                        params4 = newMsg3;
                                                        user5 = user7;
                                                        newMsg3 = message6;
                                                        tL_photo2 = tL_photo3;
                                                    }
                                                }
                                                i6 = i5;
                                                webPage2 = webPage4;
                                                document2 = document4;
                                                caption2 = caption4;
                                                type2 = i8;
                                                location2 = location3;
                                                message5 = user5;
                                                params4 = newMsg3;
                                                user5 = user7;
                                                newMsg3 = message6;
                                                tL_photo2 = tL_photo3;
                                            } catch (Exception e3) {
                                                e = e3;
                                                videoEditedInfo2 = videoEditedInfo;
                                                message2 = user5;
                                                inputPeer = sendToPeer8;
                                                user2 = user6;
                                                sendToPeer4 = encryptedChat;
                                                webPage2 = webPage4;
                                                str = caption4;
                                                messageObject = null;
                                                type2 = -1;
                                                str2 = originalPath4;
                                                arrayList3 = null;
                                                i2 = high_id;
                                                i7 = i;
                                                location2 = location;
                                                tL_document = document;
                                                th = e;
                                                params4 = newMsg3;
                                                newMsg3 = message6;
                                                messageObject6 = messageObject5;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                        if (!(messageObject5.type == 8 || messageObject5.type == 9 || messageObject5.type == 13)) {
                                            if (messageObject5.type != 14) {
                                                if (messageObject5.type == 2) {
                                                    tL_document5 = message6.media.document;
                                                    i8 = 8;
                                                    document4 = tL_document5;
                                                    user7 = user;
                                                    location3 = location;
                                                    tL_photo3 = photo;
                                                    if (newMsg3 != null) {
                                                        if (newMsg3.containsKey("query_id")) {
                                                            type2 = 9;
                                                            i6 = i5;
                                                            webPage2 = webPage4;
                                                            document2 = document4;
                                                            caption2 = caption4;
                                                            location2 = location3;
                                                            message5 = user5;
                                                            params4 = newMsg3;
                                                            user5 = user7;
                                                            newMsg3 = message6;
                                                            tL_photo2 = tL_photo3;
                                                        }
                                                    }
                                                    i6 = i5;
                                                    webPage2 = webPage4;
                                                    document2 = document4;
                                                    caption2 = caption4;
                                                    type2 = i8;
                                                    location2 = location3;
                                                    message5 = user5;
                                                    params4 = newMsg3;
                                                    user5 = user7;
                                                    newMsg3 = message6;
                                                    tL_photo2 = tL_photo3;
                                                }
                                            }
                                        }
                                        tL_document5 = (TL_document) message6.media.document;
                                        i8 = 7;
                                        document4 = tL_document5;
                                        user7 = user;
                                        location3 = location;
                                        tL_photo3 = photo;
                                        if (newMsg3 != null) {
                                            if (newMsg3.containsKey("query_id")) {
                                                type2 = 9;
                                                i6 = i5;
                                                webPage2 = webPage4;
                                                document2 = document4;
                                                caption2 = caption4;
                                                location2 = location3;
                                                message5 = user5;
                                                params4 = newMsg3;
                                                user5 = user7;
                                                newMsg3 = message6;
                                                tL_photo2 = tL_photo3;
                                            }
                                        }
                                        i6 = i5;
                                        webPage2 = webPage4;
                                        document2 = document4;
                                        caption2 = caption4;
                                        type2 = i8;
                                        location2 = location3;
                                        message5 = user5;
                                        params4 = newMsg3;
                                        user5 = user7;
                                        newMsg3 = message6;
                                        tL_photo2 = tL_photo3;
                                    }
                                }
                                i8 = 3;
                                tL_document5 = (TL_document) message6.media.document;
                                document4 = tL_document5;
                                user7 = user;
                                location3 = location;
                                tL_photo3 = photo;
                                if (newMsg3 != null) {
                                    if (newMsg3.containsKey("query_id")) {
                                        type2 = 9;
                                        i6 = i5;
                                        webPage2 = webPage4;
                                        document2 = document4;
                                        caption2 = caption4;
                                        location2 = location3;
                                        message5 = user5;
                                        params4 = newMsg3;
                                        user5 = user7;
                                        newMsg3 = message6;
                                        tL_photo2 = tL_photo3;
                                    }
                                }
                                i6 = i5;
                                webPage2 = webPage4;
                                document2 = document4;
                                caption2 = caption4;
                                type2 = i8;
                                location2 = location3;
                                message5 = user5;
                                params4 = newMsg3;
                                user5 = user7;
                                newMsg3 = message6;
                                tL_photo2 = tL_photo3;
                            }
                            document4 = document;
                            user7 = user;
                            location3 = location;
                            tL_photo3 = photo;
                            if (newMsg3 != null) {
                                if (newMsg3.containsKey("query_id")) {
                                    type2 = 9;
                                    i6 = i5;
                                    webPage2 = webPage4;
                                    document2 = document4;
                                    caption2 = caption4;
                                    location2 = location3;
                                    message5 = user5;
                                    params4 = newMsg3;
                                    user5 = user7;
                                    newMsg3 = message6;
                                    tL_photo2 = tL_photo3;
                                }
                            }
                            i6 = i5;
                            webPage2 = webPage4;
                            document2 = document4;
                            caption2 = caption4;
                            type2 = i8;
                            location2 = location3;
                            message5 = user5;
                            params4 = newMsg3;
                            user5 = user7;
                            newMsg3 = message6;
                            tL_photo2 = tL_photo3;
                        }
                    } catch (Exception e4) {
                        e = e4;
                        videoEditedInfo2 = videoEditedInfo;
                        message2 = user5;
                        sendToPeer4 = encryptedChat;
                        webPage2 = webPage4;
                        messageObject = null;
                        type2 = -1;
                        arrayList3 = null;
                        location2 = location;
                        tL_document = document;
                        th = e;
                        params4 = newMsg3;
                        newMsg3 = message6;
                        messageObject6 = messageObject5;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                        if (messageObject != null) {
                            messageObject.messageOwner.send_state = 2;
                        }
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        objArr = new Object[1];
                        objArr[0] = Integer.valueOf(newMsg3.id);
                        instance.postNotificationName(i6, objArr);
                        processSentMessage(newMsg3.id);
                        videoEditedInfo3 = videoEditedInfo2;
                        messageMedia = location2;
                        tL_document2 = tL_document;
                    }
                } catch (Exception e5) {
                    e = e5;
                    videoEditedInfo2 = videoEditedInfo;
                    message2 = user5;
                    inputPeer = sendToPeer8;
                    sendToPeer4 = encryptedChat;
                    webPage2 = webPage4;
                    messageObject6 = messageObject5;
                    str = caption4;
                    messageObject = null;
                    type2 = -1;
                    str2 = originalPath4;
                    arrayList3 = null;
                    i2 = high_id;
                    i7 = i;
                    location2 = location;
                    tL_document = document;
                    th = e;
                    params4 = newMsg3;
                    newMsg3 = null;
                    FileLog.m3e(th);
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                    if (messageObject != null) {
                        messageObject.messageOwner.send_state = 2;
                    }
                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                    i6 = NotificationCenter.messageSendError;
                    objArr = new Object[1];
                    objArr[0] = Integer.valueOf(newMsg3.id);
                    instance.postNotificationName(i6, objArr);
                    processSentMessage(newMsg3.id);
                    videoEditedInfo3 = videoEditedInfo2;
                    messageMedia = location2;
                    tL_document2 = tL_document;
                }
            }
            Message message7;
            if (user5 != null) {
                if (encryptedChat != null) {
                    message6 = new TL_message_secret();
                } else {
                    message6 = new TL_message();
                }
                if (encryptedChat != null) {
                    if (webPage4 instanceof TL_webPagePending) {
                        if (webPage4.url != null) {
                            webPage5 = new TL_webPageUrlPending();
                            webPage5.url = webPage4.url;
                        } else {
                            webPage5 = null;
                        }
                        if (webPage5 != null) {
                            try {
                                message6.media = new TL_messageMediaEmpty();
                            } catch (Throwable e6) {
                                videoEditedInfo2 = videoEditedInfo;
                                message2 = user5;
                                inputPeer = sendToPeer8;
                                webPage3 = webPage5;
                                sendToPeer4 = encryptedChat;
                                params4 = newMsg3;
                                str = caption4;
                                messageObject = null;
                                type2 = -1;
                                str2 = originalPath4;
                                arrayList3 = null;
                                i2 = high_id;
                                i7 = i;
                                location2 = location;
                                tL_document = document;
                                user2 = user;
                                photo2 = photo;
                                th = e6;
                                newMsg3 = message6;
                                messageObject6 = messageObject5;
                                FileLog.m3e(th);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                if (messageObject != null) {
                                    messageObject.messageOwner.send_state = 2;
                                }
                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                i6 = NotificationCenter.messageSendError;
                                objArr = new Object[1];
                                objArr[0] = Integer.valueOf(newMsg3.id);
                                instance.postNotificationName(i6, objArr);
                                processSentMessage(newMsg3.id);
                                videoEditedInfo3 = videoEditedInfo2;
                                messageMedia = location2;
                                tL_document2 = tL_document;
                            }
                        }
                        message6.media = new TL_messageMediaWebPage();
                        message6.media.webpage = webPage5;
                        if (newMsg3 == null && newMsg3.containsKey("query_id")) {
                            i6 = 9;
                        } else {
                            i6 = 0;
                        }
                        i8 = i6;
                        message6.message = user5;
                        message7 = message6;
                        webPage4 = webPage5;
                    }
                }
                webPage5 = webPage4;
                if (webPage5 != null) {
                    message6.media = new TL_messageMediaWebPage();
                    message6.media.webpage = webPage5;
                } else {
                    message6.media = new TL_messageMediaEmpty();
                }
                if (newMsg3 == null) {
                }
                i6 = 0;
                i8 = i6;
                message6.message = user5;
                message7 = message6;
                webPage4 = webPage5;
            } else {
                MessageMedia messageMedia5 = location;
                if (messageMedia5 != null) {
                    Message newMsg5;
                    if (encryptedChat != null) {
                        try {
                            newMsg5 = new TL_message_secret();
                        } catch (Exception e7) {
                            e6 = e7;
                            videoEditedInfo2 = videoEditedInfo;
                            message2 = user5;
                            inputPeer = sendToPeer8;
                            location2 = messageMedia5;
                            sendToPeer4 = encryptedChat;
                            webPage2 = webPage4;
                            messageObject6 = messageObject5;
                            str = caption4;
                            messageObject = null;
                            type2 = -1;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            tL_document = document;
                            th = e6;
                            params4 = newMsg3;
                            newMsg3 = null;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    }
                    newMsg5 = new TL_message();
                    try {
                        newMsg5.media = messageMedia5;
                        if (newMsg3 == null || !newMsg3.containsKey("query_id")) {
                            i8 = 1;
                        } else {
                            i8 = 9;
                        }
                        message7 = newMsg5;
                    } catch (Throwable e62) {
                        videoEditedInfo2 = videoEditedInfo;
                        message2 = user5;
                        inputPeer = sendToPeer8;
                        sendToPeer4 = encryptedChat;
                        webPage3 = webPage4;
                        str = caption4;
                        messageObject = null;
                        type2 = -1;
                        str2 = originalPath4;
                        arrayList3 = null;
                        i2 = high_id;
                        i7 = i;
                        tL_document = document;
                        user2 = user;
                        photo2 = photo;
                        th = e62;
                        params4 = newMsg3;
                        newMsg3 = newMsg5;
                        location2 = messageMedia5;
                        messageObject6 = messageObject5;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                        if (messageObject != null) {
                            messageObject.messageOwner.send_state = 2;
                        }
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        objArr = new Object[1];
                        objArr[0] = Integer.valueOf(newMsg3.id);
                        instance.postNotificationName(i6, objArr);
                        processSentMessage(newMsg3.id);
                        videoEditedInfo3 = videoEditedInfo2;
                        messageMedia = location2;
                        tL_document2 = tL_document;
                    }
                }
                Photo photo4 = photo;
                if (photo4 != null) {
                    Message newMsg6;
                    if (encryptedChat != null) {
                        try {
                            newMsg6 = new TL_message_secret();
                        } catch (Throwable e622) {
                            videoEditedInfo2 = videoEditedInfo;
                            message2 = user5;
                            inputPeer = sendToPeer8;
                            photo3 = photo4;
                            sendToPeer4 = encryptedChat;
                            webPage3 = webPage4;
                            str = caption4;
                            messageObject = null;
                            type2 = -1;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            tL_document = document;
                            user2 = user;
                            th = e622;
                            location2 = messageMedia5;
                            params4 = newMsg3;
                            messageObject6 = messageObject5;
                            newMsg3 = null;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    }
                    try {
                        newMsg6 = new TL_message();
                    } catch (Throwable e6222) {
                        videoEditedInfo2 = videoEditedInfo;
                        th = e6222;
                        inputPeer = sendToPeer8;
                        sendToPeer4 = encryptedChat;
                        webPage3 = webPage4;
                        messageObject6 = messageObject5;
                        str = caption4;
                        messageObject = null;
                        type2 = -1;
                        str2 = originalPath4;
                        arrayList3 = null;
                        i2 = high_id;
                        i7 = i;
                        location2 = location;
                        message5 = message;
                        tL_document = document;
                        user2 = user;
                        params4 = newMsg3;
                        newMsg3 = null;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                        if (messageObject != null) {
                            messageObject.messageOwner.send_state = 2;
                        }
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        objArr = new Object[1];
                        objArr[0] = Integer.valueOf(newMsg3.id);
                        instance.postNotificationName(i6, objArr);
                        processSentMessage(newMsg3.id);
                        videoEditedInfo3 = videoEditedInfo2;
                        messageMedia = location2;
                        tL_document2 = tL_document;
                    }
                    newMsg6.media = new TL_messageMediaPhoto();
                    messageMedia4 = newMsg6.media;
                    messageMedia4.flags |= 3;
                    if (arrayList2 != null) {
                        try {
                            newMsg6.entities = arrayList2;
                        } catch (Throwable e62222) {
                            videoEditedInfo2 = videoEditedInfo;
                            th = e62222;
                            inputPeer = sendToPeer8;
                            photo3 = photo4;
                            sendToPeer4 = encryptedChat;
                            webPage3 = webPage4;
                            messageObject6 = messageObject5;
                            str = caption4;
                            messageObject = null;
                            type2 = -1;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            location2 = location;
                            message5 = message;
                            tL_document = document;
                            user2 = user;
                            params4 = newMsg3;
                            newMsg3 = newMsg6;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    }
                    if (i5 != 0) {
                        newMsg6.media.ttl_seconds = i5;
                        newMsg6.ttl = i5;
                        messageMedia4 = newMsg6.media;
                        messageMedia4.flags |= 4;
                    }
                    try {
                        newMsg6.media.photo = photo4;
                        if (newMsg3 != null) {
                            if (newMsg3.containsKey("query_id")) {
                                type3 = 9;
                                i8 = type3;
                                if (str4 == null && path.length() > 0 && str4.startsWith("http")) {
                                    newMsg6.attachPath = str4;
                                } else {
                                    newMsg6.attachPath = FileLoader.getPathToAttach(((PhotoSize) photo4.sizes.get(photo4.sizes.size() - 1)).location, true).toString();
                                }
                                message7 = newMsg6;
                            }
                        }
                        type3 = 2;
                        i8 = type3;
                        if (str4 == null) {
                        }
                        newMsg6.attachPath = FileLoader.getPathToAttach(((PhotoSize) photo4.sizes.get(photo4.sizes.size() - 1)).location, true).toString();
                        message7 = newMsg6;
                    } catch (Throwable e622222) {
                        videoEditedInfo2 = videoEditedInfo;
                        th = e622222;
                        inputPeer = sendToPeer8;
                        sendToPeer4 = encryptedChat;
                        webPage3 = webPage4;
                        messageObject6 = messageObject5;
                        str = caption4;
                        messageObject = null;
                        type2 = i8;
                        str2 = originalPath4;
                        arrayList3 = null;
                        i2 = high_id;
                        i7 = i;
                        location2 = location;
                        message5 = message;
                        tL_document = document;
                        user2 = user;
                        photo2 = photo;
                        params4 = newMsg3;
                        newMsg3 = newMsg6;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                        if (messageObject != null) {
                            messageObject.messageOwner.send_state = 2;
                        }
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        objArr = new Object[1];
                        objArr[0] = Integer.valueOf(newMsg3.id);
                        instance.postNotificationName(i6, objArr);
                        processSentMessage(newMsg3.id);
                        videoEditedInfo3 = videoEditedInfo2;
                        messageMedia = location2;
                        tL_document2 = tL_document;
                    }
                } else if (tL_game != null) {
                    message7 = new TL_message();
                    try {
                        message7.media = new TL_messageMediaGame();
                        message7.media.game = tL_game;
                        if (newMsg3 != null && newMsg3.containsKey("query_id")) {
                            i8 = 9;
                        }
                    } catch (Exception e8) {
                        e622222 = e8;
                        videoEditedInfo2 = videoEditedInfo;
                        inputPeer = sendToPeer8;
                        sendToPeer4 = encryptedChat;
                        webPage3 = webPage4;
                        messageObject6 = messageObject5;
                        str = caption4;
                        messageObject = null;
                        type2 = i8;
                        arrayList3 = null;
                        location2 = location;
                        tL_document = document;
                        params2 = newMsg3;
                        newMsg3 = message7;
                        th = e622222;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                        if (messageObject != null) {
                            messageObject.messageOwner.send_state = 2;
                        }
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        objArr = new Object[1];
                        objArr[0] = Integer.valueOf(newMsg3.id);
                        instance.postNotificationName(i6, objArr);
                        processSentMessage(newMsg3.id);
                        videoEditedInfo3 = videoEditedInfo2;
                        messageMedia = location2;
                        tL_document2 = tL_document;
                    }
                } else {
                    user6 = user;
                    if (user6 != null) {
                        if (encryptedChat != null) {
                            try {
                                message7 = new TL_message_secret();
                            } catch (Throwable e6222222) {
                                videoEditedInfo2 = videoEditedInfo;
                                th = e6222222;
                                inputPeer = sendToPeer8;
                                user2 = user6;
                                sendToPeer4 = encryptedChat;
                                webPage3 = webPage4;
                                messageObject6 = messageObject5;
                                str = caption4;
                                messageObject = null;
                                type2 = -1;
                                str2 = originalPath4;
                                arrayList3 = null;
                                i2 = high_id;
                                i7 = i;
                                location2 = location;
                                message5 = message;
                                tL_document = document;
                                params4 = newMsg3;
                                newMsg3 = null;
                                FileLog.m3e(th);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                if (messageObject != null) {
                                    messageObject.messageOwner.send_state = 2;
                                }
                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                i6 = NotificationCenter.messageSendError;
                                objArr = new Object[1];
                                objArr[0] = Integer.valueOf(newMsg3.id);
                                instance.postNotificationName(i6, objArr);
                                processSentMessage(newMsg3.id);
                                videoEditedInfo3 = videoEditedInfo2;
                                messageMedia = location2;
                                tL_document2 = tL_document;
                            }
                        }
                        message7 = new TL_message();
                        try {
                            message7.media = new TL_messageMediaContact();
                            message7.media.phone_number = user6.phone;
                            message7.media.first_name = user6.first_name;
                            message7.media.last_name = user6.last_name;
                            message7.media.user_id = user6.id;
                            if (message7.media.first_name == null) {
                                messageMedia5 = message7.media;
                                str5 = TtmlNode.ANONYMOUS_REGION_ID;
                                messageMedia5.first_name = str5;
                                user6.first_name = str5;
                            }
                            if (message7.media.last_name == null) {
                                messageMedia5 = message7.media;
                                str5 = TtmlNode.ANONYMOUS_REGION_ID;
                                messageMedia5.last_name = str5;
                                user6.last_name = str5;
                            }
                            i8 = (newMsg3 == null || !newMsg3.containsKey("query_id")) ? 6 : 9;
                        } catch (Exception e9) {
                            e6222222 = e9;
                            videoEditedInfo2 = videoEditedInfo;
                            inputPeer = sendToPeer8;
                            user2 = user6;
                            sendToPeer4 = encryptedChat;
                            webPage3 = webPage4;
                            messageObject6 = messageObject5;
                            str = caption4;
                            messageObject = null;
                            type2 = -1;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            location2 = location;
                            message5 = message;
                            tL_document = document;
                            params2 = newMsg3;
                            newMsg3 = message7;
                            th = e6222222;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    }
                    i6 = i5;
                    TL_document tL_document6 = document;
                    if (tL_document6 != null) {
                        HashMap<String, String> params7;
                        DocumentAttribute attribute;
                        TL_documentAttributeSticker_layer55 attributeSticker;
                        if (encryptedChat != null) {
                            try {
                                message6 = new TL_message_secret();
                            } catch (Exception e10) {
                                e6222222 = e10;
                                videoEditedInfo2 = videoEditedInfo;
                                tL_document = tL_document6;
                                inputPeer = sendToPeer8;
                                user2 = user6;
                                sendToPeer4 = encryptedChat;
                                webPage3 = webPage4;
                                messageObject6 = messageObject5;
                                str = caption4;
                                messageObject = null;
                                type2 = -1;
                                str2 = originalPath4;
                                arrayList3 = null;
                                i2 = high_id;
                                i7 = i;
                                location2 = location;
                                message5 = message;
                                th = e6222222;
                                params4 = newMsg3;
                                newMsg3 = null;
                                FileLog.m3e(th);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                if (messageObject != null) {
                                    messageObject.messageOwner.send_state = 2;
                                }
                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                i6 = NotificationCenter.messageSendError;
                                objArr = new Object[1];
                                objArr[0] = Integer.valueOf(newMsg3.id);
                                instance.postNotificationName(i6, objArr);
                                processSentMessage(newMsg3.id);
                                videoEditedInfo3 = videoEditedInfo2;
                                messageMedia = location2;
                                tL_document2 = tL_document;
                            }
                        }
                        try {
                            message6 = new TL_message();
                        } catch (Throwable e62222222) {
                            videoEditedInfo2 = videoEditedInfo;
                            th = e62222222;
                            inputPeer = sendToPeer8;
                            sendToPeer4 = encryptedChat;
                            params4 = newMsg3;
                            messageObject6 = messageObject5;
                            newMsg3 = null;
                            str = caption4;
                            messageObject = null;
                            type2 = -1;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            location2 = location;
                            tL_document = document;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                        message6.media = new TL_messageMediaDocument();
                        MessageMedia messageMedia6 = message6.media;
                        messageMedia6.flags |= 3;
                        if (i6 != 0) {
                            try {
                                message6.media.ttl_seconds = i6;
                                message6.ttl = i6;
                                location2 = message6.media;
                                location2.flags |= 4;
                            } catch (Exception e11) {
                                e62222222 = e11;
                                videoEditedInfo2 = videoEditedInfo;
                                tL_document = tL_document6;
                                inputPeer = sendToPeer8;
                                sendToPeer4 = encryptedChat;
                                webPage3 = webPage4;
                                str = caption4;
                                messageObject = null;
                                type2 = -1;
                                str2 = originalPath4;
                                arrayList3 = null;
                                i2 = high_id;
                                i7 = i;
                                location2 = location;
                                message5 = message;
                                th = e62222222;
                                params4 = newMsg3;
                                newMsg3 = message6;
                                messageObject6 = messageObject5;
                                FileLog.m3e(th);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                if (messageObject != null) {
                                    messageObject.messageOwner.send_state = 2;
                                }
                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                i6 = NotificationCenter.messageSendError;
                                objArr = new Object[1];
                                objArr[0] = Integer.valueOf(newMsg3.id);
                                instance.postNotificationName(i6, objArr);
                                processSentMessage(newMsg3.id);
                                videoEditedInfo3 = videoEditedInfo2;
                                messageMedia = location2;
                                tL_document2 = tL_document;
                            }
                        }
                        try {
                            message6.media.document = tL_document6;
                            if (newMsg3 != null) {
                                if (newMsg3.containsKey("query_id")) {
                                    lower_id2 = 9;
                                    i8 = lower_id2;
                                    if (videoEditedInfo != null) {
                                        ve = videoEditedInfo.getString();
                                        if (newMsg3 == null) {
                                            params7 = new HashMap();
                                        }
                                        params7.put("ve", ve);
                                    }
                                    if (encryptedChat != null || tL_document6.dc_id <= 0 || MessageObject.isStickerDocument(document)) {
                                        message6.attachPath = str4;
                                    } else {
                                        message6.attachPath = FileLoader.getPathToAttach(document).toString();
                                    }
                                    if (encryptedChat != null && MessageObject.isStickerDocument(document)) {
                                        lower_id2 = 0;
                                        while (lower_id2 < tL_document6.attributes.size()) {
                                            attribute = (DocumentAttribute) tL_document6.attributes.get(lower_id2);
                                            newMsg = message6;
                                            try {
                                                if ((attribute instanceof TL_documentAttributeSticker) != null) {
                                                    tL_document6.attributes.remove(lower_id2);
                                                    attributeSticker = new TL_documentAttributeSticker_layer55();
                                                    tL_document6.attributes.add(attributeSticker);
                                                    attributeSticker.alt = attribute.alt;
                                                    if (attribute.stickerset != null) {
                                                        if (attribute.stickerset instanceof TL_inputStickerSetShortName) {
                                                            try {
                                                                name = attribute.stickerset.short_name;
                                                                hashMap = params7;
                                                            } catch (Throwable e622222222) {
                                                                videoEditedInfo2 = videoEditedInfo;
                                                                tL_document = tL_document6;
                                                                inputPeer = sendToPeer8;
                                                                sendToPeer4 = encryptedChat;
                                                                webPage3 = webPage4;
                                                                messageObject6 = messageObject5;
                                                                str = caption4;
                                                                messageObject = null;
                                                                type2 = i8;
                                                                str2 = originalPath4;
                                                                arrayList3 = null;
                                                                i2 = high_id;
                                                                i7 = i;
                                                                location2 = location;
                                                                message5 = message;
                                                                user2 = user;
                                                                photo2 = photo;
                                                                th = e622222222;
                                                                params4 = params7;
                                                                newMsg3 = newMsg;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        hashMap = params7;
                                                        try {
                                                            name = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(attribute.stickerset.id);
                                                        } catch (Throwable eNUM) {
                                                            videoEditedInfo2 = videoEditedInfo;
                                                            th = eNUM;
                                                            inputPeer = sendToPeer8;
                                                            sendToPeer4 = encryptedChat;
                                                            messageObject6 = messageObject5;
                                                            str = caption4;
                                                            messageObject = null;
                                                            type2 = i8;
                                                            str2 = originalPath4;
                                                            arrayList3 = null;
                                                            i2 = high_id;
                                                            i7 = i;
                                                            newMsg3 = newMsg;
                                                            params4 = hashMap;
                                                            location2 = location;
                                                            tL_document = document;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                        name2 = name;
                                                        if (TextUtils.isEmpty(name2)) {
                                                            attributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                        } else {
                                                            attributeSticker.stickerset = new TL_inputStickerSetShortName();
                                                            attributeSticker.stickerset.short_name = name2;
                                                        }
                                                    } else {
                                                        hashMap = params7;
                                                        attributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                    }
                                                    message7 = newMsg;
                                                    newMsg3 = hashMap;
                                                } else {
                                                    lower_id2++;
                                                    message6 = newMsg;
                                                    tL_document6 = document;
                                                    tL_game = game;
                                                    webPage4 = webPage;
                                                }
                                            } catch (Throwable e6NUM) {
                                                hashMap = params7;
                                                videoEditedInfo2 = videoEditedInfo;
                                                th = e6NUM;
                                                inputPeer = sendToPeer8;
                                                sendToPeer4 = encryptedChat;
                                                messageObject6 = messageObject5;
                                                str = caption4;
                                                messageObject = null;
                                                type2 = i8;
                                                str2 = originalPath4;
                                                arrayList3 = null;
                                                i2 = high_id;
                                                i7 = i;
                                                newMsg3 = newMsg;
                                                params4 = hashMap;
                                                location2 = location;
                                                message5 = message;
                                                tL_document = document;
                                                webPage3 = webPage;
                                                user2 = user;
                                                photo2 = photo;
                                            }
                                        }
                                    }
                                    newMsg = message6;
                                    hashMap = params7;
                                    message7 = newMsg;
                                    newMsg3 = hashMap;
                                }
                            }
                            if (!MessageObject.isVideoDocument(document)) {
                                if (!MessageObject.isRoundVideoDocument(document)) {
                                    if (videoEditedInfo == null) {
                                        if (MessageObject.isVoiceDocument(document)) {
                                            lower_id2 = 8;
                                        } else {
                                            lower_id2 = 7;
                                        }
                                        i8 = lower_id2;
                                        if (videoEditedInfo != null) {
                                            ve = videoEditedInfo.getString();
                                            if (newMsg3 == null) {
                                                params7 = new HashMap();
                                            }
                                            params7.put("ve", ve);
                                        }
                                        if (encryptedChat != null) {
                                        }
                                        message6.attachPath = str4;
                                        lower_id2 = 0;
                                        while (lower_id2 < tL_document6.attributes.size()) {
                                            attribute = (DocumentAttribute) tL_document6.attributes.get(lower_id2);
                                            newMsg = message6;
                                            if ((attribute instanceof TL_documentAttributeSticker) != null) {
                                                lower_id2++;
                                                message6 = newMsg;
                                                tL_document6 = document;
                                                tL_game = game;
                                                webPage4 = webPage;
                                            } else {
                                                tL_document6.attributes.remove(lower_id2);
                                                attributeSticker = new TL_documentAttributeSticker_layer55();
                                                tL_document6.attributes.add(attributeSticker);
                                                attributeSticker.alt = attribute.alt;
                                                if (attribute.stickerset != null) {
                                                    hashMap = params7;
                                                    attributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                } else {
                                                    if (attribute.stickerset instanceof TL_inputStickerSetShortName) {
                                                        hashMap = params7;
                                                        name = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(attribute.stickerset.id);
                                                    } else {
                                                        name = attribute.stickerset.short_name;
                                                        hashMap = params7;
                                                    }
                                                    name2 = name;
                                                    if (TextUtils.isEmpty(name2)) {
                                                        attributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                                    } else {
                                                        attributeSticker.stickerset = new TL_inputStickerSetShortName();
                                                        attributeSticker.stickerset.short_name = name2;
                                                    }
                                                }
                                                message7 = newMsg;
                                                newMsg3 = hashMap;
                                            }
                                        }
                                        newMsg = message6;
                                        hashMap = params7;
                                        message7 = newMsg;
                                        newMsg3 = hashMap;
                                    }
                                }
                            }
                            lower_id2 = 3;
                            i8 = lower_id2;
                            if (videoEditedInfo != null) {
                                ve = videoEditedInfo.getString();
                                if (newMsg3 == null) {
                                    params7 = new HashMap();
                                }
                                params7.put("ve", ve);
                            }
                            if (encryptedChat != null) {
                            }
                        } catch (Throwable e62NUM) {
                            newMsg = message6;
                            videoEditedInfo2 = videoEditedInfo;
                            th = e62NUM;
                            inputPeer = sendToPeer8;
                            sendToPeer4 = encryptedChat;
                            params4 = newMsg3;
                            messageObject6 = messageObject5;
                            str = caption4;
                            messageObject = null;
                            type2 = -1;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            newMsg3 = newMsg;
                            location2 = location;
                            tL_document = document;
                            webPage3 = webPage;
                            user2 = user;
                            photo2 = photo;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                        try {
                            message6.attachPath = str4;
                            lower_id2 = 0;
                            while (lower_id2 < tL_document6.attributes.size()) {
                                attribute = (DocumentAttribute) tL_document6.attributes.get(lower_id2);
                                newMsg = message6;
                                if ((attribute instanceof TL_documentAttributeSticker) != null) {
                                    tL_document6.attributes.remove(lower_id2);
                                    attributeSticker = new TL_documentAttributeSticker_layer55();
                                    tL_document6.attributes.add(attributeSticker);
                                    attributeSticker.alt = attribute.alt;
                                    if (attribute.stickerset != null) {
                                        if (attribute.stickerset instanceof TL_inputStickerSetShortName) {
                                            name = attribute.stickerset.short_name;
                                            hashMap = params7;
                                        } else {
                                            hashMap = params7;
                                            name = DataQuery.getInstance(sendMessagesHelper.currentAccount).getStickerSetName(attribute.stickerset.id);
                                        }
                                        name2 = name;
                                        if (TextUtils.isEmpty(name2)) {
                                            attributeSticker.stickerset = new TL_inputStickerSetShortName();
                                            attributeSticker.stickerset.short_name = name2;
                                        } else {
                                            attributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                        }
                                    } else {
                                        hashMap = params7;
                                        attributeSticker.stickerset = new TL_inputStickerSetEmpty();
                                    }
                                    message7 = newMsg;
                                    newMsg3 = hashMap;
                                } else {
                                    lower_id2++;
                                    message6 = newMsg;
                                    tL_document6 = document;
                                    tL_game = game;
                                    webPage4 = webPage;
                                }
                            }
                            newMsg = message6;
                            hashMap = params7;
                            message7 = newMsg;
                            newMsg3 = hashMap;
                        } catch (Throwable e622NUM) {
                            newMsg = message6;
                            hashMap = params7;
                            videoEditedInfo2 = videoEditedInfo;
                            th = e622NUM;
                            inputPeer = sendToPeer8;
                            sendToPeer4 = encryptedChat;
                            messageObject6 = messageObject5;
                            str = caption4;
                            messageObject = null;
                            type2 = i8;
                            str2 = originalPath4;
                            arrayList3 = null;
                            i2 = high_id;
                            i7 = i;
                            newMsg3 = newMsg;
                            params4 = hashMap;
                            location2 = location;
                            message5 = message;
                            tL_document = document;
                            webPage3 = webPage;
                            user2 = user;
                            photo2 = photo;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    }
                    message7 = null;
                    webPage4 = webPage;
                    if (arrayList2 != null) {
                        if (!entities.isEmpty()) {
                            message7.entities = arrayList2;
                            message7.flags |= 128;
                        }
                    }
                    name = caption4;
                    if (name != null) {
                        try {
                            message7.message = name;
                        } catch (Exception e12) {
                            e622NUM = e12;
                            videoEditedInfo2 = videoEditedInfo;
                            inputPeer = sendToPeer8;
                            str = name;
                            sendToPeer4 = encryptedChat;
                            webPage3 = webPage;
                            messageObject6 = messageObject5;
                            messageObject = null;
                            type2 = i8;
                            arrayList3 = null;
                            location2 = location;
                            tL_document = document;
                            params2 = newMsg3;
                            newMsg3 = message7;
                            th = e622NUM;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    } else if (message7.message == null) {
                        message7.message = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    if (message7.attachPath == null) {
                        message7.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    high_id4 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                    message7.id = high_id4;
                    message7.local_id = high_id4;
                    message7.out = true;
                    if (isChannel || sendToPeer8 == null) {
                        message7.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                        message7.flags |= 256;
                    } else {
                        message7.from_id = -sendToPeer8.channel_id;
                    }
                    UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                    caption2 = name;
                    webPage2 = webPage;
                    type2 = i8;
                    tL_photo2 = photo;
                    location2 = location;
                    message5 = message;
                    document2 = document;
                    params4 = newMsg3;
                    newMsg3 = message7;
                    user5 = user;
                }
            }
            i6 = i5;
            if (arrayList2 != null) {
                if (entities.isEmpty()) {
                    message7.entities = arrayList2;
                    message7.flags |= 128;
                }
            }
            name = caption4;
            if (name != null) {
                message7.message = name;
            } else if (message7.message == null) {
                message7.message = TtmlNode.ANONYMOUS_REGION_ID;
            }
            try {
                if (message7.attachPath == null) {
                    message7.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                }
                high_id4 = UserConfig.getInstance(sendMessagesHelper.currentAccount).getNewMessageId();
                message7.id = high_id4;
                message7.local_id = high_id4;
                message7.out = true;
                if (isChannel) {
                }
                message7.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                message7.flags |= 256;
                UserConfig.getInstance(sendMessagesHelper.currentAccount).saveConfig(false);
                caption2 = name;
                webPage2 = webPage;
                type2 = i8;
                tL_photo2 = photo;
                location2 = location;
                message5 = message;
                document2 = document;
                params4 = newMsg3;
                newMsg3 = message7;
                user5 = user;
            } catch (Throwable e6222NUM) {
                inputPeer = sendToPeer8;
                str = name;
                messageObject6 = messageObject5;
                str2 = originalPath4;
                i2 = high_id;
                i7 = i;
                videoEditedInfo2 = videoEditedInfo;
                webPage2 = webPage;
                messageObject = null;
                arrayList3 = null;
                location2 = location;
                message5 = message;
                tL_document = document;
                user2 = user;
                photo2 = photo;
                params2 = newMsg3;
                newMsg3 = message7;
                th = e6222NUM;
                FileLog.m3e(th);
                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                if (messageObject != null) {
                    messageObject.messageOwner.send_state = 2;
                }
                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                i6 = NotificationCenter.messageSendError;
                objArr = new Object[1];
                objArr[0] = Integer.valueOf(newMsg3.id);
                instance.postNotificationName(i6, objArr);
                processSentMessage(newMsg3.id);
                videoEditedInfo3 = videoEditedInfo2;
                messageMedia = location2;
                tL_document2 = tL_document;
            }
            MessageMedia location4 = location2;
            String message8 = message5;
            if (newMsg3.random_id == null) {
                try {
                    newMsg3.random_id = getNextRandomId();
                } catch (Exception e13) {
                    e6222NUM = e13;
                    videoEditedInfo2 = videoEditedInfo;
                    user2 = user5;
                    inputPeer = sendToPeer8;
                    photo2 = tL_photo2;
                    sendToPeer4 = encryptedChat;
                    messageObject6 = messageObject5;
                    tL_document = document2;
                    messageObject = null;
                    str2 = originalPath4;
                    arrayList3 = null;
                    i2 = high_id;
                    i7 = i;
                    str = caption2;
                    message5 = message8;
                    location2 = location4;
                    th = e6222NUM;
                    FileLog.m3e(th);
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                    if (messageObject != null) {
                        messageObject.messageOwner.send_state = 2;
                    }
                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                    i6 = NotificationCenter.messageSendError;
                    objArr = new Object[1];
                    objArr[0] = Integer.valueOf(newMsg3.id);
                    instance.postNotificationName(i6, objArr);
                    processSentMessage(newMsg3.id);
                    videoEditedInfo3 = videoEditedInfo2;
                    messageMedia = location2;
                    tL_document2 = tL_document;
                }
            }
            if (params4 != null && params4.containsKey("bot")) {
                if (encryptedChat != null) {
                    newMsg3.via_bot_name = (String) params4.get("bot_name");
                    if (newMsg3.via_bot_name == null) {
                        newMsg3.via_bot_name = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                } else {
                    newMsg3.via_bot_id = Utilities.parseInt((String) params4.get("bot")).intValue();
                }
                newMsg3.flags |= 2048;
            }
            try {
                newMsg3.params = params4;
                if (messageObject5 != null) {
                }
                newMsg3.date = ConnectionsManager.getInstance(sendMessagesHelper.currentAccount).getCurrentTime();
                if (sendToPeer8 instanceof TL_inputPeerChannel) {
                    if (isChannel) {
                        newMsg3.views = 1;
                        newMsg3.flags |= 1024;
                    }
                    Chat chat3 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(sendToPeer8.channel_id));
                    if (chat3 != null) {
                        if (chat3.megagroup) {
                            newMsg3.flags |= Integer.MIN_VALUE;
                            newMsg3.unread = true;
                        } else {
                            newMsg3.post = true;
                            if (chat3.signatures) {
                                newMsg3.from_id = UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId();
                            }
                        }
                    }
                } else {
                    newMsg3.unread = true;
                }
                newMsg3.flags |= 512;
                j3 = peer;
                try {
                    newMsg3.dialog_id = j3;
                    messageObject5 = reply_to_msg;
                    if (messageObject5 != null) {
                        if (encryptedChat != null) {
                            try {
                                user3 = user5;
                                sendToPeer = sendToPeer8;
                                try {
                                    if (messageObject5.messageOwner.random_id != null) {
                                        newMsg3.reply_to_random_id = messageObject5.messageOwner.random_id;
                                        newMsg3.flags |= 8;
                                        newMsg3.reply_to_msg_id = reply_to_msg.getId();
                                    }
                                } catch (Throwable e62222NUM) {
                                    videoEditedInfo2 = videoEditedInfo;
                                    th = e62222NUM;
                                    photo2 = tL_photo2;
                                    sendToPeer4 = encryptedChat;
                                    tL_document = document2;
                                    messageObject = null;
                                    str2 = originalPath4;
                                    arrayList3 = null;
                                    i2 = high_id;
                                    i7 = i;
                                    str = caption2;
                                    message5 = message8;
                                    location2 = location4;
                                    inputPeer = sendToPeer;
                                    user2 = user3;
                                    messageObject6 = retryMessageObject;
                                    FileLog.m3e(th);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                    if (messageObject != null) {
                                        messageObject.messageOwner.send_state = 2;
                                    }
                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                    i6 = NotificationCenter.messageSendError;
                                    objArr = new Object[1];
                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                    instance.postNotificationName(i6, objArr);
                                    processSentMessage(newMsg3.id);
                                    videoEditedInfo3 = videoEditedInfo2;
                                    messageMedia = location2;
                                    tL_document2 = tL_document;
                                }
                            } catch (Throwable e622222NUM) {
                                user3 = user5;
                                videoEditedInfo2 = videoEditedInfo;
                                th = e622222NUM;
                                inputPeer = sendToPeer8;
                                photo2 = tL_photo2;
                                sendToPeer4 = encryptedChat;
                                tL_document = document2;
                                messageObject = null;
                                str2 = originalPath4;
                                arrayList3 = null;
                                i2 = high_id;
                                i7 = i;
                                str = caption2;
                                message5 = message8;
                                location2 = location4;
                                user2 = user3;
                                messageObject6 = retryMessageObject;
                                FileLog.m3e(th);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                if (messageObject != null) {
                                    messageObject.messageOwner.send_state = 2;
                                }
                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                i6 = NotificationCenter.messageSendError;
                                objArr = new Object[1];
                                objArr[0] = Integer.valueOf(newMsg3.id);
                                instance.postNotificationName(i6, objArr);
                                processSentMessage(newMsg3.id);
                                videoEditedInfo3 = videoEditedInfo2;
                                messageMedia = location2;
                                tL_document2 = tL_document;
                            }
                        }
                        user3 = user5;
                        sendToPeer = sendToPeer8;
                        newMsg3.flags |= 8;
                        newMsg3.reply_to_msg_id = reply_to_msg.getId();
                    } else {
                        user3 = user5;
                        sendToPeer = sendToPeer8;
                    }
                    ReplyMarkup replyMarkup2 = replyMarkup;
                    if (replyMarkup2 != null && encryptedChat == null) {
                        newMsg3.flags |= 64;
                        newMsg3.reply_markup = replyMarkup2;
                    }
                    if (i != 0) {
                        high_id3 = high_id;
                        if (high_id3 == 1) {
                            try {
                                if (sendMessagesHelper.currentChatInfo == null) {
                                    try {
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                        tL_photo = tL_photo2;
                                        tL_document3 = document2;
                                        try {
                                            NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsg3.id));
                                            processSentMessage(newMsg3.id);
                                            return;
                                        } catch (Throwable e6222222NUM) {
                                            videoEditedInfo2 = videoEditedInfo;
                                            th = e6222222NUM;
                                            i2 = high_id3;
                                            high_id3 = encryptedChat;
                                            messageObject = null;
                                            str2 = originalPath4;
                                            arrayList3 = null;
                                            i7 = i;
                                            location2 = location4;
                                            tL_document = tL_document3;
                                            photo2 = tL_photo;
                                            messageObject6 = retryMessageObject;
                                            FileLog.m3e(th);
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                            if (messageObject != null) {
                                                messageObject.messageOwner.send_state = 2;
                                            }
                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                            i6 = NotificationCenter.messageSendError;
                                            objArr = new Object[1];
                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                            instance.postNotificationName(i6, objArr);
                                            processSentMessage(newMsg3.id);
                                            videoEditedInfo3 = videoEditedInfo2;
                                            messageMedia = location2;
                                            tL_document2 = tL_document;
                                        }
                                    } catch (Throwable e62222222NUM) {
                                        tL_document3 = document2;
                                        videoEditedInfo2 = videoEditedInfo;
                                        th = e62222222NUM;
                                        i2 = high_id3;
                                        high_id3 = encryptedChat;
                                        messageObject = null;
                                        str2 = originalPath4;
                                        arrayList3 = null;
                                        i7 = i;
                                        str = caption2;
                                        message5 = message8;
                                        location2 = location4;
                                        inputPeer = sendToPeer;
                                        user2 = user3;
                                        tL_document = tL_document3;
                                        photo2 = tL_photo2;
                                        messageObject6 = retryMessageObject;
                                        FileLog.m3e(th);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                        if (messageObject != null) {
                                            messageObject.messageOwner.send_state = 2;
                                        }
                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                        i6 = NotificationCenter.messageSendError;
                                        objArr = new Object[1];
                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                        instance.postNotificationName(i6, objArr);
                                        processSentMessage(newMsg3.id);
                                        videoEditedInfo3 = videoEditedInfo2;
                                        messageMedia = location2;
                                        tL_document2 = tL_document;
                                    }
                                }
                                ArrayList<InputUser> sendToPeers3;
                                tL_photo = tL_photo2;
                                tL_document3 = document2;
                                try {
                                    sendToPeers3 = new ArrayList();
                                    try {
                                        Iterator it = sendMessagesHelper.currentChatInfo.participants.participants.iterator();
                                        while (it.hasNext()) {
                                            try {
                                                Iterator it2 = it;
                                                InputUser peerUser = MessagesController.getInstance(sendMessagesHelper.currentAccount).getInputUser(MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(((ChatParticipant) it.next()).user_id)));
                                                if (peerUser != null) {
                                                    sendToPeers3.add(peerUser);
                                                }
                                                it = it2;
                                            } catch (Exception e14) {
                                                e62222222NUM = e14;
                                                videoEditedInfo2 = videoEditedInfo;
                                                arrayList3 = sendToPeers3;
                                                i2 = high_id3;
                                                high_id3 = encryptedChat;
                                                messageObject = null;
                                                str2 = originalPath4;
                                                i7 = i;
                                            }
                                        }
                                        newMsg3.to_id = new TL_peerChat();
                                        lower_id = i;
                                    } catch (Throwable e622222222NUM) {
                                        videoEditedInfo2 = videoEditedInfo;
                                        arrayList3 = sendToPeers3;
                                        i2 = high_id3;
                                        high_id3 = encryptedChat;
                                        messageObject = null;
                                        str2 = originalPath4;
                                        i7 = i;
                                        str = caption2;
                                        message5 = message8;
                                        location2 = location4;
                                        inputPeer = sendToPeer;
                                        user2 = user3;
                                        tL_document = tL_document3;
                                        photo2 = tL_photo;
                                        messageObject6 = retryMessageObject;
                                        th = e622222222NUM;
                                        FileLog.m3e(th);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                        if (messageObject != null) {
                                            messageObject.messageOwner.send_state = 2;
                                        }
                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                        i6 = NotificationCenter.messageSendError;
                                        objArr = new Object[1];
                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                        instance.postNotificationName(i6, objArr);
                                        processSentMessage(newMsg3.id);
                                        videoEditedInfo3 = videoEditedInfo2;
                                        messageMedia = location2;
                                        tL_document2 = tL_document;
                                    }
                                } catch (Throwable e6222222222NUM) {
                                    videoEditedInfo2 = videoEditedInfo;
                                    th = e6222222222NUM;
                                    i2 = high_id3;
                                    high_id3 = encryptedChat;
                                    messageObject = null;
                                    str2 = originalPath4;
                                    arrayList3 = null;
                                    i7 = i;
                                    str = caption2;
                                    message5 = message8;
                                    location2 = location4;
                                    inputPeer = sendToPeer;
                                    user2 = user3;
                                    tL_document = tL_document3;
                                    photo2 = tL_photo;
                                    messageObject6 = retryMessageObject;
                                    FileLog.m3e(th);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                    if (messageObject != null) {
                                        messageObject.messageOwner.send_state = 2;
                                    }
                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                    i6 = NotificationCenter.messageSendError;
                                    objArr = new Object[1];
                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                    instance.postNotificationName(i6, objArr);
                                    processSentMessage(newMsg3.id);
                                    videoEditedInfo3 = videoEditedInfo2;
                                    messageMedia = location2;
                                    tL_document2 = tL_document;
                                }
                                try {
                                    newMsg3.to_id.chat_id = lower_id;
                                    sendToPeers = sendToPeers3;
                                    type3 = 1;
                                    if (high_id3 != 1) {
                                        try {
                                            if (!MessageObject.isVoiceMessage(newMsg3)) {
                                                if (MessageObject.isRoundVideoMessage(newMsg3)) {
                                                    type3 = 1;
                                                }
                                            }
                                            type3 = 1;
                                            newMsg3.media_unread = true;
                                        } catch (Throwable e62222222222NUM) {
                                            videoEditedInfo2 = videoEditedInfo;
                                            th = e62222222222NUM;
                                            i2 = high_id3;
                                            high_id3 = encryptedChat;
                                            i7 = lower_id;
                                            arrayList3 = sendToPeers;
                                            messageObject = null;
                                            str2 = originalPath4;
                                            location2 = location4;
                                            tL_document = tL_document3;
                                            photo2 = tL_photo;
                                            messageObject6 = retryMessageObject;
                                            FileLog.m3e(th);
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                            if (messageObject != null) {
                                                messageObject.messageOwner.send_state = 2;
                                            }
                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                            i6 = NotificationCenter.messageSendError;
                                            objArr = new Object[1];
                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                            instance.postNotificationName(i6, objArr);
                                            processSentMessage(newMsg3.id);
                                            videoEditedInfo3 = videoEditedInfo2;
                                            messageMedia = location2;
                                            tL_document2 = tL_document;
                                        }
                                    }
                                    newMsg3.send_state = type3;
                                    high_id2 = high_id3;
                                } catch (Exception e15) {
                                    e62222222222NUM = e15;
                                    videoEditedInfo2 = videoEditedInfo;
                                    arrayList3 = sendToPeers3;
                                    i2 = high_id3;
                                    high_id3 = encryptedChat;
                                    i7 = lower_id;
                                    messageObject = null;
                                    str2 = originalPath4;
                                    location2 = location4;
                                    tL_document = tL_document3;
                                    messageObject6 = retryMessageObject;
                                    th = e62222222222NUM;
                                    FileLog.m3e(th);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                    if (messageObject != null) {
                                        messageObject.messageOwner.send_state = 2;
                                    }
                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                    i6 = NotificationCenter.messageSendError;
                                    objArr = new Object[1];
                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                    instance.postNotificationName(i6, objArr);
                                    processSentMessage(newMsg3.id);
                                    videoEditedInfo3 = videoEditedInfo2;
                                    messageMedia = location2;
                                    tL_document2 = tL_document;
                                }
                                try {
                                    messageObject6 = new MessageObject(sendMessagesHelper.currentAccount, newMsg3, 1);
                                    try {
                                        messageObject6.replyMessageObject = messageObject5;
                                        if (!messageObject6.isForwarded()) {
                                            try {
                                                if ((messageObject6.type == 3 || videoEditedInfo != null || messageObject6.type == 2) && !TextUtils.isEmpty(newMsg3.attachPath)) {
                                                    messageObject6.attachPathExists = true;
                                                }
                                            } catch (Exception e16) {
                                                e62222222222NUM = e16;
                                                videoEditedInfo2 = videoEditedInfo;
                                                th = e62222222222NUM;
                                                location2 = location4;
                                                tL_document = tL_document3;
                                                messageObject = messageObject6;
                                                messageObject6 = retryMessageObject;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                        if (messageObject6.videoEditedInfo == null && videoEditedInfo == null) {
                                            videoEditedInfo2 = messageObject6.videoEditedInfo;
                                        } else {
                                            videoEditedInfo2 = videoEditedInfo;
                                        }
                                        groupId = 0;
                                        isFinalGroupMedia = false;
                                        if (params4 == null) {
                                            groupId2 = 0;
                                            try {
                                                name2 = (String) params4.get("groupId");
                                                if (name2 == null) {
                                                    name2 = Utilities.parseLong(name2).longValue();
                                                    newMsg3.grouped_id = name2;
                                                    groupId3 = name2;
                                                    newMsg3.flags |= 131072;
                                                    groupId = groupId3;
                                                } else {
                                                    groupId = groupId2;
                                                }
                                                isFinalGroupMedia = params4.get("final") == null;
                                                groupId = groupId;
                                            } catch (Exception e17) {
                                                e62222222222NUM = e17;
                                                th = e62222222222NUM;
                                                location2 = location4;
                                                tL_document = tL_document3;
                                                messageObject = messageObject6;
                                                messageObject6 = retryMessageObject;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                        groupId2 = 0;
                                        if (groupId != 0) {
                                            i3 = lower_id;
                                            try {
                                                lower_id = new ArrayList();
                                                lower_id.add(messageObject6);
                                                arr = new ArrayList();
                                                arr.add(newMsg3);
                                                arrayList = sendToPeers;
                                                try {
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages((ArrayList) arr, false, true, false, 0);
                                                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j3, lower_id);
                                                    objArr2 = lower_id;
                                                    hashMap2 = params4;
                                                    try {
                                                        NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[null]);
                                                    } catch (Throwable e622222222222NUM) {
                                                        th = e622222222222NUM;
                                                        messageObject = messageObject6;
                                                        sendToPeer4 = encryptedChat;
                                                        location2 = location4;
                                                        tL_document = tL_document3;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        params4 = hashMap2;
                                                        messageObject6 = retryMessageObject;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                } catch (Throwable e6222222222222NUM) {
                                                    hashMap2 = params4;
                                                    th = e6222222222222NUM;
                                                    messageObject = messageObject6;
                                                    sendToPeer4 = encryptedChat;
                                                    str2 = originalPath4;
                                                    str = caption2;
                                                    message5 = message8;
                                                    location2 = location4;
                                                    inputPeer = sendToPeer;
                                                    user2 = user3;
                                                    tL_document = tL_document3;
                                                    photo2 = photo;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    arrayList3 = arrayList;
                                                    messageObject6 = retryMessageObject;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            } catch (Throwable e62222222222222NUM) {
                                                hashMap2 = params4;
                                                arrayList = sendToPeers;
                                                th = e62222222222222NUM;
                                                messageObject = messageObject6;
                                                sendToPeer4 = encryptedChat;
                                                str2 = originalPath4;
                                                str = caption2;
                                                message5 = message8;
                                                location2 = location4;
                                                inputPeer = sendToPeer;
                                                user2 = user3;
                                                tL_document = tL_document3;
                                                photo2 = photo;
                                                i2 = high_id2;
                                                i7 = i3;
                                                arrayList3 = arrayList;
                                                messageObject6 = retryMessageObject;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                        i3 = lower_id;
                                        hashMap2 = params4;
                                        arrayList = sendToPeers;
                                        try {
                                            tL_document = new StringBuilder();
                                            tL_document.append("group_");
                                            tL_document.append(groupId);
                                            params5 = (ArrayList) sendMessagesHelper.delayedMessages.get(tL_document.toString());
                                            if (params5 != null) {
                                                delayedMessage3 = (DelayedMessage) params5.get(0);
                                            }
                                            if (delayedMessage3 != null) {
                                                delayedMessage2 = new DelayedMessage(j3);
                                                try {
                                                    delayedMessage2.type = 4;
                                                    delayedMessage2.groupId = groupId;
                                                    delayedMessage2.messageObjects = new ArrayList();
                                                    delayedMessage2.messages = new ArrayList();
                                                    delayedMessage2.originalPaths = new ArrayList();
                                                    delayedMessage2.extraHashMap = new HashMap();
                                                    delayedMessage2.encryptedChat = encryptedChat;
                                                } catch (Throwable e622222222222222NUM) {
                                                    th = e622222222222222NUM;
                                                    messageObject = messageObject6;
                                                    sendToPeer4 = encryptedChat;
                                                    delayedMessage3 = delayedMessage2;
                                                    location2 = location4;
                                                    tL_document = tL_document3;
                                                    i7 = i3;
                                                    arrayList3 = arrayList;
                                                    params4 = hashMap2;
                                                    messageObject6 = retryMessageObject;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            }
                                            delayedMessage2 = delayedMessage3;
                                            if (isFinalGroupMedia) {
                                                delayedMessage2.finalGroupMessage = newMsg3.id;
                                            }
                                            delayedMessage3 = delayedMessage2;
                                        } catch (Throwable e6222222222222222NUM) {
                                            messageObject2 = messageObject6;
                                            videoEditedInfo3 = videoEditedInfo2;
                                            sendToPeer4 = encryptedChat;
                                            message3 = newMsg3;
                                            str2 = originalPath4;
                                            str = caption2;
                                            inputPeer = sendToPeer;
                                            user2 = user3;
                                            tLObject = photo;
                                            i2 = high_id2;
                                            i7 = i3;
                                            messageObject6 = retryMessageObject;
                                            arrayList4 = entities;
                                            newMsg3 = j3;
                                            tLObject2 = webPage2;
                                            Object obj2 = hashMap2;
                                            message5 = message8;
                                            newMsg3 = message3;
                                            location2 = location4;
                                            tL_document = tL_document3;
                                            arrayList3 = arrayList;
                                            messageObject = messageObject2;
                                            th = e6222222222222222NUM;
                                            FileLog.m3e(th);
                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                            if (messageObject != null) {
                                                messageObject.messageOwner.send_state = 2;
                                            }
                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                            i6 = NotificationCenter.messageSendError;
                                            objArr = new Object[1];
                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                            instance.postNotificationName(i6, objArr);
                                            processSentMessage(newMsg3.id);
                                            videoEditedInfo3 = videoEditedInfo2;
                                            messageMedia = location2;
                                            tL_document2 = tL_document;
                                        }
                                        if (BuildVars.LOGS_ENABLED || sendToPeer == null) {
                                            sendToPeer5 = sendToPeer;
                                        } else {
                                            try {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append("send message user_id = ");
                                                sendToPeer5 = sendToPeer;
                                                try {
                                                    stringBuilder.append(sendToPeer5.user_id);
                                                    stringBuilder.append(" chat_id = ");
                                                    stringBuilder.append(sendToPeer5.chat_id);
                                                    stringBuilder.append(" channel_id = ");
                                                    stringBuilder.append(sendToPeer5.channel_id);
                                                    stringBuilder.append(" access_hash = ");
                                                    stringBuilder.append(sendToPeer5.access_hash);
                                                    FileLog.m0d(stringBuilder.toString());
                                                } catch (Throwable e62222222222222222NUM) {
                                                    th = e62222222222222222NUM;
                                                    messageObject = messageObject6;
                                                    sendToPeer4 = encryptedChat;
                                                    inputPeer = sendToPeer5;
                                                    str2 = originalPath4;
                                                    str = caption2;
                                                    message5 = message8;
                                                    location2 = location4;
                                                    tL_document = tL_document3;
                                                    i7 = i3;
                                                    arrayList3 = arrayList;
                                                    params4 = hashMap2;
                                                    messageObject6 = retryMessageObject;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            } catch (Throwable e622222222222222222NUM) {
                                                th = e622222222222222222NUM;
                                                messageObject = messageObject6;
                                                sendToPeer4 = encryptedChat;
                                                str2 = originalPath4;
                                                str = caption2;
                                                message5 = message8;
                                                location2 = location4;
                                                inputPeer = sendToPeer;
                                                user2 = user3;
                                                tL_document = tL_document3;
                                                photo2 = photo;
                                                i2 = high_id2;
                                                i7 = i3;
                                                arrayList3 = arrayList;
                                                params4 = hashMap2;
                                                messageObject6 = retryMessageObject;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                        if (type2 != 0) {
                                            j4 = groupId;
                                            messageObject2 = messageObject6;
                                            videoEditedInfo3 = videoEditedInfo2;
                                            type4 = type2;
                                            encryptedChat3 = encryptedChat;
                                            message3 = newMsg3;
                                            str2 = originalPath4;
                                            str = caption2;
                                            message4 = message8;
                                            messageMedia = location4;
                                            user2 = user3;
                                            tL_document = tL_document3;
                                            tLObject = photo;
                                            i2 = high_id2;
                                            i7 = i3;
                                            arrayList3 = arrayList;
                                            params6 = hashMap2;
                                            messageObject6 = retryMessageObject;
                                            j5 = j3;
                                            sendToPeer6 = sendToPeer5;
                                            newMsg4 = j5;
                                        } else if (type2 != 9 && message8 != null && encryptedChat != null) {
                                            j4 = groupId;
                                            messageObject2 = messageObject6;
                                            videoEditedInfo3 = videoEditedInfo2;
                                            type4 = type2;
                                            encryptedChat3 = encryptedChat;
                                            message3 = newMsg3;
                                            str2 = originalPath4;
                                            str = caption2;
                                            message4 = message8;
                                            messageMedia = location4;
                                            user2 = user3;
                                            tL_document = tL_document3;
                                            photo2 = photo;
                                            i2 = high_id2;
                                            i7 = i3;
                                            arrayList3 = arrayList;
                                            params6 = hashMap2;
                                            messageObject6 = retryMessageObject;
                                            j5 = j3;
                                            sendToPeer6 = sendToPeer5;
                                            newMsg4 = j5;
                                        } else if ((type2 >= 1 || type2 > 3) && ((type2 < 5 || type2 > 8) && (type2 != 9 || encryptedChat == null))) {
                                            j4 = groupId;
                                            messageObject2 = messageObject6;
                                            videoEditedInfo3 = videoEditedInfo2;
                                            type4 = type2;
                                            sendToPeer4 = encryptedChat;
                                            message3 = newMsg3;
                                            sendToPeer7 = sendToPeer5;
                                            str5 = originalPath4;
                                            str = caption2;
                                            message4 = message8;
                                            messageMedia = location4;
                                            user2 = user3;
                                            tL_document = tL_document3;
                                            tLObject = photo;
                                            i2 = high_id2;
                                            i7 = i3;
                                            arrayList3 = arrayList;
                                            params3 = hashMap2;
                                            messageObject6 = retryMessageObject;
                                            newMsg4 = j3;
                                            if (type4 != 4) {
                                                try {
                                                    reqSend = new TL_messages_forwardMessages();
                                                    sendToPeer6 = sendToPeer7;
                                                    try {
                                                        reqSend.to_peer = sendToPeer6;
                                                        reqSend.with_my_score = messageObject6.messageOwner.with_my_score;
                                                        if (messageObject6.messageOwner.ttl == 0) {
                                                            chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject6.messageOwner.ttl));
                                                            reqSend.from_peer = new TL_inputPeerChannel();
                                                            reqSend.from_peer.channel_id = -messageObject6.messageOwner.ttl;
                                                            if (chat == null) {
                                                                str2 = str5;
                                                                try {
                                                                    reqSend.from_peer.access_hash = chat.access_hash;
                                                                } catch (Exception e18) {
                                                                    e622222222222222222NUM = e18;
                                                                    inputPeer = sendToPeer6;
                                                                    newMsg3 = message3;
                                                                    type2 = type4;
                                                                    location2 = messageMedia;
                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                    message5 = message4;
                                                                    params4 = params3;
                                                                    messageObject = messageObject2;
                                                                    th = e622222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            }
                                                        } else {
                                                            reqSend.from_peer = new TL_inputPeerEmpty();
                                                        }
                                                        if (messageObject6.messageOwner.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder2 = new StringBuilder();
                                                            stringBuilder2.append("silent_");
                                                            stringBuilder2.append(newMsg4);
                                                            reqSend.silent = notificationsSettings.getBoolean(stringBuilder2.toString(), false);
                                                        }
                                                        reqSend.random_id.add(Long.valueOf(message3.random_id));
                                                        if (retryMessageObject.getId() >= 0) {
                                                            reqSend.id.add(Integer.valueOf(retryMessageObject.getId()));
                                                        } else if (messageObject6.messageOwner.fwd_msg_id != 0) {
                                                            reqSend.id.add(Integer.valueOf(messageObject6.messageOwner.fwd_msg_id));
                                                        } else if (messageObject6.messageOwner.fwd_from != null) {
                                                            reqSend.id.add(Integer.valueOf(messageObject6.messageOwner.fwd_from.channel_post));
                                                        }
                                                        performSendMessageRequest(reqSend, messageObject2, null);
                                                        inputPeer = sendToPeer6;
                                                        tL_document2 = tL_document;
                                                        webPage5 = webPage2;
                                                        arrayList5 = arrayList3;
                                                        encryptedChat4 = message4;
                                                        params6 = params3;
                                                    } catch (Throwable e6222222222222222222NUM) {
                                                        str2 = str5;
                                                        inputPeer = sendToPeer6;
                                                        newMsg3 = message3;
                                                        type2 = type4;
                                                        location2 = messageMedia;
                                                        videoEditedInfo2 = videoEditedInfo3;
                                                        message5 = message4;
                                                        params4 = params3;
                                                        messageObject = messageObject2;
                                                        th = e6222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                } catch (Throwable e62222222222222222222NUM) {
                                                    str2 = str5;
                                                    newMsg3 = message3;
                                                    type2 = type4;
                                                    inputPeer = sendToPeer7;
                                                    location2 = messageMedia;
                                                    videoEditedInfo2 = videoEditedInfo3;
                                                    message5 = message4;
                                                    messageObject = messageObject2;
                                                    th = e62222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            }
                                            sendToPeer6 = sendToPeer7;
                                            if (type4 != 9) {
                                                reqSend2 = new TL_messages_sendInlineBotResult();
                                                reqSend2.peer = sendToPeer6;
                                                reqSend2.random_id = message3.random_id;
                                                if (message3.reply_to_msg_id != 0) {
                                                    reqSend2.flags |= 1;
                                                    reqSend2.reply_to_msg_id = message3.reply_to_msg_id;
                                                }
                                                try {
                                                    if (message3.to_id instanceof TL_peerChannel) {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder2 = new StringBuilder();
                                                        stringBuilder2.append("silent_");
                                                        stringBuilder2.append(newMsg4);
                                                        reqSend2.silent = notificationsSettings.getBoolean(stringBuilder2.toString(), false);
                                                    }
                                                    params6 = params3;
                                                    try {
                                                        reqSend2.query_id = Utilities.parseLong((String) params6.get("query_id")).longValue();
                                                        reqSend2.id = (String) params6.get(TtmlNode.ATTR_ID);
                                                        if (messageObject6 == null) {
                                                            reqSend2.clear_draft = true;
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, false);
                                                        }
                                                        performSendMessageRequest(reqSend2, messageObject2, null);
                                                        inputPeer = sendToPeer6;
                                                        tL_document2 = tL_document;
                                                        webPage5 = webPage2;
                                                        arrayList5 = arrayList3;
                                                        encryptedChat4 = message4;
                                                    } catch (Exception e19) {
                                                        e62222222222222222222NUM = e19;
                                                        inputPeer = sendToPeer6;
                                                        params4 = params6;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        location2 = messageMedia;
                                                        videoEditedInfo2 = videoEditedInfo3;
                                                        message5 = message4;
                                                        messageObject = messageObject2;
                                                        th = e62222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                } catch (Throwable e622222222222222222222NUM) {
                                                    inputPeer = sendToPeer6;
                                                    params4 = params3;
                                                    newMsg3 = message3;
                                                    type2 = type4;
                                                    location2 = messageMedia;
                                                    videoEditedInfo2 = videoEditedInfo3;
                                                    message5 = message4;
                                                    messageObject = messageObject2;
                                                    th = e622222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            }
                                            params6 = params3;
                                            inputPeer = sendToPeer6;
                                            tL_document2 = tL_document;
                                            webPage5 = webPage2;
                                            arrayList5 = arrayList3;
                                            encryptedChat4 = message4;
                                            arrayList4 = entities;
                                            params4 = params6;
                                            encryptedChat5 = encryptedChat4;
                                            newMsg3 = message3;
                                            params6 = type4;
                                            arrayList3 = arrayList5;
                                            type4 = messageObject2;
                                            arrayList4 = entities;
                                            params4 = params6;
                                            encryptedChat5 = encryptedChat4;
                                            newMsg3 = message3;
                                            params6 = type4;
                                            arrayList3 = arrayList5;
                                            type4 = messageObject2;
                                        } else if (encryptedChat == null) {
                                            MessageMedia location5;
                                            long groupId4;
                                            InputMedia inputMedia;
                                            String originalPath5;
                                            ArrayList<Long> random_ids2;
                                            MessageMedia location6;
                                            ArrayList<InputUser> sendToPeers4;
                                            HashMap<String, String> originalPath6;
                                            String params8;
                                            TLObject reqSend6;
                                            SharedPreferences notificationsSettings2;
                                            StringBuilder stringBuilder3;
                                            TL_inputSingleMedia inputSingleMedia;
                                            TLObject reqSend7;
                                            MessageObject newMsgObj;
                                            int type5;
                                            EncryptedChat encryptedChat7;
                                            ArrayList originalPath7;
                                            InputMedia inputMedia2;
                                            InputMedia inputMedia3;
                                            if (type2 == 1) {
                                                location5 = location4;
                                                try {
                                                    InputMedia tL_inputMediaVenue;
                                                    if (location5 instanceof TL_messageMediaVenue) {
                                                        try {
                                                            tL_inputMediaVenue = new TL_inputMediaVenue();
                                                            tL_inputMediaVenue.address = location5.address;
                                                            tL_inputMediaVenue.title = location5.title;
                                                            tL_inputMediaVenue.provider = location5.provider;
                                                            tL_inputMediaVenue.venue_id = location5.venue_id;
                                                            tL_inputMediaVenue.venue_type = TtmlNode.ANONYMOUS_REGION_ID;
                                                        } catch (Throwable e6222222222222222222222NUM) {
                                                            th = e6222222222222222222222NUM;
                                                            messageObject = messageObject6;
                                                            sendToPeer4 = encryptedChat;
                                                            location2 = location5;
                                                            inputPeer = sendToPeer5;
                                                            str2 = originalPath4;
                                                            str = caption2;
                                                            message5 = message8;
                                                            tL_document = tL_document3;
                                                            i7 = i3;
                                                            arrayList3 = arrayList;
                                                            params4 = hashMap2;
                                                            messageObject6 = retryMessageObject;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } else if (location5 instanceof TL_messageMediaGeoLive) {
                                                        tL_inputMediaVenue = new TL_inputMediaGeoLive();
                                                        tL_inputMediaVenue.period = location5.period;
                                                    } else {
                                                        tL_inputMediaVenue = new TL_inputMediaGeoPoint();
                                                    }
                                                    inputMedia3 = tL_inputMediaVenue;
                                                    inputMedia3.geo_point = new TL_inputGeoPoint();
                                                    sendToPeer2 = sendToPeer5;
                                                    try {
                                                        groupId4 = groupId;
                                                        inputMedia3.geo_point.lat = location5.geo.lat;
                                                        inputMedia3.geo_point._long = location5.geo._long;
                                                        videoEditedInfo4 = videoEditedInfo2;
                                                        type = type2;
                                                        encryptedChat2 = encryptedChat;
                                                        inputMedia = inputMedia3;
                                                        encryptedChat4 = delayedMessage3;
                                                        params4 = originalPath4;
                                                        user4 = user3;
                                                        document3 = tL_document3;
                                                        params = hashMap2;
                                                        type2 = path;
                                                    } catch (Throwable e62222222222222222222222NUM) {
                                                        th = e62222222222222222222222NUM;
                                                        messageObject = messageObject6;
                                                        sendToPeer4 = encryptedChat;
                                                        location2 = location5;
                                                        str2 = originalPath4;
                                                        str = caption2;
                                                        message5 = message8;
                                                        user2 = user3;
                                                        tL_document = tL_document3;
                                                        photo2 = photo;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        params4 = hashMap2;
                                                        inputPeer = sendToPeer2;
                                                        messageObject6 = retryMessageObject;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                } catch (Throwable e622222222222222222222222NUM) {
                                                    th = e622222222222222222222222NUM;
                                                    messageObject = messageObject6;
                                                    sendToPeer4 = encryptedChat;
                                                    location2 = location5;
                                                    inputPeer = sendToPeer5;
                                                    str2 = originalPath4;
                                                    str = caption2;
                                                    message5 = message8;
                                                    user2 = user3;
                                                    tL_document = tL_document3;
                                                    photo2 = photo;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    arrayList3 = arrayList;
                                                    params4 = hashMap2;
                                                    messageObject6 = retryMessageObject;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            }
                                            InputMedia media;
                                            groupId4 = groupId;
                                            sendToPeer2 = sendToPeer5;
                                            location5 = location4;
                                            InputMedia inputMedia4;
                                            if (type2 == 2) {
                                                videoEditedInfo4 = videoEditedInfo2;
                                                type = type2;
                                                encryptedChat2 = encryptedChat;
                                                inputMedia4 = null;
                                                params4 = originalPath4;
                                                user4 = user3;
                                                groupId = tL_document3;
                                                params = hashMap2;
                                                messageObject = messageObject6;
                                            } else if (type2 != 9 || photo == null) {
                                                Object obj3;
                                                Object encryptedChat8;
                                                if (type2 == 3) {
                                                    groupId = tL_document3;
                                                    try {
                                                        if (groupId.access_hash == null) {
                                                            try {
                                                                DelayedMessage delayedMessage4;
                                                                inputMedia3 = new TL_inputMediaUploadedDocument();
                                                                inputMedia3.mime_type = groupId.mime_type;
                                                                inputMedia3.attributes = groupId.attributes;
                                                                if (!MessageObject.isRoundVideoDocument(groupId)) {
                                                                    if (videoEditedInfo2 != null) {
                                                                        try {
                                                                            if (!(videoEditedInfo2.muted || videoEditedInfo2.roundVideo)) {
                                                                            }
                                                                        } catch (Exception e20) {
                                                                            e622222222222222222222222NUM = e20;
                                                                            messageObject = messageObject6;
                                                                            sendToPeer4 = encryptedChat;
                                                                            location2 = location5;
                                                                            str2 = originalPath4;
                                                                            i7 = i3;
                                                                            params4 = hashMap2;
                                                                            messageObject6 = retryMessageObject;
                                                                            tL_document = groupId;
                                                                            th = e622222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    }
                                                                    inputMedia3.nosound_video = true;
                                                                }
                                                                if (i6 != 0) {
                                                                    inputMedia3.ttl_seconds = i6;
                                                                    newMsg3.ttl = i6;
                                                                    inputMedia3.flags |= 2;
                                                                }
                                                                if (delayedMessage3 == null) {
                                                                    delayedMessage4 = new DelayedMessage(j3);
                                                                    originalPath5 = true;
                                                                    try {
                                                                        delayedMessage4.type = 1;
                                                                        delayedMessage4.obj = messageObject6;
                                                                        originalPath5 = originalPath4;
                                                                        try {
                                                                            delayedMessage4.originalPath = originalPath5;
                                                                        } catch (Exception e21) {
                                                                            e622222222222222222222222NUM = e21;
                                                                            delayedMessage3 = delayedMessage4;
                                                                            messageObject = messageObject6;
                                                                            location2 = location5;
                                                                            str2 = originalPath5;
                                                                            i7 = i3;
                                                                            params4 = hashMap2;
                                                                            messageObject6 = retryMessageObject;
                                                                            tL_document = groupId;
                                                                            th = e622222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    } catch (Exception e22) {
                                                                        e622222222222222222222222NUM = e22;
                                                                        delayedMessage3 = delayedMessage4;
                                                                        messageObject = messageObject6;
                                                                        location2 = location5;
                                                                        i7 = i3;
                                                                        params4 = hashMap2;
                                                                        messageObject6 = retryMessageObject;
                                                                        tL_document = groupId;
                                                                        th = e622222222222222222222222NUM;
                                                                        FileLog.m3e(th);
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                        if (messageObject != null) {
                                                                            messageObject.messageOwner.send_state = 2;
                                                                        }
                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                        i6 = NotificationCenter.messageSendError;
                                                                        objArr = new Object[1];
                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                        instance.postNotificationName(i6, objArr);
                                                                        processSentMessage(newMsg3.id);
                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                        messageMedia = location2;
                                                                        tL_document2 = tL_document;
                                                                    }
                                                                }
                                                                params4 = originalPath4;
                                                                delayedMessage4 = delayedMessage3;
                                                                delayedMessage4.location = groupId.thumb.location;
                                                                delayedMessage4.videoEditedInfo = videoEditedInfo2;
                                                                document3 = groupId;
                                                                videoEditedInfo4 = videoEditedInfo2;
                                                                type = type2;
                                                                encryptedChat2 = encryptedChat;
                                                                inputMedia = inputMedia3;
                                                                user4 = user3;
                                                                obj3 = hashMap2;
                                                                type2 = path;
                                                                encryptedChat8 = delayedMessage4;
                                                            } catch (Exception e23) {
                                                                e622222222222222222222222NUM = e23;
                                                                messageObject = messageObject6;
                                                                location2 = location5;
                                                                i7 = i3;
                                                                params4 = hashMap2;
                                                                messageObject6 = retryMessageObject;
                                                                tL_document = groupId;
                                                                th = e622222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        params4 = originalPath4;
                                                        try {
                                                            media = new TL_inputMediaDocument();
                                                            media.id = new TL_inputDocument();
                                                            messageObject3 = messageObject6;
                                                            videoEditedInfo4 = videoEditedInfo2;
                                                        } catch (Throwable e6222222222222222222222222NUM) {
                                                            videoEditedInfo4 = videoEditedInfo2;
                                                            sendToPeer4 = encryptedChat;
                                                            location2 = location5;
                                                            obj = params4;
                                                            str = caption2;
                                                            message5 = message8;
                                                            user2 = user3;
                                                            photo2 = photo;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            arrayList3 = arrayList;
                                                            params4 = hashMap2;
                                                            inputPeer = sendToPeer2;
                                                            messageObject = messageObject6;
                                                            messageObject6 = retryMessageObject;
                                                            tL_document = groupId;
                                                            th = e6222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                        try {
                                                            media.id.id = groupId.id;
                                                            inputMedia4 = null;
                                                            media.id.access_hash = groupId.access_hash;
                                                            document3 = groupId;
                                                            type = type2;
                                                            encryptedChat2 = encryptedChat;
                                                            inputMedia = media;
                                                            encryptedChat4 = delayedMessage3;
                                                            user4 = user3;
                                                        } catch (Exception e24) {
                                                            e6222222222222222222222222NUM = e24;
                                                            sendToPeer4 = encryptedChat;
                                                            location2 = location5;
                                                            obj = params4;
                                                            str = caption2;
                                                            message5 = message8;
                                                            user2 = user3;
                                                            i7 = i3;
                                                            params4 = hashMap2;
                                                            messageObject = messageObject3;
                                                            videoEditedInfo2 = videoEditedInfo4;
                                                            messageObject6 = retryMessageObject;
                                                            tL_document = groupId;
                                                            th = e6222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } catch (Throwable e62222222222222222222222222NUM) {
                                                        videoEditedInfo4 = videoEditedInfo2;
                                                        sendToPeer4 = encryptedChat;
                                                        location2 = location5;
                                                        str2 = originalPath4;
                                                        str = caption2;
                                                        message5 = message8;
                                                        user2 = user3;
                                                        photo2 = photo;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        params4 = hashMap2;
                                                        inputPeer = sendToPeer2;
                                                        messageObject = messageObject6;
                                                        messageObject6 = retryMessageObject;
                                                        tL_document = groupId;
                                                        th = e62222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                }
                                                messageObject3 = messageObject6;
                                                videoEditedInfo4 = videoEditedInfo2;
                                                inputMedia4 = null;
                                                params4 = originalPath4;
                                                groupId = tL_document3;
                                                User user8;
                                                if (type2 == 6) {
                                                    try {
                                                        inputMedia3 = new TL_inputMediaContact();
                                                        user8 = user3;
                                                        try {
                                                            inputMedia3.phone_number = user8.phone;
                                                            inputMedia3.first_name = user8.first_name;
                                                            inputMedia3.last_name = user8.last_name;
                                                            document3 = groupId;
                                                            user4 = user8;
                                                            type = type2;
                                                            encryptedChat2 = encryptedChat;
                                                            inputMedia = inputMedia3;
                                                            encryptedChat4 = delayedMessage3;
                                                        } catch (Exception e25) {
                                                            e62222222222222222222222222NUM = e25;
                                                            user2 = user8;
                                                            location2 = location5;
                                                            hashMap3 = params4;
                                                            str = caption2;
                                                            message5 = message8;
                                                            i7 = i3;
                                                            params4 = hashMap2;
                                                            messageObject = messageObject3;
                                                            videoEditedInfo2 = videoEditedInfo4;
                                                            messageObject6 = retryMessageObject;
                                                            tL_document = groupId;
                                                            th = e62222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } catch (Throwable e622222222222222222222222222NUM) {
                                                        user2 = user3;
                                                        sendToPeer4 = encryptedChat;
                                                        location2 = location5;
                                                        hashMap3 = params4;
                                                        str = caption2;
                                                        message5 = message8;
                                                        photo2 = photo;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        params4 = hashMap2;
                                                        inputPeer = sendToPeer2;
                                                        messageObject = messageObject3;
                                                        videoEditedInfo2 = videoEditedInfo4;
                                                        messageObject6 = retryMessageObject;
                                                        tL_document = groupId;
                                                        th = e622222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                }
                                                MessageObject newMsgObj2;
                                                InputMedia media2;
                                                user8 = user3;
                                                if (type2 == 7) {
                                                    newMsgObj2 = messageObject3;
                                                } else if (type2 == 9) {
                                                    newMsgObj2 = messageObject3;
                                                } else if (type2 == 8) {
                                                    try {
                                                        MessageObject newMsgObj3;
                                                        if (groupId.access_hash == 0) {
                                                            try {
                                                                inputMedia3 = new TL_inputMediaUploadedDocument();
                                                                inputMedia3.mime_type = groupId.mime_type;
                                                                inputMedia3.attributes = groupId.attributes;
                                                                if (i6 != 0) {
                                                                    inputMedia3.ttl_seconds = i6;
                                                                    newMsg3.ttl = i6;
                                                                    inputMedia3.flags |= 2;
                                                                }
                                                                DelayedMessage delayedMessage5 = new DelayedMessage(j3);
                                                                try {
                                                                    delayedMessage5.type = 3;
                                                                    newMsgObj3 = messageObject3;
                                                                    try {
                                                                        delayedMessage5.obj = newMsgObj3;
                                                                        document3 = groupId;
                                                                        user4 = user8;
                                                                        type = type2;
                                                                        encryptedChat2 = encryptedChat;
                                                                        inputMedia = inputMedia3;
                                                                        obj3 = hashMap2;
                                                                        type2 = path;
                                                                        encryptedChat8 = delayedMessage5;
                                                                        messageObject = newMsgObj3;
                                                                        tL_photo2 = photo;
                                                                        if (arrayList != null) {
                                                                            try {
                                                                                groupId = new TL_messages_sendBroadcast();
                                                                                random_ids2 = new ArrayList();
                                                                                a = 0;
                                                                                while (true) {
                                                                                    location6 = location5;
                                                                                    sendToPeers4 = arrayList;
                                                                                    try {
                                                                                        if (a >= sendToPeers4.size()) {
                                                                                            break;
                                                                                        }
                                                                                        originalPath6 = params4;
                                                                                        params8 = params;
                                                                                        try {
                                                                                            random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                                                            a++;
                                                                                            arrayList = sendToPeers4;
                                                                                            location5 = location6;
                                                                                            params4 = originalPath6;
                                                                                            params = params8;
                                                                                            name = path;
                                                                                        } catch (Throwable e6222222222222222222222222222NUM) {
                                                                                            th = e6222222222222222222222222222NUM;
                                                                                            photo2 = tL_photo2;
                                                                                            delayedMessage = encryptedChat4;
                                                                                            arrayList3 = sendToPeers4;
                                                                                            str = caption2;
                                                                                            message5 = message8;
                                                                                            i2 = high_id2;
                                                                                            i7 = i3;
                                                                                            inputPeer = sendToPeer2;
                                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                                            user2 = user4;
                                                                                            sendToPeer4 = encryptedChat2;
                                                                                            type2 = type;
                                                                                            tL_document = document3;
                                                                                            location2 = location6;
                                                                                            hashMap3 = originalPath6;
                                                                                        }
                                                                                    } catch (Throwable e62222222222222222222222222222NUM) {
                                                                                        th = e62222222222222222222222222222NUM;
                                                                                        photo2 = tL_photo2;
                                                                                        delayedMessage3 = encryptedChat4;
                                                                                        arrayList3 = sendToPeers4;
                                                                                        hashMap3 = params4;
                                                                                        str = caption2;
                                                                                        message5 = message8;
                                                                                        i2 = high_id2;
                                                                                        i7 = i3;
                                                                                        inputPeer = sendToPeer2;
                                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                                        user2 = user4;
                                                                                        sendToPeer4 = encryptedChat2;
                                                                                        type2 = type;
                                                                                        tL_document = document3;
                                                                                        location2 = location6;
                                                                                        originalPath5 = params;
                                                                                        messageObject6 = retryMessageObject;
                                                                                    }
                                                                                }
                                                                                str3 = params4;
                                                                                hashMap4 = params;
                                                                                groupId.contacts = sendToPeers4;
                                                                                groupId.media = inputMedia;
                                                                                groupId.random_id = random_ids2;
                                                                                groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                                                if (encryptedChat4 != null) {
                                                                                    encryptedChat4.sendRequest = groupId;
                                                                                }
                                                                                reqSend6 = groupId;
                                                                                type2 = retryMessageObject;
                                                                                if (type2 == 0) {
                                                                                    try {
                                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                                                    } catch (Throwable e622222222222222222222222222222NUM) {
                                                                                        th = e622222222222222222222222222222NUM;
                                                                                        photo2 = tL_photo2;
                                                                                        tL_photo2 = type2;
                                                                                        delayedMessage3 = encryptedChat4;
                                                                                        arrayList3 = sendToPeers4;
                                                                                        str = caption2;
                                                                                        message5 = message8;
                                                                                        i2 = high_id2;
                                                                                        i7 = i3;
                                                                                        inputPeer = sendToPeer2;
                                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                                        tL_document = document3;
                                                                                        location2 = location6;
                                                                                        str2 = str3;
                                                                                        params4 = hashMap4;
                                                                                        FileLog.m3e(th);
                                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                        if (messageObject != null) {
                                                                                            messageObject.messageOwner.send_state = 2;
                                                                                        }
                                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                        i6 = NotificationCenter.messageSendError;
                                                                                        objArr = new Object[1];
                                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                        instance.postNotificationName(i6, objArr);
                                                                                        processSentMessage(newMsg3.id);
                                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                                        messageMedia = location2;
                                                                                        tL_document2 = tL_document;
                                                                                    }
                                                                                }
                                                                                arrayList3 = sendToPeers4;
                                                                                params = caption2;
                                                                                sendToPeer3 = sendToPeer2;
                                                                                tL_document = document3;
                                                                                originalPath = str3;
                                                                                params5 = entities;
                                                                            } catch (Throwable e6222222222222222222222222222222NUM) {
                                                                                location6 = location5;
                                                                                th = e6222222222222222222222222222222NUM;
                                                                                photo2 = tL_photo2;
                                                                                delayedMessage3 = encryptedChat4;
                                                                                arrayList3 = arrayList;
                                                                                hashMap3 = params4;
                                                                                str = caption2;
                                                                                message5 = message8;
                                                                                i2 = high_id2;
                                                                                i7 = i3;
                                                                                inputPeer = sendToPeer2;
                                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                                user2 = user4;
                                                                                sendToPeer4 = encryptedChat2;
                                                                                type2 = type;
                                                                                tL_document = document3;
                                                                                location2 = location6;
                                                                                originalPath5 = params;
                                                                                messageObject6 = retryMessageObject;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                        }
                                                                        location6 = location5;
                                                                        str3 = params4;
                                                                        hashMap4 = params;
                                                                        sendToPeers4 = arrayList;
                                                                        type2 = retryMessageObject;
                                                                        if (groupId4 != 0) {
                                                                            try {
                                                                                if (encryptedChat4.sendRequest != null) {
                                                                                    groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                                    sendToPeer8 = sendToPeer2;
                                                                                } else {
                                                                                    groupId = new TL_messages_sendMultiMedia();
                                                                                    sendToPeer8 = sendToPeer2;
                                                                                    groupId.peer = sendToPeer8;
                                                                                    if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                                        try {
                                                                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                            stringBuilder3 = new StringBuilder();
                                                                                            stringBuilder3.append("silent_");
                                                                                            stringBuilder3.append(j3);
                                                                                            groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                                        } catch (Throwable e62222222222222222222222222222222NUM) {
                                                                                            th = e62222222222222222222222222222222NUM;
                                                                                            inputPeer = sendToPeer8;
                                                                                            photo2 = tL_photo2;
                                                                                            tL_photo2 = type2;
                                                                                            delayedMessage = encryptedChat4;
                                                                                            arrayList3 = sendToPeers4;
                                                                                            str = caption2;
                                                                                            message5 = message8;
                                                                                            i2 = high_id2;
                                                                                            i7 = i3;
                                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                                            tL_document = document3;
                                                                                            location2 = location6;
                                                                                            str2 = str3;
                                                                                            params4 = hashMap4;
                                                                                            FileLog.m3e(th);
                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                            if (messageObject != null) {
                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                            }
                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                            objArr = new Object[1];
                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                            instance.postNotificationName(i6, objArr);
                                                                                            processSentMessage(newMsg3.id);
                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                            messageMedia = location2;
                                                                                            tL_document2 = tL_document;
                                                                                        }
                                                                                    }
                                                                                    try {
                                                                                        if (newMsg3.reply_to_msg_id != 0) {
                                                                                            groupId.flags |= 1;
                                                                                            groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                                        }
                                                                                        encryptedChat4.sendRequest = groupId;
                                                                                    } catch (Throwable e622222222222222222222222222222222NUM) {
                                                                                        arrayList3 = sendToPeers4;
                                                                                        tL_document = document3;
                                                                                        r13 = entities;
                                                                                        th = e622222222222222222222222222222222NUM;
                                                                                        inputPeer = sendToPeer8;
                                                                                        photo2 = tL_photo2;
                                                                                        tL_photo2 = type2;
                                                                                        delayedMessage3 = encryptedChat4;
                                                                                        str = caption2;
                                                                                        message5 = message8;
                                                                                        i2 = high_id2;
                                                                                        i7 = i3;
                                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                                        user2 = user4;
                                                                                        sendToPeer4 = encryptedChat2;
                                                                                        type2 = type;
                                                                                        location2 = location6;
                                                                                        str2 = str3;
                                                                                        params4 = hashMap4;
                                                                                        FileLog.m3e(th);
                                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                        if (messageObject != null) {
                                                                                            messageObject.messageOwner.send_state = 2;
                                                                                        }
                                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                        i6 = NotificationCenter.messageSendError;
                                                                                        objArr = new Object[1];
                                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                        instance.postNotificationName(i6, objArr);
                                                                                        processSentMessage(newMsg3.id);
                                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                                        messageMedia = location2;
                                                                                        tL_document2 = tL_document;
                                                                                    }
                                                                                }
                                                                                encryptedChat4.messageObjects.add(messageObject);
                                                                                encryptedChat4.messages.add(newMsg3);
                                                                                originalPath5 = str3;
                                                                                try {
                                                                                    encryptedChat4.originalPaths.add(originalPath5);
                                                                                    inputSingleMedia = new TL_inputSingleMedia();
                                                                                    originalPath = originalPath5;
                                                                                    try {
                                                                                        inputSingleMedia.random_id = newMsg3.random_id;
                                                                                        inputSingleMedia.media = inputMedia;
                                                                                        params = caption2;
                                                                                        try {
                                                                                            inputSingleMedia.message = params;
                                                                                            arrayList3 = sendToPeers4;
                                                                                            tL_document = document3;
                                                                                            params5 = entities;
                                                                                            if (params5 != null) {
                                                                                                try {
                                                                                                    if (!entities.isEmpty()) {
                                                                                                        inputSingleMedia.entities = params5;
                                                                                                        try {
                                                                                                            inputSingleMedia.flags |= 1;
                                                                                                        } catch (Throwable e6222222222222222222222222222222222NUM) {
                                                                                                            th = e6222222222222222222222222222222222NUM;
                                                                                                            inputPeer = sendToPeer8;
                                                                                                            photo2 = tL_photo2;
                                                                                                            delayedMessage = encryptedChat4;
                                                                                                            str = params;
                                                                                                            message5 = message8;
                                                                                                            i2 = high_id2;
                                                                                                            i7 = i3;
                                                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                                                            user2 = user4;
                                                                                                            sendToPeer4 = encryptedChat2;
                                                                                                            type2 = type;
                                                                                                            location2 = location6;
                                                                                                            params4 = hashMap4;
                                                                                                            str2 = originalPath;
                                                                                                            messageObject6 = retryMessageObject;
                                                                                                            FileLog.m3e(th);
                                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                                            if (messageObject != null) {
                                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                                            }
                                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                                            objArr = new Object[1];
                                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                                            instance.postNotificationName(i6, objArr);
                                                                                                            processSentMessage(newMsg3.id);
                                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                                            messageMedia = location2;
                                                                                                            tL_document2 = tL_document;
                                                                                                        }
                                                                                                    }
                                                                                                } catch (Throwable e62222222222222222222222222222222222NUM) {
                                                                                                    th = e62222222222222222222222222222222222NUM;
                                                                                                    inputPeer = sendToPeer8;
                                                                                                    photo2 = tL_photo2;
                                                                                                    tL_photo2 = type2;
                                                                                                    delayedMessage3 = encryptedChat4;
                                                                                                    str = params;
                                                                                                    message5 = message8;
                                                                                                    i2 = high_id2;
                                                                                                    i7 = i3;
                                                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                                                    user2 = user4;
                                                                                                    sendToPeer4 = encryptedChat2;
                                                                                                    type2 = type;
                                                                                                    location2 = location6;
                                                                                                    params4 = hashMap4;
                                                                                                    str2 = originalPath;
                                                                                                    FileLog.m3e(th);
                                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                                    if (messageObject != null) {
                                                                                                        messageObject.messageOwner.send_state = 2;
                                                                                                    }
                                                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                                    i6 = NotificationCenter.messageSendError;
                                                                                                    objArr = new Object[1];
                                                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                                    instance.postNotificationName(i6, objArr);
                                                                                                    processSentMessage(newMsg3.id);
                                                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                                                    messageMedia = location2;
                                                                                                    tL_document2 = tL_document;
                                                                                                }
                                                                                            }
                                                                                            groupId.multi_media.add(inputSingleMedia);
                                                                                            reqSend6 = groupId;
                                                                                            sendToPeer3 = sendToPeer8;
                                                                                        } catch (Throwable e622222222222222222222222222222222222NUM) {
                                                                                            arrayList3 = sendToPeers4;
                                                                                            tL_document = document3;
                                                                                            r13 = entities;
                                                                                            th = e622222222222222222222222222222222222NUM;
                                                                                            inputPeer = sendToPeer8;
                                                                                            photo2 = tL_photo2;
                                                                                            tL_photo2 = type2;
                                                                                            delayedMessage3 = encryptedChat4;
                                                                                            str = params;
                                                                                            message5 = message8;
                                                                                            i2 = high_id2;
                                                                                            i7 = i3;
                                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                                            user2 = user4;
                                                                                            sendToPeer4 = encryptedChat2;
                                                                                            type2 = type;
                                                                                            location2 = location6;
                                                                                            params4 = hashMap4;
                                                                                            str2 = originalPath;
                                                                                            FileLog.m3e(th);
                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                            if (messageObject != null) {
                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                            }
                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                            objArr = new Object[1];
                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                            instance.postNotificationName(i6, objArr);
                                                                                            processSentMessage(newMsg3.id);
                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                            messageMedia = location2;
                                                                                            tL_document2 = tL_document;
                                                                                        }
                                                                                    } catch (Throwable e6222222222222222222222222222222222222NUM) {
                                                                                        arrayList3 = sendToPeers4;
                                                                                        tL_document = document3;
                                                                                        r13 = entities;
                                                                                        th = e6222222222222222222222222222222222222NUM;
                                                                                        inputPeer = sendToPeer8;
                                                                                        photo2 = tL_photo2;
                                                                                        tL_photo2 = type2;
                                                                                        delayedMessage3 = encryptedChat4;
                                                                                        str = caption2;
                                                                                        message5 = message8;
                                                                                        i2 = high_id2;
                                                                                        i7 = i3;
                                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                                        user2 = user4;
                                                                                        sendToPeer4 = encryptedChat2;
                                                                                        type2 = type;
                                                                                        location2 = location6;
                                                                                        params4 = hashMap4;
                                                                                        str2 = originalPath;
                                                                                        FileLog.m3e(th);
                                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                        if (messageObject != null) {
                                                                                            messageObject.messageOwner.send_state = 2;
                                                                                        }
                                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                        i6 = NotificationCenter.messageSendError;
                                                                                        objArr = new Object[1];
                                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                        instance.postNotificationName(i6, objArr);
                                                                                        processSentMessage(newMsg3.id);
                                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                                        messageMedia = location2;
                                                                                        tL_document2 = tL_document;
                                                                                    }
                                                                                } catch (Throwable e62222222222222222222222222222222222222NUM) {
                                                                                    arrayList3 = sendToPeers4;
                                                                                    originalPath = originalPath5;
                                                                                    tL_document = document3;
                                                                                    r13 = entities;
                                                                                    th = e62222222222222222222222222222222222222NUM;
                                                                                    inputPeer = sendToPeer8;
                                                                                    photo2 = tL_photo2;
                                                                                    tL_photo2 = type2;
                                                                                    delayedMessage3 = encryptedChat4;
                                                                                    str = caption2;
                                                                                    message5 = message8;
                                                                                    i2 = high_id2;
                                                                                    i7 = i3;
                                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                                    user2 = user4;
                                                                                    sendToPeer4 = encryptedChat2;
                                                                                    type2 = type;
                                                                                    location2 = location6;
                                                                                    params4 = hashMap4;
                                                                                    str2 = originalPath;
                                                                                    FileLog.m3e(th);
                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                    if (messageObject != null) {
                                                                                        messageObject.messageOwner.send_state = 2;
                                                                                    }
                                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                    i6 = NotificationCenter.messageSendError;
                                                                                    objArr = new Object[1];
                                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                    instance.postNotificationName(i6, objArr);
                                                                                    processSentMessage(newMsg3.id);
                                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                                    messageMedia = location2;
                                                                                    tL_document2 = tL_document;
                                                                                }
                                                                            } catch (Throwable e622222222222222222222222222222222222222NUM) {
                                                                                arrayList3 = sendToPeers4;
                                                                                tL_document = document3;
                                                                                r13 = entities;
                                                                                th = e622222222222222222222222222222222222222NUM;
                                                                                photo2 = tL_photo2;
                                                                                tL_photo2 = type2;
                                                                                delayedMessage3 = encryptedChat4;
                                                                                str = caption2;
                                                                                message5 = message8;
                                                                                i2 = high_id2;
                                                                                i7 = i3;
                                                                                inputPeer = sendToPeer2;
                                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                                user2 = user4;
                                                                                sendToPeer4 = encryptedChat2;
                                                                                type2 = type;
                                                                                location2 = location6;
                                                                                str2 = str3;
                                                                                params4 = hashMap4;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                        }
                                                                        arrayList3 = sendToPeers4;
                                                                        params = caption2;
                                                                        sendToPeer8 = sendToPeer2;
                                                                        tL_document = document3;
                                                                        originalPath = str3;
                                                                        params5 = entities;
                                                                        try {
                                                                            reqSend6 = new TL_messages_sendMedia();
                                                                            reqSend6.peer = sendToPeer8;
                                                                            if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                                try {
                                                                                    groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                    stringBuilder2 = new StringBuilder();
                                                                                    sendToPeer3 = sendToPeer8;
                                                                                    try {
                                                                                        stringBuilder2.append("silent_");
                                                                                        stringBuilder2.append(j3);
                                                                                        reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                                                    } catch (Throwable e6222222222222222222222222222222222222222NUM) {
                                                                                        th = e6222222222222222222222222222222222222222NUM;
                                                                                        photo2 = tL_photo2;
                                                                                        delayedMessage3 = encryptedChat4;
                                                                                        str = params;
                                                                                        message5 = message8;
                                                                                        i2 = high_id2;
                                                                                        i7 = i3;
                                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                                        user2 = user4;
                                                                                        type2 = type;
                                                                                        location2 = location6;
                                                                                        params4 = hashMap4;
                                                                                        str2 = originalPath;
                                                                                        inputPeer = sendToPeer3;
                                                                                        messageObject6 = retryMessageObject;
                                                                                        FileLog.m3e(th);
                                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                        if (messageObject != null) {
                                                                                            messageObject.messageOwner.send_state = 2;
                                                                                        }
                                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                        i6 = NotificationCenter.messageSendError;
                                                                                        objArr = new Object[1];
                                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                        instance.postNotificationName(i6, objArr);
                                                                                        processSentMessage(newMsg3.id);
                                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                                        messageMedia = location2;
                                                                                        tL_document2 = tL_document;
                                                                                    }
                                                                                } catch (Throwable e62222222222222222222222222222222222222222NUM) {
                                                                                    th = e62222222222222222222222222222222222222222NUM;
                                                                                    inputPeer = sendToPeer8;
                                                                                    photo2 = tL_photo2;
                                                                                    delayedMessage3 = encryptedChat4;
                                                                                    str = params;
                                                                                    message5 = message8;
                                                                                    i2 = high_id2;
                                                                                    i7 = i3;
                                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                                    user2 = user4;
                                                                                    sendToPeer4 = encryptedChat2;
                                                                                    type2 = type;
                                                                                    location2 = location6;
                                                                                    str2 = originalPath;
                                                                                    messageObject6 = retryMessageObject;
                                                                                    FileLog.m3e(th);
                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                    if (messageObject != null) {
                                                                                        messageObject.messageOwner.send_state = 2;
                                                                                    }
                                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                    i6 = NotificationCenter.messageSendError;
                                                                                    objArr = new Object[1];
                                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                    instance.postNotificationName(i6, objArr);
                                                                                    processSentMessage(newMsg3.id);
                                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                                    messageMedia = location2;
                                                                                    tL_document2 = tL_document;
                                                                                }
                                                                            }
                                                                            sendToPeer3 = sendToPeer8;
                                                                            try {
                                                                                if (newMsg3.reply_to_msg_id != null) {
                                                                                    reqSend6.flags |= 1;
                                                                                    reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                                }
                                                                                reqSend6.random_id = newMsg3.random_id;
                                                                                reqSend6.media = inputMedia;
                                                                                reqSend6.message = params;
                                                                                if (params5 != null) {
                                                                                    if (entities.isEmpty() == null) {
                                                                                        reqSend6.entities = params5;
                                                                                        reqSend6.flags |= 8;
                                                                                    }
                                                                                }
                                                                                if (encryptedChat4 != null) {
                                                                                    encryptedChat4.sendRequest = reqSend6;
                                                                                }
                                                                            } catch (Throwable e622222222222222222222222222222222222222222NUM) {
                                                                                i2 = high_id2;
                                                                                i7 = i3;
                                                                                type2 = type;
                                                                                delayedMessage3 = encryptedChat4;
                                                                                str = params;
                                                                                message5 = message8;
                                                                                sendToPeer4 = encryptedChat2;
                                                                                params4 = hashMap4;
                                                                                str2 = originalPath;
                                                                                inputPeer = sendToPeer3;
                                                                                user2 = user4;
                                                                                photo2 = tL_photo2;
                                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                                location2 = location6;
                                                                                messageObject6 = retryMessageObject;
                                                                                messageObject = messageObject;
                                                                                th = e622222222222222222222222222222222222222222NUM;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                        } catch (Throwable e6222222222222222222222222222222222222222222NUM) {
                                                                            i2 = high_id2;
                                                                            i7 = i3;
                                                                            inputPeer = sendToPeer8;
                                                                            type2 = type;
                                                                            delayedMessage3 = encryptedChat4;
                                                                            str = params;
                                                                            message5 = message8;
                                                                            sendToPeer4 = encryptedChat2;
                                                                            params4 = hashMap4;
                                                                            str2 = originalPath;
                                                                            user2 = user4;
                                                                            photo2 = tL_photo2;
                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                            location2 = location6;
                                                                            messageObject6 = retryMessageObject;
                                                                            messageObject = messageObject;
                                                                            th = e6222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                        reqSend7 = reqSend6;
                                                                        if (groupId4 != 0) {
                                                                            performSendDelayedMessage(encryptedChat4);
                                                                            photo = tL_photo2;
                                                                            messageObject2 = messageObject;
                                                                            message = message8;
                                                                            i2 = high_id2;
                                                                            i7 = i3;
                                                                            videoEditedInfo = videoEditedInfo4;
                                                                            user = user4;
                                                                            lower_id2 = type;
                                                                        } else {
                                                                            a = type;
                                                                            if (a == 1) {
                                                                                try {
                                                                                    performSendMessageRequest(reqSend7, messageObject, 0);
                                                                                } catch (Throwable e62222222222222222222222222222222222222222222NUM) {
                                                                                    th = e62222222222222222222222222222222222222222222NUM;
                                                                                    photo2 = tL_photo2;
                                                                                    type2 = a;
                                                                                    delayedMessage = encryptedChat4;
                                                                                    str = params;
                                                                                    message5 = message8;
                                                                                    i2 = high_id2;
                                                                                    i7 = i3;
                                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                                    user2 = user4;
                                                                                    sendToPeer4 = encryptedChat2;
                                                                                    location2 = location6;
                                                                                    params4 = hashMap4;
                                                                                    str2 = originalPath;
                                                                                    inputPeer = sendToPeer3;
                                                                                    messageObject6 = retryMessageObject;
                                                                                    FileLog.m3e(th);
                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                    if (messageObject != null) {
                                                                                        messageObject.messageOwner.send_state = 2;
                                                                                    }
                                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                    i6 = NotificationCenter.messageSendError;
                                                                                    objArr = new Object[1];
                                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                    instance.postNotificationName(i6, objArr);
                                                                                    processSentMessage(newMsg3.id);
                                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                                    messageMedia = location2;
                                                                                    tL_document2 = tL_document;
                                                                                }
                                                                            } else if (a == 2) {
                                                                                try {
                                                                                    if (tL_photo2.access_hash == 0) {
                                                                                        performSendDelayedMessage(encryptedChat4);
                                                                                    } else {
                                                                                        r91 = groupId4;
                                                                                        user = user4;
                                                                                        sendToPeer7 = sendToPeer3;
                                                                                        photo = tL_photo2;
                                                                                        newMsgObj = messageObject;
                                                                                        type5 = a;
                                                                                        videoEditedInfo = videoEditedInfo4;
                                                                                        i7 = i3;
                                                                                        location = location6;
                                                                                        i2 = high_id2;
                                                                                        message = message8;
                                                                                        str5 = originalPath;
                                                                                        try {
                                                                                            performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                                                            messageObject2 = newMsgObj;
                                                                                            lower_id2 = type5;
                                                                                            encryptedChat7 = encryptedChat4;
                                                                                            str2 = str5;
                                                                                            tL_document2 = tL_document;
                                                                                            originalPath7 = params5;
                                                                                            str = params;
                                                                                            encryptedChat4 = message;
                                                                                            sendToPeer4 = encryptedChat2;
                                                                                            params6 = hashMap4;
                                                                                            arrayList5 = arrayList3;
                                                                                            inputPeer = sendToPeer7;
                                                                                            user2 = user;
                                                                                            photo2 = photo;
                                                                                            videoEditedInfo3 = videoEditedInfo;
                                                                                            messageMedia = location;
                                                                                            messageObject6 = retryMessageObject;
                                                                                            type4 = lower_id2;
                                                                                            message3 = newMsg3;
                                                                                            webPage5 = webPage2;
                                                                                            newMsg3 = peer;
                                                                                            params4 = params6;
                                                                                            encryptedChat5 = encryptedChat4;
                                                                                            newMsg3 = message3;
                                                                                            params6 = type4;
                                                                                            arrayList3 = arrayList5;
                                                                                            type4 = messageObject2;
                                                                                        } catch (Throwable e622222222222222222222222222222222222222222222NUM) {
                                                                                            th = e622222222222222222222222222222222222222222222NUM;
                                                                                            delayedMessage3 = encryptedChat4;
                                                                                            str2 = str5;
                                                                                            str = params;
                                                                                            params4 = hashMap4;
                                                                                            inputPeer = sendToPeer7;
                                                                                            user2 = user;
                                                                                            messageObject = newMsgObj;
                                                                                            photo2 = photo;
                                                                                            videoEditedInfo2 = videoEditedInfo;
                                                                                            location2 = location;
                                                                                            messageObject6 = retryMessageObject;
                                                                                            FileLog.m3e(th);
                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                            if (messageObject != null) {
                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                            }
                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                            objArr = new Object[1];
                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                            instance.postNotificationName(i6, objArr);
                                                                                            processSentMessage(newMsg3.id);
                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                            messageMedia = location2;
                                                                                            tL_document2 = tL_document;
                                                                                        }
                                                                                    }
                                                                                } catch (Throwable e6222222222222222222222222222222222222222222222NUM) {
                                                                                    i2 = high_id2;
                                                                                    i7 = i3;
                                                                                    th = e6222222222222222222222222222222222222222222222NUM;
                                                                                    delayedMessage3 = encryptedChat4;
                                                                                    str = params;
                                                                                    message5 = message8;
                                                                                    sendToPeer4 = encryptedChat2;
                                                                                    params4 = hashMap4;
                                                                                    str2 = originalPath;
                                                                                    inputPeer = sendToPeer3;
                                                                                    user2 = user4;
                                                                                    messageObject = messageObject;
                                                                                    photo2 = tL_photo2;
                                                                                    reqSend7 = a;
                                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                                    location2 = location6;
                                                                                    messageObject6 = retryMessageObject;
                                                                                    FileLog.m3e(th);
                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                    if (messageObject != null) {
                                                                                        messageObject.messageOwner.send_state = 2;
                                                                                    }
                                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                    i6 = NotificationCenter.messageSendError;
                                                                                    objArr = new Object[1];
                                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                    instance.postNotificationName(i6, objArr);
                                                                                    processSentMessage(newMsg3.id);
                                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                                    messageMedia = location2;
                                                                                    tL_document2 = tL_document;
                                                                                }
                                                                            } else {
                                                                                photo = tL_photo2;
                                                                                inputMedia2 = inputMedia;
                                                                                newMsgObj = messageObject;
                                                                                message = message8;
                                                                                i2 = high_id2;
                                                                                i7 = i3;
                                                                                r91 = groupId4;
                                                                                videoEditedInfo = videoEditedInfo4;
                                                                                user = user4;
                                                                                location = location6;
                                                                                str5 = originalPath;
                                                                                sendToPeer7 = sendToPeer3;
                                                                                lower_id2 = a;
                                                                                messageObject2 = 3;
                                                                                if (lower_id2 == 3) {
                                                                                    try {
                                                                                        if (tL_document.access_hash == 0) {
                                                                                            try {
                                                                                                performSendDelayedMessage(encryptedChat4);
                                                                                                messageObject2 = newMsgObj;
                                                                                            } catch (Throwable e62222222222222222222222222222222222222222222222NUM) {
                                                                                                th = e62222222222222222222222222222222222222222222222NUM;
                                                                                                type2 = lower_id2;
                                                                                                delayedMessage = encryptedChat4;
                                                                                                str2 = str5;
                                                                                                str = params;
                                                                                                message5 = message;
                                                                                                sendToPeer4 = encryptedChat2;
                                                                                                params4 = hashMap4;
                                                                                                inputPeer = sendToPeer7;
                                                                                                user2 = user;
                                                                                                messageObject = newMsgObj;
                                                                                                photo2 = photo;
                                                                                                videoEditedInfo2 = videoEditedInfo;
                                                                                                location2 = location;
                                                                                                messageObject6 = retryMessageObject;
                                                                                                FileLog.m3e(th);
                                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                                if (messageObject != null) {
                                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                                }
                                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                                i6 = NotificationCenter.messageSendError;
                                                                                                objArr = new Object[1];
                                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                                instance.postNotificationName(i6, objArr);
                                                                                                processSentMessage(newMsg3.id);
                                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                                messageMedia = location2;
                                                                                                tL_document2 = tL_document;
                                                                                            }
                                                                                        }
                                                                                        messageObject2 = newMsgObj;
                                                                                        try {
                                                                                            performSendMessageRequest(reqSend7, messageObject2, null);
                                                                                        } catch (Exception e26) {
                                                                                            e62222222222222222222222222222222222222222222222NUM = e26;
                                                                                            type2 = lower_id2;
                                                                                            delayedMessage3 = encryptedChat4;
                                                                                            str2 = str5;
                                                                                            str = params;
                                                                                            message5 = message;
                                                                                            sendToPeer4 = encryptedChat2;
                                                                                            inputPeer = sendToPeer7;
                                                                                            user2 = user;
                                                                                            photo2 = photo;
                                                                                            videoEditedInfo2 = videoEditedInfo;
                                                                                            location2 = location;
                                                                                            messageObject6 = retryMessageObject;
                                                                                            messageObject = messageObject2;
                                                                                            th = e62222222222222222222222222222222222222222222222NUM;
                                                                                            FileLog.m3e(th);
                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                            if (messageObject != null) {
                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                            }
                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                            objArr = new Object[1];
                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                            instance.postNotificationName(i6, objArr);
                                                                                            processSentMessage(newMsg3.id);
                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                            messageMedia = location2;
                                                                                            tL_document2 = tL_document;
                                                                                        }
                                                                                    } catch (Throwable e622222222222222222222222222222222222222222222222NUM) {
                                                                                        type2 = lower_id2;
                                                                                        delayedMessage3 = encryptedChat4;
                                                                                        str2 = str5;
                                                                                        str = params;
                                                                                        message5 = message;
                                                                                        sendToPeer4 = encryptedChat2;
                                                                                        params4 = hashMap4;
                                                                                        inputPeer = sendToPeer7;
                                                                                        user2 = user;
                                                                                        photo2 = photo;
                                                                                        videoEditedInfo2 = videoEditedInfo;
                                                                                        location2 = location;
                                                                                        messageObject6 = retryMessageObject;
                                                                                        messageObject = newMsgObj;
                                                                                        th = e622222222222222222222222222222222222222222222222NUM;
                                                                                        FileLog.m3e(th);
                                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                        if (messageObject != null) {
                                                                                            messageObject.messageOwner.send_state = 2;
                                                                                        }
                                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                        i6 = NotificationCenter.messageSendError;
                                                                                        objArr = new Object[1];
                                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                        instance.postNotificationName(i6, objArr);
                                                                                        processSentMessage(newMsg3.id);
                                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                                        messageMedia = location2;
                                                                                        tL_document2 = tL_document;
                                                                                    }
                                                                                }
                                                                                messageObject2 = newMsgObj;
                                                                                if (lower_id2 == 6) {
                                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                                } else if (lower_id2 == 7) {
                                                                                    if (tL_document.access_hash == 0 || encryptedChat4 == null) {
                                                                                        performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                                    } else {
                                                                                        performSendDelayedMessage(encryptedChat4);
                                                                                    }
                                                                                } else if (lower_id2 == 8) {
                                                                                    if (tL_document.access_hash == 0) {
                                                                                        performSendDelayedMessage(encryptedChat4);
                                                                                    } else {
                                                                                        performSendMessageRequest(reqSend7, messageObject2, null);
                                                                                    }
                                                                                }
                                                                                encryptedChat7 = encryptedChat4;
                                                                                str2 = str5;
                                                                                tL_document2 = tL_document;
                                                                                originalPath7 = params5;
                                                                                str = params;
                                                                                encryptedChat4 = message;
                                                                                sendToPeer4 = encryptedChat2;
                                                                                params6 = hashMap4;
                                                                                arrayList5 = arrayList3;
                                                                                inputPeer = sendToPeer7;
                                                                                user2 = user;
                                                                                photo2 = photo;
                                                                                videoEditedInfo3 = videoEditedInfo;
                                                                                messageMedia = location;
                                                                                messageObject6 = retryMessageObject;
                                                                                type4 = lower_id2;
                                                                                message3 = newMsg3;
                                                                                webPage5 = webPage2;
                                                                                newMsg3 = peer;
                                                                                params4 = params6;
                                                                                encryptedChat5 = encryptedChat4;
                                                                                newMsg3 = message3;
                                                                                params6 = type4;
                                                                                arrayList3 = arrayList5;
                                                                                type4 = messageObject2;
                                                                            }
                                                                            photo = tL_photo2;
                                                                            lower_id2 = a;
                                                                            messageObject2 = messageObject;
                                                                            message = message8;
                                                                            i2 = high_id2;
                                                                            i7 = i3;
                                                                            r91 = groupId4;
                                                                            videoEditedInfo = videoEditedInfo4;
                                                                            user = user4;
                                                                        }
                                                                        location = location6;
                                                                        str5 = originalPath;
                                                                        sendToPeer7 = sendToPeer3;
                                                                        encryptedChat7 = encryptedChat4;
                                                                        str2 = str5;
                                                                        tL_document2 = tL_document;
                                                                        originalPath7 = params5;
                                                                        str = params;
                                                                        encryptedChat4 = message;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        params6 = hashMap4;
                                                                        arrayList5 = arrayList3;
                                                                        inputPeer = sendToPeer7;
                                                                        user2 = user;
                                                                        photo2 = photo;
                                                                        videoEditedInfo3 = videoEditedInfo;
                                                                        messageMedia = location;
                                                                        messageObject6 = retryMessageObject;
                                                                        type4 = lower_id2;
                                                                        message3 = newMsg3;
                                                                        webPage5 = webPage2;
                                                                        newMsg3 = peer;
                                                                        params4 = params6;
                                                                        encryptedChat5 = encryptedChat4;
                                                                        newMsg3 = message3;
                                                                        params6 = type4;
                                                                        arrayList3 = arrayList5;
                                                                        type4 = messageObject2;
                                                                    } catch (Exception e27) {
                                                                        e622222222222222222222222222222222222222222222222NUM = e27;
                                                                        user2 = user8;
                                                                        delayedMessage3 = delayedMessage5;
                                                                        messageObject = newMsgObj3;
                                                                        location2 = location5;
                                                                        hashMap3 = params4;
                                                                        str = caption2;
                                                                        message5 = message8;
                                                                        photo2 = photo;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        arrayList3 = arrayList;
                                                                        params4 = hashMap2;
                                                                        inputPeer = sendToPeer2;
                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                        messageObject6 = retryMessageObject;
                                                                        tL_document = groupId;
                                                                        th = e622222222222222222222222222222222222222222222222NUM;
                                                                        FileLog.m3e(th);
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                        if (messageObject != null) {
                                                                            messageObject.messageOwner.send_state = 2;
                                                                        }
                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                        i6 = NotificationCenter.messageSendError;
                                                                        objArr = new Object[1];
                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                        instance.postNotificationName(i6, objArr);
                                                                        processSentMessage(newMsg3.id);
                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                        messageMedia = location2;
                                                                        tL_document2 = tL_document;
                                                                    }
                                                                } catch (Exception e28) {
                                                                    e622222222222222222222222222222222222222222222222NUM = e28;
                                                                    newMsgObj3 = messageObject3;
                                                                    user2 = user8;
                                                                    delayedMessage3 = delayedMessage5;
                                                                    messageObject = newMsgObj3;
                                                                    sendToPeer4 = encryptedChat;
                                                                    location2 = location5;
                                                                    hashMap3 = params4;
                                                                    i7 = i3;
                                                                    params4 = hashMap2;
                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                    messageObject6 = retryMessageObject;
                                                                    tL_document = groupId;
                                                                    th = e622222222222222222222222222222222222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            } catch (Exception e29) {
                                                                e622222222222222222222222222222222222222222222222NUM = e29;
                                                                newMsgObj3 = messageObject3;
                                                                user2 = user8;
                                                                messageObject = newMsgObj3;
                                                                sendToPeer4 = encryptedChat;
                                                                location2 = location5;
                                                                hashMap3 = params4;
                                                                i7 = i3;
                                                                params4 = hashMap2;
                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                messageObject6 = retryMessageObject;
                                                                tL_document = groupId;
                                                                th = e622222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        newMsgObj3 = messageObject3;
                                                        try {
                                                            media2 = new TL_inputMediaDocument();
                                                            media2.id = new TL_inputDocument();
                                                            newMsgObj2 = newMsgObj3;
                                                            try {
                                                                media2.id.id = groupId.id;
                                                                media2.id.access_hash = groupId.access_hash;
                                                                document3 = groupId;
                                                                user4 = user8;
                                                                type = type2;
                                                                encryptedChat2 = encryptedChat;
                                                                inputMedia = media2;
                                                                encryptedChat8 = delayedMessage3;
                                                                tL_photo2 = photo;
                                                                obj3 = hashMap2;
                                                                messageObject = newMsgObj2;
                                                                j3 = peer;
                                                                name = path;
                                                                if (arrayList != null) {
                                                                    location6 = location5;
                                                                    str3 = params4;
                                                                    hashMap4 = params;
                                                                    sendToPeers4 = arrayList;
                                                                    type2 = retryMessageObject;
                                                                    if (groupId4 != 0) {
                                                                        arrayList3 = sendToPeers4;
                                                                        params = caption2;
                                                                        sendToPeer8 = sendToPeer2;
                                                                        tL_document = document3;
                                                                        originalPath = str3;
                                                                        params5 = entities;
                                                                        reqSend6 = new TL_messages_sendMedia();
                                                                        reqSend6.peer = sendToPeer8;
                                                                        if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                            sendToPeer3 = sendToPeer8;
                                                                        } else {
                                                                            groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder2 = new StringBuilder();
                                                                            sendToPeer3 = sendToPeer8;
                                                                            stringBuilder2.append("silent_");
                                                                            stringBuilder2.append(j3);
                                                                            reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                                        }
                                                                        if (newMsg3.reply_to_msg_id != null) {
                                                                            reqSend6.flags |= 1;
                                                                            reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                        }
                                                                        reqSend6.random_id = newMsg3.random_id;
                                                                        reqSend6.media = inputMedia;
                                                                        reqSend6.message = params;
                                                                        if (params5 != null) {
                                                                            if (entities.isEmpty() == null) {
                                                                                reqSend6.entities = params5;
                                                                                reqSend6.flags |= 8;
                                                                            }
                                                                        }
                                                                        if (encryptedChat4 != null) {
                                                                            encryptedChat4.sendRequest = reqSend6;
                                                                        }
                                                                    } else {
                                                                        if (encryptedChat4.sendRequest != null) {
                                                                            groupId = new TL_messages_sendMultiMedia();
                                                                            sendToPeer8 = sendToPeer2;
                                                                            groupId.peer = sendToPeer8;
                                                                            if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder3 = new StringBuilder();
                                                                                stringBuilder3.append("silent_");
                                                                                stringBuilder3.append(j3);
                                                                                groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                            }
                                                                            if (newMsg3.reply_to_msg_id != 0) {
                                                                                groupId.flags |= 1;
                                                                                groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                            }
                                                                            encryptedChat4.sendRequest = groupId;
                                                                        } else {
                                                                            groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                            sendToPeer8 = sendToPeer2;
                                                                        }
                                                                        encryptedChat4.messageObjects.add(messageObject);
                                                                        encryptedChat4.messages.add(newMsg3);
                                                                        originalPath5 = str3;
                                                                        encryptedChat4.originalPaths.add(originalPath5);
                                                                        inputSingleMedia = new TL_inputSingleMedia();
                                                                        originalPath = originalPath5;
                                                                        inputSingleMedia.random_id = newMsg3.random_id;
                                                                        inputSingleMedia.media = inputMedia;
                                                                        params = caption2;
                                                                        inputSingleMedia.message = params;
                                                                        arrayList3 = sendToPeers4;
                                                                        tL_document = document3;
                                                                        params5 = entities;
                                                                        if (params5 != null) {
                                                                            if (entities.isEmpty()) {
                                                                                inputSingleMedia.entities = params5;
                                                                                inputSingleMedia.flags |= 1;
                                                                            }
                                                                        }
                                                                        groupId.multi_media.add(inputSingleMedia);
                                                                        reqSend6 = groupId;
                                                                        sendToPeer3 = sendToPeer8;
                                                                    }
                                                                } else {
                                                                    groupId = new TL_messages_sendBroadcast();
                                                                    random_ids2 = new ArrayList();
                                                                    a = 0;
                                                                    while (true) {
                                                                        location6 = location5;
                                                                        sendToPeers4 = arrayList;
                                                                        if (a >= sendToPeers4.size()) {
                                                                            break;
                                                                        }
                                                                        originalPath6 = params4;
                                                                        params8 = params;
                                                                        random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                                        a++;
                                                                        arrayList = sendToPeers4;
                                                                        location5 = location6;
                                                                        params4 = originalPath6;
                                                                        params = params8;
                                                                        name = path;
                                                                    }
                                                                    str3 = params4;
                                                                    hashMap4 = params;
                                                                    groupId.contacts = sendToPeers4;
                                                                    groupId.media = inputMedia;
                                                                    groupId.random_id = random_ids2;
                                                                    groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                                    if (encryptedChat4 != null) {
                                                                        encryptedChat4.sendRequest = groupId;
                                                                    }
                                                                    reqSend6 = groupId;
                                                                    type2 = retryMessageObject;
                                                                    if (type2 == 0) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                                    }
                                                                    arrayList3 = sendToPeers4;
                                                                    params = caption2;
                                                                    sendToPeer3 = sendToPeer2;
                                                                    tL_document = document3;
                                                                    originalPath = str3;
                                                                    params5 = entities;
                                                                }
                                                                reqSend7 = reqSend6;
                                                                if (groupId4 != 0) {
                                                                    a = type;
                                                                    if (a == 1) {
                                                                        performSendMessageRequest(reqSend7, messageObject, 0);
                                                                    } else if (a == 2) {
                                                                        photo = tL_photo2;
                                                                        inputMedia2 = inputMedia;
                                                                        newMsgObj = messageObject;
                                                                        message = message8;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        r91 = groupId4;
                                                                        videoEditedInfo = videoEditedInfo4;
                                                                        user = user4;
                                                                        location = location6;
                                                                        str5 = originalPath;
                                                                        sendToPeer7 = sendToPeer3;
                                                                        lower_id2 = a;
                                                                        messageObject2 = 3;
                                                                        if (lower_id2 == 3) {
                                                                            messageObject2 = newMsgObj;
                                                                            if (lower_id2 == 6) {
                                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                                            } else if (lower_id2 == 7) {
                                                                                if (tL_document.access_hash == 0) {
                                                                                }
                                                                                performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                            } else if (lower_id2 == 8) {
                                                                                if (tL_document.access_hash == 0) {
                                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                                } else {
                                                                                    performSendDelayedMessage(encryptedChat4);
                                                                                }
                                                                            }
                                                                        } else if (tL_document.access_hash == 0) {
                                                                            messageObject2 = newMsgObj;
                                                                            performSendMessageRequest(reqSend7, messageObject2, null);
                                                                        } else {
                                                                            performSendDelayedMessage(encryptedChat4);
                                                                            messageObject2 = newMsgObj;
                                                                        }
                                                                        encryptedChat7 = encryptedChat4;
                                                                        str2 = str5;
                                                                        tL_document2 = tL_document;
                                                                        originalPath7 = params5;
                                                                        str = params;
                                                                        encryptedChat4 = message;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        params6 = hashMap4;
                                                                        arrayList5 = arrayList3;
                                                                        inputPeer = sendToPeer7;
                                                                        user2 = user;
                                                                        photo2 = photo;
                                                                        videoEditedInfo3 = videoEditedInfo;
                                                                        messageMedia = location;
                                                                        messageObject6 = retryMessageObject;
                                                                        type4 = lower_id2;
                                                                        message3 = newMsg3;
                                                                        webPage5 = webPage2;
                                                                        newMsg3 = peer;
                                                                        params4 = params6;
                                                                        encryptedChat5 = encryptedChat4;
                                                                        newMsg3 = message3;
                                                                        params6 = type4;
                                                                        arrayList3 = arrayList5;
                                                                        type4 = messageObject2;
                                                                    } else if (tL_photo2.access_hash == 0) {
                                                                        r91 = groupId4;
                                                                        user = user4;
                                                                        sendToPeer7 = sendToPeer3;
                                                                        photo = tL_photo2;
                                                                        newMsgObj = messageObject;
                                                                        type5 = a;
                                                                        videoEditedInfo = videoEditedInfo4;
                                                                        i7 = i3;
                                                                        location = location6;
                                                                        i2 = high_id2;
                                                                        message = message8;
                                                                        str5 = originalPath;
                                                                        performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                                        messageObject2 = newMsgObj;
                                                                        lower_id2 = type5;
                                                                        encryptedChat7 = encryptedChat4;
                                                                        str2 = str5;
                                                                        tL_document2 = tL_document;
                                                                        originalPath7 = params5;
                                                                        str = params;
                                                                        encryptedChat4 = message;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        params6 = hashMap4;
                                                                        arrayList5 = arrayList3;
                                                                        inputPeer = sendToPeer7;
                                                                        user2 = user;
                                                                        photo2 = photo;
                                                                        videoEditedInfo3 = videoEditedInfo;
                                                                        messageMedia = location;
                                                                        messageObject6 = retryMessageObject;
                                                                        type4 = lower_id2;
                                                                        message3 = newMsg3;
                                                                        webPage5 = webPage2;
                                                                        newMsg3 = peer;
                                                                        params4 = params6;
                                                                        encryptedChat5 = encryptedChat4;
                                                                        newMsg3 = message3;
                                                                        params6 = type4;
                                                                        arrayList3 = arrayList5;
                                                                        type4 = messageObject2;
                                                                    } else {
                                                                        performSendDelayedMessage(encryptedChat4);
                                                                    }
                                                                    photo = tL_photo2;
                                                                    lower_id2 = a;
                                                                    messageObject2 = messageObject;
                                                                    message = message8;
                                                                    i2 = high_id2;
                                                                    i7 = i3;
                                                                    r91 = groupId4;
                                                                    videoEditedInfo = videoEditedInfo4;
                                                                    user = user4;
                                                                } else {
                                                                    performSendDelayedMessage(encryptedChat4);
                                                                    photo = tL_photo2;
                                                                    messageObject2 = messageObject;
                                                                    message = message8;
                                                                    i2 = high_id2;
                                                                    i7 = i3;
                                                                    videoEditedInfo = videoEditedInfo4;
                                                                    user = user4;
                                                                    lower_id2 = type;
                                                                }
                                                                location = location6;
                                                                str5 = originalPath;
                                                                sendToPeer7 = sendToPeer3;
                                                                encryptedChat7 = encryptedChat4;
                                                                str2 = str5;
                                                                tL_document2 = tL_document;
                                                                originalPath7 = params5;
                                                                str = params;
                                                                encryptedChat4 = message;
                                                                sendToPeer4 = encryptedChat2;
                                                                params6 = hashMap4;
                                                                arrayList5 = arrayList3;
                                                                inputPeer = sendToPeer7;
                                                                user2 = user;
                                                                photo2 = photo;
                                                                videoEditedInfo3 = videoEditedInfo;
                                                                messageMedia = location;
                                                                messageObject6 = retryMessageObject;
                                                                type4 = lower_id2;
                                                                message3 = newMsg3;
                                                                webPage5 = webPage2;
                                                                newMsg3 = peer;
                                                                params4 = params6;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                arrayList3 = arrayList5;
                                                                type4 = messageObject2;
                                                            } catch (Exception e30) {
                                                                e622222222222222222222222222222222222222222222222NUM = e30;
                                                                user2 = user8;
                                                                sendToPeer4 = encryptedChat;
                                                                location2 = location5;
                                                                hashMap3 = params4;
                                                                str = caption2;
                                                                message5 = message8;
                                                                photo2 = photo;
                                                                i2 = high_id2;
                                                                i7 = i3;
                                                                arrayList3 = arrayList;
                                                                params4 = hashMap2;
                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                messageObject = newMsgObj2;
                                                                messageObject6 = retryMessageObject;
                                                                tL_document = groupId;
                                                                th = e622222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        } catch (Throwable e6222222222222222222222222222222222222222222222222NUM) {
                                                            newMsgObj2 = newMsgObj3;
                                                            user2 = user8;
                                                            sendToPeer4 = encryptedChat;
                                                            location2 = location5;
                                                            hashMap3 = params4;
                                                            str = caption2;
                                                            message5 = message8;
                                                            photo2 = photo;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            arrayList3 = arrayList;
                                                            params4 = hashMap2;
                                                            inputPeer = sendToPeer2;
                                                            videoEditedInfo2 = videoEditedInfo4;
                                                            messageObject = newMsgObj2;
                                                            messageObject6 = retryMessageObject;
                                                            tL_document = groupId;
                                                            th = e6222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } catch (Throwable e62222222222222222222222222222222222222222222222222NUM) {
                                                        user2 = user8;
                                                        sendToPeer4 = encryptedChat;
                                                        location2 = location5;
                                                        hashMap3 = params4;
                                                        str = caption2;
                                                        message5 = message8;
                                                        photo2 = photo;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        params4 = hashMap2;
                                                        inputPeer = sendToPeer2;
                                                        videoEditedInfo2 = videoEditedInfo4;
                                                        messageObject = messageObject3;
                                                        messageObject6 = retryMessageObject;
                                                        tL_document = groupId;
                                                        th = e62222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                } else {
                                                    document3 = groupId;
                                                    user4 = user8;
                                                    type = type2;
                                                    encryptedChat2 = encryptedChat;
                                                    encryptedChat4 = delayedMessage3;
                                                    tL_photo2 = photo;
                                                    params = hashMap2;
                                                    messageObject = messageObject3;
                                                    inputMedia = inputMedia4;
                                                    type2 = path;
                                                    if (arrayList != null) {
                                                        groupId = new TL_messages_sendBroadcast();
                                                        random_ids2 = new ArrayList();
                                                        a = 0;
                                                        while (true) {
                                                            location6 = location5;
                                                            sendToPeers4 = arrayList;
                                                            if (a >= sendToPeers4.size()) {
                                                                break;
                                                            }
                                                            originalPath6 = params4;
                                                            params8 = params;
                                                            random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                            a++;
                                                            arrayList = sendToPeers4;
                                                            location5 = location6;
                                                            params4 = originalPath6;
                                                            params = params8;
                                                            name = path;
                                                        }
                                                        str3 = params4;
                                                        hashMap4 = params;
                                                        groupId.contacts = sendToPeers4;
                                                        groupId.media = inputMedia;
                                                        groupId.random_id = random_ids2;
                                                        groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                        if (encryptedChat4 != null) {
                                                            encryptedChat4.sendRequest = groupId;
                                                        }
                                                        reqSend6 = groupId;
                                                        type2 = retryMessageObject;
                                                        if (type2 == 0) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                        }
                                                        arrayList3 = sendToPeers4;
                                                        params = caption2;
                                                        sendToPeer3 = sendToPeer2;
                                                        tL_document = document3;
                                                        originalPath = str3;
                                                        params5 = entities;
                                                    } else {
                                                        location6 = location5;
                                                        str3 = params4;
                                                        hashMap4 = params;
                                                        sendToPeers4 = arrayList;
                                                        type2 = retryMessageObject;
                                                        if (groupId4 != 0) {
                                                            if (encryptedChat4.sendRequest != null) {
                                                                groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                sendToPeer8 = sendToPeer2;
                                                            } else {
                                                                groupId = new TL_messages_sendMultiMedia();
                                                                sendToPeer8 = sendToPeer2;
                                                                groupId.peer = sendToPeer8;
                                                                if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder3 = new StringBuilder();
                                                                    stringBuilder3.append("silent_");
                                                                    stringBuilder3.append(j3);
                                                                    groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                }
                                                                if (newMsg3.reply_to_msg_id != 0) {
                                                                    groupId.flags |= 1;
                                                                    groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                }
                                                                encryptedChat4.sendRequest = groupId;
                                                            }
                                                            encryptedChat4.messageObjects.add(messageObject);
                                                            encryptedChat4.messages.add(newMsg3);
                                                            originalPath5 = str3;
                                                            encryptedChat4.originalPaths.add(originalPath5);
                                                            inputSingleMedia = new TL_inputSingleMedia();
                                                            originalPath = originalPath5;
                                                            inputSingleMedia.random_id = newMsg3.random_id;
                                                            inputSingleMedia.media = inputMedia;
                                                            params = caption2;
                                                            inputSingleMedia.message = params;
                                                            arrayList3 = sendToPeers4;
                                                            tL_document = document3;
                                                            params5 = entities;
                                                            if (params5 != null) {
                                                                if (entities.isEmpty()) {
                                                                    inputSingleMedia.entities = params5;
                                                                    inputSingleMedia.flags |= 1;
                                                                }
                                                            }
                                                            groupId.multi_media.add(inputSingleMedia);
                                                            reqSend6 = groupId;
                                                            sendToPeer3 = sendToPeer8;
                                                        } else {
                                                            arrayList3 = sendToPeers4;
                                                            params = caption2;
                                                            sendToPeer8 = sendToPeer2;
                                                            tL_document = document3;
                                                            originalPath = str3;
                                                            params5 = entities;
                                                            reqSend6 = new TL_messages_sendMedia();
                                                            reqSend6.peer = sendToPeer8;
                                                            if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder2 = new StringBuilder();
                                                                sendToPeer3 = sendToPeer8;
                                                                stringBuilder2.append("silent_");
                                                                stringBuilder2.append(j3);
                                                                reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                            } else {
                                                                sendToPeer3 = sendToPeer8;
                                                            }
                                                            if (newMsg3.reply_to_msg_id != null) {
                                                                reqSend6.flags |= 1;
                                                                reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                            }
                                                            reqSend6.random_id = newMsg3.random_id;
                                                            reqSend6.media = inputMedia;
                                                            reqSend6.message = params;
                                                            if (params5 != null) {
                                                                if (entities.isEmpty() == null) {
                                                                    reqSend6.entities = params5;
                                                                    reqSend6.flags |= 8;
                                                                }
                                                            }
                                                            if (encryptedChat4 != null) {
                                                                encryptedChat4.sendRequest = reqSend6;
                                                            }
                                                        }
                                                    }
                                                    reqSend7 = reqSend6;
                                                    if (groupId4 != 0) {
                                                        performSendDelayedMessage(encryptedChat4);
                                                        photo = tL_photo2;
                                                        messageObject2 = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                        lower_id2 = type;
                                                    } else {
                                                        a = type;
                                                        if (a == 1) {
                                                            performSendMessageRequest(reqSend7, messageObject, 0);
                                                        } else if (a == 2) {
                                                            photo = tL_photo2;
                                                            inputMedia2 = inputMedia;
                                                            newMsgObj = messageObject;
                                                            message = message8;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            r91 = groupId4;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            user = user4;
                                                            location = location6;
                                                            str5 = originalPath;
                                                            sendToPeer7 = sendToPeer3;
                                                            lower_id2 = a;
                                                            messageObject2 = 3;
                                                            if (lower_id2 == 3) {
                                                                messageObject2 = newMsgObj;
                                                                if (lower_id2 == 6) {
                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                } else if (lower_id2 == 7) {
                                                                    if (tL_document.access_hash == 0) {
                                                                    }
                                                                    performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                } else if (lower_id2 == 8) {
                                                                    if (tL_document.access_hash == 0) {
                                                                        performSendDelayedMessage(encryptedChat4);
                                                                    } else {
                                                                        performSendMessageRequest(reqSend7, messageObject2, null);
                                                                    }
                                                                }
                                                            } else if (tL_document.access_hash == 0) {
                                                                performSendDelayedMessage(encryptedChat4);
                                                                messageObject2 = newMsgObj;
                                                            } else {
                                                                messageObject2 = newMsgObj;
                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                            }
                                                            encryptedChat7 = encryptedChat4;
                                                            str2 = str5;
                                                            tL_document2 = tL_document;
                                                            originalPath7 = params5;
                                                            str = params;
                                                            encryptedChat4 = message;
                                                            sendToPeer4 = encryptedChat2;
                                                            params6 = hashMap4;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo3 = videoEditedInfo;
                                                            messageMedia = location;
                                                            messageObject6 = retryMessageObject;
                                                            type4 = lower_id2;
                                                            message3 = newMsg3;
                                                            webPage5 = webPage2;
                                                            newMsg3 = peer;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        } else if (tL_photo2.access_hash == 0) {
                                                            performSendDelayedMessage(encryptedChat4);
                                                        } else {
                                                            r91 = groupId4;
                                                            user = user4;
                                                            sendToPeer7 = sendToPeer3;
                                                            photo = tL_photo2;
                                                            newMsgObj = messageObject;
                                                            type5 = a;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            i7 = i3;
                                                            location = location6;
                                                            i2 = high_id2;
                                                            message = message8;
                                                            str5 = originalPath;
                                                            performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                            messageObject2 = newMsgObj;
                                                            lower_id2 = type5;
                                                            encryptedChat7 = encryptedChat4;
                                                            str2 = str5;
                                                            tL_document2 = tL_document;
                                                            originalPath7 = params5;
                                                            str = params;
                                                            encryptedChat4 = message;
                                                            sendToPeer4 = encryptedChat2;
                                                            params6 = hashMap4;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo3 = videoEditedInfo;
                                                            messageMedia = location;
                                                            messageObject6 = retryMessageObject;
                                                            type4 = lower_id2;
                                                            message3 = newMsg3;
                                                            webPage5 = webPage2;
                                                            newMsg3 = peer;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        }
                                                        photo = tL_photo2;
                                                        lower_id2 = a;
                                                        messageObject2 = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        r91 = groupId4;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                    }
                                                    location = location6;
                                                    str5 = originalPath;
                                                    sendToPeer7 = sendToPeer3;
                                                    encryptedChat7 = encryptedChat4;
                                                    str2 = str5;
                                                    tL_document2 = tL_document;
                                                    originalPath7 = params5;
                                                    str = params;
                                                    encryptedChat4 = message;
                                                    sendToPeer4 = encryptedChat2;
                                                    params6 = hashMap4;
                                                    arrayList5 = arrayList3;
                                                    inputPeer = sendToPeer7;
                                                    user2 = user;
                                                    photo2 = photo;
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    messageMedia = location;
                                                    messageObject6 = retryMessageObject;
                                                    type4 = lower_id2;
                                                    message3 = newMsg3;
                                                    webPage5 = webPage2;
                                                    newMsg3 = peer;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                }
                                                try {
                                                    if (groupId.access_hash == 0) {
                                                        if (encryptedChat == null && params4 != null) {
                                                            try {
                                                                if (params4.length() > 0 && params4.startsWith("http") && hashMap2 != null) {
                                                                    media2 = new TL_inputMediaGifExternal();
                                                                    params = hashMap2;
                                                                    try {
                                                                        String[] args = ((String) params.get(UpdateFragment.FRAGMENT_URL)).split("\\|");
                                                                        if (args.length == 2) {
                                                                            ((TL_inputMediaGifExternal) media2).url = args[0];
                                                                            media2.f39q = args[1];
                                                                        }
                                                                        user4 = user8;
                                                                        messageObject = newMsgObj2;
                                                                        j3 = peer;
                                                                        try {
                                                                            media2.mime_type = groupId.mime_type;
                                                                            media2.attributes = groupId.attributes;
                                                                            document3 = groupId;
                                                                            inputMedia = media2;
                                                                            type = type2;
                                                                            encryptedChat2 = encryptedChat;
                                                                        } catch (Exception e31) {
                                                                            e62222222222222222222222222222222222222222222222222NUM = e31;
                                                                            sendToPeer4 = encryptedChat;
                                                                            location2 = location5;
                                                                            hashMap3 = params4;
                                                                            originalPath2 = r14;
                                                                            i7 = i3;
                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                            user2 = user4;
                                                                            messageObject6 = retryMessageObject;
                                                                            tL_document = groupId;
                                                                            th = e62222222222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    } catch (Exception e32) {
                                                                        e62222222222222222222222222222222222222222222222222NUM = e32;
                                                                        user2 = user8;
                                                                        sendToPeer4 = encryptedChat;
                                                                        location2 = location5;
                                                                        hashMap3 = params4;
                                                                        str = caption2;
                                                                        message5 = message8;
                                                                        photo2 = photo;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        arrayList3 = arrayList;
                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                        messageObject = newMsgObj2;
                                                                        messageObject6 = retryMessageObject;
                                                                        tL_document = groupId;
                                                                        th = e62222222222222222222222222222222222222222222222222NUM;
                                                                        FileLog.m3e(th);
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                        if (messageObject != null) {
                                                                            messageObject.messageOwner.send_state = 2;
                                                                        }
                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                        i6 = NotificationCenter.messageSendError;
                                                                        objArr = new Object[1];
                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                        instance.postNotificationName(i6, objArr);
                                                                        processSentMessage(newMsg3.id);
                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                        messageMedia = location2;
                                                                        tL_document2 = tL_document;
                                                                    }
                                                                }
                                                            } catch (Throwable e622222222222222222222222222222222222222222222222222NUM) {
                                                                user2 = user8;
                                                                sendToPeer4 = encryptedChat;
                                                                location2 = location5;
                                                                hashMap3 = params4;
                                                                params4 = hashMap2;
                                                                str = caption2;
                                                                message5 = message8;
                                                                photo2 = photo;
                                                                i2 = high_id2;
                                                                i7 = i3;
                                                                arrayList3 = arrayList;
                                                                inputPeer = sendToPeer2;
                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                messageObject = newMsgObj2;
                                                                messageObject6 = retryMessageObject;
                                                                tL_document = groupId;
                                                                th = e622222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        HashMap<String, String> hashMap6 = hashMap2;
                                                        try {
                                                            media2 = new TL_inputMediaUploadedDocument();
                                                            if (i6 != 0) {
                                                                media2.ttl_seconds = i6;
                                                                newMsg3.ttl = i6;
                                                                media2.flags |= 2;
                                                            }
                                                            j3 = peer;
                                                            try {
                                                                videoEditedInfo2 = new DelayedMessage(j3);
                                                                try {
                                                                    videoEditedInfo2.originalPath = params4;
                                                                    videoEditedInfo2.type = 2;
                                                                    messageObject = newMsgObj2;
                                                                    try {
                                                                        videoEditedInfo2.obj = messageObject;
                                                                        user4 = user8;
                                                                        try {
                                                                            videoEditedInfo2.location = groupId.thumb.location;
                                                                            delayedMessage3 = videoEditedInfo2;
                                                                            media2.mime_type = groupId.mime_type;
                                                                            media2.attributes = groupId.attributes;
                                                                            document3 = groupId;
                                                                            inputMedia = media2;
                                                                            type = type2;
                                                                            encryptedChat2 = encryptedChat;
                                                                        } catch (Exception e33) {
                                                                            e622222222222222222222222222222222222222222222222222NUM = e33;
                                                                            delayedMessage3 = videoEditedInfo2;
                                                                            sendToPeer4 = encryptedChat;
                                                                            location2 = location5;
                                                                            hashMap3 = params4;
                                                                            originalPath2 = r14;
                                                                            i7 = i3;
                                                                            videoEditedInfo2 = videoEditedInfo4;
                                                                            user2 = user4;
                                                                            messageObject6 = retryMessageObject;
                                                                            tL_document = groupId;
                                                                            th = e622222222222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    } catch (Throwable e6222222222222222222222222222222222222222222222222222NUM) {
                                                                        user4 = user8;
                                                                        delayedMessage3 = videoEditedInfo2;
                                                                        sendToPeer4 = encryptedChat;
                                                                        location2 = location5;
                                                                        hashMap3 = params4;
                                                                        params4 = hashMap6;
                                                                        str = caption2;
                                                                        message5 = message8;
                                                                        photo2 = photo;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        arrayList3 = arrayList;
                                                                        inputPeer = sendToPeer2;
                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                        user2 = user4;
                                                                        messageObject6 = retryMessageObject;
                                                                        tL_document = groupId;
                                                                        th = e6222222222222222222222222222222222222222222222222222NUM;
                                                                        FileLog.m3e(th);
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                        if (messageObject != null) {
                                                                            messageObject.messageOwner.send_state = 2;
                                                                        }
                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                        i6 = NotificationCenter.messageSendError;
                                                                        objArr = new Object[1];
                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                        instance.postNotificationName(i6, objArr);
                                                                        processSentMessage(newMsg3.id);
                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                        messageMedia = location2;
                                                                        tL_document2 = tL_document;
                                                                    }
                                                                } catch (Exception e34) {
                                                                    e6222222222222222222222222222222222222222222222222222NUM = e34;
                                                                    user4 = user8;
                                                                    messageObject = newMsgObj2;
                                                                    delayedMessage3 = videoEditedInfo2;
                                                                    sendToPeer4 = encryptedChat;
                                                                    location2 = location5;
                                                                    hashMap3 = params4;
                                                                    params4 = hashMap6;
                                                                    i7 = i3;
                                                                    videoEditedInfo2 = videoEditedInfo4;
                                                                    user2 = user4;
                                                                    messageObject6 = retryMessageObject;
                                                                    tL_document = groupId;
                                                                    th = e6222222222222222222222222222222222222222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            } catch (Exception e35) {
                                                                e6222222222222222222222222222222222222222222222222222NUM = e35;
                                                                user4 = user8;
                                                                messageObject = newMsgObj2;
                                                                sendToPeer4 = encryptedChat;
                                                                location2 = location5;
                                                                hashMap3 = params4;
                                                                params4 = hashMap6;
                                                                i7 = i3;
                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                user2 = user4;
                                                                messageObject6 = retryMessageObject;
                                                                tL_document = groupId;
                                                                th = e6222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        } catch (Exception e36) {
                                                            e6222222222222222222222222222222222222222222222222222NUM = e36;
                                                            user4 = user8;
                                                            messageObject = newMsgObj2;
                                                            j3 = peer;
                                                            sendToPeer4 = encryptedChat;
                                                            location2 = location5;
                                                            hashMap3 = params4;
                                                            params4 = hashMap6;
                                                            i7 = i3;
                                                            videoEditedInfo2 = videoEditedInfo4;
                                                            user2 = user4;
                                                            messageObject6 = retryMessageObject;
                                                            tL_document = groupId;
                                                            th = e6222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    }
                                                    user4 = user8;
                                                    params = hashMap2;
                                                    messageObject = newMsgObj2;
                                                    j3 = peer;
                                                    try {
                                                        media = new TL_inputMediaDocument();
                                                        media.id = new TL_inputDocument();
                                                        type = type2;
                                                        encryptedChat2 = encryptedChat;
                                                        try {
                                                            media.id.id = groupId.id;
                                                            media.id.access_hash = groupId.access_hash;
                                                            document3 = groupId;
                                                            inputMedia = media;
                                                        } catch (Exception e37) {
                                                            e6222222222222222222222222222222222222222222222222222NUM = e37;
                                                            location2 = location5;
                                                            hashMap3 = params4;
                                                            originalPath5 = params;
                                                            str = caption2;
                                                            message5 = message8;
                                                            photo2 = photo;
                                                            i7 = i3;
                                                            videoEditedInfo2 = videoEditedInfo4;
                                                            user2 = user4;
                                                            sendToPeer4 = encryptedChat2;
                                                            type2 = type;
                                                            messageObject6 = retryMessageObject;
                                                            tL_document = groupId;
                                                            th = e6222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } catch (Throwable e62222222222222222222222222222222222222222222222222222NUM) {
                                                        type = type2;
                                                        sendToPeer4 = encryptedChat;
                                                        location2 = location5;
                                                        hashMap3 = params4;
                                                        originalPath5 = params;
                                                        str = caption2;
                                                        message5 = message8;
                                                        photo2 = photo;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        inputPeer = sendToPeer2;
                                                        videoEditedInfo2 = videoEditedInfo4;
                                                        user2 = user4;
                                                        messageObject6 = retryMessageObject;
                                                        tL_document = groupId;
                                                        th = e62222222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                    encryptedChat8 = delayedMessage3;
                                                    tL_photo2 = photo;
                                                    name = path;
                                                    if (arrayList != null) {
                                                        location6 = location5;
                                                        str3 = params4;
                                                        hashMap4 = params;
                                                        sendToPeers4 = arrayList;
                                                        type2 = retryMessageObject;
                                                        if (groupId4 != 0) {
                                                            arrayList3 = sendToPeers4;
                                                            params = caption2;
                                                            sendToPeer8 = sendToPeer2;
                                                            tL_document = document3;
                                                            originalPath = str3;
                                                            params5 = entities;
                                                            reqSend6 = new TL_messages_sendMedia();
                                                            reqSend6.peer = sendToPeer8;
                                                            if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                sendToPeer3 = sendToPeer8;
                                                            } else {
                                                                groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder2 = new StringBuilder();
                                                                sendToPeer3 = sendToPeer8;
                                                                stringBuilder2.append("silent_");
                                                                stringBuilder2.append(j3);
                                                                reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                            }
                                                            if (newMsg3.reply_to_msg_id != null) {
                                                                reqSend6.flags |= 1;
                                                                reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                            }
                                                            reqSend6.random_id = newMsg3.random_id;
                                                            reqSend6.media = inputMedia;
                                                            reqSend6.message = params;
                                                            if (params5 != null) {
                                                                if (entities.isEmpty() == null) {
                                                                    reqSend6.entities = params5;
                                                                    reqSend6.flags |= 8;
                                                                }
                                                            }
                                                            if (encryptedChat4 != null) {
                                                                encryptedChat4.sendRequest = reqSend6;
                                                            }
                                                        } else {
                                                            if (encryptedChat4.sendRequest != null) {
                                                                groupId = new TL_messages_sendMultiMedia();
                                                                sendToPeer8 = sendToPeer2;
                                                                groupId.peer = sendToPeer8;
                                                                if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder3 = new StringBuilder();
                                                                    stringBuilder3.append("silent_");
                                                                    stringBuilder3.append(j3);
                                                                    groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                }
                                                                if (newMsg3.reply_to_msg_id != 0) {
                                                                    groupId.flags |= 1;
                                                                    groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                }
                                                                encryptedChat4.sendRequest = groupId;
                                                            } else {
                                                                groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                sendToPeer8 = sendToPeer2;
                                                            }
                                                            encryptedChat4.messageObjects.add(messageObject);
                                                            encryptedChat4.messages.add(newMsg3);
                                                            originalPath5 = str3;
                                                            encryptedChat4.originalPaths.add(originalPath5);
                                                            inputSingleMedia = new TL_inputSingleMedia();
                                                            originalPath = originalPath5;
                                                            inputSingleMedia.random_id = newMsg3.random_id;
                                                            inputSingleMedia.media = inputMedia;
                                                            params = caption2;
                                                            inputSingleMedia.message = params;
                                                            arrayList3 = sendToPeers4;
                                                            tL_document = document3;
                                                            params5 = entities;
                                                            if (params5 != null) {
                                                                if (entities.isEmpty()) {
                                                                    inputSingleMedia.entities = params5;
                                                                    inputSingleMedia.flags |= 1;
                                                                }
                                                            }
                                                            groupId.multi_media.add(inputSingleMedia);
                                                            reqSend6 = groupId;
                                                            sendToPeer3 = sendToPeer8;
                                                        }
                                                    } else {
                                                        groupId = new TL_messages_sendBroadcast();
                                                        random_ids2 = new ArrayList();
                                                        a = 0;
                                                        while (true) {
                                                            location6 = location5;
                                                            sendToPeers4 = arrayList;
                                                            if (a >= sendToPeers4.size()) {
                                                                break;
                                                            }
                                                            originalPath6 = params4;
                                                            params8 = params;
                                                            random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                            a++;
                                                            arrayList = sendToPeers4;
                                                            location5 = location6;
                                                            params4 = originalPath6;
                                                            params = params8;
                                                            name = path;
                                                        }
                                                        str3 = params4;
                                                        hashMap4 = params;
                                                        groupId.contacts = sendToPeers4;
                                                        groupId.media = inputMedia;
                                                        groupId.random_id = random_ids2;
                                                        groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                        if (encryptedChat4 != null) {
                                                            encryptedChat4.sendRequest = groupId;
                                                        }
                                                        reqSend6 = groupId;
                                                        type2 = retryMessageObject;
                                                        if (type2 == 0) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                        }
                                                        arrayList3 = sendToPeers4;
                                                        params = caption2;
                                                        sendToPeer3 = sendToPeer2;
                                                        tL_document = document3;
                                                        originalPath = str3;
                                                        params5 = entities;
                                                    }
                                                    reqSend7 = reqSend6;
                                                    if (groupId4 != 0) {
                                                        a = type;
                                                        if (a == 1) {
                                                            performSendMessageRequest(reqSend7, messageObject, 0);
                                                        } else if (a == 2) {
                                                            photo = tL_photo2;
                                                            inputMedia2 = inputMedia;
                                                            newMsgObj = messageObject;
                                                            message = message8;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            r91 = groupId4;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            user = user4;
                                                            location = location6;
                                                            str5 = originalPath;
                                                            sendToPeer7 = sendToPeer3;
                                                            lower_id2 = a;
                                                            messageObject2 = 3;
                                                            if (lower_id2 == 3) {
                                                                messageObject2 = newMsgObj;
                                                                if (lower_id2 == 6) {
                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                } else if (lower_id2 == 7) {
                                                                    if (tL_document.access_hash == 0) {
                                                                    }
                                                                    performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                } else if (lower_id2 == 8) {
                                                                    if (tL_document.access_hash == 0) {
                                                                        performSendMessageRequest(reqSend7, messageObject2, null);
                                                                    } else {
                                                                        performSendDelayedMessage(encryptedChat4);
                                                                    }
                                                                }
                                                            } else if (tL_document.access_hash == 0) {
                                                                messageObject2 = newMsgObj;
                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                            } else {
                                                                performSendDelayedMessage(encryptedChat4);
                                                                messageObject2 = newMsgObj;
                                                            }
                                                            encryptedChat7 = encryptedChat4;
                                                            str2 = str5;
                                                            tL_document2 = tL_document;
                                                            originalPath7 = params5;
                                                            str = params;
                                                            encryptedChat4 = message;
                                                            sendToPeer4 = encryptedChat2;
                                                            params6 = hashMap4;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo3 = videoEditedInfo;
                                                            messageMedia = location;
                                                            messageObject6 = retryMessageObject;
                                                            type4 = lower_id2;
                                                            message3 = newMsg3;
                                                            webPage5 = webPage2;
                                                            newMsg3 = peer;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        } else if (tL_photo2.access_hash == 0) {
                                                            r91 = groupId4;
                                                            user = user4;
                                                            sendToPeer7 = sendToPeer3;
                                                            photo = tL_photo2;
                                                            newMsgObj = messageObject;
                                                            type5 = a;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            i7 = i3;
                                                            location = location6;
                                                            i2 = high_id2;
                                                            message = message8;
                                                            str5 = originalPath;
                                                            performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                            messageObject2 = newMsgObj;
                                                            lower_id2 = type5;
                                                            encryptedChat7 = encryptedChat4;
                                                            str2 = str5;
                                                            tL_document2 = tL_document;
                                                            originalPath7 = params5;
                                                            str = params;
                                                            encryptedChat4 = message;
                                                            sendToPeer4 = encryptedChat2;
                                                            params6 = hashMap4;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo3 = videoEditedInfo;
                                                            messageMedia = location;
                                                            messageObject6 = retryMessageObject;
                                                            type4 = lower_id2;
                                                            message3 = newMsg3;
                                                            webPage5 = webPage2;
                                                            newMsg3 = peer;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        } else {
                                                            performSendDelayedMessage(encryptedChat4);
                                                        }
                                                        photo = tL_photo2;
                                                        lower_id2 = a;
                                                        messageObject2 = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        r91 = groupId4;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                    } else {
                                                        performSendDelayedMessage(encryptedChat4);
                                                        photo = tL_photo2;
                                                        messageObject2 = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                        lower_id2 = type;
                                                    }
                                                    location = location6;
                                                    str5 = originalPath;
                                                    sendToPeer7 = sendToPeer3;
                                                    encryptedChat7 = encryptedChat4;
                                                    str2 = str5;
                                                    tL_document2 = tL_document;
                                                    originalPath7 = params5;
                                                    str = params;
                                                    encryptedChat4 = message;
                                                    sendToPeer4 = encryptedChat2;
                                                    params6 = hashMap4;
                                                    arrayList5 = arrayList3;
                                                    inputPeer = sendToPeer7;
                                                    user2 = user;
                                                    photo2 = photo;
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    messageMedia = location;
                                                    messageObject6 = retryMessageObject;
                                                    type4 = lower_id2;
                                                    message3 = newMsg3;
                                                    webPage5 = webPage2;
                                                    newMsg3 = peer;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                } catch (Throwable e622222222222222222222222222222222222222222222222222222NUM) {
                                                    user4 = user8;
                                                    type = type2;
                                                    messageObject = newMsgObj2;
                                                    j3 = peer;
                                                    sendToPeer4 = encryptedChat;
                                                    location2 = location5;
                                                    hashMap3 = params4;
                                                    params4 = hashMap2;
                                                    str = caption2;
                                                    message5 = message8;
                                                    photo2 = photo;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    arrayList3 = arrayList;
                                                    inputPeer = sendToPeer2;
                                                    videoEditedInfo2 = videoEditedInfo4;
                                                    user2 = user4;
                                                    messageObject6 = retryMessageObject;
                                                    tL_document = groupId;
                                                    th = e622222222222222222222222222222222222222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                                tL_photo2 = photo;
                                                params = hashMap2;
                                                messageObject = messageObject3;
                                                name = path;
                                                if (arrayList != null) {
                                                    groupId = new TL_messages_sendBroadcast();
                                                    random_ids2 = new ArrayList();
                                                    a = 0;
                                                    while (true) {
                                                        location6 = location5;
                                                        sendToPeers4 = arrayList;
                                                        if (a >= sendToPeers4.size()) {
                                                            break;
                                                        }
                                                        originalPath6 = params4;
                                                        params8 = params;
                                                        random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                        a++;
                                                        arrayList = sendToPeers4;
                                                        location5 = location6;
                                                        params4 = originalPath6;
                                                        params = params8;
                                                        name = path;
                                                    }
                                                    str3 = params4;
                                                    hashMap4 = params;
                                                    groupId.contacts = sendToPeers4;
                                                    groupId.media = inputMedia;
                                                    groupId.random_id = random_ids2;
                                                    groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                    if (encryptedChat4 != null) {
                                                        encryptedChat4.sendRequest = groupId;
                                                    }
                                                    reqSend6 = groupId;
                                                    type2 = retryMessageObject;
                                                    if (type2 == 0) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                    }
                                                    arrayList3 = sendToPeers4;
                                                    params = caption2;
                                                    sendToPeer3 = sendToPeer2;
                                                    tL_document = document3;
                                                    originalPath = str3;
                                                    params5 = entities;
                                                } else {
                                                    location6 = location5;
                                                    str3 = params4;
                                                    hashMap4 = params;
                                                    sendToPeers4 = arrayList;
                                                    type2 = retryMessageObject;
                                                    if (groupId4 != 0) {
                                                        if (encryptedChat4.sendRequest != null) {
                                                            groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                            sendToPeer8 = sendToPeer2;
                                                        } else {
                                                            groupId = new TL_messages_sendMultiMedia();
                                                            sendToPeer8 = sendToPeer2;
                                                            groupId.peer = sendToPeer8;
                                                            if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder3 = new StringBuilder();
                                                                stringBuilder3.append("silent_");
                                                                stringBuilder3.append(j3);
                                                                groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                            }
                                                            if (newMsg3.reply_to_msg_id != 0) {
                                                                groupId.flags |= 1;
                                                                groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                            }
                                                            encryptedChat4.sendRequest = groupId;
                                                        }
                                                        encryptedChat4.messageObjects.add(messageObject);
                                                        encryptedChat4.messages.add(newMsg3);
                                                        originalPath5 = str3;
                                                        encryptedChat4.originalPaths.add(originalPath5);
                                                        inputSingleMedia = new TL_inputSingleMedia();
                                                        originalPath = originalPath5;
                                                        inputSingleMedia.random_id = newMsg3.random_id;
                                                        inputSingleMedia.media = inputMedia;
                                                        params = caption2;
                                                        inputSingleMedia.message = params;
                                                        arrayList3 = sendToPeers4;
                                                        tL_document = document3;
                                                        params5 = entities;
                                                        if (params5 != null) {
                                                            if (entities.isEmpty()) {
                                                                inputSingleMedia.entities = params5;
                                                                inputSingleMedia.flags |= 1;
                                                            }
                                                        }
                                                        groupId.multi_media.add(inputSingleMedia);
                                                        reqSend6 = groupId;
                                                        sendToPeer3 = sendToPeer8;
                                                    } else {
                                                        arrayList3 = sendToPeers4;
                                                        params = caption2;
                                                        sendToPeer8 = sendToPeer2;
                                                        tL_document = document3;
                                                        originalPath = str3;
                                                        params5 = entities;
                                                        reqSend6 = new TL_messages_sendMedia();
                                                        reqSend6.peer = sendToPeer8;
                                                        if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                            groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder2 = new StringBuilder();
                                                            sendToPeer3 = sendToPeer8;
                                                            stringBuilder2.append("silent_");
                                                            stringBuilder2.append(j3);
                                                            reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                        } else {
                                                            sendToPeer3 = sendToPeer8;
                                                        }
                                                        if (newMsg3.reply_to_msg_id != null) {
                                                            reqSend6.flags |= 1;
                                                            reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                        }
                                                        reqSend6.random_id = newMsg3.random_id;
                                                        reqSend6.media = inputMedia;
                                                        reqSend6.message = params;
                                                        if (params5 != null) {
                                                            if (entities.isEmpty() == null) {
                                                                reqSend6.entities = params5;
                                                                reqSend6.flags |= 8;
                                                            }
                                                        }
                                                        if (encryptedChat4 != null) {
                                                            encryptedChat4.sendRequest = reqSend6;
                                                        }
                                                    }
                                                }
                                                reqSend7 = reqSend6;
                                                if (groupId4 != 0) {
                                                    performSendDelayedMessage(encryptedChat4);
                                                    photo = tL_photo2;
                                                    messageObject2 = messageObject;
                                                    message = message8;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    videoEditedInfo = videoEditedInfo4;
                                                    user = user4;
                                                    lower_id2 = type;
                                                } else {
                                                    a = type;
                                                    if (a == 1) {
                                                        performSendMessageRequest(reqSend7, messageObject, 0);
                                                    } else if (a == 2) {
                                                        photo = tL_photo2;
                                                        inputMedia2 = inputMedia;
                                                        newMsgObj = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        r91 = groupId4;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                        location = location6;
                                                        str5 = originalPath;
                                                        sendToPeer7 = sendToPeer3;
                                                        lower_id2 = a;
                                                        messageObject2 = 3;
                                                        if (lower_id2 == 3) {
                                                            messageObject2 = newMsgObj;
                                                            if (lower_id2 == 6) {
                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                            } else if (lower_id2 == 7) {
                                                                if (tL_document.access_hash == 0) {
                                                                }
                                                                performSendMessageRequest(reqSend7, messageObject2, str5);
                                                            } else if (lower_id2 == 8) {
                                                                if (tL_document.access_hash == 0) {
                                                                    performSendDelayedMessage(encryptedChat4);
                                                                } else {
                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                }
                                                            }
                                                        } else if (tL_document.access_hash == 0) {
                                                            performSendDelayedMessage(encryptedChat4);
                                                            messageObject2 = newMsgObj;
                                                        } else {
                                                            messageObject2 = newMsgObj;
                                                            performSendMessageRequest(reqSend7, messageObject2, null);
                                                        }
                                                        encryptedChat7 = encryptedChat4;
                                                        str2 = str5;
                                                        tL_document2 = tL_document;
                                                        originalPath7 = params5;
                                                        str = params;
                                                        encryptedChat4 = message;
                                                        sendToPeer4 = encryptedChat2;
                                                        params6 = hashMap4;
                                                        arrayList5 = arrayList3;
                                                        inputPeer = sendToPeer7;
                                                        user2 = user;
                                                        photo2 = photo;
                                                        videoEditedInfo3 = videoEditedInfo;
                                                        messageMedia = location;
                                                        messageObject6 = retryMessageObject;
                                                        type4 = lower_id2;
                                                        message3 = newMsg3;
                                                        webPage5 = webPage2;
                                                        newMsg3 = peer;
                                                        params4 = params6;
                                                        encryptedChat5 = encryptedChat4;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        arrayList3 = arrayList5;
                                                        type4 = messageObject2;
                                                    } else if (tL_photo2.access_hash == 0) {
                                                        performSendDelayedMessage(encryptedChat4);
                                                    } else {
                                                        r91 = groupId4;
                                                        user = user4;
                                                        sendToPeer7 = sendToPeer3;
                                                        photo = tL_photo2;
                                                        newMsgObj = messageObject;
                                                        type5 = a;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        i7 = i3;
                                                        location = location6;
                                                        i2 = high_id2;
                                                        message = message8;
                                                        str5 = originalPath;
                                                        performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                        messageObject2 = newMsgObj;
                                                        lower_id2 = type5;
                                                        encryptedChat7 = encryptedChat4;
                                                        str2 = str5;
                                                        tL_document2 = tL_document;
                                                        originalPath7 = params5;
                                                        str = params;
                                                        encryptedChat4 = message;
                                                        sendToPeer4 = encryptedChat2;
                                                        params6 = hashMap4;
                                                        arrayList5 = arrayList3;
                                                        inputPeer = sendToPeer7;
                                                        user2 = user;
                                                        photo2 = photo;
                                                        videoEditedInfo3 = videoEditedInfo;
                                                        messageMedia = location;
                                                        messageObject6 = retryMessageObject;
                                                        type4 = lower_id2;
                                                        message3 = newMsg3;
                                                        webPage5 = webPage2;
                                                        newMsg3 = peer;
                                                        params4 = params6;
                                                        encryptedChat5 = encryptedChat4;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        arrayList3 = arrayList5;
                                                        type4 = messageObject2;
                                                    }
                                                    photo = tL_photo2;
                                                    lower_id2 = a;
                                                    messageObject2 = messageObject;
                                                    message = message8;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    r91 = groupId4;
                                                    videoEditedInfo = videoEditedInfo4;
                                                    user = user4;
                                                }
                                                location = location6;
                                                str5 = originalPath;
                                                sendToPeer7 = sendToPeer3;
                                                encryptedChat7 = encryptedChat4;
                                                str2 = str5;
                                                tL_document2 = tL_document;
                                                originalPath7 = params5;
                                                str = params;
                                                encryptedChat4 = message;
                                                sendToPeer4 = encryptedChat2;
                                                params6 = hashMap4;
                                                arrayList5 = arrayList3;
                                                inputPeer = sendToPeer7;
                                                user2 = user;
                                                photo2 = photo;
                                                videoEditedInfo3 = videoEditedInfo;
                                                messageMedia = location;
                                                messageObject6 = retryMessageObject;
                                                type4 = lower_id2;
                                                message3 = newMsg3;
                                                webPage5 = webPage2;
                                                newMsg3 = peer;
                                                params4 = params6;
                                                encryptedChat5 = encryptedChat4;
                                                newMsg3 = message3;
                                                params6 = type4;
                                                arrayList3 = arrayList5;
                                                type4 = messageObject2;
                                            } else {
                                                videoEditedInfo4 = videoEditedInfo2;
                                                type = type2;
                                                encryptedChat2 = encryptedChat;
                                                inputMedia4 = null;
                                                params4 = originalPath4;
                                                user4 = user3;
                                                groupId = tL_document3;
                                                params = hashMap2;
                                                messageObject = messageObject6;
                                            }
                                            tL_photo2 = photo;
                                            try {
                                                if (tL_photo2.access_hash == 0) {
                                                    try {
                                                        media = new TL_inputMediaUploadedPhoto();
                                                        if (i6 != 0) {
                                                            try {
                                                                media.ttl_seconds = i6;
                                                                newMsg3.ttl = i6;
                                                                media.flags |= 2;
                                                            } catch (Exception e38) {
                                                                e622222222222222222222222222222222222222222222222222222NUM = e38;
                                                                photo2 = tL_photo2;
                                                                location2 = location5;
                                                                hashMap3 = params4;
                                                                originalPath5 = params;
                                                                str = caption2;
                                                                message5 = message8;
                                                                i7 = i3;
                                                                videoEditedInfo2 = videoEditedInfo4;
                                                                user2 = user4;
                                                                sendToPeer4 = encryptedChat2;
                                                                type2 = type;
                                                                messageObject6 = retryMessageObject;
                                                                tL_document = groupId;
                                                                th = e622222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        if (params != null) {
                                                            String masks = (String) params.get("masks");
                                                            if (masks != null) {
                                                                int count2;
                                                                SerializedData serializedData = new SerializedData(Utilities.hexToBytes(masks));
                                                                count = serializedData.readInt32(false);
                                                                i7 = 0;
                                                                while (true) {
                                                                    document3 = groupId;
                                                                    groupId = i7;
                                                                    if (groupId >= count) {
                                                                        break;
                                                                    }
                                                                    String masks2 = masks;
                                                                    try {
                                                                        count2 = count;
                                                                        media.stickers.add(InputDocument.TLdeserialize(serializedData, serializedData.readInt32(false), false));
                                                                        i7 = groupId + 1;
                                                                        groupId = document3;
                                                                        masks = masks2;
                                                                        count = count2;
                                                                        i6 = ttl;
                                                                    } catch (Throwable e6222222222222222222222222222222222222222222222222222222NUM) {
                                                                        th = e6222222222222222222222222222222222222222222222222222222NUM;
                                                                        photo2 = tL_photo2;
                                                                        location2 = location5;
                                                                        hashMap3 = params4;
                                                                        originalPath5 = params;
                                                                        str = caption2;
                                                                        message5 = message8;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        arrayList3 = arrayList;
                                                                        inputPeer = sendToPeer2;
                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                        user2 = user4;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        type2 = type;
                                                                        tL_document = document3;
                                                                    }
                                                                }
                                                                count2 = count;
                                                                media.flags |= 1;
                                                                if (delayedMessage3 != null) {
                                                                    groupId = new DelayedMessage(j3);
                                                                    try {
                                                                        groupId.type = 0;
                                                                        groupId.obj = messageObject;
                                                                        groupId.originalPath = params4;
                                                                    } catch (Exception e39) {
                                                                        e6222222222222222222222222222222222222222222222222222222NUM = e39;
                                                                        delayedMessage3 = groupId;
                                                                        photo2 = tL_photo2;
                                                                        location2 = location5;
                                                                        hashMap3 = params4;
                                                                        originalPath5 = params;
                                                                        str = caption2;
                                                                        message5 = message8;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        arrayList3 = arrayList;
                                                                        inputPeer = sendToPeer2;
                                                                        videoEditedInfo2 = videoEditedInfo4;
                                                                        user2 = user4;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        type2 = type;
                                                                        tL_document = document3;
                                                                    }
                                                                } else {
                                                                    groupId = delayedMessage3;
                                                                }
                                                                name = path;
                                                                if (name == null && path.length() > 0 && name.startsWith("http")) {
                                                                    groupId.httpLocation = name;
                                                                } else {
                                                                    groupId.location = ((PhotoSize) tL_photo2.sizes.get(tL_photo2.sizes.size() - 1)).location;
                                                                }
                                                                encryptedChat4 = groupId;
                                                                inputMedia = media;
                                                                if (arrayList != null) {
                                                                    location6 = location5;
                                                                    str3 = params4;
                                                                    hashMap4 = params;
                                                                    sendToPeers4 = arrayList;
                                                                    type2 = retryMessageObject;
                                                                    if (groupId4 != 0) {
                                                                        arrayList3 = sendToPeers4;
                                                                        params = caption2;
                                                                        sendToPeer8 = sendToPeer2;
                                                                        tL_document = document3;
                                                                        originalPath = str3;
                                                                        params5 = entities;
                                                                        reqSend6 = new TL_messages_sendMedia();
                                                                        reqSend6.peer = sendToPeer8;
                                                                        if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                            sendToPeer3 = sendToPeer8;
                                                                        } else {
                                                                            groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                            stringBuilder2 = new StringBuilder();
                                                                            sendToPeer3 = sendToPeer8;
                                                                            stringBuilder2.append("silent_");
                                                                            stringBuilder2.append(j3);
                                                                            reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                                        }
                                                                        if (newMsg3.reply_to_msg_id != null) {
                                                                            reqSend6.flags |= 1;
                                                                            reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                        }
                                                                        reqSend6.random_id = newMsg3.random_id;
                                                                        reqSend6.media = inputMedia;
                                                                        reqSend6.message = params;
                                                                        if (params5 != null) {
                                                                            if (entities.isEmpty() == null) {
                                                                                reqSend6.entities = params5;
                                                                                reqSend6.flags |= 8;
                                                                            }
                                                                        }
                                                                        if (encryptedChat4 != null) {
                                                                            encryptedChat4.sendRequest = reqSend6;
                                                                        }
                                                                    } else {
                                                                        if (encryptedChat4.sendRequest != null) {
                                                                            groupId = new TL_messages_sendMultiMedia();
                                                                            sendToPeer8 = sendToPeer2;
                                                                            groupId.peer = sendToPeer8;
                                                                            if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                                notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                                stringBuilder3 = new StringBuilder();
                                                                                stringBuilder3.append("silent_");
                                                                                stringBuilder3.append(j3);
                                                                                groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                            }
                                                                            if (newMsg3.reply_to_msg_id != 0) {
                                                                                groupId.flags |= 1;
                                                                                groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                            }
                                                                            encryptedChat4.sendRequest = groupId;
                                                                        } else {
                                                                            groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                            sendToPeer8 = sendToPeer2;
                                                                        }
                                                                        encryptedChat4.messageObjects.add(messageObject);
                                                                        encryptedChat4.messages.add(newMsg3);
                                                                        originalPath5 = str3;
                                                                        encryptedChat4.originalPaths.add(originalPath5);
                                                                        inputSingleMedia = new TL_inputSingleMedia();
                                                                        originalPath = originalPath5;
                                                                        inputSingleMedia.random_id = newMsg3.random_id;
                                                                        inputSingleMedia.media = inputMedia;
                                                                        params = caption2;
                                                                        inputSingleMedia.message = params;
                                                                        arrayList3 = sendToPeers4;
                                                                        tL_document = document3;
                                                                        params5 = entities;
                                                                        if (params5 != null) {
                                                                            if (entities.isEmpty()) {
                                                                                inputSingleMedia.entities = params5;
                                                                                inputSingleMedia.flags |= 1;
                                                                            }
                                                                        }
                                                                        groupId.multi_media.add(inputSingleMedia);
                                                                        reqSend6 = groupId;
                                                                        sendToPeer3 = sendToPeer8;
                                                                    }
                                                                } else {
                                                                    groupId = new TL_messages_sendBroadcast();
                                                                    random_ids2 = new ArrayList();
                                                                    a = 0;
                                                                    while (true) {
                                                                        location6 = location5;
                                                                        sendToPeers4 = arrayList;
                                                                        if (a >= sendToPeers4.size()) {
                                                                            break;
                                                                        }
                                                                        originalPath6 = params4;
                                                                        params8 = params;
                                                                        random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                                        a++;
                                                                        arrayList = sendToPeers4;
                                                                        location5 = location6;
                                                                        params4 = originalPath6;
                                                                        params = params8;
                                                                        name = path;
                                                                    }
                                                                    str3 = params4;
                                                                    hashMap4 = params;
                                                                    groupId.contacts = sendToPeers4;
                                                                    groupId.media = inputMedia;
                                                                    groupId.random_id = random_ids2;
                                                                    groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                                    if (encryptedChat4 != null) {
                                                                        encryptedChat4.sendRequest = groupId;
                                                                    }
                                                                    reqSend6 = groupId;
                                                                    type2 = retryMessageObject;
                                                                    if (type2 == 0) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                                    }
                                                                    arrayList3 = sendToPeers4;
                                                                    params = caption2;
                                                                    sendToPeer3 = sendToPeer2;
                                                                    tL_document = document3;
                                                                    originalPath = str3;
                                                                    params5 = entities;
                                                                }
                                                                reqSend7 = reqSend6;
                                                                if (groupId4 != 0) {
                                                                    a = type;
                                                                    if (a == 1) {
                                                                        performSendMessageRequest(reqSend7, messageObject, 0);
                                                                    } else if (a == 2) {
                                                                        photo = tL_photo2;
                                                                        inputMedia2 = inputMedia;
                                                                        newMsgObj = messageObject;
                                                                        message = message8;
                                                                        i2 = high_id2;
                                                                        i7 = i3;
                                                                        r91 = groupId4;
                                                                        videoEditedInfo = videoEditedInfo4;
                                                                        user = user4;
                                                                        location = location6;
                                                                        str5 = originalPath;
                                                                        sendToPeer7 = sendToPeer3;
                                                                        lower_id2 = a;
                                                                        messageObject2 = 3;
                                                                        if (lower_id2 == 3) {
                                                                            messageObject2 = newMsgObj;
                                                                            if (lower_id2 == 6) {
                                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                                            } else if (lower_id2 == 7) {
                                                                                if (tL_document.access_hash == 0) {
                                                                                }
                                                                                performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                            } else if (lower_id2 == 8) {
                                                                                if (tL_document.access_hash == 0) {
                                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                                } else {
                                                                                    performSendDelayedMessage(encryptedChat4);
                                                                                }
                                                                            }
                                                                        } else if (tL_document.access_hash == 0) {
                                                                            messageObject2 = newMsgObj;
                                                                            performSendMessageRequest(reqSend7, messageObject2, null);
                                                                        } else {
                                                                            performSendDelayedMessage(encryptedChat4);
                                                                            messageObject2 = newMsgObj;
                                                                        }
                                                                        encryptedChat7 = encryptedChat4;
                                                                        str2 = str5;
                                                                        tL_document2 = tL_document;
                                                                        originalPath7 = params5;
                                                                        str = params;
                                                                        encryptedChat4 = message;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        params6 = hashMap4;
                                                                        arrayList5 = arrayList3;
                                                                        inputPeer = sendToPeer7;
                                                                        user2 = user;
                                                                        photo2 = photo;
                                                                        videoEditedInfo3 = videoEditedInfo;
                                                                        messageMedia = location;
                                                                        messageObject6 = retryMessageObject;
                                                                        type4 = lower_id2;
                                                                        message3 = newMsg3;
                                                                        webPage5 = webPage2;
                                                                        newMsg3 = peer;
                                                                        params4 = params6;
                                                                        encryptedChat5 = encryptedChat4;
                                                                        newMsg3 = message3;
                                                                        params6 = type4;
                                                                        arrayList3 = arrayList5;
                                                                        type4 = messageObject2;
                                                                    } else if (tL_photo2.access_hash == 0) {
                                                                        r91 = groupId4;
                                                                        user = user4;
                                                                        sendToPeer7 = sendToPeer3;
                                                                        photo = tL_photo2;
                                                                        newMsgObj = messageObject;
                                                                        type5 = a;
                                                                        videoEditedInfo = videoEditedInfo4;
                                                                        i7 = i3;
                                                                        location = location6;
                                                                        i2 = high_id2;
                                                                        message = message8;
                                                                        str5 = originalPath;
                                                                        performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                                        messageObject2 = newMsgObj;
                                                                        lower_id2 = type5;
                                                                        encryptedChat7 = encryptedChat4;
                                                                        str2 = str5;
                                                                        tL_document2 = tL_document;
                                                                        originalPath7 = params5;
                                                                        str = params;
                                                                        encryptedChat4 = message;
                                                                        sendToPeer4 = encryptedChat2;
                                                                        params6 = hashMap4;
                                                                        arrayList5 = arrayList3;
                                                                        inputPeer = sendToPeer7;
                                                                        user2 = user;
                                                                        photo2 = photo;
                                                                        videoEditedInfo3 = videoEditedInfo;
                                                                        messageMedia = location;
                                                                        messageObject6 = retryMessageObject;
                                                                        type4 = lower_id2;
                                                                        message3 = newMsg3;
                                                                        webPage5 = webPage2;
                                                                        newMsg3 = peer;
                                                                        params4 = params6;
                                                                        encryptedChat5 = encryptedChat4;
                                                                        newMsg3 = message3;
                                                                        params6 = type4;
                                                                        arrayList3 = arrayList5;
                                                                        type4 = messageObject2;
                                                                    } else {
                                                                        performSendDelayedMessage(encryptedChat4);
                                                                    }
                                                                    photo = tL_photo2;
                                                                    lower_id2 = a;
                                                                    messageObject2 = messageObject;
                                                                    message = message8;
                                                                    i2 = high_id2;
                                                                    i7 = i3;
                                                                    r91 = groupId4;
                                                                    videoEditedInfo = videoEditedInfo4;
                                                                    user = user4;
                                                                } else {
                                                                    performSendDelayedMessage(encryptedChat4);
                                                                    photo = tL_photo2;
                                                                    messageObject2 = messageObject;
                                                                    message = message8;
                                                                    i2 = high_id2;
                                                                    i7 = i3;
                                                                    videoEditedInfo = videoEditedInfo4;
                                                                    user = user4;
                                                                    lower_id2 = type;
                                                                }
                                                                location = location6;
                                                                str5 = originalPath;
                                                                sendToPeer7 = sendToPeer3;
                                                                encryptedChat7 = encryptedChat4;
                                                                str2 = str5;
                                                                tL_document2 = tL_document;
                                                                originalPath7 = params5;
                                                                str = params;
                                                                encryptedChat4 = message;
                                                                sendToPeer4 = encryptedChat2;
                                                                params6 = hashMap4;
                                                                arrayList5 = arrayList3;
                                                                inputPeer = sendToPeer7;
                                                                user2 = user;
                                                                photo2 = photo;
                                                                videoEditedInfo3 = videoEditedInfo;
                                                                messageMedia = location;
                                                                messageObject6 = retryMessageObject;
                                                                type4 = lower_id2;
                                                                message3 = newMsg3;
                                                                webPage5 = webPage2;
                                                                newMsg3 = peer;
                                                                params4 = params6;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                arrayList3 = arrayList5;
                                                                type4 = messageObject2;
                                                            }
                                                        }
                                                        document3 = groupId;
                                                        if (delayedMessage3 != null) {
                                                            groupId = delayedMessage3;
                                                        } else {
                                                            groupId = new DelayedMessage(j3);
                                                            groupId.type = 0;
                                                            groupId.obj = messageObject;
                                                            groupId.originalPath = params4;
                                                        }
                                                        name = path;
                                                        if (name == null) {
                                                        }
                                                        groupId.location = ((PhotoSize) tL_photo2.sizes.get(tL_photo2.sizes.size() - 1)).location;
                                                        encryptedChat4 = groupId;
                                                        inputMedia = media;
                                                        if (arrayList != null) {
                                                            groupId = new TL_messages_sendBroadcast();
                                                            random_ids2 = new ArrayList();
                                                            a = 0;
                                                            while (true) {
                                                                location6 = location5;
                                                                sendToPeers4 = arrayList;
                                                                if (a >= sendToPeers4.size()) {
                                                                    break;
                                                                }
                                                                originalPath6 = params4;
                                                                params8 = params;
                                                                random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                                a++;
                                                                arrayList = sendToPeers4;
                                                                location5 = location6;
                                                                params4 = originalPath6;
                                                                params = params8;
                                                                name = path;
                                                            }
                                                            str3 = params4;
                                                            hashMap4 = params;
                                                            groupId.contacts = sendToPeers4;
                                                            groupId.media = inputMedia;
                                                            groupId.random_id = random_ids2;
                                                            groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                            if (encryptedChat4 != null) {
                                                                encryptedChat4.sendRequest = groupId;
                                                            }
                                                            reqSend6 = groupId;
                                                            type2 = retryMessageObject;
                                                            if (type2 == 0) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                            }
                                                            arrayList3 = sendToPeers4;
                                                            params = caption2;
                                                            sendToPeer3 = sendToPeer2;
                                                            tL_document = document3;
                                                            originalPath = str3;
                                                            params5 = entities;
                                                        } else {
                                                            location6 = location5;
                                                            str3 = params4;
                                                            hashMap4 = params;
                                                            sendToPeers4 = arrayList;
                                                            type2 = retryMessageObject;
                                                            if (groupId4 != 0) {
                                                                if (encryptedChat4.sendRequest != null) {
                                                                    groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                    sendToPeer8 = sendToPeer2;
                                                                } else {
                                                                    groupId = new TL_messages_sendMultiMedia();
                                                                    sendToPeer8 = sendToPeer2;
                                                                    groupId.peer = sendToPeer8;
                                                                    if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                        notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                        stringBuilder3 = new StringBuilder();
                                                                        stringBuilder3.append("silent_");
                                                                        stringBuilder3.append(j3);
                                                                        groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                    }
                                                                    if (newMsg3.reply_to_msg_id != 0) {
                                                                        groupId.flags |= 1;
                                                                        groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                    }
                                                                    encryptedChat4.sendRequest = groupId;
                                                                }
                                                                encryptedChat4.messageObjects.add(messageObject);
                                                                encryptedChat4.messages.add(newMsg3);
                                                                originalPath5 = str3;
                                                                encryptedChat4.originalPaths.add(originalPath5);
                                                                inputSingleMedia = new TL_inputSingleMedia();
                                                                originalPath = originalPath5;
                                                                inputSingleMedia.random_id = newMsg3.random_id;
                                                                inputSingleMedia.media = inputMedia;
                                                                params = caption2;
                                                                inputSingleMedia.message = params;
                                                                arrayList3 = sendToPeers4;
                                                                tL_document = document3;
                                                                params5 = entities;
                                                                if (params5 != null) {
                                                                    if (entities.isEmpty()) {
                                                                        inputSingleMedia.entities = params5;
                                                                        inputSingleMedia.flags |= 1;
                                                                    }
                                                                }
                                                                groupId.multi_media.add(inputSingleMedia);
                                                                reqSend6 = groupId;
                                                                sendToPeer3 = sendToPeer8;
                                                            } else {
                                                                arrayList3 = sendToPeers4;
                                                                params = caption2;
                                                                sendToPeer8 = sendToPeer2;
                                                                tL_document = document3;
                                                                originalPath = str3;
                                                                params5 = entities;
                                                                reqSend6 = new TL_messages_sendMedia();
                                                                reqSend6.peer = sendToPeer8;
                                                                if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                    groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder2 = new StringBuilder();
                                                                    sendToPeer3 = sendToPeer8;
                                                                    stringBuilder2.append("silent_");
                                                                    stringBuilder2.append(j3);
                                                                    reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                                } else {
                                                                    sendToPeer3 = sendToPeer8;
                                                                }
                                                                if (newMsg3.reply_to_msg_id != null) {
                                                                    reqSend6.flags |= 1;
                                                                    reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                }
                                                                reqSend6.random_id = newMsg3.random_id;
                                                                reqSend6.media = inputMedia;
                                                                reqSend6.message = params;
                                                                if (params5 != null) {
                                                                    if (entities.isEmpty() == null) {
                                                                        reqSend6.entities = params5;
                                                                        reqSend6.flags |= 8;
                                                                    }
                                                                }
                                                                if (encryptedChat4 != null) {
                                                                    encryptedChat4.sendRequest = reqSend6;
                                                                }
                                                            }
                                                        }
                                                        reqSend7 = reqSend6;
                                                        if (groupId4 != 0) {
                                                            performSendDelayedMessage(encryptedChat4);
                                                            photo = tL_photo2;
                                                            messageObject2 = messageObject;
                                                            message = message8;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            user = user4;
                                                            lower_id2 = type;
                                                        } else {
                                                            a = type;
                                                            if (a == 1) {
                                                                performSendMessageRequest(reqSend7, messageObject, 0);
                                                            } else if (a == 2) {
                                                                photo = tL_photo2;
                                                                inputMedia2 = inputMedia;
                                                                newMsgObj = messageObject;
                                                                message = message8;
                                                                i2 = high_id2;
                                                                i7 = i3;
                                                                r91 = groupId4;
                                                                videoEditedInfo = videoEditedInfo4;
                                                                user = user4;
                                                                location = location6;
                                                                str5 = originalPath;
                                                                sendToPeer7 = sendToPeer3;
                                                                lower_id2 = a;
                                                                messageObject2 = 3;
                                                                if (lower_id2 == 3) {
                                                                    messageObject2 = newMsgObj;
                                                                    if (lower_id2 == 6) {
                                                                        performSendMessageRequest(reqSend7, messageObject2, null);
                                                                    } else if (lower_id2 == 7) {
                                                                        if (tL_document.access_hash == 0) {
                                                                        }
                                                                        performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                    } else if (lower_id2 == 8) {
                                                                        if (tL_document.access_hash == 0) {
                                                                            performSendDelayedMessage(encryptedChat4);
                                                                        } else {
                                                                            performSendMessageRequest(reqSend7, messageObject2, null);
                                                                        }
                                                                    }
                                                                } else if (tL_document.access_hash == 0) {
                                                                    performSendDelayedMessage(encryptedChat4);
                                                                    messageObject2 = newMsgObj;
                                                                } else {
                                                                    messageObject2 = newMsgObj;
                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                }
                                                                encryptedChat7 = encryptedChat4;
                                                                str2 = str5;
                                                                tL_document2 = tL_document;
                                                                originalPath7 = params5;
                                                                str = params;
                                                                encryptedChat4 = message;
                                                                sendToPeer4 = encryptedChat2;
                                                                params6 = hashMap4;
                                                                arrayList5 = arrayList3;
                                                                inputPeer = sendToPeer7;
                                                                user2 = user;
                                                                photo2 = photo;
                                                                videoEditedInfo3 = videoEditedInfo;
                                                                messageMedia = location;
                                                                messageObject6 = retryMessageObject;
                                                                type4 = lower_id2;
                                                                message3 = newMsg3;
                                                                webPage5 = webPage2;
                                                                newMsg3 = peer;
                                                                params4 = params6;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                arrayList3 = arrayList5;
                                                                type4 = messageObject2;
                                                            } else if (tL_photo2.access_hash == 0) {
                                                                performSendDelayedMessage(encryptedChat4);
                                                            } else {
                                                                r91 = groupId4;
                                                                user = user4;
                                                                sendToPeer7 = sendToPeer3;
                                                                photo = tL_photo2;
                                                                newMsgObj = messageObject;
                                                                type5 = a;
                                                                videoEditedInfo = videoEditedInfo4;
                                                                i7 = i3;
                                                                location = location6;
                                                                i2 = high_id2;
                                                                message = message8;
                                                                str5 = originalPath;
                                                                performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                                messageObject2 = newMsgObj;
                                                                lower_id2 = type5;
                                                                encryptedChat7 = encryptedChat4;
                                                                str2 = str5;
                                                                tL_document2 = tL_document;
                                                                originalPath7 = params5;
                                                                str = params;
                                                                encryptedChat4 = message;
                                                                sendToPeer4 = encryptedChat2;
                                                                params6 = hashMap4;
                                                                arrayList5 = arrayList3;
                                                                inputPeer = sendToPeer7;
                                                                user2 = user;
                                                                photo2 = photo;
                                                                videoEditedInfo3 = videoEditedInfo;
                                                                messageMedia = location;
                                                                messageObject6 = retryMessageObject;
                                                                type4 = lower_id2;
                                                                message3 = newMsg3;
                                                                webPage5 = webPage2;
                                                                newMsg3 = peer;
                                                                params4 = params6;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                arrayList3 = arrayList5;
                                                                type4 = messageObject2;
                                                            }
                                                            photo = tL_photo2;
                                                            lower_id2 = a;
                                                            messageObject2 = messageObject;
                                                            message = message8;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            r91 = groupId4;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            user = user4;
                                                        }
                                                        location = location6;
                                                        str5 = originalPath;
                                                        sendToPeer7 = sendToPeer3;
                                                        encryptedChat7 = encryptedChat4;
                                                        str2 = str5;
                                                        tL_document2 = tL_document;
                                                        originalPath7 = params5;
                                                        str = params;
                                                        encryptedChat4 = message;
                                                        sendToPeer4 = encryptedChat2;
                                                        params6 = hashMap4;
                                                        arrayList5 = arrayList3;
                                                        inputPeer = sendToPeer7;
                                                        user2 = user;
                                                        photo2 = photo;
                                                        videoEditedInfo3 = videoEditedInfo;
                                                        messageMedia = location;
                                                        messageObject6 = retryMessageObject;
                                                        type4 = lower_id2;
                                                        message3 = newMsg3;
                                                        webPage5 = webPage2;
                                                        newMsg3 = peer;
                                                        params4 = params6;
                                                        encryptedChat5 = encryptedChat4;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        arrayList3 = arrayList5;
                                                        type4 = messageObject2;
                                                    } catch (Throwable e62222222222222222222222222222222222222222222222222222222NUM) {
                                                        document3 = groupId;
                                                        th = e62222222222222222222222222222222222222222222222222222222NUM;
                                                        photo2 = tL_photo2;
                                                        location2 = location5;
                                                        hashMap3 = params4;
                                                        originalPath5 = params;
                                                        str = caption2;
                                                        message5 = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        arrayList3 = arrayList;
                                                        inputPeer = sendToPeer2;
                                                        videoEditedInfo2 = videoEditedInfo4;
                                                        user2 = user4;
                                                        sendToPeer4 = encryptedChat2;
                                                        type2 = type;
                                                        tL_document = document3;
                                                        messageObject6 = retryMessageObject;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                }
                                                document3 = groupId;
                                                name = path;
                                                try {
                                                    groupId = new TL_inputMediaPhoto();
                                                    groupId.id = new TL_inputPhoto();
                                                    groupId.id.id = tL_photo2.id;
                                                    groupId.id.access_hash = tL_photo2.access_hash;
                                                    inputMedia = groupId;
                                                    encryptedChat4 = delayedMessage3;
                                                    if (arrayList != null) {
                                                        location6 = location5;
                                                        str3 = params4;
                                                        hashMap4 = params;
                                                        sendToPeers4 = arrayList;
                                                        type2 = retryMessageObject;
                                                        if (groupId4 != 0) {
                                                            arrayList3 = sendToPeers4;
                                                            params = caption2;
                                                            sendToPeer8 = sendToPeer2;
                                                            tL_document = document3;
                                                            originalPath = str3;
                                                            params5 = entities;
                                                            reqSend6 = new TL_messages_sendMedia();
                                                            reqSend6.peer = sendToPeer8;
                                                            if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                                sendToPeer3 = sendToPeer8;
                                                            } else {
                                                                groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                stringBuilder2 = new StringBuilder();
                                                                sendToPeer3 = sendToPeer8;
                                                                stringBuilder2.append("silent_");
                                                                stringBuilder2.append(j3);
                                                                reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                            }
                                                            if (newMsg3.reply_to_msg_id != null) {
                                                                reqSend6.flags |= 1;
                                                                reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                            }
                                                            reqSend6.random_id = newMsg3.random_id;
                                                            reqSend6.media = inputMedia;
                                                            reqSend6.message = params;
                                                            if (params5 != null) {
                                                                if (entities.isEmpty() == null) {
                                                                    reqSend6.entities = params5;
                                                                    reqSend6.flags |= 8;
                                                                }
                                                            }
                                                            if (encryptedChat4 != null) {
                                                                encryptedChat4.sendRequest = reqSend6;
                                                            }
                                                        } else {
                                                            if (encryptedChat4.sendRequest != null) {
                                                                groupId = new TL_messages_sendMultiMedia();
                                                                sendToPeer8 = sendToPeer2;
                                                                groupId.peer = sendToPeer8;
                                                                if (newMsg3.to_id instanceof TL_peerChannel) {
                                                                    notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                                    stringBuilder3 = new StringBuilder();
                                                                    stringBuilder3.append("silent_");
                                                                    stringBuilder3.append(j3);
                                                                    groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                                }
                                                                if (newMsg3.reply_to_msg_id != 0) {
                                                                    groupId.flags |= 1;
                                                                    groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                                }
                                                                encryptedChat4.sendRequest = groupId;
                                                            } else {
                                                                groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                                sendToPeer8 = sendToPeer2;
                                                            }
                                                            encryptedChat4.messageObjects.add(messageObject);
                                                            encryptedChat4.messages.add(newMsg3);
                                                            originalPath5 = str3;
                                                            encryptedChat4.originalPaths.add(originalPath5);
                                                            inputSingleMedia = new TL_inputSingleMedia();
                                                            originalPath = originalPath5;
                                                            inputSingleMedia.random_id = newMsg3.random_id;
                                                            inputSingleMedia.media = inputMedia;
                                                            params = caption2;
                                                            inputSingleMedia.message = params;
                                                            arrayList3 = sendToPeers4;
                                                            tL_document = document3;
                                                            params5 = entities;
                                                            if (params5 != null) {
                                                                if (entities.isEmpty()) {
                                                                    inputSingleMedia.entities = params5;
                                                                    inputSingleMedia.flags |= 1;
                                                                }
                                                            }
                                                            groupId.multi_media.add(inputSingleMedia);
                                                            reqSend6 = groupId;
                                                            sendToPeer3 = sendToPeer8;
                                                        }
                                                    } else {
                                                        groupId = new TL_messages_sendBroadcast();
                                                        random_ids2 = new ArrayList();
                                                        a = 0;
                                                        while (true) {
                                                            location6 = location5;
                                                            sendToPeers4 = arrayList;
                                                            if (a >= sendToPeers4.size()) {
                                                                break;
                                                            }
                                                            originalPath6 = params4;
                                                            params8 = params;
                                                            random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                            a++;
                                                            arrayList = sendToPeers4;
                                                            location5 = location6;
                                                            params4 = originalPath6;
                                                            params = params8;
                                                            name = path;
                                                        }
                                                        str3 = params4;
                                                        hashMap4 = params;
                                                        groupId.contacts = sendToPeers4;
                                                        groupId.media = inputMedia;
                                                        groupId.random_id = random_ids2;
                                                        groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                        if (encryptedChat4 != null) {
                                                            encryptedChat4.sendRequest = groupId;
                                                        }
                                                        reqSend6 = groupId;
                                                        type2 = retryMessageObject;
                                                        if (type2 == 0) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                        }
                                                        arrayList3 = sendToPeers4;
                                                        params = caption2;
                                                        sendToPeer3 = sendToPeer2;
                                                        tL_document = document3;
                                                        originalPath = str3;
                                                        params5 = entities;
                                                    }
                                                    reqSend7 = reqSend6;
                                                    if (groupId4 != 0) {
                                                        a = type;
                                                        if (a == 1) {
                                                            performSendMessageRequest(reqSend7, messageObject, 0);
                                                        } else if (a == 2) {
                                                            photo = tL_photo2;
                                                            inputMedia2 = inputMedia;
                                                            newMsgObj = messageObject;
                                                            message = message8;
                                                            i2 = high_id2;
                                                            i7 = i3;
                                                            r91 = groupId4;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            user = user4;
                                                            location = location6;
                                                            str5 = originalPath;
                                                            sendToPeer7 = sendToPeer3;
                                                            lower_id2 = a;
                                                            messageObject2 = 3;
                                                            if (lower_id2 == 3) {
                                                                messageObject2 = newMsgObj;
                                                                if (lower_id2 == 6) {
                                                                    performSendMessageRequest(reqSend7, messageObject2, null);
                                                                } else if (lower_id2 == 7) {
                                                                    if (tL_document.access_hash == 0) {
                                                                    }
                                                                    performSendMessageRequest(reqSend7, messageObject2, str5);
                                                                } else if (lower_id2 == 8) {
                                                                    if (tL_document.access_hash == 0) {
                                                                        performSendMessageRequest(reqSend7, messageObject2, null);
                                                                    } else {
                                                                        performSendDelayedMessage(encryptedChat4);
                                                                    }
                                                                }
                                                            } else if (tL_document.access_hash == 0) {
                                                                messageObject2 = newMsgObj;
                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                            } else {
                                                                performSendDelayedMessage(encryptedChat4);
                                                                messageObject2 = newMsgObj;
                                                            }
                                                            encryptedChat7 = encryptedChat4;
                                                            str2 = str5;
                                                            tL_document2 = tL_document;
                                                            originalPath7 = params5;
                                                            str = params;
                                                            encryptedChat4 = message;
                                                            sendToPeer4 = encryptedChat2;
                                                            params6 = hashMap4;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo3 = videoEditedInfo;
                                                            messageMedia = location;
                                                            messageObject6 = retryMessageObject;
                                                            type4 = lower_id2;
                                                            message3 = newMsg3;
                                                            webPage5 = webPage2;
                                                            newMsg3 = peer;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        } else if (tL_photo2.access_hash == 0) {
                                                            r91 = groupId4;
                                                            user = user4;
                                                            sendToPeer7 = sendToPeer3;
                                                            photo = tL_photo2;
                                                            newMsgObj = messageObject;
                                                            type5 = a;
                                                            videoEditedInfo = videoEditedInfo4;
                                                            i7 = i3;
                                                            location = location6;
                                                            i2 = high_id2;
                                                            message = message8;
                                                            str5 = originalPath;
                                                            performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                            messageObject2 = newMsgObj;
                                                            lower_id2 = type5;
                                                            encryptedChat7 = encryptedChat4;
                                                            str2 = str5;
                                                            tL_document2 = tL_document;
                                                            originalPath7 = params5;
                                                            str = params;
                                                            encryptedChat4 = message;
                                                            sendToPeer4 = encryptedChat2;
                                                            params6 = hashMap4;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo3 = videoEditedInfo;
                                                            messageMedia = location;
                                                            messageObject6 = retryMessageObject;
                                                            type4 = lower_id2;
                                                            message3 = newMsg3;
                                                            webPage5 = webPage2;
                                                            newMsg3 = peer;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        } else {
                                                            performSendDelayedMessage(encryptedChat4);
                                                        }
                                                        photo = tL_photo2;
                                                        lower_id2 = a;
                                                        messageObject2 = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        r91 = groupId4;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                    } else {
                                                        performSendDelayedMessage(encryptedChat4);
                                                        photo = tL_photo2;
                                                        messageObject2 = messageObject;
                                                        message = message8;
                                                        i2 = high_id2;
                                                        i7 = i3;
                                                        videoEditedInfo = videoEditedInfo4;
                                                        user = user4;
                                                        lower_id2 = type;
                                                    }
                                                    location = location6;
                                                    str5 = originalPath;
                                                    sendToPeer7 = sendToPeer3;
                                                    encryptedChat7 = encryptedChat4;
                                                    str2 = str5;
                                                    tL_document2 = tL_document;
                                                    originalPath7 = params5;
                                                    str = params;
                                                    encryptedChat4 = message;
                                                    sendToPeer4 = encryptedChat2;
                                                    params6 = hashMap4;
                                                    arrayList5 = arrayList3;
                                                    inputPeer = sendToPeer7;
                                                    user2 = user;
                                                    photo2 = photo;
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    messageMedia = location;
                                                    messageObject6 = retryMessageObject;
                                                    type4 = lower_id2;
                                                    message3 = newMsg3;
                                                    webPage5 = webPage2;
                                                    newMsg3 = peer;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                } catch (Throwable e622222222222222222222222222222222222222222222222222222222NUM) {
                                                    location = location5;
                                                    hashMap5 = params4;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    arrayList3 = arrayList;
                                                    tL_document = document3;
                                                    r13 = entities;
                                                    type2 = type;
                                                    hashMap3 = hashMap5;
                                                    message5 = message8;
                                                    str = caption2;
                                                    inputPeer = sendToPeer2;
                                                    sendToPeer4 = encryptedChat2;
                                                    originalPath5 = params;
                                                    user2 = user4;
                                                    photo2 = tL_photo2;
                                                    videoEditedInfo2 = videoEditedInfo4;
                                                    location2 = location;
                                                    messageObject6 = retryMessageObject;
                                                    messageObject = messageObject;
                                                    th = e622222222222222222222222222222222222222222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            } catch (Throwable e6222222222222222222222222222222222222222222222222222222222NUM) {
                                                location = location5;
                                                hashMap5 = params4;
                                                i2 = high_id2;
                                                i7 = i3;
                                                arrayList3 = arrayList;
                                                r13 = entities;
                                                tL_document = groupId;
                                                hashMap3 = hashMap5;
                                                message5 = message8;
                                                str = caption2;
                                                inputPeer = sendToPeer2;
                                                sendToPeer4 = encryptedChat2;
                                                originalPath5 = params;
                                                user2 = user4;
                                                photo2 = tL_photo2;
                                                videoEditedInfo2 = videoEditedInfo4;
                                                location2 = location;
                                                messageObject6 = retryMessageObject;
                                                messageObject = messageObject;
                                                th = e6222222222222222222222222222222222222222222222222222222222NUM;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                            messageObject = messageObject6;
                                            tL_photo2 = photo;
                                            if (arrayList != null) {
                                                groupId = new TL_messages_sendBroadcast();
                                                random_ids2 = new ArrayList();
                                                a = 0;
                                                while (true) {
                                                    location6 = location5;
                                                    sendToPeers4 = arrayList;
                                                    if (a >= sendToPeers4.size()) {
                                                        break;
                                                    }
                                                    originalPath6 = params4;
                                                    params8 = params;
                                                    random_ids2.add(Long.valueOf(Utilities.random.nextLong()));
                                                    a++;
                                                    arrayList = sendToPeers4;
                                                    location5 = location6;
                                                    params4 = originalPath6;
                                                    params = params8;
                                                    name = path;
                                                }
                                                str3 = params4;
                                                hashMap4 = params;
                                                groupId.contacts = sendToPeers4;
                                                groupId.media = inputMedia;
                                                groupId.random_id = random_ids2;
                                                groupId.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                if (encryptedChat4 != null) {
                                                    encryptedChat4.sendRequest = groupId;
                                                }
                                                reqSend6 = groupId;
                                                type2 = retryMessageObject;
                                                if (type2 == 0) {
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(j3, null);
                                                }
                                                arrayList3 = sendToPeers4;
                                                params = caption2;
                                                sendToPeer3 = sendToPeer2;
                                                tL_document = document3;
                                                originalPath = str3;
                                                params5 = entities;
                                            } else {
                                                location6 = location5;
                                                str3 = params4;
                                                hashMap4 = params;
                                                sendToPeers4 = arrayList;
                                                type2 = retryMessageObject;
                                                if (groupId4 != 0) {
                                                    if (encryptedChat4.sendRequest != null) {
                                                        groupId = (TL_messages_sendMultiMedia) encryptedChat4.sendRequest;
                                                        sendToPeer8 = sendToPeer2;
                                                    } else {
                                                        groupId = new TL_messages_sendMultiMedia();
                                                        sendToPeer8 = sendToPeer2;
                                                        groupId.peer = sendToPeer8;
                                                        if (newMsg3.to_id instanceof TL_peerChannel) {
                                                            notificationsSettings2 = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                            stringBuilder3 = new StringBuilder();
                                                            stringBuilder3.append("silent_");
                                                            stringBuilder3.append(j3);
                                                            groupId.silent = notificationsSettings2.getBoolean(stringBuilder3.toString(), null);
                                                        }
                                                        if (newMsg3.reply_to_msg_id != 0) {
                                                            groupId.flags |= 1;
                                                            groupId.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                        }
                                                        encryptedChat4.sendRequest = groupId;
                                                    }
                                                    encryptedChat4.messageObjects.add(messageObject);
                                                    encryptedChat4.messages.add(newMsg3);
                                                    originalPath5 = str3;
                                                    encryptedChat4.originalPaths.add(originalPath5);
                                                    inputSingleMedia = new TL_inputSingleMedia();
                                                    originalPath = originalPath5;
                                                    inputSingleMedia.random_id = newMsg3.random_id;
                                                    inputSingleMedia.media = inputMedia;
                                                    params = caption2;
                                                    inputSingleMedia.message = params;
                                                    arrayList3 = sendToPeers4;
                                                    tL_document = document3;
                                                    params5 = entities;
                                                    if (params5 != null) {
                                                        if (entities.isEmpty()) {
                                                            inputSingleMedia.entities = params5;
                                                            inputSingleMedia.flags |= 1;
                                                        }
                                                    }
                                                    groupId.multi_media.add(inputSingleMedia);
                                                    reqSend6 = groupId;
                                                    sendToPeer3 = sendToPeer8;
                                                } else {
                                                    arrayList3 = sendToPeers4;
                                                    params = caption2;
                                                    sendToPeer8 = sendToPeer2;
                                                    tL_document = document3;
                                                    originalPath = str3;
                                                    params5 = entities;
                                                    reqSend6 = new TL_messages_sendMedia();
                                                    reqSend6.peer = sendToPeer8;
                                                    if ((newMsg3.to_id instanceof TL_peerChannel) != null) {
                                                        groupId = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder2 = new StringBuilder();
                                                        sendToPeer3 = sendToPeer8;
                                                        stringBuilder2.append("silent_");
                                                        stringBuilder2.append(j3);
                                                        reqSend6.silent = groupId.getBoolean(stringBuilder2.toString(), false);
                                                    } else {
                                                        sendToPeer3 = sendToPeer8;
                                                    }
                                                    if (newMsg3.reply_to_msg_id != null) {
                                                        reqSend6.flags |= 1;
                                                        reqSend6.reply_to_msg_id = newMsg3.reply_to_msg_id;
                                                    }
                                                    reqSend6.random_id = newMsg3.random_id;
                                                    reqSend6.media = inputMedia;
                                                    reqSend6.message = params;
                                                    if (params5 != null) {
                                                        if (entities.isEmpty() == null) {
                                                            reqSend6.entities = params5;
                                                            reqSend6.flags |= 8;
                                                        }
                                                    }
                                                    if (encryptedChat4 != null) {
                                                        encryptedChat4.sendRequest = reqSend6;
                                                    }
                                                }
                                            }
                                            reqSend7 = reqSend6;
                                            if (groupId4 != 0) {
                                                performSendDelayedMessage(encryptedChat4);
                                                photo = tL_photo2;
                                                messageObject2 = messageObject;
                                                message = message8;
                                                i2 = high_id2;
                                                i7 = i3;
                                                videoEditedInfo = videoEditedInfo4;
                                                user = user4;
                                                lower_id2 = type;
                                            } else {
                                                a = type;
                                                if (a == 1) {
                                                    performSendMessageRequest(reqSend7, messageObject, 0);
                                                } else if (a == 2) {
                                                    photo = tL_photo2;
                                                    inputMedia2 = inputMedia;
                                                    newMsgObj = messageObject;
                                                    message = message8;
                                                    i2 = high_id2;
                                                    i7 = i3;
                                                    r91 = groupId4;
                                                    videoEditedInfo = videoEditedInfo4;
                                                    user = user4;
                                                    location = location6;
                                                    str5 = originalPath;
                                                    sendToPeer7 = sendToPeer3;
                                                    lower_id2 = a;
                                                    messageObject2 = 3;
                                                    if (lower_id2 == 3) {
                                                        messageObject2 = newMsgObj;
                                                        if (lower_id2 == 6) {
                                                            performSendMessageRequest(reqSend7, messageObject2, null);
                                                        } else if (lower_id2 == 7) {
                                                            if (tL_document.access_hash == 0) {
                                                            }
                                                            performSendMessageRequest(reqSend7, messageObject2, str5);
                                                        } else if (lower_id2 == 8) {
                                                            if (tL_document.access_hash == 0) {
                                                                performSendDelayedMessage(encryptedChat4);
                                                            } else {
                                                                performSendMessageRequest(reqSend7, messageObject2, null);
                                                            }
                                                        }
                                                    } else if (tL_document.access_hash == 0) {
                                                        performSendDelayedMessage(encryptedChat4);
                                                        messageObject2 = newMsgObj;
                                                    } else {
                                                        messageObject2 = newMsgObj;
                                                        performSendMessageRequest(reqSend7, messageObject2, null);
                                                    }
                                                    encryptedChat7 = encryptedChat4;
                                                    str2 = str5;
                                                    tL_document2 = tL_document;
                                                    originalPath7 = params5;
                                                    str = params;
                                                    encryptedChat4 = message;
                                                    sendToPeer4 = encryptedChat2;
                                                    params6 = hashMap4;
                                                    arrayList5 = arrayList3;
                                                    inputPeer = sendToPeer7;
                                                    user2 = user;
                                                    photo2 = photo;
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    messageMedia = location;
                                                    messageObject6 = retryMessageObject;
                                                    type4 = lower_id2;
                                                    message3 = newMsg3;
                                                    webPage5 = webPage2;
                                                    newMsg3 = peer;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                } else if (tL_photo2.access_hash == 0) {
                                                    performSendDelayedMessage(encryptedChat4);
                                                } else {
                                                    r91 = groupId4;
                                                    user = user4;
                                                    sendToPeer7 = sendToPeer3;
                                                    photo = tL_photo2;
                                                    newMsgObj = messageObject;
                                                    type5 = a;
                                                    videoEditedInfo = videoEditedInfo4;
                                                    i7 = i3;
                                                    location = location6;
                                                    i2 = high_id2;
                                                    message = message8;
                                                    str5 = originalPath;
                                                    performSendMessageRequest(reqSend7, newMsgObj, null, null, 1);
                                                    messageObject2 = newMsgObj;
                                                    lower_id2 = type5;
                                                    encryptedChat7 = encryptedChat4;
                                                    str2 = str5;
                                                    tL_document2 = tL_document;
                                                    originalPath7 = params5;
                                                    str = params;
                                                    encryptedChat4 = message;
                                                    sendToPeer4 = encryptedChat2;
                                                    params6 = hashMap4;
                                                    arrayList5 = arrayList3;
                                                    inputPeer = sendToPeer7;
                                                    user2 = user;
                                                    photo2 = photo;
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    messageMedia = location;
                                                    messageObject6 = retryMessageObject;
                                                    type4 = lower_id2;
                                                    message3 = newMsg3;
                                                    webPage5 = webPage2;
                                                    newMsg3 = peer;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                }
                                                photo = tL_photo2;
                                                lower_id2 = a;
                                                messageObject2 = messageObject;
                                                message = message8;
                                                i2 = high_id2;
                                                i7 = i3;
                                                r91 = groupId4;
                                                videoEditedInfo = videoEditedInfo4;
                                                user = user4;
                                            }
                                            location = location6;
                                            str5 = originalPath;
                                            sendToPeer7 = sendToPeer3;
                                            encryptedChat7 = encryptedChat4;
                                            str2 = str5;
                                            tL_document2 = tL_document;
                                            originalPath7 = params5;
                                            str = params;
                                            encryptedChat4 = message;
                                            sendToPeer4 = encryptedChat2;
                                            params6 = hashMap4;
                                            arrayList5 = arrayList3;
                                            inputPeer = sendToPeer7;
                                            user2 = user;
                                            photo2 = photo;
                                            videoEditedInfo3 = videoEditedInfo;
                                            messageMedia = location;
                                            messageObject6 = retryMessageObject;
                                            type4 = lower_id2;
                                            message3 = newMsg3;
                                            webPage5 = webPage2;
                                            newMsg3 = peer;
                                            params4 = params6;
                                            encryptedChat5 = encryptedChat4;
                                            newMsg3 = message3;
                                            params6 = type4;
                                            arrayList3 = arrayList5;
                                            type4 = messageObject2;
                                        } else {
                                            r91 = groupId;
                                            messageObject2 = messageObject6;
                                            videoEditedInfo = videoEditedInfo2;
                                            lower_id2 = type2;
                                            sendToPeer7 = sendToPeer5;
                                            str5 = originalPath4;
                                            params = caption2;
                                            message = message8;
                                            location = location4;
                                            user = user3;
                                            tL_document = tL_document3;
                                            TLObject photo5 = photo;
                                            i2 = high_id2;
                                            i7 = i3;
                                            arrayList3 = arrayList;
                                            hashMap4 = hashMap2;
                                            r13 = entities;
                                            sendToPeer4 = encryptedChat;
                                            try {
                                                DecryptedMessage reqSend8;
                                                long groupId5;
                                                HashMap<String, String> params9;
                                                if (AndroidUtilities.getPeerLayerVersion(sendToPeer4.layer) >= 73) {
                                                    try {
                                                        reqSend8 = new TL_decryptedMessage();
                                                        groupId5 = r91;
                                                        if (groupId5 != 0) {
                                                            reqSend8.grouped_id = groupId5;
                                                            reqSend8.flags |= 131072;
                                                        }
                                                    } catch (Exception e40) {
                                                        e6222222222222222222222222222222222222222222222222222222222NUM = e40;
                                                        str2 = str5;
                                                        str = params;
                                                        message5 = message;
                                                        inputPeer = sendToPeer7;
                                                        user2 = user;
                                                        photo2 = photo;
                                                        videoEditedInfo2 = videoEditedInfo;
                                                        location2 = location;
                                                        messageObject6 = retryMessageObject;
                                                        messageObject = messageObject2;
                                                        th = e6222222222222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                }
                                                groupId5 = r91;
                                                reqSend8 = new TL_decryptedMessage_layer45();
                                                reqSend8.ttl = newMsg3.ttl;
                                                if (r13 != null) {
                                                    if (!entities.isEmpty()) {
                                                        reqSend8.entities = r13;
                                                        reqSend8.flags |= 128;
                                                    }
                                                }
                                                j4 = groupId5;
                                                if (newMsg3.reply_to_random_id != 0) {
                                                    reqSend8.reply_to_random_id = newMsg3.reply_to_random_id;
                                                    reqSend8.flags |= 8;
                                                }
                                                reqSend8.flags |= 512;
                                                if (hashMap4 != null) {
                                                    try {
                                                        params9 = hashMap4;
                                                        try {
                                                            if (params9.get("bot_name") != null) {
                                                                reqSend8.via_bot_name = (String) params9.get("bot_name");
                                                                reqSend8.flags |= 2048;
                                                            }
                                                        } catch (Exception e41) {
                                                            e6222222222222222222222222222222222222222222222222222222222NUM = e41;
                                                            type2 = lower_id2;
                                                            params4 = params9;
                                                            str2 = str5;
                                                            str = params;
                                                            message5 = message;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            photo2 = photo;
                                                            videoEditedInfo2 = videoEditedInfo;
                                                            location2 = location;
                                                            messageObject6 = retryMessageObject;
                                                            messageObject = messageObject2;
                                                            th = e6222222222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } catch (Throwable e62222222222222222222222222222222222222222222222222222222222NUM) {
                                                        type2 = lower_id2;
                                                        params4 = hashMap4;
                                                        str2 = str5;
                                                        str = params;
                                                        message5 = message;
                                                        inputPeer = sendToPeer7;
                                                        user2 = user;
                                                        photo2 = photo5;
                                                        videoEditedInfo2 = videoEditedInfo;
                                                        location2 = location;
                                                        messageObject6 = retryMessageObject;
                                                        messageObject = messageObject2;
                                                        th = e62222222222222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                }
                                                params9 = hashMap4;
                                                try {
                                                    DelayedMessage delayedMessage6;
                                                    TL_messages_sendEncryptedMultiMedia request;
                                                    TL_inputEncryptedFile encryptedFile;
                                                    DecryptedMessage decryptedMessage;
                                                    Document document5;
                                                    reqSend8.random_id = newMsg3.random_id;
                                                    reqSend8.message = TtmlNode.ANONYMOUS_REGION_ID;
                                                    MessageMedia location7;
                                                    if (lower_id2 == 1) {
                                                        location7 = location;
                                                        try {
                                                            if (location7 instanceof TL_messageMediaVenue) {
                                                                try {
                                                                    reqSend8.media = new TL_decryptedMessageMediaVenue();
                                                                    reqSend8.media.address = location7.address;
                                                                    reqSend8.media.title = location7.title;
                                                                    reqSend8.media.provider = location7.provider;
                                                                    reqSend8.media.venue_id = location7.venue_id;
                                                                } catch (Exception e42) {
                                                                    e62222222222222222222222222222222222222222222222222222222222NUM = e42;
                                                                    params4 = params9;
                                                                    str2 = str5;
                                                                    str = params;
                                                                    message5 = message;
                                                                    inputPeer = sendToPeer7;
                                                                    user2 = user;
                                                                    photo2 = photo5;
                                                                    videoEditedInfo2 = videoEditedInfo;
                                                                    messageObject6 = retryMessageObject;
                                                                    messageObject = messageObject2;
                                                                    th = e62222222222222222222222222222222222222222222222222222222222NUM;
                                                                    messageMedia2 = location7;
                                                                    location7 = lower_id2;
                                                                    location2 = messageMedia2;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            }
                                                            reqSend8.media = new TL_decryptedMessageMediaGeoPoint();
                                                            newMsg2 = newMsg3;
                                                            try {
                                                                reqSend8.media.lat = location7.geo.lat;
                                                                reqSend8.media._long = location7.geo._long;
                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, null, null, messageObject2);
                                                                i4 = lower_id2;
                                                                params3 = params9;
                                                                messageMedia = location7;
                                                                message4 = message;
                                                                user2 = user;
                                                                encryptedChat = photo5;
                                                            } catch (Exception e43) {
                                                                e62222222222222222222222222222222222222222222222222222222222NUM = e43;
                                                                params4 = params9;
                                                                str2 = str5;
                                                                str = params;
                                                                message5 = message;
                                                                inputPeer = sendToPeer7;
                                                                user2 = user;
                                                                tLObject = photo5;
                                                                videoEditedInfo2 = videoEditedInfo;
                                                                newMsg3 = newMsg2;
                                                                messageObject6 = retryMessageObject;
                                                                messageObject = messageObject2;
                                                                th = e62222222222222222222222222222222222222222222222222222222222NUM;
                                                                messageMedia2 = location7;
                                                                location7 = lower_id2;
                                                                location2 = messageMedia2;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        } catch (Throwable e622222222222222222222222222222222222222222222222222222222222NUM) {
                                                            newMsg2 = newMsg3;
                                                            params4 = params9;
                                                            str2 = str5;
                                                            str = params;
                                                            message5 = message;
                                                            inputPeer = sendToPeer7;
                                                            user2 = user;
                                                            tLObject = photo5;
                                                            videoEditedInfo2 = videoEditedInfo;
                                                            messageObject6 = retryMessageObject;
                                                            messageObject = messageObject2;
                                                            th = e622222222222222222222222222222222222222222222222222222222222NUM;
                                                            messageMedia2 = location7;
                                                            location7 = lower_id2;
                                                            location2 = messageMedia2;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    }
                                                    newMsg2 = newMsg3;
                                                    location7 = location;
                                                    TL_photo encryptedChat9;
                                                    if (lower_id2 != 2) {
                                                        if (lower_id2 == 9) {
                                                            encryptedChat9 = photo5;
                                                            if (encryptedChat9 != null) {
                                                                i4 = lower_id2;
                                                                params3 = params9;
                                                                messageMedia = location7;
                                                                message4 = message;
                                                                user2 = user;
                                                                videoEditedInfo3 = videoEditedInfo;
                                                                newMsg4 = peer;
                                                            }
                                                        } else {
                                                            encryptedChat = photo5;
                                                        }
                                                        InputEncryptedFile encryptedFile2;
                                                        VideoEditedInfo location8;
                                                        if (lower_id2 == 3) {
                                                            DocumentAttribute newMsg7;
                                                            ImageLoader.fillPhotoSizeWithBytes(tL_document.thumb);
                                                            if (!MessageObject.isNewGifDocument((Document) tL_document)) {
                                                                try {
                                                                    if (!MessageObject.isRoundVideoDocument(tL_document)) {
                                                                        reqSend8.media = new TL_decryptedMessageMediaVideo();
                                                                        if (tL_document.thumb == null || tL_document.thumb.bytes == null) {
                                                                            ((TL_decryptedMessageMediaVideo) reqSend8.media).thumb = new byte[0];
                                                                            reqSend8.media.caption = params;
                                                                            reqSend8.media.mime_type = MimeTypes.VIDEO_MP4;
                                                                            reqSend8.media.size = tL_document.size;
                                                                            while (a < tL_document.attributes.size()) {
                                                                                try {
                                                                                    newMsg7 = (DocumentAttribute) tL_document.attributes.get(a);
                                                                                    if (newMsg7 instanceof TL_documentAttributeVideo) {
                                                                                        messageMedia = location7;
                                                                                    } else {
                                                                                        messageMedia = location7;
                                                                                        try {
                                                                                            reqSend8.media.f34w = newMsg7.f36w;
                                                                                            reqSend8.media.f33h = newMsg7.f35h;
                                                                                            reqSend8.media.duration = newMsg7.duration;
                                                                                            break;
                                                                                        } catch (Exception e44) {
                                                                                            e622222222222222222222222222222222222222222222222222222222222NUM = e44;
                                                                                            location7 = lower_id2;
                                                                                            tLObject = encryptedChat;
                                                                                            message5 = message;
                                                                                            videoEditedInfo2 = videoEditedInfo;
                                                                                            newMsg3 = newMsg2;
                                                                                            location2 = messageMedia;
                                                                                            messageObject6 = retryMessageObject;
                                                                                            messageObject = messageObject2;
                                                                                            th = e622222222222222222222222222222222222222222222222222222222222NUM;
                                                                                            FileLog.m3e(th);
                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                            if (messageObject != null) {
                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                            }
                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                            objArr = new Object[1];
                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                            instance.postNotificationName(i6, objArr);
                                                                                            processSentMessage(newMsg3.id);
                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                            messageMedia = location2;
                                                                                            tL_document2 = tL_document;
                                                                                        }
                                                                                    }
                                                                                } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                                    messageMedia = location7;
                                                                                    location7 = lower_id2;
                                                                                    params4 = params9;
                                                                                    tLObject = encryptedChat;
                                                                                    str2 = str5;
                                                                                    str = params;
                                                                                    message5 = message;
                                                                                    inputPeer = sendToPeer7;
                                                                                    user2 = user;
                                                                                    videoEditedInfo2 = videoEditedInfo;
                                                                                    newMsg3 = newMsg2;
                                                                                    location2 = messageMedia;
                                                                                    messageObject6 = retryMessageObject;
                                                                                    messageObject = messageObject2;
                                                                                    th = e6222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                }
                                                                            }
                                                                            messageMedia = location7;
                                                                            try {
                                                                                reqSend8.media.thumb_h = tL_document.thumb.f42h;
                                                                                reqSend8.media.thumb_w = tL_document.thumb.f43w;
                                                                                if (tL_document.key != null) {
                                                                                    if (j4 == 0) {
                                                                                        encryptedFile2 = new TL_inputEncryptedFile();
                                                                                        encryptedFile2.id = tL_document.id;
                                                                                        encryptedFile2.access_hash = tL_document.access_hash;
                                                                                        reqSend8.media.key = tL_document.key;
                                                                                        reqSend8.media.iv = tL_document.iv;
                                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, encryptedFile2, null, messageObject2);
                                                                                        i4 = lower_id2;
                                                                                        params3 = params9;
                                                                                        message4 = message;
                                                                                        user2 = user;
                                                                                    }
                                                                                }
                                                                                if (delayedMessage3 != null) {
                                                                                    try {
                                                                                        newMsg4 = peer;
                                                                                        delayedMessage6 = new DelayedMessage(newMsg4);
                                                                                        try {
                                                                                            delayedMessage6.encryptedChat = sendToPeer4;
                                                                                            delayedMessage6.type = 1;
                                                                                            delayedMessage6.sendEncryptedRequest = reqSend8;
                                                                                            delayedMessage6.originalPath = str5;
                                                                                            delayedMessage6.obj = messageObject2;
                                                                                        } catch (Exception e45) {
                                                                                            e6222222222222222222222222222222222222222222222222222222222222NUM = e45;
                                                                                            delayedMessage3 = delayedMessage6;
                                                                                            location7 = lower_id2;
                                                                                            tLObject = encryptedChat;
                                                                                            message5 = message;
                                                                                            videoEditedInfo2 = videoEditedInfo;
                                                                                            newMsg3 = newMsg2;
                                                                                            location2 = messageMedia;
                                                                                            messageObject6 = retryMessageObject;
                                                                                            messageObject = messageObject2;
                                                                                            th = e6222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                            FileLog.m3e(th);
                                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                            if (messageObject != null) {
                                                                                                messageObject.messageOwner.send_state = 2;
                                                                                            }
                                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                            i6 = NotificationCenter.messageSendError;
                                                                                            objArr = new Object[1];
                                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                            instance.postNotificationName(i6, objArr);
                                                                                            processSentMessage(newMsg3.id);
                                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                                            messageMedia = location2;
                                                                                            tL_document2 = tL_document;
                                                                                        }
                                                                                    } catch (Exception e46) {
                                                                                        e6222222222222222222222222222222222222222222222222222222222222NUM = e46;
                                                                                        newMsg4 = peer;
                                                                                        location7 = lower_id2;
                                                                                        tLObject = encryptedChat;
                                                                                        message5 = message;
                                                                                        videoEditedInfo2 = videoEditedInfo;
                                                                                        newMsg3 = newMsg2;
                                                                                        location2 = messageMedia;
                                                                                        messageObject6 = retryMessageObject;
                                                                                        messageObject = messageObject2;
                                                                                        th = e6222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                        FileLog.m3e(th);
                                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                        if (messageObject != null) {
                                                                                            messageObject.messageOwner.send_state = 2;
                                                                                        }
                                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                        i6 = NotificationCenter.messageSendError;
                                                                                        objArr = new Object[1];
                                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                        instance.postNotificationName(i6, objArr);
                                                                                        processSentMessage(newMsg3.id);
                                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                                        messageMedia = location2;
                                                                                        tL_document2 = tL_document;
                                                                                    }
                                                                                }
                                                                                newMsg4 = peer;
                                                                                delayedMessage6 = delayedMessage3;
                                                                                location8 = videoEditedInfo;
                                                                            } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                                newMsg4 = peer;
                                                                                params4 = params9;
                                                                                videoEditedInfo2 = videoEditedInfo;
                                                                                tLObject = encryptedChat;
                                                                                str2 = str5;
                                                                                str = params;
                                                                                message5 = message;
                                                                                inputPeer = sendToPeer7;
                                                                                user2 = user;
                                                                                newMsg3 = newMsg2;
                                                                                messageObject6 = retryMessageObject;
                                                                                messageObject = messageObject2;
                                                                                location7 = lower_id2;
                                                                                location2 = messageMedia;
                                                                                th = e62222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                            try {
                                                                                delayedMessage6.videoEditedInfo = location8;
                                                                                if (j4 == 0) {
                                                                                    performSendDelayedMessage(delayedMessage6);
                                                                                }
                                                                                i4 = lower_id2;
                                                                                params3 = params9;
                                                                                videoEditedInfo3 = location8;
                                                                                str = params;
                                                                                message4 = message;
                                                                                user2 = user;
                                                                            } catch (Exception e47) {
                                                                                e62222222222222222222222222222222222222222222222222222222222222NUM = e47;
                                                                                delayedMessage3 = delayedMessage6;
                                                                                params4 = params9;
                                                                                videoEditedInfo2 = location8;
                                                                                tLObject = encryptedChat;
                                                                                str2 = str5;
                                                                                str = params;
                                                                                message5 = message;
                                                                                inputPeer = sendToPeer7;
                                                                                user2 = user;
                                                                                newMsg3 = newMsg2;
                                                                                messageObject6 = retryMessageObject;
                                                                                messageObject = messageObject2;
                                                                                location7 = lower_id2;
                                                                                location2 = messageMedia;
                                                                                th = e62222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                        }
                                                                        ((TL_decryptedMessageMediaVideo) reqSend8.media).thumb = tL_document.thumb.bytes;
                                                                        reqSend8.media.caption = params;
                                                                        reqSend8.media.mime_type = MimeTypes.VIDEO_MP4;
                                                                        reqSend8.media.size = tL_document.size;
                                                                        for (a = 0; a < tL_document.attributes.size(); a++) {
                                                                            newMsg7 = (DocumentAttribute) tL_document.attributes.get(a);
                                                                            if (newMsg7 instanceof TL_documentAttributeVideo) {
                                                                                messageMedia = location7;
                                                                                reqSend8.media.f34w = newMsg7.f36w;
                                                                                reqSend8.media.f33h = newMsg7.f35h;
                                                                                reqSend8.media.duration = newMsg7.duration;
                                                                                break;
                                                                            }
                                                                            messageMedia = location7;
                                                                        }
                                                                        messageMedia = location7;
                                                                        reqSend8.media.thumb_h = tL_document.thumb.f42h;
                                                                        reqSend8.media.thumb_w = tL_document.thumb.f43w;
                                                                        if (tL_document.key != null) {
                                                                            if (j4 == 0) {
                                                                                encryptedFile2 = new TL_inputEncryptedFile();
                                                                                encryptedFile2.id = tL_document.id;
                                                                                encryptedFile2.access_hash = tL_document.access_hash;
                                                                                reqSend8.media.key = tL_document.key;
                                                                                reqSend8.media.iv = tL_document.iv;
                                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, encryptedFile2, null, messageObject2);
                                                                                i4 = lower_id2;
                                                                                params3 = params9;
                                                                                message4 = message;
                                                                                user2 = user;
                                                                            }
                                                                        }
                                                                        if (delayedMessage3 != null) {
                                                                            newMsg4 = peer;
                                                                            delayedMessage6 = delayedMessage3;
                                                                        } else {
                                                                            newMsg4 = peer;
                                                                            delayedMessage6 = new DelayedMessage(newMsg4);
                                                                            delayedMessage6.encryptedChat = sendToPeer4;
                                                                            delayedMessage6.type = 1;
                                                                            delayedMessage6.sendEncryptedRequest = reqSend8;
                                                                            delayedMessage6.originalPath = str5;
                                                                            delayedMessage6.obj = messageObject2;
                                                                        }
                                                                        location8 = videoEditedInfo;
                                                                        delayedMessage6.videoEditedInfo = location8;
                                                                        if (j4 == 0) {
                                                                            performSendDelayedMessage(delayedMessage6);
                                                                        }
                                                                        i4 = lower_id2;
                                                                        params3 = params9;
                                                                        videoEditedInfo3 = location8;
                                                                        str = params;
                                                                        message4 = message;
                                                                        user2 = user;
                                                                    }
                                                                } catch (Exception e48) {
                                                                    e62222222222222222222222222222222222222222222222222222222222222NUM = e48;
                                                                    params4 = params9;
                                                                    tLObject = encryptedChat;
                                                                    str2 = str5;
                                                                    str = params;
                                                                    inputPeer = sendToPeer7;
                                                                    user2 = user;
                                                                    videoEditedInfo2 = videoEditedInfo;
                                                                    newMsg3 = newMsg2;
                                                                    messageObject6 = retryMessageObject;
                                                                    messageObject = messageObject2;
                                                                    th = e62222222222222222222222222222222222222222222222222222222222222NUM;
                                                                    messageMedia2 = location7;
                                                                    location7 = lower_id2;
                                                                    location2 = messageMedia2;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            }
                                                            try {
                                                                reqSend8.media = new TL_decryptedMessageMediaDocument();
                                                                reqSend8.media.attributes = tL_document.attributes;
                                                                if (tL_document.thumb != null) {
                                                                    if (tL_document.thumb.bytes != null) {
                                                                        ((TL_decryptedMessageMediaDocument) reqSend8.media).thumb = tL_document.thumb.bytes;
                                                                        reqSend8.media.caption = params;
                                                                        reqSend8.media.mime_type = MimeTypes.VIDEO_MP4;
                                                                        reqSend8.media.size = tL_document.size;
                                                                        for (a = 0; a < tL_document.attributes.size(); a++) {
                                                                            newMsg7 = (DocumentAttribute) tL_document.attributes.get(a);
                                                                            if (newMsg7 instanceof TL_documentAttributeVideo) {
                                                                                messageMedia = location7;
                                                                                reqSend8.media.f34w = newMsg7.f36w;
                                                                                reqSend8.media.f33h = newMsg7.f35h;
                                                                                reqSend8.media.duration = newMsg7.duration;
                                                                                break;
                                                                            }
                                                                            messageMedia = location7;
                                                                        }
                                                                        messageMedia = location7;
                                                                        reqSend8.media.thumb_h = tL_document.thumb.f42h;
                                                                        reqSend8.media.thumb_w = tL_document.thumb.f43w;
                                                                        if (tL_document.key != null) {
                                                                            if (j4 == 0) {
                                                                                encryptedFile2 = new TL_inputEncryptedFile();
                                                                                encryptedFile2.id = tL_document.id;
                                                                                encryptedFile2.access_hash = tL_document.access_hash;
                                                                                reqSend8.media.key = tL_document.key;
                                                                                reqSend8.media.iv = tL_document.iv;
                                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, encryptedFile2, null, messageObject2);
                                                                                i4 = lower_id2;
                                                                                params3 = params9;
                                                                                message4 = message;
                                                                                user2 = user;
                                                                            }
                                                                        }
                                                                        if (delayedMessage3 != null) {
                                                                            newMsg4 = peer;
                                                                            delayedMessage6 = new DelayedMessage(newMsg4);
                                                                            delayedMessage6.encryptedChat = sendToPeer4;
                                                                            delayedMessage6.type = 1;
                                                                            delayedMessage6.sendEncryptedRequest = reqSend8;
                                                                            delayedMessage6.originalPath = str5;
                                                                            delayedMessage6.obj = messageObject2;
                                                                        } else {
                                                                            newMsg4 = peer;
                                                                            delayedMessage6 = delayedMessage3;
                                                                        }
                                                                        location8 = videoEditedInfo;
                                                                        delayedMessage6.videoEditedInfo = location8;
                                                                        if (j4 == 0) {
                                                                            performSendDelayedMessage(delayedMessage6);
                                                                        }
                                                                        i4 = lower_id2;
                                                                        params3 = params9;
                                                                        videoEditedInfo3 = location8;
                                                                        str = params;
                                                                        message4 = message;
                                                                        user2 = user;
                                                                    }
                                                                }
                                                                ((TL_decryptedMessageMediaDocument) reqSend8.media).thumb = new byte[0];
                                                                reqSend8.media.caption = params;
                                                                reqSend8.media.mime_type = MimeTypes.VIDEO_MP4;
                                                                reqSend8.media.size = tL_document.size;
                                                                for (a = 0; a < tL_document.attributes.size(); a++) {
                                                                    newMsg7 = (DocumentAttribute) tL_document.attributes.get(a);
                                                                    if (newMsg7 instanceof TL_documentAttributeVideo) {
                                                                        messageMedia = location7;
                                                                        reqSend8.media.f34w = newMsg7.f36w;
                                                                        reqSend8.media.f33h = newMsg7.f35h;
                                                                        reqSend8.media.duration = newMsg7.duration;
                                                                        break;
                                                                    }
                                                                    messageMedia = location7;
                                                                }
                                                                messageMedia = location7;
                                                                reqSend8.media.thumb_h = tL_document.thumb.f42h;
                                                                reqSend8.media.thumb_w = tL_document.thumb.f43w;
                                                                if (tL_document.key != null) {
                                                                    if (j4 == 0) {
                                                                        encryptedFile2 = new TL_inputEncryptedFile();
                                                                        encryptedFile2.id = tL_document.id;
                                                                        encryptedFile2.access_hash = tL_document.access_hash;
                                                                        reqSend8.media.key = tL_document.key;
                                                                        reqSend8.media.iv = tL_document.iv;
                                                                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, encryptedFile2, null, messageObject2);
                                                                        i4 = lower_id2;
                                                                        params3 = params9;
                                                                        message4 = message;
                                                                        user2 = user;
                                                                    }
                                                                }
                                                                if (delayedMessage3 != null) {
                                                                    newMsg4 = peer;
                                                                    delayedMessage6 = delayedMessage3;
                                                                } else {
                                                                    newMsg4 = peer;
                                                                    delayedMessage6 = new DelayedMessage(newMsg4);
                                                                    delayedMessage6.encryptedChat = sendToPeer4;
                                                                    delayedMessage6.type = 1;
                                                                    delayedMessage6.sendEncryptedRequest = reqSend8;
                                                                    delayedMessage6.originalPath = str5;
                                                                    delayedMessage6.obj = messageObject2;
                                                                }
                                                                location8 = videoEditedInfo;
                                                                delayedMessage6.videoEditedInfo = location8;
                                                                if (j4 == 0) {
                                                                    performSendDelayedMessage(delayedMessage6);
                                                                }
                                                                i4 = lower_id2;
                                                                params3 = params9;
                                                                videoEditedInfo3 = location8;
                                                                str = params;
                                                                message4 = message;
                                                                user2 = user;
                                                            } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                messageMedia = location7;
                                                                newMsg4 = peer;
                                                                params4 = params9;
                                                                videoEditedInfo2 = videoEditedInfo;
                                                                tLObject = encryptedChat;
                                                                str2 = str5;
                                                                str = params;
                                                                message5 = message;
                                                                inputPeer = sendToPeer7;
                                                                user2 = user;
                                                                newMsg3 = newMsg2;
                                                                messageObject6 = retryMessageObject;
                                                                messageObject = messageObject2;
                                                                location7 = lower_id2;
                                                                location2 = messageMedia;
                                                                th = e622222222222222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        messageMedia = location7;
                                                        location8 = videoEditedInfo;
                                                        newMsg4 = peer;
                                                        User videoEditedInfo5;
                                                        if (lower_id2 == 6) {
                                                            try {
                                                                reqSend8.media = new TL_decryptedMessageMediaContact();
                                                                videoEditedInfo3 = location8;
                                                                message4 = message;
                                                                videoEditedInfo5 = user;
                                                                try {
                                                                    reqSend8.media.phone_number = videoEditedInfo5.phone;
                                                                    reqSend8.media.first_name = videoEditedInfo5.first_name;
                                                                    reqSend8.media.last_name = videoEditedInfo5.last_name;
                                                                    reqSend8.media.user_id = videoEditedInfo5.id;
                                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, null, null, messageObject2);
                                                                    i4 = lower_id2;
                                                                    params3 = params9;
                                                                    user2 = videoEditedInfo5;
                                                                    str = params;
                                                                    delayedMessage6 = delayedMessage3;
                                                                    type2 = path;
                                                                    if (j4 == 0) {
                                                                        try {
                                                                            if (delayedMessage6.sendEncryptedRequest == null) {
                                                                                try {
                                                                                    request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                                } catch (Exception e49) {
                                                                                    e622222222222222222222222222222222222222222222222222222222222222NUM = e49;
                                                                                    messageObject = messageObject2;
                                                                                    delayedMessage3 = delayedMessage6;
                                                                                    tLObject = encryptedChat;
                                                                                    newMsg3 = newMsg2;
                                                                                    location2 = messageMedia;
                                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                                    message5 = message4;
                                                                                    params4 = params3;
                                                                                    type2 = i4;
                                                                                    messageObject6 = retryMessageObject;
                                                                                    th = e622222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                    FileLog.m3e(th);
                                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                    if (messageObject != null) {
                                                                                        messageObject.messageOwner.send_state = 2;
                                                                                    }
                                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                    i6 = NotificationCenter.messageSendError;
                                                                                    objArr = new Object[1];
                                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                    instance.postNotificationName(i6, objArr);
                                                                                    processSentMessage(newMsg3.id);
                                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                                    messageMedia = location2;
                                                                                    tL_document2 = tL_document;
                                                                                }
                                                                            }
                                                                            request = new TL_messages_sendEncryptedMultiMedia();
                                                                            delayedMessage6.sendEncryptedRequest = request;
                                                                            delayedMessage6.messageObjects.add(messageObject2);
                                                                            message3 = newMsg2;
                                                                            try {
                                                                                delayedMessage6.messages.add(message3);
                                                                                delayedMessage6.originalPaths.add(str5);
                                                                                delayedMessage6.upload = true;
                                                                                request.messages.add(reqSend8);
                                                                                encryptedFile = new TL_inputEncryptedFile();
                                                                                type4 = i4;
                                                                                if (type4 == 3) {
                                                                                    j2 = 1;
                                                                                }
                                                                                tLObject = encryptedChat;
                                                                            } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                                tLObject = encryptedChat;
                                                                                delayedMessage3 = delayedMessage6;
                                                                                str2 = str5;
                                                                                newMsg3 = message3;
                                                                                type2 = i4;
                                                                                inputPeer = sendToPeer7;
                                                                                location2 = messageMedia;
                                                                                videoEditedInfo2 = videoEditedInfo3;
                                                                                message5 = message4;
                                                                                params4 = params3;
                                                                                messageObject6 = retryMessageObject;
                                                                                messageObject = messageObject2;
                                                                                th = e6222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                        } catch (Exception e50) {
                                                                            e6222222222222222222222222222222222222222222222222222222222222222NUM = e50;
                                                                            tLObject = encryptedChat;
                                                                            delayedMessage3 = delayedMessage6;
                                                                            str2 = str5;
                                                                            newMsg3 = newMsg2;
                                                                            type2 = i4;
                                                                            inputPeer = sendToPeer7;
                                                                            location2 = messageMedia;
                                                                            videoEditedInfo2 = videoEditedInfo3;
                                                                            message5 = message4;
                                                                            params4 = params3;
                                                                            messageObject6 = retryMessageObject;
                                                                            messageObject = messageObject2;
                                                                            th = e6222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                        try {
                                                                            encryptedFile.id = j2;
                                                                            request.files.add(encryptedFile);
                                                                            performSendDelayedMessage(delayedMessage6);
                                                                        } catch (Exception e51) {
                                                                            e6222222222222222222222222222222222222222222222222222222222222222NUM = e51;
                                                                            delayedMessage3 = delayedMessage6;
                                                                            str2 = str5;
                                                                            newMsg3 = message3;
                                                                            type2 = type4;
                                                                            inputPeer = sendToPeer7;
                                                                            location2 = messageMedia;
                                                                            videoEditedInfo2 = videoEditedInfo3;
                                                                            message5 = message4;
                                                                            params4 = params3;
                                                                            messageObject6 = retryMessageObject;
                                                                            messageObject = messageObject2;
                                                                            th = e6222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    }
                                                                    decryptedMessage = reqSend8;
                                                                    tLObject = encryptedChat;
                                                                    message3 = newMsg2;
                                                                    type4 = i4;
                                                                    if (retryMessageObject == null) {
                                                                        try {
                                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                                        } catch (Exception e52) {
                                                                            e6222222222222222222222222222222222222222222222222222222222222222NUM = e52;
                                                                            delayedMessage3 = delayedMessage6;
                                                                            str2 = str5;
                                                                            newMsg3 = message3;
                                                                            type2 = type4;
                                                                            inputPeer = sendToPeer7;
                                                                            location2 = messageMedia;
                                                                            videoEditedInfo2 = videoEditedInfo3;
                                                                            message5 = message4;
                                                                            params4 = params3;
                                                                            messageObject = messageObject2;
                                                                            th = e6222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    }
                                                                    str2 = str5;
                                                                    document5 = tL_document;
                                                                    webPage5 = webPage2;
                                                                    arrayList5 = arrayList3;
                                                                    inputPeer = sendToPeer7;
                                                                    encryptedChat4 = message4;
                                                                    params6 = params3;
                                                                    arrayList4 = entities;
                                                                    params4 = params6;
                                                                    encryptedChat5 = encryptedChat4;
                                                                    newMsg3 = message3;
                                                                    params6 = type4;
                                                                    arrayList3 = arrayList5;
                                                                    type4 = messageObject2;
                                                                } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                    messageObject = messageObject2;
                                                                    params4 = params9;
                                                                    user2 = videoEditedInfo5;
                                                                    tLObject = encryptedChat;
                                                                    str2 = str5;
                                                                    str = params;
                                                                    inputPeer = sendToPeer7;
                                                                    newMsg3 = newMsg2;
                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                    message5 = message4;
                                                                    messageObject6 = retryMessageObject;
                                                                    th = e62222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                    location8 = lower_id2;
                                                                    location2 = messageMedia;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                message4 = message;
                                                                messageObject = messageObject2;
                                                                params4 = params9;
                                                                user2 = user;
                                                                tLObject = encryptedChat;
                                                                str2 = str5;
                                                                str = params;
                                                                inputPeer = sendToPeer7;
                                                                newMsg3 = newMsg2;
                                                                videoEditedInfo2 = location8;
                                                                message5 = message4;
                                                                messageObject6 = retryMessageObject;
                                                                th = e622222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                location8 = lower_id2;
                                                                location2 = messageMedia;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        videoEditedInfo3 = location8;
                                                        message4 = message;
                                                        videoEditedInfo5 = user;
                                                        if (lower_id2 == 7) {
                                                            params3 = params9;
                                                            user2 = videoEditedInfo5;
                                                        } else if (lower_id2 == 9 && tL_document != null) {
                                                            params3 = params9;
                                                            user2 = videoEditedInfo5;
                                                        } else if (lower_id2 == 8) {
                                                            try {
                                                                delayedMessage6 = new DelayedMessage(newMsg4);
                                                                try {
                                                                    delayedMessage6.encryptedChat = sendToPeer4;
                                                                    delayedMessage6.sendEncryptedRequest = reqSend8;
                                                                    delayedMessage6.obj = messageObject2;
                                                                    delayedMessage6.type = 3;
                                                                    reqSend8.media = new TL_decryptedMessageMediaDocument();
                                                                    user2 = videoEditedInfo5;
                                                                    try {
                                                                        reqSend8.media.attributes = tL_document.attributes;
                                                                        reqSend8.media.caption = params;
                                                                        if (tL_document.thumb != null) {
                                                                            try {
                                                                                if (tL_document.thumb.bytes != null) {
                                                                                    ((TL_decryptedMessageMediaDocument) reqSend8.media).thumb = tL_document.thumb.bytes;
                                                                                    reqSend8.media.thumb_h = tL_document.thumb.f42h;
                                                                                    reqSend8.media.thumb_w = tL_document.thumb.f43w;
                                                                                    params3 = params9;
                                                                                    reqSend8.media.mime_type = tL_document.mime_type;
                                                                                    reqSend8.media.size = tL_document.size;
                                                                                    delayedMessage6.originalPath = str5;
                                                                                    performSendDelayedMessage(delayedMessage6);
                                                                                    i4 = lower_id2;
                                                                                    str = params;
                                                                                }
                                                                            } catch (Exception e53) {
                                                                                e622222222222222222222222222222222222222222222222222222222222222222NUM = e53;
                                                                                messageObject = messageObject2;
                                                                                delayedMessage3 = delayedMessage6;
                                                                                type2 = lower_id2;
                                                                                params4 = params9;
                                                                                tLObject = encryptedChat;
                                                                                str2 = str5;
                                                                                str = params;
                                                                                inputPeer = sendToPeer7;
                                                                                newMsg3 = newMsg2;
                                                                                location2 = messageMedia;
                                                                                videoEditedInfo2 = videoEditedInfo3;
                                                                                message5 = message4;
                                                                                messageObject6 = retryMessageObject;
                                                                                th = e622222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                                FileLog.m3e(th);
                                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                                if (messageObject != null) {
                                                                                    messageObject.messageOwner.send_state = 2;
                                                                                }
                                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                                i6 = NotificationCenter.messageSendError;
                                                                                objArr = new Object[1];
                                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                                instance.postNotificationName(i6, objArr);
                                                                                processSentMessage(newMsg3.id);
                                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                                messageMedia = location2;
                                                                                tL_document2 = tL_document;
                                                                            }
                                                                        }
                                                                        params3 = params9;
                                                                        try {
                                                                            ((TL_decryptedMessageMediaDocument) reqSend8.media).thumb = new byte[0];
                                                                            reqSend8.media.thumb_h = 0;
                                                                            reqSend8.media.thumb_w = 0;
                                                                            reqSend8.media.mime_type = tL_document.mime_type;
                                                                            reqSend8.media.size = tL_document.size;
                                                                            delayedMessage6.originalPath = str5;
                                                                            performSendDelayedMessage(delayedMessage6);
                                                                            i4 = lower_id2;
                                                                            str = params;
                                                                        } catch (Exception e54) {
                                                                            e622222222222222222222222222222222222222222222222222222222222222222NUM = e54;
                                                                            messageObject = messageObject2;
                                                                            delayedMessage3 = delayedMessage6;
                                                                            type2 = lower_id2;
                                                                            tLObject = encryptedChat;
                                                                            str2 = str5;
                                                                            str = params;
                                                                            inputPeer = sendToPeer7;
                                                                            newMsg3 = newMsg2;
                                                                            location2 = messageMedia;
                                                                            videoEditedInfo2 = videoEditedInfo3;
                                                                            message5 = message4;
                                                                            params4 = params3;
                                                                            messageObject6 = retryMessageObject;
                                                                            th = e622222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                            FileLog.m3e(th);
                                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                            if (messageObject != null) {
                                                                                messageObject.messageOwner.send_state = 2;
                                                                            }
                                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                            i6 = NotificationCenter.messageSendError;
                                                                            objArr = new Object[1];
                                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                                            instance.postNotificationName(i6, objArr);
                                                                            processSentMessage(newMsg3.id);
                                                                            videoEditedInfo3 = videoEditedInfo2;
                                                                            messageMedia = location2;
                                                                            tL_document2 = tL_document;
                                                                        }
                                                                    } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                        params3 = params9;
                                                                        messageObject = messageObject2;
                                                                        delayedMessage3 = delayedMessage6;
                                                                        type2 = lower_id2;
                                                                        tLObject = encryptedChat;
                                                                        str2 = str5;
                                                                        str = params;
                                                                        inputPeer = sendToPeer7;
                                                                        newMsg3 = newMsg2;
                                                                        location2 = messageMedia;
                                                                        videoEditedInfo2 = videoEditedInfo3;
                                                                        message5 = message4;
                                                                        params4 = params3;
                                                                        messageObject6 = retryMessageObject;
                                                                        th = e6222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                        FileLog.m3e(th);
                                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                        if (messageObject != null) {
                                                                            messageObject.messageOwner.send_state = 2;
                                                                        }
                                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                        i6 = NotificationCenter.messageSendError;
                                                                        objArr = new Object[1];
                                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                                        instance.postNotificationName(i6, objArr);
                                                                        processSentMessage(newMsg3.id);
                                                                        videoEditedInfo3 = videoEditedInfo2;
                                                                        messageMedia = location2;
                                                                        tL_document2 = tL_document;
                                                                    }
                                                                } catch (Exception e55) {
                                                                    e6222222222222222222222222222222222222222222222222222222222222222222NUM = e55;
                                                                    params3 = params9;
                                                                    user2 = videoEditedInfo5;
                                                                    messageObject = messageObject2;
                                                                    delayedMessage3 = delayedMessage6;
                                                                    videoEditedInfo5 = lower_id2;
                                                                    tLObject = encryptedChat;
                                                                    newMsg3 = newMsg2;
                                                                    location2 = messageMedia;
                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                    message5 = message4;
                                                                    params4 = params3;
                                                                    messageObject6 = retryMessageObject;
                                                                    th = e6222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            } catch (Exception e56) {
                                                                e6222222222222222222222222222222222222222222222222222222222222222222NUM = e56;
                                                                params3 = params9;
                                                                user2 = videoEditedInfo5;
                                                                messageObject = messageObject2;
                                                                videoEditedInfo5 = lower_id2;
                                                                tLObject = encryptedChat;
                                                                newMsg3 = newMsg2;
                                                                location2 = messageMedia;
                                                                videoEditedInfo2 = videoEditedInfo3;
                                                                message5 = message4;
                                                                params4 = params3;
                                                                messageObject6 = retryMessageObject;
                                                                th = e6222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        } else {
                                                            params3 = params9;
                                                            user2 = videoEditedInfo5;
                                                            i4 = lower_id2;
                                                            str = params;
                                                            delayedMessage6 = delayedMessage3;
                                                            type2 = path;
                                                            if (j4 == 0) {
                                                                decryptedMessage = reqSend8;
                                                                tLObject = encryptedChat;
                                                                message3 = newMsg2;
                                                                type4 = i4;
                                                            } else {
                                                                if (delayedMessage6.sendEncryptedRequest == null) {
                                                                    request = new TL_messages_sendEncryptedMultiMedia();
                                                                    delayedMessage6.sendEncryptedRequest = request;
                                                                } else {
                                                                    request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                }
                                                                delayedMessage6.messageObjects.add(messageObject2);
                                                                message3 = newMsg2;
                                                                delayedMessage6.messages.add(message3);
                                                                delayedMessage6.originalPaths.add(str5);
                                                                delayedMessage6.upload = true;
                                                                request.messages.add(reqSend8);
                                                                encryptedFile = new TL_inputEncryptedFile();
                                                                type4 = i4;
                                                                if (type4 == 3) {
                                                                    j2 = 1;
                                                                }
                                                                tLObject = encryptedChat;
                                                                encryptedFile.id = j2;
                                                                request.files.add(encryptedFile);
                                                                performSendDelayedMessage(delayedMessage6);
                                                            }
                                                            if (retryMessageObject == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                            }
                                                            str2 = str5;
                                                            document5 = tL_document;
                                                            webPage5 = webPage2;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            encryptedChat4 = message4;
                                                            params6 = params3;
                                                            arrayList4 = entities;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        }
                                                        try {
                                                            if (MessageObject.isStickerDocument(tL_document)) {
                                                                reqSend8.media = new TL_decryptedMessageMediaExternalDocument();
                                                                i4 = lower_id2;
                                                                try {
                                                                    reqSend8.media.id = tL_document.id;
                                                                    reqSend8.media.date = tL_document.date;
                                                                    reqSend8.media.access_hash = tL_document.access_hash;
                                                                    reqSend8.media.mime_type = tL_document.mime_type;
                                                                    reqSend8.media.size = tL_document.size;
                                                                    reqSend8.media.dc_id = tL_document.dc_id;
                                                                    reqSend8.media.attributes = tL_document.attributes;
                                                                    if (tL_document.thumb == null) {
                                                                        ((TL_decryptedMessageMediaExternalDocument) reqSend8.media).thumb = new TL_photoSizeEmpty();
                                                                        ((TL_decryptedMessageMediaExternalDocument) reqSend8.media).thumb.type = "s";
                                                                    } else {
                                                                        ((TL_decryptedMessageMediaExternalDocument) reqSend8.media).thumb = tL_document.thumb;
                                                                    }
                                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, null, null, messageObject2);
                                                                    str = params;
                                                                    delayedMessage6 = delayedMessage3;
                                                                    type2 = path;
                                                                    if (j4 == 0) {
                                                                        if (delayedMessage6.sendEncryptedRequest == null) {
                                                                            request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                        } else {
                                                                            request = new TL_messages_sendEncryptedMultiMedia();
                                                                            delayedMessage6.sendEncryptedRequest = request;
                                                                        }
                                                                        delayedMessage6.messageObjects.add(messageObject2);
                                                                        message3 = newMsg2;
                                                                        delayedMessage6.messages.add(message3);
                                                                        delayedMessage6.originalPaths.add(str5);
                                                                        delayedMessage6.upload = true;
                                                                        request.messages.add(reqSend8);
                                                                        encryptedFile = new TL_inputEncryptedFile();
                                                                        type4 = i4;
                                                                        if (type4 == 3) {
                                                                            j2 = 1;
                                                                        }
                                                                        tLObject = encryptedChat;
                                                                        encryptedFile.id = j2;
                                                                        request.files.add(encryptedFile);
                                                                        performSendDelayedMessage(delayedMessage6);
                                                                    } else {
                                                                        decryptedMessage = reqSend8;
                                                                        tLObject = encryptedChat;
                                                                        message3 = newMsg2;
                                                                        type4 = i4;
                                                                    }
                                                                    if (retryMessageObject == null) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                                    }
                                                                    str2 = str5;
                                                                    document5 = tL_document;
                                                                    webPage5 = webPage2;
                                                                    arrayList5 = arrayList3;
                                                                    inputPeer = sendToPeer7;
                                                                    encryptedChat4 = message4;
                                                                    params6 = params3;
                                                                    arrayList4 = entities;
                                                                    params4 = params6;
                                                                    encryptedChat5 = encryptedChat4;
                                                                    newMsg3 = message3;
                                                                    params6 = type4;
                                                                    arrayList3 = arrayList5;
                                                                    type4 = messageObject2;
                                                                } catch (Exception e57) {
                                                                    e6222222222222222222222222222222222222222222222222222222222222222222NUM = e57;
                                                                    messageObject = messageObject2;
                                                                    newMsg3 = newMsg2;
                                                                    location2 = messageMedia;
                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                    message5 = message4;
                                                                    params4 = params3;
                                                                    type2 = i4;
                                                                    messageObject6 = retryMessageObject;
                                                                    th = e6222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            }
                                                            i4 = lower_id2;
                                                            ImageLoader.fillPhotoSizeWithBytes(tL_document.thumb);
                                                            reqSend8.media = new TL_decryptedMessageMediaDocument();
                                                            reqSend8.media.attributes = tL_document.attributes;
                                                            reqSend8.media.caption = params;
                                                            if (tL_document.thumb == null || tL_document.thumb.bytes == null) {
                                                                ((TL_decryptedMessageMediaDocument) reqSend8.media).thumb = new byte[0];
                                                                reqSend8.media.thumb_h = 0;
                                                                reqSend8.media.thumb_w = 0;
                                                            } else {
                                                                ((TL_decryptedMessageMediaDocument) reqSend8.media).thumb = tL_document.thumb.bytes;
                                                                reqSend8.media.thumb_h = tL_document.thumb.f42h;
                                                                reqSend8.media.thumb_w = tL_document.thumb.f43w;
                                                            }
                                                            reqSend8.media.size = tL_document.size;
                                                            reqSend8.media.mime_type = tL_document.mime_type;
                                                            if (tL_document.key == null) {
                                                                delayedMessage6 = new DelayedMessage(newMsg4);
                                                                try {
                                                                    delayedMessage6.originalPath = str5;
                                                                    delayedMessage6.sendEncryptedRequest = reqSend8;
                                                                    delayedMessage6.type = 2;
                                                                    delayedMessage6.obj = messageObject2;
                                                                    delayedMessage6.encryptedChat = sendToPeer4;
                                                                    ve = path;
                                                                    if (ve != null && path.length() > 0 && ve.startsWith("http")) {
                                                                        delayedMessage6.httpLocation = ve;
                                                                    }
                                                                    performSendDelayedMessage(delayedMessage6);
                                                                    name = ve;
                                                                    str = params;
                                                                    if (j4 == 0) {
                                                                        decryptedMessage = reqSend8;
                                                                        tLObject = encryptedChat;
                                                                        message3 = newMsg2;
                                                                        type4 = i4;
                                                                    } else {
                                                                        if (delayedMessage6.sendEncryptedRequest == null) {
                                                                            request = new TL_messages_sendEncryptedMultiMedia();
                                                                            delayedMessage6.sendEncryptedRequest = request;
                                                                        } else {
                                                                            request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                        }
                                                                        delayedMessage6.messageObjects.add(messageObject2);
                                                                        message3 = newMsg2;
                                                                        delayedMessage6.messages.add(message3);
                                                                        delayedMessage6.originalPaths.add(str5);
                                                                        delayedMessage6.upload = true;
                                                                        request.messages.add(reqSend8);
                                                                        encryptedFile = new TL_inputEncryptedFile();
                                                                        type4 = i4;
                                                                        if (type4 == 3) {
                                                                            j2 = 1;
                                                                        }
                                                                        tLObject = encryptedChat;
                                                                        encryptedFile.id = j2;
                                                                        request.files.add(encryptedFile);
                                                                        performSendDelayedMessage(delayedMessage6);
                                                                    }
                                                                    if (retryMessageObject == null) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                                    }
                                                                    str2 = str5;
                                                                    document5 = tL_document;
                                                                    webPage5 = webPage2;
                                                                    arrayList5 = arrayList3;
                                                                    inputPeer = sendToPeer7;
                                                                    encryptedChat4 = message4;
                                                                    params6 = params3;
                                                                    arrayList4 = entities;
                                                                    params4 = params6;
                                                                    encryptedChat5 = encryptedChat4;
                                                                    newMsg3 = message3;
                                                                    params6 = type4;
                                                                    arrayList3 = arrayList5;
                                                                    type4 = messageObject2;
                                                                } catch (Exception e58) {
                                                                    e6222222222222222222222222222222222222222222222222222222222222222222NUM = e58;
                                                                    messageObject = messageObject2;
                                                                    delayedMessage3 = delayedMessage6;
                                                                    newMsg3 = newMsg2;
                                                                    location2 = messageMedia;
                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                    message5 = message4;
                                                                    params4 = params3;
                                                                    type2 = i4;
                                                                    messageObject6 = retryMessageObject;
                                                                    th = e6222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            }
                                                            ve = path;
                                                            encryptedFile2 = new TL_inputEncryptedFile();
                                                            encryptedFile2.id = tL_document.id;
                                                            encryptedFile2.access_hash = tL_document.access_hash;
                                                            reqSend8.media.key = tL_document.key;
                                                            reqSend8.media.iv = tL_document.iv;
                                                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, encryptedFile2, null, messageObject2);
                                                            str = params;
                                                            delayedMessage6 = delayedMessage3;
                                                            type2 = path;
                                                            if (j4 == 0) {
                                                                if (delayedMessage6.sendEncryptedRequest == null) {
                                                                    request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                } else {
                                                                    request = new TL_messages_sendEncryptedMultiMedia();
                                                                    delayedMessage6.sendEncryptedRequest = request;
                                                                }
                                                                delayedMessage6.messageObjects.add(messageObject2);
                                                                message3 = newMsg2;
                                                                delayedMessage6.messages.add(message3);
                                                                delayedMessage6.originalPaths.add(str5);
                                                                delayedMessage6.upload = true;
                                                                request.messages.add(reqSend8);
                                                                encryptedFile = new TL_inputEncryptedFile();
                                                                type4 = i4;
                                                                if (type4 == 3) {
                                                                    j2 = 1;
                                                                }
                                                                tLObject = encryptedChat;
                                                                encryptedFile.id = j2;
                                                                request.files.add(encryptedFile);
                                                                performSendDelayedMessage(delayedMessage6);
                                                            } else {
                                                                decryptedMessage = reqSend8;
                                                                tLObject = encryptedChat;
                                                                message3 = newMsg2;
                                                                type4 = i4;
                                                            }
                                                            if (retryMessageObject == null) {
                                                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                            }
                                                            str2 = str5;
                                                            document5 = tL_document;
                                                            webPage5 = webPage2;
                                                            arrayList5 = arrayList3;
                                                            inputPeer = sendToPeer7;
                                                            encryptedChat4 = message4;
                                                            params6 = params3;
                                                            arrayList4 = entities;
                                                            params4 = params6;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            arrayList3 = arrayList5;
                                                            type4 = messageObject2;
                                                        } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                            i4 = lower_id2;
                                                            messageObject = messageObject2;
                                                            photo2 = encryptedChat;
                                                            str2 = str5;
                                                            str = params;
                                                            inputPeer = sendToPeer7;
                                                            newMsg3 = newMsg2;
                                                            location2 = messageMedia;
                                                            videoEditedInfo2 = videoEditedInfo3;
                                                            message5 = message4;
                                                            params4 = params3;
                                                            location7 = i4;
                                                            messageObject6 = retryMessageObject;
                                                            th = e62222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                        name = path;
                                                        if (j4 == 0) {
                                                            decryptedMessage = reqSend8;
                                                            tLObject = encryptedChat;
                                                            message3 = newMsg2;
                                                            type4 = i4;
                                                        } else {
                                                            if (delayedMessage6.sendEncryptedRequest == null) {
                                                                request = new TL_messages_sendEncryptedMultiMedia();
                                                                delayedMessage6.sendEncryptedRequest = request;
                                                            } else {
                                                                request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                            }
                                                            delayedMessage6.messageObjects.add(messageObject2);
                                                            message3 = newMsg2;
                                                            delayedMessage6.messages.add(message3);
                                                            delayedMessage6.originalPaths.add(str5);
                                                            delayedMessage6.upload = true;
                                                            request.messages.add(reqSend8);
                                                            encryptedFile = new TL_inputEncryptedFile();
                                                            type4 = i4;
                                                            if (type4 == 3) {
                                                                j2 = 1;
                                                            }
                                                            tLObject = encryptedChat;
                                                            encryptedFile.id = j2;
                                                            request.files.add(encryptedFile);
                                                            performSendDelayedMessage(delayedMessage6);
                                                        }
                                                        if (retryMessageObject == null) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                        }
                                                        str2 = str5;
                                                        document5 = tL_document;
                                                        webPage5 = webPage2;
                                                        arrayList5 = arrayList3;
                                                        inputPeer = sendToPeer7;
                                                        encryptedChat4 = message4;
                                                        params6 = params3;
                                                        arrayList4 = entities;
                                                        params4 = params6;
                                                        encryptedChat5 = encryptedChat4;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        arrayList3 = arrayList5;
                                                        type4 = messageObject2;
                                                    }
                                                    i4 = lower_id2;
                                                    params3 = params9;
                                                    messageMedia = location7;
                                                    message4 = message;
                                                    user2 = user;
                                                    encryptedChat9 = photo5;
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    newMsg4 = peer;
                                                    try {
                                                        PhotoSize small = (PhotoSize) encryptedChat.sizes.get(0);
                                                        PhotoSize big = (PhotoSize) encryptedChat.sizes.get(encryptedChat.sizes.size() - 1);
                                                        ImageLoader.fillPhotoSizeWithBytes(small);
                                                        reqSend8.media = new TL_decryptedMessageMediaPhoto();
                                                        reqSend8.media.caption = params;
                                                        if (small.bytes != null) {
                                                            ((TL_decryptedMessageMediaPhoto) reqSend8.media).thumb = small.bytes;
                                                        } else {
                                                            ((TL_decryptedMessageMediaPhoto) reqSend8.media).thumb = new byte[0];
                                                        }
                                                        reqSend8.media.thumb_h = small.f42h;
                                                        reqSend8.media.thumb_w = small.f43w;
                                                        reqSend8.media.f34w = big.f43w;
                                                        reqSend8.media.f33h = big.f42h;
                                                        reqSend8.media.size = big.size;
                                                        if (big.location.key == null) {
                                                        } else if (j4 != 0) {
                                                            str = params;
                                                        } else {
                                                            try {
                                                                InputEncryptedFile encryptedFile3 = new TL_inputEncryptedFile();
                                                                str = params;
                                                                try {
                                                                    encryptedFile3.id = big.location.volume_id;
                                                                    encryptedFile3.access_hash = big.location.secret;
                                                                    reqSend8.media.key = big.location.key;
                                                                    reqSend8.media.iv = big.location.iv;
                                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend8, messageObject2.messageOwner, sendToPeer4, encryptedFile3, null, messageObject2);
                                                                    message5 = delayedMessage3;
                                                                    name = path;
                                                                    delayedMessage6 = message5;
                                                                    if (j4 == 0) {
                                                                        if (delayedMessage6.sendEncryptedRequest == null) {
                                                                            request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                        } else {
                                                                            request = new TL_messages_sendEncryptedMultiMedia();
                                                                            delayedMessage6.sendEncryptedRequest = request;
                                                                        }
                                                                        delayedMessage6.messageObjects.add(messageObject2);
                                                                        message3 = newMsg2;
                                                                        delayedMessage6.messages.add(message3);
                                                                        delayedMessage6.originalPaths.add(str5);
                                                                        delayedMessage6.upload = true;
                                                                        request.messages.add(reqSend8);
                                                                        encryptedFile = new TL_inputEncryptedFile();
                                                                        type4 = i4;
                                                                        if (type4 == 3) {
                                                                            j2 = 1;
                                                                        }
                                                                        tLObject = encryptedChat;
                                                                        encryptedFile.id = j2;
                                                                        request.files.add(encryptedFile);
                                                                        performSendDelayedMessage(delayedMessage6);
                                                                    } else {
                                                                        decryptedMessage = reqSend8;
                                                                        tLObject = encryptedChat;
                                                                        message3 = newMsg2;
                                                                        type4 = i4;
                                                                    }
                                                                    if (retryMessageObject == null) {
                                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                                    }
                                                                    str2 = str5;
                                                                    document5 = tL_document;
                                                                    webPage5 = webPage2;
                                                                    arrayList5 = arrayList3;
                                                                    inputPeer = sendToPeer7;
                                                                    encryptedChat4 = message4;
                                                                    params6 = params3;
                                                                    arrayList4 = entities;
                                                                    params4 = params6;
                                                                    encryptedChat5 = encryptedChat4;
                                                                    newMsg3 = message3;
                                                                    params6 = type4;
                                                                    arrayList3 = arrayList5;
                                                                    type4 = messageObject2;
                                                                } catch (Exception e59) {
                                                                    e62222222222222222222222222222222222222222222222222222222222222222222NUM = e59;
                                                                    messageObject = messageObject2;
                                                                    tLObject = encryptedChat;
                                                                    newMsg3 = newMsg2;
                                                                    location2 = messageMedia;
                                                                    videoEditedInfo2 = videoEditedInfo3;
                                                                    message5 = message4;
                                                                    params4 = params3;
                                                                    type2 = i4;
                                                                    messageObject6 = retryMessageObject;
                                                                    th = e62222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                    FileLog.m3e(th);
                                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                    if (messageObject != null) {
                                                                        messageObject.messageOwner.send_state = 2;
                                                                    }
                                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                    i6 = NotificationCenter.messageSendError;
                                                                    objArr = new Object[1];
                                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                                    instance.postNotificationName(i6, objArr);
                                                                    processSentMessage(newMsg3.id);
                                                                    videoEditedInfo3 = videoEditedInfo2;
                                                                    messageMedia = location2;
                                                                    tL_document2 = tL_document;
                                                                }
                                                            } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                                str = params;
                                                                messageObject = messageObject2;
                                                                photo2 = encryptedChat;
                                                                str2 = str5;
                                                                inputPeer = sendToPeer7;
                                                                newMsg3 = newMsg2;
                                                                location2 = messageMedia;
                                                                videoEditedInfo2 = videoEditedInfo3;
                                                                message5 = message4;
                                                                params4 = params3;
                                                                type2 = i4;
                                                                messageObject6 = retryMessageObject;
                                                                th = e622222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        DelayedMessage delayedMessage7;
                                                        if (delayedMessage3 == null) {
                                                            delayedMessage7 = new DelayedMessage(newMsg4);
                                                            try {
                                                                delayedMessage7.encryptedChat = sendToPeer4;
                                                                delayedMessage7.type = 0;
                                                                delayedMessage7.originalPath = str5;
                                                                delayedMessage7.sendEncryptedRequest = reqSend8;
                                                                delayedMessage7.obj = messageObject2;
                                                            } catch (Exception e60) {
                                                                e622222222222222222222222222222222222222222222222222222222222222222222NUM = e60;
                                                                messageObject = messageObject2;
                                                                delayedMessage3 = delayedMessage7;
                                                                tLObject = encryptedChat;
                                                                newMsg3 = newMsg2;
                                                                location2 = messageMedia;
                                                                videoEditedInfo2 = videoEditedInfo3;
                                                                message5 = message4;
                                                                params4 = params3;
                                                                type2 = i4;
                                                                messageObject6 = retryMessageObject;
                                                                th = e622222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        }
                                                        delayedMessage7 = delayedMessage3;
                                                        type2 = path;
                                                    } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                        tLObject = encryptedChat;
                                                        str = params;
                                                        messageObject6 = retryMessageObject;
                                                        str2 = str5;
                                                        newMsg3 = newMsg2;
                                                        type2 = i4;
                                                        inputPeer = sendToPeer7;
                                                        location2 = messageMedia;
                                                        videoEditedInfo2 = videoEditedInfo3;
                                                        message5 = message4;
                                                        params4 = params3;
                                                        messageObject = messageObject2;
                                                        th = e6222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                    try {
                                                        if (!TextUtils.isEmpty(path)) {
                                                            if (type2.startsWith("http")) {
                                                                message5.httpLocation = type2;
                                                                if (j4 == 0) {
                                                                    performSendDelayedMessage(message5);
                                                                }
                                                                delayedMessage6 = message5;
                                                                if (j4 == 0) {
                                                                    decryptedMessage = reqSend8;
                                                                    tLObject = encryptedChat;
                                                                    message3 = newMsg2;
                                                                    type4 = i4;
                                                                } else {
                                                                    if (delayedMessage6.sendEncryptedRequest == null) {
                                                                        request = new TL_messages_sendEncryptedMultiMedia();
                                                                        delayedMessage6.sendEncryptedRequest = request;
                                                                    } else {
                                                                        request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                                    }
                                                                    delayedMessage6.messageObjects.add(messageObject2);
                                                                    message3 = newMsg2;
                                                                    delayedMessage6.messages.add(message3);
                                                                    delayedMessage6.originalPaths.add(str5);
                                                                    delayedMessage6.upload = true;
                                                                    request.messages.add(reqSend8);
                                                                    encryptedFile = new TL_inputEncryptedFile();
                                                                    type4 = i4;
                                                                    if (type4 == 3) {
                                                                        j2 = 1;
                                                                    }
                                                                    tLObject = encryptedChat;
                                                                    encryptedFile.id = j2;
                                                                    request.files.add(encryptedFile);
                                                                    performSendDelayedMessage(delayedMessage6);
                                                                }
                                                                if (retryMessageObject == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                                }
                                                                str2 = str5;
                                                                document5 = tL_document;
                                                                webPage5 = webPage2;
                                                                arrayList5 = arrayList3;
                                                                inputPeer = sendToPeer7;
                                                                encryptedChat4 = message4;
                                                                params6 = params3;
                                                                arrayList4 = entities;
                                                                params4 = params6;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                arrayList3 = arrayList5;
                                                                type4 = messageObject2;
                                                            }
                                                        }
                                                        message5.location = ((PhotoSize) encryptedChat.sizes.get(encryptedChat.sizes.size() - 1)).location;
                                                        if (j4 == 0) {
                                                            performSendDelayedMessage(message5);
                                                        }
                                                        delayedMessage6 = message5;
                                                        if (j4 == 0) {
                                                            if (delayedMessage6.sendEncryptedRequest == null) {
                                                                request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                            } else {
                                                                request = new TL_messages_sendEncryptedMultiMedia();
                                                                delayedMessage6.sendEncryptedRequest = request;
                                                            }
                                                            delayedMessage6.messageObjects.add(messageObject2);
                                                            message3 = newMsg2;
                                                            delayedMessage6.messages.add(message3);
                                                            delayedMessage6.originalPaths.add(str5);
                                                            delayedMessage6.upload = true;
                                                            request.messages.add(reqSend8);
                                                            encryptedFile = new TL_inputEncryptedFile();
                                                            type4 = i4;
                                                            if (type4 == 3) {
                                                                j2 = 1;
                                                            }
                                                            tLObject = encryptedChat;
                                                            encryptedFile.id = j2;
                                                            request.files.add(encryptedFile);
                                                            performSendDelayedMessage(delayedMessage6);
                                                        } else {
                                                            decryptedMessage = reqSend8;
                                                            tLObject = encryptedChat;
                                                            message3 = newMsg2;
                                                            type4 = i4;
                                                        }
                                                        if (retryMessageObject == null) {
                                                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                        }
                                                        str2 = str5;
                                                        document5 = tL_document;
                                                        webPage5 = webPage2;
                                                        arrayList5 = arrayList3;
                                                        inputPeer = sendToPeer7;
                                                        encryptedChat4 = message4;
                                                        params6 = params3;
                                                        arrayList4 = entities;
                                                        params4 = params6;
                                                        encryptedChat5 = encryptedChat4;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        arrayList3 = arrayList5;
                                                        type4 = messageObject2;
                                                    } catch (Exception e61) {
                                                        e6222222222222222222222222222222222222222222222222222222222222222222222NUM = e61;
                                                        tLObject = encryptedChat;
                                                        messageObject6 = retryMessageObject;
                                                        delayedMessage = message5;
                                                        str2 = str5;
                                                        newMsg3 = newMsg2;
                                                        type2 = i4;
                                                        inputPeer = sendToPeer7;
                                                        location2 = messageMedia;
                                                        videoEditedInfo2 = videoEditedInfo3;
                                                        message5 = message4;
                                                        params4 = params3;
                                                        messageObject = messageObject2;
                                                        th = e6222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                    videoEditedInfo3 = videoEditedInfo;
                                                    newMsg4 = peer;
                                                    str = params;
                                                    delayedMessage6 = delayedMessage3;
                                                    type2 = path;
                                                    if (j4 == 0) {
                                                        decryptedMessage = reqSend8;
                                                        tLObject = encryptedChat;
                                                        message3 = newMsg2;
                                                        type4 = i4;
                                                    } else {
                                                        if (delayedMessage6.sendEncryptedRequest == null) {
                                                            request = new TL_messages_sendEncryptedMultiMedia();
                                                            delayedMessage6.sendEncryptedRequest = request;
                                                        } else {
                                                            request = (TL_messages_sendEncryptedMultiMedia) delayedMessage6.sendEncryptedRequest;
                                                        }
                                                        delayedMessage6.messageObjects.add(messageObject2);
                                                        message3 = newMsg2;
                                                        delayedMessage6.messages.add(message3);
                                                        delayedMessage6.originalPaths.add(str5);
                                                        delayedMessage6.upload = true;
                                                        request.messages.add(reqSend8);
                                                        encryptedFile = new TL_inputEncryptedFile();
                                                        type4 = i4;
                                                        if (type4 == 3) {
                                                            j2 = 1;
                                                        }
                                                        tLObject = encryptedChat;
                                                        encryptedFile.id = j2;
                                                        request.files.add(encryptedFile);
                                                        performSendDelayedMessage(delayedMessage6);
                                                    }
                                                    if (retryMessageObject == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                    }
                                                    str2 = str5;
                                                    document5 = tL_document;
                                                    webPage5 = webPage2;
                                                    arrayList5 = arrayList3;
                                                    inputPeer = sendToPeer7;
                                                    encryptedChat4 = message4;
                                                    params6 = params3;
                                                    arrayList4 = entities;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                    params3 = params9;
                                                    str = params;
                                                    user2 = user;
                                                    tLObject = photo5;
                                                    messageObject6 = retryMessageObject;
                                                    message3 = newMsg3;
                                                    newMsg3 = peer;
                                                    str2 = str5;
                                                    newMsg3 = message3;
                                                    name = lower_id2;
                                                    inputPeer = sendToPeer7;
                                                    location2 = location;
                                                    videoEditedInfo2 = videoEditedInfo;
                                                    message5 = message;
                                                    params4 = params3;
                                                    messageObject = messageObject2;
                                                    th = e62222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                str = params;
                                                user2 = user;
                                                tLObject = photo5;
                                                messageObject6 = retryMessageObject;
                                                message3 = newMsg3;
                                                newMsg3 = peer;
                                                str2 = str5;
                                                newMsg3 = message3;
                                                name = lower_id2;
                                                inputPeer = sendToPeer7;
                                                location2 = location;
                                                videoEditedInfo2 = videoEditedInfo;
                                                message5 = message;
                                                params4 = hashMap4;
                                                messageObject = messageObject2;
                                                th = e622222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                        if (encryptedChat3 == null) {
                                            tL_document2 = tL_document;
                                            arrayList5 = arrayList3;
                                            encryptedChat4 = message4;
                                            arrayList4 = entities;
                                            try {
                                                if (AndroidUtilities.getPeerLayerVersion(encryptedChat3.layer) < 73) {
                                                    reqSend3 = new TL_decryptedMessage();
                                                } else {
                                                    reqSend3 = new TL_decryptedMessage_layer45();
                                                }
                                                reqSend3.ttl = message3.ttl;
                                                if (arrayList4 != null) {
                                                    if (!entities.isEmpty()) {
                                                        reqSend3.entities = arrayList4;
                                                        reqSend3.flags |= 128;
                                                    }
                                                }
                                                inputPeer = sendToPeer6;
                                                try {
                                                    if (message3.reply_to_random_id != null) {
                                                        try {
                                                            reqSend3.reply_to_random_id = message3.reply_to_random_id;
                                                            reqSend3.flags |= 8;
                                                        } catch (Exception e63) {
                                                            e622222222222222222222222222222222222222222222222222222222222222222222222NUM = e63;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            location2 = messageMedia;
                                                            videoEditedInfo2 = videoEditedInfo3;
                                                            tL_document = tL_document2;
                                                            arrayList3 = arrayList5;
                                                            messageObject = messageObject2;
                                                            th = e622222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    }
                                                    if (!(params6 == null || params6.get("bot_name") == null)) {
                                                        reqSend3.via_bot_name = (String) params6.get("bot_name");
                                                        reqSend3.flags |= 2048;
                                                    }
                                                    reqSend3.random_id = message3.random_id;
                                                    reqSend3.message = encryptedChat4;
                                                    webPage5 = webPage2;
                                                    if (webPage5 != null) {
                                                        try {
                                                            if (webPage5.url != null) {
                                                                reqSend3.media = new TL_decryptedMessageMediaWebPage();
                                                                reqSend3.media.url = webPage5.url;
                                                                reqSend3.flags |= 512;
                                                                SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend3, messageObject2.messageOwner, encryptedChat3, null, null, messageObject2);
                                                                if (messageObject6 == null) {
                                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, false);
                                                                }
                                                                params4 = params6;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                arrayList3 = arrayList5;
                                                                type4 = messageObject2;
                                                            }
                                                        } catch (Exception e64) {
                                                            e622222222222222222222222222222222222222222222222222222222222222222222222NUM = e64;
                                                            webPage2 = webPage5;
                                                            encryptedChat5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            location2 = messageMedia;
                                                            videoEditedInfo2 = videoEditedInfo3;
                                                            tL_document = tL_document2;
                                                            arrayList3 = arrayList5;
                                                            messageObject = messageObject2;
                                                            th = e622222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    }
                                                    reqSend3.media = new TL_decryptedMessageMediaEmpty();
                                                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend3, messageObject2.messageOwner, encryptedChat3, null, null, messageObject2);
                                                    if (messageObject6 == null) {
                                                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, false);
                                                    }
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                    tLObject2 = webPage2;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    location2 = messageMedia;
                                                    videoEditedInfo2 = videoEditedInfo3;
                                                    tL_document = tL_document2;
                                                    arrayList3 = arrayList5;
                                                    messageObject = messageObject2;
                                                    th = e6222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                inputPeer = sendToPeer6;
                                                tLObject2 = webPage2;
                                                params4 = params6;
                                                encryptedChat5 = encryptedChat4;
                                                newMsg3 = message3;
                                                location2 = messageMedia;
                                                videoEditedInfo2 = videoEditedInfo3;
                                                tL_document = tL_document2;
                                                arrayList3 = arrayList5;
                                                messageObject = messageObject2;
                                                th = e62222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        } else if (arrayList3 == null) {
                                            try {
                                                reqSend4 = new TL_messages_sendBroadcast();
                                                random_ids = new ArrayList();
                                                count = 0;
                                                while (true) {
                                                    tL_document2 = tL_document;
                                                    sendToPeers2 = arrayList3;
                                                    try {
                                                        if (count < sendToPeers2.size()) {
                                                            break;
                                                        }
                                                        try {
                                                            random_ids.add(Long.valueOf(Utilities.random.nextLong()));
                                                            count++;
                                                            arrayList3 = sendToPeers2;
                                                            tL_document = tL_document2;
                                                            newMsg4 = peer;
                                                        } catch (Exception e65) {
                                                            e62222222222222222222222222222222222222222222222222222222222222222222222222NUM = e65;
                                                            inputPeer = sendToPeer6;
                                                            arrayList3 = sendToPeers2;
                                                            newMsg3 = message3;
                                                            params6 = type4;
                                                            location2 = messageMedia;
                                                            videoEditedInfo2 = videoEditedInfo3;
                                                            message5 = message4;
                                                        }
                                                    } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                        inputPeer = sendToPeer6;
                                                        params4 = params6;
                                                        message5 = message4;
                                                        arrayList3 = sendToPeers2;
                                                        newMsg3 = message3;
                                                        params6 = type4;
                                                        location2 = messageMedia;
                                                        videoEditedInfo2 = videoEditedInfo3;
                                                        tL_document = tL_document2;
                                                        messageObject = messageObject2;
                                                        th = e622222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                    }
                                                }
                                                encryptedChat4 = message4;
                                                try {
                                                    reqSend4.message = encryptedChat4;
                                                    reqSend4.contacts = sendToPeers2;
                                                    reqSend4.media = new TL_inputMediaEmpty();
                                                    reqSend4.random_id = random_ids;
                                                    performSendMessageRequest(reqSend4, messageObject2, null);
                                                    inputPeer = sendToPeer6;
                                                    arrayList5 = sendToPeers2;
                                                    webPage5 = webPage2;
                                                    sendToPeers2 = entities;
                                                    newMsg4 = peer;
                                                    params4 = params6;
                                                    encryptedChat5 = encryptedChat4;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    arrayList3 = arrayList5;
                                                    type4 = messageObject2;
                                                } catch (Exception e66) {
                                                    e622222222222222222222222222222222222222222222222222222222222222222222222222NUM = e66;
                                                    inputPeer = sendToPeer6;
                                                    params4 = params6;
                                                    Object obj4 = encryptedChat4;
                                                    arrayList3 = sendToPeers2;
                                                    newMsg3 = message3;
                                                    params6 = type4;
                                                    location2 = messageMedia;
                                                    videoEditedInfo2 = videoEditedInfo3;
                                                    tL_document = tL_document2;
                                                    messageObject = messageObject2;
                                                    th = e622222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                    FileLog.m3e(th);
                                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                    if (messageObject != null) {
                                                        messageObject.messageOwner.send_state = 2;
                                                    }
                                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                    i6 = NotificationCenter.messageSendError;
                                                    objArr = new Object[1];
                                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                                    instance.postNotificationName(i6, objArr);
                                                    processSentMessage(newMsg3.id);
                                                    videoEditedInfo3 = videoEditedInfo2;
                                                    messageMedia = location2;
                                                    tL_document2 = tL_document;
                                                }
                                            } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                                tL_document2 = tL_document;
                                                sendToPeers2 = arrayList3;
                                                inputPeer = sendToPeer6;
                                                params4 = params6;
                                                message5 = message4;
                                                newMsg3 = message3;
                                                location2 = messageMedia;
                                                videoEditedInfo2 = videoEditedInfo3;
                                                messageObject = messageObject2;
                                                th = e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        } else {
                                            tL_document2 = tL_document;
                                            sendToPeers2 = arrayList3;
                                            encryptedChat4 = message4;
                                            try {
                                                reqSend5 = new TL_messages_sendMessage();
                                                reqSend5.message = encryptedChat4;
                                                reqSend5.clear_draft = messageObject6 != null;
                                                if (message3.to_id instanceof TL_peerChannel) {
                                                    arrayList5 = sendToPeers2;
                                                    newMsg4 = peer;
                                                } else {
                                                    try {
                                                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                                                        stringBuilder = new StringBuilder();
                                                        stringBuilder.append("silent_");
                                                        newMsg4 = peer;
                                                        try {
                                                            stringBuilder.append(newMsg4);
                                                            arrayList5 = sendToPeers2;
                                                            try {
                                                                reqSend5.silent = notificationsSettings.getBoolean(stringBuilder.toString(), null);
                                                            } catch (Exception e67) {
                                                                e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e67;
                                                                encryptedChat5 = encryptedChat4;
                                                                newMsg3 = message3;
                                                                params6 = type4;
                                                                location2 = messageMedia;
                                                                videoEditedInfo2 = videoEditedInfo3;
                                                                tL_document = tL_document2;
                                                                arrayList3 = arrayList5;
                                                                messageObject = messageObject2;
                                                                th = e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                                FileLog.m3e(th);
                                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                                if (messageObject != null) {
                                                                    messageObject.messageOwner.send_state = 2;
                                                                }
                                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                                i6 = NotificationCenter.messageSendError;
                                                                objArr = new Object[1];
                                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                                instance.postNotificationName(i6, objArr);
                                                                processSentMessage(newMsg3.id);
                                                                videoEditedInfo3 = videoEditedInfo2;
                                                                messageMedia = location2;
                                                                tL_document2 = tL_document;
                                                            }
                                                        } catch (Exception e68) {
                                                            e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e68;
                                                            arrayList5 = sendToPeers2;
                                                            message5 = encryptedChat4;
                                                            newMsg3 = message3;
                                                            location2 = messageMedia;
                                                            videoEditedInfo2 = videoEditedInfo3;
                                                            tL_document = tL_document2;
                                                            arrayList3 = arrayList5;
                                                            messageObject = messageObject2;
                                                            th = e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                            FileLog.m3e(th);
                                                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                            if (messageObject != null) {
                                                                messageObject.messageOwner.send_state = 2;
                                                            }
                                                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                            i6 = NotificationCenter.messageSendError;
                                                            objArr = new Object[1];
                                                            objArr[0] = Integer.valueOf(newMsg3.id);
                                                            instance.postNotificationName(i6, objArr);
                                                            processSentMessage(newMsg3.id);
                                                            videoEditedInfo3 = videoEditedInfo2;
                                                            messageMedia = location2;
                                                            tL_document2 = tL_document;
                                                        }
                                                    } catch (Exception e69) {
                                                        e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e69;
                                                        arrayList5 = sendToPeers2;
                                                        newMsg3 = peer;
                                                        message5 = encryptedChat4;
                                                        newMsg3 = message3;
                                                        location2 = messageMedia;
                                                        videoEditedInfo2 = videoEditedInfo3;
                                                        tL_document = tL_document2;
                                                        arrayList3 = arrayList5;
                                                        messageObject = messageObject2;
                                                        th = e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                        FileLog.m3e(th);
                                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                        if (messageObject != null) {
                                                            messageObject.messageOwner.send_state = 2;
                                                        }
                                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                        i6 = NotificationCenter.messageSendError;
                                                        objArr = new Object[1];
                                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                                        instance.postNotificationName(i6, objArr);
                                                        processSentMessage(newMsg3.id);
                                                        videoEditedInfo3 = videoEditedInfo2;
                                                        messageMedia = location2;
                                                        tL_document2 = tL_document;
                                                    }
                                                }
                                            } catch (Exception e70) {
                                                e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e70;
                                                arrayList5 = sendToPeers2;
                                                sendToPeers2 = entities;
                                                newMsg3 = peer;
                                                message5 = encryptedChat4;
                                                newMsg3 = message3;
                                                location2 = messageMedia;
                                                videoEditedInfo2 = videoEditedInfo3;
                                                tL_document = tL_document2;
                                                arrayList3 = arrayList5;
                                                messageObject = messageObject2;
                                                th = e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                            try {
                                                reqSend5.peer = sendToPeer6;
                                                reqSend5.random_id = message3.random_id;
                                                if (message3.reply_to_msg_id != 0) {
                                                    reqSend5.flags |= 1;
                                                    reqSend5.reply_to_msg_id = message3.reply_to_msg_id;
                                                }
                                                if (!searchLinks) {
                                                    reqSend5.no_webpage = true;
                                                }
                                                arrayList4 = entities;
                                                if (!(arrayList4 == null || entities.isEmpty())) {
                                                    reqSend5.entities = arrayList4;
                                                    reqSend5.flags |= 8;
                                                }
                                                performSendMessageRequest(reqSend5, messageObject2, null);
                                                if (messageObject6 == null) {
                                                    tL_messages_sendMessage = reqSend5;
                                                    DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                                                }
                                                inputPeer = sendToPeer6;
                                                webPage5 = webPage2;
                                                params4 = params6;
                                                encryptedChat5 = encryptedChat4;
                                                newMsg3 = message3;
                                                params6 = type4;
                                                arrayList3 = arrayList5;
                                                type4 = messageObject2;
                                            } catch (Exception e71) {
                                                e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e71;
                                                arrayList4 = entities;
                                                encryptedChat5 = encryptedChat4;
                                                newMsg3 = message3;
                                                params6 = type4;
                                                location2 = messageMedia;
                                                videoEditedInfo2 = videoEditedInfo3;
                                                tL_document = tL_document2;
                                                arrayList3 = arrayList5;
                                                messageObject = messageObject2;
                                                th = e6222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                                FileLog.m3e(th);
                                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                                if (messageObject != null) {
                                                    messageObject.messageOwner.send_state = 2;
                                                }
                                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                                i6 = NotificationCenter.messageSendError;
                                                objArr = new Object[1];
                                                objArr[0] = Integer.valueOf(newMsg3.id);
                                                instance.postNotificationName(i6, objArr);
                                                processSentMessage(newMsg3.id);
                                                videoEditedInfo3 = videoEditedInfo2;
                                                messageMedia = location2;
                                                tL_document2 = tL_document;
                                            }
                                        }
                                    } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                        messageObject2 = messageObject6;
                                        sendToPeer4 = encryptedChat;
                                        i7 = lower_id;
                                        message3 = newMsg3;
                                        str2 = originalPath4;
                                        str = caption2;
                                        inputPeer = sendToPeer;
                                        user2 = user3;
                                        tLObject = photo;
                                        i2 = high_id2;
                                        messageObject6 = retryMessageObject;
                                        arrayList4 = entities;
                                        newMsg3 = j3;
                                        tLObject2 = webPage2;
                                        videoEditedInfo2 = videoEditedInfo;
                                        message5 = message8;
                                        newMsg3 = message3;
                                        location2 = location4;
                                        tL_document = tL_document3;
                                        arrayList3 = sendToPeers;
                                        messageObject = messageObject2;
                                        th = e62222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                        FileLog.m3e(th);
                                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                        if (messageObject != null) {
                                            messageObject.messageOwner.send_state = 2;
                                        }
                                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                        i6 = NotificationCenter.messageSendError;
                                        objArr = new Object[1];
                                        objArr[0] = Integer.valueOf(newMsg3.id);
                                        instance.postNotificationName(i6, objArr);
                                        processSentMessage(newMsg3.id);
                                        videoEditedInfo3 = videoEditedInfo2;
                                        messageMedia = location2;
                                        tL_document2 = tL_document;
                                    }
                                } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                    high_id3 = encryptedChat;
                                    i7 = lower_id;
                                    message3 = newMsg3;
                                    arrayList5 = sendToPeers;
                                    str2 = originalPath4;
                                    str = caption2;
                                    inputPeer = sendToPeer;
                                    user2 = user3;
                                    tLObject = photo;
                                    i2 = high_id2;
                                    messageObject6 = retryMessageObject;
                                    arrayList4 = entities;
                                    newMsg3 = j3;
                                    tLObject2 = webPage2;
                                    videoEditedInfo2 = videoEditedInfo;
                                    th = e622222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                    message5 = message8;
                                    newMsg3 = message3;
                                    messageObject = null;
                                    location2 = location4;
                                    tL_document = tL_document3;
                                    arrayList3 = arrayList5;
                                    FileLog.m3e(th);
                                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                    if (messageObject != null) {
                                        messageObject.messageOwner.send_state = 2;
                                    }
                                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                    i6 = NotificationCenter.messageSendError;
                                    objArr = new Object[1];
                                    objArr[0] = Integer.valueOf(newMsg3.id);
                                    instance.postNotificationName(i6, objArr);
                                    processSentMessage(newMsg3.id);
                                    videoEditedInfo3 = videoEditedInfo2;
                                    messageMedia = location2;
                                    tL_document2 = tL_document;
                                }
                            } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                                tL_document3 = document2;
                                videoEditedInfo2 = videoEditedInfo;
                                th = e6222222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                                i2 = high_id3;
                                high_id3 = encryptedChat;
                                messageObject = null;
                                str2 = originalPath4;
                                arrayList3 = null;
                                i7 = i;
                                str = caption2;
                                message5 = message8;
                                location2 = location4;
                                inputPeer = sendToPeer;
                                user2 = user3;
                                tL_document = tL_document3;
                                photo2 = tL_photo2;
                                messageObject6 = retryMessageObject;
                                FileLog.m3e(th);
                                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                                if (messageObject != null) {
                                    messageObject.messageOwner.send_state = 2;
                                }
                                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                                i6 = NotificationCenter.messageSendError;
                                objArr = new Object[1];
                                objArr[0] = Integer.valueOf(newMsg3.id);
                                instance.postNotificationName(i6, objArr);
                                processSentMessage(newMsg3.id);
                                videoEditedInfo3 = videoEditedInfo2;
                                messageMedia = location2;
                                tL_document2 = tL_document;
                            }
                        }
                        tL_photo = tL_photo2;
                        tL_document3 = document2;
                        lower_id = i;
                        try {
                            newMsg3.to_id = MessagesController.getInstance(sendMessagesHelper.currentAccount).getPeer(lower_id);
                            if (lower_id > 0) {
                                user5 = MessagesController.getInstance(sendMessagesHelper.currentAccount).getUser(Integer.valueOf(lower_id));
                                if (user5 == null) {
                                    processSentMessage(newMsg3.id);
                                    return;
                                } else if (user5.bot) {
                                    newMsg3.unread = false;
                                }
                            }
                        } catch (Throwable e62222222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                            videoEditedInfo2 = videoEditedInfo;
                            th = e62222222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                            i2 = high_id3;
                            TL_document tL_document7 = tL_document;
                            messageObject = null;
                            str2 = originalPath4;
                            arrayList3 = null;
                            location2 = location4;
                            tL_document = tL_document3;
                            photo2 = tL_photo;
                            messageObject6 = retryMessageObject;
                            FileLog.m3e(th);
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                            if (messageObject != null) {
                                messageObject.messageOwner.send_state = 2;
                            }
                            instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                            i6 = NotificationCenter.messageSendError;
                            objArr = new Object[1];
                            objArr[0] = Integer.valueOf(newMsg3.id);
                            instance.postNotificationName(i6, objArr);
                            processSentMessage(newMsg3.id);
                            videoEditedInfo3 = videoEditedInfo2;
                            messageMedia = location2;
                            tL_document2 = tL_document;
                        }
                    }
                    tL_photo = tL_photo2;
                    tL_document3 = document2;
                    high_id3 = high_id;
                    lower_id = i;
                    try {
                        newMsg3.to_id = new TL_peerUser();
                        if (encryptedChat.participant_id == UserConfig.getInstance(sendMessagesHelper.currentAccount).getClientUserId()) {
                            newMsg3.to_id.user_id = encryptedChat.admin_id;
                        } else {
                            newMsg3.to_id.user_id = encryptedChat.participant_id;
                        }
                        if (i6 != 0) {
                            newMsg3.ttl = i6;
                        } else {
                            newMsg3.ttl = encryptedChat.ttl;
                            if (newMsg3.ttl != 0) {
                                if (newMsg3.media != null) {
                                    newMsg3.media.ttl_seconds = newMsg3.ttl;
                                    messageMedia4 = newMsg3.media;
                                    messageMedia4.flags |= 4;
                                }
                            }
                        }
                        if (newMsg3.ttl != 0) {
                            if (newMsg3.media.document != null) {
                                DocumentAttribute attribute2;
                                if (MessageObject.isVoiceMessage(newMsg3)) {
                                    int duration;
                                    type3 = 0;
                                    high_id4 = 0;
                                    while (high_id4 < newMsg3.media.document.attributes.size()) {
                                        attribute2 = (DocumentAttribute) newMsg3.media.document.attributes.get(high_id4);
                                        duration = type3;
                                        if ((attribute2 instanceof TL_documentAttributeAudio) != 0) {
                                            duration = attribute2.duration;
                                            break;
                                        } else {
                                            high_id4++;
                                            type3 = duration;
                                        }
                                    }
                                    duration = type3;
                                    newMsg3.ttl = Math.max(newMsg3.ttl, duration + 1);
                                } else if (MessageObject.isVideoMessage(newMsg3) || MessageObject.isRoundVideoMessage(newMsg3)) {
                                    int duration2;
                                    type3 = 0;
                                    high_id4 = 0;
                                    while (high_id4 < newMsg3.media.document.attributes.size()) {
                                        attribute2 = (DocumentAttribute) newMsg3.media.document.attributes.get(high_id4);
                                        duration2 = type3;
                                        if ((attribute2 instanceof TL_documentAttributeVideo) != 0) {
                                            duration2 = attribute2.duration;
                                            break;
                                        } else {
                                            high_id4++;
                                            type3 = duration2;
                                        }
                                    }
                                    duration2 = type3;
                                    newMsg3.ttl = Math.max(newMsg3.ttl, duration2 + 1);
                                }
                            }
                        }
                    } catch (Throwable e622222222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                        i2 = high_id3;
                        sendToPeer4 = encryptedChat;
                        i7 = lower_id;
                        message3 = newMsg3;
                        str2 = originalPath4;
                        str = caption2;
                        inputPeer = sendToPeer;
                        user2 = user3;
                        photo2 = tL_photo;
                        messageObject6 = retryMessageObject;
                        arrayList4 = entities;
                        newMsg3 = j3;
                        tLObject2 = webPage2;
                        videoEditedInfo2 = videoEditedInfo;
                        th = e622222222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                        message5 = message8;
                        newMsg3 = message3;
                        messageObject = null;
                        arrayList3 = null;
                        location2 = location4;
                        tL_document = tL_document3;
                        FileLog.m3e(th);
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                        if (messageObject != null) {
                            messageObject.messageOwner.send_state = 2;
                        }
                        instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                        i6 = NotificationCenter.messageSendError;
                        objArr = new Object[1];
                        objArr[0] = Integer.valueOf(newMsg3.id);
                        instance.postNotificationName(i6, objArr);
                        processSentMessage(newMsg3.id);
                        videoEditedInfo3 = videoEditedInfo2;
                        messageMedia = location2;
                        tL_document2 = tL_document;
                    }
                    sendToPeers = null;
                    type3 = 1;
                    if (high_id3 != 1) {
                        if (MessageObject.isVoiceMessage(newMsg3)) {
                            if (MessageObject.isRoundVideoMessage(newMsg3)) {
                                type3 = 1;
                            }
                        }
                        type3 = 1;
                        newMsg3.media_unread = true;
                    }
                } catch (Exception e72) {
                    e622222222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e72;
                    user2 = user5;
                    inputPeer = sendToPeer8;
                    photo2 = tL_photo2;
                    sendToPeer4 = encryptedChat;
                    message3 = newMsg3;
                    tL_document2 = document2;
                    str2 = originalPath4;
                    i2 = high_id;
                    i7 = i;
                    str = caption2;
                    encryptedChat4 = message8;
                    messageMedia = location4;
                    messageObject6 = retryMessageObject;
                    arrayList4 = entities;
                    document2 = type2;
                    type2 = params4;
                    newMsg3 = j3;
                    tLObject2 = webPage2;
                    videoEditedInfo2 = videoEditedInfo;
                    th = e622222222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                    webPage4 = type2;
                    encryptedChat5 = encryptedChat4;
                    newMsg3 = message3;
                    caption3 = document2;
                    messageObject = null;
                    arrayList3 = null;
                    location2 = messageMedia;
                    tL_document = tL_document2;
                    FileLog.m3e(th);
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                    if (messageObject != null) {
                        messageObject.messageOwner.send_state = 2;
                    }
                    instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                    i6 = NotificationCenter.messageSendError;
                    objArr = new Object[1];
                    objArr[0] = Integer.valueOf(newMsg3.id);
                    instance.postNotificationName(i6, objArr);
                    processSentMessage(newMsg3.id);
                    videoEditedInfo3 = videoEditedInfo2;
                    messageMedia = location2;
                    tL_document2 = tL_document;
                }
            } catch (Exception e73) {
                e622222222222222222222222222222222222222222222222222222222222222222222222222222222NUM = e73;
                user2 = user5;
                inputPeer = sendToPeer8;
                photo2 = tL_photo2;
                sendToPeer4 = encryptedChat;
                messageObject6 = messageObject5;
                tL_document2 = document2;
                str2 = originalPath4;
                i2 = high_id;
                i7 = i;
                tLObject2 = webPage2;
                str = caption2;
                encryptedChat4 = message8;
                messageMedia = location4;
                arrayList4 = entities;
                document2 = type2;
                message3 = newMsg3;
                type2 = params4;
                newMsg3 = peer;
                videoEditedInfo2 = videoEditedInfo;
                th = e622222222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                webPage4 = type2;
                encryptedChat5 = encryptedChat4;
                newMsg3 = message3;
                caption3 = document2;
                messageObject = null;
                arrayList3 = null;
                location2 = messageMedia;
                tL_document = tL_document2;
                FileLog.m3e(th);
                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                if (messageObject != null) {
                    messageObject.messageOwner.send_state = 2;
                }
                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                i6 = NotificationCenter.messageSendError;
                objArr = new Object[1];
                objArr[0] = Integer.valueOf(newMsg3.id);
                instance.postNotificationName(i6, objArr);
                processSentMessage(newMsg3.id);
                videoEditedInfo3 = videoEditedInfo2;
                messageMedia = location2;
                tL_document2 = tL_document;
            }
            try {
                newMsg3.send_state = type3;
                high_id2 = high_id3;
                messageObject6 = new MessageObject(sendMessagesHelper.currentAccount, newMsg3, 1);
                messageObject6.replyMessageObject = messageObject5;
                if (messageObject6.isForwarded()) {
                    messageObject6.attachPathExists = true;
                }
                if (messageObject6.videoEditedInfo == null) {
                }
                videoEditedInfo2 = videoEditedInfo;
                groupId = 0;
                isFinalGroupMedia = false;
                if (params4 == null) {
                    groupId2 = 0;
                } else {
                    groupId2 = 0;
                    name2 = (String) params4.get("groupId");
                    if (name2 == null) {
                        groupId = groupId2;
                    } else {
                        name2 = Utilities.parseLong(name2).longValue();
                        newMsg3.grouped_id = name2;
                        groupId3 = name2;
                        newMsg3.flags |= 131072;
                        groupId = groupId3;
                    }
                    if (params4.get("final") == null) {
                    }
                    isFinalGroupMedia = params4.get("final") == null;
                    groupId = groupId;
                }
                if (groupId != 0) {
                    i3 = lower_id;
                    hashMap2 = params4;
                    arrayList = sendToPeers;
                    tL_document = new StringBuilder();
                    tL_document.append("group_");
                    tL_document.append(groupId);
                    params5 = (ArrayList) sendMessagesHelper.delayedMessages.get(tL_document.toString());
                    if (params5 != null) {
                        delayedMessage3 = (DelayedMessage) params5.get(0);
                    }
                    if (delayedMessage3 != null) {
                        delayedMessage2 = delayedMessage3;
                    } else {
                        delayedMessage2 = new DelayedMessage(j3);
                        delayedMessage2.type = 4;
                        delayedMessage2.groupId = groupId;
                        delayedMessage2.messageObjects = new ArrayList();
                        delayedMessage2.messages = new ArrayList();
                        delayedMessage2.originalPaths = new ArrayList();
                        delayedMessage2.extraHashMap = new HashMap();
                        delayedMessage2.encryptedChat = encryptedChat;
                    }
                    if (isFinalGroupMedia) {
                        delayedMessage2.finalGroupMessage = newMsg3.id;
                    }
                    delayedMessage3 = delayedMessage2;
                } else {
                    i3 = lower_id;
                    lower_id = new ArrayList();
                    lower_id.add(messageObject6);
                    arr = new ArrayList();
                    arr.add(newMsg3);
                    arrayList = sendToPeers;
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putMessages((ArrayList) arr, false, true, false, 0);
                    MessagesController.getInstance(sendMessagesHelper.currentAccount).updateInterfaceWithMessages(j3, lower_id);
                    objArr2 = lower_id;
                    hashMap2 = params4;
                    NotificationCenter.getInstance(sendMessagesHelper.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[null]);
                }
                if (BuildVars.LOGS_ENABLED) {
                }
                sendToPeer5 = sendToPeer;
                if (type2 != 0) {
                    j4 = groupId;
                    messageObject2 = messageObject6;
                    videoEditedInfo3 = videoEditedInfo2;
                    type4 = type2;
                    encryptedChat3 = encryptedChat;
                    message3 = newMsg3;
                    str2 = originalPath4;
                    str = caption2;
                    message4 = message8;
                    messageMedia = location4;
                    user2 = user3;
                    tL_document = tL_document3;
                    tLObject = photo;
                    i2 = high_id2;
                    i7 = i3;
                    arrayList3 = arrayList;
                    params6 = hashMap2;
                    messageObject6 = retryMessageObject;
                    j5 = j3;
                    sendToPeer6 = sendToPeer5;
                    newMsg4 = j5;
                } else {
                    if (type2 != 9) {
                    }
                    if (type2 >= 1) {
                    }
                    j4 = groupId;
                    messageObject2 = messageObject6;
                    videoEditedInfo3 = videoEditedInfo2;
                    type4 = type2;
                    sendToPeer4 = encryptedChat;
                    message3 = newMsg3;
                    sendToPeer7 = sendToPeer5;
                    str5 = originalPath4;
                    str = caption2;
                    message4 = message8;
                    messageMedia = location4;
                    user2 = user3;
                    tL_document = tL_document3;
                    tLObject = photo;
                    i2 = high_id2;
                    i7 = i3;
                    arrayList3 = arrayList;
                    params3 = hashMap2;
                    messageObject6 = retryMessageObject;
                    newMsg4 = j3;
                    if (type4 != 4) {
                        sendToPeer6 = sendToPeer7;
                        if (type4 != 9) {
                            params6 = params3;
                            inputPeer = sendToPeer6;
                            tL_document2 = tL_document;
                            webPage5 = webPage2;
                            arrayList5 = arrayList3;
                            encryptedChat4 = message4;
                            arrayList4 = entities;
                            params4 = params6;
                            encryptedChat5 = encryptedChat4;
                            newMsg3 = message3;
                            params6 = type4;
                            arrayList3 = arrayList5;
                            type4 = messageObject2;
                        }
                        reqSend2 = new TL_messages_sendInlineBotResult();
                        reqSend2.peer = sendToPeer6;
                        reqSend2.random_id = message3.random_id;
                        if (message3.reply_to_msg_id != 0) {
                            reqSend2.flags |= 1;
                            reqSend2.reply_to_msg_id = message3.reply_to_msg_id;
                        }
                        if (message3.to_id instanceof TL_peerChannel) {
                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("silent_");
                            stringBuilder2.append(newMsg4);
                            reqSend2.silent = notificationsSettings.getBoolean(stringBuilder2.toString(), false);
                        }
                        params6 = params3;
                        reqSend2.query_id = Utilities.parseLong((String) params6.get("query_id")).longValue();
                        reqSend2.id = (String) params6.get(TtmlNode.ATTR_ID);
                        if (messageObject6 == null) {
                            reqSend2.clear_draft = true;
                            DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, false);
                        }
                        performSendMessageRequest(reqSend2, messageObject2, null);
                        inputPeer = sendToPeer6;
                        tL_document2 = tL_document;
                        webPage5 = webPage2;
                        arrayList5 = arrayList3;
                        encryptedChat4 = message4;
                    } else {
                        reqSend = new TL_messages_forwardMessages();
                        sendToPeer6 = sendToPeer7;
                        reqSend.to_peer = sendToPeer6;
                        reqSend.with_my_score = messageObject6.messageOwner.with_my_score;
                        if (messageObject6.messageOwner.ttl == 0) {
                            reqSend.from_peer = new TL_inputPeerEmpty();
                        } else {
                            chat = MessagesController.getInstance(sendMessagesHelper.currentAccount).getChat(Integer.valueOf(-messageObject6.messageOwner.ttl));
                            reqSend.from_peer = new TL_inputPeerChannel();
                            reqSend.from_peer.channel_id = -messageObject6.messageOwner.ttl;
                            if (chat == null) {
                            } else {
                                str2 = str5;
                                reqSend.from_peer.access_hash = chat.access_hash;
                            }
                        }
                        if (messageObject6.messageOwner.to_id instanceof TL_peerChannel) {
                            notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append("silent_");
                            stringBuilder2.append(newMsg4);
                            reqSend.silent = notificationsSettings.getBoolean(stringBuilder2.toString(), false);
                        }
                        reqSend.random_id.add(Long.valueOf(message3.random_id));
                        if (retryMessageObject.getId() >= 0) {
                            reqSend.id.add(Integer.valueOf(retryMessageObject.getId()));
                        } else if (messageObject6.messageOwner.fwd_msg_id != 0) {
                            reqSend.id.add(Integer.valueOf(messageObject6.messageOwner.fwd_msg_id));
                        } else if (messageObject6.messageOwner.fwd_from != null) {
                            reqSend.id.add(Integer.valueOf(messageObject6.messageOwner.fwd_from.channel_post));
                        }
                        performSendMessageRequest(reqSend, messageObject2, null);
                        inputPeer = sendToPeer6;
                        tL_document2 = tL_document;
                        webPage5 = webPage2;
                        arrayList5 = arrayList3;
                        encryptedChat4 = message4;
                        params6 = params3;
                    }
                    arrayList4 = entities;
                    params4 = params6;
                    encryptedChat5 = encryptedChat4;
                    newMsg3 = message3;
                    params6 = type4;
                    arrayList3 = arrayList5;
                    type4 = messageObject2;
                }
                if (encryptedChat3 == null) {
                    tL_document2 = tL_document;
                    arrayList5 = arrayList3;
                    encryptedChat4 = message4;
                    arrayList4 = entities;
                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat3.layer) < 73) {
                        reqSend3 = new TL_decryptedMessage_layer45();
                    } else {
                        reqSend3 = new TL_decryptedMessage();
                    }
                    reqSend3.ttl = message3.ttl;
                    if (arrayList4 != null) {
                        if (entities.isEmpty()) {
                            reqSend3.entities = arrayList4;
                            reqSend3.flags |= 128;
                        }
                    }
                    inputPeer = sendToPeer6;
                    if (message3.reply_to_random_id != null) {
                        reqSend3.reply_to_random_id = message3.reply_to_random_id;
                        reqSend3.flags |= 8;
                    }
                    reqSend3.via_bot_name = (String) params6.get("bot_name");
                    reqSend3.flags |= 2048;
                    reqSend3.random_id = message3.random_id;
                    reqSend3.message = encryptedChat4;
                    webPage5 = webPage2;
                    if (webPage5 != null) {
                        if (webPage5.url != null) {
                            reqSend3.media = new TL_decryptedMessageMediaWebPage();
                            reqSend3.media.url = webPage5.url;
                            reqSend3.flags |= 512;
                            SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend3, messageObject2.messageOwner, encryptedChat3, null, null, messageObject2);
                            if (messageObject6 == null) {
                                DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, false);
                            }
                            params4 = params6;
                            encryptedChat5 = encryptedChat4;
                            newMsg3 = message3;
                            params6 = type4;
                            arrayList3 = arrayList5;
                            type4 = messageObject2;
                        }
                    }
                    reqSend3.media = new TL_decryptedMessageMediaEmpty();
                    SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(reqSend3, messageObject2.messageOwner, encryptedChat3, null, null, messageObject2);
                    if (messageObject6 == null) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, false);
                    }
                    params4 = params6;
                    encryptedChat5 = encryptedChat4;
                    newMsg3 = message3;
                    params6 = type4;
                    arrayList3 = arrayList5;
                    type4 = messageObject2;
                } else if (arrayList3 == null) {
                    tL_document2 = tL_document;
                    sendToPeers2 = arrayList3;
                    encryptedChat4 = message4;
                    reqSend5 = new TL_messages_sendMessage();
                    reqSend5.message = encryptedChat4;
                    if (messageObject6 != null) {
                    }
                    reqSend5.clear_draft = messageObject6 != null;
                    if (message3.to_id instanceof TL_peerChannel) {
                        arrayList5 = sendToPeers2;
                        newMsg4 = peer;
                    } else {
                        notificationsSettings = MessagesController.getNotificationsSettings(sendMessagesHelper.currentAccount);
                        stringBuilder = new StringBuilder();
                        stringBuilder.append("silent_");
                        newMsg4 = peer;
                        stringBuilder.append(newMsg4);
                        arrayList5 = sendToPeers2;
                        reqSend5.silent = notificationsSettings.getBoolean(stringBuilder.toString(), null);
                    }
                    reqSend5.peer = sendToPeer6;
                    reqSend5.random_id = message3.random_id;
                    if (message3.reply_to_msg_id != 0) {
                        reqSend5.flags |= 1;
                        reqSend5.reply_to_msg_id = message3.reply_to_msg_id;
                    }
                    if (searchLinks) {
                        reqSend5.no_webpage = true;
                    }
                    arrayList4 = entities;
                    reqSend5.entities = arrayList4;
                    reqSend5.flags |= 8;
                    performSendMessageRequest(reqSend5, messageObject2, null);
                    if (messageObject6 == null) {
                        tL_messages_sendMessage = reqSend5;
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).cleanDraft(newMsg4, null);
                    }
                    inputPeer = sendToPeer6;
                    webPage5 = webPage2;
                    params4 = params6;
                    encryptedChat5 = encryptedChat4;
                    newMsg3 = message3;
                    params6 = type4;
                    arrayList3 = arrayList5;
                    type4 = messageObject2;
                } else {
                    reqSend4 = new TL_messages_sendBroadcast();
                    random_ids = new ArrayList();
                    count = 0;
                    while (true) {
                        tL_document2 = tL_document;
                        sendToPeers2 = arrayList3;
                        if (count < sendToPeers2.size()) {
                            break;
                        }
                        random_ids.add(Long.valueOf(Utilities.random.nextLong()));
                        count++;
                        arrayList3 = sendToPeers2;
                        tL_document = tL_document2;
                        newMsg4 = peer;
                    }
                    encryptedChat4 = message4;
                    reqSend4.message = encryptedChat4;
                    reqSend4.contacts = sendToPeers2;
                    reqSend4.media = new TL_inputMediaEmpty();
                    reqSend4.random_id = random_ids;
                    performSendMessageRequest(reqSend4, messageObject2, null);
                    inputPeer = sendToPeer6;
                    arrayList5 = sendToPeers2;
                    webPage5 = webPage2;
                    sendToPeers2 = entities;
                    newMsg4 = peer;
                    params4 = params6;
                    encryptedChat5 = encryptedChat4;
                    newMsg3 = message3;
                    params6 = type4;
                    arrayList3 = arrayList5;
                    type4 = messageObject2;
                }
            } catch (Throwable e6222222222222222222222222222222222222222222222222222222222222222222222222222222222NUM) {
                i2 = high_id3;
                high_id3 = encryptedChat;
                i7 = lower_id;
                message3 = newMsg3;
                arrayList5 = sendToPeers;
                str2 = originalPath4;
                str = caption2;
                inputPeer = sendToPeer;
                user2 = user3;
                tLObject = photo;
                messageObject6 = retryMessageObject;
                arrayList4 = entities;
                newMsg3 = j3;
                tLObject2 = webPage2;
                videoEditedInfo2 = videoEditedInfo;
                th = e6222222222222222222222222222222222222222222222222222222222222222222222222222222222NUM;
                message5 = message8;
                newMsg3 = message3;
                messageObject = null;
                location2 = location4;
                tL_document = tL_document3;
                arrayList3 = arrayList5;
                FileLog.m3e(th);
                MessagesStorage.getInstance(sendMessagesHelper.currentAccount).markMessageAsSendError(newMsg3);
                if (messageObject != null) {
                    messageObject.messageOwner.send_state = 2;
                }
                instance = NotificationCenter.getInstance(sendMessagesHelper.currentAccount);
                i6 = NotificationCenter.messageSendError;
                objArr = new Object[1];
                objArr[0] = Integer.valueOf(newMsg3.id);
                instance.postNotificationName(i6, objArr);
                processSentMessage(newMsg3.id);
                videoEditedInfo3 = videoEditedInfo2;
                messageMedia = location2;
                tL_document2 = tL_document;
            }
        }
    }

    private void performSendDelayedMessage(DelayedMessage message) {
        performSendDelayedMessage(message, -1);
    }

    private void performSendDelayedMessage(DelayedMessage message, int index) {
        SendMessagesHelper sendMessagesHelper = this;
        DelayedMessage delayedMessage = message;
        boolean z = false;
        boolean z2 = true;
        String location;
        if (delayedMessage.type == 0) {
            if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", sendMessagesHelper.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                location = FileLoader.getPathToAttach(delayedMessage.location).toString();
                putToDelayedMessages(location, delayedMessage);
                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, false, true, 16777216);
            } else {
                location = FileLoader.getPathToAttach(delayedMessage.location).toString();
                if (!(delayedMessage.sendEncryptedRequest == null || delayedMessage.location.dc_id == 0)) {
                    File file = new File(location);
                    if (!file.exists()) {
                        location = FileLoader.getPathToAttach(delayedMessage.location, true).toString();
                        file = new File(location);
                    }
                    if (!file.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.location), delayedMessage);
                        FileLoader.getInstance(sendMessagesHelper.currentAccount).loadFile(delayedMessage.location, "jpg", 0, 0);
                        return;
                    }
                }
                putToDelayedMessages(location, delayedMessage);
                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, true, true, 16777216);
            }
        } else if (delayedMessage.type == 1) {
            if (delayedMessage.videoEditedInfo == null || !delayedMessage.videoEditedInfo.needConvert()) {
                if (delayedMessage.videoEditedInfo != null) {
                    if (delayedMessage.videoEditedInfo.file != null) {
                        if (delayedMessage.sendRequest instanceof TL_messages_sendMedia) {
                            media = ((TL_messages_sendMedia) delayedMessage.sendRequest).media;
                        } else {
                            media = ((TL_messages_sendBroadcast) delayedMessage.sendRequest).media;
                        }
                        media.file = delayedMessage.videoEditedInfo.file;
                        delayedMessage.videoEditedInfo.file = null;
                    } else if (delayedMessage.videoEditedInfo.encryptedFile != null) {
                        DecryptedMessage decryptedMessage = delayedMessage.sendEncryptedRequest;
                        decryptedMessage.media.size = (int) delayedMessage.videoEditedInfo.estimatedSize;
                        decryptedMessage.media.key = delayedMessage.videoEditedInfo.key;
                        decryptedMessage.media.iv = delayedMessage.videoEditedInfo.iv;
                        SecretChatHelper.getInstance(sendMessagesHelper.currentAccount).performSendEncryptedRequest(decryptedMessage, delayedMessage.obj.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, delayedMessage.obj);
                        delayedMessage.videoEditedInfo.encryptedFile = null;
                        return;
                    }
                }
                StringBuilder stringBuilder;
                if (delayedMessage.sendRequest != null) {
                    if (delayedMessage.sendRequest instanceof TL_messages_sendMedia) {
                        media = ((TL_messages_sendMedia) delayedMessage.sendRequest).media;
                    } else {
                        media = ((TL_messages_sendBroadcast) delayedMessage.sendRequest).media;
                    }
                    if (media.file == null) {
                        location = delayedMessage.obj.messageOwner.attachPath;
                        Document document = delayedMessage.obj.getDocument();
                        if (location == null) {
                            stringBuilder = new StringBuilder();
                            stringBuilder.append(FileLoader.getDirectory(4));
                            stringBuilder.append("/");
                            stringBuilder.append(document.id);
                            stringBuilder.append(".mp4");
                            location = stringBuilder.toString();
                        }
                        putToDelayedMessages(location, delayedMessage);
                        if (delayedMessage.obj.videoEditedInfo == null || !delayedMessage.obj.videoEditedInfo.needConvert()) {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, false, false, ConnectionsManager.FileTypeVideo);
                        } else {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, false, false, document.size, ConnectionsManager.FileTypeVideo);
                        }
                    } else {
                        location = new StringBuilder();
                        location.append(FileLoader.getDirectory(4));
                        location.append("/");
                        location.append(delayedMessage.location.volume_id);
                        location.append("_");
                        location.append(delayedMessage.location.local_id);
                        location.append(".jpg");
                        location = location.toString();
                        putToDelayedMessages(location, delayedMessage);
                        FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, false, true, 16777216);
                    }
                } else {
                    location = delayedMessage.obj.messageOwner.attachPath;
                    document = delayedMessage.obj.getDocument();
                    if (location == null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(FileLoader.getDirectory(4));
                        stringBuilder.append("/");
                        stringBuilder.append(document.id);
                        stringBuilder.append(".mp4");
                        location = stringBuilder.toString();
                    }
                    if (delayedMessage.sendEncryptedRequest == null || document.dc_id == 0 || new File(location).exists()) {
                        putToDelayedMessages(location, delayedMessage);
                        if (delayedMessage.obj.videoEditedInfo == null || !delayedMessage.obj.videoEditedInfo.needConvert()) {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, true, false, ConnectionsManager.FileTypeVideo);
                        } else {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, true, false, document.size, ConnectionsManager.FileTypeVideo);
                        }
                    } else {
                        putToDelayedMessages(FileLoader.getAttachFileName(document), delayedMessage);
                        FileLoader.getInstance(sendMessagesHelper.currentAccount).loadFile(document, true, 0);
                        return;
                    }
                }
            }
            location = delayedMessage.obj.messageOwner.attachPath;
            document = delayedMessage.obj.getDocument();
            if (location == null) {
                StringBuilder stringBuilder2 = new StringBuilder();
                stringBuilder2.append(FileLoader.getDirectory(4));
                stringBuilder2.append("/");
                stringBuilder2.append(document.id);
                stringBuilder2.append(".mp4");
                location = stringBuilder2.toString();
            }
            putToDelayedMessages(location, delayedMessage);
            MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
        } else if (delayedMessage.type == 2) {
            if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", sendMessagesHelper.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                if (delayedMessage.sendRequest instanceof TL_messages_sendMedia) {
                    media = ((TL_messages_sendMedia) delayedMessage.sendRequest).media;
                } else {
                    media = ((TL_messages_sendBroadcast) delayedMessage.sendRequest).media;
                }
                if (media.file == null) {
                    location = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(location, delayedMessage);
                    FileLoader instance = FileLoader.getInstance(sendMessagesHelper.currentAccount);
                    if (delayedMessage.sendRequest != null) {
                        z2 = false;
                    }
                    instance.uploadFile(location, z2, false, ConnectionsManager.FileTypeFile);
                } else if (media.thumb == null && delayedMessage.location != null) {
                    StringBuilder stringBuilder3 = new StringBuilder();
                    stringBuilder3.append(FileLoader.getDirectory(4));
                    stringBuilder3.append("/");
                    stringBuilder3.append(delayedMessage.location.volume_id);
                    stringBuilder3.append("_");
                    stringBuilder3.append(delayedMessage.location.local_id);
                    stringBuilder3.append(".jpg");
                    location = stringBuilder3.toString();
                    putToDelayedMessages(location, delayedMessage);
                    FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, false, true, 16777216);
                }
            } else {
                location = delayedMessage.obj.messageOwner.attachPath;
                document = delayedMessage.obj.getDocument();
                if (delayedMessage.sendEncryptedRequest == null || document.dc_id == 0 || new File(location).exists()) {
                    putToDelayedMessages(location, delayedMessage);
                    FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location, true, false, ConnectionsManager.FileTypeFile);
                } else {
                    putToDelayedMessages(FileLoader.getAttachFileName(document), delayedMessage);
                    FileLoader.getInstance(sendMessagesHelper.currentAccount).loadFile(document, true, 0);
                    return;
                }
            }
        } else if (delayedMessage.type == 3) {
            location = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(location, delayedMessage);
            FileLoader instance2 = FileLoader.getInstance(sendMessagesHelper.currentAccount);
            if (delayedMessage.sendRequest == null) {
                z = true;
            }
            instance2.uploadFile(location, z, true, ConnectionsManager.FileTypeAudio);
        } else if (delayedMessage.type == 4) {
            int i;
            boolean add = index < 0;
            if (delayedMessage.location == null && delayedMessage.httpLocation == null && !delayedMessage.upload) {
                if (index < 0) {
                    if (!delayedMessage.messageObjects.isEmpty()) {
                        putToSendingMessages(((MessageObject) delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1)).messageOwner);
                    }
                    i = index;
                    sendReadyToSendGroup(delayedMessage, add, true);
                }
            }
            if (index < 0) {
                i = delayedMessage.messageObjects.size() - 1;
            } else {
                i = index;
            }
            MessageObject messageObject = (MessageObject) delayedMessage.messageObjects.get(i);
            StringBuilder stringBuilder4;
            String location2;
            if (messageObject.getDocument() != null) {
                HashMap hashMap;
                if (delayedMessage.videoEditedInfo != null) {
                    location = messageObject.messageOwner.attachPath;
                    Document document2 = messageObject.getDocument();
                    if (location == null) {
                        stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(FileLoader.getDirectory(4));
                        stringBuilder4.append("/");
                        stringBuilder4.append(document2.id);
                        stringBuilder4.append(".mp4");
                        location = stringBuilder4.toString();
                    }
                    putToDelayedMessages(location, delayedMessage);
                    delayedMessage.extraHashMap.put(messageObject, location);
                    hashMap = delayedMessage.extraHashMap;
                    stringBuilder4 = new StringBuilder();
                    stringBuilder4.append(location);
                    stringBuilder4.append("_i");
                    hashMap.put(stringBuilder4.toString(), messageObject);
                    if (delayedMessage.location != null) {
                        hashMap = delayedMessage.extraHashMap;
                        stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(location);
                        stringBuilder4.append("_t");
                        hashMap.put(stringBuilder4.toString(), delayedMessage.location);
                    }
                    MediaController.getInstance().scheduleVideoConvert(messageObject);
                } else {
                    StringBuilder stringBuilder5;
                    Document document3 = messageObject.getDocument();
                    String documentLocation = messageObject.messageOwner.attachPath;
                    if (documentLocation == null) {
                        stringBuilder5 = new StringBuilder();
                        stringBuilder5.append(FileLoader.getDirectory(4));
                        stringBuilder5.append("/");
                        stringBuilder5.append(document3.id);
                        stringBuilder5.append(".mp4");
                        documentLocation = stringBuilder5.toString();
                    }
                    if (delayedMessage.sendRequest != null) {
                        TL_messages_sendMultiMedia request = (TL_messages_sendMultiMedia) delayedMessage.sendRequest;
                        InputMedia media = ((TL_inputSingleMedia) request.multi_media.get(i)).media;
                        TL_messages_sendMultiMedia tL_messages_sendMultiMedia;
                        if (media.file == null) {
                            putToDelayedMessages(documentLocation, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject, documentLocation);
                            delayedMessage.extraHashMap.put(documentLocation, media);
                            HashMap hashMap2 = delayedMessage.extraHashMap;
                            StringBuilder stringBuilder6 = new StringBuilder();
                            stringBuilder6.append(documentLocation);
                            stringBuilder6.append("_i");
                            hashMap2.put(stringBuilder6.toString(), messageObject);
                            if (delayedMessage.location != null) {
                                hashMap2 = delayedMessage.extraHashMap;
                                stringBuilder6 = new StringBuilder();
                                stringBuilder6.append(documentLocation);
                                stringBuilder6.append("_t");
                                hashMap2.put(stringBuilder6.toString(), delayedMessage.location);
                            }
                            if (messageObject.videoEditedInfo == null || !messageObject.videoEditedInfo.needConvert()) {
                                tL_messages_sendMultiMedia = request;
                                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(documentLocation, false, false, ConnectionsManager.FileTypeVideo);
                            } else {
                                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(documentLocation, false, false, document3.size, ConnectionsManager.FileTypeVideo);
                            }
                        } else {
                            InputMedia media2 = media;
                            tL_messages_sendMultiMedia = request;
                            stringBuilder5 = new StringBuilder();
                            stringBuilder5.append(FileLoader.getDirectory(4));
                            stringBuilder5.append("/");
                            stringBuilder5.append(delayedMessage.location.volume_id);
                            stringBuilder5.append("_");
                            stringBuilder5.append(delayedMessage.location.local_id);
                            stringBuilder5.append(".jpg");
                            location2 = stringBuilder5.toString();
                            putToDelayedMessages(location2, delayedMessage);
                            HashMap hashMap3 = delayedMessage.extraHashMap;
                            StringBuilder stringBuilder7 = new StringBuilder();
                            stringBuilder7.append(location2);
                            stringBuilder7.append("_o");
                            hashMap3.put(stringBuilder7.toString(), documentLocation);
                            delayedMessage.extraHashMap.put(messageObject, location2);
                            delayedMessage.extraHashMap.put(location2, media2);
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location2, false, true, 16777216);
                        }
                    } else {
                        TL_messages_sendEncryptedMultiMedia request2 = delayedMessage.sendEncryptedRequest;
                        putToDelayedMessages(documentLocation, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject, documentLocation);
                        delayedMessage.extraHashMap.put(documentLocation, request2.files.get(i));
                        hashMap = delayedMessage.extraHashMap;
                        stringBuilder5 = new StringBuilder();
                        stringBuilder5.append(documentLocation);
                        stringBuilder5.append("_i");
                        hashMap.put(stringBuilder5.toString(), messageObject);
                        if (delayedMessage.location != null) {
                            hashMap = delayedMessage.extraHashMap;
                            stringBuilder5 = new StringBuilder();
                            stringBuilder5.append(documentLocation);
                            stringBuilder5.append("_t");
                            hashMap.put(stringBuilder5.toString(), delayedMessage.location);
                        }
                        if (messageObject.videoEditedInfo == null || !messageObject.videoEditedInfo.needConvert()) {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(documentLocation, true, false, ConnectionsManager.FileTypeVideo);
                        } else {
                            FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(documentLocation, true, false, document3.size, ConnectionsManager.FileTypeVideo);
                        }
                    }
                }
                delayedMessage.videoEditedInfo = null;
                delayedMessage.location = null;
            } else if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                delayedMessage.extraHashMap.put(messageObject, delayedMessage.httpLocation);
                delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", sendMessagesHelper.currentAccount);
                delayedMessage.httpLocation = null;
            } else {
                TLObject inputMedia;
                if (delayedMessage.sendRequest != null) {
                    inputMedia = ((TL_inputSingleMedia) delayedMessage.sendRequest.multi_media.get(i)).media;
                } else {
                    inputMedia = (TLObject) delayedMessage.sendEncryptedRequest.files.get(i);
                }
                stringBuilder4 = new StringBuilder();
                stringBuilder4.append(FileLoader.getDirectory(4));
                stringBuilder4.append("/");
                stringBuilder4.append(delayedMessage.location.volume_id);
                stringBuilder4.append("_");
                stringBuilder4.append(delayedMessage.location.local_id);
                stringBuilder4.append(".jpg");
                location2 = stringBuilder4.toString();
                putToDelayedMessages(location2, delayedMessage);
                delayedMessage.extraHashMap.put(location2, inputMedia);
                delayedMessage.extraHashMap.put(messageObject, location2);
                FileLoader.getInstance(sendMessagesHelper.currentAccount).uploadFile(location2, delayedMessage.sendEncryptedRequest != null, true, 16777216);
                delayedMessage.location = null;
            }
            delayedMessage.upload = false;
            sendReadyToSendGroup(delayedMessage, add, true);
        }
    }

    private void uploadMultiMedia(final DelayedMessage message, final InputMedia inputMedia, InputEncryptedFile inputEncryptedFile, String key) {
        int a;
        if (inputMedia != null) {
            TL_messages_sendMultiMedia multiMedia = message.sendRequest;
            for (a = 0; a < multiMedia.multi_media.size(); a++) {
                if (((TL_inputSingleMedia) multiMedia.multi_media.get(a)).media == inputMedia) {
                    putToSendingMessages((Message) message.messages.get(a));
                    NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.FileUploadProgressChanged, key, Float.valueOf(1.0f), Boolean.valueOf(false));
                    break;
                }
            }
            TL_messages_uploadMedia req = new TL_messages_uploadMedia();
            req.media = inputMedia;
            req.peer = ((TL_messages_sendMultiMedia) message.sendRequest).peer;
            ConnectionsManager.getInstance(this.currentAccount).sendRequest(req, new RequestDelegate() {
                public void run(final TLObject response, TL_error error) {
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public void run() {
                            InputMedia newInputMedia = null;
                            if (response != null) {
                                MessageMedia messageMedia = response;
                                InputMedia inputMediaPhoto;
                                if ((inputMedia instanceof TL_inputMediaUploadedPhoto) && (messageMedia instanceof TL_messageMediaPhoto)) {
                                    inputMediaPhoto = new TL_inputMediaPhoto();
                                    inputMediaPhoto.id = new TL_inputPhoto();
                                    inputMediaPhoto.id.id = messageMedia.photo.id;
                                    inputMediaPhoto.id.access_hash = messageMedia.photo.access_hash;
                                    newInputMedia = inputMediaPhoto;
                                } else if ((inputMedia instanceof TL_inputMediaUploadedDocument) && (messageMedia instanceof TL_messageMediaDocument)) {
                                    inputMediaPhoto = new TL_inputMediaDocument();
                                    inputMediaPhoto.id = new TL_inputDocument();
                                    inputMediaPhoto.id.id = messageMedia.document.id;
                                    inputMediaPhoto.id.access_hash = messageMedia.document.access_hash;
                                    newInputMedia = inputMediaPhoto;
                                }
                            }
                            if (newInputMedia != null) {
                                if (inputMedia.ttl_seconds != 0) {
                                    newInputMedia.ttl_seconds = inputMedia.ttl_seconds;
                                    newInputMedia.flags |= 1;
                                }
                                TL_messages_sendMultiMedia req = message.sendRequest;
                                for (int a = 0; a < req.multi_media.size(); a++) {
                                    if (((TL_inputSingleMedia) req.multi_media.get(a)).media == inputMedia) {
                                        ((TL_inputSingleMedia) req.multi_media.get(a)).media = newInputMedia;
                                        break;
                                    }
                                }
                                SendMessagesHelper.this.sendReadyToSendGroup(message, false, true);
                                return;
                            }
                            message.markAsError();
                        }
                    });
                }
            });
        } else if (inputEncryptedFile != null) {
            TL_messages_sendEncryptedMultiMedia multiMedia2 = message.sendEncryptedRequest;
            for (a = 0; a < multiMedia2.files.size(); a++) {
                if (multiMedia2.files.get(a) == inputEncryptedFile) {
                    putToSendingMessages((Message) message.messages.get(a));
                    NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.FileUploadProgressChanged, key, Float.valueOf(1.0f), Boolean.valueOf(false));
                    break;
                }
            }
            sendReadyToSendGroup(message, false, true);
        }
    }

    private void sendReadyToSendGroup(DelayedMessage message, boolean add, boolean check) {
        if (message.messageObjects.isEmpty()) {
            message.markAsError();
            return;
        }
        String key = new StringBuilder();
        key.append("group_");
        key.append(message.groupId);
        key = key.toString();
        if (message.finalGroupMessage != ((MessageObject) message.messageObjects.get(message.messageObjects.size() - 1)).getId()) {
            if (add) {
                putToDelayedMessages(key, message);
            }
            return;
        }
        int a = 0;
        if (add) {
            this.delayedMessages.remove(key);
            MessagesStorage.getInstance(this.currentAccount).putMessages(message.messages, false, true, false, 0);
            MessagesController.getInstance(this.currentAccount).updateInterfaceWithMessages(message.peer, message.messageObjects);
            NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
        }
        if (message.sendRequest instanceof TL_messages_sendMultiMedia) {
            TL_messages_sendMultiMedia request = message.sendRequest;
            while (a < request.multi_media.size()) {
                InputMedia inputMedia = ((TL_inputSingleMedia) request.multi_media.get(a)).media;
                if (!(inputMedia instanceof TL_inputMediaUploadedPhoto)) {
                    if (!(inputMedia instanceof TL_inputMediaUploadedDocument)) {
                        a++;
                    }
                }
                return;
            }
            if (check) {
                a = findMaxDelayedMessageForMessageId(message.finalGroupMessage, message.peer);
                if (a != 0) {
                    a.addDelayedRequest(message.sendRequest, message.messageObjects, message.originalPaths);
                    if (message.requests != null) {
                        a.requests.addAll(message.requests);
                    }
                    return;
                }
            }
        }
        TL_messages_sendEncryptedMultiMedia request2 = message.sendEncryptedRequest;
        while (a < request2.files.size()) {
            if (!(((InputEncryptedFile) request2.files.get(a)) instanceof TL_inputEncryptedFile)) {
                a++;
            } else {
                return;
            }
        }
        if (message.sendRequest instanceof TL_messages_sendMultiMedia) {
            performSendMessageRequestMulti((TL_messages_sendMultiMedia) message.sendRequest, message.messageObjects, message.originalPaths);
        } else {
            SecretChatHelper.getInstance(this.currentAccount).performSendEncryptedRequest((TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest, message);
        }
        message.sendDelayedRequests();
    }

    protected void stopVideoService(final String path) {
        MessagesStorage.getInstance(this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

            /* renamed from: org.telegram.messenger.SendMessagesHelper$11$1 */
            class C04701 implements Runnable {
                C04701() {
                }

                public void run() {
                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, path, Integer.valueOf(SendMessagesHelper.this.currentAccount));
                }
            }

            public void run() {
                AndroidUtilities.runOnUIThread(new C04701());
            }
        });
    }

    protected void putToSendingMessages(Message message) {
        this.sendingMessages.put(message.id, message);
    }

    protected void removeFromSendingMessages(int mid) {
        this.sendingMessages.remove(mid);
    }

    public boolean isSendingMessage(int mid) {
        return this.sendingMessages.indexOfKey(mid) >= 0;
    }

    private void performSendMessageRequestMulti(final TL_messages_sendMultiMedia req, final ArrayList<MessageObject> msgObjs, final ArrayList<String> originalPaths) {
        for (int a = 0; a < msgObjs.size(); a++) {
            putToSendingMessages(((MessageObject) msgObjs.get(a)).messageOwner);
        }
        ConnectionsManager.getInstance(this.currentAccount).sendRequest((TLObject) req, new RequestDelegate() {
            public void run(final TLObject response, final TL_error error) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public void run() {
                        boolean isSentError = false;
                        if (error == null) {
                            LongSparseArray<Integer> longSparseArray;
                            Updates updates;
                            SparseArray<Message> newMessages = new SparseArray();
                            LongSparseArray<Integer> newIds = new LongSparseArray();
                            Updates updates2 = response;
                            ArrayList<Update> updatesArr = ((Updates) response).updates;
                            int a = 0;
                            while (a < updatesArr.size()) {
                                Update update = (Update) updatesArr.get(a);
                                if (update instanceof TL_updateMessageID) {
                                    TL_updateMessageID updateMessageID = (TL_updateMessageID) update;
                                    newIds.put(updateMessageID.random_id, Integer.valueOf(updateMessageID.id));
                                    updatesArr.remove(a);
                                    a--;
                                } else if (update instanceof TL_updateNewMessage) {
                                    final TL_updateNewMessage newMessage = (TL_updateNewMessage) update;
                                    newMessages.put(newMessage.message.id, newMessage.message);
                                    Utilities.stageQueue.postRunnable(new Runnable() {
                                        public void run() {
                                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count);
                                        }
                                    });
                                    updatesArr.remove(a);
                                    a--;
                                } else if (update instanceof TL_updateNewChannelMessage) {
                                    final TL_updateNewChannelMessage newMessage2 = (TL_updateNewChannelMessage) update;
                                    newMessages.put(newMessage2.message.id, newMessage2.message);
                                    Utilities.stageQueue.postRunnable(new Runnable() {
                                        public void run() {
                                            MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewChannelDifferenceParams(newMessage2.pts, newMessage2.pts_count, newMessage2.message.to_id.channel_id);
                                        }
                                    });
                                    updatesArr.remove(a);
                                    a--;
                                }
                                a++;
                            }
                            a = 0;
                            while (a < msgObjs.size()) {
                                MessageObject msgObj = (MessageObject) msgObjs.get(a);
                                String originalPath = (String) originalPaths.get(a);
                                final Message newMsgObj = msgObj.messageOwner;
                                final int oldId = newMsgObj.id;
                                final ArrayList<Message> sentMessages = new ArrayList();
                                String attachPath = newMsgObj.attachPath;
                                Integer id = (Integer) newIds.get(newMsgObj.random_id);
                                Integer num;
                                if (id == null) {
                                    num = id;
                                    longSparseArray = newIds;
                                    updates = updates2;
                                    isSentError = true;
                                    break;
                                }
                                Message message = (Message) newMessages.get(id.intValue());
                                if (message == null) {
                                    num = id;
                                    longSparseArray = newIds;
                                    updates = updates2;
                                    isSentError = true;
                                    break;
                                }
                                sentMessages.add(message);
                                newMsgObj.id = message.id;
                                if ((newMsgObj.flags & Integer.MIN_VALUE) != 0) {
                                    message.flags |= Integer.MIN_VALUE;
                                }
                                SparseArray<Message> newMessages2 = newMessages;
                                newMessages = (Integer) MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.get(Long.valueOf(message.dialog_id));
                                if (newMessages == null) {
                                    longSparseArray = newIds;
                                    updates = updates2;
                                    newMessages = Integer.valueOf(MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getDialogReadMax(message.out, message.dialog_id));
                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.put(Long.valueOf(message.dialog_id), newMessages);
                                } else {
                                    longSparseArray = newIds;
                                    updates = updates2;
                                }
                                message.unread = newMessages.intValue() < message.id;
                                SendMessagesHelper.this.updateMediaPaths(msgObj, message, originalPath, false);
                                if (null == null) {
                                    StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, 1);
                                    newMsgObj.send_state = 0;
                                    NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(newMsgObj.id), newMsgObj, Long.valueOf(newMsgObj.dialog_id));
                                    MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

                                        /* renamed from: org.telegram.messenger.SendMessagesHelper$12$1$3$1 */
                                        class C04731 implements Runnable {
                                            C04731() {
                                            }

                                            public void run() {
                                                DataQuery.getInstance(SendMessagesHelper.this.currentAccount).increasePeerRaiting(newMsgObj.dialog_id);
                                                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(newMsgObj.id), newMsgObj, Long.valueOf(newMsgObj.dialog_id));
                                                SendMessagesHelper.this.processSentMessage(oldId);
                                                SendMessagesHelper.this.removeFromSendingMessages(oldId);
                                            }
                                        }

                                        public void run() {
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).updateMessageStateAndId(newMsgObj.random_id, Integer.valueOf(oldId), newMsgObj.id, 0, false, newMsgObj.to_id.channel_id);
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(sentMessages, true, false, false, 0);
                                            AndroidUtilities.runOnUIThread(new C04731());
                                        }
                                    });
                                }
                                a++;
                                newMessages = newMessages2;
                                newIds = longSparseArray;
                                updates2 = updates;
                            }
                            longSparseArray = newIds;
                            updates = updates2;
                            final Updates updates3 = updates;
                            Utilities.stageQueue.postRunnable(new Runnable() {
                                public void run() {
                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates(updates3, false);
                                }
                            });
                        } else {
                            AlertsCreator.processError(SendMessagesHelper.this.currentAccount, error, null, req, new Object[0]);
                            isSentError = true;
                        }
                        if (isSentError) {
                            for (int i = 0; i < msgObjs.size(); i++) {
                                Message newMsgObj2 = ((MessageObject) msgObjs.get(i)).messageOwner;
                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(newMsgObj2);
                                newMsgObj2.send_state = 2;
                                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsgObj2.id));
                                SendMessagesHelper.this.processSentMessage(newMsgObj2.id);
                                SendMessagesHelper.this.removeFromSendingMessages(newMsgObj2.id);
                            }
                        }
                    }
                });
            }
        }, null, 68);
    }

    private void performSendMessageRequest(TLObject req, MessageObject msgObj, String originalPath) {
        performSendMessageRequest(req, msgObj, originalPath, null, false);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int messageId, long dialogId) {
        DelayedMessage maxDelayedMessage = null;
        int maxDalyedMessageId = Integer.MIN_VALUE;
        for (Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> messages = (ArrayList) entry.getValue();
            int size = messages.size();
            for (int a = 0; a < size; a++) {
                DelayedMessage delayedMessage = (DelayedMessage) messages.get(a);
                if ((delayedMessage.type == 4 || delayedMessage.type == 0) && delayedMessage.peer == dialogId) {
                    int mid = 0;
                    if (delayedMessage.obj != null) {
                        mid = delayedMessage.obj.getId();
                    } else if (!(delayedMessage.messageObjects == null || delayedMessage.messageObjects.isEmpty())) {
                        mid = ((MessageObject) delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1)).getId();
                    }
                    if (mid != 0 && mid > messageId && maxDelayedMessage == null && maxDalyedMessageId < mid) {
                        maxDelayedMessage = delayedMessage;
                        maxDalyedMessageId = mid;
                    }
                }
            }
        }
        return maxDelayedMessage;
    }

    private void performSendMessageRequest(TLObject req, MessageObject msgObj, String originalPath, DelayedMessage parentMessage, boolean check) {
        if (check) {
            DelayedMessage maxDelayedMessage = findMaxDelayedMessageForMessageId(msgObj.getId(), msgObj.getDialogId());
            if (maxDelayedMessage != null) {
                maxDelayedMessage.addDelayedRequest(req, msgObj, originalPath);
                if (!(parentMessage == null || parentMessage.requests == null)) {
                    maxDelayedMessage.requests.addAll(parentMessage.requests);
                }
                return;
            }
        }
        final Message newMsgObj = msgObj.messageOwner;
        putToSendingMessages(newMsgObj);
        final Message message = newMsgObj;
        final TLObject tLObject = req;
        final MessageObject messageObject = msgObj;
        final String str = originalPath;
        ConnectionsManager.getInstance(this.currentAccount).sendRequest(req, new RequestDelegate() {
            public void run(final TLObject response, final TL_error error) {
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public void run() {
                        boolean isSentError;
                        boolean isSentError2 = false;
                        if (error == null) {
                            int oldId = message.id;
                            boolean isBroadcast = tLObject instanceof TL_messages_sendBroadcast;
                            ArrayList<Message> sentMessages = new ArrayList();
                            String attachPath = message.attachPath;
                            Message message;
                            int i;
                            if (response instanceof TL_updateShortSentMessage) {
                                final TL_updateShortSentMessage res = response;
                                Message message2 = message;
                                message = message;
                                i = res.id;
                                message.id = i;
                                message2.local_id = i;
                                message.date = res.date;
                                message.entities = res.entities;
                                message.out = res.out;
                                if (res.media != null) {
                                    message.media = res.media;
                                    message2 = message;
                                    message2.flags |= 512;
                                    ImageLoader.saveMessageThumbs(message);
                                }
                                if ((res.media instanceof TL_messageMediaGame) && !TextUtils.isEmpty(res.message)) {
                                    message.message = res.message;
                                }
                                if (!message.entities.isEmpty()) {
                                    message2 = message;
                                    message2.flags |= 128;
                                }
                                Utilities.stageQueue.postRunnable(new Runnable() {
                                    public void run() {
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, res.pts, res.date, res.pts_count);
                                    }
                                });
                                sentMessages.add(message);
                            } else if (response instanceof Updates) {
                                final Updates updates = response;
                                ArrayList<Update> updatesArr = ((Updates) response).updates;
                                message = null;
                                i = 0;
                                while (i < updatesArr.size()) {
                                    Update update = (Update) updatesArr.get(i);
                                    if (update instanceof TL_updateNewMessage) {
                                        final TL_updateNewMessage newMessage = (TL_updateNewMessage) update;
                                        Message message3 = newMessage.message;
                                        message = message3;
                                        sentMessages.add(message3);
                                        Utilities.stageQueue.postRunnable(new Runnable() {
                                            public void run() {
                                                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count);
                                            }
                                        });
                                        updatesArr.remove(i);
                                        break;
                                    } else if (update instanceof TL_updateNewChannelMessage) {
                                        final TL_updateNewChannelMessage newMessage2 = (TL_updateNewChannelMessage) update;
                                        Message message4 = newMessage2.message;
                                        message = message4;
                                        sentMessages.add(message4);
                                        if ((message.flags & Integer.MIN_VALUE) != 0) {
                                            message4 = newMessage2.message;
                                            message4.flags |= Integer.MIN_VALUE;
                                        }
                                        Utilities.stageQueue.postRunnable(new Runnable() {
                                            public void run() {
                                                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processNewChannelDifferenceParams(newMessage2.pts, newMessage2.pts_count, newMessage2.message.to_id.channel_id);
                                            }
                                        });
                                        updatesArr.remove(i);
                                    } else {
                                        i++;
                                    }
                                }
                                if (message != null) {
                                    ImageLoader.saveMessageThumbs(message);
                                    Integer value = (Integer) MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.get(Long.valueOf(message.dialog_id));
                                    if (value == null) {
                                        value = Integer.valueOf(MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getDialogReadMax(message.out, message.dialog_id));
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).dialogs_read_outbox_max.put(Long.valueOf(message.dialog_id), value);
                                    }
                                    message.unread = value.intValue() < message.id;
                                    message.id = message.id;
                                    SendMessagesHelper.this.updateMediaPaths(messageObject, message, str, false);
                                } else {
                                    isSentError2 = true;
                                }
                                Utilities.stageQueue.postRunnable(new Runnable() {
                                    public void run() {
                                        MessagesController.getInstance(SendMessagesHelper.this.currentAccount).processUpdates(updates, false);
                                    }
                                });
                            }
                            isSentError = isSentError2;
                            if (MessageObject.isLiveLocationMessage(message)) {
                                LocationController.getInstance(SendMessagesHelper.this.currentAccount).addSharingLocation(message.dialog_id, message.id, message.media.period, message);
                            }
                            if (!isSentError) {
                                StatsController.getInstance(SendMessagesHelper.this.currentAccount).incrementSentItemsCount(ConnectionsManager.getCurrentNetworkType(), 1, 1);
                                message.send_state = 0;
                                NotificationCenter instance = NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount);
                                int i2 = NotificationCenter.messageReceivedByServer;
                                Object[] objArr = new Object[4];
                                objArr[0] = Integer.valueOf(oldId);
                                objArr[1] = Integer.valueOf(isBroadcast ? oldId : message.id);
                                objArr[2] = message;
                                objArr[3] = Long.valueOf(message.dialog_id);
                                instance.postNotificationName(i2, objArr);
                                final int i3 = oldId;
                                final boolean z = isBroadcast;
                                final ArrayList<Message> arrayList = sentMessages;
                                final String str = attachPath;
                                MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).getStorageQueue().postRunnable(new Runnable() {

                                    /* renamed from: org.telegram.messenger.SendMessagesHelper$13$1$5$1 */
                                    class C04811 implements Runnable {
                                        C04811() {
                                        }

                                        public void run() {
                                            if (z) {
                                                for (int a = 0; a < arrayList.size(); a++) {
                                                    Message message = (Message) arrayList.get(a);
                                                    ArrayList<MessageObject> arr = new ArrayList();
                                                    MessageObject messageObject = new MessageObject(SendMessagesHelper.this.currentAccount, message, false);
                                                    arr.add(messageObject);
                                                    MessagesController.getInstance(SendMessagesHelper.this.currentAccount).updateInterfaceWithMessages(messageObject.getDialogId(), arr, true);
                                                }
                                                NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                                            }
                                            DataQuery.getInstance(SendMessagesHelper.this.currentAccount).increasePeerRaiting(message.dialog_id);
                                            NotificationCenter instance = NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount);
                                            int i = NotificationCenter.messageReceivedByServer;
                                            Object[] objArr = new Object[4];
                                            objArr[0] = Integer.valueOf(i3);
                                            objArr[1] = Integer.valueOf(z ? i3 : message.id);
                                            objArr[2] = message;
                                            objArr[3] = Long.valueOf(message.dialog_id);
                                            instance.postNotificationName(i, objArr);
                                            SendMessagesHelper.this.processSentMessage(i3);
                                            SendMessagesHelper.this.removeFromSendingMessages(i3);
                                        }
                                    }

                                    public void run() {
                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).updateMessageStateAndId(message.random_id, Integer.valueOf(i3), z ? i3 : message.id, 0, false, message.to_id.channel_id);
                                        MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages(arrayList, true, false, z, 0);
                                        if (z) {
                                            ArrayList<Message> currentMessage = new ArrayList();
                                            currentMessage.add(message);
                                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).putMessages((ArrayList) currentMessage, true, false, false, 0);
                                        }
                                        AndroidUtilities.runOnUIThread(new C04811());
                                        if (MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message) || MessageObject.isNewGifMessage(message)) {
                                            SendMessagesHelper.this.stopVideoService(str);
                                        }
                                    }
                                });
                            }
                        } else {
                            AlertsCreator.processError(SendMessagesHelper.this.currentAccount, error, null, tLObject, new Object[0]);
                            isSentError = true;
                        }
                        if (isSentError) {
                            MessagesStorage.getInstance(SendMessagesHelper.this.currentAccount).markMessageAsSendError(message);
                            message.send_state = 2;
                            NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message.id));
                            SendMessagesHelper.this.processSentMessage(message.id);
                            if (MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message) || MessageObject.isNewGifMessage(message)) {
                                SendMessagesHelper.this.stopVideoService(message.attachPath);
                            }
                            SendMessagesHelper.this.removeFromSendingMessages(message.id);
                        }
                    }
                });
            }
        }, new QuickAckDelegate() {
            public void run() {
                final int msg_id = newMsgObj.id;
                AndroidUtilities.runOnUIThread(new Runnable() {
                    public void run() {
                        newMsgObj.send_state = 0;
                        NotificationCenter.getInstance(SendMessagesHelper.this.currentAccount).postNotificationName(NotificationCenter.messageReceivedByAck, Integer.valueOf(msg_id));
                    }
                });
            }
        }, 68 | (req instanceof TL_messages_sendMessage ? 128 : 0));
        if (parentMessage != null) {
            parentMessage.sendDelayedRequests();
        }
    }

    private void updateMediaPaths(MessageObject newMsgObj, Message sentMessage, String originalPath, boolean post) {
        SendMessagesHelper sendMessagesHelper = this;
        Message message = sentMessage;
        String str = originalPath;
        boolean z = post;
        Message newMsg = newMsgObj.messageOwner;
        if (message != null) {
            long j = -2147483648L;
            int i = 4;
            int i2 = 0;
            StringBuilder stringBuilder;
            String fileName;
            String fileName2;
            File directory;
            File cacheFile;
            MessageObject messageObject;
            if ((message.media instanceof TL_messageMediaPhoto) && message.media.photo != null && (newMsg.media instanceof TL_messageMediaPhoto) && newMsg.media.photo != null) {
                if (message.media.ttl_seconds == 0) {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putSentFile(str, message.media.photo, 0);
                }
                if (newMsg.media.photo.sizes.size() == 1 && (((PhotoSize) newMsg.media.photo.sizes.get(0)).location instanceof TL_fileLocationUnavailable)) {
                    newMsg.media.photo.sizes = message.media.photo.sizes;
                } else {
                    int a = 0;
                    while (a < message.media.photo.sizes.size()) {
                        MessageObject messageObject2;
                        PhotoSize size = (PhotoSize) message.media.photo.sizes.get(a);
                        if (!(size == null || size.location == null || (size instanceof TL_photoSizeEmpty))) {
                            if (size.type != null) {
                                int b = i2;
                                while (b < newMsg.media.photo.sizes.size()) {
                                    PhotoSize size2 = (PhotoSize) newMsg.media.photo.sizes.get(b);
                                    if (!(size2 == null || size2.location == null)) {
                                        if (size2.type != null) {
                                            if ((size2.location.volume_id == j && size.type.equals(size2.type)) || (size.f43w == size2.f43w && size.f42h == size2.f42h)) {
                                                stringBuilder = new StringBuilder();
                                                stringBuilder.append(size2.location.volume_id);
                                                stringBuilder.append("_");
                                                stringBuilder.append(size2.location.local_id);
                                                fileName = stringBuilder.toString();
                                                fileName2 = new StringBuilder();
                                                fileName2.append(size.location.volume_id);
                                                fileName2.append("_");
                                                fileName2.append(size.location.local_id);
                                                fileName2 = fileName2.toString();
                                                if (!fileName.equals(fileName2)) {
                                                    File cacheFile2;
                                                    directory = FileLoader.getDirectory(i);
                                                    StringBuilder stringBuilder2 = new StringBuilder();
                                                    stringBuilder2.append(fileName);
                                                    stringBuilder2.append(".jpg");
                                                    cacheFile = new File(directory, stringBuilder2.toString());
                                                    if (message.media.ttl_seconds != 0 || (message.media.photo.sizes.size() != 1 && size.f43w <= 90 && size.f42h <= 90)) {
                                                        File directory2 = FileLoader.getDirectory(4);
                                                        StringBuilder stringBuilder3 = new StringBuilder();
                                                        stringBuilder3.append(fileName2);
                                                        stringBuilder3.append(".jpg");
                                                        cacheFile2 = new File(directory2, stringBuilder3.toString());
                                                    } else {
                                                        cacheFile2 = FileLoader.getPathToAttach(size);
                                                    }
                                                    cacheFile.renameTo(cacheFile2);
                                                    ImageLoader.getInstance().replaceImageInCache(fileName, fileName2, size.location, z);
                                                    size2.location = size.location;
                                                    size2.size = size.size;
                                                }
                                            }
                                        }
                                    }
                                    b++;
                                    messageObject2 = newMsgObj;
                                    j = -2147483648L;
                                    i = 4;
                                }
                            }
                        }
                        a++;
                        messageObject2 = newMsgObj;
                        j = -2147483648L;
                        i = 4;
                        i2 = 0;
                    }
                }
                message.message = newMsg.message;
                message.attachPath = newMsg.attachPath;
                newMsg.media.photo.id = message.media.photo.id;
                newMsg.media.photo.access_hash = message.media.photo.access_hash;
                messageObject = newMsgObj;
            } else if (!(message.media instanceof TL_messageMediaDocument) || message.media.document == null || !(newMsg.media instanceof TL_messageMediaDocument) || newMsg.media.document == null) {
                messageObject = newMsgObj;
                if ((message.media instanceof TL_messageMediaContact) && (newMsg.media instanceof TL_messageMediaContact)) {
                    newMsg.media = message.media;
                } else if (message.media instanceof TL_messageMediaWebPage) {
                    newMsg.media = message.media;
                } else if (message.media instanceof TL_messageMediaGame) {
                    newMsg.media = message.media;
                    if ((newMsg.media instanceof TL_messageMediaGame) && !TextUtils.isEmpty(message.message)) {
                        newMsg.entities = message.entities;
                        newMsg.message = message.message;
                    }
                }
            } else {
                int a2;
                DocumentAttribute attribute;
                if (MessageObject.isVideoMessage(sentMessage)) {
                    if (message.media.ttl_seconds == 0) {
                        MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putSentFile(str, message.media.document, 2);
                    }
                    message.attachPath = newMsg.attachPath;
                } else if (!(MessageObject.isVoiceMessage(sentMessage) || MessageObject.isRoundVideoMessage(sentMessage) || message.media.ttl_seconds != 0)) {
                    MessagesStorage.getInstance(sendMessagesHelper.currentAccount).putSentFile(str, message.media.document, 1);
                }
                PhotoSize size22 = newMsg.media.document.thumb;
                PhotoSize size3 = message.media.document.thumb;
                if (size22 != null && size22.location != null && size22.location.volume_id == -2147483648L && size3 != null && size3.location != null && !(size3 instanceof TL_photoSizeEmpty) && !(size22 instanceof TL_photoSizeEmpty)) {
                    StringBuilder stringBuilder4 = new StringBuilder();
                    stringBuilder4.append(size22.location.volume_id);
                    stringBuilder4.append("_");
                    stringBuilder4.append(size22.location.local_id);
                    fileName = stringBuilder4.toString();
                    StringBuilder stringBuilder5 = new StringBuilder();
                    stringBuilder5.append(size3.location.volume_id);
                    stringBuilder5.append("_");
                    stringBuilder5.append(size3.location.local_id);
                    fileName2 = stringBuilder5.toString();
                    if (!fileName.equals(fileName2)) {
                        directory = FileLoader.getDirectory(4);
                        StringBuilder stringBuilder6 = new StringBuilder();
                        stringBuilder6.append(fileName);
                        stringBuilder6.append(".jpg");
                        cacheFile = new File(directory, stringBuilder6.toString());
                        File directory3 = FileLoader.getDirectory(4);
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(fileName2);
                        stringBuilder.append(".jpg");
                        cacheFile.renameTo(new File(directory3, stringBuilder.toString()));
                        ImageLoader.getInstance().replaceImageInCache(fileName, fileName2, size3.location, z);
                        size22.location = size3.location;
                        size22.size = size3.size;
                    }
                } else if (size22 != null && MessageObject.isStickerMessage(sentMessage) && size22.location != null) {
                    size3.location = size22.location;
                } else if ((size22 != null && (size22.location instanceof TL_fileLocationUnavailable)) || (size22 instanceof TL_photoSizeEmpty)) {
                    newMsg.media.document.thumb = message.media.document.thumb;
                }
                newMsg.media.document.dc_id = message.media.document.dc_id;
                newMsg.media.document.id = message.media.document.id;
                newMsg.media.document.access_hash = message.media.document.access_hash;
                byte[] oldWaveform = null;
                for (a2 = 0; a2 < newMsg.media.document.attributes.size(); a2++) {
                    attribute = (DocumentAttribute) newMsg.media.document.attributes.get(a2);
                    if (attribute instanceof TL_documentAttributeAudio) {
                        oldWaveform = attribute.waveform;
                        break;
                    }
                }
                newMsg.media.document.attributes = message.media.document.attributes;
                if (oldWaveform != null) {
                    for (a2 = 0; a2 < newMsg.media.document.attributes.size(); a2++) {
                        attribute = (DocumentAttribute) newMsg.media.document.attributes.get(a2);
                        if (attribute instanceof TL_documentAttributeAudio) {
                            attribute.waveform = oldWaveform;
                            attribute.flags |= 4;
                        }
                    }
                }
                newMsg.media.document.size = message.media.document.size;
                newMsg.media.document.mime_type = message.media.document.mime_type;
                if ((message.flags & 4) == 0 && MessageObject.isOut(sentMessage)) {
                    if (MessageObject.isNewGifDocument(message.media.document)) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).addRecentGif(message.media.document, message.date);
                    } else if (MessageObject.isStickerDocument(message.media.document)) {
                        DataQuery.getInstance(sendMessagesHelper.currentAccount).addRecentSticker(0, message.media.document, message.date, false);
                    }
                }
                if (newMsg.attachPath == null || !newMsg.attachPath.startsWith(FileLoader.getDirectory(4).getAbsolutePath())) {
                    messageObject = newMsgObj;
                    message.attachPath = newMsg.attachPath;
                    message.message = newMsg.message;
                } else {
                    File cacheFile3 = new File(newMsg.attachPath);
                    cacheFile = FileLoader.getPathToAttach(message.media.document, message.media.ttl_seconds != 0);
                    if (!cacheFile3.renameTo(cacheFile)) {
                        message.attachPath = newMsg.attachPath;
                        message.message = newMsg.message;
                        messageObject = newMsgObj;
                    } else if (MessageObject.isVideoMessage(sentMessage)) {
                        newMsgObj.attachPathExists = true;
                    } else {
                        messageObject = newMsgObj;
                        messageObject.mediaExists = messageObject.attachPathExists;
                        messageObject.attachPathExists = false;
                        newMsg.attachPath = TtmlNode.ANONYMOUS_REGION_ID;
                        if (str != null && str.startsWith("http")) {
                            MessagesStorage.getInstance(sendMessagesHelper.currentAccount).addRecentLocalFile(str, cacheFile.toString(), newMsg.media.document);
                        }
                    }
                }
            }
        }
    }

    private void putToDelayedMessages(String location, DelayedMessage message) {
        ArrayList<DelayedMessage> arrayList = (ArrayList) this.delayedMessages.get(location);
        if (arrayList == null) {
            arrayList = new ArrayList();
            this.delayedMessages.put(location, arrayList);
        }
        arrayList.add(message);
    }

    protected ArrayList<DelayedMessage> getDelayedMessages(String location) {
        return (ArrayList) this.delayedMessages.get(location);
    }

    protected long getNextRandomId() {
        long val = 0;
        while (val == 0) {
            val = Utilities.random.nextLong();
        }
        return val;
    }

    public void checkUnsentMessages() {
        MessagesStorage.getInstance(this.currentAccount).getUnsentMessages(1000);
    }

    protected void processUnsentMessages(ArrayList<Message> messages, ArrayList<User> users, ArrayList<Chat> chats, ArrayList<EncryptedChat> encryptedChats) {
        final ArrayList<User> arrayList = users;
        final ArrayList<Chat> arrayList2 = chats;
        final ArrayList<EncryptedChat> arrayList3 = encryptedChats;
        final ArrayList<Message> arrayList4 = messages;
        AndroidUtilities.runOnUIThread(new Runnable() {
            public void run() {
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putUsers(arrayList, true);
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putChats(arrayList2, true);
                MessagesController.getInstance(SendMessagesHelper.this.currentAccount).putEncryptedChats(arrayList3, true);
                for (int a = 0; a < arrayList4.size(); a++) {
                    SendMessagesHelper.this.retrySendMessage(new MessageObject(SendMessagesHelper.this.currentAccount, (Message) arrayList4.get(a), false), true);
                }
            }
        });
    }

    public TL_photo generatePhotoSizes(String path, Uri imageUri) {
        Bitmap bitmap = ImageLoader.loadBitmap(path, imageUri, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true);
        if (bitmap == null && AndroidUtilities.getPhotoSize() != 800) {
            bitmap = ImageLoader.loadBitmap(path, imageUri, 800.0f, 800.0f, true);
        }
        ArrayList<PhotoSize> sizes = new ArrayList();
        PhotoSize size = ImageLoader.scaleAndSaveImage(bitmap, 90.0f, 90.0f, 55, true);
        if (size != null) {
            sizes.add(size);
        }
        size = ImageLoader.scaleAndSaveImage(bitmap, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), 80, false, 101, 101);
        if (size != null) {
            sizes.add(size);
        }
        if (bitmap != null) {
            bitmap.recycle();
        }
        if (sizes.isEmpty()) {
            return null;
        }
        UserConfig.getInstance(this.currentAccount).saveConfig(false);
        TL_photo photo = new TL_photo();
        photo.date = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
        photo.sizes = sizes;
        return photo;
    }

    private static boolean prepareSendingDocumentInternal(int currentAccount, String path, String originalPath, Uri uri, String mime, long dialog_id, MessageObject reply_to_msg, CharSequence caption, ArrayList<MessageEntity> entities) {
        Throwable sendNew;
        Throwable e;
        String str;
        HashMap<String, String> params;
        final TLObject documentFinal;
        AnonymousClass16 anonymousClass16;
        AnonymousClass16 anonymousClass162;
        final long j;
        final MessageObject messageObject;
        final ArrayList<MessageEntity> arrayList;
        final HashMap<String, String> hashMap;
        Throwable e2;
        TL_documentAttributeImageSize attributeImageSize;
        TL_documentAttributeAudio tL_documentAttributeAudio;
        Throwable e3;
        String path2 = path;
        String str2 = originalPath;
        Uri uri2 = uri;
        String str3 = mime;
        if ((path2 == null || path.length() == 0) && uri2 == null) {
            return false;
        }
        if (uri2 != null && AndroidUtilities.isInternalUri(uri)) {
            return false;
        }
        if (path2 != null && AndroidUtilities.isInternalUri(Uri.fromFile(new File(path2)))) {
            return false;
        }
        boolean hasExt;
        MimeTypeMap myMime = MimeTypeMap.getSingleton();
        String extension = null;
        if (uri2 != null) {
            hasExt = false;
            if (str3 != null) {
                extension = myMime.getExtensionFromMimeType(str3);
            }
            if (extension == null) {
                extension = "txt";
            } else {
                hasExt = true;
            }
            path2 = MediaController.copyFileToCache(uri2, extension);
            if (path2 == null) {
                return false;
            }
            if (!hasExt) {
                extension = null;
            }
        }
        File f = new File(path2);
        TL_documentAttributeAudio tL_documentAttributeAudio2;
        String str4;
        File file;
        if (!f.exists()) {
            tL_documentAttributeAudio2 = null;
            str4 = extension;
            file = f;
        } else if (f.length() == 0) {
            tL_documentAttributeAudio2 = null;
            str4 = extension;
            file = f;
        } else {
            String ext;
            String attributeAudio;
            boolean duration;
            Object obj;
            TL_documentAttributeAudio attributeAudio2;
            TL_documentAttributeAudio attributeAudio3;
            boolean sendNew2;
            StringBuilder stringBuilder;
            String str5;
            String str6;
            boolean sendNew3;
            TLObject attributeAudio4;
            MessagesStorage instance;
            StringBuilder stringBuilder2;
            TL_documentAttributeFilename fileName;
            int hashCode;
            Object obj2;
            String mimeType;
            hasExt = ((int) dialog_id) == 0;
            boolean allowSticker = !hasExt;
            String name = f.getName();
            String ext2 = TtmlNode.ANONYMOUS_REGION_ID;
            if (extension != null) {
                ext2 = extension;
            } else {
                ext = path2.lastIndexOf(46);
                if (ext != -1) {
                    ext2 = path2.substring(ext + 1);
                }
            }
            ext = ext2;
            String extL = ext.toLowerCase();
            ext2 = null;
            String title = null;
            boolean z = false;
            boolean isVoice = false;
            if (extL.equals("mp3")) {
                tL_documentAttributeAudio2 = null;
                str4 = extension;
            } else if (extL.equals("m4a")) {
                tL_documentAttributeAudio2 = null;
                str4 = extension;
            } else {
                if (!(extL.equals("opus") || extL.equals("ogg"))) {
                    if (!extL.equals("flac")) {
                        tL_documentAttributeAudio2 = null;
                        str4 = extension;
                        extension = ext2;
                        attributeAudio = title;
                        duration = isVoice;
                        isVoice = z;
                        if (duration) {
                            obj = 2;
                            attributeAudio2 = tL_documentAttributeAudio2;
                        } else {
                            attributeAudio3 = new TL_documentAttributeAudio();
                            attributeAudio3.duration = duration;
                            attributeAudio3.title = attributeAudio;
                            attributeAudio3.performer = extension;
                            if (attributeAudio3.title == 0) {
                                attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            attributeAudio3.flags |= 1;
                            if (attributeAudio3.performer == null) {
                                attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                            }
                            obj = 2;
                            attributeAudio3.flags |= 2;
                            if (isVoice) {
                                attributeAudio3.voice = true;
                            }
                            attributeAudio2 = attributeAudio3;
                        }
                        sendNew2 = false;
                        if (str2 == null) {
                            if (str2.endsWith("attheme")) {
                                if (attributeAudio2 == null) {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(str2);
                                    str5 = attributeAudio;
                                    stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                    str6 = extension;
                                    stringBuilder.append(f.length());
                                    str2 = stringBuilder.toString();
                                } else {
                                    str5 = attributeAudio;
                                    str6 = extension;
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(str2);
                                    stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                    stringBuilder.append(f.length());
                                    str2 = stringBuilder.toString();
                                }
                                str3 = str2;
                            } else {
                                sendNew2 = true;
                                str3 = str2;
                                str5 = attributeAudio;
                            }
                            sendNew3 = sendNew2;
                        } else {
                            str5 = attributeAudio;
                            str6 = extension;
                            str3 = str2;
                            sendNew3 = false;
                        }
                        attributeAudio4 = null;
                        if (!(sendNew3 || hasExt)) {
                            attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                            if (!(attributeAudio4 != null || path2.equals(str3) || hasExt)) {
                                instance = MessagesStorage.getInstance(currentAccount);
                                stringBuilder2 = new StringBuilder();
                                stringBuilder2.append(path2);
                                stringBuilder2.append(f.length());
                                attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                            }
                        }
                        if (attributeAudio4 != null) {
                            attributeAudio4 = new TL_document();
                            attributeAudio4.id = 0;
                            attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                            fileName = new TL_documentAttributeFilename();
                            fileName.file_name = name;
                            attributeAudio4.attributes.add(fileName);
                            attributeAudio4.size = (int) f.length();
                            attributeAudio4.dc_id = 0;
                            if (attributeAudio2 != null) {
                                attributeAudio4.attributes.add(attributeAudio2);
                            }
                            if (ext.length() == 0) {
                                hashCode = extL.hashCode();
                                if (hashCode == 109967) {
                                    if (extL.equals("ogg")) {
                                        obj2 = obj;
                                        switch (obj2) {
                                            case null:
                                                attributeAudio4.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                attributeAudio4.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                if (mimeType == null) {
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                                }
                                                attributeAudio4.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (hashCode == 3145576) {
                                    if (extL.equals("flac")) {
                                        obj2 = 3;
                                        switch (obj2) {
                                            case null:
                                                attributeAudio4.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                attributeAudio4.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                if (mimeType == null) {
                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                attributeAudio4.mime_type = mimeType;
                                                break;
                                        }
                                    }
                                } else if (hashCode == 3418175) {
                                    if (extL.equals("opus")) {
                                        obj2 = 1;
                                        switch (obj2) {
                                            case null:
                                                attributeAudio4.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                attributeAudio4.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                if (mimeType == null) {
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                                }
                                                attributeAudio4.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                } else if (hashCode == 3645340) {
                                    if (extL.equals("webp")) {
                                        obj2 = null;
                                        switch (obj2) {
                                            case null:
                                                attributeAudio4.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                attributeAudio4.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                if (mimeType == null) {
                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                    break;
                                                }
                                                attributeAudio4.mime_type = mimeType;
                                                break;
                                        }
                                    }
                                }
                                obj2 = -1;
                                switch (obj2) {
                                    case null:
                                        attributeAudio4.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        attributeAudio4.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                        if (mimeType == null) {
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            break;
                                        }
                                        attributeAudio4.mime_type = mimeType;
                                        break;
                                }
                            }
                            attributeAudio4.mime_type = "application/octet-stream";
                            if (attributeAudio4.mime_type.equals("image/gif")) {
                            } else {
                                try {
                                    try {
                                        sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                                        if (sendNew3) {
                                            fileName.file_name = "animation.gif";
                                            attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                                            sendNew3.recycle();
                                        }
                                    } catch (Throwable e4) {
                                        sendNew = e4;
                                        FileLog.m3e(sendNew);
                                        if (attributeAudio4.mime_type.equals("image/webp")) {
                                        }
                                        str = name;
                                        if (!attributeAudio4.thumb) {
                                            attributeAudio4.thumb = new TL_photoSizeEmpty();
                                            attributeAudio4.thumb.type = "s";
                                        }
                                        ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                        params = new HashMap();
                                        if (str3 != null) {
                                            params.put("originalPath", str3);
                                        }
                                        extension = extL;
                                        documentFinal = attributeAudio4;
                                        ext = path2;
                                        hashCode = currentAccount;
                                        anonymousClass16 = anonymousClass162;
                                        j = dialog_id;
                                        messageObject = reply_to_msg;
                                        arrayList = entities;
                                        hashMap = params;
                                        anonymousClass162 = new Runnable() {
                                            public void run() {
                                                SendMessagesHelper.getInstance(hashCode).sendMessage(documentFinal, null, ext, j, messageObject, ext2, arrayList, null, hashMap, 0);
                                            }
                                        };
                                        AndroidUtilities.runOnUIThread(anonymousClass16);
                                        return true;
                                    }
                                } catch (Throwable e42) {
                                    boolean z2 = sendNew3;
                                    sendNew = e42;
                                    FileLog.m3e(sendNew);
                                    if (attributeAudio4.mime_type.equals("image/webp")) {
                                    }
                                    str = name;
                                    if (attributeAudio4.thumb) {
                                        attributeAudio4.thumb = new TL_photoSizeEmpty();
                                        attributeAudio4.thumb.type = "s";
                                    }
                                    if (caption != null) {
                                    }
                                    ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                    params = new HashMap();
                                    if (str3 != null) {
                                        params.put("originalPath", str3);
                                    }
                                    extension = extL;
                                    documentFinal = attributeAudio4;
                                    ext = path2;
                                    hashCode = currentAccount;
                                    anonymousClass16 = anonymousClass162;
                                    j = dialog_id;
                                    messageObject = reply_to_msg;
                                    arrayList = entities;
                                    hashMap = params;
                                    anonymousClass162 = /* anonymous class already generated */;
                                    AndroidUtilities.runOnUIThread(anonymousClass16);
                                    return true;
                                }
                            }
                            if (attributeAudio4.mime_type.equals("image/webp") || !allowSticker) {
                                str = name;
                            } else {
                                sendNew3 = new Options();
                                try {
                                    sendNew3.inJustDecodeBounds = true;
                                    try {
                                        RandomAccessFile file2 = new RandomAccessFile(path2, "r");
                                        ByteBuffer buffer = file2.getChannel().map(MapMode.READ_ONLY, 0, (long) path2.length());
                                        try {
                                            Utilities.loadWebpImage(null, buffer, buffer.limit(), sendNew3, true);
                                            file2.close();
                                        } catch (Throwable e422) {
                                            e2 = e422;
                                            FileLog.m3e(e2);
                                            name = new TL_documentAttributeSticker();
                                            name.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                            name.stickerset = new TL_inputStickerSetEmpty();
                                            attributeAudio4.attributes.add(name);
                                            attributeImageSize = new TL_documentAttributeImageSize();
                                            attributeImageSize.w = sendNew3.outWidth;
                                            attributeImageSize.h = sendNew3.outHeight;
                                            attributeAudio4.attributes.add(attributeImageSize);
                                            if (attributeAudio4.thumb) {
                                                attributeAudio4.thumb = new TL_photoSizeEmpty();
                                                attributeAudio4.thumb.type = "s";
                                            }
                                            if (caption != null) {
                                            }
                                            ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                            params = new HashMap();
                                            if (str3 != null) {
                                                params.put("originalPath", str3);
                                            }
                                            extension = extL;
                                            documentFinal = attributeAudio4;
                                            ext = path2;
                                            hashCode = currentAccount;
                                            anonymousClass16 = anonymousClass162;
                                            j = dialog_id;
                                            messageObject = reply_to_msg;
                                            arrayList = entities;
                                            hashMap = params;
                                            anonymousClass162 = /* anonymous class already generated */;
                                            AndroidUtilities.runOnUIThread(anonymousClass16);
                                            return true;
                                        }
                                    } catch (Exception e5) {
                                        e422 = e5;
                                        tL_documentAttributeAudio = attributeAudio2;
                                        str = name;
                                        e2 = e422;
                                        FileLog.m3e(e2);
                                        name = new TL_documentAttributeSticker();
                                        name.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                        name.stickerset = new TL_inputStickerSetEmpty();
                                        attributeAudio4.attributes.add(name);
                                        attributeImageSize = new TL_documentAttributeImageSize();
                                        attributeImageSize.w = sendNew3.outWidth;
                                        attributeImageSize.h = sendNew3.outHeight;
                                        attributeAudio4.attributes.add(attributeImageSize);
                                        if (attributeAudio4.thumb) {
                                            attributeAudio4.thumb = new TL_photoSizeEmpty();
                                            attributeAudio4.thumb.type = "s";
                                        }
                                        if (caption != null) {
                                        }
                                        ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                        params = new HashMap();
                                        if (str3 != null) {
                                            params.put("originalPath", str3);
                                        }
                                        extension = extL;
                                        documentFinal = attributeAudio4;
                                        ext = path2;
                                        hashCode = currentAccount;
                                        anonymousClass16 = anonymousClass162;
                                        j = dialog_id;
                                        messageObject = reply_to_msg;
                                        arrayList = entities;
                                        hashMap = params;
                                        anonymousClass162 = /* anonymous class already generated */;
                                        AndroidUtilities.runOnUIThread(anonymousClass16);
                                        return true;
                                    }
                                } catch (Exception e6) {
                                    e422 = e6;
                                    tL_documentAttributeAudio = attributeAudio2;
                                    str = name;
                                    attributeAudio2 = 1;
                                    e2 = e422;
                                    FileLog.m3e(e2);
                                    name = new TL_documentAttributeSticker();
                                    name.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                    name.stickerset = new TL_inputStickerSetEmpty();
                                    attributeAudio4.attributes.add(name);
                                    attributeImageSize = new TL_documentAttributeImageSize();
                                    attributeImageSize.w = sendNew3.outWidth;
                                    attributeImageSize.h = sendNew3.outHeight;
                                    attributeAudio4.attributes.add(attributeImageSize);
                                    if (attributeAudio4.thumb) {
                                        attributeAudio4.thumb = new TL_photoSizeEmpty();
                                        attributeAudio4.thumb.type = "s";
                                    }
                                    if (caption != null) {
                                    }
                                    ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                    params = new HashMap();
                                    if (str3 != null) {
                                        params.put("originalPath", str3);
                                    }
                                    extension = extL;
                                    documentFinal = attributeAudio4;
                                    ext = path2;
                                    hashCode = currentAccount;
                                    anonymousClass16 = anonymousClass162;
                                    j = dialog_id;
                                    messageObject = reply_to_msg;
                                    arrayList = entities;
                                    hashMap = params;
                                    anonymousClass162 = /* anonymous class already generated */;
                                    AndroidUtilities.runOnUIThread(anonymousClass16);
                                    return true;
                                }
                                if (sendNew3.outWidth != 0 && sendNew3.outHeight != 0 && sendNew3.outWidth <= 800 && sendNew3.outHeight <= 800) {
                                    name = new TL_documentAttributeSticker();
                                    name.alt = TtmlNode.ANONYMOUS_REGION_ID;
                                    name.stickerset = new TL_inputStickerSetEmpty();
                                    attributeAudio4.attributes.add(name);
                                    attributeImageSize = new TL_documentAttributeImageSize();
                                    attributeImageSize.w = sendNew3.outWidth;
                                    attributeImageSize.h = sendNew3.outHeight;
                                    attributeAudio4.attributes.add(attributeImageSize);
                                }
                            }
                            if (attributeAudio4.thumb) {
                                attributeAudio4.thumb = new TL_photoSizeEmpty();
                                attributeAudio4.thumb.type = "s";
                            }
                        } else {
                            tL_documentAttributeAudio = attributeAudio2;
                            str = name;
                        }
                        if (caption != null) {
                        }
                        ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                        params = new HashMap();
                        if (str3 != null) {
                            params.put("originalPath", str3);
                        }
                        extension = extL;
                        documentFinal = attributeAudio4;
                        ext = path2;
                        hashCode = currentAccount;
                        anonymousClass16 = anonymousClass162;
                        j = dialog_id;
                        messageObject = reply_to_msg;
                        arrayList = entities;
                        hashMap = params;
                        anonymousClass162 = /* anonymous class already generated */;
                        AndroidUtilities.runOnUIThread(anonymousClass16);
                        return true;
                    }
                }
                MediaMetadataRetriever mediaMetadataRetriever = null;
                try {
                    mediaMetadataRetriever = new MediaMetadataRetriever();
                    mediaMetadataRetriever.setDataSource(f.getAbsolutePath());
                    String d = mediaMetadataRetriever.extractMetadata(9);
                    if (d != null) {
                        TL_documentAttributeAudio attributeAudio5;
                        tL_documentAttributeAudio2 = null;
                        try {
                            attributeAudio5 = (int) Math.ceil((double) (((float) Long.parseLong(d)) / 1000.0f));
                        } catch (Throwable e4222) {
                            e3 = e4222;
                            try {
                                FileLog.m3e(e3);
                                if (mediaMetadataRetriever != null) {
                                    try {
                                        mediaMetadataRetriever.release();
                                    } catch (Exception e7) {
                                        e4222 = e7;
                                        FileLog.m3e(e4222);
                                        extension = ext2;
                                        attributeAudio = title;
                                        duration = isVoice;
                                        isVoice = z;
                                        if (duration) {
                                            attributeAudio3 = new TL_documentAttributeAudio();
                                            attributeAudio3.duration = duration;
                                            attributeAudio3.title = attributeAudio;
                                            attributeAudio3.performer = extension;
                                            if (attributeAudio3.title == 0) {
                                                attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                                            }
                                            attributeAudio3.flags |= 1;
                                            if (attributeAudio3.performer == null) {
                                                attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                            }
                                            obj = 2;
                                            attributeAudio3.flags |= 2;
                                            if (isVoice) {
                                                attributeAudio3.voice = true;
                                            }
                                            attributeAudio2 = attributeAudio3;
                                        } else {
                                            obj = 2;
                                            attributeAudio2 = tL_documentAttributeAudio2;
                                        }
                                        sendNew2 = false;
                                        if (str2 == null) {
                                            if (str2.endsWith("attheme")) {
                                                sendNew2 = true;
                                                str3 = str2;
                                                str5 = attributeAudio;
                                            } else {
                                                if (attributeAudio2 == null) {
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(str2);
                                                    str5 = attributeAudio;
                                                    stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                                    str6 = extension;
                                                    stringBuilder.append(f.length());
                                                    str2 = stringBuilder.toString();
                                                } else {
                                                    str5 = attributeAudio;
                                                    str6 = extension;
                                                    stringBuilder = new StringBuilder();
                                                    stringBuilder.append(str2);
                                                    stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder.append(f.length());
                                                    str2 = stringBuilder.toString();
                                                }
                                                str3 = str2;
                                            }
                                            sendNew3 = sendNew2;
                                        } else {
                                            str5 = attributeAudio;
                                            str6 = extension;
                                            str3 = str2;
                                            sendNew3 = false;
                                        }
                                        attributeAudio4 = null;
                                        if (hasExt) {
                                        }
                                        attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                                        instance = MessagesStorage.getInstance(currentAccount);
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append(path2);
                                        stringBuilder2.append(f.length());
                                        if (hasExt) {
                                        }
                                        attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                                        if (attributeAudio4 != null) {
                                            attributeAudio4 = new TL_document();
                                            attributeAudio4.id = 0;
                                            attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                                            fileName = new TL_documentAttributeFilename();
                                            fileName.file_name = name;
                                            attributeAudio4.attributes.add(fileName);
                                            attributeAudio4.size = (int) f.length();
                                            attributeAudio4.dc_id = 0;
                                            if (attributeAudio2 != null) {
                                                attributeAudio4.attributes.add(attributeAudio2);
                                            }
                                            if (ext.length() == 0) {
                                                hashCode = extL.hashCode();
                                                if (hashCode == 109967) {
                                                    if (extL.equals("ogg")) {
                                                        obj2 = obj;
                                                        switch (obj2) {
                                                            case null:
                                                                attributeAudio4.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                attributeAudio4.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                                if (mimeType == null) {
                                                                    attributeAudio4.mime_type = mimeType;
                                                                    break;
                                                                }
                                                                attributeAudio4.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (hashCode == 3145576) {
                                                    if (extL.equals("flac")) {
                                                        obj2 = 3;
                                                        switch (obj2) {
                                                            case null:
                                                                attributeAudio4.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                attributeAudio4.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                                if (mimeType == null) {
                                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                attributeAudio4.mime_type = mimeType;
                                                                break;
                                                        }
                                                    }
                                                } else if (hashCode == 3418175) {
                                                    if (extL.equals("opus")) {
                                                        obj2 = 1;
                                                        switch (obj2) {
                                                            case null:
                                                                attributeAudio4.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                attributeAudio4.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                                if (mimeType == null) {
                                                                    attributeAudio4.mime_type = mimeType;
                                                                    break;
                                                                }
                                                                attributeAudio4.mime_type = "application/octet-stream";
                                                                break;
                                                        }
                                                    }
                                                } else if (hashCode == 3645340) {
                                                    if (extL.equals("webp")) {
                                                        obj2 = null;
                                                        switch (obj2) {
                                                            case null:
                                                                attributeAudio4.mime_type = "image/webp";
                                                                break;
                                                            case 1:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                                break;
                                                            case 2:
                                                                attributeAudio4.mime_type = "audio/ogg";
                                                                break;
                                                            case 3:
                                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                                break;
                                                            default:
                                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                                if (mimeType == null) {
                                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                                    break;
                                                                }
                                                                attributeAudio4.mime_type = mimeType;
                                                                break;
                                                        }
                                                    }
                                                }
                                                obj2 = -1;
                                                switch (obj2) {
                                                    case null:
                                                        attributeAudio4.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        attributeAudio4.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                                        if (mimeType == null) {
                                                            attributeAudio4.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                }
                                            }
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            if (attributeAudio4.mime_type.equals("image/gif")) {
                                                sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                                                if (sendNew3) {
                                                    fileName.file_name = "animation.gif";
                                                    attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                                                    sendNew3.recycle();
                                                }
                                            }
                                            if (attributeAudio4.mime_type.equals("image/webp")) {
                                            }
                                            str = name;
                                            if (attributeAudio4.thumb) {
                                                attributeAudio4.thumb = new TL_photoSizeEmpty();
                                                attributeAudio4.thumb.type = "s";
                                            }
                                        } else {
                                            tL_documentAttributeAudio = attributeAudio2;
                                            str = name;
                                        }
                                        if (caption != null) {
                                        }
                                        ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                        params = new HashMap();
                                        if (str3 != null) {
                                            params.put("originalPath", str3);
                                        }
                                        extension = extL;
                                        documentFinal = attributeAudio4;
                                        ext = path2;
                                        hashCode = currentAccount;
                                        anonymousClass16 = anonymousClass162;
                                        j = dialog_id;
                                        messageObject = reply_to_msg;
                                        arrayList = entities;
                                        hashMap = params;
                                        anonymousClass162 = /* anonymous class already generated */;
                                        AndroidUtilities.runOnUIThread(anonymousClass16);
                                        return true;
                                    }
                                }
                                extension = ext2;
                                attributeAudio = title;
                                duration = isVoice;
                                isVoice = z;
                                if (duration) {
                                    obj = 2;
                                    attributeAudio2 = tL_documentAttributeAudio2;
                                } else {
                                    attributeAudio3 = new TL_documentAttributeAudio();
                                    attributeAudio3.duration = duration;
                                    attributeAudio3.title = attributeAudio;
                                    attributeAudio3.performer = extension;
                                    if (attributeAudio3.title == 0) {
                                        attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    attributeAudio3.flags |= 1;
                                    if (attributeAudio3.performer == null) {
                                        attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                    }
                                    obj = 2;
                                    attributeAudio3.flags |= 2;
                                    if (isVoice) {
                                        attributeAudio3.voice = true;
                                    }
                                    attributeAudio2 = attributeAudio3;
                                }
                                sendNew2 = false;
                                if (str2 == null) {
                                    str5 = attributeAudio;
                                    str6 = extension;
                                    str3 = str2;
                                    sendNew3 = false;
                                } else {
                                    if (str2.endsWith("attheme")) {
                                        if (attributeAudio2 == null) {
                                            str5 = attributeAudio;
                                            str6 = extension;
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(str2);
                                            stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                            stringBuilder.append(f.length());
                                            str2 = stringBuilder.toString();
                                        } else {
                                            stringBuilder = new StringBuilder();
                                            stringBuilder.append(str2);
                                            str5 = attributeAudio;
                                            stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                            str6 = extension;
                                            stringBuilder.append(f.length());
                                            str2 = stringBuilder.toString();
                                        }
                                        str3 = str2;
                                    } else {
                                        sendNew2 = true;
                                        str3 = str2;
                                        str5 = attributeAudio;
                                    }
                                    sendNew3 = sendNew2;
                                }
                                attributeAudio4 = null;
                                if (hasExt) {
                                }
                                attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                                instance = MessagesStorage.getInstance(currentAccount);
                                stringBuilder2 = new StringBuilder();
                                stringBuilder2.append(path2);
                                stringBuilder2.append(f.length());
                                if (hasExt) {
                                }
                                attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                                if (attributeAudio4 != null) {
                                    tL_documentAttributeAudio = attributeAudio2;
                                    str = name;
                                } else {
                                    attributeAudio4 = new TL_document();
                                    attributeAudio4.id = 0;
                                    attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                                    fileName = new TL_documentAttributeFilename();
                                    fileName.file_name = name;
                                    attributeAudio4.attributes.add(fileName);
                                    attributeAudio4.size = (int) f.length();
                                    attributeAudio4.dc_id = 0;
                                    if (attributeAudio2 != null) {
                                        attributeAudio4.attributes.add(attributeAudio2);
                                    }
                                    if (ext.length() == 0) {
                                        hashCode = extL.hashCode();
                                        if (hashCode == 109967) {
                                            if (extL.equals("ogg")) {
                                                obj2 = obj;
                                                switch (obj2) {
                                                    case null:
                                                        attributeAudio4.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        attributeAudio4.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                                        if (mimeType == null) {
                                                            attributeAudio4.mime_type = mimeType;
                                                            break;
                                                        }
                                                        attributeAudio4.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (hashCode == 3145576) {
                                            if (extL.equals("flac")) {
                                                obj2 = 3;
                                                switch (obj2) {
                                                    case null:
                                                        attributeAudio4.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        attributeAudio4.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                                        if (mimeType == null) {
                                                            attributeAudio4.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                }
                                            }
                                        } else if (hashCode == 3418175) {
                                            if (extL.equals("opus")) {
                                                obj2 = 1;
                                                switch (obj2) {
                                                    case null:
                                                        attributeAudio4.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        attributeAudio4.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                                        if (mimeType == null) {
                                                            attributeAudio4.mime_type = mimeType;
                                                            break;
                                                        }
                                                        attributeAudio4.mime_type = "application/octet-stream";
                                                        break;
                                                }
                                            }
                                        } else if (hashCode == 3645340) {
                                            if (extL.equals("webp")) {
                                                obj2 = null;
                                                switch (obj2) {
                                                    case null:
                                                        attributeAudio4.mime_type = "image/webp";
                                                        break;
                                                    case 1:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                        break;
                                                    case 2:
                                                        attributeAudio4.mime_type = "audio/ogg";
                                                        break;
                                                    case 3:
                                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                        break;
                                                    default:
                                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                                        if (mimeType == null) {
                                                            attributeAudio4.mime_type = "application/octet-stream";
                                                            break;
                                                        }
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                }
                                            }
                                        }
                                        obj2 = -1;
                                        switch (obj2) {
                                            case null:
                                                attributeAudio4.mime_type = "image/webp";
                                                break;
                                            case 1:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                break;
                                            case 2:
                                                attributeAudio4.mime_type = "audio/ogg";
                                                break;
                                            case 3:
                                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                break;
                                            default:
                                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                                if (mimeType == null) {
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                                }
                                                attributeAudio4.mime_type = "application/octet-stream";
                                                break;
                                        }
                                    }
                                    attributeAudio4.mime_type = "application/octet-stream";
                                    if (attributeAudio4.mime_type.equals("image/gif")) {
                                    } else {
                                        sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                                        if (sendNew3) {
                                            fileName.file_name = "animation.gif";
                                            attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                                            sendNew3.recycle();
                                        }
                                    }
                                    if (attributeAudio4.mime_type.equals("image/webp")) {
                                    }
                                    str = name;
                                    if (attributeAudio4.thumb) {
                                        attributeAudio4.thumb = new TL_photoSizeEmpty();
                                        attributeAudio4.thumb.type = "s";
                                    }
                                }
                                if (caption != null) {
                                }
                                ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                                params = new HashMap();
                                if (str3 != null) {
                                    params.put("originalPath", str3);
                                }
                                extension = extL;
                                documentFinal = attributeAudio4;
                                ext = path2;
                                hashCode = currentAccount;
                                anonymousClass16 = anonymousClass162;
                                j = dialog_id;
                                messageObject = reply_to_msg;
                                arrayList = entities;
                                hashMap = params;
                                anonymousClass162 = /* anonymous class already generated */;
                                AndroidUtilities.runOnUIThread(anonymousClass16);
                                return true;
                            } catch (Throwable e42222) {
                                e3 = e42222;
                                if (mediaMetadataRetriever != null) {
                                    try {
                                        mediaMetadataRetriever.release();
                                    } catch (Throwable e422222) {
                                        FileLog.m3e(e422222);
                                    }
                                }
                                throw e3;
                            }
                        }
                        try {
                            title = mediaMetadataRetriever.extractMetadata(7);
                            isVoice = attributeAudio5;
                            ext2 = mediaMetadataRetriever.extractMetadata(2);
                        } catch (Throwable e4222222) {
                            e3 = e4222222;
                            isVoice = attributeAudio5;
                            FileLog.m3e(e3);
                            if (mediaMetadataRetriever != null) {
                                mediaMetadataRetriever.release();
                            }
                            extension = ext2;
                            attributeAudio = title;
                            duration = isVoice;
                            isVoice = z;
                            if (duration) {
                                attributeAudio3 = new TL_documentAttributeAudio();
                                attributeAudio3.duration = duration;
                                attributeAudio3.title = attributeAudio;
                                attributeAudio3.performer = extension;
                                if (attributeAudio3.title == 0) {
                                    attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                attributeAudio3.flags |= 1;
                                if (attributeAudio3.performer == null) {
                                    attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                obj = 2;
                                attributeAudio3.flags |= 2;
                                if (isVoice) {
                                    attributeAudio3.voice = true;
                                }
                                attributeAudio2 = attributeAudio3;
                            } else {
                                obj = 2;
                                attributeAudio2 = tL_documentAttributeAudio2;
                            }
                            sendNew2 = false;
                            if (str2 == null) {
                                if (str2.endsWith("attheme")) {
                                    sendNew2 = true;
                                    str3 = str2;
                                    str5 = attributeAudio;
                                } else {
                                    if (attributeAudio2 == null) {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str2);
                                        str5 = attributeAudio;
                                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                        str6 = extension;
                                        stringBuilder.append(f.length());
                                        str2 = stringBuilder.toString();
                                    } else {
                                        str5 = attributeAudio;
                                        str6 = extension;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str2);
                                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                        stringBuilder.append(f.length());
                                        str2 = stringBuilder.toString();
                                    }
                                    str3 = str2;
                                }
                                sendNew3 = sendNew2;
                            } else {
                                str5 = attributeAudio;
                                str6 = extension;
                                str3 = str2;
                                sendNew3 = false;
                            }
                            attributeAudio4 = null;
                            if (hasExt) {
                            }
                            attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                            instance = MessagesStorage.getInstance(currentAccount);
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append(path2);
                            stringBuilder2.append(f.length());
                            if (hasExt) {
                            }
                            attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                            if (attributeAudio4 != null) {
                                attributeAudio4 = new TL_document();
                                attributeAudio4.id = 0;
                                attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                                fileName = new TL_documentAttributeFilename();
                                fileName.file_name = name;
                                attributeAudio4.attributes.add(fileName);
                                attributeAudio4.size = (int) f.length();
                                attributeAudio4.dc_id = 0;
                                if (attributeAudio2 != null) {
                                    attributeAudio4.attributes.add(attributeAudio2);
                                }
                                if (ext.length() == 0) {
                                    hashCode = extL.hashCode();
                                    if (hashCode == 109967) {
                                        if (extL.equals("ogg")) {
                                            obj2 = obj;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                    } else if (hashCode == 3145576) {
                                        if (extL.equals("flac")) {
                                            obj2 = 3;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                            }
                                        }
                                    } else if (hashCode == 3418175) {
                                        if (extL.equals("opus")) {
                                            obj2 = 1;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                    } else if (hashCode == 3645340) {
                                        if (extL.equals("webp")) {
                                            obj2 = null;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                            }
                                        }
                                    }
                                    obj2 = -1;
                                    switch (obj2) {
                                        case null:
                                            attributeAudio4.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            attributeAudio4.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            mimeType = myMime.getMimeTypeFromExtension(extL);
                                            if (mimeType == null) {
                                                attributeAudio4.mime_type = "application/octet-stream";
                                                break;
                                            }
                                            attributeAudio4.mime_type = mimeType;
                                            break;
                                    }
                                }
                                attributeAudio4.mime_type = "application/octet-stream";
                                if (attributeAudio4.mime_type.equals("image/gif")) {
                                    sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                                    if (sendNew3) {
                                        fileName.file_name = "animation.gif";
                                        attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                                        sendNew3.recycle();
                                    }
                                }
                                if (attributeAudio4.mime_type.equals("image/webp")) {
                                }
                                str = name;
                                if (attributeAudio4.thumb) {
                                    attributeAudio4.thumb = new TL_photoSizeEmpty();
                                    attributeAudio4.thumb.type = "s";
                                }
                            } else {
                                tL_documentAttributeAudio = attributeAudio2;
                                str = name;
                            }
                            if (caption != null) {
                            }
                            ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                            params = new HashMap();
                            if (str3 != null) {
                                params.put("originalPath", str3);
                            }
                            extension = extL;
                            documentFinal = attributeAudio4;
                            ext = path2;
                            hashCode = currentAccount;
                            anonymousClass16 = anonymousClass162;
                            j = dialog_id;
                            messageObject = reply_to_msg;
                            arrayList = entities;
                            hashMap = params;
                            anonymousClass162 = /* anonymous class already generated */;
                            AndroidUtilities.runOnUIThread(anonymousClass16);
                            return true;
                        } catch (Throwable e42222222) {
                            e3 = e42222222;
                            TL_documentAttributeAudio tL_documentAttributeAudio3 = attributeAudio5;
                            if (mediaMetadataRetriever != null) {
                                mediaMetadataRetriever.release();
                            }
                            throw e3;
                        }
                    }
                    tL_documentAttributeAudio2 = null;
                    str4 = extension;
                    if (extL.equals("ogg") != null && MediaController.isOpusFile(f.getAbsolutePath()) == 1) {
                        z = true;
                    }
                    if (mediaMetadataRetriever != null) {
                        try {
                            mediaMetadataRetriever.release();
                        } catch (Exception e8) {
                            e42222222 = e8;
                            FileLog.m3e(e42222222);
                            extension = ext2;
                            attributeAudio = title;
                            duration = isVoice;
                            isVoice = z;
                            if (duration) {
                                obj = 2;
                                attributeAudio2 = tL_documentAttributeAudio2;
                            } else {
                                attributeAudio3 = new TL_documentAttributeAudio();
                                attributeAudio3.duration = duration;
                                attributeAudio3.title = attributeAudio;
                                attributeAudio3.performer = extension;
                                if (attributeAudio3.title == 0) {
                                    attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                attributeAudio3.flags |= 1;
                                if (attributeAudio3.performer == null) {
                                    attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                                }
                                obj = 2;
                                attributeAudio3.flags |= 2;
                                if (isVoice) {
                                    attributeAudio3.voice = true;
                                }
                                attributeAudio2 = attributeAudio3;
                            }
                            sendNew2 = false;
                            if (str2 == null) {
                                str5 = attributeAudio;
                                str6 = extension;
                                str3 = str2;
                                sendNew3 = false;
                            } else {
                                if (str2.endsWith("attheme")) {
                                    if (attributeAudio2 == null) {
                                        str5 = attributeAudio;
                                        str6 = extension;
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str2);
                                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                        stringBuilder.append(f.length());
                                        str2 = stringBuilder.toString();
                                    } else {
                                        stringBuilder = new StringBuilder();
                                        stringBuilder.append(str2);
                                        str5 = attributeAudio;
                                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                        str6 = extension;
                                        stringBuilder.append(f.length());
                                        str2 = stringBuilder.toString();
                                    }
                                    str3 = str2;
                                } else {
                                    sendNew2 = true;
                                    str3 = str2;
                                    str5 = attributeAudio;
                                }
                                sendNew3 = sendNew2;
                            }
                            attributeAudio4 = null;
                            if (hasExt) {
                            }
                            attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                            instance = MessagesStorage.getInstance(currentAccount);
                            stringBuilder2 = new StringBuilder();
                            stringBuilder2.append(path2);
                            stringBuilder2.append(f.length());
                            if (hasExt) {
                            }
                            attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                            if (attributeAudio4 != null) {
                                tL_documentAttributeAudio = attributeAudio2;
                                str = name;
                            } else {
                                attributeAudio4 = new TL_document();
                                attributeAudio4.id = 0;
                                attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                                fileName = new TL_documentAttributeFilename();
                                fileName.file_name = name;
                                attributeAudio4.attributes.add(fileName);
                                attributeAudio4.size = (int) f.length();
                                attributeAudio4.dc_id = 0;
                                if (attributeAudio2 != null) {
                                    attributeAudio4.attributes.add(attributeAudio2);
                                }
                                if (ext.length() == 0) {
                                    hashCode = extL.hashCode();
                                    if (hashCode == 109967) {
                                        if (extL.equals("ogg")) {
                                            obj2 = obj;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                    } else if (hashCode == 3145576) {
                                        if (extL.equals("flac")) {
                                            obj2 = 3;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                            }
                                        }
                                    } else if (hashCode == 3418175) {
                                        if (extL.equals("opus")) {
                                            obj2 = 1;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = mimeType;
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = "application/octet-stream";
                                                    break;
                                            }
                                        }
                                    } else if (hashCode == 3645340) {
                                        if (extL.equals("webp")) {
                                            obj2 = null;
                                            switch (obj2) {
                                                case null:
                                                    attributeAudio4.mime_type = "image/webp";
                                                    break;
                                                case 1:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                                    break;
                                                case 2:
                                                    attributeAudio4.mime_type = "audio/ogg";
                                                    break;
                                                case 3:
                                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                                    break;
                                                default:
                                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                                    if (mimeType == null) {
                                                        attributeAudio4.mime_type = "application/octet-stream";
                                                        break;
                                                    }
                                                    attributeAudio4.mime_type = mimeType;
                                                    break;
                                            }
                                        }
                                    }
                                    obj2 = -1;
                                    switch (obj2) {
                                        case null:
                                            attributeAudio4.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            attributeAudio4.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            mimeType = myMime.getMimeTypeFromExtension(extL);
                                            if (mimeType == null) {
                                                attributeAudio4.mime_type = mimeType;
                                                break;
                                            }
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            break;
                                    }
                                }
                                attributeAudio4.mime_type = "application/octet-stream";
                                if (attributeAudio4.mime_type.equals("image/gif")) {
                                } else {
                                    sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                                    if (sendNew3) {
                                        fileName.file_name = "animation.gif";
                                        attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                                        sendNew3.recycle();
                                    }
                                }
                                if (attributeAudio4.mime_type.equals("image/webp")) {
                                }
                                str = name;
                                if (attributeAudio4.thumb) {
                                    attributeAudio4.thumb = new TL_photoSizeEmpty();
                                    attributeAudio4.thumb.type = "s";
                                }
                            }
                            if (caption != null) {
                            }
                            ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                            params = new HashMap();
                            if (str3 != null) {
                                params.put("originalPath", str3);
                            }
                            extension = extL;
                            documentFinal = attributeAudio4;
                            ext = path2;
                            hashCode = currentAccount;
                            anonymousClass16 = anonymousClass162;
                            j = dialog_id;
                            messageObject = reply_to_msg;
                            arrayList = entities;
                            hashMap = params;
                            anonymousClass162 = /* anonymous class already generated */;
                            AndroidUtilities.runOnUIThread(anonymousClass16);
                            return true;
                        }
                    }
                } catch (Throwable e422222222) {
                    tL_documentAttributeAudio2 = null;
                    str4 = extension;
                    e3 = e422222222;
                    FileLog.m3e(e3);
                    if (mediaMetadataRetriever != null) {
                        mediaMetadataRetriever.release();
                    }
                    extension = ext2;
                    attributeAudio = title;
                    duration = isVoice;
                    isVoice = z;
                    if (duration) {
                        obj = 2;
                        attributeAudio2 = tL_documentAttributeAudio2;
                    } else {
                        attributeAudio3 = new TL_documentAttributeAudio();
                        attributeAudio3.duration = duration;
                        attributeAudio3.title = attributeAudio;
                        attributeAudio3.performer = extension;
                        if (attributeAudio3.title == 0) {
                            attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                        }
                        attributeAudio3.flags |= 1;
                        if (attributeAudio3.performer == null) {
                            attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                        }
                        obj = 2;
                        attributeAudio3.flags |= 2;
                        if (isVoice) {
                            attributeAudio3.voice = true;
                        }
                        attributeAudio2 = attributeAudio3;
                    }
                    sendNew2 = false;
                    if (str2 == null) {
                        str5 = attributeAudio;
                        str6 = extension;
                        str3 = str2;
                        sendNew3 = false;
                    } else {
                        if (str2.endsWith("attheme")) {
                            if (attributeAudio2 == null) {
                                str5 = attributeAudio;
                                str6 = extension;
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str2);
                                stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                                stringBuilder.append(f.length());
                                str2 = stringBuilder.toString();
                            } else {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(str2);
                                str5 = attributeAudio;
                                stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                                str6 = extension;
                                stringBuilder.append(f.length());
                                str2 = stringBuilder.toString();
                            }
                            str3 = str2;
                        } else {
                            sendNew2 = true;
                            str3 = str2;
                            str5 = attributeAudio;
                        }
                        sendNew3 = sendNew2;
                    }
                    attributeAudio4 = null;
                    if (hasExt) {
                    }
                    attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                    instance = MessagesStorage.getInstance(currentAccount);
                    stringBuilder2 = new StringBuilder();
                    stringBuilder2.append(path2);
                    stringBuilder2.append(f.length());
                    if (hasExt) {
                    }
                    attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                    if (attributeAudio4 != null) {
                        tL_documentAttributeAudio = attributeAudio2;
                        str = name;
                    } else {
                        attributeAudio4 = new TL_document();
                        attributeAudio4.id = 0;
                        attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                        fileName = new TL_documentAttributeFilename();
                        fileName.file_name = name;
                        attributeAudio4.attributes.add(fileName);
                        attributeAudio4.size = (int) f.length();
                        attributeAudio4.dc_id = 0;
                        if (attributeAudio2 != null) {
                            attributeAudio4.attributes.add(attributeAudio2);
                        }
                        if (ext.length() == 0) {
                            hashCode = extL.hashCode();
                            if (hashCode == 109967) {
                                if (extL.equals("ogg")) {
                                    obj2 = obj;
                                    switch (obj2) {
                                        case null:
                                            attributeAudio4.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            attributeAudio4.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            mimeType = myMime.getMimeTypeFromExtension(extL);
                                            if (mimeType == null) {
                                                attributeAudio4.mime_type = mimeType;
                                                break;
                                            }
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            break;
                                    }
                                }
                            } else if (hashCode == 3145576) {
                                if (extL.equals("flac")) {
                                    obj2 = 3;
                                    switch (obj2) {
                                        case null:
                                            attributeAudio4.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            attributeAudio4.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            mimeType = myMime.getMimeTypeFromExtension(extL);
                                            if (mimeType == null) {
                                                attributeAudio4.mime_type = "application/octet-stream";
                                                break;
                                            }
                                            attributeAudio4.mime_type = mimeType;
                                            break;
                                    }
                                }
                            } else if (hashCode == 3418175) {
                                if (extL.equals("opus")) {
                                    obj2 = 1;
                                    switch (obj2) {
                                        case null:
                                            attributeAudio4.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            attributeAudio4.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            mimeType = myMime.getMimeTypeFromExtension(extL);
                                            if (mimeType == null) {
                                                attributeAudio4.mime_type = mimeType;
                                                break;
                                            }
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            break;
                                    }
                                }
                            } else if (hashCode == 3645340) {
                                if (extL.equals("webp")) {
                                    obj2 = null;
                                    switch (obj2) {
                                        case null:
                                            attributeAudio4.mime_type = "image/webp";
                                            break;
                                        case 1:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                            break;
                                        case 2:
                                            attributeAudio4.mime_type = "audio/ogg";
                                            break;
                                        case 3:
                                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                            break;
                                        default:
                                            mimeType = myMime.getMimeTypeFromExtension(extL);
                                            if (mimeType == null) {
                                                attributeAudio4.mime_type = "application/octet-stream";
                                                break;
                                            }
                                            attributeAudio4.mime_type = mimeType;
                                            break;
                                    }
                                }
                            }
                            obj2 = -1;
                            switch (obj2) {
                                case null:
                                    attributeAudio4.mime_type = "image/webp";
                                    break;
                                case 1:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                    break;
                                case 2:
                                    attributeAudio4.mime_type = "audio/ogg";
                                    break;
                                case 3:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                    break;
                                default:
                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                    if (mimeType == null) {
                                        attributeAudio4.mime_type = mimeType;
                                        break;
                                    }
                                    attributeAudio4.mime_type = "application/octet-stream";
                                    break;
                            }
                        }
                        attributeAudio4.mime_type = "application/octet-stream";
                        if (attributeAudio4.mime_type.equals("image/gif")) {
                        } else {
                            sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                            if (sendNew3) {
                                fileName.file_name = "animation.gif";
                                attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                                sendNew3.recycle();
                            }
                        }
                        if (attributeAudio4.mime_type.equals("image/webp")) {
                        }
                        str = name;
                        if (attributeAudio4.thumb) {
                            attributeAudio4.thumb = new TL_photoSizeEmpty();
                            attributeAudio4.thumb.type = "s";
                        }
                    }
                    if (caption != null) {
                    }
                    ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                    params = new HashMap();
                    if (str3 != null) {
                        params.put("originalPath", str3);
                    }
                    extension = extL;
                    documentFinal = attributeAudio4;
                    ext = path2;
                    hashCode = currentAccount;
                    anonymousClass16 = anonymousClass162;
                    j = dialog_id;
                    messageObject = reply_to_msg;
                    arrayList = entities;
                    hashMap = params;
                    anonymousClass162 = /* anonymous class already generated */;
                    AndroidUtilities.runOnUIThread(anonymousClass16);
                    return true;
                } catch (Throwable eNUM) {
                    tL_documentAttributeAudio2 = null;
                    str4 = extension;
                    e3 = eNUM;
                    if (mediaMetadataRetriever != null) {
                        mediaMetadataRetriever.release();
                    }
                    throw e3;
                }
                extension = ext2;
                attributeAudio = title;
                duration = isVoice;
                isVoice = z;
                if (duration) {
                    obj = 2;
                    attributeAudio2 = tL_documentAttributeAudio2;
                } else {
                    attributeAudio3 = new TL_documentAttributeAudio();
                    attributeAudio3.duration = duration;
                    attributeAudio3.title = attributeAudio;
                    attributeAudio3.performer = extension;
                    if (attributeAudio3.title == 0) {
                        attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    attributeAudio3.flags |= 1;
                    if (attributeAudio3.performer == null) {
                        attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                    }
                    obj = 2;
                    attributeAudio3.flags |= 2;
                    if (isVoice) {
                        attributeAudio3.voice = true;
                    }
                    attributeAudio2 = attributeAudio3;
                }
                sendNew2 = false;
                if (str2 == null) {
                    str5 = attributeAudio;
                    str6 = extension;
                    str3 = str2;
                    sendNew3 = false;
                } else {
                    if (str2.endsWith("attheme")) {
                        if (attributeAudio2 == null) {
                            str5 = attributeAudio;
                            str6 = extension;
                            stringBuilder = new StringBuilder();
                            stringBuilder.append(str2);
                            stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                            stringBuilder.append(f.length());
                            str2 = stringBuilder.toString();
                        } else {
                            stringBuilder = new StringBuilder();
                            stringBuilder.append(str2);
                            str5 = attributeAudio;
                            stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                            str6 = extension;
                            stringBuilder.append(f.length());
                            str2 = stringBuilder.toString();
                        }
                        str3 = str2;
                    } else {
                        sendNew2 = true;
                        str3 = str2;
                        str5 = attributeAudio;
                    }
                    sendNew3 = sendNew2;
                }
                attributeAudio4 = null;
                if (hasExt) {
                }
                attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
                instance = MessagesStorage.getInstance(currentAccount);
                stringBuilder2 = new StringBuilder();
                stringBuilder2.append(path2);
                stringBuilder2.append(f.length());
                if (hasExt) {
                }
                attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
                if (attributeAudio4 != null) {
                    tL_documentAttributeAudio = attributeAudio2;
                    str = name;
                } else {
                    attributeAudio4 = new TL_document();
                    attributeAudio4.id = 0;
                    attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                    fileName = new TL_documentAttributeFilename();
                    fileName.file_name = name;
                    attributeAudio4.attributes.add(fileName);
                    attributeAudio4.size = (int) f.length();
                    attributeAudio4.dc_id = 0;
                    if (attributeAudio2 != null) {
                        attributeAudio4.attributes.add(attributeAudio2);
                    }
                    if (ext.length() == 0) {
                        hashCode = extL.hashCode();
                        if (hashCode == 109967) {
                            if (extL.equals("ogg")) {
                                obj2 = obj;
                                switch (obj2) {
                                    case null:
                                        attributeAudio4.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        attributeAudio4.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                        if (mimeType == null) {
                                            attributeAudio4.mime_type = mimeType;
                                            break;
                                        }
                                        attributeAudio4.mime_type = "application/octet-stream";
                                        break;
                                }
                            }
                        } else if (hashCode == 3145576) {
                            if (extL.equals("flac")) {
                                obj2 = 3;
                                switch (obj2) {
                                    case null:
                                        attributeAudio4.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        attributeAudio4.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                        if (mimeType == null) {
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            break;
                                        }
                                        attributeAudio4.mime_type = mimeType;
                                        break;
                                }
                            }
                        } else if (hashCode == 3418175) {
                            if (extL.equals("opus")) {
                                obj2 = 1;
                                switch (obj2) {
                                    case null:
                                        attributeAudio4.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        attributeAudio4.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                        if (mimeType == null) {
                                            attributeAudio4.mime_type = mimeType;
                                            break;
                                        }
                                        attributeAudio4.mime_type = "application/octet-stream";
                                        break;
                                }
                            }
                        } else if (hashCode == 3645340) {
                            if (extL.equals("webp")) {
                                obj2 = null;
                                switch (obj2) {
                                    case null:
                                        attributeAudio4.mime_type = "image/webp";
                                        break;
                                    case 1:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                        break;
                                    case 2:
                                        attributeAudio4.mime_type = "audio/ogg";
                                        break;
                                    case 3:
                                        attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                        break;
                                    default:
                                        mimeType = myMime.getMimeTypeFromExtension(extL);
                                        if (mimeType == null) {
                                            attributeAudio4.mime_type = "application/octet-stream";
                                            break;
                                        }
                                        attributeAudio4.mime_type = mimeType;
                                        break;
                                }
                            }
                        }
                        obj2 = -1;
                        switch (obj2) {
                            case null:
                                attributeAudio4.mime_type = "image/webp";
                                break;
                            case 1:
                                attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                break;
                            case 2:
                                attributeAudio4.mime_type = "audio/ogg";
                                break;
                            case 3:
                                attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                break;
                            default:
                                mimeType = myMime.getMimeTypeFromExtension(extL);
                                if (mimeType == null) {
                                    attributeAudio4.mime_type = mimeType;
                                    break;
                                }
                                attributeAudio4.mime_type = "application/octet-stream";
                                break;
                        }
                    }
                    attributeAudio4.mime_type = "application/octet-stream";
                    if (attributeAudio4.mime_type.equals("image/gif")) {
                    } else {
                        sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                        if (sendNew3) {
                            fileName.file_name = "animation.gif";
                            attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                            sendNew3.recycle();
                        }
                    }
                    if (attributeAudio4.mime_type.equals("image/webp")) {
                    }
                    str = name;
                    if (attributeAudio4.thumb) {
                        attributeAudio4.thumb = new TL_photoSizeEmpty();
                        attributeAudio4.thumb.type = "s";
                    }
                }
                if (caption != null) {
                }
                ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                params = new HashMap();
                if (str3 != null) {
                    params.put("originalPath", str3);
                }
                extension = extL;
                documentFinal = attributeAudio4;
                ext = path2;
                hashCode = currentAccount;
                anonymousClass16 = anonymousClass162;
                j = dialog_id;
                messageObject = reply_to_msg;
                arrayList = entities;
                hashMap = params;
                anonymousClass162 = /* anonymous class already generated */;
                AndroidUtilities.runOnUIThread(anonymousClass16);
                return true;
            }
            int duration2 = AudioInfo.getAudioInfo(f);
            if (!(duration2 == 0 || duration2.getDuration() == 0)) {
                ext2 = duration2.getArtist();
                title = duration2.getTitle();
            }
            extension = ext2;
            attributeAudio = title;
            duration = isVoice;
            isVoice = z;
            if (duration) {
                attributeAudio3 = new TL_documentAttributeAudio();
                attributeAudio3.duration = duration;
                attributeAudio3.title = attributeAudio;
                attributeAudio3.performer = extension;
                if (attributeAudio3.title == 0) {
                    attributeAudio3.title = TtmlNode.ANONYMOUS_REGION_ID;
                }
                attributeAudio3.flags |= 1;
                if (attributeAudio3.performer == null) {
                    attributeAudio3.performer = TtmlNode.ANONYMOUS_REGION_ID;
                }
                obj = 2;
                attributeAudio3.flags |= 2;
                if (isVoice) {
                    attributeAudio3.voice = true;
                }
                attributeAudio2 = attributeAudio3;
            } else {
                obj = 2;
                attributeAudio2 = tL_documentAttributeAudio2;
            }
            sendNew2 = false;
            if (str2 == null) {
                if (str2.endsWith("attheme")) {
                    sendNew2 = true;
                    str3 = str2;
                    str5 = attributeAudio;
                } else {
                    if (attributeAudio2 == null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(str2);
                        str5 = attributeAudio;
                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                        str6 = extension;
                        stringBuilder.append(f.length());
                        str2 = stringBuilder.toString();
                    } else {
                        str5 = attributeAudio;
                        str6 = extension;
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(str2);
                        stringBuilder.append(TtmlNode.ANONYMOUS_REGION_ID);
                        stringBuilder.append(f.length());
                        str2 = stringBuilder.toString();
                    }
                    str3 = str2;
                }
                sendNew3 = sendNew2;
            } else {
                str5 = attributeAudio;
                str6 = extension;
                str3 = str2;
                sendNew3 = false;
            }
            attributeAudio4 = null;
            if (hasExt) {
            }
            attributeAudio4 = (TL_document) MessagesStorage.getInstance(currentAccount).getSentFile(str3, hasExt ? 1 : 4);
            instance = MessagesStorage.getInstance(currentAccount);
            stringBuilder2 = new StringBuilder();
            stringBuilder2.append(path2);
            stringBuilder2.append(f.length());
            if (hasExt) {
            }
            attributeAudio4 = (TL_document) instance.getSentFile(stringBuilder2.toString(), hasExt ? 1 : 4);
            if (attributeAudio4 != null) {
                attributeAudio4 = new TL_document();
                attributeAudio4.id = 0;
                attributeAudio4.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                fileName = new TL_documentAttributeFilename();
                fileName.file_name = name;
                attributeAudio4.attributes.add(fileName);
                attributeAudio4.size = (int) f.length();
                attributeAudio4.dc_id = 0;
                if (attributeAudio2 != null) {
                    attributeAudio4.attributes.add(attributeAudio2);
                }
                if (ext.length() == 0) {
                    hashCode = extL.hashCode();
                    if (hashCode == 109967) {
                        if (extL.equals("ogg")) {
                            obj2 = obj;
                            switch (obj2) {
                                case null:
                                    attributeAudio4.mime_type = "image/webp";
                                    break;
                                case 1:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                    break;
                                case 2:
                                    attributeAudio4.mime_type = "audio/ogg";
                                    break;
                                case 3:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                    break;
                                default:
                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                    if (mimeType == null) {
                                        attributeAudio4.mime_type = mimeType;
                                        break;
                                    }
                                    attributeAudio4.mime_type = "application/octet-stream";
                                    break;
                            }
                        }
                    } else if (hashCode == 3145576) {
                        if (extL.equals("flac")) {
                            obj2 = 3;
                            switch (obj2) {
                                case null:
                                    attributeAudio4.mime_type = "image/webp";
                                    break;
                                case 1:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                    break;
                                case 2:
                                    attributeAudio4.mime_type = "audio/ogg";
                                    break;
                                case 3:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                    break;
                                default:
                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                    if (mimeType == null) {
                                        attributeAudio4.mime_type = "application/octet-stream";
                                        break;
                                    }
                                    attributeAudio4.mime_type = mimeType;
                                    break;
                            }
                        }
                    } else if (hashCode == 3418175) {
                        if (extL.equals("opus")) {
                            obj2 = 1;
                            switch (obj2) {
                                case null:
                                    attributeAudio4.mime_type = "image/webp";
                                    break;
                                case 1:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                    break;
                                case 2:
                                    attributeAudio4.mime_type = "audio/ogg";
                                    break;
                                case 3:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                    break;
                                default:
                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                    if (mimeType == null) {
                                        attributeAudio4.mime_type = mimeType;
                                        break;
                                    }
                                    attributeAudio4.mime_type = "application/octet-stream";
                                    break;
                            }
                        }
                    } else if (hashCode == 3645340) {
                        if (extL.equals("webp")) {
                            obj2 = null;
                            switch (obj2) {
                                case null:
                                    attributeAudio4.mime_type = "image/webp";
                                    break;
                                case 1:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                                    break;
                                case 2:
                                    attributeAudio4.mime_type = "audio/ogg";
                                    break;
                                case 3:
                                    attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                                    break;
                                default:
                                    mimeType = myMime.getMimeTypeFromExtension(extL);
                                    if (mimeType == null) {
                                        attributeAudio4.mime_type = "application/octet-stream";
                                        break;
                                    }
                                    attributeAudio4.mime_type = mimeType;
                                    break;
                            }
                        }
                    }
                    obj2 = -1;
                    switch (obj2) {
                        case null:
                            attributeAudio4.mime_type = "image/webp";
                            break;
                        case 1:
                            attributeAudio4.mime_type = MimeTypes.AUDIO_OPUS;
                            break;
                        case 2:
                            attributeAudio4.mime_type = "audio/ogg";
                            break;
                        case 3:
                            attributeAudio4.mime_type = MimeTypes.AUDIO_FLAC;
                            break;
                        default:
                            mimeType = myMime.getMimeTypeFromExtension(extL);
                            if (mimeType == null) {
                                attributeAudio4.mime_type = "application/octet-stream";
                                break;
                            }
                            attributeAudio4.mime_type = mimeType;
                            break;
                    }
                }
                attributeAudio4.mime_type = "application/octet-stream";
                if (attributeAudio4.mime_type.equals("image/gif")) {
                    sendNew3 = ImageLoader.loadBitmap(f.getAbsolutePath(), false, 90.0f, 90.0f, true);
                    if (sendNew3) {
                        fileName.file_name = "animation.gif";
                        attributeAudio4.thumb = ImageLoader.scaleAndSaveImage(sendNew3, 90.0f, 90.0f, 55, hasExt);
                        sendNew3.recycle();
                    }
                }
                if (attributeAudio4.mime_type.equals("image/webp")) {
                }
                str = name;
                if (attributeAudio4.thumb) {
                    attributeAudio4.thumb = new TL_photoSizeEmpty();
                    attributeAudio4.thumb.type = "s";
                }
            } else {
                tL_documentAttributeAudio = attributeAudio2;
                str = name;
            }
            if (caption != null) {
            }
            ext2 = caption != null ? caption.toString() : TtmlNode.ANONYMOUS_REGION_ID;
            params = new HashMap();
            if (str3 != null) {
                params.put("originalPath", str3);
            }
            extension = extL;
            documentFinal = attributeAudio4;
            ext = path2;
            hashCode = currentAccount;
            anonymousClass16 = anonymousClass162;
            j = dialog_id;
            messageObject = reply_to_msg;
            arrayList = entities;
            hashMap = params;
            anonymousClass162 = /* anonymous class already generated */;
            AndroidUtilities.runOnUIThread(anonymousClass16);
            return true;
        }
        return false;
    }

    public static void prepareSendingDocument(String path, String originalPath, Uri uri, String mine, long dialog_id, MessageObject reply_to_msg, InputContentInfoCompat inputContent) {
        String str = path;
        String str2 = originalPath;
        Uri uri2 = uri;
        if ((str != null && str2 != null) || uri2 != null) {
            ArrayList<String> paths = new ArrayList();
            ArrayList<String> originalPaths = new ArrayList();
            ArrayList<Uri> uris = null;
            if (uri2 != null) {
                uris = new ArrayList();
                uris.add(uri2);
            }
            ArrayList<Uri> uris2 = uris;
            if (str != null) {
                paths.add(str);
                originalPaths.add(str2);
            }
            prepareSendingDocuments(paths, originalPaths, uris2, mine, dialog_id, reply_to_msg, inputContent);
        }
    }

    public static void prepareSendingAudioDocuments(ArrayList<MessageObject> messageObjects, long dialog_id, MessageObject reply_to_msg) {
        final ArrayList<MessageObject> arrayList = messageObjects;
        final long j = dialog_id;
        final int i = UserConfig.selectedAccount;
        final MessageObject messageObject = reply_to_msg;
        new Thread(new Runnable() {
            public void run() {
                int size = arrayList.size();
                for (int a = 0; a < size; a++) {
                    final MessageObject messageObject = (MessageObject) arrayList.get(a);
                    String originalPath = messageObject.messageOwner.attachPath;
                    File f = new File(originalPath);
                    int i = 1;
                    boolean isEncrypted = ((int) j) == 0;
                    if (originalPath != null) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append(originalPath);
                        stringBuilder.append(MimeTypes.BASE_TYPE_AUDIO);
                        stringBuilder.append(f.length());
                        originalPath = stringBuilder.toString();
                    }
                    TL_document document = null;
                    if (!isEncrypted) {
                        MessagesStorage instance = MessagesStorage.getInstance(i);
                        if (isEncrypted) {
                            i = 4;
                        }
                        document = (TL_document) instance.getSentFile(originalPath, i);
                    }
                    if (document == null) {
                        document = (TL_document) messageObject.messageOwner.media.document;
                    }
                    if (isEncrypted) {
                        if (MessagesController.getInstance(i).getEncryptedChat(Integer.valueOf((int) (j >> 32))) == null) {
                            return;
                        }
                    }
                    final HashMap<String, String> params = new HashMap();
                    if (originalPath != null) {
                        params.put("originalPath", originalPath);
                    }
                    final TL_document documentFinal = document;
                    AndroidUtilities.runOnUIThread(new Runnable() {
                        public void run() {
                            SendMessagesHelper.getInstance(i).sendMessage(documentFinal, null, messageObject.messageOwner.attachPath, j, messageObject, null, null, null, params, 0);
                        }
                    });
                }
            }
        }).start();
    }

    public static void prepareSendingDocuments(ArrayList<String> paths, ArrayList<String> originalPaths, ArrayList<Uri> uris, String mime, long dialog_id, MessageObject reply_to_msg, InputContentInfoCompat inputContent) {
        if (!(paths == null && originalPaths == null && uris == null) && (paths == null || originalPaths == null || paths.size() == originalPaths.size())) {
            final ArrayList<String> arrayList = paths;
            final int i = UserConfig.selectedAccount;
            final ArrayList<String> arrayList2 = originalPaths;
            final String str = mime;
            final long j = dialog_id;
            final MessageObject messageObject = reply_to_msg;
            final ArrayList<Uri> arrayList3 = uris;
            final InputContentInfoCompat inputContentInfoCompat = inputContent;
            new Thread(new Runnable() {

                /* renamed from: org.telegram.messenger.SendMessagesHelper$18$1 */
                class C04861 implements Runnable {
                    C04861() {
                    }

                    public void run() {
                        try {
                            Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("UnsupportedAttachment", R.string.UnsupportedAttachment), 0).show();
                        } catch (Throwable e) {
                            FileLog.m3e(e);
                        }
                    }
                }

                public void run() {
                    boolean z = false;
                    int a = 0;
                    if (arrayList != null) {
                        boolean error = false;
                        for (int a2 = 0; a2 < arrayList.size(); a2++) {
                            if (!SendMessagesHelper.prepareSendingDocumentInternal(i, (String) arrayList.get(a2), (String) arrayList2.get(a2), null, str, j, messageObject, null, null)) {
                                error = true;
                            }
                        }
                        z = error;
                    }
                    if (arrayList3 != null) {
                        while (true) {
                            int a3 = a;
                            if (a3 >= arrayList3.size()) {
                                break;
                            }
                            if (!SendMessagesHelper.prepareSendingDocumentInternal(i, null, null, (Uri) arrayList3.get(a3), str, j, messageObject, null, null)) {
                                z = true;
                            }
                            a = a3 + 1;
                        }
                    }
                    if (inputContentInfoCompat != null) {
                        inputContentInfoCompat.releasePermission();
                    }
                    if (z) {
                        AndroidUtilities.runOnUIThread(new C04861());
                    }
                }
            }).start();
        }
    }

    public static void prepareSendingPhoto(String imageFilePath, Uri imageUri, long dialog_id, MessageObject reply_to_msg, CharSequence caption, ArrayList<MessageEntity> entities, ArrayList<InputDocument> stickers, InputContentInfoCompat inputContent, int ttl) {
        ArrayList<InputDocument> arrayList = stickers;
        SendingMediaInfo info = new SendingMediaInfo();
        info.path = imageFilePath;
        info.uri = imageUri;
        if (caption != null) {
            info.caption = caption.toString();
        }
        info.entities = entities;
        info.ttl = ttl;
        if (!(arrayList == null || stickers.isEmpty())) {
            info.masks = new ArrayList(arrayList);
        }
        ArrayList<SendingMediaInfo> infos = new ArrayList();
        infos.add(info);
        prepareSendingMedia(infos, dialog_id, reply_to_msg, inputContent, false, false);
    }

    public static void prepareSendingBotContextResult(BotInlineResult result, HashMap<String, String> params, long dialog_id, MessageObject reply_to_msg) {
        BotInlineResult botInlineResult = result;
        if (botInlineResult != null) {
            int currentAccount = UserConfig.selectedAccount;
            long j;
            if (botInlineResult.send_message instanceof TL_botInlineMessageMediaAuto) {
                final BotInlineResult botInlineResult2 = botInlineResult;
                final long j2 = dialog_id;
                final int i = currentAccount;
                final HashMap<String, String> hashMap = params;
                final MessageObject messageObject = reply_to_msg;
                new Thread(new Runnable() {
                    /* JADX WARNING: inconsistent code. */
                    /* Code decompiled incorrectly, please refer to instructions dump. */
                    public void run() {
                        String finalPath = null;
                        TL_document document = null;
                        TL_photo photo = null;
                        TL_game game = null;
                        if (botInlineResult2 instanceof TL_botInlineMediaResult) {
                            if (botInlineResult2.type.equals("game")) {
                                if (((int) j2) != 0) {
                                    game = new TL_game();
                                    game.title = botInlineResult2.title;
                                    game.description = botInlineResult2.description;
                                    game.short_name = botInlineResult2.id;
                                    game.photo = botInlineResult2.photo;
                                    if (botInlineResult2.document instanceof TL_document) {
                                        game.document = botInlineResult2.document;
                                        game.flags |= 1;
                                    }
                                } else {
                                    return;
                                }
                            } else if (botInlineResult2.document != null) {
                                if (botInlineResult2.document instanceof TL_document) {
                                    document = (TL_document) botInlineResult2.document;
                                }
                            } else if (botInlineResult2.photo != null && (botInlineResult2.photo instanceof TL_photo)) {
                                photo = (TL_photo) botInlineResult2.photo;
                            }
                        } else if (botInlineResult2.content != null) {
                            File directory = FileLoader.getDirectory(4);
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append(Utilities.MD5(botInlineResult2.content.url));
                            stringBuilder.append(".");
                            stringBuilder.append(ImageLoader.getHttpUrlExtension(botInlineResult2.content.url, "file"));
                            File f = new File(directory, stringBuilder.toString());
                            if (f.exists()) {
                                finalPath = f.getAbsolutePath();
                            } else {
                                finalPath = botInlineResult2.content.url;
                            }
                            String str = botInlineResult2.type;
                            int i;
                            switch (str.hashCode()) {
                                case -1890252483:
                                    if (str.equals("sticker")) {
                                        i = 4;
                                        break;
                                    }
                                case 102340:
                                    if (str.equals("gif")) {
                                        i = 5;
                                        break;
                                    }
                                case 3143036:
                                    if (str.equals("file")) {
                                        i = 2;
                                        break;
                                    }
                                case 93166550:
                                    if (str.equals(MimeTypes.BASE_TYPE_AUDIO)) {
                                        i = 0;
                                        break;
                                    }
                                case 106642994:
                                    if (str.equals("photo")) {
                                        i = 6;
                                        break;
                                    }
                                case 112202875:
                                    if (str.equals(MimeTypes.BASE_TYPE_VIDEO)) {
                                        i = 3;
                                        break;
                                    }
                                case 112386354:
                                    if (str.equals("voice")) {
                                        i = 1;
                                        break;
                                    }
                                default:
                            }
                        }
                        TL_photo photo2 = photo;
                        TL_game game2 = game;
                        final String finalPathFinal = finalPath;
                        final TL_document finalDocument = document;
                        final TL_photo finalPhoto = photo2;
                        final TL_game finalGame = game2;
                        if (!(hashMap == null || botInlineResult2.content == null)) {
                            hashMap.put("originalPath", botInlineResult2.content.url);
                        }
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public void run() {
                                if (finalDocument != null) {
                                    SendMessagesHelper.getInstance(i).sendMessage(finalDocument, null, finalPathFinal, j2, messageObject, botInlineResult2.send_message.message, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, hashMap, 0);
                                } else if (finalPhoto != null) {
                                    SendMessagesHelper.getInstance(i).sendMessage(finalPhoto, botInlineResult2.content != null ? botInlineResult2.content.url : null, j2, messageObject, botInlineResult2.send_message.message, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, hashMap, 0);
                                } else if (finalGame != null) {
                                    SendMessagesHelper.getInstance(i).sendMessage(finalGame, j2, botInlineResult2.send_message.reply_markup, hashMap);
                                }
                            }
                        });
                        if (document.file_name == null) {
                            document.file_name = "file";
                        }
                        if (document.mime_type == null) {
                            document.mime_type = "application/octet-stream";
                        }
                        if (document.thumb == null) {
                            document.thumb = new TL_photoSize();
                            int[] wh = MessageObject.getInlineResultWidthAndHeight(botInlineResult2);
                            document.thumb.f43w = wh[0];
                            document.thumb.f42h = wh[1];
                            document.thumb.size = 0;
                            document.thumb.location = new TL_fileLocationUnavailable();
                            document.thumb.type = "x";
                        }
                        TL_photo photo22 = photo;
                        TL_game game22 = game;
                        final String finalPathFinal2 = finalPath;
                        final TL_document finalDocument2 = document;
                        final TL_photo finalPhoto2 = photo22;
                        final TL_game finalGame2 = game22;
                        hashMap.put("originalPath", botInlineResult2.content.url);
                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                    }
                }).run();
                j = dialog_id;
            } else if (botInlineResult.send_message instanceof TL_botInlineMessageText) {
                WebPage webPage = null;
                j = dialog_id;
                if (((int) j) == 0) {
                    for (int a = 0; a < botInlineResult.send_message.entities.size(); a++) {
                        MessageEntity entity = (MessageEntity) botInlineResult.send_message.entities.get(a);
                        if (entity instanceof TL_messageEntityUrl) {
                            webPage = new TL_webPagePending();
                            webPage.url = botInlineResult.send_message.message.substring(entity.offset, entity.offset + entity.length);
                            break;
                        }
                    }
                }
                getInstance(currentAccount).sendMessage(botInlineResult.send_message.message, j, reply_to_msg, webPage, botInlineResult.send_message.no_webpage ^ 1, botInlineResult.send_message.entities, botInlineResult.send_message.reply_markup, params);
            } else {
                j = dialog_id;
                MessageMedia venue;
                if (botInlineResult.send_message instanceof TL_botInlineMessageMediaVenue) {
                    venue = new TL_messageMediaVenue();
                    venue.geo = botInlineResult.send_message.geo;
                    venue.address = botInlineResult.send_message.address;
                    venue.title = botInlineResult.send_message.title;
                    venue.provider = botInlineResult.send_message.provider;
                    venue.venue_id = botInlineResult.send_message.venue_id;
                    venue.venue_type = TtmlNode.ANONYMOUS_REGION_ID;
                    getInstance(currentAccount).sendMessage(venue, j, reply_to_msg, botInlineResult.send_message.reply_markup, (HashMap) params);
                } else if (botInlineResult.send_message instanceof TL_botInlineMessageMediaGeo) {
                    if (botInlineResult.send_message.period != 0) {
                        venue = new TL_messageMediaGeoLive();
                        venue.period = botInlineResult.send_message.period;
                        venue.geo = botInlineResult.send_message.geo;
                        getInstance(currentAccount).sendMessage(venue, j, reply_to_msg, botInlineResult.send_message.reply_markup, (HashMap) params);
                    } else {
                        venue = new TL_messageMediaGeo();
                        venue.geo = botInlineResult.send_message.geo;
                        getInstance(currentAccount).sendMessage(venue, j, reply_to_msg, botInlineResult.send_message.reply_markup, (HashMap) params);
                    }
                } else if (botInlineResult.send_message instanceof TL_botInlineMessageMediaContact) {
                    User user = new TL_user();
                    user.phone = botInlineResult.send_message.phone_number;
                    user.first_name = botInlineResult.send_message.first_name;
                    user.last_name = botInlineResult.send_message.last_name;
                    getInstance(currentAccount).sendMessage(user, j, reply_to_msg, botInlineResult.send_message.reply_markup, (HashMap) params);
                }
            }
        }
    }

    private static String getTrimmedString(String src) {
        String result = src.trim();
        if (result.length() == 0) {
            return result;
        }
        while (src.startsWith("\n")) {
            src = src.substring(1);
        }
        while (src.endsWith("\n")) {
            src = src.substring(0, src.length() - 1);
        }
        return src;
    }

    public static void prepareSendingText(final String text, final long dialog_id) {
        final int currentAccount = UserConfig.selectedAccount;
        MessagesStorage.getInstance(currentAccount).getStorageQueue().postRunnable(new Runnable() {

            /* renamed from: org.telegram.messenger.SendMessagesHelper$20$1 */
            class C04891 implements Runnable {

                /* renamed from: org.telegram.messenger.SendMessagesHelper$20$1$1 */
                class C04881 implements Runnable {
                    C04881() {
                    }

                    public void run() {
                        String textFinal = SendMessagesHelper.getTrimmedString(text);
                        if (textFinal.length() != 0) {
                            int count = (int) Math.ceil((double) (((float) textFinal.length()) / 4096.0f));
                            for (int a = 0; a < count; a++) {
                                SendMessagesHelper.getInstance(currentAccount).sendMessage(textFinal.substring(a * 4096, Math.min((a + 1) * 4096, textFinal.length())), dialog_id, null, null, true, null, null, null);
                            }
                        }
                    }
                }

                C04891() {
                }

                public void run() {
                    AndroidUtilities.runOnUIThread(new C04881());
                }
            }

            public void run() {
                Utilities.stageQueue.postRunnable(new C04891());
            }
        });
    }

    public static void prepareSendingMedia(ArrayList<SendingMediaInfo> media, long dialog_id, MessageObject reply_to_msg, InputContentInfoCompat inputContent, boolean forceDocument, boolean groupPhotos) {
        if (!media.isEmpty()) {
            final ArrayList<SendingMediaInfo> arrayList = media;
            final long j = dialog_id;
            final int i = UserConfig.selectedAccount;
            final boolean z = forceDocument;
            final boolean z2 = groupPhotos;
            final MessageObject messageObject = reply_to_msg;
            final InputContentInfoCompat inputContentInfoCompat = inputContent;
            mediaSendQueue.postRunnable(new Runnable() {
                public void run() {
                    HashMap<SendingMediaInfo, MediaSendPrepareWorker> workers;
                    String originalPath;
                    String tempPath;
                    TL_photo photo;
                    final MediaSendPrepareWorker worker;
                    ArrayList<String> sendAsDocumentsOriginal;
                    long lastGroupId;
                    int a;
                    ArrayList<ArrayList<MessageEntity>> sendAsDocumentsEntities;
                    long j;
                    TL_document document;
                    ArrayList<String> sendAsDocumentsCaptions;
                    File cacheFile;
                    long j2;
                    Throwable e;
                    File cacheFile2;
                    long groupId;
                    long groupId2;
                    HashMap<SendingMediaInfo, MediaSendPrepareWorker> workers2;
                    ArrayList<String> arrayList;
                    long j3;
                    ArrayList<ArrayList<MessageEntity>> sendAsDocumentsEntities2;
                    int i;
                    ArrayList<String> sendAsDocumentsCaptions2;
                    final SendingMediaInfo sendingMediaInfo;
                    boolean enryptedLayer;
                    HashMap<SendingMediaInfo, MediaSendPrepareWorker> hashMap;
                    int i2;
                    HashMap<SendingMediaInfo, MediaSendPrepareWorker> hashMap2;
                    boolean z;
                    ArrayList<String> sendAsDocumentsOriginal2;
                    long beginTime = System.currentTimeMillis();
                    int count = arrayList.size();
                    boolean isEncrypted = ((int) j) == 0;
                    boolean enryptedLayer2 = false;
                    if (isEncrypted) {
                        EncryptedChat encryptedChat = MessagesController.getInstance(i).getEncryptedChat(Integer.valueOf((int) (j >> 32)));
                        if (encryptedChat != null) {
                            enryptedLayer2 = AndroidUtilities.getPeerLayerVersion(encryptedChat.layer);
                        }
                    }
                    boolean enryptedLayer3 = enryptedLayer2;
                    if ((!isEncrypted || enryptedLayer3 >= true) && !z && z2) {
                        workers = new HashMap();
                        for (int a2 = 0; a2 < count; a2++) {
                            final SendingMediaInfo info = (SendingMediaInfo) arrayList.get(a2);
                            if (info.searchImage == null && !info.isVideo) {
                                originalPath = info.path;
                                tempPath = info.path;
                                if (tempPath == null && info.uri != null) {
                                    tempPath = AndroidUtilities.getPath(info.uri);
                                    originalPath = info.uri.toString();
                                }
                                if (tempPath != null) {
                                    if (!tempPath.endsWith(".gif")) {
                                        if (tempPath.endsWith(".webp")) {
                                        }
                                    }
                                }
                                if (tempPath == null && info.uri != null) {
                                    if (!MediaController.isGif(info.uri)) {
                                        if (MediaController.isWebp(info.uri)) {
                                        }
                                    }
                                }
                                if (tempPath != null) {
                                    File temp = new File(tempPath);
                                    StringBuilder stringBuilder = new StringBuilder();
                                    stringBuilder.append(originalPath);
                                    stringBuilder.append(temp.length());
                                    stringBuilder.append("_");
                                    stringBuilder.append(temp.lastModified());
                                    originalPath = stringBuilder.toString();
                                } else {
                                    String str = originalPath;
                                    String str2 = tempPath;
                                    originalPath = null;
                                }
                                photo = null;
                                if (!isEncrypted && info.ttl == 0) {
                                    photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(originalPath, !isEncrypted ? 0 : 3);
                                    if (photo == null && info.uri != null) {
                                        photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(AndroidUtilities.getPath(info.uri), !isEncrypted ? 0 : 3);
                                    }
                                }
                                worker = new MediaSendPrepareWorker();
                                workers.put(info, worker);
                                if (photo != null) {
                                    worker.photo = photo;
                                } else {
                                    worker.sync = new CountDownLatch(1);
                                    SendMessagesHelper.mediaSendThreadPool.execute(new Runnable() {
                                        public void run() {
                                            worker.photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(info.path, info.uri);
                                            worker.sync.countDown();
                                        }
                                    });
                                }
                            }
                        }
                    } else {
                        workers = null;
                    }
                    HashMap<SendingMediaInfo, MediaSendPrepareWorker> workers3 = workers;
                    long lastGroupId2 = 0;
                    ArrayList<String> sendAsDocumentsOriginal3 = null;
                    int photosCount = 0;
                    String extension = null;
                    ArrayList<String> sendAsDocuments = null;
                    ArrayList<String> sendAsDocumentsCaptions3 = null;
                    ArrayList<ArrayList<MessageEntity>> sendAsDocumentsEntities3 = null;
                    long groupId3 = 0;
                    int a3 = 0;
                    while (true) {
                        sendAsDocumentsOriginal = sendAsDocumentsOriginal3;
                        if (a3 >= count) {
                            break;
                        }
                        long j4;
                        final HashMap<String, String> params;
                        TL_document document2;
                        Document document3;
                        TL_document document4;
                        File cacheFile3;
                        File cacheFile4;
                        TL_document document5;
                        ArrayList<ArrayList<MessageEntity>> thumbFile;
                        StringBuilder stringBuilder2;
                        ArrayList<ArrayList<MessageEntity>> thumbFile2;
                        float f;
                        Bitmap bitmap;
                        TL_photo photo2;
                        String md5;
                        File cacheFile5;
                        boolean needDownloadHttp;
                        final boolean needDownloadHttpFinal;
                        final SendingMediaInfo info2;
                        String originalPath2;
                        final HashMap<String, String> params2;
                        SerializedData serializedData;
                        boolean b;
                        boolean isDocument;
                        ArrayList<String> sendAsDocuments2;
                        ArrayList<ArrayList<MessageEntity>> sendAsDocumentsEntities4;
                        ArrayList<String> sendAsDocumentsCaptions4;
                        VideoEditedInfo videoEditedInfo;
                        Bitmap bitmap2;
                        SendingMediaInfo info3;
                        VideoEditedInfo videoEditedInfo2;
                        String str3;
                        String path;
                        File temp2;
                        String path2;
                        StringBuilder stringBuilder3;
                        Bitmap thumb;
                        Bitmap document6;
                        long j5;
                        Bitmap size;
                        boolean isEncrypted2;
                        boolean enryptedLayer4;
                        Bitmap bitmap3;
                        TL_document document7;
                        SendingMediaInfo thumb2;
                        HashMap<String, String> params3;
                        SendingMediaInfo info4;
                        String originalPath3;
                        File temp3;
                        SendingMediaInfo info5 = (SendingMediaInfo) arrayList.get(a3);
                        if (z2) {
                            if (isEncrypted) {
                                if (enryptedLayer3 >= true) {
                                }
                            }
                            if (count > 1 && photosCount % 10 == 0) {
                                long nextLong = Utilities.random.nextLong();
                                photosCount = 0;
                                j4 = nextLong;
                                lastGroupId2 = nextLong;
                                lastGroupId = j4;
                                a = a3;
                                if (info5.searchImage == null) {
                                    if (info5.searchImage.type != 1) {
                                        params = new HashMap();
                                        document2 = null;
                                        if (info5.searchImage.document instanceof TL_document) {
                                            sendAsDocumentsEntities = sendAsDocumentsEntities3;
                                            if (isEncrypted) {
                                                MessagesStorage instance = MessagesStorage.getInstance(i);
                                                sendAsDocumentsEntities3 = info5.searchImage.imageUrl;
                                                if (isEncrypted) {
                                                    j = lastGroupId2;
                                                    lastGroupId2 = 1;
                                                } else {
                                                    j = lastGroupId2;
                                                    lastGroupId2 = 4;
                                                }
                                                document3 = (Document) instance.getSentFile(sendAsDocumentsEntities3, lastGroupId2);
                                                if ((document3 instanceof TL_document) != null) {
                                                    document4 = (TL_document) document3;
                                                    sendAsDocumentsEntities3 = new StringBuilder();
                                                    sendAsDocumentsEntities3.append(Utilities.MD5(info5.searchImage.imageUrl));
                                                    sendAsDocumentsEntities3.append(".");
                                                    sendAsDocumentsEntities3.append(ImageLoader.getHttpUrlExtension(info5.searchImage.imageUrl, "jpg"));
                                                    document = document4;
                                                    cacheFile3 = new File(FileLoader.getDirectory(4), sendAsDocumentsEntities3.toString());
                                                }
                                            } else {
                                                j = lastGroupId2;
                                            }
                                            document4 = document2;
                                            sendAsDocumentsEntities3 = new StringBuilder();
                                            sendAsDocumentsEntities3.append(Utilities.MD5(info5.searchImage.imageUrl));
                                            sendAsDocumentsEntities3.append(".");
                                            sendAsDocumentsEntities3.append(ImageLoader.getHttpUrlExtension(info5.searchImage.imageUrl, "jpg"));
                                            document = document4;
                                            cacheFile3 = new File(FileLoader.getDirectory(4), sendAsDocumentsEntities3.toString());
                                        } else {
                                            document4 = (TL_document) info5.searchImage.document;
                                            sendAsDocumentsEntities = sendAsDocumentsEntities3;
                                            document = document4;
                                            j = lastGroupId2;
                                            cacheFile3 = FileLoader.getPathToAttach(document4, true);
                                        }
                                        cacheFile4 = cacheFile3;
                                        if (document != null) {
                                            if (info5.searchImage.localUrl != null) {
                                                params.put(UpdateFragment.FRAGMENT_URL, info5.searchImage.localUrl);
                                            }
                                            document5 = new TL_document();
                                            sendAsDocumentsCaptions = sendAsDocumentsCaptions3;
                                            document5.id = 0;
                                            document5.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            TL_documentAttributeFilename fileName = new TL_documentAttributeFilename();
                                            fileName.file_name = "animation.gif";
                                            document5.attributes.add(fileName);
                                            document5.size = info5.searchImage.size;
                                            document5.dc_id = 0;
                                            thumbFile = null;
                                            if (cacheFile4.toString().endsWith("mp4") == null) {
                                                document5.mime_type = MimeTypes.VIDEO_MP4;
                                                document5.attributes.add(new TL_documentAttributeAnimated());
                                            } else {
                                                document5.mime_type = "image/gif";
                                            }
                                            if (cacheFile4.exists() == null) {
                                                sendAsDocumentsEntities3 = cacheFile4;
                                            } else {
                                                cacheFile4 = null;
                                                sendAsDocumentsEntities3 = thumbFile;
                                            }
                                            if (sendAsDocumentsEntities3 != null) {
                                                stringBuilder2 = new StringBuilder();
                                                cacheFile = cacheFile4;
                                                stringBuilder2.append(Utilities.MD5(info5.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                thumbFile2 = sendAsDocumentsEntities3;
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(info5.searchImage.thumbUrl, "jpg"));
                                                sendAsDocumentsEntities3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (!sendAsDocumentsEntities3.exists()) {
                                                    sendAsDocumentsEntities3 = null;
                                                }
                                            } else {
                                                cacheFile = cacheFile4;
                                                thumbFile2 = sendAsDocumentsEntities3;
                                            }
                                            if (sendAsDocumentsEntities3 == null) {
                                                try {
                                                    if (sendAsDocumentsEntities3.getAbsolutePath().endsWith("mp4")) {
                                                        j2 = beginTime;
                                                        f = 90.0f;
                                                        try {
                                                            bitmap = ImageLoader.loadBitmap(sendAsDocumentsEntities3.getAbsolutePath(), 0, 90.0f, 90.0f, true);
                                                        } catch (Throwable e2) {
                                                            e = e2;
                                                            FileLog.m3e(e);
                                                            if (document5.thumb == null) {
                                                                document5.thumb = new TL_photoSize();
                                                                document5.thumb.f43w = info5.searchImage.width;
                                                                document5.thumb.f42h = info5.searchImage.height;
                                                                document5.thumb.size = 0;
                                                                document5.thumb.location = new TL_fileLocationUnavailable();
                                                                document5.thumb.type = "x";
                                                            }
                                                            document = document5;
                                                            cacheFile2 = cacheFile;
                                                            groupId = j;
                                                            document5 = document;
                                                            tempPath = info5.searchImage.imageUrl;
                                                            if (cacheFile2 == null) {
                                                            }
                                                            if (params != null) {
                                                            }
                                                            groupId2 = groupId;
                                                            workers2 = workers3;
                                                            arrayList = sendAsDocuments;
                                                            j3 = groupId2;
                                                            sendAsDocumentsEntities2 = sendAsDocumentsEntities;
                                                            i = a;
                                                            sendAsDocumentsCaptions2 = sendAsDocumentsCaptions;
                                                            sendingMediaInfo = info5;
                                                            enryptedLayer = enryptedLayer3;
                                                            AndroidUtilities.runOnUIThread(new Runnable() {
                                                                public void run() {
                                                                    SendMessagesHelper.getInstance(i).sendMessage(document5, null, originalPath, j, messageObject, sendingMediaInfo.caption, sendingMediaInfo.entities, null, params, 0);
                                                                }
                                                            });
                                                            hashMap = null;
                                                            lastGroupId2 = lastGroupId;
                                                            i2 = 73;
                                                            sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                                            hashMap2 = workers2;
                                                            sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                                            sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                                            z = enryptedLayer;
                                                            sendAsDocumentsOriginal = isEncrypted;
                                                            a3 = i + 1;
                                                            groupId3 = j3;
                                                            enryptedLayer3 = z;
                                                            isEncrypted = sendAsDocumentsOriginal;
                                                            beginTime = j2;
                                                            sendAsDocuments = arrayList;
                                                            workers3 = hashMap2;
                                                            hashMap2 = hashMap;
                                                        }
                                                    } else {
                                                        try {
                                                            bitmap = ThumbnailUtils.createVideoThumbnail(sendAsDocumentsEntities3.getAbsolutePath(), 1);
                                                            j2 = beginTime;
                                                            f = 90.0f;
                                                        } catch (Throwable e22) {
                                                            e = e22;
                                                            j2 = beginTime;
                                                            FileLog.m3e(e);
                                                            if (document5.thumb == null) {
                                                                document5.thumb = new TL_photoSize();
                                                                document5.thumb.f43w = info5.searchImage.width;
                                                                document5.thumb.f42h = info5.searchImage.height;
                                                                document5.thumb.size = 0;
                                                                document5.thumb.location = new TL_fileLocationUnavailable();
                                                                document5.thumb.type = "x";
                                                            }
                                                            document = document5;
                                                            cacheFile2 = cacheFile;
                                                            groupId = j;
                                                            document5 = document;
                                                            tempPath = info5.searchImage.imageUrl;
                                                            originalPath = cacheFile2 == null ? info5.searchImage.imageUrl : cacheFile2.toString();
                                                            if (params != null) {
                                                            }
                                                            groupId2 = groupId;
                                                            workers2 = workers3;
                                                            arrayList = sendAsDocuments;
                                                            j3 = groupId2;
                                                            sendAsDocumentsEntities2 = sendAsDocumentsEntities;
                                                            i = a;
                                                            sendAsDocumentsCaptions2 = sendAsDocumentsCaptions;
                                                            sendingMediaInfo = info5;
                                                            enryptedLayer = enryptedLayer3;
                                                            AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                            hashMap = null;
                                                            lastGroupId2 = lastGroupId;
                                                            i2 = 73;
                                                            sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                                            hashMap2 = workers2;
                                                            sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                                            sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                                            z = enryptedLayer;
                                                            sendAsDocumentsOriginal = isEncrypted;
                                                            a3 = i + 1;
                                                            groupId3 = j3;
                                                            enryptedLayer3 = z;
                                                            isEncrypted = sendAsDocumentsOriginal;
                                                            beginTime = j2;
                                                            sendAsDocuments = arrayList;
                                                            workers3 = hashMap2;
                                                            hashMap2 = hashMap;
                                                        }
                                                    }
                                                    if (bitmap != null) {
                                                        document5.thumb = ImageLoader.scaleAndSaveImage(bitmap, f, f, 55, isEncrypted);
                                                        bitmap.recycle();
                                                    }
                                                } catch (Throwable e222) {
                                                    j2 = beginTime;
                                                    e = e222;
                                                    FileLog.m3e(e);
                                                    if (document5.thumb == null) {
                                                        document5.thumb = new TL_photoSize();
                                                        document5.thumb.f43w = info5.searchImage.width;
                                                        document5.thumb.f42h = info5.searchImage.height;
                                                        document5.thumb.size = 0;
                                                        document5.thumb.location = new TL_fileLocationUnavailable();
                                                        document5.thumb.type = "x";
                                                    }
                                                    document = document5;
                                                    cacheFile2 = cacheFile;
                                                    groupId = j;
                                                    document5 = document;
                                                    tempPath = info5.searchImage.imageUrl;
                                                    if (cacheFile2 == null) {
                                                    }
                                                    if (params != null) {
                                                    }
                                                    groupId2 = groupId;
                                                    workers2 = workers3;
                                                    arrayList = sendAsDocuments;
                                                    j3 = groupId2;
                                                    sendAsDocumentsEntities2 = sendAsDocumentsEntities;
                                                    i = a;
                                                    sendAsDocumentsCaptions2 = sendAsDocumentsCaptions;
                                                    sendingMediaInfo = info5;
                                                    enryptedLayer = enryptedLayer3;
                                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                                    hashMap = null;
                                                    lastGroupId2 = lastGroupId;
                                                    i2 = 73;
                                                    sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                                    hashMap2 = workers2;
                                                    sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                                    sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                                    z = enryptedLayer;
                                                    sendAsDocumentsOriginal = isEncrypted;
                                                    a3 = i + 1;
                                                    groupId3 = j3;
                                                    enryptedLayer3 = z;
                                                    isEncrypted = sendAsDocumentsOriginal;
                                                    beginTime = j2;
                                                    sendAsDocuments = arrayList;
                                                    workers3 = hashMap2;
                                                    hashMap2 = hashMap;
                                                }
                                            } else {
                                                j2 = beginTime;
                                            }
                                            if (document5.thumb == null) {
                                                document5.thumb = new TL_photoSize();
                                                document5.thumb.f43w = info5.searchImage.width;
                                                document5.thumb.f42h = info5.searchImage.height;
                                                document5.thumb.size = 0;
                                                document5.thumb.location = new TL_fileLocationUnavailable();
                                                document5.thumb.type = "x";
                                            }
                                            document = document5;
                                            cacheFile2 = cacheFile;
                                        } else {
                                            sendAsDocumentsCaptions = sendAsDocumentsCaptions3;
                                            j2 = beginTime;
                                            cacheFile2 = cacheFile4;
                                        }
                                        groupId = j;
                                        document5 = document;
                                        tempPath = info5.searchImage.imageUrl;
                                        if (cacheFile2 == null) {
                                        }
                                        if (params != null || info5.searchImage.imageUrl == null) {
                                            groupId2 = groupId;
                                        } else {
                                            groupId2 = groupId;
                                            params.put("originalPath", info5.searchImage.imageUrl);
                                        }
                                        workers2 = workers3;
                                        arrayList = sendAsDocuments;
                                        j3 = groupId2;
                                        sendAsDocumentsEntities2 = sendAsDocumentsEntities;
                                        i = a;
                                        sendAsDocumentsCaptions2 = sendAsDocumentsCaptions;
                                        sendingMediaInfo = info5;
                                        enryptedLayer = enryptedLayer3;
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        hashMap = null;
                                        lastGroupId2 = lastGroupId;
                                        i2 = 73;
                                        sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                        hashMap2 = workers2;
                                        sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                        sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                        z = enryptedLayer;
                                    } else {
                                        sendAsDocumentsEntities2 = sendAsDocumentsEntities3;
                                        sendAsDocumentsCaptions2 = sendAsDocumentsCaptions3;
                                        enryptedLayer = enryptedLayer3;
                                        j2 = beginTime;
                                        workers2 = workers3;
                                        arrayList = sendAsDocuments;
                                        i = a;
                                        j3 = lastGroupId2;
                                        enryptedLayer2 = true;
                                        photo2 = null;
                                        if (!isEncrypted && info5.ttl == 0) {
                                            photo2 = (TL_photo) MessagesStorage.getInstance(i).getSentFile(info5.searchImage.imageUrl, isEncrypted ? 0 : 3);
                                        }
                                        if (photo2 == null) {
                                            md5 = new StringBuilder();
                                            md5.append(Utilities.MD5(info5.searchImage.imageUrl));
                                            md5.append(".");
                                            md5.append(ImageLoader.getHttpUrlExtension(info5.searchImage.imageUrl, "jpg"));
                                            cacheFile5 = new File(FileLoader.getDirectory(4), md5.toString());
                                            if (cacheFile5.exists() && cacheFile5.length() != 0) {
                                                photo2 = SendMessagesHelper.getInstance(i).generatePhotoSizes(cacheFile5.toString(), null);
                                                if (photo2 != null) {
                                                    enryptedLayer2 = false;
                                                }
                                            }
                                            if (photo2 == null) {
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(Utilities.MD5(info5.searchImage.thumbUrl));
                                                stringBuilder2.append(".");
                                                stringBuilder2.append(ImageLoader.getHttpUrlExtension(info5.searchImage.thumbUrl, "jpg"));
                                                cacheFile5 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                                if (cacheFile5.exists()) {
                                                    photo2 = SendMessagesHelper.getInstance(i).generatePhotoSizes(cacheFile5.toString(), null);
                                                }
                                                if (photo2 == null) {
                                                    photo2 = new TL_photo();
                                                    photo2.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                                    TL_photoSize photoSize = new TL_photoSize();
                                                    photoSize.w = info5.searchImage.width;
                                                    photoSize.h = info5.searchImage.height;
                                                    photoSize.size = 0;
                                                    photoSize.location = new TL_fileLocationUnavailable();
                                                    photoSize.type = "x";
                                                    photo2.sizes.add(photoSize);
                                                }
                                            }
                                        }
                                        needDownloadHttp = enryptedLayer2;
                                        beginTime = photo2;
                                        if (beginTime != null) {
                                            final TL_photo photoFinal = beginTime;
                                            needDownloadHttpFinal = needDownloadHttp;
                                            params = new HashMap();
                                            if (info5.searchImage.imageUrl != null) {
                                                params.put("originalPath", info5.searchImage.imageUrl);
                                            }
                                            if (z2) {
                                                a3 = photosCount + 1;
                                                stringBuilder2 = new StringBuilder();
                                                stringBuilder2.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder2.append(j3);
                                                params.put("groupId", stringBuilder2.toString());
                                                if (a3 != 10) {
                                                    if (i == count - 1) {
                                                    }
                                                    photosCount = a3;
                                                }
                                                params.put("final", "1");
                                                lastGroupId = 0;
                                                photosCount = a3;
                                            }
                                            sendingMediaInfo = info5;
                                            HashMap<String, String> hashMap3 = params;
                                            AndroidUtilities.runOnUIThread(new Runnable() {
                                                public void run() {
                                                    SendMessagesHelper.getInstance(i).sendMessage(photoFinal, needDownloadHttpFinal ? sendingMediaInfo.searchImage.imageUrl : null, j, messageObject, sendingMediaInfo.caption, sendingMediaInfo.entities, null, params, sendingMediaInfo.ttl);
                                                }
                                            });
                                        }
                                        lastGroupId2 = lastGroupId;
                                        i2 = 73;
                                        sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                        hashMap2 = workers2;
                                        sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                        sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                        z = enryptedLayer;
                                        hashMap = null;
                                    }
                                    sendAsDocumentsOriginal = isEncrypted;
                                } else {
                                    sendAsDocumentsEntities2 = sendAsDocumentsEntities3;
                                    sendAsDocumentsCaptions2 = sendAsDocumentsCaptions3;
                                    enryptedLayer = enryptedLayer3;
                                    j2 = beginTime;
                                    workers2 = workers3;
                                    arrayList = sendAsDocuments;
                                    i = a;
                                    j3 = lastGroupId2;
                                    if (info5.isVideo) {
                                        info2 = info5;
                                        i2 = 73;
                                        sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                                        z = enryptedLayer;
                                        hashMap = null;
                                        sendAsDocumentsOriginal = isEncrypted;
                                        originalPath2 = info2.path;
                                        md5 = info2.path;
                                        if (md5 == null && info2.uri != null) {
                                            md5 = AndroidUtilities.getPath(info2.uri);
                                            originalPath2 = info2.uri.toString();
                                        }
                                        needDownloadHttpFinal = false;
                                        if (z) {
                                            needDownloadHttpFinal = true;
                                            extension = FileLoader.getFileExtension(new File(md5));
                                        } else if (md5 == null && (md5.endsWith(".gif") || md5.endsWith(".webp"))) {
                                            if (md5.endsWith(".gif")) {
                                                tempPath = "gif";
                                            } else {
                                                tempPath = "webp";
                                            }
                                            extension = tempPath;
                                            needDownloadHttpFinal = true;
                                        } else if (md5 == null && info2.uri != null) {
                                            if (MediaController.isGif(info2.uri)) {
                                                needDownloadHttpFinal = true;
                                                originalPath2 = info2.uri.toString();
                                                md5 = MediaController.copyFileToCache(info2.uri, "gif");
                                                extension = "gif";
                                            } else if (MediaController.isWebp(info2.uri)) {
                                                needDownloadHttpFinal = true;
                                                originalPath2 = info2.uri.toString();
                                                md5 = MediaController.copyFileToCache(info2.uri, "webp");
                                                extension = "webp";
                                            }
                                        }
                                        if (needDownloadHttpFinal) {
                                            if (md5 == null) {
                                                File temp4 = new File(md5);
                                                StringBuilder stringBuilder4 = new StringBuilder();
                                                stringBuilder4.append(originalPath2);
                                                stringBuilder4.append(temp4.length());
                                                stringBuilder4.append("_");
                                                stringBuilder4.append(temp4.lastModified());
                                                originalPath2 = stringBuilder4.toString();
                                            } else {
                                                originalPath2 = null;
                                            }
                                            photo = null;
                                            if (workers2 == null) {
                                                hashMap2 = workers2;
                                                worker = (MediaSendPrepareWorker) hashMap2.get(info2);
                                                photo = worker.photo;
                                                if (photo == null) {
                                                    try {
                                                        worker.sync.await();
                                                    } catch (Throwable e2222) {
                                                        FileLog.m3e(e2222);
                                                    }
                                                    photo = worker.photo;
                                                }
                                            } else {
                                                hashMap2 = workers2;
                                                if (sendAsDocumentsOriginal == null && info2.ttl == 0) {
                                                    photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(originalPath2, sendAsDocumentsOriginal != null ? 0 : 3);
                                                    if (photo == null && info2.uri != null) {
                                                        photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(AndroidUtilities.getPath(info2.uri), sendAsDocumentsOriginal != null ? 0 : 3);
                                                    }
                                                }
                                                if (photo == null) {
                                                    photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(info2.path, info2.uri);
                                                }
                                            }
                                            if (photo == null) {
                                                final TL_photo photoFinal2 = photo;
                                                params2 = new HashMap();
                                                isEncrypted = info2.masks == null && !info2.masks.isEmpty();
                                                photo.has_stickers = isEncrypted;
                                                if (isEncrypted) {
                                                } else {
                                                    serializedData = new SerializedData(4 + (info2.masks.size() * 20));
                                                    serializedData.writeInt32(info2.masks.size());
                                                    b = false;
                                                    while (true) {
                                                        isDocument = needDownloadHttpFinal;
                                                        if (b < info2.masks.size()) {
                                                            break;
                                                        }
                                                        ((InputDocument) info2.masks.get(b)).serializeToStream(serializedData);
                                                        b++;
                                                        needDownloadHttpFinal = isDocument;
                                                    }
                                                    params2.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                                }
                                                if (originalPath2 != null) {
                                                    params2.put("originalPath", originalPath2);
                                                }
                                                if (z2) {
                                                    needDownloadHttpFinal = photosCount;
                                                } else {
                                                    needDownloadHttpFinal = photosCount + 1;
                                                    StringBuilder stringBuilder5 = new StringBuilder();
                                                    stringBuilder5.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                    stringBuilder5.append(j3);
                                                    params2.put("groupId", stringBuilder5.toString());
                                                    if (needDownloadHttpFinal || i == count - 1) {
                                                        params2.put("final", "1");
                                                        lastGroupId = 0;
                                                    }
                                                }
                                                AndroidUtilities.runOnUIThread(new Runnable() {
                                                    public void run() {
                                                        SendMessagesHelper.getInstance(i).sendMessage(photoFinal2, null, j, messageObject, info2.caption, info2.entities, null, params2, info2.ttl);
                                                    }
                                                });
                                                boolean photosCount2 = needDownloadHttpFinal;
                                                lastGroupId2 = lastGroupId;
                                            } else {
                                                TL_photo tL_photo = photo;
                                                if (arrayList != null) {
                                                    sendAsDocuments2 = new ArrayList();
                                                    sendAsDocumentsOriginal3 = new ArrayList();
                                                    sendAsDocumentsCaptions3 = new ArrayList();
                                                    sendAsDocumentsEntities4 = new ArrayList();
                                                } else {
                                                    sendAsDocuments2 = arrayList;
                                                    sendAsDocumentsEntities4 = sendAsDocumentsEntities2;
                                                    sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                                    sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                                                }
                                                sendAsDocuments2.add(md5);
                                                sendAsDocumentsOriginal3.add(originalPath2);
                                                sendAsDocumentsCaptions3.add(info2.caption);
                                                sendAsDocumentsEntities4.add(info2.entities);
                                                arrayList = sendAsDocuments2;
                                                sendAsDocumentsEntities3 = sendAsDocumentsEntities4;
                                                lastGroupId2 = lastGroupId;
                                            }
                                        } else {
                                            if (arrayList != null) {
                                                sendAsDocumentsCaptions3 = new ArrayList();
                                                sendAsDocumentsOriginal3 = new ArrayList();
                                                sendAsDocumentsCaptions4 = new ArrayList();
                                                sendAsDocumentsEntities4 = new ArrayList();
                                            } else {
                                                sendAsDocumentsCaptions3 = arrayList;
                                                sendAsDocumentsEntities4 = sendAsDocumentsEntities2;
                                                sendAsDocumentsCaptions4 = sendAsDocumentsCaptions2;
                                                sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                                            }
                                            sendAsDocumentsCaptions3.add(md5);
                                            sendAsDocumentsOriginal3.add(originalPath2);
                                            sendAsDocumentsCaptions4.add(info2.caption);
                                            sendAsDocumentsEntities4.add(info2.entities);
                                            arrayList = sendAsDocumentsCaptions3;
                                            sendAsDocumentsCaptions3 = sendAsDocumentsCaptions4;
                                            sendAsDocumentsEntities3 = sendAsDocumentsEntities4;
                                            lastGroupId2 = lastGroupId;
                                            hashMap2 = workers2;
                                        }
                                    } else {
                                        VideoEditedInfo videoEditedInfo3 = z ? null : info5.videoEditedInfo == null ? info5.videoEditedInfo : SendMessagesHelper.createCompressionSettings(info5.path);
                                        videoEditedInfo = videoEditedInfo3;
                                        if (z) {
                                            if (videoEditedInfo == null) {
                                                if (info5.path.endsWith("mp4")) {
                                                    bitmap2 = null;
                                                    info3 = info5;
                                                    videoEditedInfo2 = videoEditedInfo;
                                                    str3 = null;
                                                    i2 = 73;
                                                    sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                                                    z = enryptedLayer;
                                                    hashMap = null;
                                                    sendAsDocumentsOriginal = isEncrypted;
                                                }
                                            }
                                            path = info5.path;
                                            md5 = info5.path;
                                            temp2 = new File(md5);
                                            needDownloadHttp = false;
                                            bitmap2 = null;
                                            bitmap = new StringBuilder();
                                            bitmap.append(md5);
                                            path2 = path;
                                            bitmap.append(temp2.length());
                                            bitmap.append("_");
                                            bitmap.append(temp2.lastModified());
                                            bitmap = bitmap.toString();
                                            if (videoEditedInfo == null) {
                                                boolean muted = videoEditedInfo.muted;
                                                StringBuilder stringBuilder6 = new StringBuilder();
                                                stringBuilder6.append(bitmap);
                                                Bitmap originalPath4 = bitmap;
                                                boolean muted2 = muted;
                                                stringBuilder6.append(videoEditedInfo.estimatedDuration);
                                                stringBuilder6.append("_");
                                                stringBuilder6.append(videoEditedInfo.startTime);
                                                stringBuilder6.append("_");
                                                stringBuilder6.append(videoEditedInfo.endTime);
                                                stringBuilder6.append(videoEditedInfo.muted == null ? "_m" : TtmlNode.ANONYMOUS_REGION_ID);
                                                bitmap = stringBuilder6.toString();
                                                if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                                                    stringBuilder3 = new StringBuilder();
                                                    stringBuilder3.append(bitmap);
                                                    stringBuilder3.append("_");
                                                    stringBuilder3.append(videoEditedInfo.resultWidth);
                                                    bitmap = stringBuilder3.toString();
                                                }
                                                path = bitmap;
                                                lastGroupId2 = videoEditedInfo.startTime < 0 ? videoEditedInfo.startTime : 0;
                                                needDownloadHttp = muted2;
                                            } else {
                                                lastGroupId2 = 0;
                                                path = bitmap;
                                            }
                                            if (isEncrypted && info5.ttl == 0) {
                                                Bitmap bitmap4;
                                                MessagesStorage instance2 = MessagesStorage.getInstance(i);
                                                if (isEncrypted) {
                                                    int i3 = 5;
                                                } else {
                                                    bitmap4 = 2;
                                                }
                                                TL_document document8 = null;
                                                bitmap = (TL_document) instance2.getSentFile(path, bitmap4);
                                            } else {
                                                bitmap = null;
                                            }
                                            if (bitmap != null) {
                                                thumb = SendMessagesHelper.createVideoThumbnail(info5.path, lastGroupId2);
                                                if (thumb != null) {
                                                    document6 = bitmap;
                                                    j5 = lastGroupId2;
                                                    thumb = ThumbnailUtils.createVideoThumbnail(info5.path, 1);
                                                } else {
                                                    document6 = bitmap;
                                                    j5 = lastGroupId2;
                                                }
                                                bitmap = ImageLoader.scaleAndSaveImage(thumb, 90.0f, 90.0f, 55, isEncrypted);
                                                if (!(thumb == null || bitmap == null)) {
                                                    thumb = null;
                                                }
                                                lastGroupId2 = new TL_document();
                                                lastGroupId2.thumb = bitmap;
                                                if (lastGroupId2.thumb != null) {
                                                    lastGroupId2.thumb = new TL_photoSizeEmpty();
                                                    size = bitmap;
                                                    lastGroupId2.thumb.type = "s";
                                                } else {
                                                    size = bitmap;
                                                    lastGroupId2.thumb.type = "s";
                                                }
                                                lastGroupId2.mime_type = MimeTypes.VIDEO_MP4;
                                                UserConfig.getInstance(i).saveConfig(false);
                                                if (isEncrypted) {
                                                    isEncrypted2 = isEncrypted;
                                                    isEncrypted = enryptedLayer;
                                                    bitmap = new TL_documentAttributeVideo();
                                                    enryptedLayer4 = isEncrypted;
                                                    bitmap.supports_streaming = true;
                                                } else {
                                                    isEncrypted2 = isEncrypted;
                                                    isEncrypted = enryptedLayer;
                                                    if (isEncrypted < true) {
                                                        bitmap = new TL_documentAttributeVideo();
                                                    } else {
                                                        bitmap = new TL_documentAttributeVideo_layer65();
                                                    }
                                                    enryptedLayer4 = isEncrypted;
                                                }
                                                lastGroupId2.attributes.add(bitmap);
                                                if (videoEditedInfo == null && videoEditedInfo.needConvert()) {
                                                    if (videoEditedInfo.muted) {
                                                        lastGroupId2.attributes.add(new TL_documentAttributeAnimated());
                                                        SendMessagesHelper.fillVideoAttribute(info5.path, bitmap, videoEditedInfo);
                                                        videoEditedInfo.originalWidth = bitmap.w;
                                                        videoEditedInfo.originalHeight = bitmap.h;
                                                        bitmap.w = videoEditedInfo.resultWidth;
                                                        bitmap.h = videoEditedInfo.resultHeight;
                                                        bitmap3 = thumb;
                                                    } else {
                                                        bitmap3 = thumb;
                                                        bitmap.duration = (int) (videoEditedInfo.estimatedDuration / 1000);
                                                        if (videoEditedInfo.rotationValue != 90) {
                                                            if (videoEditedInfo.rotationValue != 270) {
                                                                bitmap.w = videoEditedInfo.resultWidth;
                                                                bitmap.h = videoEditedInfo.resultHeight;
                                                            }
                                                        }
                                                        bitmap.w = videoEditedInfo.resultHeight;
                                                        bitmap.h = videoEditedInfo.resultWidth;
                                                    }
                                                    lastGroupId2.size = (int) videoEditedInfo.estimatedSize;
                                                    originalPath = new StringBuilder();
                                                    originalPath.append("-2147483648_");
                                                    originalPath.append(SharedConfig.getLastLocalId());
                                                    originalPath.append(".mp4");
                                                    thumb = new File(FileLoader.getDirectory(4), originalPath.toString());
                                                    SharedConfig.saveConfig();
                                                    document7 = lastGroupId2;
                                                    path2 = thumb.getAbsolutePath();
                                                } else {
                                                    bitmap3 = thumb;
                                                    if (temp2.exists()) {
                                                        lastGroupId2.size = (int) temp2.length();
                                                    }
                                                    SendMessagesHelper.fillVideoAttribute(info5.path, bitmap, false);
                                                    document7 = lastGroupId2;
                                                }
                                            } else {
                                                document7 = bitmap;
                                                j5 = lastGroupId2;
                                                isEncrypted2 = isEncrypted;
                                                enryptedLayer4 = enryptedLayer;
                                                bitmap3 = bitmap2;
                                            }
                                            String originalPathFinal = path;
                                            thumb2 = info5;
                                            i2 = 73;
                                            sendAsDocuments2 = sendAsDocumentsOriginal;
                                            final String info6 = path2;
                                            TL_document videoFinal = document7;
                                            params3 = new HashMap();
                                            final Bitmap thumbFinal = bitmap3;
                                            sendAsDocumentsOriginal2 = sendAsDocuments2;
                                            originalPath = null;
                                            if (path != null) {
                                                params3.put("originalPath", path);
                                            }
                                            if (needDownloadHttp && z2) {
                                                int photosCount3 = photosCount + 1;
                                                info4 = thumb2;
                                                originalPath3 = path;
                                                stringBuilder3 = new StringBuilder();
                                                temp3 = temp2;
                                                stringBuilder3.append(TtmlNode.ANONYMOUS_REGION_ID);
                                                stringBuilder3.append(j3);
                                                params3.put("groupId", stringBuilder3.toString());
                                                if (photosCount3 != 10) {
                                                    if (i == count - 1) {
                                                    }
                                                    photosCount = photosCount3;
                                                }
                                                params3.put("final", "1");
                                                lastGroupId = null;
                                                photosCount = photosCount3;
                                            } else {
                                                info4 = thumb2;
                                                originalPath3 = path;
                                                temp3 = temp2;
                                            }
                                            String str4 = originalPath3;
                                            info3 = info4;
                                            final VideoEditedInfo videoEditedInfo4 = videoEditedInfo;
                                            z = enryptedLayer4;
                                            hashMap = null;
                                            final SendingMediaInfo sendingMediaInfo2 = info3;
                                            str3 = null;
                                            sendAsDocumentsOriginal = isEncrypted2;
                                            C04934 c04934 = thumb;
                                            isEncrypted = params3;
                                            final TL_document videoFinal2 = videoFinal;
                                            C04934 thumb3 = new Runnable() {
                                                public void run() {
                                                    if (!(thumbFinal == null || originalPath == null)) {
                                                        ImageLoader.getInstance().putImageToCache(new BitmapDrawable(thumbFinal), originalPath);
                                                    }
                                                    SendMessagesHelper.getInstance(i).sendMessage(videoFinal2, videoEditedInfo4, info6, j, messageObject, sendingMediaInfo2.caption, sendingMediaInfo2.entities, null, isEncrypted, sendingMediaInfo2.ttl);
                                                }
                                            };
                                            AndroidUtilities.runOnUIThread(c04934);
                                            info2 = info3;
                                            lastGroupId2 = lastGroupId;
                                            hashMap2 = workers2;
                                        } else {
                                            bitmap2 = null;
                                            info3 = info5;
                                            videoEditedInfo2 = videoEditedInfo;
                                            str3 = null;
                                            i2 = 73;
                                            sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                                            z = enryptedLayer;
                                            hashMap = null;
                                            sendAsDocumentsOriginal = isEncrypted;
                                        }
                                        info2 = info3;
                                        SendMessagesHelper.prepareSendingDocumentInternal(i, info2.path, info2.path, null, null, j, messageObject, info2.caption, info2.entities);
                                        lastGroupId2 = lastGroupId;
                                        hashMap2 = workers2;
                                    }
                                    sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                    sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                    sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                                }
                                a3 = i + 1;
                                groupId3 = j3;
                                enryptedLayer3 = z;
                                isEncrypted = sendAsDocumentsOriginal;
                                beginTime = j2;
                                sendAsDocuments = arrayList;
                                workers3 = hashMap2;
                                hashMap2 = hashMap;
                            }
                        }
                        j4 = lastGroupId2;
                        lastGroupId2 = groupId3;
                        lastGroupId = j4;
                        a = a3;
                        if (info5.searchImage == null) {
                            sendAsDocumentsEntities2 = sendAsDocumentsEntities3;
                            sendAsDocumentsCaptions2 = sendAsDocumentsCaptions3;
                            enryptedLayer = enryptedLayer3;
                            j2 = beginTime;
                            workers2 = workers3;
                            arrayList = sendAsDocuments;
                            i = a;
                            j3 = lastGroupId2;
                            if (info5.isVideo) {
                                info2 = info5;
                                i2 = 73;
                                sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                                z = enryptedLayer;
                                hashMap = null;
                                sendAsDocumentsOriginal = isEncrypted;
                                originalPath2 = info2.path;
                                md5 = info2.path;
                                md5 = AndroidUtilities.getPath(info2.uri);
                                originalPath2 = info2.uri.toString();
                                needDownloadHttpFinal = false;
                                if (z) {
                                    needDownloadHttpFinal = true;
                                    extension = FileLoader.getFileExtension(new File(md5));
                                } else {
                                    if (md5 == null) {
                                    }
                                    if (MediaController.isGif(info2.uri)) {
                                        needDownloadHttpFinal = true;
                                        originalPath2 = info2.uri.toString();
                                        md5 = MediaController.copyFileToCache(info2.uri, "gif");
                                        extension = "gif";
                                    } else if (MediaController.isWebp(info2.uri)) {
                                        needDownloadHttpFinal = true;
                                        originalPath2 = info2.uri.toString();
                                        md5 = MediaController.copyFileToCache(info2.uri, "webp");
                                        extension = "webp";
                                    }
                                }
                                if (needDownloadHttpFinal) {
                                    if (md5 == null) {
                                        originalPath2 = null;
                                    } else {
                                        File temp42 = new File(md5);
                                        StringBuilder stringBuilder42 = new StringBuilder();
                                        stringBuilder42.append(originalPath2);
                                        stringBuilder42.append(temp42.length());
                                        stringBuilder42.append("_");
                                        stringBuilder42.append(temp42.lastModified());
                                        originalPath2 = stringBuilder42.toString();
                                    }
                                    photo = null;
                                    if (workers2 == null) {
                                        hashMap2 = workers2;
                                        if (sendAsDocumentsOriginal != null) {
                                        }
                                        photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(originalPath2, sendAsDocumentsOriginal != null ? 0 : 3);
                                        if (sendAsDocumentsOriginal != null) {
                                        }
                                        photo = (TL_photo) MessagesStorage.getInstance(i).getSentFile(AndroidUtilities.getPath(info2.uri), sendAsDocumentsOriginal != null ? 0 : 3);
                                        if (photo == null) {
                                            photo = SendMessagesHelper.getInstance(i).generatePhotoSizes(info2.path, info2.uri);
                                        }
                                    } else {
                                        hashMap2 = workers2;
                                        worker = (MediaSendPrepareWorker) hashMap2.get(info2);
                                        photo = worker.photo;
                                        if (photo == null) {
                                            worker.sync.await();
                                            photo = worker.photo;
                                        }
                                    }
                                    if (photo == null) {
                                        TL_photo tL_photo2 = photo;
                                        if (arrayList != null) {
                                            sendAsDocuments2 = arrayList;
                                            sendAsDocumentsEntities4 = sendAsDocumentsEntities2;
                                            sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                            sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                                        } else {
                                            sendAsDocuments2 = new ArrayList();
                                            sendAsDocumentsOriginal3 = new ArrayList();
                                            sendAsDocumentsCaptions3 = new ArrayList();
                                            sendAsDocumentsEntities4 = new ArrayList();
                                        }
                                        sendAsDocuments2.add(md5);
                                        sendAsDocumentsOriginal3.add(originalPath2);
                                        sendAsDocumentsCaptions3.add(info2.caption);
                                        sendAsDocumentsEntities4.add(info2.entities);
                                        arrayList = sendAsDocuments2;
                                        sendAsDocumentsEntities3 = sendAsDocumentsEntities4;
                                        lastGroupId2 = lastGroupId;
                                    } else {
                                        final TL_photo photoFinal22 = photo;
                                        params2 = new HashMap();
                                        if (info2.masks == null) {
                                        }
                                        photo.has_stickers = isEncrypted;
                                        if (isEncrypted) {
                                        } else {
                                            serializedData = new SerializedData(4 + (info2.masks.size() * 20));
                                            serializedData.writeInt32(info2.masks.size());
                                            b = false;
                                            while (true) {
                                                isDocument = needDownloadHttpFinal;
                                                if (b < info2.masks.size()) {
                                                    break;
                                                }
                                                ((InputDocument) info2.masks.get(b)).serializeToStream(serializedData);
                                                b++;
                                                needDownloadHttpFinal = isDocument;
                                            }
                                            params2.put("masks", Utilities.bytesToHex(serializedData.toByteArray()));
                                        }
                                        if (originalPath2 != null) {
                                            params2.put("originalPath", originalPath2);
                                        }
                                        if (z2) {
                                            needDownloadHttpFinal = photosCount;
                                        } else {
                                            needDownloadHttpFinal = photosCount + 1;
                                            StringBuilder stringBuilder52 = new StringBuilder();
                                            stringBuilder52.append(TtmlNode.ANONYMOUS_REGION_ID);
                                            stringBuilder52.append(j3);
                                            params2.put("groupId", stringBuilder52.toString());
                                            params2.put("final", "1");
                                            lastGroupId = 0;
                                        }
                                        AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                        boolean photosCount22 = needDownloadHttpFinal;
                                        lastGroupId2 = lastGroupId;
                                    }
                                } else {
                                    if (arrayList != null) {
                                        sendAsDocumentsCaptions3 = arrayList;
                                        sendAsDocumentsEntities4 = sendAsDocumentsEntities2;
                                        sendAsDocumentsCaptions4 = sendAsDocumentsCaptions2;
                                        sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                                    } else {
                                        sendAsDocumentsCaptions3 = new ArrayList();
                                        sendAsDocumentsOriginal3 = new ArrayList();
                                        sendAsDocumentsCaptions4 = new ArrayList();
                                        sendAsDocumentsEntities4 = new ArrayList();
                                    }
                                    sendAsDocumentsCaptions3.add(md5);
                                    sendAsDocumentsOriginal3.add(originalPath2);
                                    sendAsDocumentsCaptions4.add(info2.caption);
                                    sendAsDocumentsEntities4.add(info2.entities);
                                    arrayList = sendAsDocumentsCaptions3;
                                    sendAsDocumentsCaptions3 = sendAsDocumentsCaptions4;
                                    sendAsDocumentsEntities3 = sendAsDocumentsEntities4;
                                    lastGroupId2 = lastGroupId;
                                    hashMap2 = workers2;
                                }
                            } else {
                                if (z) {
                                }
                                videoEditedInfo = videoEditedInfo3;
                                if (z) {
                                    bitmap2 = null;
                                    info3 = info5;
                                    videoEditedInfo2 = videoEditedInfo;
                                    str3 = null;
                                    i2 = 73;
                                    sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                                    z = enryptedLayer;
                                    hashMap = null;
                                    sendAsDocumentsOriginal = isEncrypted;
                                } else {
                                    if (videoEditedInfo == null) {
                                        if (info5.path.endsWith("mp4")) {
                                            bitmap2 = null;
                                            info3 = info5;
                                            videoEditedInfo2 = videoEditedInfo;
                                            str3 = null;
                                            i2 = 73;
                                            sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                                            z = enryptedLayer;
                                            hashMap = null;
                                            sendAsDocumentsOriginal = isEncrypted;
                                        }
                                    }
                                    path = info5.path;
                                    md5 = info5.path;
                                    temp2 = new File(md5);
                                    needDownloadHttp = false;
                                    bitmap2 = null;
                                    bitmap = new StringBuilder();
                                    bitmap.append(md5);
                                    path2 = path;
                                    bitmap.append(temp2.length());
                                    bitmap.append("_");
                                    bitmap.append(temp2.lastModified());
                                    bitmap = bitmap.toString();
                                    if (videoEditedInfo == null) {
                                        lastGroupId2 = 0;
                                        path = bitmap;
                                    } else {
                                        boolean muted3 = videoEditedInfo.muted;
                                        StringBuilder stringBuilder62 = new StringBuilder();
                                        stringBuilder62.append(bitmap);
                                        Bitmap originalPath42 = bitmap;
                                        boolean muted22 = muted3;
                                        stringBuilder62.append(videoEditedInfo.estimatedDuration);
                                        stringBuilder62.append("_");
                                        stringBuilder62.append(videoEditedInfo.startTime);
                                        stringBuilder62.append("_");
                                        stringBuilder62.append(videoEditedInfo.endTime);
                                        if (videoEditedInfo.muted == null) {
                                        }
                                        stringBuilder62.append(videoEditedInfo.muted == null ? "_m" : TtmlNode.ANONYMOUS_REGION_ID);
                                        bitmap = stringBuilder62.toString();
                                        if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                                            stringBuilder3 = new StringBuilder();
                                            stringBuilder3.append(bitmap);
                                            stringBuilder3.append("_");
                                            stringBuilder3.append(videoEditedInfo.resultWidth);
                                            bitmap = stringBuilder3.toString();
                                        }
                                        if (videoEditedInfo.startTime < 0) {
                                        }
                                        path = bitmap;
                                        lastGroupId2 = videoEditedInfo.startTime < 0 ? videoEditedInfo.startTime : 0;
                                        needDownloadHttp = muted22;
                                    }
                                    if (isEncrypted) {
                                    }
                                    bitmap = null;
                                    if (bitmap != null) {
                                        document7 = bitmap;
                                        j5 = lastGroupId2;
                                        isEncrypted2 = isEncrypted;
                                        enryptedLayer4 = enryptedLayer;
                                        bitmap3 = bitmap2;
                                    } else {
                                        thumb = SendMessagesHelper.createVideoThumbnail(info5.path, lastGroupId2);
                                        if (thumb != null) {
                                            document6 = bitmap;
                                            j5 = lastGroupId2;
                                        } else {
                                            document6 = bitmap;
                                            j5 = lastGroupId2;
                                            thumb = ThumbnailUtils.createVideoThumbnail(info5.path, 1);
                                        }
                                        bitmap = ImageLoader.scaleAndSaveImage(thumb, 90.0f, 90.0f, 55, isEncrypted);
                                        thumb = null;
                                        lastGroupId2 = new TL_document();
                                        lastGroupId2.thumb = bitmap;
                                        if (lastGroupId2.thumb != null) {
                                            size = bitmap;
                                            lastGroupId2.thumb.type = "s";
                                        } else {
                                            lastGroupId2.thumb = new TL_photoSizeEmpty();
                                            size = bitmap;
                                            lastGroupId2.thumb.type = "s";
                                        }
                                        lastGroupId2.mime_type = MimeTypes.VIDEO_MP4;
                                        UserConfig.getInstance(i).saveConfig(false);
                                        if (isEncrypted) {
                                            isEncrypted2 = isEncrypted;
                                            isEncrypted = enryptedLayer;
                                            bitmap = new TL_documentAttributeVideo();
                                            enryptedLayer4 = isEncrypted;
                                            bitmap.supports_streaming = true;
                                        } else {
                                            isEncrypted2 = isEncrypted;
                                            isEncrypted = enryptedLayer;
                                            if (isEncrypted < true) {
                                                bitmap = new TL_documentAttributeVideo_layer65();
                                            } else {
                                                bitmap = new TL_documentAttributeVideo();
                                            }
                                            enryptedLayer4 = isEncrypted;
                                        }
                                        lastGroupId2.attributes.add(bitmap);
                                        if (videoEditedInfo == null) {
                                        }
                                        bitmap3 = thumb;
                                        if (temp2.exists()) {
                                            lastGroupId2.size = (int) temp2.length();
                                        }
                                        SendMessagesHelper.fillVideoAttribute(info5.path, bitmap, false);
                                        document7 = lastGroupId2;
                                    }
                                    String originalPathFinal2 = path;
                                    thumb2 = info5;
                                    i2 = 73;
                                    sendAsDocuments2 = sendAsDocumentsOriginal;
                                    final String info62 = path2;
                                    TL_document videoFinal3 = document7;
                                    params3 = new HashMap();
                                    final Bitmap thumbFinal2 = bitmap3;
                                    sendAsDocumentsOriginal2 = sendAsDocuments2;
                                    originalPath = null;
                                    if (path != null) {
                                        params3.put("originalPath", path);
                                    }
                                    if (needDownloadHttp) {
                                    }
                                    info4 = thumb2;
                                    originalPath3 = path;
                                    temp3 = temp2;
                                    String str42 = originalPath3;
                                    info3 = info4;
                                    final VideoEditedInfo videoEditedInfo42 = videoEditedInfo;
                                    z = enryptedLayer4;
                                    hashMap = null;
                                    final SendingMediaInfo sendingMediaInfo22 = info3;
                                    str3 = null;
                                    sendAsDocumentsOriginal = isEncrypted2;
                                    C04934 c049342 = thumb3;
                                    isEncrypted = params3;
                                    final TL_document videoFinal22 = videoFinal3;
                                    C04934 thumb32 = /* anonymous class already generated */;
                                    AndroidUtilities.runOnUIThread(c049342);
                                    info2 = info3;
                                    lastGroupId2 = lastGroupId;
                                    hashMap2 = workers2;
                                }
                                info2 = info3;
                                SendMessagesHelper.prepareSendingDocumentInternal(i, info2.path, info2.path, null, null, j, messageObject, info2.caption, info2.entities);
                                lastGroupId2 = lastGroupId;
                                hashMap2 = workers2;
                            }
                            sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                            sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                            sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                        } else {
                            if (info5.searchImage.type != 1) {
                                sendAsDocumentsEntities2 = sendAsDocumentsEntities3;
                                sendAsDocumentsCaptions2 = sendAsDocumentsCaptions3;
                                enryptedLayer = enryptedLayer3;
                                j2 = beginTime;
                                workers2 = workers3;
                                arrayList = sendAsDocuments;
                                i = a;
                                j3 = lastGroupId2;
                                enryptedLayer2 = true;
                                photo2 = null;
                                if (isEncrypted) {
                                }
                                photo2 = (TL_photo) MessagesStorage.getInstance(i).getSentFile(info5.searchImage.imageUrl, isEncrypted ? 0 : 3);
                                if (photo2 == null) {
                                    md5 = new StringBuilder();
                                    md5.append(Utilities.MD5(info5.searchImage.imageUrl));
                                    md5.append(".");
                                    md5.append(ImageLoader.getHttpUrlExtension(info5.searchImage.imageUrl, "jpg"));
                                    cacheFile5 = new File(FileLoader.getDirectory(4), md5.toString());
                                    photo2 = SendMessagesHelper.getInstance(i).generatePhotoSizes(cacheFile5.toString(), null);
                                    if (photo2 != null) {
                                        enryptedLayer2 = false;
                                    }
                                    if (photo2 == null) {
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append(Utilities.MD5(info5.searchImage.thumbUrl));
                                        stringBuilder2.append(".");
                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(info5.searchImage.thumbUrl, "jpg"));
                                        cacheFile5 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                        if (cacheFile5.exists()) {
                                            photo2 = SendMessagesHelper.getInstance(i).generatePhotoSizes(cacheFile5.toString(), null);
                                        }
                                        if (photo2 == null) {
                                            photo2 = new TL_photo();
                                            photo2.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                            TL_photoSize photoSize2 = new TL_photoSize();
                                            photoSize2.w = info5.searchImage.width;
                                            photoSize2.h = info5.searchImage.height;
                                            photoSize2.size = 0;
                                            photoSize2.location = new TL_fileLocationUnavailable();
                                            photoSize2.type = "x";
                                            photo2.sizes.add(photoSize2);
                                        }
                                    }
                                }
                                needDownloadHttp = enryptedLayer2;
                                beginTime = photo2;
                                if (beginTime != null) {
                                    final TL_photo photoFinal3 = beginTime;
                                    needDownloadHttpFinal = needDownloadHttp;
                                    params = new HashMap();
                                    if (info5.searchImage.imageUrl != null) {
                                        params.put("originalPath", info5.searchImage.imageUrl);
                                    }
                                    if (z2) {
                                        a3 = photosCount + 1;
                                        stringBuilder2 = new StringBuilder();
                                        stringBuilder2.append(TtmlNode.ANONYMOUS_REGION_ID);
                                        stringBuilder2.append(j3);
                                        params.put("groupId", stringBuilder2.toString());
                                        if (a3 != 10) {
                                            if (i == count - 1) {
                                            }
                                            photosCount = a3;
                                        }
                                        params.put("final", "1");
                                        lastGroupId = 0;
                                        photosCount = a3;
                                    }
                                    sendingMediaInfo = info5;
                                    HashMap<String, String> hashMap32 = params;
                                    AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                }
                                lastGroupId2 = lastGroupId;
                                i2 = 73;
                                sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                hashMap2 = workers2;
                                sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                z = enryptedLayer;
                                hashMap = null;
                            } else {
                                params = new HashMap();
                                document2 = null;
                                if (info5.searchImage.document instanceof TL_document) {
                                    sendAsDocumentsEntities = sendAsDocumentsEntities3;
                                    if (isEncrypted) {
                                        j = lastGroupId2;
                                    } else {
                                        MessagesStorage instance3 = MessagesStorage.getInstance(i);
                                        sendAsDocumentsEntities3 = info5.searchImage.imageUrl;
                                        if (isEncrypted) {
                                            j = lastGroupId2;
                                            lastGroupId2 = 4;
                                        } else {
                                            j = lastGroupId2;
                                            lastGroupId2 = 1;
                                        }
                                        document3 = (Document) instance3.getSentFile(sendAsDocumentsEntities3, lastGroupId2);
                                        if ((document3 instanceof TL_document) != null) {
                                            document4 = (TL_document) document3;
                                            sendAsDocumentsEntities3 = new StringBuilder();
                                            sendAsDocumentsEntities3.append(Utilities.MD5(info5.searchImage.imageUrl));
                                            sendAsDocumentsEntities3.append(".");
                                            sendAsDocumentsEntities3.append(ImageLoader.getHttpUrlExtension(info5.searchImage.imageUrl, "jpg"));
                                            document = document4;
                                            cacheFile3 = new File(FileLoader.getDirectory(4), sendAsDocumentsEntities3.toString());
                                        }
                                    }
                                    document4 = document2;
                                    sendAsDocumentsEntities3 = new StringBuilder();
                                    sendAsDocumentsEntities3.append(Utilities.MD5(info5.searchImage.imageUrl));
                                    sendAsDocumentsEntities3.append(".");
                                    sendAsDocumentsEntities3.append(ImageLoader.getHttpUrlExtension(info5.searchImage.imageUrl, "jpg"));
                                    document = document4;
                                    cacheFile3 = new File(FileLoader.getDirectory(4), sendAsDocumentsEntities3.toString());
                                } else {
                                    document4 = (TL_document) info5.searchImage.document;
                                    sendAsDocumentsEntities = sendAsDocumentsEntities3;
                                    document = document4;
                                    j = lastGroupId2;
                                    cacheFile3 = FileLoader.getPathToAttach(document4, true);
                                }
                                cacheFile4 = cacheFile3;
                                if (document != null) {
                                    sendAsDocumentsCaptions = sendAsDocumentsCaptions3;
                                    j2 = beginTime;
                                    cacheFile2 = cacheFile4;
                                } else {
                                    if (info5.searchImage.localUrl != null) {
                                        params.put(UpdateFragment.FRAGMENT_URL, info5.searchImage.localUrl);
                                    }
                                    document5 = new TL_document();
                                    sendAsDocumentsCaptions = sendAsDocumentsCaptions3;
                                    document5.id = 0;
                                    document5.date = ConnectionsManager.getInstance(i).getCurrentTime();
                                    TL_documentAttributeFilename fileName2 = new TL_documentAttributeFilename();
                                    fileName2.file_name = "animation.gif";
                                    document5.attributes.add(fileName2);
                                    document5.size = info5.searchImage.size;
                                    document5.dc_id = 0;
                                    thumbFile = null;
                                    if (cacheFile4.toString().endsWith("mp4") == null) {
                                        document5.mime_type = "image/gif";
                                    } else {
                                        document5.mime_type = MimeTypes.VIDEO_MP4;
                                        document5.attributes.add(new TL_documentAttributeAnimated());
                                    }
                                    if (cacheFile4.exists() == null) {
                                        cacheFile4 = null;
                                        sendAsDocumentsEntities3 = thumbFile;
                                    } else {
                                        sendAsDocumentsEntities3 = cacheFile4;
                                    }
                                    if (sendAsDocumentsEntities3 != null) {
                                        cacheFile = cacheFile4;
                                        thumbFile2 = sendAsDocumentsEntities3;
                                    } else {
                                        stringBuilder2 = new StringBuilder();
                                        cacheFile = cacheFile4;
                                        stringBuilder2.append(Utilities.MD5(info5.searchImage.thumbUrl));
                                        stringBuilder2.append(".");
                                        thumbFile2 = sendAsDocumentsEntities3;
                                        stringBuilder2.append(ImageLoader.getHttpUrlExtension(info5.searchImage.thumbUrl, "jpg"));
                                        sendAsDocumentsEntities3 = new File(FileLoader.getDirectory(4), stringBuilder2.toString());
                                        if (sendAsDocumentsEntities3.exists()) {
                                            sendAsDocumentsEntities3 = null;
                                        }
                                    }
                                    if (sendAsDocumentsEntities3 == null) {
                                        j2 = beginTime;
                                    } else {
                                        if (sendAsDocumentsEntities3.getAbsolutePath().endsWith("mp4")) {
                                            j2 = beginTime;
                                            f = 90.0f;
                                            bitmap = ImageLoader.loadBitmap(sendAsDocumentsEntities3.getAbsolutePath(), 0, 90.0f, 90.0f, true);
                                        } else {
                                            bitmap = ThumbnailUtils.createVideoThumbnail(sendAsDocumentsEntities3.getAbsolutePath(), 1);
                                            j2 = beginTime;
                                            f = 90.0f;
                                        }
                                        if (bitmap != null) {
                                            document5.thumb = ImageLoader.scaleAndSaveImage(bitmap, f, f, 55, isEncrypted);
                                            bitmap.recycle();
                                        }
                                    }
                                    if (document5.thumb == null) {
                                        document5.thumb = new TL_photoSize();
                                        document5.thumb.f43w = info5.searchImage.width;
                                        document5.thumb.f42h = info5.searchImage.height;
                                        document5.thumb.size = 0;
                                        document5.thumb.location = new TL_fileLocationUnavailable();
                                        document5.thumb.type = "x";
                                    }
                                    document = document5;
                                    cacheFile2 = cacheFile;
                                }
                                groupId = j;
                                document5 = document;
                                tempPath = info5.searchImage.imageUrl;
                                if (cacheFile2 == null) {
                                }
                                if (params != null) {
                                }
                                groupId2 = groupId;
                                workers2 = workers3;
                                arrayList = sendAsDocuments;
                                j3 = groupId2;
                                sendAsDocumentsEntities2 = sendAsDocumentsEntities;
                                i = a;
                                sendAsDocumentsCaptions2 = sendAsDocumentsCaptions;
                                sendingMediaInfo = info5;
                                enryptedLayer = enryptedLayer3;
                                AndroidUtilities.runOnUIThread(/* anonymous class already generated */);
                                hashMap = null;
                                lastGroupId2 = lastGroupId;
                                i2 = 73;
                                sendAsDocumentsOriginal3 = sendAsDocumentsOriginal;
                                hashMap2 = workers2;
                                sendAsDocumentsEntities3 = sendAsDocumentsEntities2;
                                sendAsDocumentsCaptions3 = sendAsDocumentsCaptions2;
                                z = enryptedLayer;
                            }
                            sendAsDocumentsOriginal = isEncrypted;
                        }
                        a3 = i + 1;
                        groupId3 = j3;
                        enryptedLayer3 = z;
                        isEncrypted = sendAsDocumentsOriginal;
                        beginTime = j2;
                        sendAsDocuments = arrayList;
                        workers3 = hashMap2;
                        hashMap2 = hashMap;
                    }
                    sendAsDocumentsEntities2 = sendAsDocumentsEntities3;
                    sendAsDocumentsCaptions2 = sendAsDocumentsCaptions3;
                    z = enryptedLayer3;
                    j2 = beginTime;
                    hashMap2 = workers3;
                    arrayList = sendAsDocuments;
                    sendAsDocumentsOriginal2 = sendAsDocumentsOriginal;
                    int a4 = 0;
                    if (lastGroupId2 != 0) {
                        groupId = lastGroupId2;
                        AndroidUtilities.runOnUIThread(new Runnable() {
                            public void run() {
                                SendMessagesHelper instance = SendMessagesHelper.getInstance(i);
                                HashMap access$1000 = instance.delayedMessages;
                                StringBuilder stringBuilder = new StringBuilder();
                                stringBuilder.append("group_");
                                stringBuilder.append(groupId);
                                ArrayList<DelayedMessage> arrayList = (ArrayList) access$1000.get(stringBuilder.toString());
                                if (arrayList != null && !arrayList.isEmpty()) {
                                    DelayedMessage message = (DelayedMessage) arrayList.get(0);
                                    MessageObject prevMessage = (MessageObject) message.messageObjects.get(message.messageObjects.size() - 1);
                                    message.finalGroupMessage = prevMessage.getId();
                                    prevMessage.messageOwner.params.put("final", "1");
                                    messages_Messages messagesRes = new TL_messages_messages();
                                    messagesRes.messages.add(prevMessage.messageOwner);
                                    MessagesStorage.getInstance(i).putMessages(messagesRes, message.peer, -2, 0, false);
                                    instance.sendReadyToSendGroup(message, true, true);
                                }
                            }
                        });
                    }
                    if (inputContentInfoCompat != null) {
                        inputContentInfoCompat.releasePermission();
                    }
                    if (arrayList != null) {
                        sendAsDocumentsCaptions3 = arrayList;
                        if (!sendAsDocumentsCaptions3.isEmpty()) {
                            while (true) {
                                a3 = a4;
                                if (a3 >= sendAsDocumentsCaptions3.size()) {
                                    break;
                                }
                                SendMessagesHelper.prepareSendingDocumentInternal(i, (String) sendAsDocumentsCaptions3.get(a3), (String) sendAsDocumentsOriginal2.get(a3), null, extension, j, messageObject, (CharSequence) sendAsDocumentsCaptions2.get(a3), (ArrayList) sendAsDocumentsEntities2.get(a3));
                                a4 = a3 + 1;
                            }
                        }
                        sendAsDocuments = sendAsDocumentsCaptions2;
                        sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                    } else {
                        ArrayList<ArrayList<MessageEntity>> arrayList2 = sendAsDocumentsEntities2;
                        sendAsDocuments = sendAsDocumentsCaptions2;
                        sendAsDocumentsOriginal3 = sendAsDocumentsOriginal2;
                    }
                    if (BuildVars.LOGS_ENABLED) {
                        StringBuilder stringBuilder7 = new StringBuilder();
                        stringBuilder7.append("total send time = ");
                        stringBuilder7.append(System.currentTimeMillis() - j2);
                        FileLog.m0d(stringBuilder7.toString());
                        return;
                    }
                }
            });
        }
    }

    private static void fillVideoAttribute(String videoPath, TL_documentAttributeVideo attributeVideo, VideoEditedInfo videoEditedInfo) {
        boolean infoObtained = false;
        MediaMetadataRetriever mediaMetadataRetriever = null;
        try {
            mediaMetadataRetriever = new MediaMetadataRetriever();
            mediaMetadataRetriever.setDataSource(videoPath);
            String width = mediaMetadataRetriever.extractMetadata(18);
            if (width != null) {
                attributeVideo.w = Integer.parseInt(width);
            }
            String height = mediaMetadataRetriever.extractMetadata(19);
            if (height != null) {
                attributeVideo.h = Integer.parseInt(height);
            }
            String duration = mediaMetadataRetriever.extractMetadata(9);
            if (duration != null) {
                attributeVideo.duration = (int) Math.ceil((double) (((float) Long.parseLong(duration)) / 1000.0f));
            }
            if (VERSION.SDK_INT >= 17) {
                String rotation = mediaMetadataRetriever.extractMetadata(24);
                if (rotation != null) {
                    int val = Utilities.parseInt(rotation).intValue();
                    if (videoEditedInfo != null) {
                        videoEditedInfo.rotationValue = val;
                    } else if (val == 90 || val == 270) {
                        int temp = attributeVideo.w;
                        attributeVideo.w = attributeVideo.h;
                        attributeVideo.h = temp;
                    }
                }
            }
            infoObtained = true;
            if (mediaMetadataRetriever != null) {
                try {
                    mediaMetadataRetriever.release();
                } catch (Throwable e) {
                    FileLog.m3e(e);
                }
            }
        } catch (Throwable e2) {
            FileLog.m3e(e2);
            if (mediaMetadataRetriever != null) {
                mediaMetadataRetriever.release();
            }
        } catch (Throwable th) {
            if (mediaMetadataRetriever != null) {
                try {
                    mediaMetadataRetriever.release();
                } catch (Throwable e22) {
                    FileLog.m3e(e22);
                }
            }
        }
        if (!infoObtained) {
            try {
                MediaPlayer mp = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(videoPath)));
                if (mp != null) {
                    attributeVideo.duration = (int) Math.ceil((double) (((float) mp.getDuration()) / 1000.0f));
                    attributeVideo.w = mp.getVideoWidth();
                    attributeVideo.h = mp.getVideoHeight();
                    mp.release();
                }
            } catch (Throwable e3) {
                FileLog.m3e(e3);
            }
        }
    }

    private static Bitmap createVideoThumbnail(String filePath, long time) {
        int width;
        int height;
        int max;
        Bitmap scaled;
        Bitmap bitmap = null;
        MediaMetadataRetriever retriever = new MediaMetadataRetriever();
        try {
            retriever.setDataSource(filePath);
            bitmap = retriever.getFrameAtTime(time, 1);
        } catch (Exception e) {
            if (bitmap == null) {
                return null;
            }
            width = bitmap.getWidth();
            height = bitmap.getHeight();
            max = Math.max(width, height);
            if (max > 90) {
                float scale = 90.0f / ((float) max);
                scaled = Bitmaps.createScaledBitmap(bitmap, Math.round(((float) width) * scale), Math.round(((float) height) * scale), true);
                if (scaled != bitmap) {
                    bitmap.recycle();
                    bitmap = scaled;
                }
            }
            return bitmap;
        } finally {
            try {
                retriever.release();
            } catch (RuntimeException e2) {
            }
        }
        if (bitmap == null) {
            return null;
        }
        width = bitmap.getWidth();
        height = bitmap.getHeight();
        max = Math.max(width, height);
        if (max > 90) {
            float scale2 = 90.0f / ((float) max);
            scaled = Bitmaps.createScaledBitmap(bitmap, Math.round(((float) width) * scale2), Math.round(((float) height) * scale2), true);
            if (scaled != bitmap) {
                bitmap.recycle();
                bitmap = scaled;
            }
        }
        return bitmap;
    }

    private static VideoEditedInfo createCompressionSettings(String videoPath) {
        long audioFramesSize;
        float videoDuration;
        int bitrate;
        Throwable e;
        IsoFile isoFile;
        List<Box> list;
        float videoDuration2;
        TrackHeaderBox headerBox;
        int i;
        String str = videoPath;
        long audioFramesSize2 = 0;
        int bitrate2;
        Throwable th;
        try {
            IsoFile isoFile2 = new IsoFile(str);
            List<Box> boxes = Path.getPaths(isoFile2, "/moov/trak/");
            if (Path.getPath(isoFile2, "/moov/trak/mdia/minf/stbl/stsd/mp4a/") == null && BuildVars.LOGS_ENABLED) {
                FileLog.m0d("video hasn't mp4a atom");
            }
            Box boxTest = Path.getPath(isoFile2, "/moov/trak/mdia/minf/stbl/stsd/avc1/");
            if (boxTest == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.m0d("video hasn't avc1 atom");
                }
                return null;
            }
            int a;
            int i2;
            audioFramesSize = audioFramesSize2;
            audioFramesSize2 = 0;
            videoDuration = 0.0f;
            bitrate2 = 0;
            bitrate = 0;
            int originalBitrate = 0;
            int b = 0;
            while (b < boxes.size()) {
                try {
                    Box boxTest2;
                    long trackBitrate;
                    Box box = (Box) boxes.get(b);
                    long sampleSizes = 0;
                    long trackBitrate2 = 0;
                    TrackBox trackBox = (TrackBox) box;
                    try {
                        MediaHeaderBox boxTest3;
                        MediaBox mediaBox = trackBox.getMediaBox();
                        MediaHeaderBox mediaHeaderBox = mediaBox.getMediaHeaderBox();
                        try {
                            SampleSizeBox sampleSizeBox = mediaBox.getMediaInformationBox().getSampleTableBox().getSampleSizeBox();
                            long[] sizes = sampleSizeBox.getSampleSizes();
                            int a2 = 0;
                            while (true) {
                                SampleSizeBox sampleSizeBox2 = sampleSizeBox;
                                boxTest2 = boxTest;
                                long[] sizes2 = sizes;
                                try {
                                    MediaBox mediaBox2 = mediaBox;
                                    a = a2;
                                    if (a >= sizes2.length) {
                                        break;
                                    }
                                    try {
                                        a2 = a + 1;
                                        sampleSizes += sizes2[a];
                                        boxTest = boxTest2;
                                        mediaBox = mediaBox2;
                                        sizes = sizes2;
                                        sampleSizeBox = sampleSizeBox2;
                                    } catch (Throwable e2) {
                                        e = e2;
                                        isoFile = isoFile2;
                                        list = boxes;
                                    }
                                } catch (Throwable e22) {
                                    isoFile = isoFile2;
                                    list = boxes;
                                    e = e22;
                                }
                            }
                            isoFile = isoFile2;
                            boxTest3 = mediaHeaderBox;
                        } catch (Throwable e222) {
                            boxTest2 = boxTest;
                            isoFile = isoFile2;
                            list = boxes;
                            e = e222;
                            try {
                                FileLog.m3e(e);
                                videoDuration2 = videoDuration;
                                trackBitrate = trackBitrate2;
                                headerBox = trackBox.getTrackHeaderBox();
                                if (headerBox.getWidth() != 0.0d) {
                                }
                                audioFramesSize += sampleSizes;
                                b++;
                                videoDuration = videoDuration2;
                                boxTest = boxTest2;
                                isoFile2 = isoFile;
                                boxes = list;
                            } catch (Throwable e2222) {
                                th = e2222;
                                videoDuration2 = videoDuration;
                            }
                        }
                        try {
                            list = boxes;
                        } catch (Throwable e22222) {
                            list = boxes;
                            e = e22222;
                            FileLog.m3e(e);
                            videoDuration2 = videoDuration;
                            trackBitrate = trackBitrate2;
                            headerBox = trackBox.getTrackHeaderBox();
                            if (headerBox.getWidth() != 0.0d) {
                            }
                            audioFramesSize += sampleSizes;
                            b++;
                            videoDuration = videoDuration2;
                            boxTest = boxTest2;
                            isoFile2 = isoFile;
                            boxes = list;
                        }
                        try {
                            videoDuration2 = ((float) boxTest3.getDuration()) / ((float) boxTest3.getTimescale());
                            trackBitrate = (long) ((int) (((float) (8 * sampleSizes)) / videoDuration2));
                        } catch (Throwable e222222) {
                            e = e222222;
                            FileLog.m3e(e);
                            videoDuration2 = videoDuration;
                            trackBitrate = trackBitrate2;
                            headerBox = trackBox.getTrackHeaderBox();
                            if (headerBox.getWidth() != 0.0d) {
                            }
                            audioFramesSize += sampleSizes;
                            b++;
                            videoDuration = videoDuration2;
                            boxTest = boxTest2;
                            isoFile2 = isoFile;
                            boxes = list;
                        }
                    } catch (Throwable e2222222) {
                        Box box2 = box;
                        boxTest2 = boxTest;
                        isoFile = isoFile2;
                        list = boxes;
                        e = e2222222;
                        FileLog.m3e(e);
                        videoDuration2 = videoDuration;
                        trackBitrate = trackBitrate2;
                        headerBox = trackBox.getTrackHeaderBox();
                        if (headerBox.getWidth() != 0.0d) {
                        }
                        audioFramesSize += sampleSizes;
                        b++;
                        videoDuration = videoDuration2;
                        boxTest = boxTest2;
                        isoFile2 = isoFile;
                        boxes = list;
                    }
                    try {
                        headerBox = trackBox.getTrackHeaderBox();
                        if (headerBox.getWidth() != 0.0d || headerBox.getHeight() == 0.0d) {
                            audioFramesSize += sampleSizes;
                        } else if (originalBitrate == 0 || originalBitrate.getWidth() < headerBox.getWidth() || originalBitrate.getHeight() < headerBox.getHeight()) {
                            originalBitrate = headerBox;
                            i2 = (int) (100000 * (trackBitrate / 100000));
                            bitrate2 = i2;
                            bitrate = i2;
                            if (bitrate2 > 900000) {
                                bitrate2 = 900000;
                            }
                            audioFramesSize2 += sampleSizes;
                        }
                        b++;
                        videoDuration = videoDuration2;
                        boxTest = boxTest2;
                        isoFile2 = isoFile;
                        boxes = list;
                    } catch (Throwable e22222222) {
                        th = e22222222;
                    }
                } catch (Throwable e222222222) {
                    Object obj = originalBitrate;
                    i = bitrate;
                    th = e222222222;
                    videoDuration2 = videoDuration;
                }
            }
            if (originalBitrate == 0) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.m0d("video hasn't trackHeaderBox atom");
                }
                return null;
            }
            float maxSize;
            int targetBitrate;
            TrackHeaderBox trackHeaderBox;
            Matrix matrix;
            int i3;
            SharedPreferences sharedPreferences;
            if (VERSION.SDK_INT < 18) {
                try {
                    MediaCodecInfo codecInfo = MediaController.selectCodec("video/avc");
                    if (codecInfo == null) {
                        if (BuildVars.LOGS_ENABLED) {
                            FileLog.m0d("no codec info for video/avc");
                        }
                        return null;
                    }
                    String name = codecInfo.getName();
                    if (!(name.equals("OMX.google.h264.encoder") || name.equals("OMX.ST.VFM.H264Enc") || name.equals("OMX.Exynos.avc.enc") || name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") || name.equals("OMX.MARVELL.VIDEO.H264ENCODER") || name.equals("OMX.k3.video.encoder.avc"))) {
                        if (!name.equals("OMX.TI.DUCATI1.VIDEO.H264E")) {
                            if (MediaController.selectColorFormat(codecInfo, "video/avc") == 0) {
                                if (BuildVars.LOGS_ENABLED) {
                                    FileLog.m0d("no color format for video/avc");
                                }
                                return null;
                            }
                        }
                    }
                    if (BuildVars.LOGS_ENABLED) {
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("unsupported encoder = ");
                        stringBuilder.append(name);
                        FileLog.m0d(stringBuilder.toString());
                    }
                    return null;
                } catch (Exception e3) {
                    return null;
                }
            }
            videoDuration *= 1000.0f;
            VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
            videoEditedInfo.startTime = -1;
            videoEditedInfo.endTime = -1;
            videoEditedInfo.bitrate = bitrate2;
            videoEditedInfo.originalPath = str;
            videoEditedInfo.estimatedDuration = (long) Math.ceil((double) videoDuration);
            int width = (int) originalBitrate.getWidth();
            videoEditedInfo.originalWidth = width;
            videoEditedInfo.resultWidth = width;
            width = (int) originalBitrate.getHeight();
            videoEditedInfo.originalHeight = width;
            videoEditedInfo.resultHeight = width;
            Matrix matrix2 = originalBitrate.getMatrix();
            if (matrix2.equals(Matrix.ROTATE_90)) {
                videoEditedInfo.rotationValue = 90;
            } else if (matrix2.equals(Matrix.ROTATE_180)) {
                videoEditedInfo.rotationValue = 180;
            } else if (matrix2.equals(Matrix.ROTATE_270)) {
                videoEditedInfo.rotationValue = 270;
            } else {
                videoEditedInfo.rotationValue = 0;
            }
            SharedPreferences preferences = MessagesController.getGlobalMainSettings();
            a = preferences.getInt("compress_video2", 1);
            if (videoEditedInfo.originalWidth <= 1280) {
                if (videoEditedInfo.originalHeight <= 1280) {
                    if (videoEditedInfo.originalWidth <= 848) {
                        if (videoEditedInfo.originalHeight <= 848) {
                            if (videoEditedInfo.originalWidth <= 640) {
                                if (videoEditedInfo.originalHeight <= 640) {
                                    if (videoEditedInfo.originalWidth <= 480) {
                                        if (videoEditedInfo.originalHeight <= 480) {
                                            i2 = 1;
                                            if (a >= i2) {
                                                a = i2 - 1;
                                            }
                                            if (a != i2 - 1) {
                                                switch (a) {
                                                    case 0:
                                                        maxSize = 432.0f;
                                                        targetBitrate = 400000;
                                                        break;
                                                    case 1:
                                                        maxSize = 640.0f;
                                                        targetBitrate = 900000;
                                                        break;
                                                    case 2:
                                                        maxSize = 848.0f;
                                                        targetBitrate = 1100000;
                                                        break;
                                                    default:
                                                        targetBitrate = 2500000;
                                                        maxSize = 1280.0f;
                                                        break;
                                                }
                                                b = targetBitrate;
                                                trackHeaderBox = originalBitrate;
                                                originalBitrate = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
                                                videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * originalBitrate) / 2.0f) * 2;
                                                videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * originalBitrate) / 2.0f) * 2;
                                                if (bitrate2 != 0) {
                                                    bitrate2 = Math.min(b, (int) (((float) bitrate) / originalBitrate));
                                                    audioFramesSize2 = (long) ((((float) (bitrate2 / 8)) * videoDuration) / 1000.0f);
                                                }
                                            } else {
                                                trackHeaderBox = originalBitrate;
                                                matrix = matrix2;
                                            }
                                            if (a == i2 - 1) {
                                                videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
                                                videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
                                                videoEditedInfo.bitrate = bitrate;
                                                videoEditedInfo.estimatedSize = (long) ((int) new File(str).length());
                                                i = bitrate;
                                                i3 = bitrate2;
                                                sharedPreferences = preferences;
                                            } else {
                                                videoEditedInfo.bitrate = bitrate2;
                                                videoEditedInfo.estimatedSize = (long) ((int) (audioFramesSize + audioFramesSize2));
                                                i = bitrate;
                                                i3 = bitrate2;
                                                videoEditedInfo.estimatedSize += (videoEditedInfo.estimatedSize / 32768) * 16;
                                            }
                                            return videoEditedInfo;
                                        }
                                    }
                                    i2 = 2;
                                    if (a >= i2) {
                                        a = i2 - 1;
                                    }
                                    if (a != i2 - 1) {
                                        trackHeaderBox = originalBitrate;
                                        matrix = matrix2;
                                    } else {
                                        switch (a) {
                                            case 0:
                                                maxSize = 432.0f;
                                                targetBitrate = 400000;
                                                break;
                                            case 1:
                                                maxSize = 640.0f;
                                                targetBitrate = 900000;
                                                break;
                                            case 2:
                                                maxSize = 848.0f;
                                                targetBitrate = 1100000;
                                                break;
                                            default:
                                                targetBitrate = 2500000;
                                                maxSize = 1280.0f;
                                                break;
                                        }
                                        b = targetBitrate;
                                        trackHeaderBox = originalBitrate;
                                        if (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight) {
                                        }
                                        originalBitrate = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
                                        videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * originalBitrate) / 2.0f) * 2;
                                        videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * originalBitrate) / 2.0f) * 2;
                                        if (bitrate2 != 0) {
                                            bitrate2 = Math.min(b, (int) (((float) bitrate) / originalBitrate));
                                            audioFramesSize2 = (long) ((((float) (bitrate2 / 8)) * videoDuration) / 1000.0f);
                                        }
                                    }
                                    if (a == i2 - 1) {
                                        videoEditedInfo.bitrate = bitrate2;
                                        videoEditedInfo.estimatedSize = (long) ((int) (audioFramesSize + audioFramesSize2));
                                        i = bitrate;
                                        i3 = bitrate2;
                                        videoEditedInfo.estimatedSize += (videoEditedInfo.estimatedSize / 32768) * 16;
                                    } else {
                                        videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
                                        videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
                                        videoEditedInfo.bitrate = bitrate;
                                        videoEditedInfo.estimatedSize = (long) ((int) new File(str).length());
                                        i = bitrate;
                                        i3 = bitrate2;
                                        sharedPreferences = preferences;
                                    }
                                    return videoEditedInfo;
                                }
                            }
                            i2 = 3;
                            if (a >= i2) {
                                a = i2 - 1;
                            }
                            if (a != i2 - 1) {
                                switch (a) {
                                    case 0:
                                        maxSize = 432.0f;
                                        targetBitrate = 400000;
                                        break;
                                    case 1:
                                        maxSize = 640.0f;
                                        targetBitrate = 900000;
                                        break;
                                    case 2:
                                        maxSize = 848.0f;
                                        targetBitrate = 1100000;
                                        break;
                                    default:
                                        targetBitrate = 2500000;
                                        maxSize = 1280.0f;
                                        break;
                                }
                                b = targetBitrate;
                                trackHeaderBox = originalBitrate;
                                if (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight) {
                                }
                                originalBitrate = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
                                videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * originalBitrate) / 2.0f) * 2;
                                videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * originalBitrate) / 2.0f) * 2;
                                if (bitrate2 != 0) {
                                    bitrate2 = Math.min(b, (int) (((float) bitrate) / originalBitrate));
                                    audioFramesSize2 = (long) ((((float) (bitrate2 / 8)) * videoDuration) / 1000.0f);
                                }
                            } else {
                                trackHeaderBox = originalBitrate;
                                matrix = matrix2;
                            }
                            if (a == i2 - 1) {
                                videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
                                videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
                                videoEditedInfo.bitrate = bitrate;
                                videoEditedInfo.estimatedSize = (long) ((int) new File(str).length());
                                i = bitrate;
                                i3 = bitrate2;
                                sharedPreferences = preferences;
                            } else {
                                videoEditedInfo.bitrate = bitrate2;
                                videoEditedInfo.estimatedSize = (long) ((int) (audioFramesSize + audioFramesSize2));
                                i = bitrate;
                                i3 = bitrate2;
                                videoEditedInfo.estimatedSize += (videoEditedInfo.estimatedSize / 32768) * 16;
                            }
                            return videoEditedInfo;
                        }
                    }
                    i2 = 4;
                    if (a >= i2) {
                        a = i2 - 1;
                    }
                    if (a != i2 - 1) {
                        trackHeaderBox = originalBitrate;
                        matrix = matrix2;
                    } else {
                        switch (a) {
                            case 0:
                                maxSize = 432.0f;
                                targetBitrate = 400000;
                                break;
                            case 1:
                                maxSize = 640.0f;
                                targetBitrate = 900000;
                                break;
                            case 2:
                                maxSize = 848.0f;
                                targetBitrate = 1100000;
                                break;
                            default:
                                targetBitrate = 2500000;
                                maxSize = 1280.0f;
                                break;
                        }
                        b = targetBitrate;
                        trackHeaderBox = originalBitrate;
                        if (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight) {
                        }
                        originalBitrate = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
                        videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * originalBitrate) / 2.0f) * 2;
                        videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * originalBitrate) / 2.0f) * 2;
                        if (bitrate2 != 0) {
                            bitrate2 = Math.min(b, (int) (((float) bitrate) / originalBitrate));
                            audioFramesSize2 = (long) ((((float) (bitrate2 / 8)) * videoDuration) / 1000.0f);
                        }
                    }
                    if (a == i2 - 1) {
                        videoEditedInfo.bitrate = bitrate2;
                        videoEditedInfo.estimatedSize = (long) ((int) (audioFramesSize + audioFramesSize2));
                        i = bitrate;
                        i3 = bitrate2;
                        videoEditedInfo.estimatedSize += (videoEditedInfo.estimatedSize / 32768) * 16;
                    } else {
                        videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
                        videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
                        videoEditedInfo.bitrate = bitrate;
                        videoEditedInfo.estimatedSize = (long) ((int) new File(str).length());
                        i = bitrate;
                        i3 = bitrate2;
                        sharedPreferences = preferences;
                    }
                    return videoEditedInfo;
                }
            }
            i2 = 5;
            if (a >= i2) {
                a = i2 - 1;
            }
            if (a != i2 - 1) {
                switch (a) {
                    case 0:
                        maxSize = 432.0f;
                        targetBitrate = 400000;
                        break;
                    case 1:
                        maxSize = 640.0f;
                        targetBitrate = 900000;
                        break;
                    case 2:
                        maxSize = 848.0f;
                        targetBitrate = 1100000;
                        break;
                    default:
                        targetBitrate = 2500000;
                        maxSize = 1280.0f;
                        break;
                }
                b = targetBitrate;
                trackHeaderBox = originalBitrate;
                if (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight) {
                }
                originalBitrate = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
                videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * originalBitrate) / 2.0f) * 2;
                videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * originalBitrate) / 2.0f) * 2;
                if (bitrate2 != 0) {
                    bitrate2 = Math.min(b, (int) (((float) bitrate) / originalBitrate));
                    audioFramesSize2 = (long) ((((float) (bitrate2 / 8)) * videoDuration) / 1000.0f);
                }
            } else {
                trackHeaderBox = originalBitrate;
                matrix = matrix2;
            }
            if (a == i2 - 1) {
                videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
                videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
                videoEditedInfo.bitrate = bitrate;
                videoEditedInfo.estimatedSize = (long) ((int) new File(str).length());
                i = bitrate;
                i3 = bitrate2;
                sharedPreferences = preferences;
            } else {
                videoEditedInfo.bitrate = bitrate2;
                videoEditedInfo.estimatedSize = (long) ((int) (audioFramesSize + audioFramesSize2));
                i = bitrate;
                i3 = bitrate2;
                videoEditedInfo.estimatedSize += (videoEditedInfo.estimatedSize / 32768) * 16;
            }
            return videoEditedInfo;
            videoDuration = audioFramesSize2;
            audioFramesSize2 = audioFramesSize;
            FileLog.m3e(th);
            return null;
        } catch (Throwable eNUM) {
            videoDuration2 = 0.0f;
            bitrate2 = 0;
            bitrate = 0;
            TrackHeaderBox trackHeaderBox2 = null;
            th = eNUM;
            FileLog.m3e(th);
            return null;
        }
    }

    public static void prepareSendingVideo(String videoPath, long estimatedSize, long duration, int width, int height, VideoEditedInfo info, long dialog_id, MessageObject reply_to_msg, CharSequence caption, ArrayList<MessageEntity> entities, int ttl) {
        if (videoPath != null) {
            if (videoPath.length() != 0) {
                final VideoEditedInfo videoEditedInfo = info;
                final String str = videoPath;
                final long j = dialog_id;
                final long j2 = duration;
                final int i = ttl;
                final int i2 = UserConfig.selectedAccount;
                final int i3 = height;
                final int i4 = width;
                final long j3 = estimatedSize;
                final CharSequence charSequence = caption;
                AnonymousClass22 anonymousClass22 = r0;
                final MessageObject messageObject = reply_to_msg;
                final ArrayList<MessageEntity> arrayList = entities;
                AnonymousClass22 anonymousClass222 = new Runnable() {
                    public void run() {
                        String str;
                        Bitmap thumb;
                        String fileName;
                        Bitmap thumb2;
                        TL_document document;
                        String path;
                        VideoEditedInfo videoEditedInfo = videoEditedInfo != null ? videoEditedInfo : SendMessagesHelper.createCompressionSettings(str);
                        boolean isEncrypted = ((int) j) == 0;
                        boolean z = videoEditedInfo != null && videoEditedInfo.roundVideo;
                        boolean isRound = z;
                        String thumbKey = null;
                        if (videoEditedInfo == null && !str.endsWith("mp4")) {
                            if (!isRound) {
                                SendMessagesHelper.prepareSendingDocumentInternal(i2, str, str, null, null, j, messageObject, charSequence, arrayList);
                                str = null;
                            }
                        }
                        String path2 = str;
                        String originalPath = str;
                        File temp = new File(originalPath);
                        long startTime = 0;
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append(originalPath);
                        stringBuilder.append(temp.length());
                        stringBuilder.append("_");
                        stringBuilder.append(temp.lastModified());
                        originalPath = stringBuilder.toString();
                        if (videoEditedInfo != null) {
                            if (!isRound) {
                                stringBuilder = new StringBuilder();
                                stringBuilder.append(originalPath);
                                stringBuilder.append(j2);
                                stringBuilder.append("_");
                                stringBuilder.append(videoEditedInfo.startTime);
                                stringBuilder.append("_");
                                stringBuilder.append(videoEditedInfo.endTime);
                                stringBuilder.append(videoEditedInfo.muted ? "_m" : TtmlNode.ANONYMOUS_REGION_ID);
                                originalPath = stringBuilder.toString();
                                if (videoEditedInfo.resultWidth != videoEditedInfo.originalWidth) {
                                    stringBuilder = new StringBuilder();
                                    stringBuilder.append(originalPath);
                                    stringBuilder.append("_");
                                    stringBuilder.append(videoEditedInfo.resultWidth);
                                    originalPath = stringBuilder.toString();
                                }
                            }
                            startTime = videoEditedInfo.startTime >= 0 ? videoEditedInfo.startTime : 0;
                        }
                        String originalPath2 = originalPath;
                        long startTime2 = startTime;
                        TL_document document2 = null;
                        if (!isEncrypted && i == 0) {
                            document2 = (TL_document) MessagesStorage.getInstance(i2).getSentFile(originalPath2, !isEncrypted ? 2 : 5);
                        }
                        long j;
                        if (document2 == null) {
                            thumb = SendMessagesHelper.createVideoThumbnail(str, startTime2);
                            if (thumb == null) {
                                thumb = ThumbnailUtils.createVideoThumbnail(str, 1);
                            }
                            PhotoSize size = ImageLoader.scaleAndSaveImage(thumb, 90.0f, 90.0f, 55, isEncrypted);
                            if (thumb == null || size == null) {
                                j = startTime2;
                            } else if (!isRound) {
                                j = startTime2;
                                thumb = null;
                            } else if (isEncrypted) {
                                Utilities.blurBitmap(thumb, 7, VERSION.SDK_INT < 21 ? 0 : 1, thumb.getWidth(), thumb.getHeight(), thumb.getRowBytes());
                                r2 = new StringBuilder();
                                j = startTime2;
                                r2.append(size.location.volume_id);
                                r2.append("_");
                                r2.append(size.location.local_id);
                                r2.append("@%d_%d_b2");
                                thumbKey = String.format(r2.toString(), new Object[]{Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density)), Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density))});
                            } else {
                                j = startTime2;
                                Utilities.blurBitmap(thumb, 3, VERSION.SDK_INT < 21 ? 0 : 1, thumb.getWidth(), thumb.getHeight(), thumb.getRowBytes());
                                r2 = new StringBuilder();
                                r2.append(size.location.volume_id);
                                r2.append("_");
                                r2.append(size.location.local_id);
                                r2.append("@%d_%d_b");
                                thumbKey = String.format(r2.toString(), new Object[]{Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density)), Integer.valueOf((int) (((float) AndroidUtilities.roundMessageSize) / AndroidUtilities.density))});
                            }
                            TL_document tL_document = new TL_document();
                            tL_document.thumb = size;
                            if (tL_document.thumb == null) {
                                tL_document.thumb = new TL_photoSizeEmpty();
                                tL_document.thumb.type = "s";
                            } else {
                                tL_document.thumb.type = "s";
                            }
                            tL_document.mime_type = MimeTypes.VIDEO_MP4;
                            UserConfig.getInstance(i2).saveConfig(false);
                            if (isEncrypted) {
                                EncryptedChat encryptedChat = MessagesController.getInstance(i2).getEncryptedChat(Integer.valueOf((int) (j >> 32)));
                                if (encryptedChat != null) {
                                    if (AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 66) {
                                        startTime2 = new TL_documentAttributeVideo();
                                    } else {
                                        startTime2 = new TL_documentAttributeVideo_layer65();
                                    }
                                    document2 = startTime2;
                                } else {
                                    return;
                                }
                            }
                            document2 = new TL_documentAttributeVideo();
                            document2.supports_streaming = true;
                            document2.round_message = isRound;
                            tL_document.attributes.add(document2);
                            if (videoEditedInfo == null || !videoEditedInfo.needConvert()) {
                                if (temp.exists()) {
                                    tL_document.size = (int) temp.length();
                                }
                                SendMessagesHelper.fillVideoAttribute(str, document2, 0);
                            } else {
                                if (videoEditedInfo.muted) {
                                    tL_document.attributes.add(new TL_documentAttributeAnimated());
                                    SendMessagesHelper.fillVideoAttribute(str, document2, videoEditedInfo);
                                    videoEditedInfo.originalWidth = document2.w;
                                    videoEditedInfo.originalHeight = document2.h;
                                    document2.w = videoEditedInfo.resultWidth;
                                    document2.h = videoEditedInfo.resultHeight;
                                } else {
                                    document2.duration = (int) (j2 / 1000);
                                    if (videoEditedInfo.rotationValue != 90) {
                                        if (videoEditedInfo.rotationValue != 270) {
                                            document2.w = i4;
                                            document2.h = i3;
                                        }
                                    }
                                    document2.w = i3;
                                    document2.h = i4;
                                }
                                tL_document.size = (int) j3;
                                fileName = new StringBuilder();
                                fileName.append("-2147483648_");
                                fileName.append(SharedConfig.getLastLocalId());
                                fileName.append(".mp4");
                                startTime2 = new File(FileLoader.getDirectory(4), fileName.toString());
                                SharedConfig.saveConfig();
                                path2 = startTime2.getAbsolutePath();
                            }
                            thumb2 = thumb;
                            document = tL_document;
                            str = thumbKey;
                            path = path2;
                        } else {
                            j = startTime2;
                            thumb2 = null;
                            str = null;
                            path = path2;
                            document = document2;
                        }
                        final TL_document videoFinal = document;
                        String originalPathFinal = originalPath2;
                        fileName = path;
                        final HashMap<String, String> params = new HashMap();
                        final Bitmap thumbFinal = thumb2;
                        thumbKey = str;
                        final String captionFinal = charSequence != null ? charSequence.toString() : TtmlNode.ANONYMOUS_REGION_ID;
                        if (originalPath2 != null) {
                            params.put("originalPath", originalPath2);
                        }
                        C04961 c04961 = r0;
                        final VideoEditedInfo videoEditedInfo2 = videoEditedInfo;
                        C04961 c049612 = new Runnable() {
                            public void run() {
                                if (!(thumbFinal == null || thumbKey == null)) {
                                    ImageLoader.getInstance().putImageToCache(new BitmapDrawable(thumbFinal), thumbKey);
                                }
                                SendMessagesHelper.getInstance(i2).sendMessage(videoFinal, videoEditedInfo2, fileName, j, messageObject, captionFinal, arrayList, null, params, i);
                            }
                        };
                        AndroidUtilities.runOnUIThread(c04961);
                        thumb = thumb2;
                    }
                };
                new Thread(anonymousClass22).start();
            }
        }
    }
}
