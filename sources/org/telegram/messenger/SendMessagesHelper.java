package org.telegram.messenger;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaCodecInfo;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.TextUtils;
import android.util.SparseArray;
import android.util.SparseIntArray;
import android.webkit.MimeTypeMap;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.LongSparseArray;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.json.JSONObject;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.Point;
import org.telegram.ui.PaymentFormActivity;
import org.telegram.ui.TwoStepVerificationActivity;

public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
    private static volatile SendMessagesHelper[] Instance = new SendMessagesHelper[3];
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    /* access modifiers changed from: private */
    public HashMap<String, ArrayList<DelayedMessage>> delayedMessages = new HashMap<>();
    private SparseArray<TLRPC.Message> editingMessages = new SparseArray<>();
    private HashMap<String, ImportingHistory> importingHistoryFiles = new HashMap<>();
    /* access modifiers changed from: private */
    public LongSparseArray<ImportingHistory> importingHistoryMap = new LongSparseArray<>();
    private HashMap<String, ImportingStickers> importingStickersFiles = new HashMap<>();
    /* access modifiers changed from: private */
    public HashMap<String, ImportingStickers> importingStickersMap = new HashMap<>();
    private LocationProvider locationProvider = new LocationProvider(new LocationProvider.LocationProviderDelegate() {
        public void onLocationAcquired(Location location) {
            SendMessagesHelper.this.sendLocation(location);
            SendMessagesHelper.this.waitingForLocation.clear();
        }

        public void onUnableLocationAcquire() {
            HashMap<String, MessageObject> waitingForLocationCopy = new HashMap<>(SendMessagesHelper.this.waitingForLocation);
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, waitingForLocationCopy);
            SendMessagesHelper.this.waitingForLocation.clear();
        }
    });
    private SparseArray<TLRPC.Message> sendingMessages = new SparseArray<>();
    private LongSparseArray<Integer> sendingMessagesIdDialogs = new LongSparseArray<>();
    private SparseArray<MessageObject> unsentMessages = new SparseArray<>();
    private SparseArray<TLRPC.Message> uploadMessages = new SparseArray<>();
    private LongSparseArray<Integer> uploadingMessagesIdDialogs = new LongSparseArray<>();
    private LongSparseArray<Long> voteSendTime = new LongSparseArray<>();
    private HashMap<String, Boolean> waitingForCallback = new HashMap<>();
    /* access modifiers changed from: private */
    public HashMap<String, MessageObject> waitingForLocation = new HashMap<>();
    private HashMap<String, byte[]> waitingForVote = new HashMap<>();

    public static class SendingMediaInfo {
        public boolean canDeleteAfter;
        public String caption;
        public ArrayList<TLRPC.MessageEntity> entities;
        public boolean forceImage;
        public TLRPC.BotInlineResult inlineResult;
        public boolean isVideo;
        public ArrayList<TLRPC.InputDocument> masks;
        public String paintPath;
        public HashMap<String, String> params;
        public String path;
        public MediaController.SearchImage searchImage;
        public String thumbPath;
        public int ttl;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    public class ImportingHistory {
        public long dialogId;
        public double estimatedUploadSpeed;
        public String historyPath;
        public long importId;
        private long lastUploadSize;
        /* access modifiers changed from: private */
        public long lastUploadTime;
        public ArrayList<Uri> mediaPaths = new ArrayList<>();
        public TLRPC.InputPeer peer;
        public int timeUntilFinish = Integer.MAX_VALUE;
        public long totalSize;
        public ArrayList<String> uploadMedia = new ArrayList<>();
        public int uploadProgress;
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashSet<String> uploadSet = new HashSet<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public long uploadedSize;

        public ImportingHistory() {
        }

        /* access modifiers changed from: private */
        public void initImport(TLRPC.InputFile inputFile) {
            final TLRPC.TL_messages_initHistoryImport req = new TLRPC.TL_messages_initHistoryImport();
            req.file = inputFile;
            req.media_count = this.mediaPaths.size();
            req.peer = this.peer;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$1$$ExternalSyntheticLambda0(this, response, req, error));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingHistory$1  reason: not valid java name */
                public /* synthetic */ void m1099x6fa5ea93(TLObject response, TLRPC.TL_messages_initHistoryImport req, TLRPC.TL_error error) {
                    if (response instanceof TLRPC.TL_messages_historyImport) {
                        ImportingHistory.this.importId = ((TLRPC.TL_messages_historyImport) response).id;
                        ImportingHistory.this.uploadSet.remove(ImportingHistory.this.historyPath);
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                        if (ImportingHistory.this.uploadSet.isEmpty()) {
                            ImportingHistory.this.startImport();
                        }
                        long unused = ImportingHistory.this.lastUploadTime = SystemClock.elapsedRealtime();
                        int N = ImportingHistory.this.uploadMedia.size();
                        for (int a = 0; a < N; a++) {
                            SendMessagesHelper.this.getFileLoader().uploadFile(ImportingHistory.this.uploadMedia.get(a), false, true, 67108864);
                        }
                        return;
                    }
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), req, error);
                }
            }, 2);
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* access modifiers changed from: private */
        public void onFileFailedToUpload(String path) {
            if (path.equals(this.historyPath)) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
                TLRPC.TL_error error = new TLRPC.TL_error();
                error.code = 400;
                error.text = "IMPORT_UPLOAD_FAILED";
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId), new TLRPC.TL_messages_initHistoryImport(), error);
                return;
            }
            this.uploadSet.remove(path);
        }

        /* access modifiers changed from: private */
        public void addUploadProgress(String path, long sz, float progress) {
            String str = path;
            this.uploadProgresses.put(str, Float.valueOf(progress));
            this.uploadSize.put(str, Long.valueOf(sz));
            this.uploadedSize = 0;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long newTime = SystemClock.elapsedRealtime();
            if (!str.equals(this.historyPath)) {
                long j = this.uploadedSize;
                long j2 = this.lastUploadSize;
                if (j != j2) {
                    long j3 = this.lastUploadTime;
                    if (newTime != j3) {
                        double d = (double) (newTime - j3);
                        Double.isNaN(d);
                        double d2 = (double) (j - j2);
                        Double.isNaN(d2);
                        double uploadSpeed = d2 / (d / 1000.0d);
                        double d3 = this.estimatedUploadSpeed;
                        if (d3 == 0.0d) {
                            this.estimatedUploadSpeed = uploadSpeed;
                        } else {
                            this.estimatedUploadSpeed = (0.01d * uploadSpeed) + ((1.0d - 0.01d) * d3);
                        }
                        double d4 = (double) ((this.totalSize - j) * 1000);
                        double d5 = this.estimatedUploadSpeed;
                        Double.isNaN(d4);
                        this.timeUntilFinish = (int) (d4 / d5);
                        this.lastUploadSize = j;
                        this.lastUploadTime = newTime;
                    }
                }
            }
            int newProgress = (int) (100.0f * (((float) getUploadedCount()) / ((float) getTotalCount())));
            if (this.uploadProgress != newProgress) {
                this.uploadProgress = newProgress;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
            }
        }

        /* access modifiers changed from: private */
        public void onMediaImport(final String path, long size, TLRPC.InputFile inputFile) {
            addUploadProgress(path, size, 1.0f);
            TLRPC.TL_messages_uploadImportedMedia req = new TLRPC.TL_messages_uploadImportedMedia();
            req.peer = this.peer;
            req.import_id = this.importId;
            req.file_name = new File(path).getName();
            MimeTypeMap myMime = MimeTypeMap.getSingleton();
            String ext = "txt";
            int idx = req.file_name.lastIndexOf(46);
            if (idx != -1) {
                ext = req.file_name.substring(idx + 1).toLowerCase();
            }
            String mimeType = myMime.getMimeTypeFromExtension(ext);
            if (mimeType == null) {
                if ("opus".equals(ext)) {
                    mimeType = "audio/opus";
                } else if ("webp".equals(ext)) {
                    mimeType = "image/webp";
                } else {
                    mimeType = "text/plain";
                }
            }
            if (mimeType.equals("image/jpg") || mimeType.equals("image/jpeg")) {
                TLRPC.TL_inputMediaUploadedPhoto inputMediaUploadedPhoto = new TLRPC.TL_inputMediaUploadedPhoto();
                inputMediaUploadedPhoto.file = inputFile;
                req.media = inputMediaUploadedPhoto;
            } else {
                TLRPC.TL_inputMediaUploadedDocument inputMediaDocument = new TLRPC.TL_inputMediaUploadedDocument();
                inputMediaDocument.file = inputFile;
                inputMediaDocument.mime_type = mimeType;
                req.media = inputMediaDocument;
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$2$$ExternalSyntheticLambda0(this, path));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingHistory$2  reason: not valid java name */
                public /* synthetic */ void m1100x6fa5ea94(String path) {
                    ImportingHistory.this.uploadSet.remove(path);
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                    if (ImportingHistory.this.uploadSet.isEmpty()) {
                        ImportingHistory.this.startImport();
                    }
                }
            }, 2);
        }

        /* access modifiers changed from: private */
        public void startImport() {
            final TLRPC.TL_messages_startHistoryImport req = new TLRPC.TL_messages_startHistoryImport();
            req.peer = this.peer;
            req.import_id = this.importId;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$3$$ExternalSyntheticLambda0(this, error, req));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingHistory$3  reason: not valid java name */
                public /* synthetic */ void m1101x6fa5ea95(TLRPC.TL_error error, TLRPC.TL_messages_startHistoryImport req) {
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    if (error == null) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                        return;
                    }
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), req, error);
                }
            });
        }

        public void setImportProgress(int value) {
            if (value == 100) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
            }
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
        }
    }

    public static class ImportingSticker {
        public boolean animated;
        public String emoji;
        public TLRPC.TL_inputStickerSetItem item;
        public String mimeType;
        public String path;
        public boolean validated;

        public void uploadMedia(int account, TLRPC.InputFile inputFile, final Runnable onFinish) {
            TLRPC.TL_messages_uploadMedia req = new TLRPC.TL_messages_uploadMedia();
            req.peer = new TLRPC.TL_inputPeerSelf();
            req.media = new TLRPC.TL_inputMediaUploadedDocument();
            req.media.file = inputFile;
            req.media.mime_type = this.mimeType;
            ConnectionsManager.getInstance(account).sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingSticker$1$$ExternalSyntheticLambda0(this, response, onFinish));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingSticker$1  reason: not valid java name */
                public /* synthetic */ void m1102x170488fc(TLObject response, Runnable onFinish) {
                    if (response instanceof TLRPC.TL_messageMediaDocument) {
                        TLRPC.TL_messageMediaDocument mediaDocument = (TLRPC.TL_messageMediaDocument) response;
                        ImportingSticker.this.item = new TLRPC.TL_inputStickerSetItem();
                        ImportingSticker.this.item.document = new TLRPC.TL_inputDocument();
                        ImportingSticker.this.item.document.id = mediaDocument.document.id;
                        ImportingSticker.this.item.document.access_hash = mediaDocument.document.access_hash;
                        ImportingSticker.this.item.document.file_reference = mediaDocument.document.file_reference;
                        ImportingSticker.this.item.emoji = ImportingSticker.this.emoji != null ? ImportingSticker.this.emoji : "";
                        ImportingSticker.this.mimeType = mediaDocument.document.mime_type;
                    } else if (ImportingSticker.this.animated) {
                        ImportingSticker.this.mimeType = "application/x-bad-tgsticker";
                    }
                    onFinish.run();
                }
            }, 2);
        }
    }

    public class ImportingStickers {
        public double estimatedUploadSpeed;
        private long lastUploadSize;
        private long lastUploadTime;
        public String shortName;
        public String software;
        public int timeUntilFinish = Integer.MAX_VALUE;
        public String title;
        public long totalSize;
        public ArrayList<ImportingSticker> uploadMedia = new ArrayList<>();
        public int uploadProgress;
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, ImportingSticker> uploadSet = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public long uploadedSize;

        public ImportingStickers() {
        }

        /* access modifiers changed from: private */
        public void initImport() {
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            this.lastUploadTime = SystemClock.elapsedRealtime();
            int N = this.uploadMedia.size();
            for (int a = 0; a < N; a++) {
                SendMessagesHelper.this.getFileLoader().uploadFile(this.uploadMedia.get(a).path, false, true, 67108864);
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* access modifiers changed from: private */
        public void onFileFailedToUpload(String path) {
            ImportingSticker file = this.uploadSet.remove(path);
            if (file != null) {
                this.uploadMedia.remove(file);
            }
        }

        /* access modifiers changed from: private */
        public void addUploadProgress(String path, long sz, float progress) {
            String str = path;
            this.uploadProgresses.put(str, Float.valueOf(progress));
            this.uploadSize.put(str, Long.valueOf(sz));
            this.uploadedSize = 0;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long newTime = SystemClock.elapsedRealtime();
            long j = this.uploadedSize;
            long j2 = this.lastUploadSize;
            if (j != j2) {
                long j3 = this.lastUploadTime;
                if (newTime != j3) {
                    double d = (double) (newTime - j3);
                    Double.isNaN(d);
                    double d2 = (double) (j - j2);
                    Double.isNaN(d2);
                    double uploadSpeed = d2 / (d / 1000.0d);
                    double d3 = this.estimatedUploadSpeed;
                    if (d3 == 0.0d) {
                        this.estimatedUploadSpeed = uploadSpeed;
                    } else {
                        this.estimatedUploadSpeed = (0.01d * uploadSpeed) + ((1.0d - 0.01d) * d3);
                    }
                    double d4 = (double) ((this.totalSize - j) * 1000);
                    double d5 = this.estimatedUploadSpeed;
                    Double.isNaN(d4);
                    this.timeUntilFinish = (int) (d4 / d5);
                    this.lastUploadSize = j;
                    this.lastUploadTime = newTime;
                }
            }
            int newProgress = (int) (100.0f * (((float) getUploadedCount()) / ((float) getTotalCount())));
            if (this.uploadProgress != newProgress) {
                this.uploadProgress = newProgress;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            }
        }

        /* access modifiers changed from: private */
        public void onMediaImport(String path, long size, TLRPC.InputFile inputFile) {
            addUploadProgress(path, size, 1.0f);
            ImportingSticker file = this.uploadSet.get(path);
            if (file != null) {
                file.uploadMedia(SendMessagesHelper.this.currentAccount, inputFile, new SendMessagesHelper$ImportingStickers$$ExternalSyntheticLambda0(this, path));
            }
        }

        /* renamed from: lambda$onMediaImport$0$org-telegram-messenger-SendMessagesHelper$ImportingStickers  reason: not valid java name */
        public /* synthetic */ void m1103xb92aa0e3(String path) {
            this.uploadSet.remove(path);
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            if (this.uploadSet.isEmpty()) {
                startImport();
            }
        }

        /* access modifiers changed from: private */
        public void startImport() {
            final TLRPC.TL_stickers_createStickerSet req = new TLRPC.TL_stickers_createStickerSet();
            req.user_id = new TLRPC.TL_inputUserSelf();
            req.title = this.title;
            req.short_name = this.shortName;
            req.animated = this.uploadMedia.get(0).animated;
            String str = this.software;
            if (str != null) {
                req.software = str;
                req.flags |= 8;
            }
            int N = this.uploadMedia.size();
            for (int a = 0; a < N; a++) {
                ImportingSticker file = this.uploadMedia.get(a);
                if (file.item != null) {
                    req.stickers.add(file.item);
                }
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingStickers$1$$ExternalSyntheticLambda0(this, error, req, response));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingStickers$1  reason: not valid java name */
                public /* synthetic */ void m1104xCLASSNAMEdbdb1(TLRPC.TL_error error, TLRPC.TL_stickers_createStickerSet req, TLObject response) {
                    SendMessagesHelper.this.importingStickersMap.remove(ImportingStickers.this.shortName);
                    if (error == null) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName);
                    } else {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName, req, error);
                    }
                    if (!(response instanceof TLRPC.TL_messages_stickerSet)) {
                        return;
                    }
                    if (SendMessagesHelper.this.getNotificationCenter().hasObservers(NotificationCenter.stickersImportComplete)) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportComplete, response);
                        return;
                    }
                    SendMessagesHelper.this.getMediaDataController().toggleStickerSet((Context) null, response, 2, (BaseFragment) null, false, false);
                }
            });
        }

        public void setImportProgress(int value) {
            if (value == 100) {
                SendMessagesHelper.this.importingStickersMap.remove(this.shortName);
            }
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
        }
    }

    static {
        int cores;
        if (Build.VERSION.SDK_INT >= 17) {
            cores = Runtime.getRuntime().availableProcessors();
        } else {
            cores = 2;
        }
        mediaSendThreadPool = new ThreadPoolExecutor(cores, cores, 60, TimeUnit.SECONDS, new LinkedBlockingQueue());
    }

    private static class MediaSendPrepareWorker {
        public volatile String parentObject;
        public volatile TLRPC.TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    public static class LocationProvider {
        /* access modifiers changed from: private */
        public LocationProviderDelegate delegate;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        /* access modifiers changed from: private */
        public Location lastKnownLocation;
        private LocationManager locationManager;
        /* access modifiers changed from: private */
        public Runnable locationQueryCancelRunnable;
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        private class GpsLocationListener implements LocationListener {
            private GpsLocationListener() {
            }

            public void onLocationChanged(Location location) {
                if (location != null && LocationProvider.this.locationQueryCancelRunnable != null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("found location " + location);
                    }
                    Location unused = LocationProvider.this.lastKnownLocation = location;
                    if (location.getAccuracy() < 100.0f) {
                        if (LocationProvider.this.delegate != null) {
                            LocationProvider.this.delegate.onLocationAcquired(location);
                        }
                        if (LocationProvider.this.locationQueryCancelRunnable != null) {
                            AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                        }
                        LocationProvider.this.cleanup();
                    }
                }
            }

            public void onStatusChanged(String provider, int status, Bundle extras) {
            }

            public void onProviderEnabled(String provider) {
            }

            public void onProviderDisabled(String provider) {
            }
        }

        public LocationProvider() {
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        /* access modifiers changed from: private */
        public void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1, 0.0f, this.gpsLocationListener);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1, 0.0f, this.networkLocationListener);
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
            }
            try {
                Location lastKnownLocation2 = this.locationManager.getLastKnownLocation("gps");
                this.lastKnownLocation = lastKnownLocation2;
                if (lastKnownLocation2 == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Exception e3) {
                FileLog.e((Throwable) e3);
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0 sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0 = new SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0(this);
            this.locationQueryCancelRunnable = sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0;
            AndroidUtilities.runOnUIThread(sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0, 5000);
        }

        /* renamed from: lambda$start$0$org-telegram-messenger-SendMessagesHelper$LocationProvider  reason: not valid java name */
        public /* synthetic */ void m1105x9940a2de() {
            LocationProviderDelegate locationProviderDelegate = this.delegate;
            if (locationProviderDelegate != null) {
                Location location = this.lastKnownLocation;
                if (location != null) {
                    locationProviderDelegate.onLocationAcquired(location);
                } else {
                    locationProviderDelegate.onUnableLocationAcquire();
                }
            }
            cleanup();
        }

        public void stop() {
            if (this.locationManager != null) {
                Runnable runnable = this.locationQueryCancelRunnable;
                if (runnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(runnable);
                }
                cleanup();
            }
        }
    }

    protected class DelayedMessageSendAfterRequest {
        public DelayedMessage delayedMessage;
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public TLObject request;
        public boolean scheduled;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    protected class DelayedMessage {
        public TLRPC.EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public ArrayList<String> httpLocations;
        public ArrayList<TLRPC.InputMedia> inputMedias;
        public TLRPC.InputMedia inputUploadMedia;
        public TLObject locationParent;
        public ArrayList<TLRPC.PhotoSize> locations;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<TLRPC.Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public long peer;
        public boolean performMediaUpload;
        public TLRPC.PhotoSize photoSize;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public boolean retriedToSend;
        public boolean scheduled;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int topMessageId;
        public int type;
        public VideoEditedInfo videoEditedInfo;
        public ArrayList<VideoEditedInfo> videoEditedInfos;

        public DelayedMessage(long peer2) {
            this.peer = peer2;
        }

        public void initForGroup(long id) {
            this.type = 4;
            this.groupId = id;
            this.messageObjects = new ArrayList<>();
            this.messages = new ArrayList<>();
            this.inputMedias = new ArrayList<>();
            this.originalPaths = new ArrayList<>();
            this.parentObjects = new ArrayList<>();
            this.extraHashMap = new HashMap<>();
            this.locations = new ArrayList<>();
            this.httpLocations = new ArrayList<>();
            this.videoEditedInfos = new ArrayList<>();
        }

        public void addDelayedRequest(TLObject req, MessageObject msgObj, String originalPath2, Object parentObject2, DelayedMessage delayedMessage, boolean scheduled2) {
            DelayedMessageSendAfterRequest request = new DelayedMessageSendAfterRequest();
            request.request = req;
            request.msgObj = msgObj;
            request.originalPath = originalPath2;
            request.delayedMessage = delayedMessage;
            request.parentObject = parentObject2;
            request.scheduled = scheduled2;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(request);
        }

        public void addDelayedRequest(TLObject req, ArrayList<MessageObject> msgObjs, ArrayList<String> originalPaths2, ArrayList<Object> parentObjects2, DelayedMessage delayedMessage, boolean scheduled2) {
            DelayedMessageSendAfterRequest request = new DelayedMessageSendAfterRequest();
            request.request = req;
            request.msgObjs = msgObjs;
            request.originalPaths = originalPaths2;
            request.delayedMessage = delayedMessage;
            request.parentObjects = parentObjects2;
            request.scheduled = scheduled2;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(request);
        }

        public void sendDelayedRequests() {
            ArrayList<DelayedMessageSendAfterRequest> arrayList = this.requests;
            if (arrayList != null) {
                int i = this.type;
                if (i == 4 || i == 0) {
                    int size = arrayList.size();
                    for (int a = 0; a < size; a++) {
                        DelayedMessageSendAfterRequest request = this.requests.get(a);
                        if (request.request instanceof TLRPC.TL_messages_sendEncryptedMultiMedia) {
                            SendMessagesHelper.this.getSecretChatHelper().performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) request.request, this);
                        } else if (request.request instanceof TLRPC.TL_messages_sendMultiMedia) {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TLRPC.TL_messages_sendMultiMedia) request.request, request.msgObjs, request.originalPaths, request.parentObjects, request.delayedMessage, request.scheduled);
                        } else {
                            SendMessagesHelper.this.performSendMessageRequest(request.request, request.msgObj, request.originalPath, request.delayedMessage, request.parentObject, (HashMap<String, String>) null, request.scheduled);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int a = 0; a < this.messageObjects.size(); a++) {
                    MessageObject obj2 = this.messageObjects.get(a);
                    SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(obj2.messageOwner, obj2.scheduled);
                    obj2.messageOwner.send_state = 2;
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(obj2.getId()));
                    SendMessagesHelper.this.processSentMessage(obj2.getId());
                    SendMessagesHelper.this.removeFromUploadingMessages(obj2.getId(), this.scheduled);
                }
                HashMap access$1200 = SendMessagesHelper.this.delayedMessages;
                access$1200.remove("group_" + this.groupId);
            } else {
                SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(this.obj.messageOwner, this.obj.scheduled);
                this.obj.messageOwner.send_state = 2;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
                SendMessagesHelper.this.removeFromUploadingMessages(this.obj.getId(), this.scheduled);
            }
            sendDelayedRequests();
        }
    }

    public static SendMessagesHelper getInstance(int num) {
        SendMessagesHelper localInstance = Instance[num];
        if (localInstance == null) {
            synchronized (SendMessagesHelper.class) {
                localInstance = Instance[num];
                if (localInstance == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper = new SendMessagesHelper(num);
                    localInstance = sendMessagesHelper;
                    sendMessagesHelperArr[num] = sendMessagesHelper;
                }
            }
        }
        return localInstance;
    }

    public SendMessagesHelper(int instance) {
        super(instance);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda13(this));
    }

    /* renamed from: lambda$new$0$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m437lambda$new$0$orgtelegrammessengerSendMessagesHelper() {
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadProgressChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingStarted);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidFailedLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoadFailed);
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.editingMessages.clear();
        this.sendingMessagesIdDialogs.clear();
        this.uploadMessages.clear();
        this.uploadingMessagesIdDialogs.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.waitingForVote.clear();
        this.importingHistoryFiles.clear();
        this.importingHistoryMap.clear();
        this.importingStickersFiles.clear();
        this.importingStickersMap.clear();
        this.locationProvider.stop();
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v29, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v18, resolved type: org.telegram.tgnet.TLRPC$InputMedia} */
    /* JADX WARNING: type inference failed for: r4v40, types: [org.telegram.tgnet.TLObject] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void didReceivedNotification(int r33, int r34, java.lang.Object... r35) {
        /*
            r32 = this;
            r10 = r32
            r11 = r33
            int r0 = org.telegram.messenger.NotificationCenter.fileUploadProgressChanged
            r12 = 2
            r1 = 0
            r13 = 1
            if (r11 != r0) goto L_0x005a
            r0 = r35[r1]
            java.lang.String r0 = (java.lang.String) r0
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingHistory> r1 = r10.importingHistoryFiles
            java.lang.Object r1 = r1.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingHistory r1 = (org.telegram.messenger.SendMessagesHelper.ImportingHistory) r1
            if (r1 == 0) goto L_0x0033
            r2 = r35[r13]
            java.lang.Long r2 = (java.lang.Long) r2
            r3 = r35[r12]
            java.lang.Long r3 = (java.lang.Long) r3
            long r4 = r2.longValue()
            long r6 = r2.longValue()
            float r6 = (float) r6
            long r7 = r3.longValue()
            float r7 = (float) r7
            float r6 = r6 / r7
            r1.addUploadProgress(r0, r4, r6)
        L_0x0033:
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingStickers> r2 = r10.importingStickersFiles
            java.lang.Object r2 = r2.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingStickers r2 = (org.telegram.messenger.SendMessagesHelper.ImportingStickers) r2
            if (r2 == 0) goto L_0x0057
            r3 = r35[r13]
            java.lang.Long r3 = (java.lang.Long) r3
            r4 = r35[r12]
            java.lang.Long r4 = (java.lang.Long) r4
            long r5 = r3.longValue()
            long r7 = r3.longValue()
            float r7 = (float) r7
            long r8 = r4.longValue()
            float r8 = (float) r8
            float r7 = r7 / r8
            r2.addUploadProgress(r0, r5, r7)
        L_0x0057:
            r6 = r11
            goto L_0x07a7
        L_0x005a:
            int r0 = org.telegram.messenger.NotificationCenter.fileUploaded
            java.lang.String r14 = "_t"
            if (r11 != r0) goto L_0x0404
            r0 = r35[r1]
            r7 = r0
            java.lang.String r7 = (java.lang.String) r7
            r0 = r35[r13]
            r6 = r0
            org.telegram.tgnet.TLRPC$InputFile r6 = (org.telegram.tgnet.TLRPC.InputFile) r6
            r0 = r35[r12]
            r5 = r0
            org.telegram.tgnet.TLRPC$InputEncryptedFile r5 = (org.telegram.tgnet.TLRPC.InputEncryptedFile) r5
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingHistory> r0 = r10.importingHistoryFiles
            java.lang.Object r0 = r0.get(r7)
            r4 = r0
            org.telegram.messenger.SendMessagesHelper$ImportingHistory r4 = (org.telegram.messenger.SendMessagesHelper.ImportingHistory) r4
            r23 = 5
            if (r4 == 0) goto L_0x0093
            java.lang.String r0 = r4.historyPath
            boolean r0 = r7.equals(r0)
            if (r0 == 0) goto L_0x0088
            r4.initImport(r6)
            goto L_0x0093
        L_0x0088:
            r0 = r35[r23]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            r4.onMediaImport(r7, r0, r6)
        L_0x0093:
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingStickers> r0 = r10.importingStickersFiles
            java.lang.Object r0 = r0.get(r7)
            r3 = r0
            org.telegram.messenger.SendMessagesHelper$ImportingStickers r3 = (org.telegram.messenger.SendMessagesHelper.ImportingStickers) r3
            if (r3 == 0) goto L_0x00a9
            r0 = r35[r23]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            r3.onMediaImport(r7, r0, r6)
        L_0x00a9:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            java.lang.Object r0 = r0.get(r7)
            r2 = r0
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x03f5
            r0 = 0
            r1 = r0
        L_0x00b6:
            int r0 = r2.size()
            if (r1 >= r0) goto L_0x03dd
            java.lang.Object r0 = r2.get(r1)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r0 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r0
            r16 = 0
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messages_sendMedia
            if (r8 == 0) goto L_0x00d1
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            org.telegram.tgnet.TLRPC$TL_messages_sendMedia r8 = (org.telegram.tgnet.TLRPC.TL_messages_sendMedia) r8
            org.telegram.tgnet.TLRPC$InputMedia r8 = r8.media
            goto L_0x00f3
        L_0x00d1:
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messages_editMessage
            if (r8 == 0) goto L_0x00de
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            org.telegram.tgnet.TLRPC$TL_messages_editMessage r8 = (org.telegram.tgnet.TLRPC.TL_messages_editMessage) r8
            org.telegram.tgnet.TLRPC$InputMedia r8 = r8.media
            goto L_0x00f3
        L_0x00de:
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia
            if (r8 == 0) goto L_0x00f1
            java.util.HashMap<java.lang.Object, java.lang.Object> r8 = r0.extraHashMap
            java.lang.Object r8 = r8.get(r7)
            r16 = r8
            org.telegram.tgnet.TLRPC$InputMedia r16 = (org.telegram.tgnet.TLRPC.InputMedia) r16
            r8 = r16
            goto L_0x00f3
        L_0x00f1:
            r8 = r16
        L_0x00f3:
            java.lang.String r9 = "_i"
            if (r6 == 0) goto L_0x02dc
            if (r8 == 0) goto L_0x02dc
            int r15 = r0.type
            if (r15 != 0) goto L_0x0143
            r8.file = r6
            org.telegram.tgnet.TLObject r9 = r0.sendRequest
            org.telegram.messenger.MessageObject r15 = r0.obj
            java.lang.String r12 = r0.originalPath
            r18 = 1
            r19 = 0
            java.lang.Object r13 = r0.parentObject
            r20 = 0
            r21 = r8
            boolean r8 = r0.scheduled
            r24 = r0
            r0 = r32
            r25 = r1
            r1 = r9
            r9 = r2
            r2 = r15
            r15 = r3
            r3 = r12
            r12 = r4
            r4 = r24
            r26 = r5
            r5 = r18
            r27 = r6
            r6 = r19
            r28 = r7
            r7 = r13
            r17 = r8
            r13 = r21
            r8 = r20
            r29 = r12
            r30 = r15
            r15 = 0
            r12 = r9
            r9 = r17
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7, r8, r9)
            r8 = r24
            r15 = r27
            r2 = r28
            goto L_0x02cf
        L_0x0143:
            r24 = r0
            r25 = r1
            r12 = r2
            r30 = r3
            r29 = r4
            r26 = r5
            r27 = r6
            r28 = r7
            r13 = r8
            r15 = 0
            r8 = r24
            int r0 = r8.type
            r1 = 1
            if (r0 != r1) goto L_0x01b4
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.file
            if (r0 != 0) goto L_0x018f
            r9 = r27
            r13.file = r9
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.thumb
            if (r0 != 0) goto L_0x0179
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            if (r0 == 0) goto L_0x0179
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            org.telegram.tgnet.TLRPC$FileLocation r0 = r0.location
            if (r0 == 0) goto L_0x0179
            r10.performSendDelayedMessage(r8)
            r15 = r9
            r2 = r28
            goto L_0x02cf
        L_0x0179:
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r7 = r8.scheduled
            r0 = r32
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r15 = r9
            r2 = r28
            goto L_0x02cf
        L_0x018f:
            r9 = r27
            r13.thumb = r9
            int r0 = r13.flags
            r7 = 4
            r0 = r0 | r7
            r13.flags = r0
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r0 = r8.scheduled
            r16 = r0
            r0 = r32
            r15 = 4
            r7 = r16
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r15 = r9
            r2 = r28
            goto L_0x02cf
        L_0x01b4:
            r7 = r27
            r15 = 4
            int r0 = r8.type
            r1 = 2
            if (r0 != r1) goto L_0x020d
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.file
            if (r0 != 0) goto L_0x01ef
            r13.file = r7
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.thumb
            if (r0 != 0) goto L_0x01d8
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            if (r0 == 0) goto L_0x01d8
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            org.telegram.tgnet.TLRPC$FileLocation r0 = r0.location
            if (r0 == 0) goto L_0x01d8
            r10.performSendDelayedMessage(r8)
            r15 = r7
            r2 = r28
            goto L_0x02cf
        L_0x01d8:
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r9 = r8.scheduled
            r0 = r32
            r15 = r7
            r7 = r9
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r2 = r28
            goto L_0x02cf
        L_0x01ef:
            r15 = r7
            r13.thumb = r15
            int r0 = r13.flags
            r1 = 4
            r0 = r0 | r1
            r13.flags = r0
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r7 = r8.scheduled
            r0 = r32
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r2 = r28
            goto L_0x02cf
        L_0x020d:
            r15 = r7
            int r0 = r8.type
            r1 = 3
            if (r0 != r1) goto L_0x022a
            r13.file = r15
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r7 = r8.scheduled
            r0 = r32
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r2 = r28
            goto L_0x02cf
        L_0x022a:
            int r0 = r8.type
            r1 = 4
            if (r0 != r1) goto L_0x02cd
            boolean r0 = r13 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument
            if (r0 == 0) goto L_0x02c4
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.file
            if (r0 != 0) goto L_0x029c
            r13.file = r15
            java.util.HashMap<java.lang.Object, java.lang.Object> r0 = r8.extraHashMap
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r2 = r28
            r1.append(r2)
            r1.append(r9)
            java.lang.String r1 = r1.toString()
            java.lang.Object r0 = r0.get(r1)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messageObjects
            int r1 = r1.indexOf(r0)
            if (r1 < 0) goto L_0x0269
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messageObjects
            java.lang.Object r3 = r3.get(r1)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            java.lang.String r3 = r3.attachPath
            r10.stopVideoService(r3)
        L_0x0269:
            java.util.HashMap<java.lang.Object, java.lang.Object> r3 = r8.extraHashMap
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            r4.append(r2)
            r4.append(r14)
            java.lang.String r4 = r4.toString()
            java.lang.Object r3 = r3.get(r4)
            org.telegram.tgnet.TLRPC$PhotoSize r3 = (org.telegram.tgnet.TLRPC.PhotoSize) r3
            r8.photoSize = r3
            org.telegram.tgnet.TLRPC$InputFile r3 = r13.thumb
            if (r3 != 0) goto L_0x0297
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r8.photoSize
            if (r3 == 0) goto L_0x0297
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r8.photoSize
            org.telegram.tgnet.TLRPC$FileLocation r3 = r3.location
            if (r3 == 0) goto L_0x0297
            r3 = 1
            r8.performMediaUpload = r3
            r10.performSendDelayedMessage(r8, r1)
            goto L_0x029b
        L_0x0297:
            r3 = 0
            r10.uploadMultiMedia(r8, r13, r3, r2)
        L_0x029b:
            goto L_0x02cf
        L_0x029c:
            r2 = r28
            r13.thumb = r15
            int r0 = r13.flags
            r1 = 4
            r0 = r0 | r1
            r13.flags = r0
            java.util.HashMap<java.lang.Object, java.lang.Object> r0 = r8.extraHashMap
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r1.append(r2)
            java.lang.String r3 = "_o"
            r1.append(r3)
            java.lang.String r1 = r1.toString()
            java.lang.Object r0 = r0.get(r1)
            java.lang.String r0 = (java.lang.String) r0
            r1 = 0
            r10.uploadMultiMedia(r8, r13, r1, r0)
            goto L_0x02cf
        L_0x02c4:
            r2 = r28
            r1 = 0
            r13.file = r15
            r10.uploadMultiMedia(r8, r13, r1, r2)
            goto L_0x02cf
        L_0x02cd:
            r2 = r28
        L_0x02cf:
            r0 = r25
            r12.remove(r0)
            int r1 = r0 + -1
            r0 = r1
            r7 = r12
            r1 = r26
            goto L_0x03c9
        L_0x02dc:
            r12 = r2
            r30 = r3
            r29 = r4
            r26 = r5
            r15 = r6
            r2 = r7
            r13 = r8
            r8 = r0
            r0 = r1
            r1 = r26
            if (r1 == 0) goto L_0x03c8
            org.telegram.tgnet.TLObject r3 = r8.sendEncryptedRequest
            if (r3 == 0) goto L_0x03c8
            r3 = 0
            int r4 = r8.type
            r5 = 4
            if (r4 != r5) goto L_0x0363
            org.telegram.tgnet.TLObject r4 = r8.sendEncryptedRequest
            org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia r4 = (org.telegram.tgnet.TLRPC.TL_messages_sendEncryptedMultiMedia) r4
            java.util.HashMap<java.lang.Object, java.lang.Object> r5 = r8.extraHashMap
            java.lang.Object r5 = r5.get(r2)
            org.telegram.tgnet.TLRPC$InputEncryptedFile r5 = (org.telegram.tgnet.TLRPC.InputEncryptedFile) r5
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputEncryptedFile> r6 = r4.files
            int r6 = r6.indexOf(r5)
            if (r6 < 0) goto L_0x0361
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputEncryptedFile> r7 = r4.files
            r7.set(r6, r1)
            r7 = r12
            long r11 = r5.id
            r16 = 1
            int r18 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r18 != 0) goto L_0x0357
            java.util.HashMap<java.lang.Object, java.lang.Object> r11 = r8.extraHashMap
            java.lang.StringBuilder r12 = new java.lang.StringBuilder
            r12.<init>()
            r12.append(r2)
            r12.append(r9)
            java.lang.String r9 = r12.toString()
            java.lang.Object r9 = r11.get(r9)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            java.util.HashMap<java.lang.Object, java.lang.Object> r11 = r8.extraHashMap
            java.lang.StringBuilder r12 = new java.lang.StringBuilder
            r12.<init>()
            r12.append(r2)
            r12.append(r14)
            java.lang.String r12 = r12.toString()
            java.lang.Object r11 = r11.get(r12)
            org.telegram.tgnet.TLRPC$PhotoSize r11 = (org.telegram.tgnet.TLRPC.PhotoSize) r11
            r8.photoSize = r11
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r8.messageObjects
            java.lang.Object r11 = r11.get(r6)
            org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
            org.telegram.tgnet.TLRPC$Message r11 = r11.messageOwner
            java.lang.String r11 = r11.attachPath
            r10.stopVideoService(r11)
        L_0x0357:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_decryptedMessage> r9 = r4.messages
            java.lang.Object r9 = r9.get(r6)
            r3 = r9
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessage) r3
            goto L_0x0362
        L_0x0361:
            r7 = r12
        L_0x0362:
            goto L_0x0369
        L_0x0363:
            r7 = r12
            org.telegram.tgnet.TLObject r4 = r8.sendEncryptedRequest
            r3 = r4
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessage) r3
        L_0x0369:
            if (r3 == 0) goto L_0x03c2
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo
            if (r4 != 0) goto L_0x037d
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto
            if (r4 != 0) goto L_0x037d
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument
            if (r4 == 0) goto L_0x038a
        L_0x037d:
            r4 = r35[r23]
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r6 = r3.media
            int r9 = (int) r4
            r6.size = r9
        L_0x038a:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            r5 = 3
            r6 = r35[r5]
            byte[] r6 = (byte[]) r6
            r4.key = r6
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            r5 = 4
            r6 = r35[r5]
            byte[] r6 = (byte[]) r6
            r4.iv = r6
            int r4 = r8.type
            if (r4 != r5) goto L_0x03a5
            r4 = 0
            r10.uploadMultiMedia(r8, r4, r1, r2)
            goto L_0x03c2
        L_0x03a5:
            org.telegram.messenger.SecretChatHelper r16 = r32.getSecretChatHelper()
            org.telegram.messenger.MessageObject r4 = r8.obj
            org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = r8.encryptedChat
            java.lang.String r6 = r8.originalPath
            org.telegram.messenger.MessageObject r9 = r8.obj
            r17 = r3
            r18 = r4
            r19 = r5
            r20 = r1
            r21 = r6
            r22 = r9
            r16.performSendEncryptedRequest(r17, r18, r19, r20, r21, r22)
        L_0x03c2:
            r7.remove(r0)
            int r0 = r0 + -1
            goto L_0x03c9
        L_0x03c8:
            r7 = r12
        L_0x03c9:
            r3 = 1
            int r0 = r0 + r3
            r11 = r33
            r5 = r1
            r6 = r15
            r4 = r29
            r3 = r30
            r12 = 2
            r13 = 1
            r1 = r0
            r31 = r7
            r7 = r2
            r2 = r31
            goto L_0x00b6
        L_0x03dd:
            r0 = r1
            r30 = r3
            r29 = r4
            r1 = r5
            r15 = r6
            r31 = r7
            r7 = r2
            r2 = r31
            boolean r0 = r7.isEmpty()
            if (r0 == 0) goto L_0x0400
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            r0.remove(r2)
            goto L_0x0400
        L_0x03f5:
            r30 = r3
            r29 = r4
            r1 = r5
            r15 = r6
            r31 = r7
            r7 = r2
            r2 = r31
        L_0x0400:
            r6 = r33
            goto L_0x07a7
        L_0x0404:
            int r0 = org.telegram.messenger.NotificationCenter.fileUploadFailed
            r6 = r33
            if (r6 != r0) goto L_0x046c
            r0 = r35[r1]
            java.lang.String r0 = (java.lang.String) r0
            r1 = 1
            r2 = r35[r1]
            java.lang.Boolean r2 = (java.lang.Boolean) r2
            boolean r1 = r2.booleanValue()
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingHistory> r2 = r10.importingHistoryFiles
            java.lang.Object r2 = r2.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingHistory r2 = (org.telegram.messenger.SendMessagesHelper.ImportingHistory) r2
            if (r2 == 0) goto L_0x0424
            r2.onFileFailedToUpload(r0)
        L_0x0424:
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingStickers> r3 = r10.importingStickersFiles
            java.lang.Object r3 = r3.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingStickers r3 = (org.telegram.messenger.SendMessagesHelper.ImportingStickers) r3
            if (r3 == 0) goto L_0x0431
            r3.onFileFailedToUpload(r0)
        L_0x0431:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r4 = r10.delayedMessages
            java.lang.Object r4 = r4.get(r0)
            java.util.ArrayList r4 = (java.util.ArrayList) r4
            if (r4 == 0) goto L_0x046a
            r5 = 0
        L_0x043c:
            int r7 = r4.size()
            if (r5 >= r7) goto L_0x045f
            java.lang.Object r7 = r4.get(r5)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r7
            if (r1 == 0) goto L_0x044e
            org.telegram.tgnet.TLObject r8 = r7.sendEncryptedRequest
            if (r8 != 0) goto L_0x0454
        L_0x044e:
            if (r1 != 0) goto L_0x045c
            org.telegram.tgnet.TLObject r8 = r7.sendRequest
            if (r8 == 0) goto L_0x045c
        L_0x0454:
            r7.markAsError()
            r4.remove(r5)
            int r5 = r5 + -1
        L_0x045c:
            r7 = 1
            int r5 = r5 + r7
            goto L_0x043c
        L_0x045f:
            boolean r5 = r4.isEmpty()
            if (r5 == 0) goto L_0x046a
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r5 = r10.delayedMessages
            r5.remove(r0)
        L_0x046a:
            goto L_0x07a7
        L_0x046c:
            int r0 = org.telegram.messenger.NotificationCenter.filePreparingStarted
            if (r6 != r0) goto L_0x04f1
            r0 = r35[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r1 = r0.getId()
            if (r1 != 0) goto L_0x047b
            return
        L_0x047b:
            r1 = 1
            r2 = r35[r1]
            r1 = r2
            java.lang.String r1 = (java.lang.String) r1
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            org.telegram.tgnet.TLRPC$Message r3 = r0.messageOwner
            java.lang.String r3 = r3.attachPath
            java.lang.Object r2 = r2.get(r3)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x04ef
            r3 = 0
        L_0x0490:
            int r4 = r2.size()
            if (r3 >= r4) goto L_0x04e0
            java.lang.Object r4 = r2.get(r3)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r4 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r4
            int r5 = r4.type
            r7 = 4
            if (r5 != r7) goto L_0x04ce
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r4.messageObjects
            int r5 = r5.indexOf(r0)
            java.util.HashMap<java.lang.Object, java.lang.Object> r7 = r4.extraHashMap
            java.lang.StringBuilder r8 = new java.lang.StringBuilder
            r8.<init>()
            org.telegram.tgnet.TLRPC$Message r9 = r0.messageOwner
            java.lang.String r9 = r9.attachPath
            r8.append(r9)
            r8.append(r14)
            java.lang.String r8 = r8.toString()
            java.lang.Object r7 = r7.get(r8)
            org.telegram.tgnet.TLRPC$PhotoSize r7 = (org.telegram.tgnet.TLRPC.PhotoSize) r7
            r4.photoSize = r7
            r7 = 1
            r4.performMediaUpload = r7
            r10.performSendDelayedMessage(r4, r5)
            r2.remove(r3)
            goto L_0x04e0
        L_0x04ce:
            org.telegram.messenger.MessageObject r5 = r4.obj
            if (r5 != r0) goto L_0x04dc
            r5 = 0
            r4.videoEditedInfo = r5
            r10.performSendDelayedMessage(r4)
            r2.remove(r3)
            goto L_0x04e0
        L_0x04dc:
            r5 = 0
            int r3 = r3 + 1
            goto L_0x0490
        L_0x04e0:
            boolean r3 = r2.isEmpty()
            if (r3 == 0) goto L_0x04ef
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r3 = r10.delayedMessages
            org.telegram.tgnet.TLRPC$Message r4 = r0.messageOwner
            java.lang.String r4 = r4.attachPath
            r3.remove(r4)
        L_0x04ef:
            goto L_0x07a7
        L_0x04f1:
            int r0 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            if (r6 != r0) goto L_0x0600
            r0 = r35[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r1 = r0.getId()
            if (r1 != 0) goto L_0x0500
            return
        L_0x0500:
            r1 = 1
            r2 = r35[r1]
            r1 = r2
            java.lang.String r1 = (java.lang.String) r1
            r2 = 2
            r2 = r35[r2]
            java.lang.Long r2 = (java.lang.Long) r2
            long r2 = r2.longValue()
            r4 = 3
            r4 = r35[r4]
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            long r7 = r0.getDialogId()
            boolean r7 = org.telegram.messenger.DialogObject.isEncryptedDialog(r7)
            org.telegram.messenger.FileLoader r11 = r32.getFileLoader()
            r12 = r1
            r13 = r7
            r14 = r2
            r16 = r4
            r11.checkUploadNewDataAvailable(r12, r13, r14, r16)
            r8 = 0
            int r11 = (r4 > r8 ? 1 : (r4 == r8 ? 0 : -1))
            if (r11 == 0) goto L_0x05fc
            org.telegram.tgnet.TLRPC$Message r8 = r0.messageOwner
            java.lang.String r8 = r8.attachPath
            r10.stopVideoService(r8)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r8 = r10.delayedMessages
            org.telegram.tgnet.TLRPC$Message r9 = r0.messageOwner
            java.lang.String r9 = r9.attachPath
            java.lang.Object r8 = r8.get(r9)
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            if (r8 == 0) goto L_0x05f9
            r9 = 0
        L_0x0548:
            int r11 = r8.size()
            if (r9 >= r11) goto L_0x05f6
            java.lang.Object r11 = r8.get(r9)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r11 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r11
            int r12 = r11.type
            java.lang.String r13 = "ve"
            r14 = 4
            if (r12 != r14) goto L_0x05ad
            r12 = 0
        L_0x055c:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r14 = r11.messageObjects
            int r14 = r14.size()
            if (r12 >= r14) goto L_0x05aa
            java.util.ArrayList<org.telegram.messenger.MessageObject> r14 = r11.messageObjects
            java.lang.Object r14 = r14.get(r12)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            if (r14 != r0) goto L_0x05a5
            org.telegram.messenger.MessageObject r15 = r11.obj
            r16 = r1
            r1 = 1
            r15.shouldRemoveVideoEditedInfo = r1
            org.telegram.tgnet.TLRPC$Message r1 = r14.messageOwner
            java.util.HashMap<java.lang.String, java.lang.String> r1 = r1.params
            r1.remove(r13)
            org.telegram.tgnet.TLRPC$Message r1 = r14.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            int r13 = (int) r4
            r1.size = r13
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            org.telegram.tgnet.TLRPC$Message r13 = r14.messageOwner
            r1.add(r13)
            org.telegram.messenger.MessagesStorage r17 = r32.getMessagesStorage()
            r19 = 0
            r20 = 1
            r21 = 0
            r22 = 0
            boolean r13 = r14.scheduled
            r18 = r1
            r23 = r13
            r17.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r18, (boolean) r19, (boolean) r20, (boolean) r21, (int) r22, (boolean) r23)
            goto L_0x05ac
        L_0x05a5:
            r16 = r1
            int r12 = r12 + 1
            goto L_0x055c
        L_0x05aa:
            r16 = r1
        L_0x05ac:
            goto L_0x05f0
        L_0x05ad:
            r16 = r1
            org.telegram.messenger.MessageObject r1 = r11.obj
            if (r1 != r0) goto L_0x05f0
            org.telegram.messenger.MessageObject r1 = r11.obj
            r12 = 1
            r1.shouldRemoveVideoEditedInfo = r12
            org.telegram.messenger.MessageObject r1 = r11.obj
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.util.HashMap<java.lang.String, java.lang.String> r1 = r1.params
            r1.remove(r13)
            org.telegram.messenger.MessageObject r1 = r11.obj
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            int r12 = (int) r4
            r1.size = r12
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            org.telegram.messenger.MessageObject r12 = r11.obj
            org.telegram.tgnet.TLRPC$Message r12 = r12.messageOwner
            r1.add(r12)
            org.telegram.messenger.MessagesStorage r17 = r32.getMessagesStorage()
            r19 = 0
            r20 = 1
            r21 = 0
            r22 = 0
            org.telegram.messenger.MessageObject r12 = r11.obj
            boolean r12 = r12.scheduled
            r18 = r1
            r23 = r12
            r17.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r18, (boolean) r19, (boolean) r20, (boolean) r21, (int) r22, (boolean) r23)
            goto L_0x05fe
        L_0x05f0:
            int r9 = r9 + 1
            r1 = r16
            goto L_0x0548
        L_0x05f6:
            r16 = r1
            goto L_0x05fe
        L_0x05f9:
            r16 = r1
            goto L_0x05fe
        L_0x05fc:
            r16 = r1
        L_0x05fe:
            goto L_0x07a7
        L_0x0600:
            int r0 = org.telegram.messenger.NotificationCenter.filePreparingFailed
            if (r6 != r0) goto L_0x0672
            r0 = r35[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r1 = r0.getId()
            if (r1 != 0) goto L_0x060f
            return
        L_0x060f:
            r1 = 1
            r2 = r35[r1]
            r1 = r2
            java.lang.String r1 = (java.lang.String) r1
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            java.lang.String r2 = r2.attachPath
            r10.stopVideoService(r2)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            java.lang.Object r2 = r2.get(r1)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x0670
            r3 = 0
        L_0x0627:
            int r4 = r2.size()
            if (r3 >= r4) goto L_0x0665
            java.lang.Object r4 = r2.get(r3)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r4 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r4
            int r5 = r4.type
            r7 = 4
            if (r5 != r7) goto L_0x0656
            r5 = 0
        L_0x0639:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r7 = r4.messages
            int r7 = r7.size()
            if (r5 >= r7) goto L_0x0655
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r4.messageObjects
            java.lang.Object r7 = r7.get(r5)
            if (r7 != r0) goto L_0x0652
            r4.markAsError()
            r2.remove(r3)
            int r3 = r3 + -1
            goto L_0x0655
        L_0x0652:
            int r5 = r5 + 1
            goto L_0x0639
        L_0x0655:
            goto L_0x0662
        L_0x0656:
            org.telegram.messenger.MessageObject r5 = r4.obj
            if (r5 != r0) goto L_0x0662
            r4.markAsError()
            r2.remove(r3)
            int r3 = r3 + -1
        L_0x0662:
            r4 = 1
            int r3 = r3 + r4
            goto L_0x0627
        L_0x0665:
            boolean r3 = r2.isEmpty()
            if (r3 == 0) goto L_0x0670
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r3 = r10.delayedMessages
            r3.remove(r1)
        L_0x0670:
            goto L_0x07a7
        L_0x0672:
            int r0 = org.telegram.messenger.NotificationCenter.httpFileDidLoad
            if (r6 != r0) goto L_0x074c
            r0 = r35[r1]
            r7 = r0
            java.lang.String r7 = (java.lang.String) r7
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            java.lang.Object r0 = r0.get(r7)
            r8 = r0
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            if (r8 == 0) goto L_0x0749
            r0 = 0
            r9 = r0
        L_0x0688:
            int r0 = r8.size()
            if (r9 >= r0) goto L_0x0741
            java.lang.Object r0 = r8.get(r9)
            r11 = r0
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r11 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r11
            r0 = -1
            int r1 = r11.type
            if (r1 != 0) goto L_0x06a1
            r0 = 0
            org.telegram.messenger.MessageObject r1 = r11.obj
            r13 = r0
            r14 = r1
            r12 = 2
            goto L_0x06ca
        L_0x06a1:
            int r1 = r11.type
            r12 = 2
            if (r1 != r12) goto L_0x06ac
            r0 = 1
            org.telegram.messenger.MessageObject r1 = r11.obj
            r13 = r0
            r14 = r1
            goto L_0x06ca
        L_0x06ac:
            int r1 = r11.type
            r2 = 4
            if (r1 != r2) goto L_0x06c7
            java.util.HashMap<java.lang.Object, java.lang.Object> r1 = r11.extraHashMap
            java.lang.Object r1 = r1.get(r7)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            org.telegram.tgnet.TLRPC$Document r2 = r1.getDocument()
            if (r2 == 0) goto L_0x06c3
            r0 = 1
            r13 = r0
            r14 = r1
            goto L_0x06ca
        L_0x06c3:
            r0 = 0
            r13 = r0
            r14 = r1
            goto L_0x06ca
        L_0x06c7:
            r1 = 0
            r13 = r0
            r14 = r1
        L_0x06ca:
            if (r13 != 0) goto L_0x070b
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = org.telegram.messenger.Utilities.MD5(r7)
            r0.append(r1)
            java.lang.String r1 = "."
            r0.append(r1)
            java.lang.String r1 = "file"
            java.lang.String r1 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r7, r1)
            r0.append(r1)
            java.lang.String r15 = r0.toString()
            java.io.File r2 = new java.io.File
            r0 = 4
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r0)
            r2.<init>(r1, r15)
            org.telegram.messenger.DispatchQueue r5 = org.telegram.messenger.Utilities.globalQueue
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda16 r4 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda16
            r0 = r4
            r1 = r32
            r3 = r14
            r12 = r4
            r4 = r11
            r16 = r8
            r8 = r5
            r5 = r7
            r0.<init>(r1, r2, r3, r4, r5)
            r8.postRunnable(r12)
            r0 = 1
            r3 = 4
            goto L_0x073b
        L_0x070b:
            r16 = r8
            r0 = 1
            if (r13 != r0) goto L_0x073a
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = org.telegram.messenger.Utilities.MD5(r7)
            r1.append(r2)
            java.lang.String r2 = ".gif"
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            java.io.File r2 = new java.io.File
            r3 = 4
            java.io.File r4 = org.telegram.messenger.FileLoader.getDirectory(r3)
            r2.<init>(r4, r1)
            org.telegram.messenger.DispatchQueue r4 = org.telegram.messenger.Utilities.globalQueue
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda31 r5 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda31
            r5.<init>(r10, r11, r2, r14)
            r4.postRunnable(r5)
            goto L_0x073b
        L_0x073a:
            r3 = 4
        L_0x073b:
            int r9 = r9 + 1
            r8 = r16
            goto L_0x0688
        L_0x0741:
            r16 = r8
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            r0.remove(r7)
            goto L_0x074b
        L_0x0749:
            r16 = r8
        L_0x074b:
            goto L_0x07a7
        L_0x074c:
            int r0 = org.telegram.messenger.NotificationCenter.fileLoaded
            if (r6 != r0) goto L_0x0777
            r0 = r35[r1]
            java.lang.String r0 = (java.lang.String) r0
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r1 = r10.delayedMessages
            java.lang.Object r1 = r1.get(r0)
            java.util.ArrayList r1 = (java.util.ArrayList) r1
            if (r1 == 0) goto L_0x0780
            r2 = 0
        L_0x075f:
            int r3 = r1.size()
            if (r2 >= r3) goto L_0x0771
            java.lang.Object r3 = r1.get(r2)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r3
            r10.performSendDelayedMessage(r3)
            int r2 = r2 + 1
            goto L_0x075f
        L_0x0771:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            r2.remove(r0)
            goto L_0x0780
        L_0x0777:
            int r0 = org.telegram.messenger.NotificationCenter.httpFileDidFailedLoad
            if (r6 == r0) goto L_0x0781
            int r0 = org.telegram.messenger.NotificationCenter.fileLoadFailed
            if (r6 != r0) goto L_0x0780
            goto L_0x0781
        L_0x0780:
            goto L_0x07a7
        L_0x0781:
            r0 = r35[r1]
            java.lang.String r0 = (java.lang.String) r0
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r1 = r10.delayedMessages
            java.lang.Object r1 = r1.get(r0)
            java.util.ArrayList r1 = (java.util.ArrayList) r1
            if (r1 == 0) goto L_0x07a7
            r2 = 0
        L_0x0790:
            int r3 = r1.size()
            if (r2 >= r3) goto L_0x07a2
            java.lang.Object r3 = r1.get(r2)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r3
            r3.markAsError()
            int r2 = r2 + 1
            goto L_0x0790
        L_0x07a2:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            r2.remove(r0)
        L_0x07a7:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    /* renamed from: lambda$didReceivedNotification$2$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m432x5b683917(File cacheFile, MessageObject messageObject, DelayedMessage message, String path) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda57(this, generatePhotoSizes(cacheFile.toString(), (Uri) null), messageObject, cacheFile, message, path));
    }

    /* renamed from: lambda$didReceivedNotification$1$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m431x7626ca56(TLRPC.TL_photo photo, MessageObject messageObject, File cacheFile, DelayedMessage message, String path) {
        if (photo != null) {
            messageObject.messageOwner.media.photo = photo;
            messageObject.messageOwner.attachPath = cacheFile.toString();
            ArrayList<TLRPC.Message> messages = new ArrayList<>();
            messages.add(messageObject.messageOwner);
            getMessagesStorage().putMessages(messages, false, true, false, 0, messageObject.scheduled);
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
            message.photoSize = (TLRPC.PhotoSize) photo.sizes.get(photo.sizes.size() - 1);
            message.locationParent = photo;
            message.httpLocation = null;
            if (message.type == 4) {
                message.performMediaUpload = true;
                performSendDelayedMessage(message, message.messageObjects.indexOf(messageObject));
                return;
            }
            performSendDelayedMessage(message);
            return;
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.e("can't load image " + path + " to file " + cacheFile.toString());
        }
        message.markAsError();
    }

    /* renamed from: lambda$didReceivedNotification$4$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m434x25eb1699(DelayedMessage message, File cacheFile, MessageObject messageObject) {
        TLRPC.Document document = message.obj.getDocument();
        boolean z = false;
        if (document.thumbs.isEmpty() || (document.thumbs.get(0).location instanceof TLRPC.TL_fileLocationUnavailable)) {
            try {
                Bitmap bitmap = ImageLoader.loadBitmap(cacheFile.getAbsolutePath(), (Uri) null, 90.0f, 90.0f, true);
                if (bitmap != null) {
                    document.thumbs.clear();
                    ArrayList<TLRPC.PhotoSize> arrayList = document.thumbs;
                    if (message.sendEncryptedRequest != null) {
                        z = true;
                    }
                    arrayList.add(ImageLoader.scaleAndSaveImage(bitmap, 90.0f, 90.0f, 55, z));
                    bitmap.recycle();
                }
            } catch (Exception e) {
                document.thumbs.clear();
                FileLog.e((Throwable) e);
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda32(this, message, cacheFile, document, messageObject));
    }

    /* renamed from: lambda$didReceivedNotification$3$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m433x40a9a7d8(DelayedMessage message, File cacheFile, TLRPC.Document document, MessageObject messageObject) {
        message.httpLocation = null;
        message.obj.messageOwner.attachPath = cacheFile.toString();
        if (!document.thumbs.isEmpty()) {
            TLRPC.PhotoSize photoSize = document.thumbs.get(0);
            if (!(photoSize instanceof TLRPC.TL_photoStrippedSize)) {
                message.photoSize = photoSize;
                message.locationParent = document;
            }
        }
        ArrayList<TLRPC.Message> messages = new ArrayList<>();
        messages.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(messages, false, true, false, 0, messageObject.scheduled);
        message.performMediaUpload = true;
        performSendDelayedMessage(message);
        getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, message.obj.messageOwner);
    }

    private void revertEditingMessageObject(MessageObject object) {
        object.cancelEditing = true;
        object.messageOwner.media = object.previousMedia;
        object.messageOwner.message = object.previousMessage;
        object.messageOwner.entities = object.previousMessageEntities;
        object.messageOwner.attachPath = object.previousAttachPath;
        object.messageOwner.send_state = 0;
        if (object.messageOwner.entities != null) {
            object.messageOwner.flags |= 128;
        } else {
            object.messageOwner.flags &= -129;
        }
        object.previousMedia = null;
        object.previousMessage = null;
        object.previousMessageEntities = null;
        object.previousAttachPath = null;
        object.videoEditedInfo = null;
        object.type = -1;
        object.setType();
        object.caption = null;
        if (object.type != 0) {
            object.generateCaption();
        } else {
            object.resetLayout();
            object.checkLayout();
        }
        ArrayList<TLRPC.Message> arr = new ArrayList<>();
        arr.add(object.messageOwner);
        getMessagesStorage().putMessages(arr, false, true, false, 0, object.scheduled);
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(object);
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(object.getDialogId()), arrayList);
    }

    public void cancelSendingMessage(MessageObject object) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(object);
        cancelSendingMessage(arrayList);
    }

    public void cancelSendingMessage(ArrayList<MessageObject> objects) {
        TLRPC.Message sendingMessage;
        Iterator<Map.Entry<String, ArrayList<DelayedMessage>>> it;
        boolean enc;
        long dialogId;
        int b;
        MessageObject messageObject;
        ArrayList<String> keysToRemove;
        ArrayList<MessageObject> arrayList = objects;
        ArrayList<String> keysToRemove2 = new ArrayList<>();
        ArrayList<DelayedMessage> checkReadyToSendGroups = new ArrayList<>();
        ArrayList<Integer> messageIds = new ArrayList<>();
        int c = 0;
        boolean enc2 = false;
        boolean scheduled = false;
        long dialogId2 = 0;
        while (c < objects.size()) {
            MessageObject object = arrayList.get(c);
            if (object.scheduled) {
                scheduled = true;
            }
            dialogId2 = object.getDialogId();
            messageIds.add(Integer.valueOf(object.getId()));
            TLRPC.Message sendingMessage2 = removeFromSendingMessages(object.getId(), object.scheduled);
            if (sendingMessage2 != null) {
                getConnectionsManager().cancelRequest(sendingMessage2.reqId, true);
            }
            Iterator<Map.Entry<String, ArrayList<DelayedMessage>>> it2 = this.delayedMessages.entrySet().iterator();
            while (it2.hasNext()) {
                Map.Entry<String, ArrayList<DelayedMessage>> entry = it2.next();
                ArrayList<DelayedMessage> messages = entry.getValue();
                int a = 0;
                while (true) {
                    if (a >= messages.size()) {
                        sendingMessage = sendingMessage2;
                        it = it2;
                        enc = enc2;
                        dialogId = dialogId2;
                        break;
                    }
                    DelayedMessage message = messages.get(a);
                    sendingMessage = sendingMessage2;
                    it = it2;
                    if (message.type == 4) {
                        MessageObject messageObject2 = null;
                        int b2 = 0;
                        while (true) {
                            MessageObject messageObject3 = messageObject2;
                            if (b2 >= message.messageObjects.size()) {
                                enc = enc2;
                                b = -1;
                                messageObject = messageObject3;
                                break;
                            }
                            MessageObject messageObject4 = message.messageObjects.get(b2);
                            enc = enc2;
                            MessageObject messageObject5 = messageObject4;
                            if (messageObject4.getId() == object.getId()) {
                                removeFromUploadingMessages(object.getId(), object.scheduled);
                                b = b2;
                                messageObject = messageObject5;
                                break;
                            }
                            b2++;
                            messageObject2 = messageObject5;
                            enc2 = enc;
                        }
                        if (b >= 0) {
                            message.messageObjects.remove(b);
                            message.messages.remove(b);
                            message.originalPaths.remove(b);
                            if (!message.parentObjects.isEmpty()) {
                                message.parentObjects.remove(b);
                            }
                            if (message.sendRequest != null) {
                                dialogId = dialogId2;
                                ((TLRPC.TL_messages_sendMultiMedia) message.sendRequest).multi_media.remove(b);
                            } else {
                                dialogId = dialogId2;
                                TLRPC.TL_messages_sendEncryptedMultiMedia request = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
                                request.messages.remove(b);
                                request.files.remove(b);
                            }
                            MediaController.getInstance().cancelVideoConvert(object);
                            String keyToRemove = (String) message.extraHashMap.get(messageObject);
                            if (keyToRemove != null) {
                                keysToRemove2.add(keyToRemove);
                            }
                            if (message.messageObjects.isEmpty()) {
                                message.sendDelayedRequests();
                                keysToRemove = keysToRemove2;
                                int i = b;
                                MessageObject messageObject6 = messageObject;
                            } else {
                                int i2 = b;
                                if (message.finalGroupMessage == object.getId()) {
                                    MessageObject prevMessage = message.messageObjects.get(message.messageObjects.size() - 1);
                                    message.finalGroupMessage = prevMessage.getId();
                                    MessageObject messageObject7 = messageObject;
                                    String str = keyToRemove;
                                    prevMessage.messageOwner.params.put("final", "1");
                                    TLRPC.TL_messages_messages messagesRes = new TLRPC.TL_messages_messages();
                                    messagesRes.messages.add(prevMessage.messageOwner);
                                    keysToRemove = keysToRemove2;
                                    getMessagesStorage().putMessages((TLRPC.messages_Messages) messagesRes, message.peer, -2, 0, false, scheduled);
                                } else {
                                    keysToRemove = keysToRemove2;
                                    MessageObject messageObject8 = messageObject;
                                    String str2 = keyToRemove;
                                }
                                if (!checkReadyToSendGroups.contains(message)) {
                                    checkReadyToSendGroups.add(message);
                                }
                            }
                            keysToRemove2 = keysToRemove;
                        } else {
                            MessageObject messageObject9 = messageObject;
                            dialogId = dialogId2;
                            int i3 = b;
                        }
                    } else {
                        ArrayList<String> keysToRemove3 = keysToRemove2;
                        enc = enc2;
                        dialogId = dialogId2;
                        if (message.obj.getId() == object.getId()) {
                            removeFromUploadingMessages(object.getId(), object.scheduled);
                            messages.remove(a);
                            message.sendDelayedRequests();
                            MediaController.getInstance().cancelVideoConvert(message.obj);
                            if (messages.size() == 0) {
                                keysToRemove2 = keysToRemove3;
                                keysToRemove2.add(entry.getKey());
                                if (message.sendEncryptedRequest != null) {
                                    enc2 = true;
                                }
                            } else {
                                keysToRemove2 = keysToRemove3;
                            }
                        } else {
                            keysToRemove2 = keysToRemove3;
                            a++;
                            ArrayList<MessageObject> arrayList2 = objects;
                            sendingMessage2 = sendingMessage;
                            it2 = it;
                            enc2 = enc;
                            dialogId2 = dialogId;
                        }
                    }
                }
                enc2 = enc;
                ArrayList<MessageObject> arrayList3 = objects;
                sendingMessage2 = sendingMessage;
                it2 = it;
                dialogId2 = dialogId;
            }
            boolean z = enc2;
            long j = dialogId2;
            c++;
            arrayList = objects;
        }
        for (int a2 = 0; a2 < keysToRemove2.size(); a2++) {
            String key = keysToRemove2.get(a2);
            if (key.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(key);
            } else {
                getFileLoader().cancelFileUpload(key, enc2);
            }
            stopVideoService(key);
            this.delayedMessages.remove(key);
        }
        int N = checkReadyToSendGroups.size();
        for (int a3 = 0; a3 < N; a3++) {
            sendReadyToSendGroup(checkReadyToSendGroups.get(a3), false, true);
        }
        if (objects.size() == 1) {
            ArrayList<MessageObject> arrayList4 = objects;
            if (arrayList4.get(0).isEditing() && arrayList4.get(0).previousMedia != null) {
                revertEditingMessageObject(arrayList4.get(0));
                return;
            }
        } else {
            ArrayList<MessageObject> arrayList5 = objects;
        }
        getMessagesController().deleteMessages(messageIds, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, dialogId2, false, scheduled);
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean unsent) {
        if (messageObject.getId() >= 0) {
            if (messageObject.isEditing()) {
                editMessage(messageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.TL_document) null, (String) null, (HashMap<String, String>) null, true, messageObject);
            }
            return false;
        } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction) {
            TLRPC.EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
            if (encryptedChat == null) {
                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled);
                messageObject.messageOwner.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            if (messageObject.messageOwner.random_id == 0) {
                messageObject.messageOwner.random_id = getNextRandomId();
            }
            if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL) {
                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionDeleteMessages) {
                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, (ArrayList<Long>) null, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionFlushHistory) {
                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionNotifyLayer) {
                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionReadMessages) {
                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, (ArrayList<Long>) null, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionScreenshotMessages) {
                getSecretChatHelper().sendScreenshotMessage(encryptedChat, (ArrayList<Long>) null, messageObject.messageOwner);
            } else if (!(messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionTyping)) {
                if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionResend) {
                    getSecretChatHelper().sendResendMessage(encryptedChat, 0, 0, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionCommitKey) {
                    getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionAbortKey) {
                    getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionRequestKey) {
                    getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionAcceptKey) {
                    getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionNoop) {
                    getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
                }
            }
            return true;
        } else {
            if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionScreenshotTaken) {
                sendScreenshotMessage(getMessagesController().getUser(Long.valueOf(messageObject.getDialogId())), messageObject.getReplyMsgId(), messageObject.messageOwner);
            }
            if (unsent) {
                this.unsentMessages.put(messageObject.getId(), messageObject);
            }
            sendMessage(messageObject);
            return true;
        }
    }

    /* access modifiers changed from: protected */
    public void processSentMessage(int id) {
        int prevSize = this.unsentMessages.size();
        this.unsentMessages.remove(id);
        if (prevSize != 0 && this.unsentMessages.size() == 0) {
            checkUnsentMessages();
        }
    }

    public void processForwardFromMyName(MessageObject messageObject, long did) {
        ArrayList<TLRPC.MessageEntity> entities;
        HashMap<String, String> params;
        MessageObject messageObject2 = messageObject;
        if (messageObject2 != null) {
            if (messageObject2.messageOwner.media == null || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty) || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaGame) || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice)) {
                MessageObject messageObject3 = messageObject2;
                if (messageObject3.messageOwner.message != null) {
                    TLRPC.WebPage webPage = null;
                    if (messageObject3.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) {
                        webPage = messageObject3.messageOwner.media.webpage;
                    }
                    if (messageObject3.messageOwner.entities == null || messageObject3.messageOwner.entities.isEmpty()) {
                        entities = null;
                    } else {
                        ArrayList<TLRPC.MessageEntity> entities2 = new ArrayList<>();
                        for (int a = 0; a < messageObject3.messageOwner.entities.size(); a++) {
                            TLRPC.MessageEntity entity = messageObject3.messageOwner.entities.get(a);
                            if ((entity instanceof TLRPC.TL_messageEntityBold) || (entity instanceof TLRPC.TL_messageEntityItalic) || (entity instanceof TLRPC.TL_messageEntityPre) || (entity instanceof TLRPC.TL_messageEntityCode) || (entity instanceof TLRPC.TL_messageEntityTextUrl) || (entity instanceof TLRPC.TL_messageEntitySpoiler)) {
                                entities2.add(entity);
                            }
                        }
                        entities = entities2;
                    }
                    sendMessage(messageObject3.messageOwner.message, did, messageObject3.replyMessageObject, (MessageObject) null, webPage, true, entities, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0, (MessageObject.SendAnimationData) null);
                } else if (DialogObject.isEncryptedDialog(did)) {
                    ArrayList<MessageObject> arrayList = new ArrayList<>();
                    arrayList.add(messageObject3);
                    sendMessage(arrayList, did, true, false, true, 0);
                }
            } else {
                if (!DialogObject.isEncryptedDialog(did) || messageObject2.messageOwner.peer_id == null || (!(messageObject2.messageOwner.media.photo instanceof TLRPC.TL_photo) && !(messageObject2.messageOwner.media.document instanceof TLRPC.TL_document))) {
                    params = null;
                } else {
                    HashMap<String, String> params2 = new HashMap<>();
                    params2.put("parentObject", "sent_" + messageObject2.messageOwner.peer_id.channel_id + "_" + messageObject.getId());
                    params = params2;
                }
                if (messageObject2.messageOwner.media.photo instanceof TLRPC.TL_photo) {
                    sendMessage((TLRPC.TL_photo) messageObject2.messageOwner.media.photo, (String) null, did, messageObject2.replyMessageObject, (MessageObject) null, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, (TLRPC.ReplyMarkup) null, params, true, 0, messageObject2.messageOwner.media.ttl_seconds, messageObject);
                    MessageObject messageObject4 = messageObject2;
                } else if (messageObject2.messageOwner.media.document instanceof TLRPC.TL_document) {
                    sendMessage((TLRPC.TL_document) messageObject2.messageOwner.media.document, (VideoEditedInfo) null, messageObject2.messageOwner.attachPath, did, messageObject2.replyMessageObject, (MessageObject) null, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, (TLRPC.ReplyMarkup) null, params, true, 0, messageObject2.messageOwner.media.ttl_seconds, messageObject, (MessageObject.SendAnimationData) null);
                    MessageObject messageObject5 = messageObject;
                } else {
                    MessageObject messageObject6 = messageObject;
                    if ((messageObject6.messageOwner.media instanceof TLRPC.TL_messageMediaVenue) || (messageObject6.messageOwner.media instanceof TLRPC.TL_messageMediaGeo)) {
                        sendMessage(messageObject6.messageOwner.media, did, messageObject6.replyMessageObject, (MessageObject) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    } else if (messageObject6.messageOwner.media.phone_number != null) {
                        TLRPC.TL_userContact_old2 tL_userContact_old2 = new TLRPC.TL_userContact_old2();
                        tL_userContact_old2.phone = messageObject6.messageOwner.media.phone_number;
                        tL_userContact_old2.first_name = messageObject6.messageOwner.media.first_name;
                        tL_userContact_old2.last_name = messageObject6.messageOwner.media.last_name;
                        tL_userContact_old2.id = messageObject6.messageOwner.media.user_id;
                        sendMessage((TLRPC.User) tL_userContact_old2, did, messageObject6.replyMessageObject, (MessageObject) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    } else if (!DialogObject.isEncryptedDialog(did)) {
                        ArrayList<MessageObject> arrayList2 = new ArrayList<>();
                        arrayList2.add(messageObject6);
                        sendMessage(arrayList2, did, true, false, true, 0);
                    }
                }
            }
        }
    }

    public void sendScreenshotMessage(TLRPC.User user, int messageId, TLRPC.Message resendMessage) {
        TLRPC.Message message;
        TLRPC.User user2 = user;
        int i = messageId;
        TLRPC.Message message2 = resendMessage;
        if (user2 == null || i == 0) {
        } else if (user2.id == getUserConfig().getClientUserId()) {
        } else {
            TLRPC.TL_messages_sendScreenshotNotification req = new TLRPC.TL_messages_sendScreenshotNotification();
            req.peer = new TLRPC.TL_inputPeerUser();
            req.peer.access_hash = user2.access_hash;
            req.peer.user_id = user2.id;
            if (message2 != null) {
                req.reply_to_msg_id = i;
                req.random_id = message2.random_id;
                message = resendMessage;
            } else {
                TLRPC.Message tL_messageService = new TLRPC.TL_messageService();
                tL_messageService.random_id = getNextRandomId();
                tL_messageService.dialog_id = user2.id;
                tL_messageService.unread = true;
                tL_messageService.out = true;
                int newMessageId = getUserConfig().getNewMessageId();
                tL_messageService.id = newMessageId;
                tL_messageService.local_id = newMessageId;
                tL_messageService.from_id = new TLRPC.TL_peerUser();
                tL_messageService.from_id.user_id = getUserConfig().getClientUserId();
                tL_messageService.flags |= 256;
                tL_messageService.flags |= 8;
                tL_messageService.reply_to = new TLRPC.TL_messageReplyHeader();
                tL_messageService.reply_to.reply_to_msg_id = i;
                tL_messageService.peer_id = new TLRPC.TL_peerUser();
                tL_messageService.peer_id.user_id = user2.id;
                tL_messageService.date = getConnectionsManager().getCurrentTime();
                tL_messageService.action = new TLRPC.TL_messageActionScreenshotTaken();
                getUserConfig().saveConfig(false);
                message = tL_messageService;
            }
            req.random_id = message.random_id;
            MessageObject newMsgObj = new MessageObject(this.currentAccount, message, false, true);
            newMsgObj.messageOwner.send_state = 1;
            newMsgObj.wasJustSent = true;
            ArrayList arrayList = new ArrayList();
            arrayList.add(newMsgObj);
            getMessagesController().updateInterfaceWithMessages(message.dialog_id, arrayList, false);
            getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
            ArrayList<TLRPC.Message> arr = new ArrayList<>();
            arr.add(message);
            getMessagesStorage().putMessages(arr, false, true, false, 0, false);
            ArrayList<TLRPC.Message> arrayList2 = arr;
            performSendMessageRequest(req, newMsgObj, (String) null, (DelayedMessage) null, (Object) null, (HashMap<String, String>) null, false);
        }
    }

    public void sendSticker(TLRPC.Document document, String query, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, Object parentObject, MessageObject.SendAnimationData sendAnimationData, boolean notify, int scheduleDate) {
        TLRPC.Document document2;
        HashMap<String, String> params;
        TLRPC.Document document3 = document;
        if (document3 != null) {
            if (DialogObject.isEncryptedDialog(peer)) {
                if (getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(peer))) != null) {
                    TLRPC.TL_document_layer82 newDocument = new TLRPC.TL_document_layer82();
                    newDocument.id = document3.id;
                    newDocument.access_hash = document3.access_hash;
                    newDocument.date = document3.date;
                    newDocument.mime_type = document3.mime_type;
                    newDocument.file_reference = document3.file_reference;
                    if (newDocument.file_reference == null) {
                        newDocument.file_reference = new byte[0];
                    }
                    newDocument.size = document3.size;
                    newDocument.dc_id = document3.dc_id;
                    newDocument.attributes = new ArrayList(document3.attributes);
                    if (newDocument.mime_type == null) {
                        newDocument.mime_type = "";
                    }
                    TLRPC.PhotoSize thumb = FileLoader.getClosestPhotoSizeWithSize(document3.thumbs, 90);
                    if ((thumb instanceof TLRPC.TL_photoSize) || (thumb instanceof TLRPC.TL_photoSizeProgressive)) {
                        File file = FileLoader.getPathToAttach(thumb, true);
                        if (file.exists()) {
                            try {
                                int length = (int) file.length();
                                byte[] arr = new byte[((int) file.length())];
                                new RandomAccessFile(file, "r").readFully(arr);
                                TLRPC.PhotoSize newThumb = new TLRPC.TL_photoCachedSize();
                                TLRPC.TL_fileLocation_layer82 fileLocation = new TLRPC.TL_fileLocation_layer82();
                                fileLocation.dc_id = thumb.location.dc_id;
                                fileLocation.volume_id = thumb.location.volume_id;
                                fileLocation.local_id = thumb.location.local_id;
                                fileLocation.secret = thumb.location.secret;
                                newThumb.location = fileLocation;
                                newThumb.size = thumb.size;
                                newThumb.w = thumb.w;
                                newThumb.h = thumb.h;
                                newThumb.type = thumb.type;
                                newThumb.bytes = arr;
                                newDocument.thumbs.add(newThumb);
                                newDocument.flags = 1 | newDocument.flags;
                            } catch (Exception e) {
                                FileLog.e((Throwable) e);
                            }
                        }
                    }
                    if (newDocument.thumbs.isEmpty()) {
                        TLRPC.PhotoSize thumb2 = new TLRPC.TL_photoSizeEmpty();
                        thumb2.type = "s";
                        newDocument.thumbs.add(thumb2);
                    }
                    document2 = newDocument;
                } else {
                    return;
                }
            } else {
                document2 = document3;
            }
            TLRPC.Document finalDocument = document2;
            if (MessageObject.isGifDocument(document2)) {
                mediaSendQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda37(this, finalDocument, peer, replyToMsg, replyToTopMsg, notify, scheduleDate, parentObject, sendAnimationData));
                String str = query;
                return;
            }
            if (!TextUtils.isEmpty(query)) {
                params = new HashMap<>();
                params.put("query", query);
            } else {
                String str2 = query;
                params = null;
            }
            sendMessage((TLRPC.TL_document) finalDocument, (VideoEditedInfo) null, (String) null, peer, replyToMsg, replyToTopMsg, (String) null, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentObject, sendAnimationData);
        }
    }

    /* renamed from: lambda$sendSticker$6$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m491lambda$sendSticker$6$orgtelegrammessengerSendMessagesHelper(TLRPC.Document finalDocument, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate, Object parentObject, MessageObject.SendAnimationData sendAnimationData) {
        String docExt;
        File docFile;
        TLRPC.Document document = finalDocument;
        Bitmap[] bitmapFinal = new Bitmap[1];
        String[] keyFinal = new String[1];
        String mediaLocationKey = ImageLocation.getForDocument(finalDocument).getKey((Object) null, (Object) null, false);
        if ("video/mp4".equals(document.mime_type)) {
            docExt = ".mp4";
        } else if ("video/x-matroska".equals(document.mime_type)) {
            docExt = ".mkv";
        } else {
            docExt = "";
        }
        File directory = FileLoader.getDirectory(3);
        File docFile2 = new File(directory, mediaLocationKey + docExt);
        if (!docFile2.exists()) {
            File directory2 = FileLoader.getDirectory(2);
            docFile = new File(directory2, mediaLocationKey + docExt);
        } else {
            docFile = docFile2;
        }
        ensureMediaThumbExists(false, finalDocument, docFile.getAbsolutePath(), (Uri) null, 0);
        keyFinal[0] = getKeyForPhotoSize(FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 320), bitmapFinal, true, true);
        String str = docExt;
        String str2 = mediaLocationKey;
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda68(this, bitmapFinal, keyFinal, finalDocument, peer, replyToMsg, replyToTopMsg, notify, scheduleDate, parentObject, sendAnimationData));
    }

    /* renamed from: lambda$sendSticker$5$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m490lambda$sendSticker$5$orgtelegrammessengerSendMessagesHelper(Bitmap[] bitmapFinal, String[] keyFinal, TLRPC.Document finalDocument, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate, Object parentObject, MessageObject.SendAnimationData sendAnimationData) {
        if (!(bitmapFinal[0] == null || keyFinal[0] == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapFinal[0]), keyFinal[0], false);
        }
        sendMessage((TLRPC.TL_document) finalDocument, (VideoEditedInfo) null, (String) null, peer, replyToMsg, replyToTopMsg, (String) null, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate, 0, parentObject, sendAnimationData);
    }

    /* JADX WARNING: Removed duplicated region for block: B:113:0x0390  */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x0475  */
    /* JADX WARNING: Removed duplicated region for block: B:307:0x08e0  */
    /* JADX WARNING: Removed duplicated region for block: B:310:0x08f0  */
    /* JADX WARNING: Removed duplicated region for block: B:313:0x091d  */
    /* JADX WARNING: Removed duplicated region for block: B:316:0x0938  */
    /* JADX WARNING: Removed duplicated region for block: B:319:0x0947  */
    /* JADX WARNING: Removed duplicated region for block: B:323:0x0962  */
    /* JADX WARNING: Removed duplicated region for block: B:324:0x0964  */
    /* JADX WARNING: Removed duplicated region for block: B:327:0x09a9  */
    /* JADX WARNING: Removed duplicated region for block: B:328:0x09d1  */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x02d3  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public int sendMessage(java.util.ArrayList<org.telegram.messenger.MessageObject> r52, long r53, boolean r55, boolean r56, boolean r57, int r58) {
        /*
            r51 = this;
            r15 = r51
            r14 = r52
            r12 = r53
            r11 = r55
            r10 = r56
            r4 = r58
            if (r14 == 0) goto L_0x0ab6
            boolean r0 = r52.isEmpty()
            if (r0 == 0) goto L_0x001b
            r5 = r12
            r3 = r14
            r4 = r15
            r47 = 0
            goto L_0x0abb
        L_0x001b:
            r0 = 0
            org.telegram.messenger.UserConfig r1 = r51.getUserConfig()
            long r7 = r1.getClientUserId()
            r1 = 0
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r53)
            if (r3 != 0) goto L_0x0a92
            org.telegram.messenger.MessagesController r3 = r51.getMessagesController()
            org.telegram.tgnet.TLRPC$Peer r3 = r3.getPeer(r12)
            r5 = 0
            r6 = 1
            r9 = 1
            r16 = 1
            r17 = 1
            r18 = 0
            r19 = 0
            boolean r21 = org.telegram.messenger.DialogObject.isUserDialog(r53)
            if (r21 == 0) goto L_0x006a
            org.telegram.messenger.MessagesController r2 = r51.getMessagesController()
            r23 = r0
            java.lang.Long r0 = java.lang.Long.valueOf(r53)
            org.telegram.tgnet.TLRPC$User r0 = r2.getUser(r0)
            if (r0 != 0) goto L_0x0056
            r2 = 0
            return r2
        L_0x0056:
            r0 = 0
            r2 = r0
            r24 = r1
            r25 = r5
            r26 = r6
            r27 = r9
            r28 = r16
            r29 = r17
            r1 = r18
            r5 = r19
            goto L_0x00e1
        L_0x006a:
            r23 = r0
            org.telegram.messenger.MessagesController r0 = r51.getMessagesController()
            r24 = r1
            long r1 = -r12
            java.lang.Long r1 = java.lang.Long.valueOf(r1)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r1)
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r1 == 0) goto L_0x00ab
            boolean r5 = r0.signatures
            boolean r1 = r0.megagroup
            r2 = 1
            r1 = r1 ^ r2
            if (r1 == 0) goto L_0x00a4
            boolean r2 = r0.has_link
            if (r2 == 0) goto L_0x00a4
            org.telegram.messenger.MessagesController r2 = r51.getMessagesController()
            r26 = r5
            r25 = r6
            long r5 = r0.id
            org.telegram.tgnet.TLRPC$ChatFull r2 = r2.getChatFull(r5)
            if (r2 == 0) goto L_0x00a8
            long r5 = r2.linked_chat_id
            r19 = r5
            r5 = r26
            goto L_0x00af
        L_0x00a4:
            r26 = r5
            r25 = r6
        L_0x00a8:
            r5 = r26
            goto L_0x00af
        L_0x00ab:
            r25 = r6
            r1 = r24
        L_0x00af:
            if (r0 == 0) goto L_0x00be
            org.telegram.messenger.MessagesController r2 = r51.getMessagesController()
            r24 = r5
            long r5 = r0.id
            java.lang.String r18 = r2.getAdminRank(r5, r7)
            goto L_0x00c0
        L_0x00be:
            r24 = r5
        L_0x00c0:
            boolean r6 = org.telegram.messenger.ChatObject.canSendStickers(r0)
            boolean r9 = org.telegram.messenger.ChatObject.canSendMedia(r0)
            boolean r17 = org.telegram.messenger.ChatObject.canSendEmbed(r0)
            boolean r16 = org.telegram.messenger.ChatObject.canSendPolls(r0)
            r2 = r0
            r26 = r6
            r27 = r9
            r28 = r16
            r29 = r17
            r5 = r19
            r25 = r24
            r24 = r1
            r1 = r18
        L_0x00e1:
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray
            r0.<init>()
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>()
            java.util.ArrayList r16 = new java.util.ArrayList
            r16.<init>()
            java.util.ArrayList r17 = new java.util.ArrayList
            r17.<init>()
            java.util.ArrayList r18 = new java.util.ArrayList
            r18.<init>()
            androidx.collection.LongSparseArray r19 = new androidx.collection.LongSparseArray
            r19.<init>()
            r30 = r5
            org.telegram.messenger.MessagesController r5 = r51.getMessagesController()
            org.telegram.tgnet.TLRPC$InputPeer r5 = r5.getInputPeer((long) r12)
            r32 = 0
            int r6 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r6 != 0) goto L_0x0111
            r6 = 1
            goto L_0x0112
        L_0x0111:
            r6 = 0
        L_0x0112:
            r20 = r5
            r4 = r30
            r30 = 0
            r15 = r19
            r50 = r30
            r30 = r6
            r6 = r17
            r17 = r9
            r9 = r50
        L_0x0124:
            r19 = r15
            int r15 = r52.size()
            if (r9 >= r15) goto L_0x0a6b
            java.lang.Object r15 = r14.get(r9)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            int r31 = r15.getId()
            r34 = r9
            if (r31 <= 0) goto L_0x09d7
            boolean r31 = r15.needDrawBluredPreview()
            if (r31 == 0) goto L_0x0165
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r42 = r17
            r41 = r18
            r31 = r19
            r43 = r20
            r2 = r34
            r4 = 0
            r47 = 0
            r48 = 1
            r34 = r16
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x09fa
        L_0x0165:
            if (r26 != 0) goto L_0x01d8
            boolean r36 = r15.isSticker()
            if (r36 != 0) goto L_0x017f
            boolean r36 = r15.isAnimatedSticker()
            if (r36 != 0) goto L_0x017f
            boolean r36 = r15.isGif()
            if (r36 != 0) goto L_0x017f
            boolean r36 = r15.isGame()
            if (r36 == 0) goto L_0x01d8
        L_0x017f:
            if (r23 != 0) goto L_0x01b1
            r9 = 8
            boolean r9 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r2, r9)
            if (r9 == 0) goto L_0x018c
            r36 = 4
            goto L_0x018e
        L_0x018c:
            r36 = 1
        L_0x018e:
            r23 = r36
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r3 = r14
            r15 = r19
            r43 = r20
            r2 = r34
            r47 = 0
            r48 = 1
            r4 = r51
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a4c
        L_0x01b1:
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r3 = r14
            r42 = r17
            r41 = r18
            r31 = r19
            r43 = r20
            r2 = r34
            r47 = 0
            r48 = 1
            r4 = r51
            r34 = r16
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a44
        L_0x01d8:
            if (r27 != 0) goto L_0x0240
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto
            if (r9 != 0) goto L_0x01ea
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument
            if (r9 == 0) goto L_0x0240
        L_0x01ea:
            if (r23 != 0) goto L_0x0219
            r9 = 7
            boolean r9 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r2, r9)
            if (r9 == 0) goto L_0x01f5
            r9 = 5
            goto L_0x01f6
        L_0x01f5:
            r9 = 2
        L_0x01f6:
            r23 = r9
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r3 = r14
            r15 = r19
            r43 = r20
            r2 = r34
            r47 = 0
            r48 = 1
            r4 = r51
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a4c
        L_0x0219:
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r3 = r14
            r42 = r17
            r41 = r18
            r31 = r19
            r43 = r20
            r2 = r34
            r47 = 0
            r48 = 1
            r4 = r51
            r34 = r16
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a44
        L_0x0240:
            if (r28 != 0) goto L_0x02a1
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll
            if (r9 == 0) goto L_0x02a1
            if (r23 != 0) goto L_0x027a
            r9 = 10
            boolean r9 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r2, r9)
            if (r9 == 0) goto L_0x0256
            r9 = 6
            goto L_0x0257
        L_0x0256:
            r9 = 3
        L_0x0257:
            r23 = r9
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r3 = r14
            r15 = r19
            r43 = r20
            r2 = r34
            r47 = 0
            r48 = 1
            r4 = r51
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a4c
        L_0x027a:
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r3 = r14
            r42 = r17
            r41 = r18
            r31 = r19
            r43 = r20
            r2 = r34
            r47 = 0
            r48 = 1
            r4 = r51
            r34 = r16
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a44
        L_0x02a1:
            org.telegram.tgnet.TLRPC$TL_message r9 = new org.telegram.tgnet.TLRPC$TL_message
            r9.<init>()
            r37 = 0
            if (r11 != 0) goto L_0x0480
            long r39 = r15.getDialogId()
            int r41 = (r39 > r7 ? 1 : (r39 == r7 ? 0 : -1))
            if (r41 != 0) goto L_0x02c8
            boolean r39 = r15.isFromUser()
            if (r39 == 0) goto L_0x02c8
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.from_id
            r40 = r1
            r39 = r2
            long r1 = r11.user_id
            int r11 = (r1 > r7 ? 1 : (r1 == r7 ? 0 : -1))
            if (r11 != 0) goto L_0x02cc
            r1 = 1
            goto L_0x02cd
        L_0x02c8:
            r40 = r1
            r39 = r2
        L_0x02cc:
            r1 = 0
        L_0x02cd:
            boolean r2 = r15.isForwarded()
            if (r2 == 0) goto L_0x0390
            org.telegram.tgnet.TLRPC$TL_messageFwdHeader r2 = new org.telegram.tgnet.TLRPC$TL_messageFwdHeader
            r2.<init>()
            r9.fwd_from = r2
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r11 = 1
            r2 = r2 & r11
            if (r2 == 0) goto L_0x02f5
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r14 = r2.flags
            r14 = r14 | r11
            r2.flags = r14
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            org.telegram.tgnet.TLRPC$Peer r11 = r11.from_id
            r2.from_id = r11
        L_0x02f5:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r2 = r2 & 32
            if (r2 == 0) goto L_0x0311
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r11 = r11 | 32
            r2.flags = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            java.lang.String r11 = r11.from_name
            r2.from_name = r11
        L_0x0311:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r11 = 4
            r2 = r2 & r11
            if (r2 == 0) goto L_0x032c
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r14 = r2.flags
            r14 = r14 | r11
            r2.flags = r14
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            int r11 = r11.channel_post
            r2.channel_post = r11
        L_0x032c:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r11 = 8
            r2 = r2 & r11
            if (r2 == 0) goto L_0x0348
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r14 = r2.flags
            r11 = r11 | r14
            r2.flags = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            java.lang.String r11 = r11.post_author
            r2.post_author = r11
        L_0x0348:
            int r2 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r2 == 0) goto L_0x034e
            if (r24 == 0) goto L_0x037e
        L_0x034e:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r2 = r2 & 16
            if (r2 == 0) goto L_0x037e
            long r41 = r15.getDialogId()
            boolean r2 = org.telegram.messenger.UserObject.isReplyUser((long) r41)
            if (r2 != 0) goto L_0x037e
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r11 = r11 | 16
            r2.flags = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            org.telegram.tgnet.TLRPC$Peer r11 = r11.saved_from_peer
            r2.saved_from_peer = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            int r11 = r11.saved_from_msg_id
            r2.saved_from_msg_id = r11
        L_0x037e:
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            int r11 = r11.date
            r2.date = r11
            r2 = 4
            r9.flags = r2
            r14 = r0
            r43 = r1
            goto L_0x044b
        L_0x0390:
            if (r1 != 0) goto L_0x0448
            long r41 = r15.getFromChatId()
            org.telegram.tgnet.TLRPC$TL_messageFwdHeader r2 = new org.telegram.tgnet.TLRPC$TL_messageFwdHeader
            r2.<init>()
            r9.fwd_from = r2
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r15.getId()
            r2.channel_post = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r14 = 4
            r11 = r11 | r14
            r2.flags = r11
            boolean r2 = r15.isFromUser()
            if (r2 == 0) goto L_0x03c7
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.from_id
            r2.from_id = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r14 = 1
            r11 = r11 | r14
            r2.flags = r11
            r14 = r0
            r43 = r1
            goto L_0x0404
        L_0x03c7:
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$TL_peerChannel r11 = new org.telegram.tgnet.TLRPC$TL_peerChannel
            r11.<init>()
            r2.from_id = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r2 = r2.from_id
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.peer_id
            r14 = r0
            r43 = r1
            long r0 = r11.channel_id
            r2.channel_id = r0
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            int r1 = r0.flags
            r2 = 1
            r1 = r1 | r2
            r0.flags = r1
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            boolean r0 = r0.post
            if (r0 == 0) goto L_0x0404
            int r0 = (r41 > r37 ? 1 : (r41 == r37 ? 0 : -1))
            if (r0 <= 0) goto L_0x0404
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id
            if (r1 == 0) goto L_0x03fe
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id
            goto L_0x0402
        L_0x03fe:
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.peer_id
        L_0x0402:
            r0.from_id = r1
        L_0x0404:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.lang.String r0 = r0.post_author
            if (r0 == 0) goto L_0x040b
            goto L_0x043e
        L_0x040b:
            boolean r0 = r15.isOutOwner()
            if (r0 != 0) goto L_0x043e
            int r0 = (r41 > r37 ? 1 : (r41 == r37 ? 0 : -1))
            if (r0 <= 0) goto L_0x043e
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            boolean r0 = r0.post
            if (r0 == 0) goto L_0x043e
            org.telegram.messenger.MessagesController r0 = r51.getMessagesController()
            java.lang.Long r1 = java.lang.Long.valueOf(r41)
            org.telegram.tgnet.TLRPC$User r0 = r0.getUser(r1)
            if (r0 == 0) goto L_0x043e
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r9.fwd_from
            java.lang.String r2 = r0.first_name
            java.lang.String r11 = r0.last_name
            java.lang.String r2 = org.telegram.messenger.ContactsController.formatName(r2, r11)
            r1.post_author = r2
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r9.fwd_from
            int r2 = r1.flags
            r11 = 8
            r2 = r2 | r11
            r1.flags = r2
        L_0x043e:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            int r0 = r0.date
            r9.date = r0
            r0 = 4
            r9.flags = r0
            goto L_0x044b
        L_0x0448:
            r14 = r0
            r43 = r1
        L_0x044b:
            int r0 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r0 != 0) goto L_0x0485
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            if (r0 == 0) goto L_0x0485
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            int r1 = r0.flags
            r1 = r1 | 16
            r0.flags = r1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            int r1 = r15.getId()
            r0.saved_from_msg_id = r1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.peer_id
            r0.saved_from_peer = r1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r0 = r0.saved_from_peer
            long r0 = r0.user_id
            int r2 = (r0 > r7 ? 1 : (r0 == r7 ? 0 : -1))
            if (r2 != 0) goto L_0x0485
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r0 = r0.saved_from_peer
            long r1 = r15.getDialogId()
            r0.user_id = r1
            goto L_0x0485
        L_0x0480:
            r14 = r0
            r40 = r1
            r39 = r2
        L_0x0485:
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r9.params = r0
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r9.params
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = ""
            r1.append(r2)
            int r11 = r15.getId()
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            java.lang.String r11 = "fwd_id"
            r0.put(r11, r1)
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r9.params
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r1.append(r2)
            long r11 = r15.getDialogId()
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            java.lang.String r11 = "fwd_peer"
            r0.put(r11, r1)
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r0 = r0.restriction_reason
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x04d9
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r0 = r0.restriction_reason
            r9.restriction_reason = r0
            int r0 = r9.flags
            r1 = 4194304(0x400000, float:5.877472E-39)
            r0 = r0 | r1
            r9.flags = r0
        L_0x04d9:
            if (r29 != 0) goto L_0x04eb
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage
            if (r0 == 0) goto L_0x04eb
            org.telegram.tgnet.TLRPC$TL_messageMediaEmpty r0 = new org.telegram.tgnet.TLRPC$TL_messageMediaEmpty
            r0.<init>()
            r9.media = r0
            goto L_0x04f1
        L_0x04eb:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            r9.media = r0
        L_0x04f1:
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r9.media
            if (r0 == 0) goto L_0x04fb
            int r0 = r9.flags
            r0 = r0 | 512(0x200, float:7.175E-43)
            r9.flags = r0
        L_0x04fb:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.via_bot_id
            int r11 = (r0 > r37 ? 1 : (r0 == r37 ? 0 : -1))
            if (r11 == 0) goto L_0x050f
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.via_bot_id
            r9.via_bot_id = r0
            int r0 = r9.flags
            r0 = r0 | 2048(0x800, float:2.87E-42)
            r9.flags = r0
        L_0x050f:
            int r0 = (r4 > r37 ? 1 : (r4 == r37 ? 0 : -1))
            if (r0 == 0) goto L_0x0531
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = new org.telegram.tgnet.TLRPC$TL_messageReplies
            r0.<init>()
            r9.replies = r0
            org.telegram.tgnet.TLRPC$MessageReplies r0 = r9.replies
            r1 = 1
            r0.comments = r1
            org.telegram.tgnet.TLRPC$MessageReplies r0 = r9.replies
            r0.channel_id = r4
            org.telegram.tgnet.TLRPC$MessageReplies r0 = r9.replies
            int r11 = r0.flags
            r11 = r11 | r1
            r0.flags = r11
            int r0 = r9.flags
            r1 = 8388608(0x800000, float:1.17549435E-38)
            r0 = r0 | r1
            r9.flags = r0
        L_0x0531:
            if (r10 == 0) goto L_0x0537
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r9.media
            if (r0 != 0) goto L_0x053d
        L_0x0537:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.lang.String r0 = r0.message
            r9.message = r0
        L_0x053d:
            java.lang.String r0 = r9.message
            if (r0 != 0) goto L_0x0543
            r9.message = r2
        L_0x0543:
            int r0 = r15.getId()
            r9.fwd_msg_id = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.lang.String r0 = r0.attachPath
            r9.attachPath = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r0.entities
            r9.entities = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r0 = r0.reply_markup
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_replyInlineMarkup
            if (r0 == 0) goto L_0x061f
            org.telegram.tgnet.TLRPC$TL_replyInlineMarkup r0 = new org.telegram.tgnet.TLRPC$TL_replyInlineMarkup
            r0.<init>()
            r9.reply_markup = r0
            r0 = 0
            r1 = 0
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r11 = r11.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r11 = r11.rows
            int r11 = r11.size()
        L_0x0570:
            if (r1 >= r11) goto L_0x0604
            org.telegram.tgnet.TLRPC$Message r12 = r15.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r12 = r12.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r12 = r12.rows
            java.lang.Object r12 = r12.get(r1)
            org.telegram.tgnet.TLRPC$TL_keyboardButtonRow r12 = (org.telegram.tgnet.TLRPC.TL_keyboardButtonRow) r12
            r13 = 0
            r35 = 0
            r36 = r0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r0 = r12.buttons
            int r0 = r0.size()
            r41 = r4
            r4 = r35
        L_0x058d:
            if (r4 >= r0) goto L_0x05f3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r5 = r12.buttons
            java.lang.Object r5 = r5.get(r4)
            org.telegram.tgnet.TLRPC$KeyboardButton r5 = (org.telegram.tgnet.TLRPC.KeyboardButton) r5
            r35 = r0
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonUrlAuth
            if (r0 != 0) goto L_0x05ae
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonUrl
            if (r0 != 0) goto L_0x05ae
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline
            if (r0 != 0) goto L_0x05ae
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy
            if (r0 == 0) goto L_0x05aa
            goto L_0x05ae
        L_0x05aa:
            r0 = 1
            r43 = r11
            goto L_0x05f9
        L_0x05ae:
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonUrlAuth
            if (r0 == 0) goto L_0x05d6
            org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth r0 = new org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth
            r0.<init>()
            r43 = r11
            int r11 = r5.flags
            r0.flags = r11
            java.lang.String r11 = r5.fwd_text
            if (r11 == 0) goto L_0x05c8
            java.lang.String r11 = r5.fwd_text
            r0.fwd_text = r11
            r0.text = r11
            goto L_0x05cc
        L_0x05c8:
            java.lang.String r11 = r5.text
            r0.text = r11
        L_0x05cc:
            java.lang.String r11 = r5.url
            r0.url = r11
            int r11 = r5.button_id
            r0.button_id = r11
            r5 = r0
            goto L_0x05d8
        L_0x05d6:
            r43 = r11
        L_0x05d8:
            if (r13 != 0) goto L_0x05e7
            org.telegram.tgnet.TLRPC$TL_keyboardButtonRow r0 = new org.telegram.tgnet.TLRPC$TL_keyboardButtonRow
            r0.<init>()
            org.telegram.tgnet.TLRPC$ReplyMarkup r11 = r9.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r11 = r11.rows
            r11.add(r0)
            r13 = r0
        L_0x05e7:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r0 = r13.buttons
            r0.add(r5)
            int r4 = r4 + 1
            r0 = r35
            r11 = r43
            goto L_0x058d
        L_0x05f3:
            r35 = r0
            r43 = r11
            r0 = r36
        L_0x05f9:
            if (r0 == 0) goto L_0x05fc
            goto L_0x060a
        L_0x05fc:
            int r1 = r1 + 1
            r4 = r41
            r11 = r43
            goto L_0x0570
        L_0x0604:
            r36 = r0
            r41 = r4
            r43 = r11
        L_0x060a:
            if (r0 != 0) goto L_0x0613
            int r1 = r9.flags
            r1 = r1 | 64
            r9.flags = r1
            goto L_0x0621
        L_0x0613:
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            r4 = 0
            r1.reply_markup = r4
            int r1 = r9.flags
            r1 = r1 & -65
            r9.flags = r1
            goto L_0x0621
        L_0x061f:
            r41 = r4
        L_0x0621:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r9.entities
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x062f
            int r0 = r9.flags
            r0 = r0 | 128(0x80, float:1.794E-43)
            r9.flags = r0
        L_0x062f:
            java.lang.String r0 = r9.attachPath
            if (r0 != 0) goto L_0x0635
            r9.attachPath = r2
        L_0x0635:
            org.telegram.messenger.UserConfig r0 = r51.getUserConfig()
            int r0 = r0.getNewMessageId()
            r9.id = r0
            r9.local_id = r0
            r0 = 1
            r9.out = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.grouped_id
            r35 = r0
            int r2 = (r0 > r37 ? 1 : (r0 == r37 ? 0 : -1))
            if (r2 == 0) goto L_0x067a
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.grouped_id
            r2 = r14
            java.lang.Object r0 = r2.get(r0)
            java.lang.Long r0 = (java.lang.Long) r0
            if (r0 != 0) goto L_0x066c
            java.security.SecureRandom r1 = org.telegram.messenger.Utilities.random
            long r4 = r1.nextLong()
            java.lang.Long r0 = java.lang.Long.valueOf(r4)
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            long r4 = r1.grouped_id
            r2.put(r4, r0)
        L_0x066c:
            long r4 = r0.longValue()
            r9.grouped_id = r4
            int r1 = r9.flags
            r4 = 131072(0x20000, float:1.83671E-40)
            r1 = r1 | r4
            r9.flags = r1
            goto L_0x067b
        L_0x067a:
            r2 = r14
        L_0x067b:
            long r0 = r3.channel_id
            int r4 = (r0 > r37 ? 1 : (r0 == r37 ? 0 : -1))
            if (r4 == 0) goto L_0x069e
            if (r24 == 0) goto L_0x069e
            if (r25 == 0) goto L_0x0691
            org.telegram.tgnet.TLRPC$TL_peerUser r0 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r0.<init>()
            r9.from_id = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r9.from_id
            r0.user_id = r7
            goto L_0x0693
        L_0x0691:
            r9.from_id = r3
        L_0x0693:
            r0 = 1
            r9.post = r0
            r12 = r53
            r14 = r2
            r4 = r39
            r11 = r40
            goto L_0x06e3
        L_0x069e:
            r0 = 1
            org.telegram.messenger.MessagesController r1 = r51.getMessagesController()
            r12 = r53
            long r4 = -r12
            org.telegram.tgnet.TLRPC$ChatFull r1 = r1.getChatFull(r4)
            r14 = r2
            r4 = r39
            long r1 = org.telegram.messenger.ChatObject.getSendAsPeerId(r4, r1, r0)
            int r0 = (r1 > r7 ? 1 : (r1 == r7 ? 0 : -1))
            if (r0 != 0) goto L_0x06c9
            org.telegram.tgnet.TLRPC$TL_peerUser r0 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r0.<init>()
            r9.from_id = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r9.from_id
            r0.user_id = r7
            int r0 = r9.flags
            r0 = r0 | 256(0x100, float:3.59E-43)
            r9.flags = r0
            r11 = r40
            goto L_0x06e3
        L_0x06c9:
            org.telegram.messenger.MessagesController r0 = r51.getMessagesController()
            org.telegram.tgnet.TLRPC$Peer r0 = r0.getPeer(r1)
            r9.from_id = r0
            if (r40 == 0) goto L_0x06e1
            r11 = r40
            r9.post_author = r11
            int r0 = r9.flags
            r5 = 65536(0x10000, float:9.18355E-41)
            r0 = r0 | r5
            r9.flags = r0
            goto L_0x06e3
        L_0x06e1:
            r11 = r40
        L_0x06e3:
            long r0 = r9.random_id
            int r2 = (r0 > r37 ? 1 : (r0 == r37 ? 0 : -1))
            if (r2 != 0) goto L_0x06ef
            long r0 = r51.getNextRandomId()
            r9.random_id = r0
        L_0x06ef:
            long r0 = r9.random_id
            java.lang.Long r0 = java.lang.Long.valueOf(r0)
            r6.add(r0)
            long r0 = r9.random_id
            r2 = r19
            r2.put(r0, r9)
            int r0 = r9.fwd_msg_id
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r1 = r18
            r1.add(r0)
            r0 = r58
            r39 = r41
            if (r0 == 0) goto L_0x0712
            r5 = r0
            goto L_0x071a
        L_0x0712:
            org.telegram.tgnet.ConnectionsManager r5 = r51.getConnectionsManager()
            int r5 = r5.getCurrentTime()
        L_0x071a:
            r9.date = r5
            r19 = r2
            r5 = r20
            boolean r2 = r5 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel
            if (r2 == 0) goto L_0x0732
            if (r24 == 0) goto L_0x0732
            if (r0 != 0) goto L_0x074b
            r2 = 1
            r9.views = r2
            int r2 = r9.flags
            r2 = r2 | 1024(0x400, float:1.435E-42)
            r9.flags = r2
            goto L_0x074b
        L_0x0732:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            int r2 = r2.flags
            r2 = r2 & 1024(0x400, float:1.435E-42)
            if (r2 == 0) goto L_0x0748
            if (r0 != 0) goto L_0x0748
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            int r2 = r2.views
            r9.views = r2
            int r2 = r9.flags
            r2 = r2 | 1024(0x400, float:1.435E-42)
            r9.flags = r2
        L_0x0748:
            r2 = 1
            r9.unread = r2
        L_0x074b:
            r9.dialog_id = r12
            r9.peer_id = r3
            boolean r2 = org.telegram.messenger.MessageObject.isVoiceMessage(r9)
            if (r2 != 0) goto L_0x075e
            boolean r2 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r9)
            if (r2 == 0) goto L_0x075c
            goto L_0x075e
        L_0x075c:
            r2 = 1
            goto L_0x0775
        L_0x075e:
            boolean r2 = r5 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel
            if (r2 == 0) goto L_0x0772
            long r41 = r15.getChannelId()
            int r2 = (r41 > r37 ? 1 : (r41 == r37 ? 0 : -1))
            if (r2 == 0) goto L_0x0772
            boolean r2 = r15.isContentUnread()
            r9.media_unread = r2
            r2 = 1
            goto L_0x0775
        L_0x0772:
            r2 = 1
            r9.media_unread = r2
        L_0x0775:
            r18 = r3
            org.telegram.messenger.MessageObject r3 = new org.telegram.messenger.MessageObject
            r20 = r14
            r31 = r19
            r14 = r51
            r19 = r4
            int r4 = r14.currentAccount
            r3.<init>(r4, r9, r2, r2)
            r4 = r3
            if (r0 == 0) goto L_0x078b
            r2 = 1
            goto L_0x078c
        L_0x078b:
            r2 = 0
        L_0x078c:
            r4.scheduled = r2
            org.telegram.tgnet.TLRPC$Message r2 = r4.messageOwner
            r3 = 1
            r2.send_state = r3
            r4.wasJustSent = r3
            r2 = r17
            r2.add(r4)
            r3 = r16
            r3.add(r9)
            r16 = r7
            org.telegram.messenger.MessageObject r7 = r15.replyMessageObject
            if (r7 == 0) goto L_0x07db
            r7 = 0
        L_0x07a6:
            int r8 = r52.size()
            if (r7 >= r8) goto L_0x07d6
            r8 = r52
            java.lang.Object r37 = r8.get(r7)
            org.telegram.messenger.MessageObject r37 = (org.telegram.messenger.MessageObject) r37
            r38 = r11
            int r11 = r37.getId()
            org.telegram.messenger.MessageObject r10 = r15.replyMessageObject
            int r10 = r10.getId()
            if (r11 != r10) goto L_0x07cf
            org.telegram.tgnet.TLRPC$Message r10 = r4.messageOwner
            org.telegram.messenger.MessageObject r11 = r15.replyMessageObject
            org.telegram.tgnet.TLRPC$Message r11 = r11.messageOwner
            r10.replyMessage = r11
            org.telegram.messenger.MessageObject r10 = r15.replyMessageObject
            r4.replyMessageObject = r10
            goto L_0x07df
        L_0x07cf:
            int r7 = r7 + 1
            r10 = r56
            r11 = r38
            goto L_0x07a6
        L_0x07d6:
            r8 = r52
            r38 = r11
            goto L_0x07df
        L_0x07db:
            r8 = r52
            r38 = r11
        L_0x07df:
            if (r0 == 0) goto L_0x07e3
            r7 = 1
            goto L_0x07e4
        L_0x07e3:
            r7 = 0
        L_0x07e4:
            r14.putToSendingMessages(r9, r7)
            r37 = 0
            boolean r7 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r7 == 0) goto L_0x0821
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r10 = "forward message user_id = "
            r7.append(r10)
            long r10 = r5.user_id
            r7.append(r10)
            java.lang.String r10 = " chat_id = "
            r7.append(r10)
            long r10 = r5.chat_id
            r7.append(r10)
            java.lang.String r10 = " channel_id = "
            r7.append(r10)
            long r10 = r5.channel_id
            r7.append(r10)
            java.lang.String r10 = " access_hash = "
            r7.append(r10)
            long r10 = r5.access_hash
            r7.append(r10)
            java.lang.String r7 = r7.toString()
            org.telegram.messenger.FileLog.d(r7)
        L_0x0821:
            int r7 = r3.size()
            r10 = 100
            if (r7 == r10) goto L_0x086e
            int r7 = r52.size()
            r10 = 1
            int r7 = r7 - r10
            r11 = r34
            if (r11 == r7) goto L_0x0870
            int r7 = r52.size()
            int r7 = r7 - r10
            if (r11 == r7) goto L_0x084f
            int r7 = r11 + 1
            java.lang.Object r7 = r8.get(r7)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            long r41 = r7.getDialogId()
            long r43 = r15.getDialogId()
            int r7 = (r41 > r43 ? 1 : (r41 == r43 ? 0 : -1))
            if (r7 == 0) goto L_0x084f
            goto L_0x0870
        L_0x084f:
            r41 = r1
            r42 = r2
            r34 = r3
            r43 = r5
            r3 = r8
            r2 = r11
            r4 = r14
            r21 = r16
            r45 = r18
            r46 = r19
            r44 = r20
            r47 = 0
            r48 = 1
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0a44
        L_0x086e:
            r11 = r34
        L_0x0870:
            org.telegram.messenger.MessagesStorage r41 = r51.getMessagesStorage()
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>(r3)
            r43 = 0
            r44 = 1
            r45 = 0
            r46 = 0
            if (r0 == 0) goto L_0x0886
            r47 = 1
            goto L_0x0888
        L_0x0886:
            r47 = 0
        L_0x0888:
            r42 = r7
            r41.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r42, (boolean) r43, (boolean) r44, (boolean) r45, (int) r46, (boolean) r47)
            org.telegram.messenger.MessagesController r7 = r51.getMessagesController()
            if (r0 == 0) goto L_0x0895
            r10 = 1
            goto L_0x0896
        L_0x0895:
            r10 = 0
        L_0x0896:
            r7.updateInterfaceWithMessages(r12, r2, r10)
            org.telegram.messenger.NotificationCenter r7 = r51.getNotificationCenter()
            int r10 = org.telegram.messenger.NotificationCenter.dialogsNeedReload
            r34 = r4
            r41 = r9
            r4 = 0
            java.lang.Object[] r9 = new java.lang.Object[r4]
            r7.postNotificationName(r10, r9)
            org.telegram.messenger.UserConfig r7 = r51.getUserConfig()
            r7.saveConfig(r4)
            org.telegram.tgnet.TLRPC$TL_messages_forwardMessages r4 = new org.telegram.tgnet.TLRPC$TL_messages_forwardMessages
            r4.<init>()
            r10 = r4
            r10.to_peer = r5
            if (r57 == 0) goto L_0x08db
            int r4 = r14.currentAccount
            android.content.SharedPreferences r4 = org.telegram.messenger.MessagesController.getNotificationsSettings(r4)
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r9 = "silent_"
            r7.append(r9)
            r7.append(r12)
            java.lang.String r7 = r7.toString()
            r9 = 0
            boolean r4 = r4.getBoolean(r7, r9)
            if (r4 == 0) goto L_0x08d9
            goto L_0x08db
        L_0x08d9:
            r4 = 0
            goto L_0x08dc
        L_0x08db:
            r4 = 1
        L_0x08dc:
            r10.silent = r4
            if (r0 == 0) goto L_0x08e8
            r10.schedule_date = r0
            int r4 = r10.flags
            r4 = r4 | 1024(0x400, float:1.435E-42)
            r10.flags = r4
        L_0x08e8:
            org.telegram.tgnet.TLRPC$Message r4 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r4 = r4.peer_id
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_peerChannel
            if (r4 == 0) goto L_0x091d
            org.telegram.messenger.MessagesController r4 = r51.getMessagesController()
            org.telegram.tgnet.TLRPC$Message r7 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r7 = r7.peer_id
            r9 = r11
            long r11 = r7.channel_id
            java.lang.Long r7 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r4 = r4.getChat(r7)
            org.telegram.tgnet.TLRPC$TL_inputPeerChannel r7 = new org.telegram.tgnet.TLRPC$TL_inputPeerChannel
            r7.<init>()
            r10.from_peer = r7
            org.telegram.tgnet.TLRPC$InputPeer r7 = r10.from_peer
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.peer_id
            long r11 = r11.channel_id
            r7.channel_id = r11
            if (r4 == 0) goto L_0x091c
            org.telegram.tgnet.TLRPC$InputPeer r7 = r10.from_peer
            long r11 = r4.access_hash
            r7.access_hash = r11
        L_0x091c:
            goto L_0x0925
        L_0x091d:
            r9 = r11
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r4 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty
            r4.<init>()
            r10.from_peer = r4
        L_0x0925:
            r10.random_id = r6
            r10.id = r1
            r11 = r55
            r10.drop_author = r11
            r12 = r56
            r10.drop_media_captions = r12
            int r4 = r52.size()
            r13 = 1
            if (r4 != r13) goto L_0x0947
            r4 = 0
            java.lang.Object r7 = r8.get(r4)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            org.telegram.tgnet.TLRPC$Message r7 = r7.messageOwner
            boolean r7 = r7.with_my_score
            if (r7 == 0) goto L_0x0948
            r7 = 1
            goto L_0x0949
        L_0x0947:
            r4 = 0
        L_0x0948:
            r7 = 0
        L_0x0949:
            r10.with_my_score = r7
            r21 = r16
            r8 = r3
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>(r2)
            r42 = r2
            r2 = r9
            r16 = r41
            r41 = r1
            r9 = r7
            r7 = r31
            r1 = 2147483646(0x7ffffffe, float:NaN)
            if (r0 != r1) goto L_0x0964
            r1 = 1
            goto L_0x0965
        L_0x0964:
            r1 = 0
        L_0x0965:
            r43 = r5
            r5 = r1
            org.telegram.tgnet.ConnectionsManager r1 = r51.getConnectionsManager()
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76 r13 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76
            r44 = r20
            r0 = r13
            r14 = r1
            r1 = r51
            r4 = r2
            r17 = r3
            r45 = r18
            r46 = r19
            r47 = 0
            r48 = 1
            r2 = r53
            r49 = r4
            r18 = r34
            r4 = r58
            r12 = r10
            r10 = r15
            r11 = r45
            r19 = r12
            r34 = r17
            r50 = r30
            r30 = r6
            r6 = r50
            r0.<init>(r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, r12)
            r0 = 68
            r1 = r19
            r14.sendRequest(r1, r13, r0)
            int r0 = r52.size()
            int r0 = r0 + -1
            r2 = r49
            if (r2 == r0) goto L_0x09d1
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            java.util.ArrayList r4 = new java.util.ArrayList
            r4.<init>()
            java.util.ArrayList r10 = new java.util.ArrayList
            r10.<init>()
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray
            r11.<init>()
            r17 = r0
            r16 = r3
            r30 = r4
            r18 = r10
            r15 = r11
            r4 = r51
            r3 = r52
            goto L_0x0a4c
        L_0x09d1:
            r4 = r51
            r3 = r52
            goto L_0x0a44
        L_0x09d7:
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r42 = r17
            r41 = r18
            r31 = r19
            r43 = r20
            r2 = r34
            r4 = 0
            r47 = 0
            r48 = 1
            r34 = r16
            r50 = r30
            r30 = r6
            r6 = r50
        L_0x09fa:
            int r0 = r15.type
            if (r0 != 0) goto L_0x0a3f
            java.lang.CharSequence r0 = r15.messageText
            boolean r0 = android.text.TextUtils.isEmpty(r0)
            if (r0 != 0) goto L_0x0a3f
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            if (r0 == 0) goto L_0x0a13
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            org.telegram.tgnet.TLRPC$WebPage r9 = r0.webpage
            goto L_0x0a14
        L_0x0a13:
            r9 = r4
        L_0x0a14:
            r0 = r9
            java.lang.CharSequence r1 = r15.messageText
            java.lang.String r8 = r1.toString()
            r11 = 0
            r12 = 0
            if (r0 == 0) goto L_0x0a21
            r14 = 1
            goto L_0x0a22
        L_0x0a21:
            r14 = 0
        L_0x0a22:
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r1.entities
            r16 = 0
            r17 = 0
            r20 = 0
            r7 = r51
            r9 = r53
            r13 = r0
            r3 = r52
            r4 = r51
            r5 = r15
            r15 = r1
            r18 = r57
            r19 = r58
            r7.sendMessage(r8, r9, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20)
            goto L_0x0a44
        L_0x0a3f:
            r4 = r51
            r3 = r52
            r5 = r15
        L_0x0a44:
            r15 = r31
            r16 = r34
            r18 = r41
            r17 = r42
        L_0x0a4c:
            int r9 = r2 + 1
            r12 = r53
            r11 = r55
            r10 = r56
            r14 = r3
            r7 = r21
            r1 = r38
            r4 = r39
            r20 = r43
            r0 = r44
            r3 = r45
            r2 = r46
            r50 = r30
            r30 = r6
            r6 = r50
            goto L_0x0124
        L_0x0a6b:
            r44 = r0
            r38 = r1
            r46 = r2
            r45 = r3
            r39 = r4
            r21 = r7
            r2 = r9
            r3 = r14
            r34 = r16
            r42 = r17
            r41 = r18
            r31 = r19
            r43 = r20
            r4 = r51
            r50 = r30
            r30 = r6
            r6 = r50
            r5 = r53
            r0 = r23
            r1 = r24
            goto L_0x0ab5
        L_0x0a92:
            r23 = r0
            r24 = r1
            r21 = r7
            r3 = r14
            r4 = r15
            r0 = 0
        L_0x0a9b:
            int r1 = r52.size()
            if (r0 >= r1) goto L_0x0aaf
            java.lang.Object r1 = r3.get(r0)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            r5 = r53
            r4.processForwardFromMyName(r1, r5)
            int r0 = r0 + 1
            goto L_0x0a9b
        L_0x0aaf:
            r5 = r53
            r0 = r23
            r1 = r24
        L_0x0ab5:
            return r0
        L_0x0ab6:
            r5 = r12
            r3 = r14
            r4 = r15
            r47 = 0
        L_0x0abb:
            return r47
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.sendMessage(java.util.ArrayList, long, boolean, boolean, boolean, int):int");
    }

    /* renamed from: lambda$sendMessage$14$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m482lambda$sendMessage$14$orgtelegrammessengerSendMessagesHelper(long peer, int scheduleDate, boolean scheduledOnline, boolean toMyself, LongSparseArray messagesByRandomIdsFinal, ArrayList newMsgObjArr, ArrayList newMsgArr, MessageObject msgObj, TLRPC.Peer peer_id, TLRPC.TL_messages_forwardMessages req, TLObject response, TLRPC.TL_error error) {
        SendMessagesHelper sendMessagesHelper;
        Integer value;
        SparseLongArray newMessagesByIds;
        TLRPC.Updates updates;
        int i;
        int sentCount;
        boolean currentSchedule;
        TLRPC.Message message;
        int sentCount2;
        TLRPC.Updates updates2;
        int i2;
        int i3 = scheduleDate;
        ArrayList arrayList = newMsgObjArr;
        ArrayList arrayList2 = newMsgArr;
        TLRPC.TL_error tL_error = error;
        if (tL_error == null) {
            SparseLongArray newMessagesByIds2 = new SparseLongArray();
            TLRPC.Updates updates3 = (TLRPC.Updates) response;
            int a1 = 0;
            while (a1 < updates3.updates.size()) {
                TLRPC.Update update = updates3.updates.get(a1);
                if (update instanceof TLRPC.TL_updateMessageID) {
                    TLRPC.TL_updateMessageID updateMessageID = (TLRPC.TL_updateMessageID) update;
                    newMessagesByIds2.put(updateMessageID.id, updateMessageID.random_id);
                    updates3.updates.remove(a1);
                    a1--;
                }
                a1++;
            }
            Integer value2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(peer));
            if (value2 == null) {
                Integer value3 = Integer.valueOf(getMessagesStorage().getDialogReadMax(true, peer));
                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(peer), value3);
                value = value3;
            } else {
                long j = peer;
                value = value2;
            }
            int a12 = 0;
            int sentCount3 = 0;
            while (a12 < updates3.updates.size()) {
                TLRPC.Update update2 = updates3.updates.get(a12);
                if ((update2 instanceof TLRPC.TL_updateNewMessage) || (update2 instanceof TLRPC.TL_updateNewChannelMessage) || (update2 instanceof TLRPC.TL_updateNewScheduledMessage)) {
                    boolean currentSchedule2 = i3 != 0;
                    updates3.updates.remove(a12);
                    int a13 = a12 - 1;
                    if ((update2 instanceof TLRPC.TL_updateNewMessage) != 0) {
                        TLRPC.TL_updateNewMessage updateNewMessage = (TLRPC.TL_updateNewMessage) update2;
                        message = updateNewMessage.message;
                        currentSchedule = currentSchedule2;
                        sentCount = sentCount3;
                        getMessagesController().processNewDifferenceParams(-1, updateNewMessage.pts, -1, updateNewMessage.pts_count);
                        TLRPC.Update update3 = update2;
                    } else {
                        currentSchedule = currentSchedule2;
                        sentCount = sentCount3;
                        if (update2 instanceof TLRPC.TL_updateNewScheduledMessage) {
                            message = ((TLRPC.TL_updateNewScheduledMessage) update2).message;
                            TLRPC.Update update4 = update2;
                        } else {
                            TLRPC.TL_updateNewChannelMessage updateNewChannelMessage = (TLRPC.TL_updateNewChannelMessage) update2;
                            message = updateNewChannelMessage.message;
                            TLRPC.Update update5 = update2;
                            getMessagesController().processNewChannelDifferenceParams(updateNewChannelMessage.pts, updateNewChannelMessage.pts_count, message.peer_id.channel_id);
                        }
                    }
                    if (scheduledOnline && message.date != NUM) {
                        currentSchedule = false;
                    }
                    ImageLoader.saveMessageThumbs(message);
                    if (!currentSchedule) {
                        message.unread = value.intValue() < message.id;
                    }
                    if (toMyself) {
                        message.out = true;
                        message.unread = false;
                        message.media_unread = false;
                    }
                    long random_id = newMessagesByIds2.get(message.id);
                    if (random_id != 0) {
                        TLRPC.Message newMsgObj1 = (TLRPC.Message) messagesByRandomIdsFinal.get(random_id);
                        if (newMsgObj1 == null) {
                            newMessagesByIds = newMessagesByIds2;
                            updates2 = updates3;
                            sentCount2 = sentCount;
                            i2 = 1;
                        } else {
                            int index = arrayList.indexOf(newMsgObj1);
                            if (index == -1) {
                                newMessagesByIds = newMessagesByIds2;
                                updates2 = updates3;
                                sentCount2 = sentCount;
                                i2 = 1;
                            } else {
                                MessageObject msgObj1 = (MessageObject) arrayList2.get(index);
                                arrayList.remove(index);
                                arrayList2.remove(index);
                                int i4 = index;
                                int oldId = newMsgObj1.id;
                                ArrayList<TLRPC.Message> sentMessages = new ArrayList<>();
                                sentMessages.add(message);
                                msgObj1.messageOwner.post_author = message.post_author;
                                if ((message.flags & 33554432) != 0) {
                                    msgObj1.messageOwner.ttl_period = message.ttl_period;
                                    msgObj1.messageOwner.flags |= 33554432;
                                }
                                long j2 = random_id;
                                newMessagesByIds = newMessagesByIds2;
                                ArrayList<TLRPC.Message> sentMessages2 = sentMessages;
                                updateMediaPaths(msgObj1, message, message.id, (String) null, true);
                                int existFlags = msgObj1.getMediaExistanceFlags();
                                TLRPC.Message newMsgObj12 = newMsgObj1;
                                newMsgObj12.id = message.id;
                                int sentCount4 = sentCount + 1;
                                if (i3 == 0 || currentSchedule) {
                                    SendMessagesHelper$$ExternalSyntheticLambda46 sendMessagesHelper$$ExternalSyntheticLambda46 = r0;
                                    DispatchQueue storageQueue = getMessagesStorage().getStorageQueue();
                                    updates = updates3;
                                    TLRPC.Message message2 = newMsgObj12;
                                    i = 1;
                                    TLRPC.Message message3 = message;
                                    SendMessagesHelper$$ExternalSyntheticLambda46 sendMessagesHelper$$ExternalSyntheticLambda462 = new SendMessagesHelper$$ExternalSyntheticLambda46(this, newMsgObj12, peer_id, oldId, scheduleDate, sentMessages2, peer, message, existFlags);
                                    storageQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda46);
                                } else {
                                    MessageObject messageObject = msgObj1;
                                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda14(this, oldId, newMsgObj12, sentMessages2, msgObj, scheduleDate));
                                    updates = updates3;
                                    i = 1;
                                }
                                a12 = a13;
                                sentCount3 = sentCount4;
                            }
                        }
                    } else {
                        long j3 = random_id;
                        newMessagesByIds = newMessagesByIds2;
                        updates2 = updates3;
                        sentCount2 = sentCount;
                        i2 = 1;
                        TLRPC.Message message4 = message;
                    }
                    sentCount3 = sentCount2;
                    a12 = a13;
                } else {
                    newMessagesByIds = newMessagesByIds2;
                    updates = updates3;
                    i = 1;
                }
                a12 += i;
                long j4 = peer;
                arrayList = newMsgObjArr;
                arrayList2 = newMsgArr;
                updates3 = updates;
                newMessagesByIds2 = newMessagesByIds;
                i3 = scheduleDate;
            }
            TLRPC.Updates updates4 = updates3;
            int sentCount5 = sentCount3;
            if (!updates4.updates.isEmpty()) {
                getMessagesController().processUpdates(updates4, false);
            }
            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, sentCount5);
            sendMessagesHelper = this;
            TLRPC.TL_messages_forwardMessages tL_messages_forwardMessages = req;
        } else {
            sendMessagesHelper = this;
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda53(sendMessagesHelper, tL_error, req));
        }
        for (int a14 = 0; a14 < newMsgObjArr.size(); a14++) {
            TLRPC.Message newMsgObj13 = (TLRPC.Message) newMsgObjArr.get(a14);
            int i5 = scheduleDate;
            getMessagesStorage().markMessageAsSendError(newMsgObj13, i5 != 0);
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda39(sendMessagesHelper, newMsgObj13, i5));
        }
        int i6 = scheduleDate;
        ArrayList arrayList3 = newMsgObjArr;
    }

    /* renamed from: lambda$sendMessage$9$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m485lambda$sendMessage$9$orgtelegrammessengerSendMessagesHelper(int oldId, TLRPC.Message newMsgObj1, ArrayList sentMessages, MessageObject msgObj, int scheduleDate) {
        ArrayList<Integer> messageIds = new ArrayList<>();
        messageIds.add(Integer.valueOf(oldId));
        getMessagesController().deleteMessages(messageIds, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, newMsgObj1.dialog_id, false, true);
        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda26(this, sentMessages, msgObj, newMsgObj1, oldId, scheduleDate));
    }

    /* renamed from: lambda$sendMessage$8$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m484lambda$sendMessage$8$orgtelegrammessengerSendMessagesHelper(ArrayList sentMessages, MessageObject msgObj, TLRPC.Message newMsgObj1, int oldId, int scheduleDate) {
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda29(this, msgObj, newMsgObj1, oldId, scheduleDate));
    }

    /* renamed from: lambda$sendMessage$7$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m483lambda$sendMessage$7$orgtelegrammessengerSendMessagesHelper(MessageObject msgObj, TLRPC.Message newMsgObj1, int oldId, int scheduleDate) {
        ArrayList<MessageObject> messageObjects = new ArrayList<>();
        boolean z = true;
        messageObjects.add(new MessageObject(msgObj.currentAccount, msgObj.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(newMsgObj1.dialog_id, messageObjects, false);
        getMediaDataController().increasePeerRaiting(newMsgObj1.dialog_id);
        processSentMessage(oldId);
        if (scheduleDate == 0) {
            z = false;
        }
        removeFromSendingMessages(oldId, z);
    }

    /* renamed from: lambda$sendMessage$11$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m479lambda$sendMessage$11$orgtelegrammessengerSendMessagesHelper(TLRPC.Message newMsgObj1, TLRPC.Peer peer_id, int oldId, int scheduleDate, ArrayList sentMessages, long peer, TLRPC.Message message, int existFlags) {
        TLRPC.Message message2 = newMsgObj1;
        getMessagesStorage().updateMessageStateAndId(message2.random_id, MessageObject.getPeerId(peer_id), Integer.valueOf(oldId), message2.id, 0, false, scheduleDate != 0 ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, scheduleDate != 0);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda45(this, newMsgObj1, peer, oldId, message, existFlags, scheduleDate));
    }

    /* renamed from: lambda$sendMessage$10$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m478lambda$sendMessage$10$orgtelegrammessengerSendMessagesHelper(TLRPC.Message newMsgObj1, long peer, int oldId, TLRPC.Message message, int existFlags, int scheduleDate) {
        boolean z = false;
        newMsgObj1.send_state = 0;
        getMediaDataController().increasePeerRaiting(peer);
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.messageReceivedByServer;
        Object[] objArr = new Object[7];
        objArr[0] = Integer.valueOf(oldId);
        objArr[1] = Integer.valueOf(message.id);
        objArr[2] = message;
        objArr[3] = Long.valueOf(peer);
        objArr[4] = 0L;
        objArr[5] = Integer.valueOf(existFlags);
        objArr[6] = Boolean.valueOf(scheduleDate != 0);
        notificationCenter.postNotificationName(i, objArr);
        processSentMessage(oldId);
        if (scheduleDate != 0) {
            z = true;
        }
        removeFromSendingMessages(oldId, z);
    }

    /* renamed from: lambda$sendMessage$12$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m480lambda$sendMessage$12$orgtelegrammessengerSendMessagesHelper(TLRPC.TL_error error, TLRPC.TL_messages_forwardMessages req) {
        AlertsCreator.processError(this.currentAccount, error, (BaseFragment) null, req, new Object[0]);
    }

    /* renamed from: lambda$sendMessage$13$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m481lambda$sendMessage$13$orgtelegrammessengerSendMessagesHelper(TLRPC.Message newMsgObj1, int scheduleDate) {
        newMsgObj1.send_state = 2;
        boolean z = true;
        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsgObj1.id));
        processSentMessage(newMsgObj1.id);
        int i = newMsgObj1.id;
        if (scheduleDate == 0) {
            z = false;
        }
        removeFromSendingMessages(i, z);
    }

    private void writePreviousMessageData(TLRPC.Message message, SerializedData data) {
        if (message.media == null) {
            new TLRPC.TL_messageMediaEmpty().serializeToStream(data);
        } else {
            message.media.serializeToStream(data);
        }
        String str = "";
        data.writeString(message.message != null ? message.message : str);
        if (message.attachPath != null) {
            str = message.attachPath;
        }
        data.writeString(str);
        int size = message.entities.size();
        int count = size;
        data.writeInt32(size);
        for (int a = 0; a < count; a++) {
            message.entities.get(a).serializeToStream(data);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v1, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v3, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v2, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v6, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v8, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v9, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v10, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v11, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v8, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v12, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v10, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v17, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v12, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v13, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v19, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v18, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v18, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v19, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v19, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v20, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v20, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v21, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v22, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v23, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v13, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v32, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v29, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v47, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v39, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v42, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v14, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v15, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v16, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v17, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v18, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r27v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v12, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v13, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v15, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v14, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v16, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v17, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v19, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v20, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v21, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v22, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v23, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v24, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v82, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v43, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v18, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v85, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v20, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v86, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v87, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v89, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v5, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v16, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v6, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v21, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v42, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v43, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v65, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v44, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v71, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v45, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v46, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v47, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v48, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX WARNING: type inference failed for: r25v4 */
    /* JADX WARNING: type inference failed for: r22v4 */
    /* JADX WARNING: type inference failed for: r20v10 */
    /* JADX WARNING: type inference failed for: r20v11 */
    /* JADX WARNING: type inference failed for: r22v10 */
    /* JADX WARNING: type inference failed for: r22v11 */
    /* JADX WARNING: type inference failed for: r25v10 */
    /* JADX WARNING: type inference failed for: r25v11 */
    /* JADX WARNING: type inference failed for: r25v12 */
    /* JADX WARNING: type inference failed for: r25v14 */
    /* JADX WARNING: type inference failed for: r25v20 */
    /* JADX WARNING: type inference failed for: r22v14 */
    /* JADX WARNING: type inference failed for: r20v17 */
    /* JADX WARNING: type inference failed for: r20v18 */
    /* JADX WARNING: type inference failed for: r20v19 */
    /* JADX WARNING: type inference failed for: r22v16 */
    /* JADX WARNING: type inference failed for: r25v22 */
    /* JADX WARNING: type inference failed for: r25v23 */
    /* JADX WARNING: Code restructure failed: missing block: B:123:0x0210, code lost:
        if (r14.type != 2) goto L_0x0229;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x004c, code lost:
        if (org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r6.layer) < 101) goto L_0x0051;
     */
    /* JADX WARNING: Incorrect type for immutable var: ssa=org.telegram.tgnet.TLRPC$TL_document, code=java.lang.Object, for r35v0, types: [org.telegram.tgnet.TLRPC$TL_document, org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:100:0x01d1 A[Catch:{ Exception -> 0x0054 }] */
    /* JADX WARNING: Removed duplicated region for block: B:109:0x01f3  */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0069 A[SYNTHETIC, Splitter:B:24:0x0069] */
    /* JADX WARNING: Removed duplicated region for block: B:349:0x066f A[SYNTHETIC, Splitter:B:349:0x066f] */
    /* JADX WARNING: Removed duplicated region for block: B:356:0x0682 A[SYNTHETIC, Splitter:B:356:0x0682] */
    /* JADX WARNING: Removed duplicated region for block: B:361:0x0694 A[SYNTHETIC, Splitter:B:361:0x0694] */
    /* JADX WARNING: Removed duplicated region for block: B:375:0x06e8 A[Catch:{ Exception -> 0x0678 }] */
    /* JADX WARNING: Removed duplicated region for block: B:377:0x06ec A[Catch:{ Exception -> 0x0678 }] */
    /* JADX WARNING: Removed duplicated region for block: B:380:0x06f2  */
    /* JADX WARNING: Removed duplicated region for block: B:390:0x0736 A[Catch:{ Exception -> 0x0718 }] */
    /* JADX WARNING: Removed duplicated region for block: B:67:0x0118 A[SYNTHETIC, Splitter:B:67:0x0118] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void editMessage(org.telegram.messenger.MessageObject r32, org.telegram.tgnet.TLRPC.TL_photo r33, org.telegram.messenger.VideoEditedInfo r34, java.lang.Object r35, java.lang.String r36, java.util.HashMap<java.lang.String, java.lang.String> r37, boolean r38, java.lang.Object r39) {
        /*
            r31 = this;
            r13 = r31
            r14 = r32
            r1 = r33
            r2 = r35
            r3 = r36
            java.lang.String r0 = "originalPath"
            java.lang.String r4 = "parentObject"
            if (r14 != 0) goto L_0x0011
            return
        L_0x0011:
            if (r37 != 0) goto L_0x0019
            java.util.HashMap r5 = new java.util.HashMap
            r5.<init>()
            goto L_0x001b
        L_0x0019:
            r5 = r37
        L_0x001b:
            org.telegram.tgnet.TLRPC$Message r15 = r14.messageOwner
            r6 = 0
            r14.cancelEditing = r6
            r7 = -1
            r8 = 0
            long r9 = r32.getDialogId()     // Catch:{ Exception -> 0x0857 }
            r11 = r9
            r9 = 1
            boolean r10 = org.telegram.messenger.DialogObject.isEncryptedDialog(r11)     // Catch:{ Exception -> 0x0857 }
            if (r10 == 0) goto L_0x0062
            int r10 = org.telegram.messenger.DialogObject.getEncryptedChatId(r11)     // Catch:{ Exception -> 0x0054 }
            org.telegram.messenger.MessagesController r6 = r31.getMessagesController()     // Catch:{ Exception -> 0x0054 }
            r16 = r7
            java.lang.Integer r7 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = r6.getEncryptedChat(r7)     // Catch:{ Exception -> 0x0054 }
            if (r6 == 0) goto L_0x004f
            int r7 = r6.layer     // Catch:{ Exception -> 0x0054 }
            int r7 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r7)     // Catch:{ Exception -> 0x0054 }
            r17 = r6
            r6 = 101(0x65, float:1.42E-43)
            if (r7 >= r6) goto L_0x0064
            goto L_0x0051
        L_0x004f:
            r17 = r6
        L_0x0051:
            r9 = 0
            r10 = r9
            goto L_0x0065
        L_0x0054:
            r0 = move-exception
            r16 = r34
            r9 = r1
            r8 = r2
            r7 = r3
            r28 = r5
            r19 = r15
            r5 = r39
            goto L_0x0863
        L_0x0062:
            r16 = r7
        L_0x0064:
            r10 = r9
        L_0x0065:
            java.lang.String r6 = "http"
            if (r38 == 0) goto L_0x0118
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0054 }
            if (r7 != 0) goto L_0x00c8
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x00c8
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaEmpty     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x0080
            goto L_0x00c8
        L_0x0080:
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x0095
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$Photo r7 = r7.photo     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$TL_photo r7 = (org.telegram.tgnet.TLRPC.TL_photo) r7     // Catch:{ Exception -> 0x0054 }
            r1 = r7
            r7 = 2
            r9 = r34
            goto L_0x00cb
        L_0x0095:
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x00c3
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$Document r7 = r7.document     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$TL_document r7 = (org.telegram.tgnet.TLRPC.TL_document) r7     // Catch:{ Exception -> 0x0054 }
            r2 = r7
            boolean r7 = org.telegram.messenger.MessageObject.isVideoDocument(r2)     // Catch:{ Exception -> 0x00b5 }
            if (r7 != 0) goto L_0x00b1
            if (r34 == 0) goto L_0x00af
            goto L_0x00b1
        L_0x00af:
            r7 = 7
            goto L_0x00b2
        L_0x00b1:
            r7 = 3
        L_0x00b2:
            org.telegram.messenger.VideoEditedInfo r9 = r14.videoEditedInfo     // Catch:{ Exception -> 0x00b5 }
            goto L_0x00cb
        L_0x00b5:
            r0 = move-exception
            r16 = r34
            r9 = r1
            r8 = r2
            r7 = r3
            r28 = r5
            r19 = r15
            r5 = r39
            goto L_0x0863
        L_0x00c3:
            r9 = r34
            r7 = r16
            goto L_0x00cb
        L_0x00c8:
            r7 = 1
            r9 = r34
        L_0x00cb:
            r33 = r1
            java.util.HashMap<java.lang.String, java.lang.String> r1 = r15.params     // Catch:{ Exception -> 0x0109 }
            r5 = r1
            if (r39 != 0) goto L_0x00df
            if (r5 == 0) goto L_0x00df
            boolean r1 = r5.containsKey(r4)     // Catch:{ Exception -> 0x0109 }
            if (r1 == 0) goto L_0x00df
            java.lang.Object r1 = r5.get(r4)     // Catch:{ Exception -> 0x0109 }
            goto L_0x00e1
        L_0x00df:
            r1 = r39
        L_0x00e1:
            java.lang.String r4 = r15.message     // Catch:{ Exception -> 0x00fb }
            r14.editingMessage = r4     // Catch:{ Exception -> 0x00fb }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r4 = r15.entities     // Catch:{ Exception -> 0x00fb }
            r14.editingMessageEntities = r4     // Catch:{ Exception -> 0x00fb }
            java.lang.String r4 = r15.attachPath     // Catch:{ Exception -> 0x00fb }
            r3 = r4
            r4 = r5
            r21 = r8
            r5 = r1
            r8 = r2
            r1 = r9
            r9 = r33
            r30 = r7
            r7 = r3
            r3 = r30
            goto L_0x01ef
        L_0x00fb:
            r0 = move-exception
            r8 = r2
            r7 = r3
            r28 = r5
            r16 = r9
            r19 = r15
            r9 = r33
            r5 = r1
            goto L_0x0863
        L_0x0109:
            r0 = move-exception
            r8 = r2
            r7 = r3
            r28 = r5
            r16 = r9
            r19 = r15
            r9 = r33
            r5 = r39
            goto L_0x0863
        L_0x0118:
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0857 }
            r14.previousMedia = r4     // Catch:{ Exception -> 0x0857 }
            java.lang.String r4 = r15.message     // Catch:{ Exception -> 0x0857 }
            r14.previousMessage = r4     // Catch:{ Exception -> 0x0857 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r4 = r15.entities     // Catch:{ Exception -> 0x0857 }
            r14.previousMessageEntities = r4     // Catch:{ Exception -> 0x0857 }
            java.lang.String r4 = r15.attachPath     // Catch:{ Exception -> 0x0857 }
            r14.previousAttachPath = r4     // Catch:{ Exception -> 0x0857 }
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0857 }
            if (r4 != 0) goto L_0x0132
            org.telegram.tgnet.TLRPC$TL_messageMediaEmpty r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaEmpty     // Catch:{ Exception -> 0x0054 }
            r7.<init>()     // Catch:{ Exception -> 0x0054 }
            r4 = r7
        L_0x0132:
            org.telegram.tgnet.SerializedData r7 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x0857 }
            r9 = 1
            r7.<init>((boolean) r9)     // Catch:{ Exception -> 0x0857 }
            r13.writePreviousMessageData(r15, r7)     // Catch:{ Exception -> 0x0857 }
            org.telegram.tgnet.SerializedData r9 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x0857 }
            r19 = r4
            int r4 = r7.length()     // Catch:{ Exception -> 0x0857 }
            r9.<init>((int) r4)     // Catch:{ Exception -> 0x0857 }
            r4 = r9
            r13.writePreviousMessageData(r15, r4)     // Catch:{ Exception -> 0x0857 }
            if (r5 != 0) goto L_0x0152
            java.util.HashMap r9 = new java.util.HashMap     // Catch:{ Exception -> 0x0054 }
            r9.<init>()     // Catch:{ Exception -> 0x0054 }
            r5 = r9
        L_0x0152:
            java.lang.String r9 = "prevMedia"
            r20 = r7
            byte[] r7 = r4.toByteArray()     // Catch:{ Exception -> 0x0857 }
            r21 = r8
            r8 = 0
            java.lang.String r7 = android.util.Base64.encodeToString(r7, r8)     // Catch:{ Exception -> 0x0857 }
            r5.put(r9, r7)     // Catch:{ Exception -> 0x0857 }
            r4.cleanup()     // Catch:{ Exception -> 0x0857 }
            if (r1 == 0) goto L_0x01ae
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0054 }
            r7.<init>()     // Catch:{ Exception -> 0x0054 }
            r15.media = r7     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x0054 }
            int r8 = r7.flags     // Catch:{ Exception -> 0x0054 }
            r9 = 3
            r8 = r8 | r9
            r7.flags = r8     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x0054 }
            r7.photo = r1     // Catch:{ Exception -> 0x0054 }
            r7 = 2
            if (r3 == 0) goto L_0x018e
            int r8 = r36.length()     // Catch:{ Exception -> 0x0054 }
            if (r8 <= 0) goto L_0x018e
            boolean r8 = r3.startsWith(r6)     // Catch:{ Exception -> 0x0054 }
            if (r8 == 0) goto L_0x018e
            r15.attachPath = r3     // Catch:{ Exception -> 0x0054 }
            goto L_0x01de
        L_0x018e:
            java.util.ArrayList r8 = r1.sizes     // Catch:{ Exception -> 0x0054 }
            java.util.ArrayList r9 = r1.sizes     // Catch:{ Exception -> 0x0054 }
            int r9 = r9.size()     // Catch:{ Exception -> 0x0054 }
            r16 = 1
            int r9 = r9 + -1
            java.lang.Object r8 = r8.get(r9)     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$PhotoSize r8 = (org.telegram.tgnet.TLRPC.PhotoSize) r8     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$FileLocation r8 = r8.location     // Catch:{ Exception -> 0x0054 }
            r9 = 1
            java.io.File r16 = org.telegram.messenger.FileLoader.getPathToAttach(r8, r9)     // Catch:{ Exception -> 0x0054 }
            java.lang.String r9 = r16.toString()     // Catch:{ Exception -> 0x0054 }
            r15.attachPath = r9     // Catch:{ Exception -> 0x0054 }
            goto L_0x01de
        L_0x01ae:
            if (r2 == 0) goto L_0x01dd
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0054 }
            r7.<init>()     // Catch:{ Exception -> 0x0054 }
            r15.media = r7     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x0054 }
            int r8 = r7.flags     // Catch:{ Exception -> 0x0054 }
            r9 = 3
            r8 = r8 | r9
            r7.flags = r8     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x0054 }
            r7.document = r2     // Catch:{ Exception -> 0x0054 }
            boolean r7 = org.telegram.messenger.MessageObject.isVideoDocument(r35)     // Catch:{ Exception -> 0x0054 }
            if (r7 != 0) goto L_0x01ce
            if (r34 == 0) goto L_0x01cc
            goto L_0x01ce
        L_0x01cc:
            r7 = 7
            goto L_0x01cf
        L_0x01ce:
            r7 = 3
        L_0x01cf:
            if (r34 == 0) goto L_0x01da
            java.lang.String r8 = r34.getString()     // Catch:{ Exception -> 0x0054 }
            java.lang.String r9 = "ve"
            r5.put(r9, r8)     // Catch:{ Exception -> 0x0054 }
        L_0x01da:
            r15.attachPath = r3     // Catch:{ Exception -> 0x0054 }
            goto L_0x01de
        L_0x01dd:
            r7 = 1
        L_0x01de:
            r15.params = r5     // Catch:{ Exception -> 0x0857 }
            r8 = 3
            r15.send_state = r8     // Catch:{ Exception -> 0x0857 }
            r9 = r1
            r8 = r2
            r4 = r5
            r1 = r34
            r5 = r39
            r30 = r7
            r7 = r3
            r3 = r30
        L_0x01ef:
            java.lang.String r2 = r15.attachPath     // Catch:{ Exception -> 0x0845 }
            if (r2 != 0) goto L_0x0201
            java.lang.String r2 = ""
            r15.attachPath = r2     // Catch:{ Exception -> 0x01f8 }
            goto L_0x0201
        L_0x01f8:
            r0 = move-exception
            r16 = r1
            r28 = r4
            r19 = r15
            goto L_0x0863
        L_0x0201:
            r2 = 0
            r15.local_id = r2     // Catch:{ Exception -> 0x0845 }
            int r2 = r14.type     // Catch:{ Exception -> 0x0845 }
            r16 = r8
            r8 = 3
            if (r2 == r8) goto L_0x021e
            if (r1 != 0) goto L_0x021e
            int r2 = r14.type     // Catch:{ Exception -> 0x0213 }
            r8 = 2
            if (r2 != r8) goto L_0x0229
            goto L_0x021e
        L_0x0213:
            r0 = move-exception
            r28 = r4
            r19 = r15
            r8 = r16
            r16 = r1
            goto L_0x0863
        L_0x021e:
            java.lang.String r2 = r15.attachPath     // Catch:{ Exception -> 0x0831 }
            boolean r2 = android.text.TextUtils.isEmpty(r2)     // Catch:{ Exception -> 0x0831 }
            if (r2 != 0) goto L_0x0229
            r2 = 1
            r14.attachPathExists = r2     // Catch:{ Exception -> 0x0213 }
        L_0x0229:
            org.telegram.messenger.VideoEditedInfo r2 = r14.videoEditedInfo     // Catch:{ Exception -> 0x0831 }
            if (r2 == 0) goto L_0x0234
            if (r1 != 0) goto L_0x0234
            org.telegram.messenger.VideoEditedInfo r2 = r14.videoEditedInfo     // Catch:{ Exception -> 0x0213 }
            r1 = r2
            r8 = r1
            goto L_0x0235
        L_0x0234:
            r8 = r1
        L_0x0235:
            if (r38 != 0) goto L_0x0368
            java.lang.CharSequence r2 = r14.editingMessage     // Catch:{ Exception -> 0x035b }
            if (r2 == 0) goto L_0x02e4
            java.lang.String r2 = r15.message     // Catch:{ Exception -> 0x02d7 }
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x02d7 }
            r15.message = r1     // Catch:{ Exception -> 0x02d7 }
            r1 = 0
            r14.caption = r1     // Catch:{ Exception -> 0x02d7 }
            r1 = 1
            if (r3 != r1) goto L_0x0280
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0273 }
            if (r1 == 0) goto L_0x025d
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0273 }
            r15.entities = r1     // Catch:{ Exception -> 0x0273 }
            int r1 = r15.flags     // Catch:{ Exception -> 0x0273 }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r15.flags = r1     // Catch:{ Exception -> 0x0273 }
            r35 = r8
            goto L_0x02e6
        L_0x025d:
            java.lang.String r1 = r15.message     // Catch:{ Exception -> 0x0273 }
            boolean r1 = android.text.TextUtils.equals(r2, r1)     // Catch:{ Exception -> 0x0273 }
            if (r1 != 0) goto L_0x026f
            int r1 = r15.flags     // Catch:{ Exception -> 0x0273 }
            r1 = r1 & -129(0xffffffffffffff7f, float:NaN)
            r15.flags = r1     // Catch:{ Exception -> 0x0273 }
            r35 = r8
            goto L_0x02e6
        L_0x026f:
            r35 = r8
            goto L_0x02e6
        L_0x0273:
            r0 = move-exception
            r28 = r4
            r19 = r15
            r30 = r16
            r16 = r8
            r8 = r30
            goto L_0x0863
        L_0x0280:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x02d7 }
            if (r1 == 0) goto L_0x0291
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0273 }
            r15.entities = r1     // Catch:{ Exception -> 0x0273 }
            int r1 = r15.flags     // Catch:{ Exception -> 0x0273 }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r15.flags = r1     // Catch:{ Exception -> 0x0273 }
            r35 = r8
            goto L_0x02c8
        L_0x0291:
            r35 = r8
            r1 = 1
            java.lang.CharSequence[] r8 = new java.lang.CharSequence[r1]     // Catch:{ Exception -> 0x02cc }
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x02cc }
            r19 = 0
            r8[r19] = r1     // Catch:{ Exception -> 0x02cc }
            r1 = r8
            org.telegram.messenger.MediaDataController r8 = r31.getMediaDataController()     // Catch:{ Exception -> 0x02cc }
            java.util.ArrayList r8 = r8.getEntities(r1, r10)     // Catch:{ Exception -> 0x02cc }
            if (r8 == 0) goto L_0x02b8
            boolean r19 = r8.isEmpty()     // Catch:{ Exception -> 0x02cc }
            if (r19 != 0) goto L_0x02b8
            r15.entities = r8     // Catch:{ Exception -> 0x02cc }
            r36 = r1
            int r1 = r15.flags     // Catch:{ Exception -> 0x02cc }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r15.flags = r1     // Catch:{ Exception -> 0x02cc }
            goto L_0x02c8
        L_0x02b8:
            r36 = r1
            java.lang.String r1 = r15.message     // Catch:{ Exception -> 0x02cc }
            boolean r1 = android.text.TextUtils.equals(r2, r1)     // Catch:{ Exception -> 0x02cc }
            if (r1 != 0) goto L_0x02c8
            int r1 = r15.flags     // Catch:{ Exception -> 0x02cc }
            r1 = r1 & -129(0xffffffffffffff7f, float:NaN)
            r15.flags = r1     // Catch:{ Exception -> 0x02cc }
        L_0x02c8:
            r32.generateCaption()     // Catch:{ Exception -> 0x02cc }
            goto L_0x02e6
        L_0x02cc:
            r0 = move-exception
            r28 = r4
            r19 = r15
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x02d7:
            r0 = move-exception
            r35 = r8
            r28 = r4
            r19 = r15
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x02e4:
            r35 = r8
        L_0x02e6:
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0350 }
            r1.<init>()     // Catch:{ Exception -> 0x0350 }
            r1.add(r15)     // Catch:{ Exception -> 0x0350 }
            org.telegram.messenger.MessagesStorage r22 = r31.getMessagesStorage()     // Catch:{ Exception -> 0x0350 }
            r24 = 0
            r25 = 1
            r26 = 0
            r27 = 0
            boolean r2 = r14.scheduled     // Catch:{ Exception -> 0x0350 }
            r23 = r1
            r28 = r2
            r22.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r23, (boolean) r24, (boolean) r25, (boolean) r26, (int) r27, (boolean) r28)     // Catch:{ Exception -> 0x0350 }
            r2 = -1
            r14.type = r2     // Catch:{ Exception -> 0x0350 }
            r32.setType()     // Catch:{ Exception -> 0x0350 }
            r2 = 1
            if (r3 != r2) goto L_0x0327
            org.telegram.tgnet.TLRPC$Message r2 = r14.messageOwner     // Catch:{ Exception -> 0x02cc }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media     // Catch:{ Exception -> 0x02cc }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x02cc }
            if (r2 != 0) goto L_0x0324
            org.telegram.tgnet.TLRPC$Message r2 = r14.messageOwner     // Catch:{ Exception -> 0x02cc }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media     // Catch:{ Exception -> 0x02cc }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x02cc }
            if (r2 == 0) goto L_0x031d
            goto L_0x0324
        L_0x031d:
            r32.resetLayout()     // Catch:{ Exception -> 0x02cc }
            r32.checkLayout()     // Catch:{ Exception -> 0x02cc }
            goto L_0x0327
        L_0x0324:
            r32.generateCaption()     // Catch:{ Exception -> 0x02cc }
        L_0x0327:
            r32.createMessageSendInfo()     // Catch:{ Exception -> 0x0350 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0350 }
            r2.<init>()     // Catch:{ Exception -> 0x0350 }
            r2.add(r14)     // Catch:{ Exception -> 0x0350 }
            org.telegram.messenger.NotificationCenter r8 = r31.getNotificationCenter()     // Catch:{ Exception -> 0x0350 }
            r36 = r1
            int r1 = org.telegram.messenger.NotificationCenter.replaceMessagesObjects     // Catch:{ Exception -> 0x0350 }
            r20 = r10
            r19 = r15
            r15 = 2
            java.lang.Object[] r10 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x037f }
            java.lang.Long r15 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x037f }
            r22 = 0
            r10[r22] = r15     // Catch:{ Exception -> 0x037f }
            r15 = 1
            r10[r15] = r2     // Catch:{ Exception -> 0x037f }
            r8.postNotificationName(r1, r10)     // Catch:{ Exception -> 0x037f }
            goto L_0x036e
        L_0x0350:
            r0 = move-exception
            r19 = r15
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x035b:
            r0 = move-exception
            r35 = r8
            r19 = r15
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x0368:
            r35 = r8
            r20 = r10
            r19 = r15
        L_0x036e:
            r1 = 0
            if (r4 == 0) goto L_0x0388
            boolean r2 = r4.containsKey(r0)     // Catch:{ Exception -> 0x037f }
            if (r2 == 0) goto L_0x0388
            java.lang.Object r0 = r4.get(r0)     // Catch:{ Exception -> 0x037f }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ Exception -> 0x037f }
            r1 = r0
            goto L_0x0389
        L_0x037f:
            r0 = move-exception
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x0388:
            r0 = r1
        L_0x0389:
            r1 = 0
            r8 = 8
            r2 = 1
            if (r3 < r2) goto L_0x0392
            r2 = 3
            if (r3 <= r2) goto L_0x0397
        L_0x0392:
            r2 = 5
            if (r3 < r2) goto L_0x0813
            if (r3 > r8) goto L_0x0813
        L_0x0397:
            r2 = 0
            r15 = 1
            if (r3 != r15) goto L_0x03aa
            r24 = r1
            r26 = r2
            r28 = r4
            r15 = r9
            r8 = r16
            r16 = r35
            r35 = r7
            goto L_0x0653
        L_0x03aa:
            java.lang.String r15 = "masks"
            r22 = 0
            r8 = 2
            if (r3 != r8) goto L_0x04aa
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto r8 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto     // Catch:{ Exception -> 0x04a1 }
            r8.<init>()     // Catch:{ Exception -> 0x04a1 }
            if (r4 == 0) goto L_0x0411
            java.lang.Object r15 = r4.get(r15)     // Catch:{ Exception -> 0x04a1 }
            java.lang.String r15 = (java.lang.String) r15     // Catch:{ Exception -> 0x04a1 }
            if (r15 == 0) goto L_0x0408
            org.telegram.tgnet.SerializedData r10 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x04a1 }
            r24 = r1
            byte[] r1 = org.telegram.messenger.Utilities.hexToBytes(r15)     // Catch:{ Exception -> 0x04a1 }
            r10.<init>((byte[]) r1)     // Catch:{ Exception -> 0x04a1 }
            r1 = r10
            r10 = 0
            int r25 = r1.readInt32(r10)     // Catch:{ Exception -> 0x04a1 }
            r10 = r25
            r25 = 0
            r26 = r2
            r2 = r25
        L_0x03d9:
            if (r2 >= r10) goto L_0x03f8
            r25 = r10
            java.util.ArrayList r10 = r8.stickers     // Catch:{ Exception -> 0x04a1 }
            r28 = r4
            r27 = r15
            r15 = 0
            int r4 = r1.readInt32(r15)     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$InputDocument r4 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r1, r4, r15)     // Catch:{ Exception -> 0x049a }
            r10.add(r4)     // Catch:{ Exception -> 0x049a }
            int r2 = r2 + 1
            r10 = r25
            r15 = r27
            r4 = r28
            goto L_0x03d9
        L_0x03f8:
            r28 = r4
            r25 = r10
            r27 = r15
            int r2 = r8.flags     // Catch:{ Exception -> 0x049a }
            r4 = 1
            r2 = r2 | r4
            r8.flags = r2     // Catch:{ Exception -> 0x049a }
            r1.cleanup()     // Catch:{ Exception -> 0x049a }
            goto L_0x0417
        L_0x0408:
            r24 = r1
            r26 = r2
            r28 = r4
            r27 = r15
            goto L_0x0417
        L_0x0411:
            r24 = r1
            r26 = r2
            r28 = r4
        L_0x0417:
            long r1 = r9.access_hash     // Catch:{ Exception -> 0x049a }
            int r4 = (r1 > r22 ? 1 : (r1 == r22 ? 0 : -1))
            if (r4 != 0) goto L_0x0426
            r1 = r8
            r2 = 1
            r10 = r3
            r30 = r2
            r2 = r1
            r1 = r30
            goto L_0x0455
        L_0x0426:
            org.telegram.tgnet.TLRPC$TL_inputMediaPhoto r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaPhoto     // Catch:{ Exception -> 0x049a }
            r1.<init>()     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$TL_inputPhoto r2 = new org.telegram.tgnet.TLRPC$TL_inputPhoto     // Catch:{ Exception -> 0x049a }
            r2.<init>()     // Catch:{ Exception -> 0x049a }
            r1.id = r2     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x049a }
            r10 = r3
            long r3 = r9.id     // Catch:{ Exception -> 0x049a }
            r2.id = r3     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x049a }
            long r3 = r9.access_hash     // Catch:{ Exception -> 0x049a }
            r2.access_hash = r3     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x049a }
            byte[] r3 = r9.file_reference     // Catch:{ Exception -> 0x049a }
            r2.file_reference = r3     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x049a }
            byte[] r2 = r2.file_reference     // Catch:{ Exception -> 0x049a }
            if (r2 != 0) goto L_0x0452
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x049a }
            r3 = 0
            byte[] r4 = new byte[r3]     // Catch:{ Exception -> 0x049a }
            r2.file_reference = r4     // Catch:{ Exception -> 0x049a }
        L_0x0452:
            r2 = r1
            r1 = r24
        L_0x0455:
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x049a }
            r3.<init>(r11)     // Catch:{ Exception -> 0x049a }
            r4 = 0
            r3.type = r4     // Catch:{ Exception -> 0x049a }
            r3.obj = r14     // Catch:{ Exception -> 0x049a }
            r3.originalPath = r0     // Catch:{ Exception -> 0x049a }
            r3.parentObject = r5     // Catch:{ Exception -> 0x049a }
            r3.inputUploadMedia = r8     // Catch:{ Exception -> 0x049a }
            r3.performMediaUpload = r1     // Catch:{ Exception -> 0x049a }
            if (r7 == 0) goto L_0x0478
            int r4 = r7.length()     // Catch:{ Exception -> 0x049a }
            if (r4 <= 0) goto L_0x0478
            boolean r4 = r7.startsWith(r6)     // Catch:{ Exception -> 0x049a }
            if (r4 == 0) goto L_0x0478
            r3.httpLocation = r7     // Catch:{ Exception -> 0x049a }
            goto L_0x048c
        L_0x0478:
            java.util.ArrayList r4 = r9.sizes     // Catch:{ Exception -> 0x049a }
            java.util.ArrayList r6 = r9.sizes     // Catch:{ Exception -> 0x049a }
            int r6 = r6.size()     // Catch:{ Exception -> 0x049a }
            r15 = 1
            int r6 = r6 - r15
            java.lang.Object r4 = r4.get(r6)     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$PhotoSize r4 = (org.telegram.tgnet.TLRPC.PhotoSize) r4     // Catch:{ Exception -> 0x049a }
            r3.photoSize = r4     // Catch:{ Exception -> 0x049a }
            r3.locationParent = r9     // Catch:{ Exception -> 0x049a }
        L_0x048c:
            r24 = r1
            r15 = r9
            r8 = r16
            r16 = r35
            r9 = r3
            r35 = r7
            r3 = r10
            r10 = r2
            goto L_0x0657
        L_0x049a:
            r0 = move-exception
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x04a1:
            r0 = move-exception
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x0863
        L_0x04aa:
            r24 = r1
            r26 = r2
            r10 = r3
            r28 = r4
            r1 = 3
            if (r3 != r1) goto L_0x05b4
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x05a9 }
            r1.<init>()     // Catch:{ Exception -> 0x05a9 }
            if (r28 == 0) goto L_0x0502
            r4 = r28
            java.lang.Object r2 = r4.get(r15)     // Catch:{ Exception -> 0x04a1 }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ Exception -> 0x04a1 }
            if (r2 == 0) goto L_0x04fe
            org.telegram.tgnet.SerializedData r6 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x04a1 }
            byte[] r8 = org.telegram.messenger.Utilities.hexToBytes(r2)     // Catch:{ Exception -> 0x04a1 }
            r6.<init>((byte[]) r8)     // Catch:{ Exception -> 0x04a1 }
            r8 = 0
            int r10 = r6.readInt32(r8)     // Catch:{ Exception -> 0x04a1 }
            r8 = r10
            r10 = 0
        L_0x04d5:
            if (r10 >= r8) goto L_0x04f0
            java.util.ArrayList r15 = r1.stickers     // Catch:{ Exception -> 0x04a1 }
            r25 = r2
            r28 = r4
            r2 = 0
            int r4 = r6.readInt32(r2)     // Catch:{ Exception -> 0x049a }
            org.telegram.tgnet.TLRPC$InputDocument r4 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r6, r4, r2)     // Catch:{ Exception -> 0x049a }
            r15.add(r4)     // Catch:{ Exception -> 0x049a }
            int r10 = r10 + 1
            r2 = r25
            r4 = r28
            goto L_0x04d5
        L_0x04f0:
            r25 = r2
            r28 = r4
            int r2 = r1.flags     // Catch:{ Exception -> 0x049a }
            r4 = 1
            r2 = r2 | r4
            r1.flags = r2     // Catch:{ Exception -> 0x049a }
            r6.cleanup()     // Catch:{ Exception -> 0x049a }
            goto L_0x0502
        L_0x04fe:
            r25 = r2
            r28 = r4
        L_0x0502:
            r8 = r16
            java.lang.String r2 = r8.mime_type     // Catch:{ Exception -> 0x05a0 }
            r1.mime_type = r2     // Catch:{ Exception -> 0x05a0 }
            java.util.ArrayList r2 = r8.attributes     // Catch:{ Exception -> 0x05a0 }
            r1.attributes = r2     // Catch:{ Exception -> 0x05a0 }
            boolean r2 = r32.isGif()     // Catch:{ Exception -> 0x05a0 }
            if (r2 != 0) goto L_0x052f
            if (r35 == 0) goto L_0x051b
            r10 = r35
            boolean r2 = r10.muted     // Catch:{ Exception -> 0x052a }
            if (r2 != 0) goto L_0x0531
            goto L_0x051d
        L_0x051b:
            r10 = r35
        L_0x051d:
            r2 = 1
            r1.nosound_video = r2     // Catch:{ Exception -> 0x052a }
            boolean r2 = org.telegram.messenger.BuildVars.DEBUG_VERSION     // Catch:{ Exception -> 0x052a }
            if (r2 == 0) goto L_0x0531
            java.lang.String r2 = "nosound_video = true"
            org.telegram.messenger.FileLog.d(r2)     // Catch:{ Exception -> 0x052a }
            goto L_0x0531
        L_0x052a:
            r0 = move-exception
            r16 = r10
            goto L_0x0863
        L_0x052f:
            r10 = r35
        L_0x0531:
            r35 = r7
            long r6 = r8.access_hash     // Catch:{ Exception -> 0x05d8 }
            int r2 = (r6 > r22 ? 1 : (r6 == r22 ? 0 : -1))
            if (r2 != 0) goto L_0x053c
            r2 = r1
            r4 = 1
            goto L_0x056a
        L_0x053c:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x05d8 }
            r2.<init>()     // Catch:{ Exception -> 0x05d8 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r4 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x05d8 }
            r4.<init>()     // Catch:{ Exception -> 0x05d8 }
            r2.id = r4     // Catch:{ Exception -> 0x05d8 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05d8 }
            long r6 = r8.id     // Catch:{ Exception -> 0x05d8 }
            r4.id = r6     // Catch:{ Exception -> 0x05d8 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05d8 }
            long r6 = r8.access_hash     // Catch:{ Exception -> 0x05d8 }
            r4.access_hash = r6     // Catch:{ Exception -> 0x05d8 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05d8 }
            byte[] r6 = r8.file_reference     // Catch:{ Exception -> 0x05d8 }
            r4.file_reference = r6     // Catch:{ Exception -> 0x05d8 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05d8 }
            byte[] r4 = r4.file_reference     // Catch:{ Exception -> 0x05d8 }
            if (r4 != 0) goto L_0x0567
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05d8 }
            r6 = 0
            byte[] r7 = new byte[r6]     // Catch:{ Exception -> 0x05d8 }
            r4.file_reference = r7     // Catch:{ Exception -> 0x05d8 }
        L_0x0567:
            r4 = r2
            r4 = r24
        L_0x056a:
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r6 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x05d8 }
            r6.<init>(r11)     // Catch:{ Exception -> 0x05d8 }
            r7 = 1
            r6.type = r7     // Catch:{ Exception -> 0x05d8 }
            r6.obj = r14     // Catch:{ Exception -> 0x05d8 }
            r6.originalPath = r0     // Catch:{ Exception -> 0x05d8 }
            r6.parentObject = r5     // Catch:{ Exception -> 0x05d8 }
            r6.inputUploadMedia = r1     // Catch:{ Exception -> 0x05d8 }
            r6.performMediaUpload = r4     // Catch:{ Exception -> 0x05d8 }
            java.util.ArrayList r7 = r8.thumbs     // Catch:{ Exception -> 0x05d8 }
            boolean r7 = r7.isEmpty()     // Catch:{ Exception -> 0x05d8 }
            if (r7 != 0) goto L_0x0595
            java.util.ArrayList r7 = r8.thumbs     // Catch:{ Exception -> 0x05d8 }
            r15 = 0
            java.lang.Object r7 = r7.get(r15)     // Catch:{ Exception -> 0x05d8 }
            org.telegram.tgnet.TLRPC$PhotoSize r7 = (org.telegram.tgnet.TLRPC.PhotoSize) r7     // Catch:{ Exception -> 0x05d8 }
            boolean r15 = r7 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x05d8 }
            if (r15 != 0) goto L_0x0595
            r6.photoSize = r7     // Catch:{ Exception -> 0x05d8 }
            r6.locationParent = r8     // Catch:{ Exception -> 0x05d8 }
        L_0x0595:
            r6.videoEditedInfo = r10     // Catch:{ Exception -> 0x05d8 }
            r24 = r4
            r15 = r9
            r16 = r10
            r10 = r2
            r9 = r6
            goto L_0x0657
        L_0x05a0:
            r0 = move-exception
            r10 = r35
            r35 = r7
            r16 = r10
            goto L_0x0863
        L_0x05a9:
            r0 = move-exception
            r10 = r35
            r35 = r7
            r8 = r16
            r16 = r10
            goto L_0x0863
        L_0x05b4:
            r10 = r35
            r35 = r7
            r8 = r16
            r1 = 7
            if (r3 != r1) goto L_0x0650
            r1 = 0
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x0648 }
            r2.<init>()     // Catch:{ Exception -> 0x0648 }
            java.lang.String r4 = r8.mime_type     // Catch:{ Exception -> 0x0648 }
            r2.mime_type = r4     // Catch:{ Exception -> 0x0648 }
            java.util.ArrayList r4 = r8.attributes     // Catch:{ Exception -> 0x0648 }
            r2.attributes = r4     // Catch:{ Exception -> 0x0648 }
            long r6 = r8.access_hash     // Catch:{ Exception -> 0x0648 }
            int r4 = (r6 > r22 ? 1 : (r6 == r22 ? 0 : -1))
            if (r4 != 0) goto L_0x05df
            r4 = r2
            boolean r6 = r2 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x05d8 }
            r15 = r9
            r16 = r10
            goto L_0x0610
        L_0x05d8:
            r0 = move-exception
            r7 = r35
            r16 = r10
            goto L_0x0863
        L_0x05df:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r4 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x0648 }
            r4.<init>()     // Catch:{ Exception -> 0x0648 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r6 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x0648 }
            r6.<init>()     // Catch:{ Exception -> 0x0648 }
            r4.id = r6     // Catch:{ Exception -> 0x0648 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0648 }
            r15 = r9
            r16 = r10
            long r9 = r8.id     // Catch:{ Exception -> 0x0678 }
            r6.id = r9     // Catch:{ Exception -> 0x0678 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0678 }
            long r9 = r8.access_hash     // Catch:{ Exception -> 0x0678 }
            r6.access_hash = r9     // Catch:{ Exception -> 0x0678 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0678 }
            byte[] r7 = r8.file_reference     // Catch:{ Exception -> 0x0678 }
            r6.file_reference = r7     // Catch:{ Exception -> 0x0678 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0678 }
            byte[] r6 = r6.file_reference     // Catch:{ Exception -> 0x0678 }
            if (r6 != 0) goto L_0x060d
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0678 }
            r7 = 0
            byte[] r9 = new byte[r7]     // Catch:{ Exception -> 0x0678 }
            r6.file_reference = r9     // Catch:{ Exception -> 0x0678 }
        L_0x060d:
            r6 = r4
            r6 = r24
        L_0x0610:
            if (r1 != 0) goto L_0x0642
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x0678 }
            r7.<init>(r11)     // Catch:{ Exception -> 0x0678 }
            r7.originalPath = r0     // Catch:{ Exception -> 0x0678 }
            r9 = 2
            r7.type = r9     // Catch:{ Exception -> 0x0678 }
            r7.obj = r14     // Catch:{ Exception -> 0x0678 }
            java.util.ArrayList r9 = r8.thumbs     // Catch:{ Exception -> 0x0678 }
            boolean r9 = r9.isEmpty()     // Catch:{ Exception -> 0x0678 }
            if (r9 != 0) goto L_0x0637
            java.util.ArrayList r9 = r8.thumbs     // Catch:{ Exception -> 0x0678 }
            r10 = 0
            java.lang.Object r9 = r9.get(r10)     // Catch:{ Exception -> 0x0678 }
            org.telegram.tgnet.TLRPC$PhotoSize r9 = (org.telegram.tgnet.TLRPC.PhotoSize) r9     // Catch:{ Exception -> 0x0678 }
            boolean r10 = r9 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x0678 }
            if (r10 != 0) goto L_0x0637
            r7.photoSize = r9     // Catch:{ Exception -> 0x0678 }
            r7.locationParent = r8     // Catch:{ Exception -> 0x0678 }
        L_0x0637:
            r7.parentObject = r5     // Catch:{ Exception -> 0x0678 }
            r7.inputUploadMedia = r2     // Catch:{ Exception -> 0x0678 }
            r7.performMediaUpload = r6     // Catch:{ Exception -> 0x0678 }
            r10 = r4
            r24 = r6
            r9 = r7
            goto L_0x0657
        L_0x0642:
            r10 = r4
            r24 = r6
            r9 = r21
            goto L_0x0657
        L_0x0648:
            r0 = move-exception
            r15 = r9
            r16 = r10
            r7 = r35
            goto L_0x0863
        L_0x0650:
            r15 = r9
            r16 = r10
        L_0x0653:
            r9 = r21
            r10 = r26
        L_0x0657:
            org.telegram.tgnet.TLRPC$TL_messages_editMessage r1 = new org.telegram.tgnet.TLRPC$TL_messages_editMessage     // Catch:{ Exception -> 0x0802 }
            r1.<init>()     // Catch:{ Exception -> 0x0802 }
            r7 = r1
            int r1 = r32.getId()     // Catch:{ Exception -> 0x0802 }
            r7.id = r1     // Catch:{ Exception -> 0x0802 }
            org.telegram.messenger.MessagesController r1 = r31.getMessagesController()     // Catch:{ Exception -> 0x0802 }
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((long) r11)     // Catch:{ Exception -> 0x0802 }
            r7.peer = r1     // Catch:{ Exception -> 0x0802 }
            if (r10 == 0) goto L_0x067e
            int r1 = r7.flags     // Catch:{ Exception -> 0x0678 }
            r1 = r1 | 16384(0x4000, float:2.2959E-41)
            r7.flags = r1     // Catch:{ Exception -> 0x0678 }
            r7.media = r10     // Catch:{ Exception -> 0x0678 }
            goto L_0x067e
        L_0x0678:
            r0 = move-exception
            r7 = r35
            r9 = r15
            goto L_0x0863
        L_0x067e:
            boolean r1 = r14.scheduled     // Catch:{ Exception -> 0x0802 }
            if (r1 == 0) goto L_0x0690
            org.telegram.tgnet.TLRPC$Message r1 = r14.messageOwner     // Catch:{ Exception -> 0x0678 }
            int r1 = r1.date     // Catch:{ Exception -> 0x0678 }
            r7.schedule_date = r1     // Catch:{ Exception -> 0x0678 }
            int r1 = r7.flags     // Catch:{ Exception -> 0x0678 }
            r2 = 32768(0x8000, float:4.5918E-41)
            r1 = r1 | r2
            r7.flags = r1     // Catch:{ Exception -> 0x0678 }
        L_0x0690:
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x0802 }
            if (r1 == 0) goto L_0x06e8
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x0678 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0678 }
            r7.message = r1     // Catch:{ Exception -> 0x0678 }
            int r1 = r7.flags     // Catch:{ Exception -> 0x0678 }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r7.flags = r1     // Catch:{ Exception -> 0x0678 }
            boolean r1 = r14.editingMessageSearchWebPage     // Catch:{ Exception -> 0x0678 }
            if (r1 != 0) goto L_0x06a8
            r1 = 1
            goto L_0x06a9
        L_0x06a8:
            r1 = 0
        L_0x06a9:
            r7.no_webpage = r1     // Catch:{ Exception -> 0x0678 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0678 }
            if (r1 == 0) goto L_0x06bd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0678 }
            r7.entities = r1     // Catch:{ Exception -> 0x0678 }
            int r1 = r7.flags     // Catch:{ Exception -> 0x0678 }
            r2 = 8
            r1 = r1 | r2
            r7.flags = r1     // Catch:{ Exception -> 0x0678 }
            r6 = r20
            goto L_0x06e2
        L_0x06bd:
            r1 = 1
            java.lang.CharSequence[] r2 = new java.lang.CharSequence[r1]     // Catch:{ Exception -> 0x0678 }
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x0678 }
            r4 = 0
            r2[r4] = r1     // Catch:{ Exception -> 0x0678 }
            r1 = r2
            org.telegram.messenger.MediaDataController r2 = r31.getMediaDataController()     // Catch:{ Exception -> 0x0678 }
            r6 = r20
            java.util.ArrayList r2 = r2.getEntities(r1, r6)     // Catch:{ Exception -> 0x0678 }
            if (r2 == 0) goto L_0x06e2
            boolean r4 = r2.isEmpty()     // Catch:{ Exception -> 0x0678 }
            if (r4 != 0) goto L_0x06e2
            r7.entities = r2     // Catch:{ Exception -> 0x0678 }
            int r4 = r7.flags     // Catch:{ Exception -> 0x0678 }
            r20 = 8
            r4 = r4 | 8
            r7.flags = r4     // Catch:{ Exception -> 0x0678 }
        L_0x06e2:
            r1 = 0
            r14.editingMessage = r1     // Catch:{ Exception -> 0x0678 }
            r14.editingMessageEntities = r1     // Catch:{ Exception -> 0x0678 }
            goto L_0x06ea
        L_0x06e8:
            r6 = r20
        L_0x06ea:
            if (r9 == 0) goto L_0x06ee
            r9.sendRequest = r7     // Catch:{ Exception -> 0x0678 }
        L_0x06ee:
            r2 = r7
            r1 = 1
            if (r3 != r1) goto L_0x0736
            r4 = 0
            boolean r1 = r14.scheduled     // Catch:{ Exception -> 0x0725 }
            r17 = r1
            r1 = r31
            r34 = r15
            r15 = r3
            r3 = r32
            r18 = r28
            r20 = r5
            r5 = r9
            r21 = r6
            r6 = r20
            r22 = r35
            r23 = r7
            r7 = r18
            r25 = r8
            r8 = r17
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x0718 }
            r26 = r34
            goto L_0x0826
        L_0x0718:
            r0 = move-exception
            r9 = r34
            r28 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            goto L_0x0863
        L_0x0725:
            r0 = move-exception
            r22 = r35
            r20 = r5
            r25 = r8
            r34 = r15
            r18 = r28
            r9 = r34
            r7 = r22
            goto L_0x0863
        L_0x0736:
            r22 = r35
            r20 = r5
            r21 = r6
            r23 = r7
            r25 = r8
            r34 = r15
            r18 = r28
            r15 = r3
            r1 = 2
            if (r15 != r1) goto L_0x077e
            if (r24 == 0) goto L_0x0751
            r13.performSendDelayedMessage(r9)     // Catch:{ Exception -> 0x0718 }
            r26 = r34
            goto L_0x0826
        L_0x0751:
            r7 = 0
            r8 = 1
            boolean r1 = r14.scheduled     // Catch:{ Exception -> 0x076f }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r26 = r34
            r33 = r9
            r27 = r21
            r21 = r10
            r10 = r20
            r28 = r11
            r11 = r18
            r12 = r1
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10, r11, r12)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x076f:
            r0 = move-exception
            r26 = r34
            r28 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            r9 = r26
            goto L_0x0863
        L_0x077e:
            r26 = r34
            r33 = r9
            r28 = r11
            r27 = r21
            r21 = r10
            r1 = 3
            if (r15 != r1) goto L_0x07a8
            if (r24 == 0) goto L_0x0794
            r1 = r33
            r13.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x0794:
            r1 = r33
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07bf }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x07a8:
            r1 = r33
            r3 = 6
            if (r15 != r3) goto L_0x07cc
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07bf }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x07bf:
            r0 = move-exception
            r28 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            r9 = r26
            goto L_0x0863
        L_0x07cc:
            r3 = 7
            if (r15 != r3) goto L_0x07e7
            if (r24 == 0) goto L_0x07d6
            r13.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x07d6:
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07bf }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x07e7:
            r3 = 8
            if (r15 != r3) goto L_0x0826
            if (r24 == 0) goto L_0x07f1
            r13.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x07f1:
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07bf }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07bf }
            goto L_0x0826
        L_0x0802:
            r0 = move-exception
            r22 = r35
            r20 = r5
            r25 = r8
            r26 = r15
            r18 = r28
            r7 = r22
            r9 = r26
            goto L_0x0863
        L_0x0813:
            r24 = r1
            r15 = r3
            r18 = r4
            r22 = r7
            r26 = r9
            r28 = r11
            r25 = r16
            r27 = r20
            r16 = r35
            r20 = r5
        L_0x0826:
            r4 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            r9 = r26
            goto L_0x086b
        L_0x0831:
            r0 = move-exception
            r18 = r4
            r20 = r5
            r22 = r7
            r26 = r9
            r19 = r15
            r25 = r16
            r16 = r1
            r28 = r18
            r8 = r25
            goto L_0x0863
        L_0x0845:
            r0 = move-exception
            r18 = r4
            r20 = r5
            r22 = r7
            r25 = r8
            r26 = r9
            r19 = r15
            r16 = r1
            r28 = r18
            goto L_0x0863
        L_0x0857:
            r0 = move-exception
            r19 = r15
            r16 = r34
            r9 = r1
            r8 = r2
            r7 = r3
            r28 = r5
            r5 = r39
        L_0x0863:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r31.revertEditingMessageObject(r32)
            r4 = r28
        L_0x086b:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.editMessage(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$TL_photo, org.telegram.messenger.VideoEditedInfo, org.telegram.tgnet.TLRPC$TL_document, java.lang.String, java.util.HashMap, boolean, java.lang.Object):void");
    }

    public int editMessage(MessageObject messageObject, String message, boolean searchLinks, BaseFragment fragment, ArrayList<TLRPC.MessageEntity> entities, int scheduleDate) {
        if (fragment == null || fragment.getParentActivity() == null) {
            return 0;
        }
        TLRPC.TL_messages_editMessage req = new TLRPC.TL_messages_editMessage();
        req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (message != null) {
            req.message = message;
            req.flags |= 2048;
            req.no_webpage = !searchLinks;
        }
        req.id = messageObject.getId();
        if (entities != null) {
            req.entities = entities;
            req.flags |= 8;
        }
        if (scheduleDate != 0) {
            req.schedule_date = scheduleDate;
            req.flags |= 32768;
        }
        return getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda86(this, fragment, req));
    }

    /* renamed from: lambda$editMessage$16$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m436lambda$editMessage$16$orgtelegrammessengerSendMessagesHelper(BaseFragment fragment, TLRPC.TL_messages_editMessage req, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda54(this, error, fragment, req));
        }
    }

    /* renamed from: lambda$editMessage$15$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m435lambda$editMessage$15$orgtelegrammessengerSendMessagesHelper(TLRPC.TL_error error, BaseFragment fragment, TLRPC.TL_messages_editMessage req) {
        AlertsCreator.processError(this.currentAccount, error, fragment, req, new Object[0]);
    }

    /* access modifiers changed from: private */
    public void sendLocation(Location location) {
        TLRPC.TL_messageMediaGeo mediaGeo = new TLRPC.TL_messageMediaGeo();
        mediaGeo.geo = new TLRPC.TL_geoPoint();
        mediaGeo.geo.lat = AndroidUtilities.fixLocationCoord(location.getLatitude());
        mediaGeo.geo._long = AndroidUtilities.fixLocationCoord(location.getLongitude());
        for (Map.Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject messageObject = entry.getValue();
            sendMessage((TLRPC.MessageMedia) mediaGeo, messageObject.getDialogId(), messageObject, (MessageObject) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, TLRPC.KeyboardButton button) {
        if (messageObject != null && button != null) {
            StringBuilder sb = new StringBuilder();
            sb.append(messageObject.getDialogId());
            sb.append("_");
            sb.append(messageObject.getId());
            sb.append("_");
            sb.append(Utilities.bytesToHex(button.data));
            sb.append("_");
            sb.append(button instanceof TLRPC.TL_keyboardButtonGame ? "1" : "0");
            this.waitingForLocation.put(sb.toString(), messageObject);
            this.locationProvider.start();
        }
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, TLRPC.KeyboardButton button) {
        if (messageObject == null || button == null) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(button.data));
        sb.append("_");
        sb.append(button instanceof TLRPC.TL_keyboardButtonGame ? "1" : "0");
        return this.waitingForLocation.containsKey(sb.toString());
    }

    public void sendNotificationCallback(long dialogId, int msgId, byte[] data) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda15(this, dialogId, msgId, data));
    }

    /* renamed from: lambda$sendNotificationCallback$19$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m488xb2d0eCLASSNAME(long dialogId, int msgId, byte[] data) {
        TLRPC.Chat chat;
        TLRPC.User user;
        long j = dialogId;
        int i = msgId;
        byte[] bArr = data;
        String key = j + "_" + i + "_" + Utilities.bytesToHex(data) + "_" + 0;
        this.waitingForCallback.put(key, true);
        if (DialogObject.isUserDialog(dialogId)) {
            if (getMessagesController().getUser(Long.valueOf(dialogId)) == null && (user = getMessagesStorage().getUserSync(j)) != null) {
                getMessagesController().putUser(user, true);
            }
        } else if (getMessagesController().getChat(Long.valueOf(-j)) == null && (chat = getMessagesStorage().getChatSync(-j)) != null) {
            getMessagesController().putChat(chat, true);
        }
        TLRPC.TL_messages_getBotCallbackAnswer req = new TLRPC.TL_messages_getBotCallbackAnswer();
        req.peer = getMessagesController().getInputPeer(j);
        req.msg_id = i;
        req.game = false;
        if (bArr != null) {
            req.flags |= 1;
            req.data = bArr;
        }
        getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda79(this, key), 2);
        TLRPC.TL_messages_getBotCallbackAnswer tL_messages_getBotCallbackAnswer = req;
        String str = key;
        getMessagesController().markDialogAsRead(dialogId, msgId, msgId, 0, false, 0, 0, true, 0);
    }

    /* renamed from: lambda$sendNotificationCallback$17$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m486xe84e0var_(String key) {
        this.waitingForCallback.remove(key);
    }

    /* renamed from: lambda$sendNotificationCallback$18$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m487xcd8f7dd1(String key, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda17(this, key));
    }

    public byte[] isSendingVote(MessageObject messageObject) {
        if (messageObject == null) {
            return null;
        }
        return this.waitingForVote.get("poll_" + messageObject.getPollId());
    }

    public int sendVote(MessageObject messageObject, ArrayList<TLRPC.TL_pollAnswer> answers, Runnable finishRunnable) {
        byte[] options;
        if (messageObject == null) {
            return 0;
        }
        String key = "poll_" + messageObject.getPollId();
        if (this.waitingForCallback.containsKey(key)) {
            return 0;
        }
        TLRPC.TL_messages_sendVote req = new TLRPC.TL_messages_sendVote();
        req.msg_id = messageObject.getId();
        req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (answers != null) {
            options = new byte[answers.size()];
            for (int a = 0; a < answers.size(); a++) {
                TLRPC.TL_pollAnswer answer = answers.get(a);
                req.options.add(answer.option);
                options[a] = answer.option[0];
            }
        } else {
            options = new byte[0];
        }
        this.waitingForVote.put(key, options);
        return getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda82(this, messageObject, key, finishRunnable));
    }

    /* renamed from: lambda$sendVote$21$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m493lambda$sendVote$21$orgtelegrammessengerSendMessagesHelper(MessageObject messageObject, String key, Runnable finishRunnable, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            this.voteSendTime.put(messageObject.getPollId(), 0L);
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
            this.voteSendTime.put(messageObject.getPollId(), Long.valueOf(SystemClock.elapsedRealtime()));
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda20(this, key, finishRunnable));
    }

    /* renamed from: lambda$sendVote$20$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m492lambda$sendVote$20$orgtelegrammessengerSendMessagesHelper(String key, Runnable finishRunnable) {
        this.waitingForVote.remove(key);
        if (finishRunnable != null) {
            finishRunnable.run();
        }
    }

    /* access modifiers changed from: protected */
    public long getVoteSendTime(long pollId) {
        return this.voteSendTime.get(pollId, 0L).longValue();
    }

    public void sendReaction(MessageObject messageObject, CharSequence reaction, boolean big, ChatActivity parentFragment, Runnable callback) {
        if (messageObject != null && parentFragment != null) {
            TLRPC.TL_messages_sendReaction req = new TLRPC.TL_messages_sendReaction();
            if (!messageObject.messageOwner.isThreadMessage || messageObject.messageOwner.fwd_from == null) {
                req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                req.msg_id = messageObject.getId();
            } else {
                req.peer = getMessagesController().getInputPeer(messageObject.getFromChatId());
                req.msg_id = messageObject.messageOwner.fwd_from.saved_from_msg_id;
            }
            if (reaction != null) {
                req.reaction = reaction.toString();
                req.flags |= 1;
            }
            if (big) {
                req.flags |= 2;
                req.big = true;
            }
            getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda78(this, callback));
        }
    }

    /* renamed from: lambda$sendReaction$22$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m489lambda$sendReaction$22$orgtelegrammessengerSendMessagesHelper(Runnable callback, TLObject response, TLRPC.TL_error error) {
        if (response != null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
            if (callback != null) {
                AndroidUtilities.runOnUIThread(callback);
            }
        }
    }

    public void requestUrlAuth(String url, ChatActivity parentFragment, boolean ask) {
        TLRPC.TL_messages_requestUrlAuth req = new TLRPC.TL_messages_requestUrlAuth();
        req.url = url;
        req.flags |= 4;
        getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda89(parentFragment, req, url, ask), 2);
    }

    static /* synthetic */ void lambda$requestUrlAuth$23(ChatActivity parentFragment, TLRPC.TL_messages_requestUrlAuth req, String url, boolean ask, TLObject response, TLRPC.TL_error error) {
        if (response == null) {
            AlertsCreator.showOpenUrlAlert(parentFragment, url, false, ask);
        } else if (response instanceof TLRPC.TL_urlAuthResultRequest) {
            parentFragment.showRequestUrlAlert((TLRPC.TL_urlAuthResultRequest) response, req, url, ask);
        } else if (response instanceof TLRPC.TL_urlAuthResultAccepted) {
            AlertsCreator.showOpenUrlAlert(parentFragment, ((TLRPC.TL_urlAuthResultAccepted) response).url, false, false);
        } else if (response instanceof TLRPC.TL_urlAuthResultDefault) {
            AlertsCreator.showOpenUrlAlert(parentFragment, url, false, ask);
        }
    }

    public void sendCallback(boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment) {
        m471lambda$sendCallback$24$orgtelegrammessengerSendMessagesHelper(cache, messageObject, button, (TLRPC.InputCheckPasswordSRP) null, (TwoStepVerificationActivity) null, parentFragment);
    }

    /* renamed from: sendCallback */
    public void m471lambda$sendCallback$24$orgtelegrammessengerSendMessagesHelper(boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, TLRPC.InputCheckPasswordSRP srp, TwoStepVerificationActivity passwordFragment, ChatActivity parentFragment) {
        int type;
        boolean cacheFinal;
        MessageObject messageObject2 = messageObject;
        TLRPC.KeyboardButton keyboardButton = button;
        if (messageObject2 != null && keyboardButton != null && parentFragment != null) {
            if (keyboardButton instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                cacheFinal = false;
                type = 3;
            } else if (keyboardButton instanceof TLRPC.TL_keyboardButtonGame) {
                cacheFinal = false;
                type = 1;
            } else {
                boolean cacheFinal2 = cache;
                if (keyboardButton instanceof TLRPC.TL_keyboardButtonBuy) {
                    cacheFinal = cacheFinal2;
                    type = 2;
                } else {
                    cacheFinal = cacheFinal2;
                    type = 0;
                }
            }
            String key = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(keyboardButton.data) + "_" + type;
            this.waitingForCallback.put(key, true);
            TLObject[] request = new TLObject[1];
            int i = type;
            String key2 = key;
            RequestDelegate requestDelegate = new SendMessagesHelper$$ExternalSyntheticLambda80(this, key, cacheFinal, messageObject, button, parentFragment, passwordFragment, request, srp, cache);
            if (cacheFinal) {
                getMessagesStorage().getBotCache(key2, requestDelegate);
            } else if (keyboardButton instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                TLRPC.TL_messages_requestUrlAuth req = new TLRPC.TL_messages_requestUrlAuth();
                req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                req.msg_id = messageObject.getId();
                req.button_id = keyboardButton.button_id;
                req.flags |= 2;
                request[0] = req;
                getConnectionsManager().sendRequest(req, requestDelegate, 2);
            } else if (!(keyboardButton instanceof TLRPC.TL_keyboardButtonBuy)) {
                TLRPC.TL_messages_getBotCallbackAnswer req2 = new TLRPC.TL_messages_getBotCallbackAnswer();
                req2.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                req2.msg_id = messageObject.getId();
                req2.game = keyboardButton instanceof TLRPC.TL_keyboardButtonGame;
                if (keyboardButton.requires_password) {
                    TLRPC.InputCheckPasswordSRP tL_inputCheckPasswordEmpty = srp != null ? srp : new TLRPC.TL_inputCheckPasswordEmpty();
                    req2.password = tL_inputCheckPasswordEmpty;
                    req2.password = tL_inputCheckPasswordEmpty;
                    req2.flags |= 4;
                }
                if (keyboardButton.data != null) {
                    req2.flags |= 1;
                    req2.data = keyboardButton.data;
                }
                getConnectionsManager().sendRequest(req2, requestDelegate, 2);
            } else if ((messageObject2.messageOwner.media.flags & 4) == 0) {
                TLRPC.TL_payments_getPaymentForm req3 = new TLRPC.TL_payments_getPaymentForm();
                req3.msg_id = messageObject.getId();
                req3.peer = getMessagesController().getInputPeer(messageObject2.messageOwner.peer_id);
                try {
                    JSONObject jsonObject = new JSONObject();
                    jsonObject.put("bg_color", Theme.getColor("windowBackgroundWhite"));
                    jsonObject.put("text_color", Theme.getColor("windowBackgroundWhiteBlackText"));
                    jsonObject.put("hint_color", Theme.getColor("windowBackgroundWhiteHintText"));
                    jsonObject.put("link_color", Theme.getColor("windowBackgroundWhiteLinkText"));
                    jsonObject.put("button_color", Theme.getColor("featuredStickers_addButton"));
                    jsonObject.put("button_text_color", Theme.getColor("featuredStickers_buttonText"));
                    req3.theme_params = new TLRPC.TL_dataJSON();
                    req3.theme_params.data = jsonObject.toString();
                    req3.flags |= 1;
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                getConnectionsManager().sendRequest(req3, requestDelegate, 2);
            } else {
                TLRPC.TL_payments_getPaymentReceipt req4 = new TLRPC.TL_payments_getPaymentReceipt();
                req4.msg_id = messageObject2.messageOwner.media.receipt_msg_id;
                req4.peer = getMessagesController().getInputPeer(messageObject2.messageOwner.peer_id);
                getConnectionsManager().sendRequest(req4, requestDelegate, 2);
            }
        }
    }

    /* renamed from: lambda$sendCallback$30$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m476lambda$sendCallback$30$orgtelegrammessengerSendMessagesHelper(String key, boolean cacheFinal, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, TwoStepVerificationActivity passwordFragment, TLObject[] request, TLRPC.InputCheckPasswordSRP srp, boolean cache, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda23(this, key, cacheFinal, response, messageObject, button, parentFragment, passwordFragment, request, error, srp, cache));
    }

    /* renamed from: lambda$sendCallback$29$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m475lambda$sendCallback$29$orgtelegrammessengerSendMessagesHelper(String key, boolean cacheFinal, TLObject response, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, TwoStepVerificationActivity passwordFragment, TLObject[] request, TLRPC.TL_error error, TLRPC.InputCheckPasswordSRP srp, boolean cache) {
        long uid;
        String name;
        boolean z;
        String str = key;
        TLObject tLObject = response;
        MessageObject messageObject2 = messageObject;
        TLRPC.KeyboardButton keyboardButton = button;
        ChatActivity chatActivity = parentFragment;
        TLRPC.TL_error tL_error = error;
        this.waitingForCallback.remove(str);
        if (cacheFinal && tLObject == null) {
            sendCallback(false, messageObject2, keyboardButton, chatActivity);
        } else if (tLObject != null) {
            if (passwordFragment != null) {
                passwordFragment.needHideProgress();
                passwordFragment.finishFragment();
            }
            long uid2 = messageObject.getFromChatId();
            if (messageObject2.messageOwner.via_bot_id != 0) {
                uid = messageObject2.messageOwner.via_bot_id;
            } else {
                uid = uid2;
            }
            String name2 = null;
            if (uid > 0) {
                TLRPC.User user = getMessagesController().getUser(Long.valueOf(uid));
                if (user != null) {
                    name2 = ContactsController.formatName(user.first_name, user.last_name);
                }
            } else {
                TLRPC.Chat chat = getMessagesController().getChat(Long.valueOf(-uid));
                if (chat != null) {
                    name2 = chat.title;
                }
            }
            if (name2 == null) {
                name = "bot";
            } else {
                name = name2;
            }
            if (keyboardButton instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                if (tLObject instanceof TLRPC.TL_urlAuthResultRequest) {
                    chatActivity.showRequestUrlAlert((TLRPC.TL_urlAuthResultRequest) tLObject, request[0], keyboardButton.url, false);
                } else if (tLObject instanceof TLRPC.TL_urlAuthResultAccepted) {
                    AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC.TL_urlAuthResultAccepted) tLObject).url, false, false);
                } else if (tLObject instanceof TLRPC.TL_urlAuthResultDefault) {
                    TLRPC.TL_urlAuthResultDefault tL_urlAuthResultDefault = (TLRPC.TL_urlAuthResultDefault) tLObject;
                    AlertsCreator.showOpenUrlAlert(chatActivity, keyboardButton.url, false, true);
                }
            } else if (!(keyboardButton instanceof TLRPC.TL_keyboardButtonBuy)) {
                TLRPC.TL_messages_botCallbackAnswer res = (TLRPC.TL_messages_botCallbackAnswer) tLObject;
                if (!cacheFinal && res.cache_time != 0 && !keyboardButton.requires_password) {
                    getMessagesStorage().saveBotCache(str, res);
                }
                if (res.message != null) {
                    if (!res.alert) {
                        chatActivity.showAlert(name, res.message);
                    } else if (parentFragment.getParentActivity() != null) {
                        AlertDialog.Builder builder = new AlertDialog.Builder((Context) parentFragment.getParentActivity());
                        builder.setTitle(name);
                        builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                        builder.setMessage(res.message);
                        chatActivity.showDialog(builder.create());
                    }
                } else if (res.url == null) {
                    TLRPC.TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer = res;
                } else if (parentFragment.getParentActivity() != null) {
                    TLRPC.User user2 = getMessagesController().getUser(Long.valueOf(uid));
                    boolean verified = user2 != null && user2.verified;
                    if (keyboardButton instanceof TLRPC.TL_keyboardButtonGame) {
                        TLRPC.TL_game game = messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaGame ? messageObject2.messageOwner.media.game : null;
                        if (game != null) {
                            String str2 = res.url;
                            if (!verified) {
                                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                                if (notificationsSettings.getBoolean("askgame_" + uid, true)) {
                                    z = true;
                                    TLRPC.User user3 = user2;
                                    String str3 = name;
                                    TLRPC.TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer2 = res;
                                    parentFragment.showOpenGameAlert(game, messageObject, str2, z, uid);
                                    return;
                                }
                            }
                            z = false;
                            TLRPC.User user32 = user2;
                            String str32 = name;
                            TLRPC.TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer22 = res;
                            parentFragment.showOpenGameAlert(game, messageObject, str2, z, uid);
                            return;
                        }
                        return;
                    }
                    String str4 = name;
                    AlertsCreator.showOpenUrlAlert(chatActivity, res.url, false, false);
                }
            } else if (tLObject instanceof TLRPC.TL_payments_paymentForm) {
                TLRPC.TL_payments_paymentForm form = (TLRPC.TL_payments_paymentForm) tLObject;
                getMessagesController().putUsers(form.users, false);
                chatActivity.presentFragment(new PaymentFormActivity(form, messageObject2, chatActivity));
            } else if (tLObject instanceof TLRPC.TL_payments_paymentReceipt) {
                chatActivity.presentFragment(new PaymentFormActivity((TLRPC.TL_payments_paymentReceipt) tLObject));
            }
        } else if (tL_error != null && parentFragment.getParentActivity() != null) {
            if ("PASSWORD_HASH_INVALID".equals(tL_error.text)) {
                if (srp == null) {
                    AlertDialog.Builder builder2 = new AlertDialog.Builder((Context) parentFragment.getParentActivity());
                    builder2.setTitle(LocaleController.getString("BotOwnershipTransfer", NUM));
                    builder2.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferReadyAlertText", NUM, new Object[0])));
                    String string = LocaleController.getString("BotOwnershipTransferChangeOwner", NUM);
                    SendMessagesHelper$$ExternalSyntheticLambda0 sendMessagesHelper$$ExternalSyntheticLambda0 = r0;
                    SendMessagesHelper$$ExternalSyntheticLambda0 sendMessagesHelper$$ExternalSyntheticLambda02 = new SendMessagesHelper$$ExternalSyntheticLambda0(this, cache, messageObject, button, parentFragment);
                    builder2.setPositiveButton(string, sendMessagesHelper$$ExternalSyntheticLambda0);
                    builder2.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                    chatActivity.showDialog(builder2.create());
                }
            } else if ("PASSWORD_MISSING".equals(tL_error.text) || tL_error.text.startsWith("PASSWORD_TOO_FRESH_") || tL_error.text.startsWith("SESSION_TOO_FRESH_")) {
                if (passwordFragment != null) {
                    passwordFragment.needHideProgress();
                }
                AlertDialog.Builder builder3 = new AlertDialog.Builder((Context) parentFragment.getParentActivity());
                builder3.setTitle(LocaleController.getString("EditAdminTransferAlertTitle", NUM));
                LinearLayout linearLayout = new LinearLayout(parentFragment.getParentActivity());
                linearLayout.setPadding(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(24.0f), 0);
                linearLayout.setOrientation(1);
                builder3.setView(linearLayout);
                TextView messageTextView = new TextView(parentFragment.getParentActivity());
                messageTextView.setTextColor(Theme.getColor("dialogTextBlack"));
                messageTextView.setTextSize(1, 16.0f);
                messageTextView.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                messageTextView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferAlertText", NUM, new Object[0])));
                linearLayout.addView(messageTextView, LayoutHelper.createLinear(-1, -2));
                LinearLayout linearLayout2 = new LinearLayout(parentFragment.getParentActivity());
                linearLayout2.setOrientation(0);
                linearLayout.addView(linearLayout2, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView dotImageView = new ImageView(parentFragment.getParentActivity());
                dotImageView.setImageResource(NUM);
                TextView textView = messageTextView;
                dotImageView.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                dotImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("dialogTextBlack"), PorterDuff.Mode.MULTIPLY));
                TextView messageTextView2 = new TextView(parentFragment.getParentActivity());
                messageTextView2.setTextColor(Theme.getColor("dialogTextBlack"));
                messageTextView2.setTextSize(1, 16.0f);
                messageTextView2.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                messageTextView2.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText1", NUM)));
                if (LocaleController.isRTL) {
                    linearLayout2.addView(messageTextView2, LayoutHelper.createLinear(-1, -2));
                    linearLayout2.addView(dotImageView, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout2.addView(dotImageView, LayoutHelper.createLinear(-2, -2));
                    linearLayout2.addView(messageTextView2, LayoutHelper.createLinear(-1, -2));
                }
                LinearLayout linearLayout22 = new LinearLayout(parentFragment.getParentActivity());
                linearLayout22.setOrientation(0);
                linearLayout.addView(linearLayout22, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView dotImageView2 = new ImageView(parentFragment.getParentActivity());
                dotImageView2.setImageResource(NUM);
                TextView textView2 = messageTextView2;
                dotImageView2.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                dotImageView2.setColorFilter(new PorterDuffColorFilter(Theme.getColor("dialogTextBlack"), PorterDuff.Mode.MULTIPLY));
                TextView messageTextView3 = new TextView(parentFragment.getParentActivity());
                messageTextView3.setTextColor(Theme.getColor("dialogTextBlack"));
                messageTextView3.setTextSize(1, 16.0f);
                messageTextView3.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                messageTextView3.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText2", NUM)));
                if (LocaleController.isRTL) {
                    linearLayout22.addView(messageTextView3, LayoutHelper.createLinear(-1, -2));
                    linearLayout22.addView(dotImageView2, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout22.addView(dotImageView2, LayoutHelper.createLinear(-2, -2));
                    linearLayout22.addView(messageTextView3, LayoutHelper.createLinear(-1, -2));
                }
                if ("PASSWORD_MISSING".equals(tL_error.text)) {
                    builder3.setPositiveButton(LocaleController.getString("EditAdminTransferSetPassword", NUM), new SendMessagesHelper$$ExternalSyntheticLambda11(chatActivity));
                    builder3.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                } else {
                    TextView messageTextView4 = new TextView(parentFragment.getParentActivity());
                    messageTextView4.setTextColor(Theme.getColor("dialogTextBlack"));
                    messageTextView4.setTextSize(1, 16.0f);
                    messageTextView4.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                    messageTextView4.setText(LocaleController.getString("EditAdminTransferAlertText3", NUM));
                    linearLayout.addView(messageTextView4, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                    builder3.setNegativeButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                }
                chatActivity.showDialog(builder3.create());
            } else if ("SRP_ID_INVALID".equals(tL_error.text)) {
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(new TLRPC.TL_account_getPassword(), new SendMessagesHelper$$ExternalSyntheticLambda87(this, passwordFragment, cache, messageObject, button, parentFragment), 8);
            } else if (passwordFragment != null) {
                passwordFragment.needHideProgress();
                passwordFragment.finishFragment();
            }
        }
    }

    /* renamed from: lambda$sendCallback$25$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m472lambda$sendCallback$25$orgtelegrammessengerSendMessagesHelper(boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, DialogInterface dialogInterface, int i) {
        TwoStepVerificationActivity fragment = new TwoStepVerificationActivity();
        fragment.setDelegate(new SendMessagesHelper$$ExternalSyntheticLambda90(this, cache, messageObject, button, fragment, parentFragment));
        parentFragment.presentFragment(fragment);
    }

    /* renamed from: lambda$sendCallback$28$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m474lambda$sendCallback$28$orgtelegrammessengerSendMessagesHelper(TwoStepVerificationActivity passwordFragment, boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, TLObject response2, TLRPC.TL_error error2) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda51(this, error2, response2, passwordFragment, cache, messageObject, button, parentFragment));
    }

    /* renamed from: lambda$sendCallback$27$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m473lambda$sendCallback$27$orgtelegrammessengerSendMessagesHelper(TLRPC.TL_error error2, TLObject response2, TwoStepVerificationActivity passwordFragment, boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment) {
        if (error2 == null) {
            TLRPC.TL_account_password currentPassword = (TLRPC.TL_account_password) response2;
            TwoStepVerificationActivity twoStepVerificationActivity = passwordFragment;
            passwordFragment.setCurrentPasswordInfo((byte[]) null, currentPassword);
            TwoStepVerificationActivity.initPasswordNewAlgo(currentPassword);
            m471lambda$sendCallback$24$orgtelegrammessengerSendMessagesHelper(cache, messageObject, button, passwordFragment.getNewSrpPassword(), passwordFragment, parentFragment);
            return;
        }
        TwoStepVerificationActivity twoStepVerificationActivity2 = passwordFragment;
    }

    public boolean isSendingCallback(MessageObject messageObject, TLRPC.KeyboardButton button) {
        int type;
        if (messageObject == null || button == null) {
            return false;
        }
        if (button instanceof TLRPC.TL_keyboardButtonUrlAuth) {
            type = 3;
        } else if ((button instanceof TLRPC.TL_keyboardButtonGame) != 0) {
            type = 1;
        } else if ((button instanceof TLRPC.TL_keyboardButtonBuy) != 0) {
            type = 2;
        } else {
            type = 0;
        }
        return this.waitingForCallback.containsKey(messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(button.data) + "_" + type);
    }

    public void sendGame(TLRPC.InputPeer peer, TLRPC.TL_inputMediaGame game, long random_id, long taskId) {
        long newTaskId;
        if (peer != null && game != null) {
            TLRPC.TL_messages_sendMedia request = new TLRPC.TL_messages_sendMedia();
            request.peer = peer;
            if (request.peer instanceof TLRPC.TL_inputPeerChannel) {
                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                request.silent = notificationsSettings.getBoolean("silent_" + (-peer.channel_id), false);
            } else if (request.peer instanceof TLRPC.TL_inputPeerChat) {
                SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(this.currentAccount);
                request.silent = notificationsSettings2.getBoolean("silent_" + (-peer.chat_id), false);
            } else {
                SharedPreferences notificationsSettings3 = MessagesController.getNotificationsSettings(this.currentAccount);
                request.silent = notificationsSettings3.getBoolean("silent_" + peer.user_id, false);
            }
            request.random_id = random_id != 0 ? random_id : getNextRandomId();
            request.message = "";
            request.media = game;
            long fromId = ChatObject.getSendAsPeerId(getMessagesController().getChat(Long.valueOf(peer.chat_id)), getMessagesController().getChatFull(peer.chat_id));
            if (fromId != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
                request.send_as = getMessagesController().getInputPeer(fromId);
            }
            if (taskId == 0) {
                NativeByteBuffer data = null;
                try {
                    data = new NativeByteBuffer(peer.getObjectSize() + game.getObjectSize() + 4 + 8);
                    data.writeInt32(3);
                    data.writeInt64(random_id);
                    peer.serializeToStream(data);
                    game.serializeToStream(data);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                newTaskId = getMessagesStorage().createPendingTask(data);
            } else {
                newTaskId = taskId;
            }
            getConnectionsManager().sendRequest(request, new SendMessagesHelper$$ExternalSyntheticLambda75(this, newTaskId));
        }
    }

    /* renamed from: lambda$sendGame$31$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m477lambda$sendGame$31$orgtelegrammessengerSendMessagesHelper(long newTaskId, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
        }
        if (newTaskId != 0) {
            getMessagesStorage().removePendingTask(newTaskId);
        }
    }

    public void sendMessage(MessageObject retryMessageObject) {
        MessageObject messageObject = retryMessageObject;
        long dialogId = retryMessageObject.getDialogId();
        String str = messageObject.messageOwner.attachPath;
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, dialogId, str, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, retryMessageObject, (ArrayList<TLRPC.MessageEntity>) null, messageObject.messageOwner.reply_markup, messageObject.messageOwner.params, !messageObject.messageOwner.silent, messageObject.scheduled ? messageObject.messageOwner.date : 0, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.User user, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, user, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_messageMediaInvoice invoice, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, invoice, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_document document, VideoEditedInfo videoEditedInfo, String path, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, String caption, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, int ttl, Object parentObject, MessageObject.SendAnimationData sendAnimationData) {
        String str = caption;
        sendMessage((String) null, str, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, videoEditedInfo, (TLRPC.User) null, document, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, path, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, entities, replyMarkup, params, notify, scheduleDate, ttl, parentObject, sendAnimationData);
    }

    public void sendMessage(String message, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.WebPage webPage, boolean searchLinks, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, MessageObject.SendAnimationData sendAnimationData) {
        sendMessage(message, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, webPage, searchLinks, (MessageObject) null, entities, replyMarkup, params, notify, scheduleDate, 0, (Object) null, sendAnimationData);
    }

    public void sendMessage(TLRPC.MessageMedia location, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, location, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_messageMediaPoll poll, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, poll, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_game game, long peer, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, game, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_photo photo, String path, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, String caption, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, int ttl, Object parentObject) {
        String str = caption;
        sendMessage((String) null, str, (TLRPC.MessageMedia) null, photo, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, path, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, entities, replyMarkup, params, notify, scheduleDate, ttl, parentObject, (MessageObject.SendAnimationData) null);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v1, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v1, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v3, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v0, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v5, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v0, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v0, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v0, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v0, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v0, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v2, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v1, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v3, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v1, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v1, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r87v1, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v2, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v1, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v1, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v2, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v7, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v4, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v2, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v1, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v9, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v3, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v1, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v1, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v0, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v4, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v5, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v1, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v4, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v3, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v1, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v1, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v1, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v2, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v4, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v5, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v6, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v2, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v6, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v4, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v2, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v4, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v5, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v3, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v3, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v3, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v10, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v6, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v6, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v7, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v7, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v2, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v4, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v7, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v11, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v9, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v7, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v3, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v5, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v8, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v13, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v11, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v8, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v6, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v6, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v6, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v6, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v14, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v9, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v10, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v9, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v12, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v7, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v4, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v12, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v10, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v20, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v14, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v11, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v7, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v5, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v13, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v11, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v21, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v16, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v12, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v8, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v8, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v2, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r89v1, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v15, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v0, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v12, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v14, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v25, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v18, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v13, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v9, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v8, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v7, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v8, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v3, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v13, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v9, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v19, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v18, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v8, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v1, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v11, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v9, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v4, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v14, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v10, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v21, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v3, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v10, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v2, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v1, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v15, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v15, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v15, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v17, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v11, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v9, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v28, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v11, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v22, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v16, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v10, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v20, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v12, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v30, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v12, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v23, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v18, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v11, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v21, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v13, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v36, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v13, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v24, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v19, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v12, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v23, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v37, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v14, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v25, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v21, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v13, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v25, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v16, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v39, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v26, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v22, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v14, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v26, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v41, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v27, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v27, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v23, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v47, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v48, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v58, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v16, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v28, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v28, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v24, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v10, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v11, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v62, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v17, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v29, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v30, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v11, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v12, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v64, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v18, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v30, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v32, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v12, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v13, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v66, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v19, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v31, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v33, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v24, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v14, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v13, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v33, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v4, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v71, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v18, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v20, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v34, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v34, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v26, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v19, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v35, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v85, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v21, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v35, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v27, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v3, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v4, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v16, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v16, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v2, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v20, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v36, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v18, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v23, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v5, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v17, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v28, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v4, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v91, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v22, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v17, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v18, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v30, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v20, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v92, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v23, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v18, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v24, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v13, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v19, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v31, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v39, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v39, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v21, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v93, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v7, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v23, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v14, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v40, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v22, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v14, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v15, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v24, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v8, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v23, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v9, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v17, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v42, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v24, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v42, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v25, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v40, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v94, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v25, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v19, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v95, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v11, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v46, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v21, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v26, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v44, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v96, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v42, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v27, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v23, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v27, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v97, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v4, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v48, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v48, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v0, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v44, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v3, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v12, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v0, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v26, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v6, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v25, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v20, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v49, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v28, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v49, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v1, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v27, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v7, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v26, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v21, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v48, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v13, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v34, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v51, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v30, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v52, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v99, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v23, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v35, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v53, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v32, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v53, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v100, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v49, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v24, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v31, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v15, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v8, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v28, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v50, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v40, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v59, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v55, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v34, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v101, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v4, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r77v0, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v51, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v41, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v56, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v65, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v102, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v1, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v52, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v42, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v58, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v14, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v59, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v35, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v63, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v103, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v53, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v36, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v9, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v105, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v64, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v2, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v54, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v15, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v62, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v38, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v106, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v55, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v39, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v43, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v64, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v44, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v65, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v111, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v29, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v68, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v3, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v56, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v45, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v67, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v112, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v70, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v4, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v57, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v46, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v69, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v113, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v72, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v5, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v58, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v71, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v72, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v114, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v74, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v12, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v59, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v74, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r77v1, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r77v2, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v47, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v115, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v61, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v33, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r77v3, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v49, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v124, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v34, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v13, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v64, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v50, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v43, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v78, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r77v4, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v51, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v79, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v44, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v125, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v66, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v35, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v17, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v52, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v81, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v45, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v126, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v67, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v36, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v127, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v53, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v69, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v37, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v128, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v54, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v70, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v20, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v22, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v75, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v28, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v49, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v85, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v86, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v23, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v50, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v86, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r74v0, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v9, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v31, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v16, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v88, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v48, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v32, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v49, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v29, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v11, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v129, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v58, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v73, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v39, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v89, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r76v1, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v1, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v30, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v12, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v90, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v59, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v130, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v74, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r76v2, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v31, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v50, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v48, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v131, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v61, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v75, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v41, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v92, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v91, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v94, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v54, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v49, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v132, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v64, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v55, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v95, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v88, resolved type: byte[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v93, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v96, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v89, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v50, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v15, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v97, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v94, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v51, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v95, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v98, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v58, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v91, resolved type: byte[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v52, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v135, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v66, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v77, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v59, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v53, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v136, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v67, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v78, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v43, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v60, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v54, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v137, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v68, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v79, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v99, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v61, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v55, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v138, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v70, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v80, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v106, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v62, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v56, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v139, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v71, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v81, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v63, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v64, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v58, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v65, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v66, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v140, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v76, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v82, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v102, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v60, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v77, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v147, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v83, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v48, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v104, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v68, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v112, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v106, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v64, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v113, resolved type: byte[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v32, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v16, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v33, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v17, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v148, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v84, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v49, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v104, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v34, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v159, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v85, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v35, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v106, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v107, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v161, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v36, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v86, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r76v7, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v37, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v170, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v38, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v87, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v52, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v39, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v21, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v80, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v108, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v109, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r76v9, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v40, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v22, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v82, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v110, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v172, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v41, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v88, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v53, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v83, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v111, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v42, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v89, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v174, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v84, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v112, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v43, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v90, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v175, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v113, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v60, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v44, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v91, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v176, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v45, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v92, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v177, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v46, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v131, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v47, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v94, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v178, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v85, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v115, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v17, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v179, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v48, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v95, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v59, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v86, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v23, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v18, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v182, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v49, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v96, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v60, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v60, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v87, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v24, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v19, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v88, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v186, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v50, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v97, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v61, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v61, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v20, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v91, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v188, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v51, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v98, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v62, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v52, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v23, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r76v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v99, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v189, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v92, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v53, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v47, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v63, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v5, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v77, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v101, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v88, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v201, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v25, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v54, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v48, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v26, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v102, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v145, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v93, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v89, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v6, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v78, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v103, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v90, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v126, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v202, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v26, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v55, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v49, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v104, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v203, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v94, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v127, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v204, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v128, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v28, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v205, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v95, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v56, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v50, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v105, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v65, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v206, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v129, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v29, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v207, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v57, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v51, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v106, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v66, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v96, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v130, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v30, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v58, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v52, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v107, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v208, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v97, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v131, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v31, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v59, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v53, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v108, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v209, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v98, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v96, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v132, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v32, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v60, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v54, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v109, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v210, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v99, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v133, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v134, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v33, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v61, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v55, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v110, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v211, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v100, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v34, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v62, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v56, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v111, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v212, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v101, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v108, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v136, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v7, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v87, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v112, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v113, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v35, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v102, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v214, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v63, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v57, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v72, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v115, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v36, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v104, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v221, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v64, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v58, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v73, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v92, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v117, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v39, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v106, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v222, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v65, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v59, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v118, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v74, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v98, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v223, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v11, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v94, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v119, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v40, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v111, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v232, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v66, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v75, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v142, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v143, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v41, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r73v12, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v67, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v96, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v24, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v42, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v113, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v240, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v68, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v76, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v43, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v114, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v245, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v69, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v77, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v104, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v45, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v117, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v246, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v70, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v78, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v46, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v21, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v71, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v100, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v28, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v25, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v47, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v118, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v248, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v72, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v79, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v48, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v119, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v254, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v73, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v80, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v85, resolved type: org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v49, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v121, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v255, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v74, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v81, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v2, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v75, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v67, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v104, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v91, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v19, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v24, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v110, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v123, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v152, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v171, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v80, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v34, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v88, resolved type: org.telegram.tgnet.TLRPC$TL_messages_sendMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v28, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v22, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r70v1, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v64, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v123, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v26, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v50, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v15, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v153, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v23, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v22, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v25, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v23, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v65, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v126, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v28, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v154, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v173, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v155, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v174, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v156, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v175, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v157, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v158, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v269, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v76, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v128, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v26, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v66, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v127, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v53, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v271, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v77, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v34, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v27, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v272, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v78, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v128, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v54, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v129, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v36, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v24, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v29, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v274, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v79, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v131, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v56, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v30, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v132, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v38, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v31, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v25, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r70v4, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v39, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v32, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v275, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v57, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v135, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v40, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v33, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v26, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v137, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v58, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v276, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v97, resolved type: org.telegram.tgnet.TLRPC$TL_messages_sendMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v41, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v34, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v277, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v138, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v59, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v87, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v42, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v35, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v278, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v139, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v60, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v168, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v36, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v279, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v140, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v61, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v169, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v37, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v280, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v141, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v62, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v170, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v106, resolved type: org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v43, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v38, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v281, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v143, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v63, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v171, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v44, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v39, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v282, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v144, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v64, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v172, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v40, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v283, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v145, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v173, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v65, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v3, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v80, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v73, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v119, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v20, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v62, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v181, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v136, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v174, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v191, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v41, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v284, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v146, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v175, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v66, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v91, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v30, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v116, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v147, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v21, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v64, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v138, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v42, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v27, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v148, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v67, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v285, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v81, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v97, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v177, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v123, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v184, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v43, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v149, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v28, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v68, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v287, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v82, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v98, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v83, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v142, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v196, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v44, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v150, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v29, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v69, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v288, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v123, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v198, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v199, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v143, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v84, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v156, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r70v9, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v30, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v180, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v294, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v102, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v295, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v159, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v181, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v103, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v144, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v85, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v128, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v296, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v161, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v182, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v86, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v105, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v131, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v297, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v162, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v183, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v87, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v106, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v163, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v134, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v298, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v164, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v184, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v88, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v107, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v185, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v186, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v299, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v89, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v108, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v168, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v187, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v188, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v300, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v90, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v109, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v169, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v189, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v22, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v139, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v13, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v75, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v136, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v190, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v23, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v140, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v191, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v37, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v1, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v302, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v91, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v171, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v14, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v79, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v43, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v80, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v139, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v172, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v155, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v44, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v78, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v305, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v192, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v92, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v81, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v173, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v111, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v81, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v178, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v82, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v193, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v220, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v140, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v93, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v195, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v141, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v83, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v195, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v84, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v196, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v85, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v197, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v86, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v311, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v199, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v94, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v175, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v88, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v312, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v200, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v95, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v176, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v90, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v313, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v201, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v96, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v177, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v92, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v314, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v202, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v97, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v178, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v16, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v143, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v94, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v187, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v192, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v96, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v97, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v318, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v98, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v212, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v118, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v99, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v52, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v100, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v319, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v213, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v99, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v119, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v102, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v103, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v320, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v100, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v215, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v120, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v181, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v55, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v321, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v101, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v217, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v182, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v121, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v107, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v108, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v57, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v91, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v150, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v102, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v92, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v103, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v218, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v229, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v196, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v152, resolved type: org.telegram.tgnet.TLRPC$InputMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v144, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v326, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v104, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v186, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v122, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v328, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v105, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v187, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v123, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v106, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v221, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v232, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v197, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v155, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDice} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v145, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v164, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v97, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v329, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v107, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v189, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v124, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v165, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v99, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v331, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v108, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v190, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v125, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v101, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v109, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v115, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v222, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v235, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v198, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v158, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v146, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v103, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v104, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v105, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v223, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v106, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v332, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v110, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v192, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v126, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v108, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v333, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v111, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v193, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v127, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v110, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v111, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v227, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v112, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v334, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v195, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v128, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v113, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v67, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v336, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v197, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v129, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v199, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v169, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v337, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v200, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v166, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v199, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v126, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v147, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v228, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v170, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v205, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v207, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v338, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v208, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v132, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v339, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v209, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v133, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v171, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v211, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v72, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v118, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v3, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v114, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v213, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v135, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v340, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v4, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v115, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v214, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v136, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v341, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v146, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v116, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v229, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v246, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v200, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v175, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaContact} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v151, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v141, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v230, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v176, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v151, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v24, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v349, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v137, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v117, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v216, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v142, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v231, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v178, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v153, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v25, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v350, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v138, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v118, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v217, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v143, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v155, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v232, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v26, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v351, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v139, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v119, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v218, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v124, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v353, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v41, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v100, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v182, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v27, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v159, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v144, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v120, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v219, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v355, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v125, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v156, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v253, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v121, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v204, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v234, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v184, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v28, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v145, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v235, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v146, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v236, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v29, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v357, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v122, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v221, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v127, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v30, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v148, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v237, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v358, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v123, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v222, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v128, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v238, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v359, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v124, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v223, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v149, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v129, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v239, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v360, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v125, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v224, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v150, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v130, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v240, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v126, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v225, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v151, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v362, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v131, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v241, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v127, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v226, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v152, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v363, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v132, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v43, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v128, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v227, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v153, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v364, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v133, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v154, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v365, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v232, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v366, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v87, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v32, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v164, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v367, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v129, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v228, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v150, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v242, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v134, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v90, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v34, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v165, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v368, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v130, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v229, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v151, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v243, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v135, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v35, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v92, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v93, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v38, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v172, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v371, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v131, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v230, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v152, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v136, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v41, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v175, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v372, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v132, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v153, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v137, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v231, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v44, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v176, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v373, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v133, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v154, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v138, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v232, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v177, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v204, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v188, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v45, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v374, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v155, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v134, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v233, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v139, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v177, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v46, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v178, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v375, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v135, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v234, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v181, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v47, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v179, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v99, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v191, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v207, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v48, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v45, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v180, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v251, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v136, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v269, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v215, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v160, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v377, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v378, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v379, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaVenue} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v116, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v237, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v193, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v6, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v194, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v16, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v46, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v85, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v30, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v142, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v10, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v51, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v184, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v386, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v138, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v143, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v240, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v52, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v185, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v387, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v139, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v144, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v241, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v396, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v401, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v12, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v86, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v145, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v214, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v188, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v405, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v140, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v146, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v243, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v56, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v191, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v414, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v141, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v147, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v244, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v57, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v142, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v7, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v201, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v192, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v417, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v245, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v148, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v58, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v143, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v203, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v193, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v421, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v246, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v149, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v59, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v194, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v144, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v422, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v247, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v150, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v60, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v145, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v206, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v196, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v427, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v249, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v151, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v61, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v87, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v152, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v19, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v20, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v197, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v146, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v439, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v253, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v153, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v63, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v440, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v222, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v21, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v56, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v57, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v198, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v147, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v444, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v254, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v154, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v64, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v59, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v60, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v61, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r65v124, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r64v10, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v211, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v199, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v29, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v286, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v48, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v155, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v66, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v200, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v148, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v447, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v167, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v265, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v156, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v18, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v261, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v67, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v49, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v266, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v201, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v149, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v450, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v19, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v262, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v68, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v216, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v19, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v20, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v32, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v158, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v69, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v451, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v264, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v202, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v150, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v268, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v168, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v258, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v20, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v21, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v33, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v159, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v70, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v454, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v266, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v203, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v151, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v270, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v259, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v260, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v274, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v204, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v152, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v455, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v22, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v267, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v71, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v261, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v171, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v277, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v205, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v153, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v456, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v161, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v268, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v72, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r89v26, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v278, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v206, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v154, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v458, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v23, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v269, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v73, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v53, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v54, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v55, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v155, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v461, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v207, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v282, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v163, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v74, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v270, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v193, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v55, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v467, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v56, resolved type: java.lang.Long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v21, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v129, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v34, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v22, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v164, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v238, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v477, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v272, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v208, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v91, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v156, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v283, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v299, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v300, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v301, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v130, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v92, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v157, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v503, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v209, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v284, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v165, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v273, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v239, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v303, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v304, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v285, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v286, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v131, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v93, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v158, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v512, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v210, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v166, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v274, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v240, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v287, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v288, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v159, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v94, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v132, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v275, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v212, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v519, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v241, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v290, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v133, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v95, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v160, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v520, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v214, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v276, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v294, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v134, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v96, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v161, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v523, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v217, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v169, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v277, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v242, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v296, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v135, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v97, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v162, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v524, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v218, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v170, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v278, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v243, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v136, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v98, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v163, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v525, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v219, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v279, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v297, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v529, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v533, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v137, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v99, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v164, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v536, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v220, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v172, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v280, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v302, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v244, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v63, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v64, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v65, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v100, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v165, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v538, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v221, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v173, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v303, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v281, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v245, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v27, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v66, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v166, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v541, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v222, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v174, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v304, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v282, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v246, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v67, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v167, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v542, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v224, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v175, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v305, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v283, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v247, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v1, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v87, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v124, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v141, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v545, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v284, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v226, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v168, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v176, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v249, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v172, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v95, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v250, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v227, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v257, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v546, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v125, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v177, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v142, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v547, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v104, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v286, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v228, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v169, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v251, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v308, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v126, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v178, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v143, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v549, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v105, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v287, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v229, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v170, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v252, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v16, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r87v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v550, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v179, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v34, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v333, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v253, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v230, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v96, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v246, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v18, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v310, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v42, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v127, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v180, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v144, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v551, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v288, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v231, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v171, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v254, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r100v43, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v128, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v181, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v145, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v552, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v289, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v232, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v172, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v255, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v129, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v182, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v146, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v233, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v173, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v256, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v290, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v553, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v130, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v183, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v147, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v234, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v174, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v257, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v291, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v554, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v131, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v185, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v148, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v235, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v175, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v258, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v555, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v292, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v132, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v186, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v149, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v236, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v176, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v259, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v556, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v293, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v133, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v187, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v150, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v237, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v177, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v260, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v557, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v294, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v134, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v178, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v295, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v97, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v261, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v239, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v558, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v559, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v263, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v343, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v258, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v241, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v560, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v99, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v337, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v98, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v135, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v152, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v561, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v296, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v242, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v179, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v190, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v264, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v339, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v229, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v344, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v562, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v99, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v136, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v191, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v153, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v298, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v247, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v180, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v265, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v563, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v341, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v100, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v137, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v154, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v564, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v299, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v248, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v181, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v193, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v266, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v194, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v259, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v249, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v565, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v102, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v195, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v260, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v345, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v345, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v566, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v196, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v262, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v197, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v263, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v173, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v198, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v264, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v253, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v569, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v108, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v199, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v138, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v155, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v572, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v101, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v303, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v254, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v182, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v200, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v267, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v174, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v201, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v266, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v202, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v203, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v139, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v156, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v304, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v255, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v183, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v204, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v268, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v575, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v176, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v103, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v140, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v205, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v576, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v157, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v305, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v256, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v184, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v269, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v269, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v206, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v207, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v348, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v582, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v358, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v208, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v272, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v233, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v234, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v143, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v144, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v145, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v104, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v141, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v209, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v307, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v276, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v185, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v270, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v583, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v105, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v142, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v159, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v584, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v312, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v280, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v186, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v210, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v271, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v362, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v106, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v143, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v313, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v281, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v187, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v211, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v272, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v585, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v364, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v282, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v107, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v144, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v212, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v161, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v314, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v283, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v188, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v273, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v586, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v108, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v145, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v213, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v162, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v315, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v284, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v189, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v274, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v587, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v588, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v119, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v273, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v285, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v589, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v120, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v274, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v286, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v109, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v146, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v163, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v317, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v287, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v190, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v214, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v275, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v590, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v110, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v147, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v164, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v289, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v191, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v216, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v276, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v591, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v290, resolved type: org.telegram.tgnet.TLRPC$TL_message_secret} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v111, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v148, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v219, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v127, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v165, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v291, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v192, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v319, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v278, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v592, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v292, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v593, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v122, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v275, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v279, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v293, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v594, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v123, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v276, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v280, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v112, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v281, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v320, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v294, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v193, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v595, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v113, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v150, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v222, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v129, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v167, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v282, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v194, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v596, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v321, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v296, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v283, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v597, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v126, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v277, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v297, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v284, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v598, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v128, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v278, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v298, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v599, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v114, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v151, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v223, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v130, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v168, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v285, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v299, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v195, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v322, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v600, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v304, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v286, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v129, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v601, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v279, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v115, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v152, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v229, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v131, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v169, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v292, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v318, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v196, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v323, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v602, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v116, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v293, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v603, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v324, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v319, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v197, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v117, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v133, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v171, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v294, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v198, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v232, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v605, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v320, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v606, resolved type: org.telegram.tgnet.TLRPC$TL_message_secret} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v130, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v118, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v234, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v134, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v172, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v295, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v199, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v607, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v326, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v321, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v322, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v296, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v608, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v280, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v323, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v297, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v609, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v281, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v131, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v119, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v135, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v173, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v298, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v200, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v236, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v610, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v324, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v132, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v120, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v237, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v136, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v174, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v299, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v201, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v611, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v328, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v326, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v300, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v612, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v133, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v282, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v327, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v121, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v137, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v175, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v301, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v329, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v202, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v238, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v613, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v369, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v331, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v302, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v134, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v614, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v283, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v122, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v239, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v138, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v176, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v303, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v338, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v203, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v615, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v330, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v123, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v240, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v139, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v177, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v304, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v339, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v204, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v616, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v331, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v305, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v138, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v617, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v284, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v124, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v241, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v140, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v178, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v306, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v347, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v205, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v618, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v332, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v125, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v141, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v179, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v307, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v349, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v206, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v242, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v619, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v126, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v142, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v180, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v308, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v350, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v207, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v243, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v620, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v244, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v127, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v143, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v181, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v309, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v351, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v208, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v245, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v621, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v2, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v20, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r87v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v139, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v352, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v310, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v48, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v19, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v360, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v287, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v375, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v622, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v246, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v284, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v3, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v4, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v186, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v353, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v259, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v623, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v128, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v165, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v311, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v624, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v182, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v354, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v209, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v247, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v21, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r87v4, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v49, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v627, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v363, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v355, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v289, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v286, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v141, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v21, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v22, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r87v5, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v50, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v364, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v290, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v287, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v630, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v356, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v142, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v22, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v249, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v129, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v314, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v166, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v183, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v357, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v210, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v250, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v631, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v5, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v632, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v263, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v366, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v358, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v190, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v633, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v6, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v7, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v130, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v146, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v315, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v184, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v359, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v211, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v251, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v634, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v270, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v368, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v360, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v194, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v369, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v361, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v195, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v273, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v280, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v370, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v362, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v197, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v371, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v363, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v198, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v283, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v290, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v372, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v364, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v199, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v291, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v373, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v365, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v201, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v294, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v374, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v366, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v203, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v375, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v367, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v204, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v297, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v131, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v185, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v316, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v147, resolved type: org.telegram.tgnet.TLRPC$TL_userRequest_old2} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v368, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v212, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v252, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v635, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v369, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v378, resolved type: org.telegram.tgnet.TLRPC$TL_userRequest_old2} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v207, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v299, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v302, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v132, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v148, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v186, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v317, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v370, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v213, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v636, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v253, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v167, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v371, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v380, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v304, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v372, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v212, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v381, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v8, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v637, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r41v9, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v373, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v9, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v214, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v305, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v382, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v133, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v149, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v187, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v318, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v374, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v214, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v638, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v254, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v255, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v134, resolved type: org.telegram.messenger.SendMessagesHelper} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v256, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v150, resolved type: org.telegram.tgnet.TLRPC$User} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v188, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v319, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v375, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r66v215, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v639, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v64, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v258, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v59, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v301, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v259, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v59, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v385, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v38, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r90v59, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v315, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v162, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v64, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v189, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v190, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v191, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v192, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v193, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v194, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v195, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v196, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v197, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v198, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v199, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v66, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v200, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v201, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v377, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v316, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v317, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v318, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v319, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v386, resolved type: byte[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v387, resolved type: byte[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v388, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v389, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v390, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v392, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v322, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v393, resolved type: byte[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v381, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v151, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v152, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v330, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v306, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v307, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v308, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v309, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v310, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v311, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v312, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v313, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v314, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v315, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v316, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v317, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v318, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v319, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v320, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v321, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v322, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v331, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v640, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r31v64, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v386, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v387, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v172, resolved type: java.lang.String} */
    /* JADX WARNING: type inference failed for: r31v1, types: [boolean] */
    /* JADX WARNING: type inference failed for: r35v29 */
    /* JADX WARNING: type inference failed for: r35v30 */
    /* JADX WARNING: type inference failed for: r3v125 */
    /* JADX WARNING: type inference failed for: r3v139 */
    /* JADX WARNING: type inference failed for: r9v61 */
    /* JADX WARNING: type inference failed for: r9v62 */
    /* JADX WARNING: type inference failed for: r14v179 */
    /* JADX WARNING: type inference failed for: r18v157 */
    /* JADX WARNING: type inference failed for: r21v152 */
    /* JADX WARNING: type inference failed for: r21v153 */
    /* JADX WARNING: type inference failed for: r21v157 */
    /* JADX WARNING: type inference failed for: r21v160 */
    /* JADX WARNING: type inference failed for: r21v169 */
    /* JADX WARNING: type inference failed for: r21v170 */
    /* JADX WARNING: type inference failed for: r21v173 */
    /* JADX WARNING: type inference failed for: r21v213 */
    /* JADX WARNING: type inference failed for: r21v215 */
    /* JADX WARNING: type inference failed for: r35v63 */
    /* JADX WARNING: type inference failed for: r5v378 */
    /* JADX WARNING: type inference failed for: r5v379 */
    /* JADX WARNING: type inference failed for: r5v380 */
    /* JADX WARNING: type inference failed for: r9v179 */
    /* JADX WARNING: type inference failed for: r9v180 */
    /* JADX WARNING: type inference failed for: r9v181 */
    /* JADX WARNING: Code restructure failed: missing block: B:1098:0x1d89, code lost:
        if (r4.roundVideo == false) goto L_0x1dbb;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1806:?, code lost:
        r12.media.thumb_h = r4.h;
        r12.media.thumb_w = r4.w;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1807:0x3271, code lost:
        if (r5.key == null) goto L_0x3334;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1809:0x3275, code lost:
        if (r43 == 0) goto L_0x3280;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1810:0x3277, code lost:
        r19 = r4;
        r73 = r6;
        r25 = r14;
        r14 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1812:?, code lost:
        r7 = new org.telegram.tgnet.TLRPC.TL_inputEncryptedFile();
        r7.id = r5.id;
        r7.access_hash = r5.access_hash;
        r12.media.key = r5.key;
        r12.media.iv = r5.iv;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1813:0x329e, code lost:
        r3 = r93;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1816:0x32a2, code lost:
        r93 = r3;
        r19 = r4;
        r25 = r14;
        r14 = r5;
        r73 = r6;
        r18 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1818:?, code lost:
        getSecretChatHelper().performSendEncryptedRequest(r12, r3.messageOwner, r10, r7, (java.lang.String) null, r93);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1819:0x32bd, code lost:
        r2 = r89;
        r3 = r90;
        r4 = r93;
        r6 = r95;
        r5 = r35;
        r1 = r64;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1820:0x32cb, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1821:0x32cc, code lost:
        r18 = r89;
        r6 = r90;
        r7 = r93;
        r1 = r0;
        r5 = r8;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r25 = r35;
        r20 = r64;
        r15 = r72;
        r65 = r73;
        r12 = r95;
        r8 = r100;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1822:0x32ea, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1823:0x32eb, code lost:
        r73 = r6;
        r25 = r14;
        r14 = r5;
        r18 = r89;
        r6 = r90;
        r7 = r3;
        r1 = r0;
        r5 = r8;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r25 = r35;
        r20 = r64;
        r15 = r72;
        r65 = r73;
        r12 = r95;
        r8 = r100;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1824:0x3310, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1825:0x3311, code lost:
        r73 = r6;
        r25 = r14;
        r14 = r5;
        r18 = r89;
        r6 = r90;
        r7 = r93;
        r1 = r0;
        r5 = r8;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r25 = r35;
        r20 = r64;
        r15 = r72;
        r65 = r73;
        r12 = r95;
        r8 = r100;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1826:0x3334, code lost:
        r19 = r4;
        r73 = r6;
        r25 = r14;
        r14 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1827:0x333b, code lost:
        if (r64 != null) goto L_0x344e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1830:0x333f, code lost:
        r6 = r95;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1832:?, code lost:
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r11, r6);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1834:?, code lost:
        r1.encryptedChat = r10;
        r1.type = 1;
        r1.sendEncryptedRequest = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1835:0x334b, code lost:
        r5 = r35;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1837:?, code lost:
        r1.originalPath = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1838:0x334f, code lost:
        r4 = r93;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1840:?, code lost:
        r1.obj = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1841:0x3353, code lost:
        if (r8 == null) goto L_0x3383;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1842:0x3355, code lost:
        r2 = r42;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1845:0x335b, code lost:
        if (r8.containsKey(r2) == false) goto L_0x3383;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1846:0x335d, code lost:
        r1.parentObject = r8.get(r2);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1847:0x3363, code lost:
        r3 = r90;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1848:0x3366, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1849:0x3367, code lost:
        r18 = r89;
        r20 = r1;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r15 = r72;
        r65 = r73;
        r1 = r0;
        r25 = r5;
        r12 = r6;
        r5 = r8;
        r6 = r90;
        r8 = r100;
        r7 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1850:0x3383, code lost:
        r3 = r90;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1852:?, code lost:
        r1.parentObject = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1853:0x3387, code lost:
        r1.performMediaUpload = true;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1854:0x338a, code lost:
        if (r9 == 0) goto L_0x338e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1855:0x338c, code lost:
        r2 = true;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1856:0x338e, code lost:
        r2 = false;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1857:0x338f, code lost:
        r1.scheduled = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1858:0x3393, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1859:0x3394, code lost:
        r18 = r89;
        r20 = r1;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r15 = r72;
        r65 = r73;
        r1 = r0;
        r25 = r5;
        r12 = r6;
        r5 = r8;
        r8 = r100;
        r6 = r3;
        r7 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1860:0x33af, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1861:0x33b0, code lost:
        r18 = r89;
        r20 = r1;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r15 = r72;
        r65 = r73;
        r1 = r0;
        r25 = r5;
        r12 = r6;
        r5 = r8;
        r8 = r100;
        r6 = r90;
        r7 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1862:0x33cd, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1863:0x33ce, code lost:
        r18 = r89;
        r20 = r1;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r15 = r72;
        r65 = r73;
        r1 = r0;
        r25 = r5;
        r12 = r6;
        r5 = r8;
        r8 = r100;
        r6 = r90;
        r7 = r93;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1864:0x33ed, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1865:0x33ee, code lost:
        r18 = r89;
        r20 = r1;
        r5 = r8;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r25 = r35;
        r15 = r72;
        r65 = r73;
        r8 = r100;
        r1 = r0;
        r12 = r6;
        r6 = r90;
        r7 = r93;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1866:0x340d, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1867:0x340e, code lost:
        r18 = r89;
        r1 = r0;
        r5 = r8;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r25 = r35;
        r20 = r64;
        r15 = r72;
        r65 = r73;
        r8 = r100;
        r12 = r6;
        r6 = r90;
        r7 = r93;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1868:0x342d, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1869:0x342e, code lost:
        r18 = r89;
        r1 = r0;
        r6 = r90;
        r7 = r93;
        r5 = r8;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r25 = r35;
        r20 = r64;
        r15 = r72;
        r65 = r73;
        r12 = r95;
        r8 = r100;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1870:0x344e, code lost:
        r3 = r90;
        r4 = r93;
        r6 = r95;
        r5 = r35;
        r1 = r64;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1871:0x3458, code lost:
        r2 = r89;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1873:?, code lost:
        r1.videoEditedInfo = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1874:0x345e, code lost:
        if (r43 != 0) goto L_0x3463;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1875:0x3460, code lost:
        r11.performSendDelayedMessage(r1);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1876:0x3463, code lost:
        r18 = r2;
        r66 = r13;
        r49 = r14;
        r24 = r15;
        r31 = r53;
        r15 = r97;
        r14 = r5;
        r13 = r9;
        r5 = r3;
        r81 = r6;
        r7 = r4;
        r6 = r8;
        r4 = r73;
        r8 = r81;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1877:0x347c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1878:0x347d, code lost:
        r20 = r1;
        r18 = r2;
        r66 = r13;
        r49 = r14;
        r46 = r15;
        r14 = r25;
        r15 = r72;
        r65 = r73;
        r1 = r0;
        r25 = r5;
        r12 = r6;
        r5 = r8;
        r8 = r100;
        r6 = r3;
        r7 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:230:0x05e7, code lost:
        if (r103.isEmpty() != false) goto L_0x05e9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:480:0x0d4e, code lost:
        r3.attributes.remove(r7);
        r14 = new org.telegram.tgnet.TLRPC.TL_documentAttributeSticker_layer55();
        r3.attributes.add(r14);
        r14.alt = r9.alt;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:481:0x0d63, code lost:
        if (r9.stickerset == null) goto L_0x0e32;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:483:0x0d69, code lost:
        if ((r9.stickerset instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName) == false) goto L_0x0d72;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:485:?, code lost:
        r15 = r9.stickerset.short_name;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:486:0x0d6f, code lost:
        r43 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:488:?, code lost:
        r43 = r2;
        r15 = getMediaDataController().getStickerSetName(r9.stickerset.id);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:490:0x0d85, code lost:
        if (android.text.TextUtils.isEmpty(r15) != false) goto L_0x0dcb;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:492:?, code lost:
        r14.stickerset = new org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName();
        r14.stickerset.short_name = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:493:0x0d92, code lost:
        r2 = r84;
        r18 = r5;
        r5 = r95;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:494:0x0d9a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:495:0x0d9b, code lost:
        r11 = r84;
        r71 = r85;
        r46 = r86;
        r65 = r88;
        r18 = r89;
        r45 = r100;
        r6 = r109;
        r1 = r0;
        r49 = r3;
        r14 = r5;
        r53 = r8;
        r10 = r12;
        r7 = null;
        r66 = r21;
        r15 = r35;
        r30 = r38;
        r21 = r87;
        r12 = r95;
        r8 = r108;
        r5 = r4;
        r81 = r32;
        r32 = r93;
        r33 = r26;
        r26 = r81;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:498:0x0dcf, code lost:
        if ((r9.stickerset instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetID) == false) goto L_0x0e1c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:500:0x0dd3, code lost:
        r2 = r84;
        r18 = r5;
        r5 = r95;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:502:?, code lost:
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r2, r5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:504:?, code lost:
        r1.encryptedChat = r12;
        r1.locationParent = r14;
        r1.type = 5;
        r1.parentObject = r9.stickerset;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:505:0x0de7, code lost:
        r20 = r1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:506:0x0dea, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:507:0x0deb, code lost:
        r71 = r85;
        r46 = r86;
        r65 = r88;
        r49 = r91;
        r45 = r100;
        r20 = r1;
        r11 = r2;
        r53 = r8;
        r10 = r12;
        r14 = r18;
        r7 = null;
        r66 = r21;
        r15 = r35;
        r30 = r38;
        r21 = r87;
        r18 = r89;
        r8 = r108;
        r1 = r0;
        r12 = r5;
        r6 = r109;
        r5 = r4;
        r81 = r32;
        r32 = r93;
        r33 = r26;
        r26 = r81;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:508:0x0e1c, code lost:
        r2 = r84;
        r18 = r5;
        r5 = r95;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:510:?, code lost:
        r14.stickerset = new org.telegram.tgnet.TLRPC.TL_inputStickerSetEmpty();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:511:0x0e29, code lost:
        r7 = r86;
        r1 = r4;
        r9 = r18;
        r4 = r100;
        r21 = r21;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:512:0x0e32, code lost:
        r43 = r2;
        r18 = r5;
        r2 = r84;
        r5 = r95;
        r14.stickerset = new org.telegram.tgnet.TLRPC.TL_inputStickerSetEmpty();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:513:0x0e43, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:514:0x0e44, code lost:
        r71 = r85;
        r46 = r86;
        r65 = r88;
        r49 = r91;
        r45 = r100;
        r1 = r0;
        r11 = r2;
        r53 = r8;
        r10 = r12;
        r14 = r18;
        r7 = null;
        r66 = r21;
        r15 = r35;
        r30 = r38;
        r21 = r87;
        r18 = r89;
        r8 = r108;
        r12 = r5;
        r6 = r109;
        r5 = r4;
        r81 = r32;
        r32 = r93;
        r33 = r26;
        r26 = r81;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:790:0x155f, code lost:
        if (org.telegram.messenger.MessageObject.isRoundVideoMessage(r8) != false) goto L_0x158b;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:1026:0x1b6e A[SYNTHETIC, Splitter:B:1026:0x1b6e] */
    /* JADX WARNING: Removed duplicated region for block: B:1032:0x1b94 A[SYNTHETIC, Splitter:B:1032:0x1b94] */
    /* JADX WARNING: Removed duplicated region for block: B:1042:0x1bcd  */
    /* JADX WARNING: Removed duplicated region for block: B:1045:0x1bd6  */
    /* JADX WARNING: Removed duplicated region for block: B:1046:0x1bd9  */
    /* JADX WARNING: Removed duplicated region for block: B:1055:0x1c7a A[Catch:{ Exception -> 0x1d10 }] */
    /* JADX WARNING: Removed duplicated region for block: B:1112:0x1df0  */
    /* JADX WARNING: Removed duplicated region for block: B:1117:0x1e21  */
    /* JADX WARNING: Removed duplicated region for block: B:1119:0x1e25  */
    /* JADX WARNING: Removed duplicated region for block: B:1140:0x1ef9  */
    /* JADX WARNING: Removed duplicated region for block: B:1144:0x1var_ A[Catch:{ Exception -> 0x20fb }] */
    /* JADX WARNING: Removed duplicated region for block: B:1145:0x1f0b A[Catch:{ Exception -> 0x20fb }] */
    /* JADX WARNING: Removed duplicated region for block: B:1156:0x1var_ A[SYNTHETIC, Splitter:B:1156:0x1var_] */
    /* JADX WARNING: Removed duplicated region for block: B:1193:0x2085  */
    /* JADX WARNING: Removed duplicated region for block: B:1197:0x20a7 A[Catch:{ Exception -> 0x20dc }] */
    /* JADX WARNING: Removed duplicated region for block: B:1200:0x20bb A[Catch:{ Exception -> 0x20dc }] */
    /* JADX WARNING: Removed duplicated region for block: B:1388:0x268e  */
    /* JADX WARNING: Removed duplicated region for block: B:1392:0x2694 A[SYNTHETIC, Splitter:B:1392:0x2694] */
    /* JADX WARNING: Removed duplicated region for block: B:1403:0x26da A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:1694:0x2var_  */
    /* JADX WARNING: Removed duplicated region for block: B:1800:0x3240 A[SYNTHETIC, Splitter:B:1800:0x3240] */
    /* JADX WARNING: Removed duplicated region for block: B:190:0x04d7  */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x055b  */
    /* JADX WARNING: Removed duplicated region for block: B:2051:0x39b0 A[Catch:{ Exception -> 0x3a52 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2052:0x39b2 A[Catch:{ Exception -> 0x3a52 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2143:0x3c8c A[Catch:{ Exception -> 0x3d0a }] */
    /* JADX WARNING: Removed duplicated region for block: B:2144:0x3c8e A[Catch:{ Exception -> 0x3d0a }] */
    /* JADX WARNING: Removed duplicated region for block: B:2168:0x3d40 A[SYNTHETIC, Splitter:B:2168:0x3d40] */
    /* JADX WARNING: Removed duplicated region for block: B:2176:0x3d68 A[SYNTHETIC, Splitter:B:2176:0x3d68] */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0079  */
    /* JADX WARNING: Removed duplicated region for block: B:2201:0x3e11 A[Catch:{ Exception -> 0x3e30 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2203:0x3e1f A[Catch:{ Exception -> 0x3e30 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2227:0x3f7c  */
    /* JADX WARNING: Removed duplicated region for block: B:2229:0x3fa7 A[SYNTHETIC, Splitter:B:2229:0x3fa7] */
    /* JADX WARNING: Removed duplicated region for block: B:2284:0x40f7  */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x0082  */
    /* JADX WARNING: Removed duplicated region for block: B:2329:0x41d6 A[Catch:{ Exception -> 0x4203 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2378:0x45d4  */
    /* JADX WARNING: Removed duplicated region for block: B:2379:0x45d6  */
    /* JADX WARNING: Removed duplicated region for block: B:2382:0x45dc  */
    /* JADX WARNING: Removed duplicated region for block: B:240:0x0650 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:241:0x0658 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:245:0x066b A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:246:0x0670 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0093  */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x00e0  */
    /* JADX WARNING: Removed duplicated region for block: B:316:0x08c6 A[Catch:{ Exception -> 0x0867 }] */
    /* JADX WARNING: Removed duplicated region for block: B:319:0x08d3 A[Catch:{ Exception -> 0x0867 }] */
    /* JADX WARNING: Removed duplicated region for block: B:446:0x0cbe A[SYNTHETIC, Splitter:B:446:0x0cbe] */
    /* JADX WARNING: Removed duplicated region for block: B:461:0x0ce2 A[Catch:{ Exception -> 0x0ced }] */
    /* JADX WARNING: Removed duplicated region for block: B:464:0x0d1d A[SYNTHETIC, Splitter:B:464:0x0d1d] */
    /* JADX WARNING: Removed duplicated region for block: B:467:0x0d21 A[Catch:{ Exception -> 0x0ea3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0141  */
    /* JADX WARNING: Removed duplicated region for block: B:517:0x0e92  */
    /* JADX WARNING: Removed duplicated region for block: B:588:0x10ed  */
    /* JADX WARNING: Removed duplicated region for block: B:605:0x11a3  */
    /* JADX WARNING: Removed duplicated region for block: B:614:0x11b4 A[SYNTHETIC, Splitter:B:614:0x11b4] */
    /* JADX WARNING: Removed duplicated region for block: B:620:0x11e9 A[SYNTHETIC, Splitter:B:620:0x11e9] */
    /* JADX WARNING: Removed duplicated region for block: B:635:0x1227 A[SYNTHETIC, Splitter:B:635:0x1227] */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x018d  */
    /* JADX WARNING: Removed duplicated region for block: B:641:0x1235  */
    /* JADX WARNING: Removed duplicated region for block: B:642:0x1237 A[SYNTHETIC, Splitter:B:642:0x1237] */
    /* JADX WARNING: Removed duplicated region for block: B:646:0x1245 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:659:0x127f  */
    /* JADX WARNING: Removed duplicated region for block: B:665:0x1292 A[SYNTHETIC, Splitter:B:665:0x1292] */
    /* JADX WARNING: Removed duplicated region for block: B:694:0x1393  */
    /* JADX WARNING: Removed duplicated region for block: B:697:0x13a0 A[SYNTHETIC, Splitter:B:697:0x13a0] */
    /* JADX WARNING: Removed duplicated region for block: B:704:0x13ed A[Catch:{ Exception -> 0x13fe }] */
    /* JADX WARNING: Removed duplicated region for block: B:714:0x142d A[SYNTHETIC, Splitter:B:714:0x142d] */
    /* JADX WARNING: Removed duplicated region for block: B:727:0x1467  */
    /* JADX WARNING: Removed duplicated region for block: B:788:0x155b A[SYNTHETIC, Splitter:B:788:0x155b] */
    /* JADX WARNING: Removed duplicated region for block: B:798:0x1592 A[SYNTHETIC, Splitter:B:798:0x1592] */
    /* JADX WARNING: Removed duplicated region for block: B:805:0x159e  */
    /* JADX WARNING: Removed duplicated region for block: B:816:0x15d9  */
    /* JADX WARNING: Removed duplicated region for block: B:826:0x1619 A[Catch:{ Exception -> 0x4349 }] */
    /* JADX WARNING: Removed duplicated region for block: B:827:0x161b A[Catch:{ Exception -> 0x4349 }] */
    /* JADX WARNING: Removed duplicated region for block: B:830:0x1624 A[SYNTHETIC, Splitter:B:830:0x1624] */
    /* JADX WARNING: Removed duplicated region for block: B:843:0x1662  */
    /* JADX WARNING: Removed duplicated region for block: B:847:0x1667 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:854:0x1675 A[SYNTHETIC, Splitter:B:854:0x1675] */
    /* JADX WARNING: Removed duplicated region for block: B:878:0x1728  */
    /* JADX WARNING: Removed duplicated region for block: B:906:0x17cc  */
    /* JADX WARNING: Removed duplicated region for block: B:912:0x185f  */
    /* JADX WARNING: Removed duplicated region for block: B:915:0x1866  */
    /* JADX WARNING: Removed duplicated region for block: B:968:0x19b7 A[SYNTHETIC, Splitter:B:968:0x19b7] */
    /* JADX WARNING: Removed duplicated region for block: B:975:0x19f4 A[SYNTHETIC, Splitter:B:975:0x19f4] */
    /* JADX WARNING: Removed duplicated region for block: B:977:0x1a02 A[SYNTHETIC, Splitter:B:977:0x1a02] */
    /* JADX WARNING: Removed duplicated region for block: B:989:0x1a2f  */
    /* JADX WARNING: Removed duplicated region for block: B:990:0x1a31  */
    /* JADX WARNING: Unknown variable types count: 1 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void sendMessage(java.lang.String r85, java.lang.String r86, org.telegram.tgnet.TLRPC.MessageMedia r87, org.telegram.tgnet.TLRPC.TL_photo r88, org.telegram.messenger.VideoEditedInfo r89, org.telegram.tgnet.TLRPC.User r90, org.telegram.tgnet.TLRPC.TL_document r91, org.telegram.tgnet.TLRPC.TL_game r92, org.telegram.tgnet.TLRPC.TL_messageMediaPoll r93, org.telegram.tgnet.TLRPC.TL_messageMediaInvoice r94, long r95, java.lang.String r97, org.telegram.messenger.MessageObject r98, org.telegram.messenger.MessageObject r99, org.telegram.tgnet.TLRPC.WebPage r100, boolean r101, org.telegram.messenger.MessageObject r102, java.util.ArrayList<org.telegram.tgnet.TLRPC.MessageEntity> r103, org.telegram.tgnet.TLRPC.ReplyMarkup r104, java.util.HashMap<java.lang.String, java.lang.String> r105, boolean r106, int r107, int r108, java.lang.Object r109, org.telegram.messenger.MessageObject.SendAnimationData r110) {
        /*
            r84 = this;
            r11 = r84
            r1 = r85
            r2 = r87
            r3 = r88
            r4 = r90
            r5 = r91
            r12 = r92
            r6 = r93
            r13 = r94
            r14 = r95
            r10 = r97
            r9 = r98
            r8 = r99
            r7 = r100
            r8 = r102
            r9 = r103
            r5 = r105
            r13 = r107
            r12 = r108
            if (r4 == 0) goto L_0x002d
            java.lang.String r10 = r4.phone
            if (r10 != 0) goto L_0x002d
            return
        L_0x002d:
            r16 = 0
            int r10 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r10 != 0) goto L_0x0034
            return
        L_0x0034:
            if (r1 != 0) goto L_0x003b
            if (r86 != 0) goto L_0x003b
            java.lang.String r10 = ""
            goto L_0x003d
        L_0x003b:
            r10 = r86
        L_0x003d:
            r18 = 0
            if (r5 == 0) goto L_0x0058
            r86 = r10
            java.lang.String r10 = "originalPath"
            boolean r10 = r5.containsKey(r10)
            if (r10 == 0) goto L_0x005a
            java.lang.String r10 = "originalPath"
            java.lang.Object r10 = r5.get(r10)
            r18 = r10
            java.lang.String r18 = (java.lang.String) r18
            r10 = r18
            goto L_0x005c
        L_0x0058:
            r86 = r10
        L_0x005a:
            r10 = r18
        L_0x005c:
            r18 = 0
            r19 = 0
            r20 = 0
            r21 = -1
            r22 = 0
            r23 = 0
            r24 = 0
            r25 = r10
            r10 = 0
            r26 = 0
            r28 = 0
            boolean r29 = org.telegram.messenger.DialogObject.isEncryptedDialog(r95)
            r30 = r10
            if (r29 != 0) goto L_0x0082
            org.telegram.messenger.MessagesController r10 = r84.getMessagesController()
            org.telegram.tgnet.TLRPC$InputPeer r10 = r10.getInputPeer((long) r14)
            goto L_0x0083
        L_0x0082:
            r10 = 0
        L_0x0083:
            org.telegram.messenger.UserConfig r31 = r84.getUserConfig()
            long r3 = r31.getClientUserId()
            boolean r31 = org.telegram.messenger.DialogObject.isEncryptedDialog(r95)
            r32 = r3
            if (r31 == 0) goto L_0x00e0
            org.telegram.messenger.MessagesController r3 = r84.getMessagesController()
            int r35 = org.telegram.messenger.DialogObject.getEncryptedChatId(r95)
            java.lang.Integer r4 = java.lang.Integer.valueOf(r35)
            org.telegram.tgnet.TLRPC$EncryptedChat r28 = r3.getEncryptedChat(r4)
            if (r28 != 0) goto L_0x00d7
            if (r8 == 0) goto L_0x00d6
            org.telegram.messenger.MessagesStorage r3 = r84.getMessagesStorage()
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner
            boolean r12 = r8.scheduled
            r3.markMessageAsSendError(r4, r12)
            org.telegram.tgnet.TLRPC$Message r3 = r8.messageOwner
            r4 = 2
            r3.send_state = r4
            org.telegram.messenger.NotificationCenter r3 = r84.getNotificationCenter()
            int r4 = org.telegram.messenger.NotificationCenter.messageSendError
            r12 = 1
            java.lang.Object[] r12 = new java.lang.Object[r12]
            int r16 = r102.getId()
            java.lang.Integer r16 = java.lang.Integer.valueOf(r16)
            r17 = 0
            r12[r17] = r16
            r3.postNotificationName(r4, r12)
            int r3 = r102.getId()
            r11.processSentMessage(r3)
        L_0x00d6:
            return
        L_0x00d7:
            r35 = r10
            r11 = r24
            r9 = r26
            r12 = r28
            goto L_0x0131
        L_0x00e0:
            boolean r3 = r10 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel
            if (r3 == 0) goto L_0x0129
            org.telegram.messenger.MessagesController r3 = r84.getMessagesController()
            long r11 = r10.channel_id
            java.lang.Long r4 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r3 = r3.getChat(r4)
            org.telegram.messenger.MessagesController r4 = r84.getMessagesController()
            long r11 = r3.id
            org.telegram.tgnet.TLRPC$ChatFull r4 = r4.getChatFull(r11)
            if (r3 == 0) goto L_0x0104
            boolean r11 = r3.megagroup
            if (r11 != 0) goto L_0x0104
            r11 = 1
            goto L_0x0105
        L_0x0104:
            r11 = 0
        L_0x0105:
            r22 = r11
            if (r22 == 0) goto L_0x0113
            boolean r11 = r3.has_link
            if (r11 == 0) goto L_0x0113
            if (r4 == 0) goto L_0x0113
            long r11 = r4.linked_chat_id
            r26 = r11
        L_0x0113:
            org.telegram.messenger.MessagesController r11 = r84.getMessagesController()
            r35 = r10
            r12 = 1
            long r9 = org.telegram.messenger.ChatObject.getSendAsPeerId(r3, r4, r12)
            org.telegram.tgnet.TLRPC$Peer r24 = r11.getPeer(r9)
            r11 = r24
            r9 = r26
            r12 = r28
            goto L_0x0131
        L_0x0129:
            r35 = r10
            r11 = r24
            r9 = r26
            r12 = r28
        L_0x0131:
            java.lang.String r4 = "fwd_id"
            java.lang.String r3 = "http"
            r26 = r9
            java.lang.String r9 = "parentObject"
            java.lang.String r10 = "query_id"
            r38 = r11
            java.lang.String r11 = ""
            if (r8 == 0) goto L_0x055b
            r40 = r3
            org.telegram.tgnet.TLRPC$Message r3 = r8.messageOwner     // Catch:{ Exception -> 0x052b }
            if (r109 != 0) goto L_0x0185
            if (r5 == 0) goto L_0x0185
            boolean r18 = r5.containsKey(r9)     // Catch:{ Exception -> 0x0154 }
            if (r18 == 0) goto L_0x0185
            java.lang.Object r18 = r5.get(r9)     // Catch:{ Exception -> 0x0154 }
            goto L_0x0187
        L_0x0154:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r8 = r108
            r71 = r1
            r45 = r7
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r1 = r0
            r21 = r2
            r14 = r3
            r81 = r6
            r6 = r109
            r82 = r32
            r32 = r81
            r33 = r26
            r26 = r82
            goto L_0x45cb
        L_0x0185:
            r18 = r109
        L_0x0187:
            boolean r41 = r102.isForwarded()     // Catch:{ Exception -> 0x04fc }
            if (r41 != 0) goto L_0x04d7
            if (r5 == 0) goto L_0x01cc
            boolean r41 = r5.containsKey(r4)     // Catch:{ Exception -> 0x019b }
            if (r41 == 0) goto L_0x01cc
            r41 = r4
            r42 = r9
            goto L_0x04db
        L_0x019b:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r8 = r108
            r71 = r1
            r45 = r7
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r1 = r0
            r21 = r2
            r14 = r3
            r81 = r18
            r18 = r89
            r82 = r32
            r32 = r6
            r6 = r81
            r33 = r26
            r26 = r82
            goto L_0x45cb
        L_0x01cc:
            boolean r41 = r102.isDice()     // Catch:{ Exception -> 0x04fc }
            if (r41 == 0) goto L_0x01ed
            r21 = 11
            java.lang.String r41 = r102.getDiceEmoji()     // Catch:{ Exception -> 0x019b }
            r1 = r41
            r41 = r11
            r7 = r91
            r42 = r9
            r43 = r21
            r21 = r41
            r41 = r4
            r9 = r6
            r4 = r88
            r6 = r90
            goto L_0x041f
        L_0x01ed:
            r41 = r4
            int r4 = r8.type     // Catch:{ Exception -> 0x04fc }
            if (r4 == 0) goto L_0x0401
            boolean r4 = r102.isAnimatedEmoji()     // Catch:{ Exception -> 0x04fc }
            if (r4 == 0) goto L_0x01fd
            r42 = r9
            goto L_0x0403
        L_0x01fd:
            int r4 = r8.type     // Catch:{ Exception -> 0x04fc }
            r42 = r9
            r9 = 4
            if (r4 != r9) goto L_0x0216
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r3.media     // Catch:{ Exception -> 0x019b }
            r2 = r4
            r21 = 1
            r4 = r88
            r7 = r91
            r9 = r6
            r43 = r21
            r21 = r86
            r6 = r90
            goto L_0x041f
        L_0x0216:
            int r4 = r8.type     // Catch:{ Exception -> 0x04fc }
            r9 = 1
            if (r4 != r9) goto L_0x026c
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r3.media     // Catch:{ Exception -> 0x019b }
            org.telegram.tgnet.TLRPC$Photo r4 = r4.photo     // Catch:{ Exception -> 0x019b }
            org.telegram.tgnet.TLRPC$TL_photo r4 = (org.telegram.tgnet.TLRPC.TL_photo) r4     // Catch:{ Exception -> 0x019b }
            org.telegram.tgnet.TLRPC$Message r9 = r8.messageOwner     // Catch:{ Exception -> 0x023b }
            java.lang.String r9 = r9.message     // Catch:{ Exception -> 0x023b }
            if (r9 == 0) goto L_0x022c
            org.telegram.tgnet.TLRPC$Message r9 = r8.messageOwner     // Catch:{ Exception -> 0x023b }
            java.lang.String r9 = r9.message     // Catch:{ Exception -> 0x023b }
            goto L_0x022e
        L_0x022c:
            r9 = r86
        L_0x022e:
            r21 = 2
            r7 = r91
            r43 = r21
            r21 = r9
            r9 = r6
            r6 = r90
            goto L_0x041f
        L_0x023b:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r53 = r90
            r49 = r91
            r8 = r108
            r71 = r1
            r65 = r4
            r45 = r7
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r1 = r0
            r21 = r2
            r14 = r3
            r81 = r18
            r18 = r89
            r82 = r32
            r32 = r6
            r6 = r81
            r33 = r26
            r26 = r82
            goto L_0x45cb
        L_0x026c:
            int r4 = r8.type     // Catch:{ Exception -> 0x04fc }
            r9 = 3
            if (r4 == r9) goto L_0x03a3
            int r4 = r8.type     // Catch:{ Exception -> 0x04fc }
            r9 = 5
            if (r4 == r9) goto L_0x03a3
            org.telegram.messenger.VideoEditedInfo r4 = r8.videoEditedInfo     // Catch:{ Exception -> 0x04fc }
            if (r4 == 0) goto L_0x027c
            goto L_0x03a3
        L_0x027c:
            int r4 = r8.type     // Catch:{ Exception -> 0x04fc }
            r9 = 12
            if (r4 != r9) goto L_0x02f3
            org.telegram.tgnet.TLRPC$TL_userRequest_old2 r4 = new org.telegram.tgnet.TLRPC$TL_userRequest_old2     // Catch:{ Exception -> 0x04fc }
            r4.<init>()     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r3.media     // Catch:{ Exception -> 0x02c4 }
            java.lang.String r9 = r9.phone_number     // Catch:{ Exception -> 0x02c4 }
            r4.phone = r9     // Catch:{ Exception -> 0x02c4 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r3.media     // Catch:{ Exception -> 0x02c4 }
            java.lang.String r9 = r9.first_name     // Catch:{ Exception -> 0x02c4 }
            r4.first_name = r9     // Catch:{ Exception -> 0x02c4 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r3.media     // Catch:{ Exception -> 0x02c4 }
            java.lang.String r9 = r9.last_name     // Catch:{ Exception -> 0x02c4 }
            r4.last_name = r9     // Catch:{ Exception -> 0x02c4 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r9 = new org.telegram.tgnet.TLRPC$TL_restrictionReason     // Catch:{ Exception -> 0x02c4 }
            r9.<init>()     // Catch:{ Exception -> 0x02c4 }
            r9.platform = r11     // Catch:{ Exception -> 0x02c4 }
            r9.reason = r11     // Catch:{ Exception -> 0x02c4 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x02c4 }
            java.lang.String r2 = r2.vcard     // Catch:{ Exception -> 0x02c4 }
            r9.text = r2     // Catch:{ Exception -> 0x02c4 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r2 = r4.restriction_reason     // Catch:{ Exception -> 0x02c4 }
            r2.add(r9)     // Catch:{ Exception -> 0x02c4 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x02c4 }
            long r6 = r2.user_id     // Catch:{ Exception -> 0x02c4 }
            r4.id = r6     // Catch:{ Exception -> 0x02c4 }
            r21 = 6
            r2 = r87
            r7 = r91
            r9 = r93
            r6 = r4
            r43 = r21
            r21 = r86
            r4 = r88
            goto L_0x041f
        L_0x02c4:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r49 = r91
            r45 = r100
            r8 = r108
            r71 = r1
            r53 = r4
            r10 = r12
            r12 = r14
            r6 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
            r14 = r3
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x02f3:
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 8
            if (r2 == r4) goto L_0x0373
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 9
            if (r2 == r4) goto L_0x0373
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 13
            if (r2 == r4) goto L_0x0373
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 14
            if (r2 == r4) goto L_0x0373
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 15
            if (r2 != r4) goto L_0x0313
            goto L_0x0373
        L_0x0313:
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 2
            if (r2 != r4) goto L_0x0348
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2     // Catch:{ Exception -> 0x04fc }
            r21 = 8
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03d2 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03d2 }
            if (r4 == 0) goto L_0x0339
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03d2 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03d2 }
            r6 = r90
            r9 = r93
            r7 = r2
            r43 = r21
            r2 = r87
            r21 = r4
            r4 = r88
            goto L_0x041f
        L_0x0339:
            r4 = r88
            r6 = r90
            r9 = r93
            r7 = r2
            r43 = r21
            r21 = r86
            r2 = r87
            goto L_0x041f
        L_0x0348:
            int r2 = r8.type     // Catch:{ Exception -> 0x04fc }
            r4 = 17
            if (r2 != r4) goto L_0x0363
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x04fc }
            r21 = 10
            r4 = r88
            r6 = r90
            r7 = r91
            r9 = r2
            r43 = r21
            r21 = r86
            r2 = r87
            goto L_0x041f
        L_0x0363:
            r2 = r87
            r4 = r88
            r6 = r90
            r7 = r91
            r9 = r93
            r43 = r21
            r21 = r86
            goto L_0x041f
        L_0x0373:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2     // Catch:{ Exception -> 0x04fc }
            r21 = 7
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03d2 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03d2 }
            if (r4 == 0) goto L_0x0394
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03d2 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03d2 }
            r6 = r90
            r9 = r93
            r7 = r2
            r43 = r21
            r2 = r87
            r21 = r4
            r4 = r88
            goto L_0x041f
        L_0x0394:
            r4 = r88
            r6 = r90
            r9 = r93
            r7 = r2
            r43 = r21
            r21 = r86
            r2 = r87
            goto L_0x041f
        L_0x03a3:
            r21 = 3
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03d2 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03d2 }
            if (r4 == 0) goto L_0x03c4
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03d2 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03d2 }
            r6 = r90
            r9 = r93
            r7 = r2
            r43 = r21
            r2 = r87
            r21 = r4
            r4 = r88
            goto L_0x041f
        L_0x03c4:
            r4 = r88
            r6 = r90
            r9 = r93
            r7 = r2
            r43 = r21
            r21 = r86
            r2 = r87
            goto L_0x041f
        L_0x03d2:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r45 = r100
            r8 = r108
            r71 = r1
            r49 = r2
            r10 = r12
            r12 = r14
            r6 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
            r14 = r3
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0401:
            r42 = r9
        L_0x0403:
            org.telegram.tgnet.TLRPC$Message r2 = r8.messageOwner     // Catch:{ Exception -> 0x04fc }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media     // Catch:{ Exception -> 0x04fc }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGame     // Catch:{ Exception -> 0x04fc }
            if (r2 == 0) goto L_0x040c
            goto L_0x040f
        L_0x040c:
            java.lang.String r2 = r3.message     // Catch:{ Exception -> 0x04fc }
            r1 = r2
        L_0x040f:
            r21 = 0
            r2 = r87
            r4 = r88
            r6 = r90
            r7 = r91
            r9 = r93
            r43 = r21
            r21 = r86
        L_0x041f:
            if (r5 == 0) goto L_0x0459
            boolean r44 = r5.containsKey(r10)     // Catch:{ Exception -> 0x042a }
            if (r44 == 0) goto L_0x0459
            r43 = 9
            goto L_0x0459
        L_0x042a:
            r0 = move-exception
            r11 = r84
            r45 = r100
            r8 = r108
            r71 = r1
            r65 = r4
            r53 = r6
            r49 = r7
            r10 = r12
            r12 = r14
            r6 = r18
            r7 = r19
            r46 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r66 = r43
            r18 = r89
            r1 = r0
            r21 = r2
            r14 = r3
            r81 = r32
            r32 = r9
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0459:
            r85 = r1
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r3.media     // Catch:{ Exception -> 0x04a8 }
            int r1 = r1.ttl_seconds     // Catch:{ Exception -> 0x04a8 }
            if (r1 <= 0) goto L_0x0486
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r3.media     // Catch:{ Exception -> 0x04a8 }
            int r1 = r1.ttl_seconds     // Catch:{ Exception -> 0x04a8 }
            r45 = r100
            r86 = r2
            r8 = r3
            r87 = r4
            r13 = r5
            r3 = r6
            r46 = r21
            r4 = r32
            r6 = r35
            r2 = r84
            r32 = r10
            r10 = r1
            r1 = r7
            r7 = r43
            r81 = r9
            r9 = r85
            r85 = r18
            r18 = r81
            goto L_0x10e7
        L_0x0486:
            r45 = r100
            r86 = r2
            r8 = r3
            r87 = r4
            r13 = r5
            r3 = r6
            r1 = r7
            r46 = r21
            r4 = r32
            r6 = r35
            r7 = r43
            r2 = r84
            r32 = r10
            r10 = r108
            r81 = r9
            r9 = r85
            r85 = r18
            r18 = r81
            goto L_0x10e7
        L_0x04a8:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r45 = r100
            r8 = r108
            r1 = r0
            r65 = r4
            r53 = r6
            r49 = r7
            r10 = r12
            r12 = r14
            r6 = r18
            r7 = r19
            r46 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r66 = r43
            r18 = r89
            r21 = r2
            r14 = r3
            r81 = r32
            r32 = r9
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x04d7:
            r41 = r4
            r42 = r9
        L_0x04db:
            r2 = 4
            r46 = r86
            r86 = r87
            r87 = r88
            r45 = r100
            r9 = r1
            r7 = r2
            r8 = r3
            r13 = r5
            r85 = r18
            r4 = r32
            r6 = r35
            r2 = r84
            r3 = r90
            r1 = r91
            r18 = r93
            r32 = r10
            r10 = r108
            goto L_0x10e7
        L_0x04fc:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r45 = r100
            r8 = r108
            r71 = r1
            r10 = r12
            r12 = r14
            r6 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
            r14 = r3
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x052b:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r45 = r100
            r8 = r108
            r6 = r109
            r71 = r1
            r10 = r12
            r12 = r14
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x055b:
            r40 = r3
            r41 = r4
            r42 = r9
            r2 = 1
            boolean r3 = org.telegram.messenger.DialogObject.isChatDialog(r95)     // Catch:{ Exception -> 0x459a }
            if (r3 == 0) goto L_0x057a
            org.telegram.messenger.MessagesController r3 = r84.getMessagesController()     // Catch:{ Exception -> 0x052b }
            long r6 = -r14
            java.lang.Long r4 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x052b }
            org.telegram.tgnet.TLRPC$Chat r3 = r3.getChat(r4)     // Catch:{ Exception -> 0x052b }
            boolean r4 = org.telegram.messenger.ChatObject.canSendStickers(r3)     // Catch:{ Exception -> 0x052b }
            r2 = r4
        L_0x057a:
            if (r1 == 0) goto L_0x06e7
            if (r12 == 0) goto L_0x0584
            org.telegram.tgnet.TLRPC$TL_message_secret r3 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x052b }
            r3.<init>()     // Catch:{ Exception -> 0x052b }
            goto L_0x0589
        L_0x0584:
            org.telegram.tgnet.TLRPC$TL_message r3 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x06b3 }
            r3.<init>()     // Catch:{ Exception -> 0x06b3 }
        L_0x0589:
            if (r12 == 0) goto L_0x05d1
            r4 = r100
            boolean r6 = r4 instanceof org.telegram.tgnet.TLRPC.TL_webPagePending     // Catch:{ Exception -> 0x05a2 }
            if (r6 == 0) goto L_0x05d3
            java.lang.String r6 = r4.url     // Catch:{ Exception -> 0x05a2 }
            if (r6 == 0) goto L_0x05a0
            org.telegram.tgnet.TLRPC$TL_webPageUrlPending r6 = new org.telegram.tgnet.TLRPC$TL_webPageUrlPending     // Catch:{ Exception -> 0x05a2 }
            r6.<init>()     // Catch:{ Exception -> 0x05a2 }
            java.lang.String r7 = r4.url     // Catch:{ Exception -> 0x05a2 }
            r6.url = r7     // Catch:{ Exception -> 0x05a2 }
            r4 = r6
            goto L_0x05d3
        L_0x05a0:
            r4 = 0
            goto L_0x05d3
        L_0x05a2:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r1 = r0
            r14 = r3
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x05d1:
            r4 = r100
        L_0x05d3:
            if (r2 == 0) goto L_0x064c
            int r6 = r85.length()     // Catch:{ Exception -> 0x061b }
            r7 = 30
            if (r6 >= r7) goto L_0x064c
            if (r4 != 0) goto L_0x064c
            r6 = r103
            if (r6 == 0) goto L_0x05e9
            boolean r7 = r103.isEmpty()     // Catch:{ Exception -> 0x0684 }
            if (r7 == 0) goto L_0x064e
        L_0x05e9:
            org.telegram.messenger.MessagesController r7 = r84.getMessagesController()     // Catch:{ Exception -> 0x0684 }
            java.util.HashSet<java.lang.String> r7 = r7.diceEmojies     // Catch:{ Exception -> 0x0684 }
            java.lang.String r9 = "️"
            java.lang.String r9 = r1.replace(r9, r11)     // Catch:{ Exception -> 0x0684 }
            boolean r7 = r7.contains(r9)     // Catch:{ Exception -> 0x0684 }
            if (r7 == 0) goto L_0x064e
            if (r12 != 0) goto L_0x064e
            if (r13 != 0) goto L_0x064e
            org.telegram.tgnet.TLRPC$TL_messageMediaDice r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaDice     // Catch:{ Exception -> 0x0684 }
            r7.<init>()     // Catch:{ Exception -> 0x0684 }
            r7.emoticon = r1     // Catch:{ Exception -> 0x0684 }
            r9 = -1
            r7.value = r9     // Catch:{ Exception -> 0x0684 }
            r3.media = r7     // Catch:{ Exception -> 0x0684 }
            r21 = 11
            r7 = r11
            r8 = r90
            r13 = r97
            r43 = r2
            r9 = r3
            r1 = r5
            r5 = r14
            r2 = r84
            goto L_0x0f4a
        L_0x061b:
            r0 = move-exception
            r6 = r103
            r11 = r84
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r1 = r0
            r14 = r3
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x064c:
            r6 = r103
        L_0x064e:
            if (r4 != 0) goto L_0x0658
            org.telegram.tgnet.TLRPC$TL_messageMediaEmpty r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaEmpty     // Catch:{ Exception -> 0x0684 }
            r7.<init>()     // Catch:{ Exception -> 0x0684 }
            r3.media = r7     // Catch:{ Exception -> 0x0684 }
            goto L_0x0663
        L_0x0658:
            org.telegram.tgnet.TLRPC$TL_messageMediaWebPage r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0684 }
            r7.<init>()     // Catch:{ Exception -> 0x0684 }
            r3.media = r7     // Catch:{ Exception -> 0x0684 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r3.media     // Catch:{ Exception -> 0x0684 }
            r7.webpage = r4     // Catch:{ Exception -> 0x0684 }
        L_0x0663:
            if (r5 == 0) goto L_0x0670
            boolean r7 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0684 }
            if (r7 == 0) goto L_0x0670
            r7 = 9
            r21 = r7
            goto L_0x0673
        L_0x0670:
            r7 = 0
            r21 = r7
        L_0x0673:
            r3.message = r1     // Catch:{ Exception -> 0x0684 }
            r7 = r86
            r8 = r90
            r13 = r97
            r43 = r2
            r9 = r3
            r1 = r5
            r5 = r14
            r2 = r84
            goto L_0x0f4a
        L_0x0684:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r1 = r0
            r14 = r3
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x06b3:
            r0 = move-exception
            r4 = r100
            r6 = r103
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x06e7:
            r4 = r100
            r6 = r103
            r3 = r93
            if (r3 == 0) goto L_0x076e
            if (r12 == 0) goto L_0x06f7
            org.telegram.tgnet.TLRPC$TL_message_secret r7 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x073e }
            r7.<init>()     // Catch:{ Exception -> 0x073e }
            goto L_0x06fc
        L_0x06f7:
            org.telegram.tgnet.TLRPC$TL_message r7 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x073e }
            r7.<init>()     // Catch:{ Exception -> 0x073e }
        L_0x06fc:
            r7.media = r3     // Catch:{ Exception -> 0x070f }
            r21 = 10
            r8 = r90
            r13 = r97
            r43 = r2
            r1 = r5
            r9 = r7
            r5 = r14
            r2 = r84
            r7 = r86
            goto L_0x0f4a
        L_0x070f:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r1 = r0
            r14 = r7
            r7 = r19
            r81 = r32
            r32 = r3
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x073e:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
            r81 = r32
            r32 = r3
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x076e:
            r7 = r87
            if (r7 == 0) goto L_0x0808
            if (r12 == 0) goto L_0x077a
            org.telegram.tgnet.TLRPC$TL_message_secret r9 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x07d8 }
            r9.<init>()     // Catch:{ Exception -> 0x07d8 }
            goto L_0x077f
        L_0x077a:
            org.telegram.tgnet.TLRPC$TL_message r9 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x07d8 }
            r9.<init>()     // Catch:{ Exception -> 0x07d8 }
        L_0x077f:
            r9.media = r7     // Catch:{ Exception -> 0x07a9 }
            if (r5 == 0) goto L_0x0799
            boolean r18 = r5.containsKey(r10)     // Catch:{ Exception -> 0x07a9 }
            if (r18 == 0) goto L_0x0799
            r21 = 9
            r7 = r86
            r8 = r90
            r13 = r97
            r43 = r2
            r1 = r5
            r5 = r14
            r2 = r84
            goto L_0x0f4a
        L_0x0799:
            r21 = 1
            r7 = r86
            r8 = r90
            r13 = r97
            r43 = r2
            r1 = r5
            r5 = r14
            r2 = r84
            goto L_0x0f4a
        L_0x07a9:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r1 = r0
            r21 = r7
            r14 = r9
            r7 = r19
            r81 = r32
            r32 = r3
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x07d8:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r8 = r108
            r6 = r109
            r71 = r1
            r45 = r4
            r10 = r12
            r12 = r14
            r14 = r18
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r18 = r89
            r1 = r0
            r21 = r7
            r7 = r19
            r81 = r32
            r32 = r3
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0808:
            r9 = r88
            r3 = r32
            if (r9 == 0) goto L_0x0965
            if (r12 == 0) goto L_0x0848
            org.telegram.tgnet.TLRPC$TL_message_secret r32 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x081a }
            r32.<init>()     // Catch:{ Exception -> 0x081a }
            r18 = r32
            r1 = r18
            goto L_0x0851
        L_0x081a:
            r0 = move-exception
            r11 = r84
            r46 = r86
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r8 = r108
            r6 = r109
            r71 = r1
            r65 = r9
            r10 = r12
            r12 = r14
            r14 = r18
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r18 = r89
            r1 = r0
            r26 = r3
            r21 = r7
            r7 = r19
            goto L_0x45cb
        L_0x0848:
            org.telegram.tgnet.TLRPC$TL_message r32 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0937 }
            r32.<init>()     // Catch:{ Exception -> 0x0937 }
            r18 = r32
            r1 = r18
        L_0x0851:
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0908 }
            r7.<init>()     // Catch:{ Exception -> 0x0908 }
            r1.media = r7     // Catch:{ Exception -> 0x0908 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r1.media     // Catch:{ Exception -> 0x0908 }
            int r13 = r7.flags     // Catch:{ Exception -> 0x0908 }
            r18 = 3
            r13 = r13 | 3
            r7.flags = r13     // Catch:{ Exception -> 0x0908 }
            if (r6 == 0) goto L_0x0894
            r1.entities = r6     // Catch:{ Exception -> 0x0867 }
            goto L_0x0894
        L_0x0867:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r18 = r89
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r8 = r108
            r6 = r109
            r65 = r9
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r14 = r1
            r26 = r3
            r1 = r0
            goto L_0x45cb
        L_0x0894:
            r7 = r108
            if (r7 == 0) goto L_0x08a8
            org.telegram.tgnet.TLRPC$MessageMedia r13 = r1.media     // Catch:{ Exception -> 0x0867 }
            r13.ttl_seconds = r7     // Catch:{ Exception -> 0x0867 }
            r1.ttl = r7     // Catch:{ Exception -> 0x0867 }
            org.telegram.tgnet.TLRPC$MessageMedia r13 = r1.media     // Catch:{ Exception -> 0x0867 }
            int r7 = r13.flags     // Catch:{ Exception -> 0x0867 }
            r18 = 4
            r7 = r7 | 4
            r13.flags = r7     // Catch:{ Exception -> 0x0867 }
        L_0x08a8:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r1.media     // Catch:{ Exception -> 0x0908 }
            r7.photo = r9     // Catch:{ Exception -> 0x0908 }
            if (r5 == 0) goto L_0x08b9
            boolean r7 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0867 }
            if (r7 == 0) goto L_0x08b9
            r7 = 9
            r21 = r7
            goto L_0x08bc
        L_0x08b9:
            r7 = 2
            r21 = r7
        L_0x08bc:
            r13 = r97
            if (r13 == 0) goto L_0x08d3
            int r7 = r97.length()     // Catch:{ Exception -> 0x0867 }
            if (r7 <= 0) goto L_0x08d3
            r7 = r40
            boolean r18 = r13.startsWith(r7)     // Catch:{ Exception -> 0x0867 }
            if (r18 == 0) goto L_0x08d5
            r1.attachPath = r13     // Catch:{ Exception -> 0x0867 }
            r40 = r7
            goto L_0x08f7
        L_0x08d3:
            r7 = r40
        L_0x08d5:
            r40 = r7
            java.util.ArrayList r7 = r9.sizes     // Catch:{ Exception -> 0x0867 }
            java.util.ArrayList r8 = r9.sizes     // Catch:{ Exception -> 0x0867 }
            int r8 = r8.size()     // Catch:{ Exception -> 0x0867 }
            r18 = 1
            int r8 = r8 + -1
            java.lang.Object r7 = r7.get(r8)     // Catch:{ Exception -> 0x0867 }
            org.telegram.tgnet.TLRPC$PhotoSize r7 = (org.telegram.tgnet.TLRPC.PhotoSize) r7     // Catch:{ Exception -> 0x0867 }
            org.telegram.tgnet.TLRPC$FileLocation r7 = r7.location     // Catch:{ Exception -> 0x0867 }
            r8 = 1
            java.io.File r18 = org.telegram.messenger.FileLoader.getPathToAttach(r7, r8)     // Catch:{ Exception -> 0x0867 }
            java.lang.String r8 = r18.toString()     // Catch:{ Exception -> 0x0867 }
            r1.attachPath = r8     // Catch:{ Exception -> 0x0867 }
        L_0x08f7:
            r7 = r86
            r8 = r90
            r9 = r1
            r43 = r2
            r32 = r3
            r1 = r5
            r5 = r14
            r2 = r84
            r4 = r100
            goto L_0x0f4a
        L_0x0908:
            r0 = move-exception
            r13 = r97
            r11 = r84
            r71 = r85
            r46 = r86
            r18 = r89
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r8 = r108
            r6 = r109
            r65 = r9
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r14 = r1
            r26 = r3
            r1 = r0
            goto L_0x45cb
        L_0x0937:
            r0 = move-exception
            r13 = r97
            r11 = r84
            r71 = r85
            r46 = r86
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r8 = r108
            r6 = r109
            r1 = r0
            r65 = r9
            r10 = r12
            r12 = r14
            r14 = r18
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            goto L_0x09fe
        L_0x0965:
            r13 = r97
            r8 = r92
            r1 = r108
            if (r8 == 0) goto L_0x0a02
            org.telegram.tgnet.TLRPC$TL_message r7 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x09d5 }
            r7.<init>()     // Catch:{ Exception -> 0x09d5 }
            org.telegram.tgnet.TLRPC$TL_messageMediaGame r9 = new org.telegram.tgnet.TLRPC$TL_messageMediaGame     // Catch:{ Exception -> 0x09a9 }
            r9.<init>()     // Catch:{ Exception -> 0x09a9 }
            r7.media = r9     // Catch:{ Exception -> 0x09a9 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r7.media     // Catch:{ Exception -> 0x09a9 }
            r9.game = r8     // Catch:{ Exception -> 0x09a9 }
            if (r5 == 0) goto L_0x0998
            boolean r9 = r5.containsKey(r10)     // Catch:{ Exception -> 0x09a9 }
            if (r9 == 0) goto L_0x0998
            r21 = 9
            r8 = r90
            r43 = r2
            r32 = r3
            r1 = r5
            r9 = r7
            r5 = r14
            r2 = r84
            r7 = r86
            r4 = r100
            goto L_0x0f4a
        L_0x0998:
            r8 = r90
            r43 = r2
            r32 = r3
            r1 = r5
            r9 = r7
            r5 = r14
            r2 = r84
            r7 = r86
            r4 = r100
            goto L_0x0f4a
        L_0x09a9:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r8 = r1
            r10 = r12
            r12 = r14
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r1 = r0
            r26 = r3
            r14 = r7
            r7 = r19
            goto L_0x45cb
        L_0x09d5:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r8 = r1
            r10 = r12
            r12 = r14
            r14 = r18
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r1 = r0
        L_0x09fe:
            r26 = r3
            goto L_0x45cb
        L_0x0a02:
            r7 = r94
            r9 = r107
            if (r7 == 0) goto L_0x0a6b
            org.telegram.tgnet.TLRPC$TL_message r32 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x09d5 }
            r32.<init>()     // Catch:{ Exception -> 0x09d5 }
            r18 = r32
            r8 = r18
            r8.media = r7     // Catch:{ Exception -> 0x0a3f }
            if (r5 == 0) goto L_0x0a2e
            boolean r18 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0a3f }
            if (r18 == 0) goto L_0x0a2e
            r21 = 9
            r7 = r86
            r43 = r2
            r32 = r3
            r1 = r5
            r9 = r8
            r5 = r14
            r2 = r84
            r8 = r90
            r4 = r100
            goto L_0x0f4a
        L_0x0a2e:
            r7 = r86
            r43 = r2
            r32 = r3
            r1 = r5
            r9 = r8
            r5 = r14
            r2 = r84
            r8 = r90
            r4 = r100
            goto L_0x0f4a
        L_0x0a3f:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r53 = r90
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r26 = r3
            r14 = r8
            r8 = r1
            r1 = r0
            goto L_0x45cb
        L_0x0a6b:
            r8 = r90
            if (r8 == 0) goto L_0x0bcb
            if (r12 == 0) goto L_0x0aa8
            org.telegram.tgnet.TLRPC$TL_message_secret r32 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x0a7b }
            r32.<init>()     // Catch:{ Exception -> 0x0a7b }
            r18 = r32
            r7 = r18
            goto L_0x0ab1
        L_0x0a7b:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r53 = r8
            r10 = r12
            r12 = r14
            r14 = r18
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r8 = r1
            r26 = r3
            r1 = r0
            goto L_0x45cb
        L_0x0aa8:
            org.telegram.tgnet.TLRPC$TL_message r32 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0b9d }
            r32.<init>()     // Catch:{ Exception -> 0x0b9d }
            r18 = r32
            r7 = r18
        L_0x0ab1:
            org.telegram.tgnet.TLRPC$TL_messageMediaContact r9 = new org.telegram.tgnet.TLRPC$TL_messageMediaContact     // Catch:{ Exception -> 0x0b70 }
            r9.<init>()     // Catch:{ Exception -> 0x0b70 }
            r7.media = r9     // Catch:{ Exception -> 0x0b70 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r7.media     // Catch:{ Exception -> 0x0b70 }
            r32 = r3
            java.lang.String r3 = r8.phone     // Catch:{ Exception -> 0x0b41 }
            r9.phone_number = r3     // Catch:{ Exception -> 0x0b41 }
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r4 = r8.first_name     // Catch:{ Exception -> 0x0b41 }
            r3.first_name = r4     // Catch:{ Exception -> 0x0b41 }
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r4 = r8.last_name     // Catch:{ Exception -> 0x0b41 }
            r3.last_name = r4     // Catch:{ Exception -> 0x0b41 }
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            long r14 = r8.id     // Catch:{ Exception -> 0x0b41 }
            r3.user_id = r14     // Catch:{ Exception -> 0x0b41 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r3 = r8.restriction_reason     // Catch:{ Exception -> 0x0b41 }
            boolean r3 = r3.isEmpty()     // Catch:{ Exception -> 0x0b41 }
            if (r3 != 0) goto L_0x0afd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r3 = r8.restriction_reason     // Catch:{ Exception -> 0x0b41 }
            r4 = 0
            java.lang.Object r3 = r3.get(r4)     // Catch:{ Exception -> 0x0b41 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r3 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r3     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r3 = r3.text     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r4 = "BEGIN:VCARD"
            boolean r3 = r3.startsWith(r4)     // Catch:{ Exception -> 0x0b41 }
            if (r3 == 0) goto L_0x0afd
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r4 = r8.restriction_reason     // Catch:{ Exception -> 0x0b41 }
            r9 = 0
            java.lang.Object r4 = r4.get(r9)     // Catch:{ Exception -> 0x0b41 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r4 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r4     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r4 = r4.text     // Catch:{ Exception -> 0x0b41 }
            r3.vcard = r4     // Catch:{ Exception -> 0x0b41 }
            goto L_0x0b01
        L_0x0afd:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            r3.vcard = r11     // Catch:{ Exception -> 0x0b41 }
        L_0x0b01:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r3 = r3.first_name     // Catch:{ Exception -> 0x0b41 }
            if (r3 != 0) goto L_0x0b0d
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            r3.first_name = r11     // Catch:{ Exception -> 0x0b41 }
            r8.first_name = r11     // Catch:{ Exception -> 0x0b41 }
        L_0x0b0d:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            java.lang.String r3 = r3.last_name     // Catch:{ Exception -> 0x0b41 }
            if (r3 != 0) goto L_0x0b19
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r7.media     // Catch:{ Exception -> 0x0b41 }
            r3.last_name = r11     // Catch:{ Exception -> 0x0b41 }
            r8.last_name = r11     // Catch:{ Exception -> 0x0b41 }
        L_0x0b19:
            if (r5 == 0) goto L_0x0b31
            boolean r3 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0b41 }
            if (r3 == 0) goto L_0x0b31
            r21 = 9
            r4 = r100
            r43 = r2
            r1 = r5
            r9 = r7
            r2 = r84
            r7 = r86
            r5 = r95
            goto L_0x0f4a
        L_0x0b31:
            r21 = 6
            r4 = r100
            r43 = r2
            r1 = r5
            r9 = r7
            r2 = r84
            r7 = r86
            r5 = r95
            goto L_0x0f4a
        L_0x0b41:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r45 = r100
            r6 = r109
            r14 = r7
            r53 = r8
            r10 = r12
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r12 = r95
            r8 = r1
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0b70:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r14 = r7
            r53 = r8
            r10 = r12
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r12 = r95
            r8 = r1
            r26 = r3
            r1 = r0
            goto L_0x45cb
        L_0x0b9d:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r33 = r26
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r12 = r95
            r8 = r1
            r26 = r3
            r1 = r0
            goto L_0x45cb
        L_0x0bcb:
            r32 = r3
            r3 = r91
            r4 = r5
            if (r3 == 0) goto L_0x0f3d
            if (r12 == 0) goto L_0x0c0b
            org.telegram.tgnet.TLRPC$TL_message_secret r5 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x0bda }
            r5.<init>()     // Catch:{ Exception -> 0x0bda }
            goto L_0x0CLASSNAME
        L_0x0bda:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r45 = r100
            r6 = r109
            r49 = r3
            r5 = r4
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r12 = r95
            r8 = r1
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0c0b:
            org.telegram.tgnet.TLRPC$TL_message r5 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0f0b }
            r5.<init>()     // Catch:{ Exception -> 0x0f0b }
        L_0x0CLASSNAME:
            boolean r7 = org.telegram.messenger.DialogObject.isChatDialog(r95)     // Catch:{ Exception -> 0x0ed7 }
            if (r7 == 0) goto L_0x0CLASSNAME
            if (r2 != 0) goto L_0x0CLASSNAME
            r7 = 0
            java.util.ArrayList r9 = r3.attributes     // Catch:{ Exception -> 0x0CLASSNAME }
            int r9 = r9.size()     // Catch:{ Exception -> 0x0CLASSNAME }
        L_0x0c1f:
            if (r7 >= r9) goto L_0x0CLASSNAME
            java.util.ArrayList r14 = r3.attributes     // Catch:{ Exception -> 0x0CLASSNAME }
            java.lang.Object r14 = r14.get(r7)     // Catch:{ Exception -> 0x0CLASSNAME }
            boolean r14 = r14 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeAnimated     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r14 == 0) goto L_0x0CLASSNAME
            java.util.ArrayList r14 = r3.attributes     // Catch:{ Exception -> 0x0CLASSNAME }
            r14.remove(r7)     // Catch:{ Exception -> 0x0CLASSNAME }
            r23 = 1
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            int r7 = r7 + 1
            goto L_0x0c1f
        L_0x0CLASSNAME:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r45 = r100
            r6 = r109
            r49 = r3
            r14 = r5
            r53 = r8
            r10 = r12
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r12 = r95
            r8 = r1
            r5 = r4
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0CLASSNAME:
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0ed7 }
            r7.<init>()     // Catch:{ Exception -> 0x0ed7 }
            r5.media = r7     // Catch:{ Exception -> 0x0ed7 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r5.media     // Catch:{ Exception -> 0x0ed7 }
            int r9 = r7.flags     // Catch:{ Exception -> 0x0ed7 }
            r14 = 3
            r9 = r9 | r14
            r7.flags = r9     // Catch:{ Exception -> 0x0ed7 }
            if (r1 == 0) goto L_0x0CLASSNAME
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r5.media     // Catch:{ Exception -> 0x0CLASSNAME }
            r7.ttl_seconds = r1     // Catch:{ Exception -> 0x0CLASSNAME }
            r5.ttl = r1     // Catch:{ Exception -> 0x0CLASSNAME }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r5.media     // Catch:{ Exception -> 0x0CLASSNAME }
            int r9 = r7.flags     // Catch:{ Exception -> 0x0CLASSNAME }
            r14 = 4
            r9 = r9 | r14
            r7.flags = r9     // Catch:{ Exception -> 0x0CLASSNAME }
        L_0x0CLASSNAME:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r5.media     // Catch:{ Exception -> 0x0ed7 }
            r7.document = r3     // Catch:{ Exception -> 0x0ed7 }
            if (r4 == 0) goto L_0x0CLASSNAME
            boolean r7 = r4.containsKey(r10)     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r7 == 0) goto L_0x0CLASSNAME
            r7 = 9
            r21 = r7
            goto L_0x0cbc
        L_0x0CLASSNAME:
            boolean r7 = org.telegram.messenger.MessageObject.isVideoSticker(r91)     // Catch:{ Exception -> 0x0ed7 }
            if (r7 != 0) goto L_0x0cae
            boolean r7 = org.telegram.messenger.MessageObject.isVideoDocument(r91)     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r7 != 0) goto L_0x0caa
            boolean r7 = org.telegram.messenger.MessageObject.isRoundVideoDocument(r91)     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r7 != 0) goto L_0x0caa
            if (r89 == 0) goto L_0x0cae
        L_0x0caa:
            r7 = 3
            r21 = r7
            goto L_0x0cbc
        L_0x0cae:
            boolean r7 = org.telegram.messenger.MessageObject.isVoiceDocument(r91)     // Catch:{ Exception -> 0x0ed7 }
            if (r7 == 0) goto L_0x0cb9
            r7 = 8
            r21 = r7
            goto L_0x0cbc
        L_0x0cb9:
            r7 = 7
            r21 = r7
        L_0x0cbc:
            if (r89 == 0) goto L_0x0ccf
            java.lang.String r7 = r89.getString()     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r4 != 0) goto L_0x0cca
            java.util.HashMap r9 = new java.util.HashMap     // Catch:{ Exception -> 0x0CLASSNAME }
            r9.<init>()     // Catch:{ Exception -> 0x0CLASSNAME }
            r4 = r9
        L_0x0cca:
            java.lang.String r9 = "ve"
            r4.put(r9, r7)     // Catch:{ Exception -> 0x0ced }
        L_0x0ccf:
            if (r12 == 0) goto L_0x0d1d
            int r7 = r3.dc_id     // Catch:{ Exception -> 0x0ced }
            if (r7 <= 0) goto L_0x0d1d
            boolean r7 = org.telegram.messenger.MessageObject.isStickerDocument(r91)     // Catch:{ Exception -> 0x0ced }
            if (r7 != 0) goto L_0x0d1d
            r7 = 1
            boolean r9 = org.telegram.messenger.MessageObject.isAnimatedStickerDocument(r3, r7)     // Catch:{ Exception -> 0x0ced }
            if (r9 != 0) goto L_0x0d1d
            java.io.File r7 = org.telegram.messenger.FileLoader.getPathToAttach(r91)     // Catch:{ Exception -> 0x0ced }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0ced }
            r5.attachPath = r7     // Catch:{ Exception -> 0x0ced }
            goto L_0x0d1f
        L_0x0ced:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r45 = r100
            r6 = r109
            r49 = r3
            r14 = r5
            r53 = r8
            r10 = r12
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r12 = r95
            r8 = r1
            r5 = r4
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0d1d:
            r5.attachPath = r13     // Catch:{ Exception -> 0x0ea3 }
        L_0x0d1f:
            if (r12 == 0) goto L_0x0e92
            boolean r7 = org.telegram.messenger.MessageObject.isStickerDocument(r91)     // Catch:{ Exception -> 0x0ea3 }
            if (r7 != 0) goto L_0x0d39
            r7 = 1
            boolean r9 = org.telegram.messenger.MessageObject.isAnimatedStickerDocument(r3, r7)     // Catch:{ Exception -> 0x0ced }
            if (r9 == 0) goto L_0x0d2f
            goto L_0x0d39
        L_0x0d2f:
            r43 = r2
            r18 = r5
            r2 = r84
            r5 = r95
            goto L_0x0e9a
        L_0x0d39:
            r7 = 0
        L_0x0d3a:
            java.util.ArrayList r9 = r3.attributes     // Catch:{ Exception -> 0x0ea3 }
            int r9 = r9.size()     // Catch:{ Exception -> 0x0ea3 }
            if (r7 >= r9) goto L_0x0e89
            java.util.ArrayList r9 = r3.attributes     // Catch:{ Exception -> 0x0ea3 }
            java.lang.Object r9 = r9.get(r7)     // Catch:{ Exception -> 0x0ea3 }
            org.telegram.tgnet.TLRPC$DocumentAttribute r9 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r9     // Catch:{ Exception -> 0x0ea3 }
            boolean r14 = r9 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeSticker     // Catch:{ Exception -> 0x0ea3 }
            if (r14 == 0) goto L_0x0e73
            java.util.ArrayList r14 = r3.attributes     // Catch:{ Exception -> 0x0ea3 }
            r14.remove(r7)     // Catch:{ Exception -> 0x0ea3 }
            org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55 r14 = new org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55     // Catch:{ Exception -> 0x0ea3 }
            r14.<init>()     // Catch:{ Exception -> 0x0ea3 }
            java.util.ArrayList r15 = r3.attributes     // Catch:{ Exception -> 0x0ea3 }
            r15.add(r14)     // Catch:{ Exception -> 0x0ea3 }
            java.lang.String r15 = r9.alt     // Catch:{ Exception -> 0x0ea3 }
            r14.alt = r15     // Catch:{ Exception -> 0x0ea3 }
            org.telegram.tgnet.TLRPC$InputStickerSet r15 = r9.stickerset     // Catch:{ Exception -> 0x0ea3 }
            if (r15 == 0) goto L_0x0e32
            org.telegram.tgnet.TLRPC$InputStickerSet r15 = r9.stickerset     // Catch:{ Exception -> 0x0ea3 }
            boolean r15 = r15 instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName     // Catch:{ Exception -> 0x0ea3 }
            if (r15 == 0) goto L_0x0d72
            org.telegram.tgnet.TLRPC$InputStickerSet r15 = r9.stickerset     // Catch:{ Exception -> 0x0ced }
            java.lang.String r15 = r15.short_name     // Catch:{ Exception -> 0x0ced }
            r43 = r2
            goto L_0x0d81
        L_0x0d72:
            org.telegram.messenger.MediaDataController r15 = r84.getMediaDataController()     // Catch:{ Exception -> 0x0ea3 }
            org.telegram.tgnet.TLRPC$InputStickerSet r1 = r9.stickerset     // Catch:{ Exception -> 0x0ea3 }
            r43 = r2
            long r1 = r1.id     // Catch:{ Exception -> 0x0ea3 }
            java.lang.String r1 = r15.getStickerSetName(r1)     // Catch:{ Exception -> 0x0ea3 }
            r15 = r1
        L_0x0d81:
            boolean r1 = android.text.TextUtils.isEmpty(r15)     // Catch:{ Exception -> 0x0ea3 }
            if (r1 != 0) goto L_0x0dcb
            org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName r1 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName     // Catch:{ Exception -> 0x0d9a }
            r1.<init>()     // Catch:{ Exception -> 0x0d9a }
            r14.stickerset = r1     // Catch:{ Exception -> 0x0d9a }
            org.telegram.tgnet.TLRPC$InputStickerSet r1 = r14.stickerset     // Catch:{ Exception -> 0x0d9a }
            r1.short_name = r15     // Catch:{ Exception -> 0x0d9a }
            r2 = r84
            r18 = r5
            r5 = r95
            goto L_0x0e29
        L_0x0d9a:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r18 = r89
            r45 = r100
            r6 = r109
            r1 = r0
            r49 = r3
            r14 = r5
            r53 = r8
            r10 = r12
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r12 = r95
            r8 = r108
            r5 = r4
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0dcb:
            org.telegram.tgnet.TLRPC$InputStickerSet r1 = r9.stickerset     // Catch:{ Exception -> 0x0ea3 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetID     // Catch:{ Exception -> 0x0ea3 }
            if (r1 == 0) goto L_0x0e1c
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r1 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x0ea3 }
            r2 = r84
            r18 = r5
            r5 = r95
            r1.<init>(r5)     // Catch:{ Exception -> 0x0e43 }
            r1.encryptedChat = r12     // Catch:{ Exception -> 0x0dea }
            r1.locationParent = r14     // Catch:{ Exception -> 0x0dea }
            r3 = 5
            r1.type = r3     // Catch:{ Exception -> 0x0dea }
            org.telegram.tgnet.TLRPC$InputStickerSet r3 = r9.stickerset     // Catch:{ Exception -> 0x0dea }
            r1.parentObject = r3     // Catch:{ Exception -> 0x0dea }
            r20 = r1
            goto L_0x0e22
        L_0x0dea:
            r0 = move-exception
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r45 = r100
            r20 = r1
            r11 = r2
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r8 = r108
            r1 = r0
            r12 = r5
            r6 = r109
            r5 = r4
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0e1c:
            r2 = r84
            r18 = r5
            r5 = r95
        L_0x0e22:
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r1 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty     // Catch:{ Exception -> 0x0e43 }
            r1.<init>()     // Catch:{ Exception -> 0x0e43 }
            r14.stickerset = r1     // Catch:{ Exception -> 0x0e43 }
        L_0x0e29:
            r7 = r86
            r1 = r4
            r9 = r18
            r4 = r100
            goto L_0x0f4a
        L_0x0e32:
            r43 = r2
            r18 = r5
            r2 = r84
            r5 = r95
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r1 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty     // Catch:{ Exception -> 0x0e43 }
            r1.<init>()     // Catch:{ Exception -> 0x0e43 }
            r14.stickerset = r1     // Catch:{ Exception -> 0x0e43 }
            goto L_0x0e9a
        L_0x0e43:
            r0 = move-exception
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r45 = r100
            r1 = r0
            r11 = r2
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r8 = r108
            r12 = r5
            r6 = r109
            r5 = r4
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0e73:
            r43 = r2
            r18 = r5
            r2 = r84
            r5 = r95
            int r7 = r7 + 1
            r3 = r91
            r6 = r103
            r1 = r108
            r5 = r18
            r2 = r43
            goto L_0x0d3a
        L_0x0e89:
            r43 = r2
            r18 = r5
            r2 = r84
            r5 = r95
            goto L_0x0e9a
        L_0x0e92:
            r43 = r2
            r18 = r5
            r2 = r84
            r5 = r95
        L_0x0e9a:
            r7 = r86
            r1 = r4
            r9 = r18
            r4 = r100
            goto L_0x0f4a
        L_0x0ea3:
            r0 = move-exception
            r18 = r5
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r45 = r100
            r6 = r109
            r1 = r0
            r5 = r4
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r12 = r95
            r8 = r108
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0ed7:
            r0 = move-exception
            r18 = r5
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r45 = r100
            r6 = r109
            r1 = r0
            r5 = r4
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r12 = r95
            r8 = r108
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0f0b:
            r0 = move-exception
            r11 = r84
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r45 = r100
            r6 = r109
            r1 = r0
            r5 = r4
            r53 = r8
            r10 = r12
            r14 = r18
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r18 = r89
            r12 = r95
            r8 = r108
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0f3d:
            r5 = r95
            r43 = r2
            r2 = r84
            r7 = r86
            r1 = r4
            r9 = r18
            r4 = r100
        L_0x0f4a:
            r3 = r103
            r14 = r5
            if (r3 == 0) goto L_0x0f8d
            boolean r5 = r103.isEmpty()     // Catch:{ Exception -> 0x0f5e }
            if (r5 != 0) goto L_0x0f8d
            r9.entities = r3     // Catch:{ Exception -> 0x0f5e }
            int r5 = r9.flags     // Catch:{ Exception -> 0x0f5e }
            r5 = r5 | 128(0x80, float:1.794E-43)
            r9.flags = r5     // Catch:{ Exception -> 0x0f5e }
            goto L_0x0f8d
        L_0x0f5e:
            r0 = move-exception
            r71 = r85
            r65 = r88
            r18 = r89
            r49 = r91
            r6 = r109
            r5 = r1
            r11 = r2
            r45 = r4
            r46 = r7
            r53 = r8
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r8 = r108
            r1 = r0
            r14 = r9
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0f8d:
            if (r7 == 0) goto L_0x0var_
            r9.message = r7     // Catch:{ Exception -> 0x0f5e }
            goto L_0x0var_
        L_0x0var_:
            java.lang.String r5 = r9.message     // Catch:{ Exception -> 0x4567 }
            if (r5 != 0) goto L_0x0var_
            r9.message = r11     // Catch:{ Exception -> 0x0f5e }
        L_0x0var_:
            java.lang.String r5 = r9.attachPath     // Catch:{ Exception -> 0x4567 }
            if (r5 != 0) goto L_0x0f9e
            r9.attachPath = r11     // Catch:{ Exception -> 0x0f5e }
        L_0x0f9e:
            org.telegram.messenger.UserConfig r5 = r84.getUserConfig()     // Catch:{ Exception -> 0x4567 }
            int r5 = r5.getNewMessageId()     // Catch:{ Exception -> 0x4567 }
            r9.id = r5     // Catch:{ Exception -> 0x4567 }
            r9.local_id = r5     // Catch:{ Exception -> 0x4567 }
            r5 = 1
            r9.out = r5     // Catch:{ Exception -> 0x4567 }
            if (r22 == 0) goto L_0x1025
            if (r35 == 0) goto L_0x1025
            org.telegram.tgnet.TLRPC$TL_peerChannel r5 = new org.telegram.tgnet.TLRPC$TL_peerChannel     // Catch:{ Exception -> 0x0ff4 }
            r5.<init>()     // Catch:{ Exception -> 0x0ff4 }
            r9.from_id = r5     // Catch:{ Exception -> 0x0ff4 }
            org.telegram.tgnet.TLRPC$Peer r5 = r9.from_id     // Catch:{ Exception -> 0x0ff4 }
            r86 = r4
            r6 = r35
            long r3 = r6.channel_id     // Catch:{ Exception -> 0x0fc6 }
            r5.channel_id = r3     // Catch:{ Exception -> 0x0fc6 }
            r4 = r32
            goto L_0x10c3
        L_0x0fc6:
            r0 = move-exception
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r5 = r1
            r11 = r2
            r46 = r7
            r53 = r8
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r30 = r38
            r21 = r87
            r8 = r108
            r1 = r0
            r15 = r6
            r14 = r9
            r6 = r109
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x0ff4:
            r0 = move-exception
            r86 = r4
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r6 = r109
            r5 = r1
            r11 = r2
            r46 = r7
            r53 = r8
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r15 = r35
            r30 = r38
            r21 = r87
            r8 = r108
            r1 = r0
            r14 = r9
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x1025:
            r86 = r4
            r6 = r35
            if (r38 == 0) goto L_0x10a8
            r5 = r38
            r9.from_id = r5     // Catch:{ Exception -> 0x107a }
            if (r30 == 0) goto L_0x1073
            r4 = r30
            r9.post_author = r4     // Catch:{ Exception -> 0x1045 }
            int r3 = r9.flags     // Catch:{ Exception -> 0x1045 }
            r18 = 65536(0x10000, float:9.18355E-41)
            r3 = r3 | r18
            r9.flags = r3     // Catch:{ Exception -> 0x1045 }
            r30 = r4
            r38 = r5
            r4 = r32
            goto L_0x10c3
        L_0x1045:
            r0 = move-exception
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r11 = r2
            r29 = r4
            r30 = r5
            r46 = r7
            r53 = r8
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r21 = r87
            r8 = r108
            r5 = r1
            r15 = r6
            r14 = r9
            r6 = r109
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x1073:
            r4 = r30
            r38 = r5
            r4 = r32
            goto L_0x10c3
        L_0x107a:
            r0 = move-exception
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r11 = r2
            r46 = r7
            r53 = r8
            r10 = r12
            r12 = r14
            r7 = r19
            r66 = r21
            r29 = r30
            r21 = r87
            r8 = r108
            r30 = r5
            r15 = r6
            r14 = r9
            r6 = r109
            r5 = r1
            r1 = r0
            r81 = r32
            r32 = r93
            r33 = r26
            r26 = r81
            goto L_0x45cb
        L_0x10a8:
            r4 = r30
            r5 = r38
            org.telegram.tgnet.TLRPC$TL_peerUser r3 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x4536 }
            r3.<init>()     // Catch:{ Exception -> 0x4536 }
            r9.from_id = r3     // Catch:{ Exception -> 0x4536 }
            org.telegram.tgnet.TLRPC$Peer r3 = r9.from_id     // Catch:{ Exception -> 0x4536 }
            r30 = r4
            r38 = r5
            r4 = r32
            r3.user_id = r4     // Catch:{ Exception -> 0x4507 }
            int r3 = r9.flags     // Catch:{ Exception -> 0x4507 }
            r3 = r3 | 256(0x100, float:3.59E-43)
            r9.flags = r3     // Catch:{ Exception -> 0x4507 }
        L_0x10c3:
            org.telegram.messenger.UserConfig r3 = r84.getUserConfig()     // Catch:{ Exception -> 0x4507 }
            r100 = r1
            r1 = 0
            r3.saveConfig(r1)     // Catch:{ Exception -> 0x44da }
            r45 = r86
            r86 = r87
            r87 = r88
            r1 = r91
            r18 = r93
            r13 = r100
            r46 = r7
            r3 = r8
            r8 = r9
            r32 = r10
            r7 = r21
            r9 = r85
            r10 = r108
            r85 = r109
        L_0x10e7:
            r88 = r9
            r9 = r106
            if (r9 == 0) goto L_0x11a3
            r90 = r1
            int r1 = r2.currentAccount     // Catch:{ Exception -> 0x1172 }
            android.content.SharedPreferences r1 = org.telegram.messenger.MessagesController.getNotificationsSettings(r1)     // Catch:{ Exception -> 0x1172 }
            r91 = r3
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1143 }
            r3.<init>()     // Catch:{ Exception -> 0x1143 }
            r93 = r7
            java.lang.String r7 = "silent_"
            r3.append(r7)     // Catch:{ Exception -> 0x1116 }
            r3.append(r14)     // Catch:{ Exception -> 0x1116 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x1116 }
            r7 = 0
            boolean r1 = r1.getBoolean(r3, r7)     // Catch:{ Exception -> 0x1116 }
            if (r1 == 0) goto L_0x1113
            goto L_0x11a9
        L_0x1113:
            r1 = 0
            goto L_0x11aa
        L_0x1116:
            r0 = move-exception
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r81 = r6
            r6 = r85
            r82 = r14
            r15 = r81
            r14 = r8
            r8 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x1143:
            r0 = move-exception
            r93 = r7
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r81 = r6
            r6 = r85
            r82 = r14
            r15 = r81
            r14 = r8
            r8 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x1172:
            r0 = move-exception
            r91 = r3
            r93 = r7
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r81 = r6
            r6 = r85
            r82 = r14
            r15 = r81
            r14 = r8
            r8 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x11a3:
            r90 = r1
            r91 = r3
            r93 = r7
        L_0x11a9:
            r1 = 1
        L_0x11aa:
            r8.silent = r1     // Catch:{ Exception -> 0x449e }
            r100 = r10
            long r9 = r8.random_id     // Catch:{ Exception -> 0x4464 }
            int r1 = (r9 > r16 ? 1 : (r9 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x11e3
            long r9 = r84.getNextRandomId()     // Catch:{ Exception -> 0x11bb }
            r8.random_id = r9     // Catch:{ Exception -> 0x11bb }
            goto L_0x11e3
        L_0x11bb:
            r0 = move-exception
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r10 = r12
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r12 = r14
            r15 = r6
            r14 = r8
            r6 = r85
            r8 = r100
            goto L_0x45cb
        L_0x11e3:
            java.lang.String r7 = "bot"
            java.lang.String r9 = "bot_name"
            if (r13 == 0) goto L_0x121f
            boolean r1 = r13.containsKey(r7)     // Catch:{ Exception -> 0x11bb }
            if (r1 == 0) goto L_0x121f
            if (r12 == 0) goto L_0x1205
            java.lang.Object r1 = r13.get(r9)     // Catch:{ Exception -> 0x11bb }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x11bb }
            r8.via_bot_name = r1     // Catch:{ Exception -> 0x11bb }
            java.lang.String r1 = r8.via_bot_name     // Catch:{ Exception -> 0x11bb }
            if (r1 != 0) goto L_0x1202
            r8.via_bot_name = r11     // Catch:{ Exception -> 0x11bb }
            r105 = r9
            goto L_0x1218
        L_0x1202:
            r105 = r9
            goto L_0x1218
        L_0x1205:
            java.lang.Object r1 = r13.get(r7)     // Catch:{ Exception -> 0x11bb }
            java.lang.CharSequence r1 = (java.lang.CharSequence) r1     // Catch:{ Exception -> 0x11bb }
            java.lang.Integer r1 = org.telegram.messenger.Utilities.parseInt(r1)     // Catch:{ Exception -> 0x11bb }
            int r1 = r1.intValue()     // Catch:{ Exception -> 0x11bb }
            r105 = r9
            long r9 = (long) r1     // Catch:{ Exception -> 0x11bb }
            r8.via_bot_id = r9     // Catch:{ Exception -> 0x11bb }
        L_0x1218:
            int r1 = r8.flags     // Catch:{ Exception -> 0x11bb }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r8.flags = r1     // Catch:{ Exception -> 0x11bb }
            goto L_0x1221
        L_0x121f:
            r105 = r9
        L_0x1221:
            r8.params = r13     // Catch:{ Exception -> 0x4464 }
            r1 = r102
            if (r1 == 0) goto L_0x1231
            boolean r3 = r1.resendAsIs     // Catch:{ Exception -> 0x11bb }
            if (r3 != 0) goto L_0x122c
            goto L_0x1231
        L_0x122c:
            r9 = r107
            r33 = r11
            goto L_0x1284
        L_0x1231:
            r9 = r107
            if (r9 == 0) goto L_0x1237
            r3 = r9
            goto L_0x123f
        L_0x1237:
            org.telegram.tgnet.ConnectionsManager r3 = r84.getConnectionsManager()     // Catch:{ Exception -> 0x4464 }
            int r3 = r3.getCurrentTime()     // Catch:{ Exception -> 0x4464 }
        L_0x123f:
            r8.date = r3     // Catch:{ Exception -> 0x4464 }
            boolean r3 = r6 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel     // Catch:{ Exception -> 0x4464 }
            if (r3 == 0) goto L_0x127f
            if (r9 != 0) goto L_0x1252
            if (r22 == 0) goto L_0x1252
            r3 = 1
            r8.views = r3     // Catch:{ Exception -> 0x11bb }
            int r3 = r8.flags     // Catch:{ Exception -> 0x11bb }
            r3 = r3 | 1024(0x400, float:1.435E-42)
            r8.flags = r3     // Catch:{ Exception -> 0x11bb }
        L_0x1252:
            org.telegram.messenger.MessagesController r3 = r84.getMessagesController()     // Catch:{ Exception -> 0x11bb }
            r33 = r11
            long r10 = r6.channel_id     // Catch:{ Exception -> 0x11bb }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x11bb }
            org.telegram.tgnet.TLRPC$Chat r3 = r3.getChat(r10)     // Catch:{ Exception -> 0x11bb }
            if (r3 == 0) goto L_0x127e
            boolean r10 = r3.megagroup     // Catch:{ Exception -> 0x11bb }
            if (r10 == 0) goto L_0x126c
            r10 = 1
            r8.unread = r10     // Catch:{ Exception -> 0x11bb }
            goto L_0x127e
        L_0x126c:
            r10 = 1
            r8.post = r10     // Catch:{ Exception -> 0x11bb }
            boolean r10 = r3.signatures     // Catch:{ Exception -> 0x11bb }
            if (r10 == 0) goto L_0x127e
            org.telegram.tgnet.TLRPC$TL_peerUser r10 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x11bb }
            r10.<init>()     // Catch:{ Exception -> 0x11bb }
            r8.from_id = r10     // Catch:{ Exception -> 0x11bb }
            org.telegram.tgnet.TLRPC$Peer r10 = r8.from_id     // Catch:{ Exception -> 0x11bb }
            r10.user_id = r4     // Catch:{ Exception -> 0x11bb }
        L_0x127e:
            goto L_0x1284
        L_0x127f:
            r33 = r11
            r3 = 1
            r8.unread = r3     // Catch:{ Exception -> 0x4464 }
        L_0x1284:
            int r3 = r8.flags     // Catch:{ Exception -> 0x4464 }
            r3 = r3 | 512(0x200, float:7.175E-43)
            r8.flags = r3     // Catch:{ Exception -> 0x4464 }
            r8.dialog_id = r14     // Catch:{ Exception -> 0x4464 }
            r10 = r98
            r11 = r103
            if (r10 == 0) goto L_0x1393
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = new org.telegram.tgnet.TLRPC$TL_messageReplyHeader     // Catch:{ Exception -> 0x1365 }
            r3.<init>()     // Catch:{ Exception -> 0x1365 }
            r8.reply_to = r3     // Catch:{ Exception -> 0x1365 }
            if (r12 == 0) goto L_0x1307
            org.telegram.tgnet.TLRPC$Message r3 = r10.messageOwner     // Catch:{ Exception -> 0x12e1 }
            r35 = r6
            r108 = r7
            long r6 = r3.random_id     // Catch:{ Exception -> 0x12b8 }
            int r3 = (r6 > r16 ? 1 : (r6 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x130b
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r8.reply_to     // Catch:{ Exception -> 0x12b8 }
            org.telegram.tgnet.TLRPC$Message r6 = r10.messageOwner     // Catch:{ Exception -> 0x12b8 }
            long r6 = r6.random_id     // Catch:{ Exception -> 0x12b8 }
            r3.reply_to_random_id = r6     // Catch:{ Exception -> 0x12b8 }
            int r3 = r8.flags     // Catch:{ Exception -> 0x12b8 }
            r6 = 8
            r3 = r3 | r6
            r8.flags = r3     // Catch:{ Exception -> 0x12b8 }
            goto L_0x1312
        L_0x12b8:
            r0 = move-exception
            r6 = r85
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r10 = r12
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r12 = r14
            r15 = r35
            r14 = r8
            r8 = r100
            goto L_0x45cb
        L_0x12e1:
            r0 = move-exception
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r10 = r12
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r12 = r14
            r15 = r6
            r14 = r8
            r6 = r85
            goto L_0x138f
        L_0x1307:
            r35 = r6
            r108 = r7
        L_0x130b:
            int r3 = r8.flags     // Catch:{ Exception -> 0x1339 }
            r6 = 8
            r3 = r3 | r6
            r8.flags = r3     // Catch:{ Exception -> 0x1339 }
        L_0x1312:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r8.reply_to     // Catch:{ Exception -> 0x1339 }
            int r6 = r98.getId()     // Catch:{ Exception -> 0x1339 }
            r3.reply_to_msg_id = r6     // Catch:{ Exception -> 0x1339 }
            r7 = r99
            r6 = r1
            if (r7 == 0) goto L_0x1335
            if (r7 == r10) goto L_0x1335
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r8.reply_to     // Catch:{ Exception -> 0x12b8 }
            int r3 = r99.getId()     // Catch:{ Exception -> 0x12b8 }
            r1.reply_to_top_id = r3     // Catch:{ Exception -> 0x12b8 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r8.reply_to     // Catch:{ Exception -> 0x12b8 }
            int r3 = r1.flags     // Catch:{ Exception -> 0x12b8 }
            r21 = 2
            r3 = r3 | 2
            r1.flags = r3     // Catch:{ Exception -> 0x12b8 }
            goto L_0x139c
        L_0x1335:
            r21 = 2
            goto L_0x139c
        L_0x1339:
            r0 = move-exception
            r7 = r99
            r6 = r1
            r6 = r85
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r10 = r12
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r12 = r14
            r15 = r35
            r14 = r8
            r8 = r100
            goto L_0x45cb
        L_0x1365:
            r0 = move-exception
            r7 = r99
            r35 = r6
            r6 = r1
            r6 = r85
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r10 = r12
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r12 = r14
            r15 = r35
            r14 = r8
        L_0x138f:
            r8 = r100
            goto L_0x45cb
        L_0x1393:
            r35 = r6
            r108 = r7
            r21 = 2
            r7 = r99
            r6 = r1
        L_0x139c:
            int r1 = (r26 > r16 ? 1 : (r26 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x13ed
            org.telegram.tgnet.TLRPC$TL_messageReplies r1 = new org.telegram.tgnet.TLRPC$TL_messageReplies     // Catch:{ Exception -> 0x13c4 }
            r1.<init>()     // Catch:{ Exception -> 0x13c4 }
            r8.replies = r1     // Catch:{ Exception -> 0x13c4 }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r8.replies     // Catch:{ Exception -> 0x13c4 }
            r3 = 1
            r1.comments = r3     // Catch:{ Exception -> 0x13c4 }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r8.replies     // Catch:{ Exception -> 0x13c4 }
            r6 = r26
            r1.channel_id = r6     // Catch:{ Exception -> 0x13fe }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r8.replies     // Catch:{ Exception -> 0x13fe }
            int r3 = r1.flags     // Catch:{ Exception -> 0x13fe }
            r26 = 1
            r3 = r3 | 1
            r1.flags = r3     // Catch:{ Exception -> 0x13fe }
            int r1 = r8.flags     // Catch:{ Exception -> 0x13fe }
            r3 = 8388608(0x800000, float:1.17549435E-38)
            r1 = r1 | r3
            r8.flags = r1     // Catch:{ Exception -> 0x13fe }
            goto L_0x13ef
        L_0x13c4:
            r0 = move-exception
            r6 = r85
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r10 = r12
            r32 = r18
            r7 = r19
            r33 = r26
            r29 = r30
            r30 = r38
            r18 = r89
            r26 = r4
            r5 = r13
            r12 = r14
            r15 = r35
            r14 = r8
            r8 = r100
            goto L_0x45cb
        L_0x13ed:
            r6 = r26
        L_0x13ef:
            r3 = r104
            if (r3 == 0) goto L_0x1427
            if (r12 != 0) goto L_0x1427
            int r1 = r8.flags     // Catch:{ Exception -> 0x13fe }
            r1 = r1 | 64
            r8.flags = r1     // Catch:{ Exception -> 0x13fe }
            r8.reply_markup = r3     // Catch:{ Exception -> 0x13fe }
            goto L_0x1427
        L_0x13fe:
            r0 = move-exception
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r26 = r4
            r33 = r6
            r10 = r12
            r5 = r13
            r12 = r14
            r32 = r18
            r7 = r19
            r29 = r30
            r15 = r35
            r30 = r38
            r6 = r85
            r18 = r89
            r14 = r8
            r8 = r100
            goto L_0x45cb
        L_0x1427:
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r95)     // Catch:{ Exception -> 0x4429 }
            if (r1 != 0) goto L_0x1467
            org.telegram.messenger.MessagesController r1 = r84.getMessagesController()     // Catch:{ Exception -> 0x13fe }
            org.telegram.tgnet.TLRPC$Peer r1 = r1.getPeer(r14)     // Catch:{ Exception -> 0x13fe }
            r8.peer_id = r1     // Catch:{ Exception -> 0x13fe }
            boolean r1 = org.telegram.messenger.DialogObject.isUserDialog(r95)     // Catch:{ Exception -> 0x13fe }
            if (r1 == 0) goto L_0x1460
            org.telegram.messenger.MessagesController r1 = r84.getMessagesController()     // Catch:{ Exception -> 0x13fe }
            java.lang.Long r3 = java.lang.Long.valueOf(r95)     // Catch:{ Exception -> 0x13fe }
            org.telegram.tgnet.TLRPC$User r1 = r1.getUser(r3)     // Catch:{ Exception -> 0x13fe }
            if (r1 != 0) goto L_0x1451
            int r3 = r8.id     // Catch:{ Exception -> 0x13fe }
            r2.processSentMessage(r3)     // Catch:{ Exception -> 0x13fe }
            return
        L_0x1451:
            boolean r3 = r1.bot     // Catch:{ Exception -> 0x13fe }
            if (r3 == 0) goto L_0x1459
            r3 = 0
            r8.unread = r3     // Catch:{ Exception -> 0x13fe }
            goto L_0x145a
        L_0x1459:
            r3 = 0
        L_0x145a:
            r26 = r4
            r5 = r100
            goto L_0x1555
        L_0x1460:
            r3 = 0
            r26 = r4
            r5 = r100
            goto L_0x1555
        L_0x1467:
            r3 = 0
            org.telegram.tgnet.TLRPC$TL_peerUser r1 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x4429 }
            r1.<init>()     // Catch:{ Exception -> 0x4429 }
            r8.peer_id = r1     // Catch:{ Exception -> 0x4429 }
            r26 = r4
            long r3 = r12.participant_id     // Catch:{ Exception -> 0x43f0 }
            int r1 = (r3 > r26 ? 1 : (r3 == r26 ? 0 : -1))
            if (r1 != 0) goto L_0x14a5
            org.telegram.tgnet.TLRPC$Peer r1 = r8.peer_id     // Catch:{ Exception -> 0x147e }
            long r3 = r12.admin_id     // Catch:{ Exception -> 0x147e }
            r1.user_id = r3     // Catch:{ Exception -> 0x147e }
            goto L_0x14ab
        L_0x147e:
            r0 = move-exception
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r33 = r6
            r10 = r12
            r5 = r13
            r12 = r14
            r32 = r18
            r7 = r19
            r29 = r30
            r15 = r35
            r30 = r38
            r6 = r85
            r18 = r89
            r14 = r8
            r8 = r100
            goto L_0x45cb
        L_0x14a5:
            org.telegram.tgnet.TLRPC$Peer r1 = r8.peer_id     // Catch:{ Exception -> 0x43f0 }
            long r3 = r12.participant_id     // Catch:{ Exception -> 0x43f0 }
            r1.user_id = r3     // Catch:{ Exception -> 0x43f0 }
        L_0x14ab:
            if (r100 == 0) goto L_0x14b2
            r5 = r100
            r8.ttl = r5     // Catch:{ Exception -> 0x1562 }
            goto L_0x14ce
        L_0x14b2:
            r5 = r100
            int r1 = r12.ttl     // Catch:{ Exception -> 0x43b5 }
            r8.ttl = r1     // Catch:{ Exception -> 0x43b5 }
            int r1 = r8.ttl     // Catch:{ Exception -> 0x43b5 }
            if (r1 == 0) goto L_0x14ce
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r8.media     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x14ce
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r8.media     // Catch:{ Exception -> 0x1562 }
            int r3 = r8.ttl     // Catch:{ Exception -> 0x1562 }
            r1.ttl_seconds = r3     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r8.media     // Catch:{ Exception -> 0x1562 }
            int r3 = r1.flags     // Catch:{ Exception -> 0x1562 }
            r4 = 4
            r3 = r3 | r4
            r1.flags = r3     // Catch:{ Exception -> 0x1562 }
        L_0x14ce:
            int r1 = r8.ttl     // Catch:{ Exception -> 0x43b5 }
            if (r1 == 0) goto L_0x1555
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r8.media     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x1555
            boolean r1 = org.telegram.messenger.MessageObject.isVoiceMessage(r8)     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x1513
            r1 = 0
            r3 = 0
        L_0x14e0:
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r8.media     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$Document r4 = r4.document     // Catch:{ Exception -> 0x1562 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r4 = r4.attributes     // Catch:{ Exception -> 0x1562 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x1562 }
            if (r3 >= r4) goto L_0x1506
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r8.media     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$Document r4 = r4.document     // Catch:{ Exception -> 0x1562 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r4 = r4.attributes     // Catch:{ Exception -> 0x1562 }
            java.lang.Object r4 = r4.get(r3)     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$DocumentAttribute r4 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r4     // Catch:{ Exception -> 0x1562 }
            r100 = r1
            boolean r1 = r4 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeAudio     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x1501
            int r1 = r4.duration     // Catch:{ Exception -> 0x1562 }
            goto L_0x1508
        L_0x1501:
            int r3 = r3 + 1
            r1 = r100
            goto L_0x14e0
        L_0x1506:
            r100 = r1
        L_0x1508:
            int r3 = r8.ttl     // Catch:{ Exception -> 0x1562 }
            int r4 = r1 + 1
            int r3 = java.lang.Math.max(r3, r4)     // Catch:{ Exception -> 0x1562 }
            r8.ttl = r3     // Catch:{ Exception -> 0x1562 }
            goto L_0x1520
        L_0x1513:
            boolean r1 = org.telegram.messenger.MessageObject.isVideoMessage(r8)     // Catch:{ Exception -> 0x1562 }
            if (r1 != 0) goto L_0x1521
            boolean r1 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r8)     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x1520
            goto L_0x1521
        L_0x1520:
            goto L_0x1555
        L_0x1521:
            r1 = 0
            r3 = 0
        L_0x1523:
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r8.media     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$Document r4 = r4.document     // Catch:{ Exception -> 0x1562 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r4 = r4.attributes     // Catch:{ Exception -> 0x1562 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x1562 }
            if (r3 >= r4) goto L_0x1549
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r8.media     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$Document r4 = r4.document     // Catch:{ Exception -> 0x1562 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r4 = r4.attributes     // Catch:{ Exception -> 0x1562 }
            java.lang.Object r4 = r4.get(r3)     // Catch:{ Exception -> 0x1562 }
            org.telegram.tgnet.TLRPC$DocumentAttribute r4 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r4     // Catch:{ Exception -> 0x1562 }
            r100 = r1
            boolean r1 = r4 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeVideo     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x1544
            int r1 = r4.duration     // Catch:{ Exception -> 0x1562 }
            goto L_0x154b
        L_0x1544:
            int r3 = r3 + 1
            r1 = r100
            goto L_0x1523
        L_0x1549:
            r100 = r1
        L_0x154b:
            int r3 = r8.ttl     // Catch:{ Exception -> 0x1562 }
            int r4 = r1 + 1
            int r3 = java.lang.Math.max(r3, r4)     // Catch:{ Exception -> 0x1562 }
            r8.ttl = r3     // Catch:{ Exception -> 0x1562 }
        L_0x1555:
            boolean r1 = org.telegram.messenger.MessageObject.isVoiceMessage(r8)     // Catch:{ Exception -> 0x43b5 }
            if (r1 != 0) goto L_0x158b
            boolean r1 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r8)     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x158e
            goto L_0x158b
        L_0x1562:
            r0 = move-exception
            r21 = r86
            r65 = r87
            r71 = r88
            r49 = r90
            r53 = r91
            r66 = r93
            r1 = r0
            r11 = r2
            r33 = r6
            r10 = r12
            r32 = r18
            r7 = r19
            r29 = r30
            r30 = r38
            r6 = r85
            r18 = r89
            r81 = r8
            r8 = r5
            r5 = r13
            r12 = r14
            r15 = r35
            r14 = r81
            goto L_0x45cb
        L_0x158b:
            r1 = 1
            r8.media_unread = r1     // Catch:{ Exception -> 0x43b5 }
        L_0x158e:
            org.telegram.tgnet.TLRPC$Peer r1 = r8.from_id     // Catch:{ Exception -> 0x43b5 }
            if (r1 != 0) goto L_0x1596
            org.telegram.tgnet.TLRPC$Peer r1 = r8.peer_id     // Catch:{ Exception -> 0x1562 }
            r8.from_id = r1     // Catch:{ Exception -> 0x1562 }
        L_0x1596:
            r3 = 1
            r8.send_state = r3     // Catch:{ Exception -> 0x43b5 }
            r43 = 0
            r1 = 0
            if (r13 == 0) goto L_0x15d9
            java.lang.String r4 = "groupId"
            java.lang.Object r4 = r13.get(r4)     // Catch:{ Exception -> 0x1562 }
            java.lang.String r4 = (java.lang.String) r4     // Catch:{ Exception -> 0x1562 }
            if (r4 == 0) goto L_0x15c5
            java.lang.Long r31 = org.telegram.messenger.Utilities.parseLong(r4)     // Catch:{ Exception -> 0x1562 }
            long r47 = r31.longValue()     // Catch:{ Exception -> 0x1562 }
            r43 = r47
            r100 = r4
            r3 = r43
            r8.grouped_id = r3     // Catch:{ Exception -> 0x1562 }
            r109 = r1
            int r1 = r8.flags     // Catch:{ Exception -> 0x1562 }
            r36 = 131072(0x20000, float:1.83671E-40)
            r1 = r1 | r36
            r8.flags = r1     // Catch:{ Exception -> 0x1562 }
            r43 = r3
            goto L_0x15c9
        L_0x15c5:
            r109 = r1
            r100 = r4
        L_0x15c9:
            java.lang.String r1 = "final"
            java.lang.Object r1 = r13.get(r1)     // Catch:{ Exception -> 0x1562 }
            if (r1 == 0) goto L_0x15d3
            r1 = 1
            goto L_0x15d4
        L_0x15d3:
            r1 = 0
        L_0x15d4:
            r36 = r1
            r3 = r43
            goto L_0x15df
        L_0x15d9:
            r109 = r1
            r36 = r109
            r3 = r43
        L_0x15df:
            org.telegram.messenger.MessageObject r43 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x43b5 }
            int r1 = r2.currentAccount     // Catch:{ Exception -> 0x43b5 }
            r44 = 1
            r47 = 1
            r49 = r90
            r48 = r1
            r1 = r43
            r2 = r48
            r50 = r3
            r52 = r40
            r4 = r91
            r3 = r8
            r53 = r4
            r21 = r30
            r54 = r41
            r4 = r98
            r10 = r5
            r30 = r38
            r5 = r44
            r11 = r35
            r34 = r6
            r7 = r102
            r6 = r47
            r1.<init>((int) r2, (org.telegram.tgnet.TLRPC.Message) r3, (org.telegram.messenger.MessageObject) r4, (boolean) r5, (boolean) r6)     // Catch:{ Exception -> 0x4380 }
            r6 = r43
            r5 = r110
            r6.sendAnimationData = r5     // Catch:{ Exception -> 0x4349 }
            r4 = 1
            r6.wasJustSent = r4     // Catch:{ Exception -> 0x4349 }
            if (r9 == 0) goto L_0x161b
            r3 = 1
            goto L_0x161c
        L_0x161b:
            r3 = 0
        L_0x161c:
            r6.scheduled = r3     // Catch:{ Exception -> 0x4349 }
            boolean r1 = r6.isForwarded()     // Catch:{ Exception -> 0x4349 }
            if (r1 != 0) goto L_0x1662
            int r1 = r6.type     // Catch:{ Exception -> 0x163d }
            r2 = 3
            if (r1 == r2) goto L_0x1631
            if (r89 != 0) goto L_0x1631
            int r1 = r6.type     // Catch:{ Exception -> 0x163d }
            r3 = 2
            if (r1 != r3) goto L_0x1663
            goto L_0x1632
        L_0x1631:
            r3 = 2
        L_0x1632:
            java.lang.String r1 = r8.attachPath     // Catch:{ Exception -> 0x163d }
            boolean r1 = android.text.TextUtils.isEmpty(r1)     // Catch:{ Exception -> 0x163d }
            if (r1 != 0) goto L_0x1663
            r6.attachPathExists = r4     // Catch:{ Exception -> 0x163d }
            goto L_0x1663
        L_0x163d:
            r0 = move-exception
            r65 = r87
            r71 = r88
            r66 = r93
            r1 = r0
            r7 = r6
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r6 = r85
            r21 = r86
            r18 = r89
            r81 = r11
            r11 = r84
            r82 = r14
            r14 = r8
            r8 = r10
            r15 = r81
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x1662:
            r3 = 2
        L_0x1663:
            org.telegram.messenger.VideoEditedInfo r1 = r6.videoEditedInfo     // Catch:{ Exception -> 0x4349 }
            if (r1 == 0) goto L_0x166d
            if (r89 != 0) goto L_0x166d
            org.telegram.messenger.VideoEditedInfo r1 = r6.videoEditedInfo     // Catch:{ Exception -> 0x163d }
            r2 = r1
            goto L_0x166f
        L_0x166d:
            r2 = r89
        L_0x166f:
            r4 = r50
            int r1 = (r4 > r16 ? 1 : (r4 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x1728
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x1701 }
            r1.<init>()     // Catch:{ Exception -> 0x1701 }
            r1.add(r6)     // Catch:{ Exception -> 0x1701 }
            java.util.ArrayList r19 = new java.util.ArrayList     // Catch:{ Exception -> 0x1701 }
            r19.<init>()     // Catch:{ Exception -> 0x1701 }
            r89 = r19
            r3 = r89
            r3.add(r8)     // Catch:{ Exception -> 0x1701 }
            r89 = r2
            r100 = r10
            r10 = r84
            int r2 = r10.currentAccount     // Catch:{ Exception -> 0x16d9 }
            org.telegram.messenger.MessagesStorage r55 = org.telegram.messenger.MessagesStorage.getInstance(r2)     // Catch:{ Exception -> 0x16d9 }
            r57 = 0
            r58 = 1
            r59 = 0
            r60 = 0
            if (r9 == 0) goto L_0x16a2
            r61 = 1
            goto L_0x16a4
        L_0x16a2:
            r61 = 0
        L_0x16a4:
            r56 = r3
            r55.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r56, (boolean) r57, (boolean) r58, (boolean) r59, (int) r60, (boolean) r61)     // Catch:{ Exception -> 0x16d9 }
            int r2 = r10.currentAccount     // Catch:{ Exception -> 0x16d9 }
            org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r2)     // Catch:{ Exception -> 0x16d9 }
            if (r9 == 0) goto L_0x16b5
            r29 = r3
            r3 = 1
            goto L_0x16b8
        L_0x16b5:
            r29 = r3
            r3 = 0
        L_0x16b8:
            r2.updateInterfaceWithMessages(r14, r1, r3)     // Catch:{ Exception -> 0x16d9 }
            if (r9 != 0) goto L_0x16d0
            int r2 = r10.currentAccount     // Catch:{ Exception -> 0x16d9 }
            org.telegram.messenger.NotificationCenter r2 = org.telegram.messenger.NotificationCenter.getInstance(r2)     // Catch:{ Exception -> 0x16d9 }
            int r3 = org.telegram.messenger.NotificationCenter.dialogsNeedReload     // Catch:{ Exception -> 0x16d9 }
            r91 = r1
            r90 = r6
            r6 = 0
            java.lang.Object[] r1 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x1755 }
            r2.postNotificationName(r3, r1)     // Catch:{ Exception -> 0x1755 }
            goto L_0x16d5
        L_0x16d0:
            r91 = r1
            r90 = r6
            r6 = 0
        L_0x16d5:
            r6 = r20
            goto L_0x17c8
        L_0x16d9:
            r0 = move-exception
            r90 = r6
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r66 = r93
            r1 = r0
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r81 = r8
            r8 = r100
            r82 = r14
            r14 = r81
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x1701:
            r0 = move-exception
            r89 = r2
            r90 = r6
            r100 = r10
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r66 = r93
            r1 = r0
            r10 = r12
            r5 = r13
            r12 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r14 = r8
            r15 = r11
            r11 = r84
            r8 = r100
            goto L_0x45cb
        L_0x1728:
            r89 = r2
            r90 = r6
            r100 = r10
            r6 = 0
            r10 = r84
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x4312 }
            r1.<init>()     // Catch:{ Exception -> 0x4312 }
            java.lang.String r2 = "group_"
            r1.append(r2)     // Catch:{ Exception -> 0x4312 }
            r1.append(r4)     // Catch:{ Exception -> 0x4312 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x4312 }
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages     // Catch:{ Exception -> 0x4312 }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x4312 }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x4312 }
            if (r2 == 0) goto L_0x177b
            java.lang.Object r3 = r2.get(r6)     // Catch:{ Exception -> 0x1755 }
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r3     // Catch:{ Exception -> 0x1755 }
            r20 = r3
            goto L_0x177b
        L_0x1755:
            r0 = move-exception
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r66 = r93
            r1 = r0
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r81 = r8
            r8 = r100
            r82 = r14
            r14 = r81
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x177b:
            if (r20 != 0) goto L_0x17b5
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x1755 }
            r3.<init>(r14)     // Catch:{ Exception -> 0x1755 }
            r3.initForGroup(r4)     // Catch:{ Exception -> 0x178d }
            r3.encryptedChat = r12     // Catch:{ Exception -> 0x178d }
            if (r9 == 0) goto L_0x178a
            r6 = 1
        L_0x178a:
            r3.scheduled = r6     // Catch:{ Exception -> 0x178d }
            goto L_0x17b7
        L_0x178d:
            r0 = move-exception
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r66 = r93
            r1 = r0
            r20 = r3
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r81 = r8
            r8 = r100
            r82 = r14
            r14 = r81
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x17b5:
            r3 = r20
        L_0x17b7:
            r6 = 0
            r3.performMediaUpload = r6     // Catch:{ Exception -> 0x42d9 }
            r6 = 0
            r3.photoSize = r6     // Catch:{ Exception -> 0x42d9 }
            r3.videoEditedInfo = r6     // Catch:{ Exception -> 0x42d9 }
            r3.httpLocation = r6     // Catch:{ Exception -> 0x42d9 }
            if (r36 == 0) goto L_0x17c7
            int r6 = r8.id     // Catch:{ Exception -> 0x178d }
            r3.finalGroupMessage = r6     // Catch:{ Exception -> 0x178d }
        L_0x17c7:
            r6 = r3
        L_0x17c8:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ Exception -> 0x429e }
            if (r1 == 0) goto L_0x185f
            if (r11 == 0) goto L_0x185b
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1833 }
            r1.<init>()     // Catch:{ Exception -> 0x1833 }
            java.lang.String r2 = "send message user_id = "
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            long r2 = r11.user_id     // Catch:{ Exception -> 0x1833 }
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r2 = " chat_id = "
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            long r2 = r11.chat_id     // Catch:{ Exception -> 0x1833 }
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r2 = " channel_id = "
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            long r2 = r11.channel_id     // Catch:{ Exception -> 0x1833 }
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r2 = " access_hash = "
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            long r2 = r11.access_hash     // Catch:{ Exception -> 0x1833 }
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r2 = " notify = "
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            r3 = r106
            r1.append(r3)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r2 = " silent = "
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            int r2 = r10.currentAccount     // Catch:{ Exception -> 0x1833 }
            android.content.SharedPreferences r2 = org.telegram.messenger.MessagesController.getNotificationsSettings(r2)     // Catch:{ Exception -> 0x1833 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1833 }
            r3.<init>()     // Catch:{ Exception -> 0x1833 }
            r50 = r4
            java.lang.String r4 = "silent_"
            r3.append(r4)     // Catch:{ Exception -> 0x1833 }
            r3.append(r14)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x1833 }
            r5 = 0
            boolean r2 = r2.getBoolean(r3, r5)     // Catch:{ Exception -> 0x1833 }
            r1.append(r2)     // Catch:{ Exception -> 0x1833 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x1833 }
            org.telegram.messenger.FileLog.d(r1)     // Catch:{ Exception -> 0x1833 }
            goto L_0x1862
        L_0x1833:
            r0 = move-exception
            r65 = r87
            r71 = r88
            r7 = r90
            r66 = r93
            r1 = r0
            r20 = r6
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r6 = r85
            r21 = r86
            r18 = r89
            r81 = r8
            r8 = r100
            r82 = r14
            r14 = r81
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r82
            goto L_0x45cb
        L_0x185b:
            r50 = r4
            r5 = 0
            goto L_0x1862
        L_0x185f:
            r50 = r4
            r5 = 0
        L_0x1862:
            r20 = 0
            if (r93 == 0) goto L_0x3f7c
            r4 = r93
            r1 = 9
            if (r4 != r1) goto L_0x1899
            if (r88 == 0) goto L_0x1899
            if (r12 == 0) goto L_0x1899
            r65 = r87
            r71 = r88
            r7 = r90
            r3 = r105
            r37 = r6
            r5 = r8
            r72 = r11
            r32 = r18
            r29 = r21
            r33 = r34
            r24 = r46
            r43 = r50
            r31 = r53
            r90 = r85
            r21 = r86
            r18 = r89
            r11 = r10
            r10 = r12
            r35 = r25
            r25 = r13
            r13 = r9
            r8 = r14
            goto L_0x3fa5
        L_0x1899:
            r1 = 1
            if (r4 < r1) goto L_0x18b1
            r1 = 3
            if (r4 <= r1) goto L_0x18a0
            goto L_0x18b1
        L_0x18a0:
            r15 = r86
            r65 = r87
            r93 = r90
            r14 = r4
            r64 = r6
            r10 = r8
            r86 = r11
            r62 = r50
            r11 = 1
            goto L_0x1CLASSNAME
        L_0x18b1:
            r1 = 5
            if (r4 < r1) goto L_0x18b8
            r1 = 8
            if (r4 <= r1) goto L_0x18a0
        L_0x18b8:
            r1 = 9
            if (r4 != r1) goto L_0x18be
            if (r12 != 0) goto L_0x18a0
        L_0x18be:
            r1 = 10
            if (r4 == r1) goto L_0x1CLASSNAME
            r1 = 11
            if (r4 != r1) goto L_0x18c7
            goto L_0x18a0
        L_0x18c7:
            r1 = 4
            if (r4 != r1) goto L_0x1af1
            org.telegram.tgnet.TLRPC$TL_messages_forwardMessages r1 = new org.telegram.tgnet.TLRPC$TL_messages_forwardMessages     // Catch:{ Exception -> 0x1ac6 }
            r1.<init>()     // Catch:{ Exception -> 0x1ac6 }
            r3 = r1
            r3.to_peer = r11     // Catch:{ Exception -> 0x1ac6 }
            org.telegram.tgnet.TLRPC$Message r1 = r7.messageOwner     // Catch:{ Exception -> 0x1ac6 }
            boolean r1 = r1.with_my_score     // Catch:{ Exception -> 0x1ac6 }
            r3.with_my_score = r1     // Catch:{ Exception -> 0x1ac6 }
            if (r13 == 0) goto L_0x19a6
            r1 = r54
            boolean r2 = r13.containsKey(r1)     // Catch:{ Exception -> 0x197f }
            if (r2 == 0) goto L_0x19a6
            java.lang.Object r1 = r13.get(r1)     // Catch:{ Exception -> 0x197f }
            java.lang.CharSequence r1 = (java.lang.CharSequence) r1     // Catch:{ Exception -> 0x197f }
            java.lang.Integer r1 = org.telegram.messenger.Utilities.parseInt(r1)     // Catch:{ Exception -> 0x197f }
            int r1 = r1.intValue()     // Catch:{ Exception -> 0x197f }
            r2 = 1
            r3.drop_author = r2     // Catch:{ Exception -> 0x197f }
            java.lang.String r2 = "fwd_peer"
            java.lang.Object r2 = r13.get(r2)     // Catch:{ Exception -> 0x197f }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ Exception -> 0x197f }
            java.lang.Long r2 = org.telegram.messenger.Utilities.parseLong(r2)     // Catch:{ Exception -> 0x197f }
            long r28 = r2.longValue()     // Catch:{ Exception -> 0x197f }
            r108 = r28
            r91 = r6
            r5 = r108
            int r2 = (r5 > r16 ? 1 : (r5 == r16 ? 0 : -1))
            if (r2 >= 0) goto L_0x1969
            org.telegram.messenger.MessagesController r2 = r84.getMessagesController()     // Catch:{ Exception -> 0x1944 }
            long r14 = -r5
            java.lang.Long r14 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x1944 }
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r14)     // Catch:{ Exception -> 0x1944 }
            boolean r14 = org.telegram.messenger.ChatObject.isChannel(r2)     // Catch:{ Exception -> 0x1944 }
            if (r14 == 0) goto L_0x1938
            org.telegram.tgnet.TLRPC$TL_inputPeerChannel r14 = new org.telegram.tgnet.TLRPC$TL_inputPeerChannel     // Catch:{ Exception -> 0x1944 }
            r14.<init>()     // Catch:{ Exception -> 0x1944 }
            r3.from_peer = r14     // Catch:{ Exception -> 0x1944 }
            org.telegram.tgnet.TLRPC$InputPeer r14 = r3.from_peer     // Catch:{ Exception -> 0x1944 }
            r93 = r4
            r108 = r5
            long r4 = r2.id     // Catch:{ Exception -> 0x19c0 }
            r14.channel_id = r4     // Catch:{ Exception -> 0x19c0 }
            org.telegram.tgnet.TLRPC$InputPeer r4 = r3.from_peer     // Catch:{ Exception -> 0x19c0 }
            long r5 = r2.access_hash     // Catch:{ Exception -> 0x19c0 }
            r4.access_hash = r5     // Catch:{ Exception -> 0x19c0 }
            goto L_0x1943
        L_0x1938:
            r93 = r4
            r108 = r5
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r4 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty     // Catch:{ Exception -> 0x19c0 }
            r4.<init>()     // Catch:{ Exception -> 0x19c0 }
            r3.from_peer = r4     // Catch:{ Exception -> 0x19c0 }
        L_0x1943:
            goto L_0x1974
        L_0x1944:
            r0 = move-exception
            r93 = r4
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r20 = r91
            r66 = r93
            r1 = r0
            r14 = r8
            r15 = r11
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r8 = r100
            r11 = r10
            r10 = r12
            r12 = r95
            goto L_0x45cb
        L_0x1969:
            r93 = r4
            r108 = r5
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r2 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty     // Catch:{ Exception -> 0x19c0 }
            r2.<init>()     // Catch:{ Exception -> 0x19c0 }
            r3.from_peer = r2     // Catch:{ Exception -> 0x19c0 }
        L_0x1974:
            java.util.ArrayList<java.lang.Integer> r2 = r3.id     // Catch:{ Exception -> 0x19c0 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x19c0 }
            r2.add(r4)     // Catch:{ Exception -> 0x19c0 }
            goto L_0x19b1
        L_0x197f:
            r0 = move-exception
            r93 = r4
            r91 = r6
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r20 = r91
            r66 = r93
            r1 = r0
            r14 = r8
            r15 = r11
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r8 = r100
            r11 = r10
            r10 = r12
            r12 = r95
            goto L_0x45cb
        L_0x19a6:
            r93 = r4
            r91 = r6
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r1 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty     // Catch:{ Exception -> 0x1a9b }
            r1.<init>()     // Catch:{ Exception -> 0x1a9b }
            r3.from_peer = r1     // Catch:{ Exception -> 0x1a9b }
        L_0x19b1:
            boolean r1 = r8.silent     // Catch:{ Exception -> 0x1a9b }
            r3.silent = r1     // Catch:{ Exception -> 0x1a9b }
            if (r9 == 0) goto L_0x19e3
            r3.schedule_date = r9     // Catch:{ Exception -> 0x19c0 }
            int r1 = r3.flags     // Catch:{ Exception -> 0x19c0 }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r3.flags = r1     // Catch:{ Exception -> 0x19c0 }
            goto L_0x19e3
        L_0x19c0:
            r0 = move-exception
            r6 = r85
            r65 = r87
            r71 = r88
            r7 = r90
            r20 = r91
            r66 = r93
            r1 = r0
            r14 = r8
            r15 = r11
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r21 = r86
            r18 = r89
            r8 = r100
            r11 = r10
            r10 = r12
            r12 = r95
            goto L_0x45cb
        L_0x19e3:
            java.util.ArrayList<java.lang.Long> r1 = r3.random_id     // Catch:{ Exception -> 0x1a9b }
            long r4 = r8.random_id     // Catch:{ Exception -> 0x1a9b }
            java.lang.Long r2 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x1a9b }
            r1.add(r2)     // Catch:{ Exception -> 0x1a9b }
            int r1 = r102.getId()     // Catch:{ Exception -> 0x1a9b }
            if (r1 < 0) goto L_0x1a02
            java.util.ArrayList<java.lang.Integer> r1 = r3.id     // Catch:{ Exception -> 0x19c0 }
            int r2 = r102.getId()     // Catch:{ Exception -> 0x19c0 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x19c0 }
            r1.add(r2)     // Catch:{ Exception -> 0x19c0 }
            goto L_0x1a2b
        L_0x1a02:
            org.telegram.tgnet.TLRPC$Message r1 = r7.messageOwner     // Catch:{ Exception -> 0x1a9b }
            int r1 = r1.fwd_msg_id     // Catch:{ Exception -> 0x1a9b }
            if (r1 == 0) goto L_0x1a16
            java.util.ArrayList<java.lang.Integer> r1 = r3.id     // Catch:{ Exception -> 0x19c0 }
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner     // Catch:{ Exception -> 0x19c0 }
            int r2 = r2.fwd_msg_id     // Catch:{ Exception -> 0x19c0 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x19c0 }
            r1.add(r2)     // Catch:{ Exception -> 0x19c0 }
            goto L_0x1a2b
        L_0x1a16:
            org.telegram.tgnet.TLRPC$Message r1 = r7.messageOwner     // Catch:{ Exception -> 0x1a9b }
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r1.fwd_from     // Catch:{ Exception -> 0x1a9b }
            if (r1 == 0) goto L_0x1a2b
            java.util.ArrayList<java.lang.Integer> r1 = r3.id     // Catch:{ Exception -> 0x19c0 }
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner     // Catch:{ Exception -> 0x19c0 }
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from     // Catch:{ Exception -> 0x19c0 }
            int r2 = r2.channel_post     // Catch:{ Exception -> 0x19c0 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x19c0 }
            r1.add(r2)     // Catch:{ Exception -> 0x19c0 }
        L_0x1a2b:
            r4 = 0
            r5 = 0
            if (r9 == 0) goto L_0x1a31
            r14 = 1
            goto L_0x1a32
        L_0x1a31:
            r14 = 0
        L_0x1a32:
            r1 = r84
            r15 = r89
            r6 = 1
            r2 = r3
            r16 = r3
            r3 = r90
            r43 = r93
            r62 = r50
            r17 = 0
            r93 = r90
            r64 = r91
            r6 = r85
            r65 = r87
            r66 = r43
            r7 = r13
            r10 = r8
            r15 = r86
            r8 = r14
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x1a7b }
            r39 = r85
            r14 = r88
            r19 = r93
            r16 = r10
            r10 = r12
            r9 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r37 = r64
            r28 = r65
            r38 = r66
            r18 = r89
            r12 = r95
            r21 = r15
            r15 = r11
            r11 = r84
            goto L_0x41e7
        L_0x1a7b:
            r0 = move-exception
            r6 = r85
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r14 = r10
            r10 = r12
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r12 = r95
            r21 = r15
            r15 = r11
            r11 = r84
            goto L_0x45cb
        L_0x1a9b:
            r0 = move-exception
            r15 = r86
            r65 = r87
            r64 = r91
            r66 = r93
            r10 = r8
            r93 = r90
            r6 = r85
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r14 = r10
            r10 = r12
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r12 = r95
            r21 = r15
            r15 = r11
            r11 = r84
            goto L_0x45cb
        L_0x1ac6:
            r0 = move-exception
            r15 = r86
            r65 = r87
            r93 = r90
            r66 = r4
            r64 = r6
            r10 = r8
            r6 = r85
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r14 = r10
            r10 = r12
            r5 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r12 = r95
            r21 = r15
            r15 = r11
            r11 = r84
            goto L_0x45cb
        L_0x1af1:
            r15 = r86
            r65 = r87
            r93 = r90
            r66 = r4
            r64 = r6
            r10 = r8
            r62 = r50
            r14 = r66
            r1 = 9
            if (r14 != r1) goto L_0x1c3f
            org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult r1 = new org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult     // Catch:{ Exception -> 0x1c1a }
            r1.<init>()     // Catch:{ Exception -> 0x1c1a }
            r8 = r1
            r8.peer = r11     // Catch:{ Exception -> 0x1c1a }
            long r1 = r10.random_id     // Catch:{ Exception -> 0x1c1a }
            r8.random_id = r1     // Catch:{ Exception -> 0x1c1a }
            org.telegram.tgnet.TLRPC$Peer r1 = r10.from_id     // Catch:{ Exception -> 0x1c1a }
            if (r1 == 0) goto L_0x1b43
            org.telegram.messenger.MessagesController r1 = r84.getMessagesController()     // Catch:{ Exception -> 0x1b21 }
            org.telegram.tgnet.TLRPC$Peer r2 = r10.from_id     // Catch:{ Exception -> 0x1b21 }
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((org.telegram.tgnet.TLRPC.Peer) r2)     // Catch:{ Exception -> 0x1b21 }
            r8.send_as = r1     // Catch:{ Exception -> 0x1b21 }
            goto L_0x1b43
        L_0x1b21:
            r0 = move-exception
            r6 = r85
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r5 = r13
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r14 = r10
            r10 = r12
            r21 = r15
            r12 = r95
            r15 = r11
            r11 = r84
            goto L_0x45cb
        L_0x1b43:
            r1 = r108
            boolean r1 = r13.containsKey(r1)     // Catch:{ Exception -> 0x1c1a }
            if (r1 != 0) goto L_0x1b4d
            r3 = 1
            goto L_0x1b4e
        L_0x1b4d:
            r3 = 0
        L_0x1b4e:
            r8.hide_via = r3     // Catch:{ Exception -> 0x1c1a }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1c1a }
            if (r1 == 0) goto L_0x1b67
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1b21 }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x1b21 }
            if (r1 == 0) goto L_0x1b67
            int r1 = r8.flags     // Catch:{ Exception -> 0x1b21 }
            r7 = 1
            r1 = r1 | r7
            r8.flags = r1     // Catch:{ Exception -> 0x1b21 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1b21 }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x1b21 }
            r8.reply_to_msg_id = r1     // Catch:{ Exception -> 0x1b21 }
            goto L_0x1b68
        L_0x1b67:
            r7 = 1
        L_0x1b68:
            boolean r1 = r10.silent     // Catch:{ Exception -> 0x1c1a }
            r8.silent = r1     // Catch:{ Exception -> 0x1c1a }
            if (r9 == 0) goto L_0x1b76
            r8.schedule_date = r9     // Catch:{ Exception -> 0x1b21 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x1b21 }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r8.flags = r1     // Catch:{ Exception -> 0x1b21 }
        L_0x1b76:
            r1 = r32
            java.lang.Object r1 = r13.get(r1)     // Catch:{ Exception -> 0x1c1a }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x1c1a }
            java.lang.Long r1 = org.telegram.messenger.Utilities.parseLong(r1)     // Catch:{ Exception -> 0x1c1a }
            long r1 = r1.longValue()     // Catch:{ Exception -> 0x1c1a }
            r8.query_id = r1     // Catch:{ Exception -> 0x1c1a }
            java.lang.String r1 = "id"
            java.lang.Object r1 = r13.get(r1)     // Catch:{ Exception -> 0x1c1a }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x1c1a }
            r8.id = r1     // Catch:{ Exception -> 0x1c1a }
            if (r102 != 0) goto L_0x1bcd
            r8.clear_draft = r7     // Catch:{ Exception -> 0x1b21 }
            org.telegram.messenger.MediaDataController r1 = r84.getMediaDataController()     // Catch:{ Exception -> 0x1b21 }
            if (r99 == 0) goto L_0x1ba1
            int r3 = r99.getId()     // Catch:{ Exception -> 0x1b21 }
            goto L_0x1ba2
        L_0x1ba1:
            r3 = 0
        L_0x1ba2:
            r5 = r95
            r4 = 0
            r1.cleanDraft(r5, r3, r4)     // Catch:{ Exception -> 0x1ba9 }
            goto L_0x1bd0
        L_0x1ba9:
            r0 = move-exception
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r14 = r10
            r10 = r12
            r21 = r15
            r15 = r11
            r11 = r84
            r81 = r5
            r6 = r85
            r5 = r13
            r12 = r81
            goto L_0x45cb
        L_0x1bcd:
            r5 = r95
            r4 = 0
        L_0x1bd0:
            r16 = 0
            r17 = 0
            if (r9 == 0) goto L_0x1bd9
            r19 = 1
            goto L_0x1bdb
        L_0x1bd9:
            r19 = 0
        L_0x1bdb:
            r1 = r84
            r2 = r8
            r3 = r93
            r86 = r11
            r11 = 0
            r4 = r16
            r5 = r17
            r6 = r85
            r11 = 1
            r7 = r13
            r16 = r8
            r8 = r19
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x1d10 }
            r11 = r84
            r39 = r85
            r19 = r93
            r16 = r10
            r10 = r12
            r9 = r13
            r38 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r37 = r64
            r28 = r65
            r14 = r88
            r18 = r89
            r12 = r95
            r21 = r15
            r15 = r86
            goto L_0x41e7
        L_0x1c1a:
            r0 = move-exception
            r86 = r11
            r11 = r84
            r6 = r85
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r5 = r13
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r14 = r10
            r10 = r12
            r21 = r15
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x1c3f:
            r86 = r11
            r11 = r84
            r39 = r85
            r19 = r93
            r16 = r10
            r10 = r12
            r9 = r13
            r38 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r37 = r64
            r28 = r65
            r14 = r88
            r18 = r89
            r12 = r95
            r21 = r15
            r15 = r86
            goto L_0x41e7
        L_0x1CLASSNAME:
            r15 = r86
            r65 = r87
            r93 = r90
            r14 = r4
            r64 = r6
            r10 = r8
            r86 = r11
            r62 = r50
            r11 = 1
        L_0x1CLASSNAME:
            if (r12 != 0) goto L_0x2var_
            r1 = 0
            if (r14 != r11) goto L_0x1d33
            boolean r2 = r15 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaVenue     // Catch:{ Exception -> 0x1d10 }
            if (r2 == 0) goto L_0x1c9d
            org.telegram.tgnet.TLRPC$TL_inputMediaVenue r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaVenue     // Catch:{ Exception -> 0x1d10 }
            r2.<init>()     // Catch:{ Exception -> 0x1d10 }
            r1 = r2
            java.lang.String r2 = r15.address     // Catch:{ Exception -> 0x1d10 }
            r1.address = r2     // Catch:{ Exception -> 0x1d10 }
            java.lang.String r2 = r15.title     // Catch:{ Exception -> 0x1d10 }
            r1.title = r2     // Catch:{ Exception -> 0x1d10 }
            java.lang.String r2 = r15.provider     // Catch:{ Exception -> 0x1d10 }
            r1.provider = r2     // Catch:{ Exception -> 0x1d10 }
            java.lang.String r2 = r15.venue_id     // Catch:{ Exception -> 0x1d10 }
            r1.venue_id = r2     // Catch:{ Exception -> 0x1d10 }
            r2 = r33
            r1.venue_type = r2     // Catch:{ Exception -> 0x1d10 }
            r7 = 2
            goto L_0x1cd6
        L_0x1c9d:
            boolean r2 = r15 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGeoLive     // Catch:{ Exception -> 0x1d10 }
            if (r2 == 0) goto L_0x1ccf
            org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive     // Catch:{ Exception -> 0x1d10 }
            r2.<init>()     // Catch:{ Exception -> 0x1d10 }
            r1 = r2
            int r2 = r15.period     // Catch:{ Exception -> 0x1d10 }
            r1.period = r2     // Catch:{ Exception -> 0x1d10 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1d10 }
            r7 = 2
            r2 = r2 | r7
            r1.flags = r2     // Catch:{ Exception -> 0x1d10 }
            int r2 = r15.heading     // Catch:{ Exception -> 0x1d10 }
            if (r2 == 0) goto L_0x1cbf
            int r2 = r15.heading     // Catch:{ Exception -> 0x1d10 }
            r1.heading = r2     // Catch:{ Exception -> 0x1d10 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1d10 }
            r3 = 4
            r2 = r2 | r3
            r1.flags = r2     // Catch:{ Exception -> 0x1d10 }
        L_0x1cbf:
            int r2 = r15.proximity_notification_radius     // Catch:{ Exception -> 0x1d10 }
            if (r2 == 0) goto L_0x1cd6
            int r2 = r15.proximity_notification_radius     // Catch:{ Exception -> 0x1d10 }
            r1.proximity_notification_radius = r2     // Catch:{ Exception -> 0x1d10 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1d10 }
            r3 = 8
            r2 = r2 | r3
            r1.flags = r2     // Catch:{ Exception -> 0x1d10 }
            goto L_0x1cd6
        L_0x1ccf:
            r7 = 2
            org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint     // Catch:{ Exception -> 0x1d10 }
            r2.<init>()     // Catch:{ Exception -> 0x1d10 }
            r1 = r2
        L_0x1cd6:
            org.telegram.tgnet.TLRPC$TL_inputGeoPoint r2 = new org.telegram.tgnet.TLRPC$TL_inputGeoPoint     // Catch:{ Exception -> 0x1d10 }
            r2.<init>()     // Catch:{ Exception -> 0x1d10 }
            r1.geo_point = r2     // Catch:{ Exception -> 0x1d10 }
            org.telegram.tgnet.TLRPC$InputGeoPoint r2 = r1.geo_point     // Catch:{ Exception -> 0x1d10 }
            org.telegram.tgnet.TLRPC$GeoPoint r3 = r15.geo     // Catch:{ Exception -> 0x1d10 }
            double r3 = r3.lat     // Catch:{ Exception -> 0x1d10 }
            r2.lat = r3     // Catch:{ Exception -> 0x1d10 }
            org.telegram.tgnet.TLRPC$InputGeoPoint r2 = r1.geo_point     // Catch:{ Exception -> 0x1d10 }
            org.telegram.tgnet.TLRPC$GeoPoint r3 = r15.geo     // Catch:{ Exception -> 0x1d10 }
            double r3 = r3._long     // Catch:{ Exception -> 0x1d10 }
            r2._long = r3     // Catch:{ Exception -> 0x1d10 }
            r11 = r84
            r19 = r89
            r7 = r93
            r3 = r9
            r6 = r10
            r91 = r12
            r66 = r14
            r31 = r15
            r32 = r18
            r9 = r25
            r5 = r64
            r8 = r65
            r18 = 2
            r10 = r85
            r14 = r97
            r15 = r1
            r25 = r13
            r12 = r95
            goto L_0x2a15
        L_0x1d10:
            r0 = move-exception
            r11 = r84
            r6 = r85
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r5 = r13
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r18 = r89
            r14 = r10
            r10 = r12
            r21 = r15
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x1d33:
            r2 = r33
            r7 = 2
            if (r14 == r7) goto L_0x2817
            r3 = 9
            if (r14 != r3) goto L_0x1d61
            r6 = r65
            if (r6 == 0) goto L_0x1d63
            r11 = r84
            r19 = r89
            r7 = r93
            r8 = r100
            r89 = r1
            r65 = r6
            r3 = r9
            r29 = r10
            r91 = r12
            r31 = r15
            r32 = r18
            r9 = r25
            r5 = r49
            r10 = r85
            r15 = r14
            r14 = r13
            r12 = r95
            goto L_0x2834
        L_0x1d61:
            r6 = r65
        L_0x1d63:
            java.lang.String r3 = "query"
            r4 = 3
            if (r14 != r4) goto L_0x21b8
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x2187 }
            r2.<init>()     // Catch:{ Exception -> 0x2187 }
            r5 = r49
            java.lang.String r4 = r5.mime_type     // Catch:{ Exception -> 0x2156 }
            r2.mime_type = r4     // Catch:{ Exception -> 0x2156 }
            java.util.ArrayList r4 = r5.attributes     // Catch:{ Exception -> 0x2156 }
            r2.attributes = r4     // Catch:{ Exception -> 0x2156 }
            if (r23 != 0) goto L_0x1db9
            boolean r4 = org.telegram.messenger.MessageObject.isRoundVideoDocument(r5)     // Catch:{ Exception -> 0x1d90 }
            if (r4 != 0) goto L_0x1d8c
            if (r89 == 0) goto L_0x1db9
            r4 = r89
            boolean r8 = r4.muted     // Catch:{ Exception -> 0x1dc7 }
            if (r8 != 0) goto L_0x1dee
            boolean r8 = r4.roundVideo     // Catch:{ Exception -> 0x1dc7 }
            if (r8 != 0) goto L_0x1dee
            goto L_0x1dbb
        L_0x1d8c:
            r4 = r89
            goto L_0x1dee
        L_0x1d90:
            r0 = move-exception
            r4 = r89
            r11 = r84
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r49 = r5
            r65 = r6
            r5 = r13
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r6 = r85
            r18 = r4
            r14 = r10
            r10 = r12
            r21 = r15
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x1db9:
            r4 = r89
        L_0x1dbb:
            r2.nosound_video = r11     // Catch:{ Exception -> 0x2127 }
            boolean r8 = org.telegram.messenger.BuildVars.DEBUG_VERSION     // Catch:{ Exception -> 0x2127 }
            if (r8 == 0) goto L_0x1dee
            java.lang.String r8 = "nosound_video = true"
            org.telegram.messenger.FileLog.d(r8)     // Catch:{ Exception -> 0x1dc7 }
            goto L_0x1dee
        L_0x1dc7:
            r0 = move-exception
            r11 = r84
            r71 = r88
            r7 = r93
            r8 = r100
            r1 = r0
            r49 = r5
            r65 = r6
            r5 = r13
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r6 = r85
            r18 = r4
            r14 = r10
            r10 = r12
            r21 = r15
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x1dee:
            if (r100 == 0) goto L_0x1e21
            r8 = r100
            r2.ttl_seconds = r8     // Catch:{ Exception -> 0x1dfc }
            r10.ttl = r8     // Catch:{ Exception -> 0x1dfc }
            int r11 = r2.flags     // Catch:{ Exception -> 0x1dfc }
            r11 = r11 | r7
            r2.flags = r11     // Catch:{ Exception -> 0x1dfc }
            goto L_0x1e23
        L_0x1dfc:
            r0 = move-exception
            r11 = r84
            r71 = r88
            r7 = r93
            r1 = r0
            r49 = r5
            r65 = r6
            r5 = r13
            r66 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r20 = r64
            r6 = r85
            r18 = r4
            r14 = r10
            r10 = r12
            r21 = r15
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x1e21:
            r8 = r100
        L_0x1e23:
            if (r13 == 0) goto L_0x1ef9
            java.lang.String r11 = "masks"
            java.lang.Object r11 = r13.get(r11)     // Catch:{ Exception -> 0x1ecf }
            java.lang.String r11 = (java.lang.String) r11     // Catch:{ Exception -> 0x1ecf }
            if (r11 == 0) goto L_0x1ec6
            org.telegram.tgnet.SerializedData r7 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x1ecf }
            r89 = r1
            byte[] r1 = org.telegram.messenger.Utilities.hexToBytes(r11)     // Catch:{ Exception -> 0x1ecf }
            r7.<init>((byte[]) r1)     // Catch:{ Exception -> 0x1ecf }
            r1 = r7
            r7 = 0
            int r19 = r1.readInt32(r7)     // Catch:{ Exception -> 0x1ecf }
            r7 = r19
            r19 = 0
            r29 = r10
            r10 = r19
        L_0x1e48:
            if (r10 >= r7) goto L_0x1e8f
            r90 = r7
            java.util.ArrayList r7 = r2.stickers     // Catch:{ Exception -> 0x1e67 }
            r91 = r11
            r31 = r15
            r11 = 0
            int r15 = r1.readInt32(r11)     // Catch:{ Exception -> 0x1ea0 }
            org.telegram.tgnet.TLRPC$InputDocument r15 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r1, r15, r11)     // Catch:{ Exception -> 0x1ea0 }
            r7.add(r15)     // Catch:{ Exception -> 0x1ea0 }
            int r10 = r10 + 1
            r7 = r90
            r11 = r91
            r15 = r31
            goto L_0x1e48
        L_0x1e67:
            r0 = move-exception
            r31 = r15
            r11 = r84
            r15 = r86
            r71 = r88
            r7 = r93
            r1 = r0
            r49 = r5
            r65 = r6
            r10 = r12
            r5 = r13
            r66 = r14
            r32 = r18
            r14 = r29
            r33 = r34
            r20 = r64
            r6 = r85
            r12 = r95
            r18 = r4
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x1e8f:
            r90 = r7
            r91 = r11
            r31 = r15
            int r7 = r2.flags     // Catch:{ Exception -> 0x1ea0 }
            r10 = 1
            r7 = r7 | r10
            r2.flags = r7     // Catch:{ Exception -> 0x1ea0 }
            r1.cleanup()     // Catch:{ Exception -> 0x1ea0 }
            goto L_0x1eff
        L_0x1ea0:
            r0 = move-exception
            r11 = r84
            r15 = r86
            r71 = r88
            r7 = r93
            r1 = r0
            r49 = r5
            r65 = r6
            r10 = r12
            r5 = r13
            r66 = r14
            r32 = r18
            r14 = r29
            r33 = r34
            r20 = r64
            r6 = r85
            r12 = r95
            r18 = r4
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x1ec6:
            r89 = r1
            r29 = r10
            r91 = r11
            r31 = r15
            goto L_0x1eff
        L_0x1ecf:
            r0 = move-exception
            r29 = r10
            r31 = r15
            r11 = r84
            r15 = r86
            r71 = r88
            r7 = r93
            r1 = r0
            r49 = r5
            r65 = r6
            r10 = r12
            r5 = r13
            r66 = r14
            r32 = r18
            r14 = r29
            r33 = r34
            r20 = r64
            r6 = r85
            r12 = r95
            r18 = r4
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x1ef9:
            r89 = r1
            r29 = r10
            r31 = r15
        L_0x1eff:
            long r10 = r5.access_hash     // Catch:{ Exception -> 0x20fb }
            int r1 = (r10 > r16 ? 1 : (r10 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x1f0b
            r1 = r2
            r20 = 1
            r3 = r20
            goto L_0x1f4f
        L_0x1f0b:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x20fb }
            r1.<init>()     // Catch:{ Exception -> 0x20fb }
            org.telegram.tgnet.TLRPC$TL_inputDocument r7 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x20fb }
            r7.<init>()     // Catch:{ Exception -> 0x20fb }
            r1.id = r7     // Catch:{ Exception -> 0x20fb }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r1.id     // Catch:{ Exception -> 0x20fb }
            long r10 = r5.id     // Catch:{ Exception -> 0x20fb }
            r7.id = r10     // Catch:{ Exception -> 0x20fb }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r1.id     // Catch:{ Exception -> 0x20fb }
            long r10 = r5.access_hash     // Catch:{ Exception -> 0x20fb }
            r7.access_hash = r10     // Catch:{ Exception -> 0x20fb }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r1.id     // Catch:{ Exception -> 0x20fb }
            byte[] r10 = r5.file_reference     // Catch:{ Exception -> 0x20fb }
            r7.file_reference = r10     // Catch:{ Exception -> 0x20fb }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r1.id     // Catch:{ Exception -> 0x20fb }
            byte[] r7 = r7.file_reference     // Catch:{ Exception -> 0x20fb }
            if (r7 != 0) goto L_0x1var_
            org.telegram.tgnet.TLRPC$InputDocument r7 = r1.id     // Catch:{ Exception -> 0x1ea0 }
            r10 = 0
            byte[] r11 = new byte[r10]     // Catch:{ Exception -> 0x1ea0 }
            r7.file_reference = r11     // Catch:{ Exception -> 0x1ea0 }
        L_0x1var_:
            if (r13 == 0) goto L_0x1f4c
            boolean r7 = r13.containsKey(r3)     // Catch:{ Exception -> 0x1ea0 }
            if (r7 == 0) goto L_0x1f4c
            java.lang.Object r3 = r13.get(r3)     // Catch:{ Exception -> 0x1ea0 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x1ea0 }
            r1.query = r3     // Catch:{ Exception -> 0x1ea0 }
            int r3 = r1.flags     // Catch:{ Exception -> 0x1ea0 }
            r7 = 2
            r3 = r3 | r7
            r1.flags = r3     // Catch:{ Exception -> 0x1ea0 }
        L_0x1f4c:
            r3 = r1
            r3 = r20
        L_0x1f4f:
            r10 = r64
            if (r10 != 0) goto L_0x2085
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x205b }
            r11 = r84
            r91 = r12
            r90 = r13
            r15 = r29
            r12 = r95
            r7.<init>(r12)     // Catch:{ Exception -> 0x2038 }
            r10 = 1
            r7.type = r10     // Catch:{ Exception -> 0x2015 }
            r10 = r93
            r7.obj = r10     // Catch:{ Exception -> 0x1ff0 }
            r89 = r1
            r1 = r25
            r7.originalPath = r1     // Catch:{ Exception -> 0x1fc9 }
            r65 = r6
            r6 = r85
            r7.parentObject = r6     // Catch:{ Exception -> 0x1fa6 }
            if (r9 == 0) goto L_0x1f7b
            r93 = r10
            r10 = 1
            goto L_0x1f7e
        L_0x1f7b:
            r93 = r10
            r10 = 0
        L_0x1f7e:
            r7.scheduled = r10     // Catch:{ Exception -> 0x1var_ }
            r10 = r7
            r7 = r93
            goto L_0x2099
        L_0x1var_:
            r0 = move-exception
            r71 = r88
            r10 = r91
            r25 = r1
            r49 = r5
            r20 = r7
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r7 = r93
            r1 = r0
            r18 = r4
            goto L_0x45cb
        L_0x1fa6:
            r0 = move-exception
            r93 = r10
            r71 = r88
            r10 = r91
            r25 = r1
            r49 = r5
            r20 = r7
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r7 = r93
            r1 = r0
            r18 = r4
            goto L_0x45cb
        L_0x1fc9:
            r0 = move-exception
            r65 = r6
            r93 = r10
            r6 = r85
            r71 = r88
            r10 = r91
            r25 = r1
            r49 = r5
            r20 = r7
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r7 = r93
            r1 = r0
            r18 = r4
            goto L_0x45cb
        L_0x1ff0:
            r0 = move-exception
            r65 = r6
            r93 = r10
            r6 = r85
            r71 = r88
            r10 = r91
            r1 = r0
            r49 = r5
            r20 = r7
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r7 = r93
            r18 = r4
            goto L_0x45cb
        L_0x2015:
            r0 = move-exception
            r65 = r6
            r6 = r85
            r71 = r88
            r10 = r91
            r1 = r0
            r49 = r5
            r20 = r7
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r7 = r93
            r18 = r4
            goto L_0x45cb
        L_0x2038:
            r0 = move-exception
            r7 = r93
            r65 = r6
            r6 = r85
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r10
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r10 = r91
            r18 = r4
            goto L_0x45cb
        L_0x205b:
            r0 = move-exception
            r7 = r93
            r65 = r6
            r90 = r13
            r15 = r29
            r6 = r85
            r11 = r84
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r10
            r10 = r12
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r12 = r95
            r18 = r4
            goto L_0x45cb
        L_0x2085:
            r11 = r84
            r7 = r93
            r89 = r1
            r65 = r6
            r91 = r12
            r90 = r13
            r1 = r25
            r15 = r29
            r6 = r85
            r12 = r95
        L_0x2099:
            r10.inputUploadMedia = r2     // Catch:{ Exception -> 0x20dc }
            r10.performMediaUpload = r3     // Catch:{ Exception -> 0x20dc }
            r85 = r2
            java.util.ArrayList r2 = r5.thumbs     // Catch:{ Exception -> 0x20dc }
            boolean r2 = r2.isEmpty()     // Catch:{ Exception -> 0x20dc }
            if (r2 != 0) goto L_0x20bb
            java.util.ArrayList r2 = r5.thumbs     // Catch:{ Exception -> 0x20dc }
            r19 = r3
            r3 = 0
            java.lang.Object r2 = r2.get(r3)     // Catch:{ Exception -> 0x20dc }
            org.telegram.tgnet.TLRPC$PhotoSize r2 = (org.telegram.tgnet.TLRPC.PhotoSize) r2     // Catch:{ Exception -> 0x20dc }
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x20dc }
            if (r3 != 0) goto L_0x20bd
            r10.photoSize = r2     // Catch:{ Exception -> 0x20dc }
            r10.locationParent = r5     // Catch:{ Exception -> 0x20dc }
            goto L_0x20bd
        L_0x20bb:
            r19 = r3
        L_0x20bd:
            r10.videoEditedInfo = r4     // Catch:{ Exception -> 0x20dc }
            r25 = r90
            r49 = r5
            r100 = r8
            r3 = r9
            r5 = r10
            r66 = r14
            r32 = r18
            r20 = r19
            r8 = r65
            r18 = 2
            r14 = r97
            r9 = r1
            r19 = r4
            r10 = r6
            r6 = r15
            r15 = r89
            goto L_0x2a15
        L_0x20dc:
            r0 = move-exception
            r71 = r88
            r25 = r1
            r49 = r5
            r20 = r10
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r10 = r91
            r1 = r0
            r18 = r4
            goto L_0x45cb
        L_0x20fb:
            r0 = move-exception
            r7 = r93
            r65 = r6
            r90 = r13
            r15 = r29
            r10 = r64
            r6 = r85
            r11 = r84
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r10
            r10 = r12
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r12 = r95
            r18 = r4
            goto L_0x45cb
        L_0x2127:
            r0 = move-exception
            r7 = r93
            r8 = r100
            r65 = r6
            r90 = r13
            r31 = r15
            r6 = r85
            r15 = r10
            r10 = r64
            r11 = r84
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r10
            r10 = r12
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r12 = r95
            r18 = r4
            goto L_0x45cb
        L_0x2156:
            r0 = move-exception
            r4 = r89
            r7 = r93
            r8 = r100
            r65 = r6
            r90 = r13
            r31 = r15
            r6 = r85
            r15 = r10
            r10 = r64
            r11 = r84
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r10
            r10 = r12
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r12 = r95
            r18 = r4
            goto L_0x45cb
        L_0x2187:
            r0 = move-exception
            r4 = r89
            r7 = r93
            r8 = r100
            r65 = r6
            r90 = r13
            r31 = r15
            r5 = r49
            r6 = r85
            r15 = r10
            r10 = r64
            r11 = r84
            r71 = r88
            r1 = r0
            r20 = r10
            r10 = r12
            r66 = r14
            r14 = r15
            r32 = r18
            r29 = r21
            r21 = r31
            r33 = r34
            r15 = r86
            r5 = r90
            r12 = r95
            r18 = r4
            goto L_0x45cb
        L_0x21b8:
            r11 = r84
            r4 = r89
            r7 = r93
            r8 = r100
            r89 = r1
            r65 = r6
            r91 = r12
            r90 = r13
            r31 = r15
            r1 = r25
            r5 = r49
            r6 = r85
            r12 = r95
            r15 = r10
            r10 = r64
            r19 = r4
            r4 = 6
            if (r14 != r4) goto L_0x227e
            org.telegram.tgnet.TLRPC$TL_inputMediaContact r3 = new org.telegram.tgnet.TLRPC$TL_inputMediaContact     // Catch:{ Exception -> 0x225b }
            r3.<init>()     // Catch:{ Exception -> 0x225b }
            r64 = r10
            r4 = r53
            java.lang.String r10 = r4.phone     // Catch:{ Exception -> 0x223a }
            r3.phone_number = r10     // Catch:{ Exception -> 0x223a }
            java.lang.String r10 = r4.first_name     // Catch:{ Exception -> 0x223a }
            r3.first_name = r10     // Catch:{ Exception -> 0x223a }
            java.lang.String r10 = r4.last_name     // Catch:{ Exception -> 0x223a }
            r3.last_name = r10     // Catch:{ Exception -> 0x223a }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r10 = r4.restriction_reason     // Catch:{ Exception -> 0x223a }
            boolean r10 = r10.isEmpty()     // Catch:{ Exception -> 0x223a }
            if (r10 != 0) goto L_0x221a
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r10 = r4.restriction_reason     // Catch:{ Exception -> 0x223a }
            r25 = r1
            r1 = 0
            java.lang.Object r10 = r10.get(r1)     // Catch:{ Exception -> 0x22b8 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r10 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r10     // Catch:{ Exception -> 0x22b8 }
            java.lang.String r1 = r10.text     // Catch:{ Exception -> 0x22b8 }
            java.lang.String r10 = "BEGIN:VCARD"
            boolean r1 = r1.startsWith(r10)     // Catch:{ Exception -> 0x22b8 }
            if (r1 == 0) goto L_0x221c
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r1 = r4.restriction_reason     // Catch:{ Exception -> 0x22b8 }
            r2 = 0
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x22b8 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r1 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r1     // Catch:{ Exception -> 0x22b8 }
            java.lang.String r1 = r1.text     // Catch:{ Exception -> 0x22b8 }
            r3.vcard = r1     // Catch:{ Exception -> 0x22b8 }
            goto L_0x221e
        L_0x221a:
            r25 = r1
        L_0x221c:
            r3.vcard = r2     // Catch:{ Exception -> 0x22b8 }
        L_0x221e:
            r53 = r4
            r49 = r5
            r10 = r6
            r100 = r8
            r66 = r14
            r6 = r15
            r32 = r18
            r5 = r64
            r8 = r65
            r18 = 2
            r14 = r97
            r15 = r3
            r3 = r9
            r9 = r25
            r25 = r90
            goto L_0x2a15
        L_0x223a:
            r0 = move-exception
            r71 = r88
            r10 = r91
            r25 = r1
            r53 = r4
            r49 = r5
            r66 = r14
            r14 = r15
            r32 = r18
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r5 = r90
            r1 = r0
            goto L_0x45cb
        L_0x225b:
            r0 = move-exception
            r64 = r10
            r4 = r53
            r71 = r88
            r10 = r91
            r25 = r1
            r49 = r5
            r66 = r14
            r14 = r15
            r32 = r18
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r5 = r90
            r1 = r0
            goto L_0x45cb
        L_0x227e:
            r25 = r1
            r64 = r10
            r4 = r53
            r1 = 7
            if (r14 == r1) goto L_0x25b5
            r1 = 9
            if (r14 != r1) goto L_0x229a
            r9 = r88
            r53 = r4
            r29 = r15
            r2 = r18
            r18 = r6
            r15 = r14
            r14 = r90
            goto L_0x25c2
        L_0x229a:
            r1 = 8
            if (r14 != r1) goto L_0x2401
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x23de }
            r1.<init>()     // Catch:{ Exception -> 0x23de }
            java.lang.String r2 = r5.mime_type     // Catch:{ Exception -> 0x23de }
            r1.mime_type = r2     // Catch:{ Exception -> 0x23de }
            java.util.ArrayList r2 = r5.attributes     // Catch:{ Exception -> 0x23de }
            r1.attributes = r2     // Catch:{ Exception -> 0x23de }
            if (r8 == 0) goto L_0x22d7
            r1.ttl_seconds = r8     // Catch:{ Exception -> 0x22b8 }
            r15.ttl = r8     // Catch:{ Exception -> 0x22b8 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x22b8 }
            r10 = 2
            r2 = r2 | r10
            r1.flags = r2     // Catch:{ Exception -> 0x22b8 }
            goto L_0x22d7
        L_0x22b8:
            r0 = move-exception
            r71 = r88
            r10 = r91
            r1 = r0
            r53 = r4
            r49 = r5
            r66 = r14
            r14 = r15
            r32 = r18
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r5 = r90
            goto L_0x45cb
        L_0x22d7:
            r66 = r14
            r29 = r15
            long r14 = r5.access_hash     // Catch:{ Exception -> 0x23bf }
            int r2 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r2 != 0) goto L_0x22ea
            r2 = r1
            r20 = 1
            r14 = r90
            r3 = r20
            goto L_0x2352
        L_0x22ea:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x23bf }
            r2.<init>()     // Catch:{ Exception -> 0x23bf }
            org.telegram.tgnet.TLRPC$TL_inputDocument r10 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x23bf }
            r10.<init>()     // Catch:{ Exception -> 0x23bf }
            r2.id = r10     // Catch:{ Exception -> 0x23bf }
            org.telegram.tgnet.TLRPC$InputDocument r10 = r2.id     // Catch:{ Exception -> 0x23bf }
            long r14 = r5.id     // Catch:{ Exception -> 0x23bf }
            r10.id = r14     // Catch:{ Exception -> 0x23bf }
            org.telegram.tgnet.TLRPC$InputDocument r10 = r2.id     // Catch:{ Exception -> 0x23bf }
            long r14 = r5.access_hash     // Catch:{ Exception -> 0x23bf }
            r10.access_hash = r14     // Catch:{ Exception -> 0x23bf }
            org.telegram.tgnet.TLRPC$InputDocument r10 = r2.id     // Catch:{ Exception -> 0x23bf }
            byte[] r14 = r5.file_reference     // Catch:{ Exception -> 0x23bf }
            r10.file_reference = r14     // Catch:{ Exception -> 0x23bf }
            org.telegram.tgnet.TLRPC$InputDocument r10 = r2.id     // Catch:{ Exception -> 0x23bf }
            byte[] r10 = r10.file_reference     // Catch:{ Exception -> 0x23bf }
            if (r10 != 0) goto L_0x2334
            org.telegram.tgnet.TLRPC$InputDocument r10 = r2.id     // Catch:{ Exception -> 0x2316 }
            r14 = 0
            byte[] r15 = new byte[r14]     // Catch:{ Exception -> 0x2316 }
            r10.file_reference = r15     // Catch:{ Exception -> 0x2316 }
            goto L_0x2334
        L_0x2316:
            r0 = move-exception
            r15 = r86
            r71 = r88
            r10 = r91
            r1 = r0
            r53 = r4
            r49 = r5
            r32 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r5 = r90
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2334:
            if (r90 == 0) goto L_0x234d
            r14 = r90
            boolean r10 = r14.containsKey(r3)     // Catch:{ Exception -> 0x23a2 }
            if (r10 == 0) goto L_0x234f
            java.lang.Object r3 = r14.get(r3)     // Catch:{ Exception -> 0x23a2 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x23a2 }
            r2.query = r3     // Catch:{ Exception -> 0x23a2 }
            int r3 = r2.flags     // Catch:{ Exception -> 0x23a2 }
            r10 = 2
            r3 = r3 | r10
            r2.flags = r3     // Catch:{ Exception -> 0x23a2 }
            goto L_0x234f
        L_0x234d:
            r14 = r90
        L_0x234f:
            r3 = r2
            r3 = r20
        L_0x2352:
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r10 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x23a2 }
            r10.<init>(r12)     // Catch:{ Exception -> 0x23a2 }
            r15 = 3
            r10.type = r15     // Catch:{ Exception -> 0x2385 }
            r10.obj = r7     // Catch:{ Exception -> 0x2385 }
            r10.parentObject = r6     // Catch:{ Exception -> 0x2385 }
            r10.inputUploadMedia = r1     // Catch:{ Exception -> 0x2385 }
            r10.performMediaUpload = r3     // Catch:{ Exception -> 0x2385 }
            if (r9 == 0) goto L_0x2366
            r15 = 1
            goto L_0x2367
        L_0x2366:
            r15 = 0
        L_0x2367:
            r10.scheduled = r15     // Catch:{ Exception -> 0x2385 }
            r15 = r2
            r20 = r3
            r53 = r4
            r49 = r5
            r100 = r8
            r3 = r9
            r5 = r10
            r32 = r18
            r9 = r25
            r8 = r65
            r18 = 2
            r10 = r6
            r25 = r14
            r6 = r29
            r14 = r97
            goto L_0x2a15
        L_0x2385:
            r0 = move-exception
            r15 = r86
            r71 = r88
            r1 = r0
            r53 = r4
            r49 = r5
            r20 = r10
            r5 = r14
            r32 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x23a2:
            r0 = move-exception
            r15 = r86
            r71 = r88
            r10 = r91
            r1 = r0
            r53 = r4
            r49 = r5
            r5 = r14
            r32 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x23bf:
            r0 = move-exception
            r14 = r90
            r15 = r86
            r71 = r88
            r10 = r91
            r1 = r0
            r53 = r4
            r49 = r5
            r5 = r14
            r32 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x23de:
            r0 = move-exception
            r66 = r14
            r29 = r15
            r14 = r90
            r15 = r86
            r71 = r88
            r10 = r91
            r1 = r0
            r53 = r4
            r49 = r5
            r5 = r14
            r32 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2401:
            r66 = r14
            r29 = r15
            r14 = r90
            r1 = 10
            r15 = r66
            if (r15 != r1) goto L_0x2522
            org.telegram.tgnet.TLRPC$TL_inputMediaPoll r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaPoll     // Catch:{ Exception -> 0x24ff }
            r1.<init>()     // Catch:{ Exception -> 0x24ff }
            r2 = r18
            org.telegram.tgnet.TLRPC$Poll r3 = r2.poll     // Catch:{ Exception -> 0x24de }
            r1.poll = r3     // Catch:{ Exception -> 0x24de }
            if (r14 == 0) goto L_0x247d
            java.lang.String r3 = "answers"
            boolean r3 = r14.containsKey(r3)     // Catch:{ Exception -> 0x24de }
            if (r3 == 0) goto L_0x247d
            java.lang.String r3 = "answers"
            java.lang.Object r3 = r14.get(r3)     // Catch:{ Exception -> 0x24de }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x24de }
            byte[] r3 = org.telegram.messenger.Utilities.hexToBytes(r3)     // Catch:{ Exception -> 0x24de }
            int r10 = r3.length     // Catch:{ Exception -> 0x24de }
            if (r10 <= 0) goto L_0x2478
            r10 = 0
        L_0x2432:
            r53 = r4
            int r4 = r3.length     // Catch:{ Exception -> 0x2459 }
            if (r10 >= r4) goto L_0x2450
            java.util.ArrayList<byte[]> r4 = r1.correct_answers     // Catch:{ Exception -> 0x2459 }
            r18 = r6
            r9 = 1
            byte[] r6 = new byte[r9]     // Catch:{ Exception -> 0x24bf }
            byte r9 = r3[r10]     // Catch:{ Exception -> 0x24bf }
            r24 = 0
            r6[r24] = r9     // Catch:{ Exception -> 0x24bf }
            r4.add(r6)     // Catch:{ Exception -> 0x24bf }
            int r10 = r10 + 1
            r9 = r107
            r6 = r18
            r4 = r53
            goto L_0x2432
        L_0x2450:
            r18 = r6
            int r4 = r1.flags     // Catch:{ Exception -> 0x24bf }
            r6 = 1
            r4 = r4 | r6
            r1.flags = r4     // Catch:{ Exception -> 0x24bf }
            goto L_0x2481
        L_0x2459:
            r0 = move-exception
            r18 = r6
            r71 = r88
            r10 = r91
            r1 = r0
            r32 = r2
            r49 = r5
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2478:
            r53 = r4
            r18 = r6
            goto L_0x2481
        L_0x247d:
            r53 = r4
            r18 = r6
        L_0x2481:
            org.telegram.tgnet.TLRPC$PollResults r3 = r2.results     // Catch:{ Exception -> 0x24bf }
            if (r3 == 0) goto L_0x24a1
            org.telegram.tgnet.TLRPC$PollResults r3 = r2.results     // Catch:{ Exception -> 0x24bf }
            java.lang.String r3 = r3.solution     // Catch:{ Exception -> 0x24bf }
            boolean r3 = android.text.TextUtils.isEmpty(r3)     // Catch:{ Exception -> 0x24bf }
            if (r3 != 0) goto L_0x24a1
            org.telegram.tgnet.TLRPC$PollResults r3 = r2.results     // Catch:{ Exception -> 0x24bf }
            java.lang.String r3 = r3.solution     // Catch:{ Exception -> 0x24bf }
            r1.solution = r3     // Catch:{ Exception -> 0x24bf }
            org.telegram.tgnet.TLRPC$PollResults r3 = r2.results     // Catch:{ Exception -> 0x24bf }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r3 = r3.solution_entities     // Catch:{ Exception -> 0x24bf }
            r1.solution_entities = r3     // Catch:{ Exception -> 0x24bf }
            int r3 = r1.flags     // Catch:{ Exception -> 0x24bf }
            r4 = 2
            r3 = r3 | r4
            r1.flags = r3     // Catch:{ Exception -> 0x24bf }
        L_0x24a1:
            r3 = r107
            r32 = r2
            r49 = r5
            r100 = r8
            r66 = r15
            r10 = r18
            r9 = r25
            r6 = r29
            r5 = r64
            r8 = r65
            r18 = 2
            r15 = r1
            r25 = r14
            r14 = r97
            goto L_0x2a15
        L_0x24bf:
            r0 = move-exception
            r71 = r88
            r10 = r91
            r1 = r0
            r32 = r2
            r49 = r5
            r5 = r14
            r66 = r15
            r6 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x24de:
            r0 = move-exception
            r53 = r4
            r18 = r6
            r71 = r88
            r10 = r91
            r1 = r0
            r32 = r2
            r49 = r5
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x24ff:
            r0 = move-exception
            r53 = r4
            r2 = r18
            r18 = r6
            r71 = r88
            r10 = r91
            r1 = r0
            r32 = r2
            r49 = r5
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2522:
            r53 = r4
            r2 = r18
            r18 = r6
            r1 = 11
            if (r15 != r1) goto L_0x2595
            org.telegram.tgnet.TLRPC$TL_inputMediaDice r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaDice     // Catch:{ Exception -> 0x2574 }
            r1.<init>()     // Catch:{ Exception -> 0x2574 }
            r9 = r88
            r1.emoticon = r9     // Catch:{ Exception -> 0x2555 }
            r3 = r1
            r32 = r2
            r49 = r5
            r100 = r8
            r88 = r9
            r66 = r15
            r10 = r18
            r9 = r25
            r6 = r29
            r5 = r64
            r8 = r65
            r18 = 2
            r15 = r3
            r25 = r14
            r14 = r97
            r3 = r107
            goto L_0x2a15
        L_0x2555:
            r0 = move-exception
            r10 = r91
            r1 = r0
            r32 = r2
            r49 = r5
            r71 = r9
            r5 = r14
            r66 = r15
            r6 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2574:
            r0 = move-exception
            r9 = r88
            r10 = r91
            r1 = r0
            r32 = r2
            r49 = r5
            r71 = r9
            r5 = r14
            r66 = r15
            r6 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2595:
            r9 = r88
            r3 = r107
            r32 = r2
            r49 = r5
            r100 = r8
            r66 = r15
            r10 = r18
            r9 = r25
            r6 = r29
            r5 = r64
            r8 = r65
            r18 = 2
            r15 = r89
            r25 = r14
            r14 = r97
            goto L_0x2a15
        L_0x25b5:
            r9 = r88
            r53 = r4
            r29 = r15
            r2 = r18
            r18 = r6
            r15 = r14
            r14 = r90
        L_0x25c2:
            r1 = 0
            if (r25 != 0) goto L_0x25f9
            r10 = r97
            r32 = r2
            if (r10 != 0) goto L_0x25f6
            r88 = r9
            long r9 = r5.access_hash     // Catch:{ Exception -> 0x25d9 }
            int r2 = (r9 > r16 ? 1 : (r9 == r16 ? 0 : -1))
            if (r2 != 0) goto L_0x25d4
            goto L_0x25fd
        L_0x25d4:
            r2 = 0
            r10 = r29
            goto L_0x2686
        L_0x25d9:
            r0 = move-exception
            r71 = r88
            r10 = r91
            r1 = r0
            r49 = r5
            r5 = r14
            r66 = r15
            r6 = r18
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x25f6:
            r88 = r9
            goto L_0x25fd
        L_0x25f9:
            r32 = r2
            r88 = r9
        L_0x25fd:
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x27f7 }
            r2.<init>()     // Catch:{ Exception -> 0x27f7 }
            if (r8 == 0) goto L_0x262f
            r2.ttl_seconds = r8     // Catch:{ Exception -> 0x2611 }
            r10 = r29
            r10.ttl = r8     // Catch:{ Exception -> 0x2650 }
            int r4 = r2.flags     // Catch:{ Exception -> 0x2650 }
            r6 = 2
            r4 = r4 | r6
            r2.flags = r4     // Catch:{ Exception -> 0x2650 }
            goto L_0x2631
        L_0x2611:
            r0 = move-exception
            r10 = r29
            r71 = r88
            r1 = r0
            r49 = r5
            r5 = r14
            r66 = r15
            r6 = r18
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r14 = r10
            r10 = r91
            goto L_0x45cb
        L_0x262f:
            r10 = r29
        L_0x2631:
            if (r23 != 0) goto L_0x266c
            boolean r4 = android.text.TextUtils.isEmpty(r97)     // Catch:{ Exception -> 0x2650 }
            if (r4 != 0) goto L_0x266f
            java.lang.String r4 = r97.toLowerCase()     // Catch:{ Exception -> 0x2650 }
            java.lang.String r6 = "mp4"
            boolean r4 = r4.endsWith(r6)     // Catch:{ Exception -> 0x2650 }
            if (r4 == 0) goto L_0x266f
            if (r14 == 0) goto L_0x266c
            java.lang.String r4 = "forceDocument"
            boolean r4 = r14.containsKey(r4)     // Catch:{ Exception -> 0x2650 }
            if (r4 == 0) goto L_0x266f
            goto L_0x266c
        L_0x2650:
            r0 = move-exception
            r71 = r88
            r1 = r0
            r49 = r5
            r5 = r14
            r66 = r15
            r6 = r18
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r14 = r10
            r10 = r91
            goto L_0x45cb
        L_0x266c:
            r4 = 1
            r2.nosound_video = r4     // Catch:{ Exception -> 0x27d5 }
        L_0x266f:
            if (r14 == 0) goto L_0x267b
            java.lang.String r4 = "forceDocument"
            boolean r4 = r14.containsKey(r4)     // Catch:{ Exception -> 0x2650 }
            if (r4 == 0) goto L_0x267b
            r4 = 1
            goto L_0x267c
        L_0x267b:
            r4 = 0
        L_0x267c:
            r2.force_file = r4     // Catch:{ Exception -> 0x27d5 }
            java.lang.String r4 = r5.mime_type     // Catch:{ Exception -> 0x27d5 }
            r2.mime_type = r4     // Catch:{ Exception -> 0x27d5 }
            java.util.ArrayList r4 = r5.attributes     // Catch:{ Exception -> 0x27d5 }
            r2.attributes = r4     // Catch:{ Exception -> 0x27d5 }
        L_0x2686:
            r29 = r10
            long r9 = r5.access_hash     // Catch:{ Exception -> 0x27f7 }
            int r4 = (r9 > r16 ? 1 : (r9 == r16 ? 0 : -1))
            if (r4 != 0) goto L_0x2694
            r3 = r2
            boolean r4 = r2 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x25d9 }
            r20 = r4
            goto L_0x26d8
        L_0x2694:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r4 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x27f7 }
            r4.<init>()     // Catch:{ Exception -> 0x27f7 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r6 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x27f7 }
            r6.<init>()     // Catch:{ Exception -> 0x27f7 }
            r4.id = r6     // Catch:{ Exception -> 0x27f7 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x27f7 }
            long r9 = r5.id     // Catch:{ Exception -> 0x27f7 }
            r6.id = r9     // Catch:{ Exception -> 0x27f7 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x27f7 }
            long r9 = r5.access_hash     // Catch:{ Exception -> 0x27f7 }
            r6.access_hash = r9     // Catch:{ Exception -> 0x27f7 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x27f7 }
            byte[] r9 = r5.file_reference     // Catch:{ Exception -> 0x27f7 }
            r6.file_reference = r9     // Catch:{ Exception -> 0x27f7 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x27f7 }
            byte[] r6 = r6.file_reference     // Catch:{ Exception -> 0x27f7 }
            if (r6 != 0) goto L_0x26bf
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x25d9 }
            r9 = 0
            byte[] r10 = new byte[r9]     // Catch:{ Exception -> 0x25d9 }
            r6.file_reference = r10     // Catch:{ Exception -> 0x25d9 }
        L_0x26bf:
            if (r14 == 0) goto L_0x26d5
            boolean r6 = r14.containsKey(r3)     // Catch:{ Exception -> 0x25d9 }
            if (r6 == 0) goto L_0x26d5
            java.lang.Object r3 = r14.get(r3)     // Catch:{ Exception -> 0x25d9 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x25d9 }
            r4.query = r3     // Catch:{ Exception -> 0x25d9 }
            int r3 = r4.flags     // Catch:{ Exception -> 0x25d9 }
            r6 = 2
            r3 = r3 | r6
            r4.flags = r3     // Catch:{ Exception -> 0x25d9 }
        L_0x26d5:
            r3 = r4
            r4 = r20
        L_0x26d8:
            if (r1 != 0) goto L_0x27b0
            if (r2 == 0) goto L_0x27b0
            if (r64 != 0) goto L_0x2763
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r6 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x27f7 }
            r6.<init>(r12)     // Catch:{ Exception -> 0x27f7 }
            r9 = 2
            r6.type = r9     // Catch:{ Exception -> 0x2743 }
            r6.obj = r7     // Catch:{ Exception -> 0x2743 }
            r9 = r25
            r6.originalPath = r9     // Catch:{ Exception -> 0x2721 }
            r10 = r18
            r6.parentObject = r10     // Catch:{ Exception -> 0x2701 }
            r85 = r3
            r3 = r107
            if (r3 == 0) goto L_0x26fa
            r90 = r1
            r1 = 1
            goto L_0x26fd
        L_0x26fa:
            r90 = r1
            r1 = 0
        L_0x26fd:
            r6.scheduled = r1     // Catch:{ Exception -> 0x2792 }
            goto L_0x276f
        L_0x2701:
            r0 = move-exception
            r3 = r107
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r6
            r25 = r9
            r6 = r10
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r15 = r86
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2721:
            r0 = move-exception
            r3 = r107
            r10 = r18
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r6
            r25 = r9
            r6 = r10
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r15 = r86
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2743:
            r0 = move-exception
            r3 = r107
            r10 = r18
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r6
            r6 = r10
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r15 = r86
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2763:
            r90 = r1
            r85 = r3
            r10 = r18
            r9 = r25
            r3 = r107
            r6 = r64
        L_0x276f:
            r6.inputUploadMedia = r2     // Catch:{ Exception -> 0x2792 }
            r6.performMediaUpload = r4     // Catch:{ Exception -> 0x2792 }
            java.util.ArrayList r1 = r5.thumbs     // Catch:{ Exception -> 0x2792 }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x2792 }
            if (r1 != 0) goto L_0x278f
            java.util.ArrayList r1 = r5.thumbs     // Catch:{ Exception -> 0x2792 }
            r93 = r2
            r2 = 0
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x2792 }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = (org.telegram.tgnet.TLRPC.PhotoSize) r1     // Catch:{ Exception -> 0x2792 }
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x2792 }
            if (r2 != 0) goto L_0x27be
            r6.photoSize = r1     // Catch:{ Exception -> 0x2792 }
            r6.locationParent = r5     // Catch:{ Exception -> 0x2792 }
            goto L_0x27be
        L_0x278f:
            r93 = r2
            goto L_0x27be
        L_0x2792:
            r0 = move-exception
            r71 = r88
            r1 = r0
            r49 = r5
            r20 = r6
            r25 = r9
            r6 = r10
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r15 = r86
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x27b0:
            r90 = r1
            r93 = r2
            r85 = r3
            r10 = r18
            r9 = r25
            r3 = r107
            r6 = r64
        L_0x27be:
            r20 = r4
            r49 = r5
            r5 = r6
            r100 = r8
            r25 = r14
            r66 = r15
            r6 = r29
            r8 = r65
            r18 = 2
            r15 = r85
            r14 = r97
            goto L_0x2a15
        L_0x27d5:
            r0 = move-exception
            r3 = r107
            r29 = r10
            r10 = r18
            r71 = r88
            r1 = r0
            r49 = r5
            r6 = r10
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x27f7:
            r0 = move-exception
            r3 = r107
            r10 = r18
            r71 = r88
            r1 = r0
            r49 = r5
            r6 = r10
            r5 = r14
            r66 = r15
            r18 = r19
            r14 = r29
            r33 = r34
            r20 = r64
            r15 = r86
            r10 = r91
            r29 = r21
            r21 = r31
            goto L_0x45cb
        L_0x2817:
            r11 = r84
            r19 = r89
            r7 = r93
            r8 = r100
            r89 = r1
            r3 = r9
            r29 = r10
            r91 = r12
            r31 = r15
            r32 = r18
            r9 = r25
            r5 = r49
            r10 = r85
            r15 = r14
            r14 = r13
            r12 = r95
        L_0x2834:
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto     // Catch:{ Exception -> 0x2var_ }
            r1.<init>()     // Catch:{ Exception -> 0x2var_ }
            if (r8 == 0) goto L_0x2886
            r1.ttl_seconds = r8     // Catch:{ Exception -> 0x2867 }
            r6 = r29
            r6.ttl = r8     // Catch:{ Exception -> 0x284a }
            int r2 = r1.flags     // Catch:{ Exception -> 0x284a }
            r18 = 2
            r2 = r2 | 2
            r1.flags = r2     // Catch:{ Exception -> 0x284a }
            goto L_0x288a
        L_0x284a:
            r0 = move-exception
            r71 = r88
            r1 = r0
            r49 = r5
            r25 = r9
            r5 = r14
            r66 = r15
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r14 = r6
            r6 = r10
            r10 = r91
            goto L_0x45cb
        L_0x2867:
            r0 = move-exception
            r6 = r29
            r71 = r88
            r1 = r0
            r49 = r5
            r25 = r9
            r5 = r14
            r66 = r15
            r18 = r19
            r29 = r21
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r14 = r6
            r6 = r10
            r10 = r91
            goto L_0x45cb
        L_0x2886:
            r6 = r29
            r18 = 2
        L_0x288a:
            if (r14 == 0) goto L_0x2947
            java.lang.String r2 = "masks"
            java.lang.Object r2 = r14.get(r2)     // Catch:{ Exception -> 0x2925 }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ Exception -> 0x2925 }
            if (r2 == 0) goto L_0x291c
            org.telegram.tgnet.SerializedData r4 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x2925 }
            r49 = r5
            byte[] r5 = org.telegram.messenger.Utilities.hexToBytes(r2)     // Catch:{ Exception -> 0x28fc }
            r4.<init>((byte[]) r5)     // Catch:{ Exception -> 0x28fc }
            r5 = 0
            int r24 = r4.readInt32(r5)     // Catch:{ Exception -> 0x28fc }
            r5 = r24
            r24 = 0
            r85 = r2
            r2 = r24
        L_0x28ae:
            if (r2 >= r5) goto L_0x28cd
            r90 = r5
            java.util.ArrayList r5 = r1.stickers     // Catch:{ Exception -> 0x28fc }
            r100 = r8
            r25 = r14
            r8 = 0
            int r14 = r4.readInt32(r8)     // Catch:{ Exception -> 0x28de }
            org.telegram.tgnet.TLRPC$InputDocument r14 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r4, r14, r8)     // Catch:{ Exception -> 0x28de }
            r5.add(r14)     // Catch:{ Exception -> 0x28de }
            int r2 = r2 + 1
            r5 = r90
            r8 = r100
            r14 = r25
            goto L_0x28ae
        L_0x28cd:
            r90 = r5
            r100 = r8
            r25 = r14
            int r2 = r1.flags     // Catch:{ Exception -> 0x28de }
            r5 = 1
            r2 = r2 | r5
            r1.flags = r2     // Catch:{ Exception -> 0x28de }
            r4.cleanup()     // Catch:{ Exception -> 0x28de }
            goto L_0x294d
        L_0x28de:
            r0 = move-exception
            r71 = r88
            r8 = r100
            r1 = r0
            r14 = r6
            r6 = r10
            r66 = r15
            r18 = r19
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r10 = r91
            r25 = r9
            goto L_0x45cb
        L_0x28fc:
            r0 = move-exception
            r100 = r8
            r25 = r14
            r71 = r88
            r1 = r0
            r14 = r6
            r6 = r10
            r66 = r15
            r18 = r19
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r10 = r91
            r25 = r9
            goto L_0x45cb
        L_0x291c:
            r85 = r2
            r49 = r5
            r100 = r8
            r25 = r14
            goto L_0x294d
        L_0x2925:
            r0 = move-exception
            r49 = r5
            r100 = r8
            r25 = r14
            r71 = r88
            r1 = r0
            r14 = r6
            r6 = r10
            r66 = r15
            r18 = r19
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r20 = r64
            r15 = r86
            r10 = r91
            r25 = r9
            goto L_0x45cb
        L_0x2947:
            r49 = r5
            r100 = r8
            r25 = r14
        L_0x294d:
            r8 = r65
            long r4 = r8.access_hash     // Catch:{ Exception -> 0x2f2f }
            int r2 = (r4 > r16 ? 1 : (r4 == r16 ? 0 : -1))
            if (r2 != 0) goto L_0x295d
            r2 = r1
            r20 = 1
            r66 = r15
            r4 = r20
            goto L_0x298d
        L_0x295d:
            org.telegram.tgnet.TLRPC$TL_inputMediaPhoto r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaPhoto     // Catch:{ Exception -> 0x2f2f }
            r2.<init>()     // Catch:{ Exception -> 0x2f2f }
            org.telegram.tgnet.TLRPC$TL_inputPhoto r4 = new org.telegram.tgnet.TLRPC$TL_inputPhoto     // Catch:{ Exception -> 0x2f2f }
            r4.<init>()     // Catch:{ Exception -> 0x2f2f }
            r2.id = r4     // Catch:{ Exception -> 0x2f2f }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r2.id     // Catch:{ Exception -> 0x2f2f }
            r66 = r15
            long r14 = r8.id     // Catch:{ Exception -> 0x2efd }
            r4.id = r14     // Catch:{ Exception -> 0x2efd }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r2.id     // Catch:{ Exception -> 0x2efd }
            long r14 = r8.access_hash     // Catch:{ Exception -> 0x2efd }
            r4.access_hash = r14     // Catch:{ Exception -> 0x2efd }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r2.id     // Catch:{ Exception -> 0x2efd }
            byte[] r5 = r8.file_reference     // Catch:{ Exception -> 0x2efd }
            r4.file_reference = r5     // Catch:{ Exception -> 0x2efd }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r2.id     // Catch:{ Exception -> 0x2efd }
            byte[] r4 = r4.file_reference     // Catch:{ Exception -> 0x2efd }
            if (r4 != 0) goto L_0x298a
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r2.id     // Catch:{ Exception -> 0x29c1 }
            r5 = 0
            byte[] r14 = new byte[r5]     // Catch:{ Exception -> 0x29c1 }
            r4.file_reference = r14     // Catch:{ Exception -> 0x29c1 }
        L_0x298a:
            r4 = r2
            r4 = r20
        L_0x298d:
            if (r64 != 0) goto L_0x29df
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r5 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x29c1 }
            r5.<init>(r12)     // Catch:{ Exception -> 0x29c1 }
            r14 = 0
            r5.type = r14     // Catch:{ Exception -> 0x29a3 }
            r5.obj = r7     // Catch:{ Exception -> 0x29a3 }
            r5.originalPath = r9     // Catch:{ Exception -> 0x29a3 }
            if (r3 == 0) goto L_0x299f
            r14 = 1
            goto L_0x29a0
        L_0x299f:
            r14 = 0
        L_0x29a0:
            r5.scheduled = r14     // Catch:{ Exception -> 0x29a3 }
            goto L_0x29e1
        L_0x29a3:
            r0 = move-exception
            r15 = r86
            r71 = r88
            r1 = r0
            r20 = r5
            r14 = r6
            r65 = r8
            r6 = r10
            r18 = r19
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r10 = r91
            r8 = r100
            r25 = r9
            goto L_0x45cb
        L_0x29c1:
            r0 = move-exception
            r15 = r86
            r71 = r88
            r1 = r0
            r14 = r6
            r65 = r8
            r6 = r10
            r18 = r19
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r20 = r64
            r10 = r91
            r8 = r100
            r25 = r9
            goto L_0x45cb
        L_0x29df:
            r5 = r64
        L_0x29e1:
            r5.inputUploadMedia = r1     // Catch:{ Exception -> 0x2ecb }
            r5.performMediaUpload = r4     // Catch:{ Exception -> 0x2ecb }
            r14 = r97
            if (r14 == 0) goto L_0x29fa
            int r15 = r97.length()     // Catch:{ Exception -> 0x29a3 }
            if (r15 <= 0) goto L_0x29fa
            r15 = r52
            boolean r15 = r14.startsWith(r15)     // Catch:{ Exception -> 0x29a3 }
            if (r15 == 0) goto L_0x29fa
            r5.httpLocation = r14     // Catch:{ Exception -> 0x29a3 }
            goto L_0x2a12
        L_0x29fa:
            java.util.ArrayList r15 = r8.sizes     // Catch:{ Exception -> 0x2ecb }
            r85 = r1
            java.util.ArrayList r1 = r8.sizes     // Catch:{ Exception -> 0x2ecb }
            int r1 = r1.size()     // Catch:{ Exception -> 0x2ecb }
            r20 = 1
            int r1 = r1 + -1
            java.lang.Object r1 = r15.get(r1)     // Catch:{ Exception -> 0x2ecb }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = (org.telegram.tgnet.TLRPC.PhotoSize) r1     // Catch:{ Exception -> 0x2ecb }
            r5.photoSize = r1     // Catch:{ Exception -> 0x2ecb }
            r5.locationParent = r8     // Catch:{ Exception -> 0x2ecb }
        L_0x2a12:
            r15 = r2
            r20 = r4
        L_0x2a15:
            r1 = r62
            int r4 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x2bb9
            org.telegram.tgnet.TLObject r4 = r5.sendRequest     // Catch:{ Exception -> 0x2b90 }
            if (r4 == 0) goto L_0x2a26
            org.telegram.tgnet.TLObject r4 = r5.sendRequest     // Catch:{ Exception -> 0x29a3 }
            org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia r4 = (org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia) r4     // Catch:{ Exception -> 0x29a3 }
            r65 = r8
            goto L_0x2a78
        L_0x2a26:
            org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia r4 = new org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia     // Catch:{ Exception -> 0x2b90 }
            r4.<init>()     // Catch:{ Exception -> 0x2b90 }
            r65 = r8
            r8 = r86
            r4.peer = r8     // Catch:{ Exception -> 0x2b6a }
            r86 = r8
            boolean r8 = r6.silent     // Catch:{ Exception -> 0x2b43 }
            r4.silent = r8     // Catch:{ Exception -> 0x2b43 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r6.reply_to     // Catch:{ Exception -> 0x2b43 }
            if (r8 == 0) goto L_0x2a6c
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r6.reply_to     // Catch:{ Exception -> 0x2a50 }
            int r8 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x2a50 }
            if (r8 == 0) goto L_0x2a6c
            int r8 = r4.flags     // Catch:{ Exception -> 0x2a50 }
            r24 = 1
            r8 = r8 | 1
            r4.flags = r8     // Catch:{ Exception -> 0x2a50 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r6.reply_to     // Catch:{ Exception -> 0x2a50 }
            int r8 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x2a50 }
            r4.reply_to_msg_id = r8     // Catch:{ Exception -> 0x2a50 }
            goto L_0x2a6c
        L_0x2a50:
            r0 = move-exception
            r15 = r86
            r71 = r88
            r8 = r100
            r1 = r0
            r20 = r5
            r14 = r6
            r6 = r10
            r18 = r19
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r10 = r91
            r25 = r9
            goto L_0x45cb
        L_0x2a6c:
            if (r3 == 0) goto L_0x2a76
            r4.schedule_date = r3     // Catch:{ Exception -> 0x2a50 }
            int r8 = r4.flags     // Catch:{ Exception -> 0x2a50 }
            r8 = r8 | 1024(0x400, float:1.435E-42)
            r4.flags = r8     // Catch:{ Exception -> 0x2a50 }
        L_0x2a76:
            r5.sendRequest = r4     // Catch:{ Exception -> 0x2b43 }
        L_0x2a78:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r5.messageObjects     // Catch:{ Exception -> 0x2b43 }
            r8.add(r7)     // Catch:{ Exception -> 0x2b43 }
            java.util.ArrayList<java.lang.Object> r8 = r5.parentObjects     // Catch:{ Exception -> 0x2b43 }
            r8.add(r10)     // Catch:{ Exception -> 0x2b43 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r5.locations     // Catch:{ Exception -> 0x2b43 }
            r24 = r10
            org.telegram.tgnet.TLRPC$PhotoSize r10 = r5.photoSize     // Catch:{ Exception -> 0x2b1e }
            r8.add(r10)     // Catch:{ Exception -> 0x2b1e }
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo> r8 = r5.videoEditedInfos     // Catch:{ Exception -> 0x2b1e }
            org.telegram.messenger.VideoEditedInfo r10 = r5.videoEditedInfo     // Catch:{ Exception -> 0x2b1e }
            r8.add(r10)     // Catch:{ Exception -> 0x2b1e }
            java.util.ArrayList<java.lang.String> r8 = r5.httpLocations     // Catch:{ Exception -> 0x2b1e }
            java.lang.String r10 = r5.httpLocation     // Catch:{ Exception -> 0x2b1e }
            r8.add(r10)     // Catch:{ Exception -> 0x2b1e }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputMedia> r8 = r5.inputMedias     // Catch:{ Exception -> 0x2b1e }
            org.telegram.tgnet.TLRPC$InputMedia r10 = r5.inputUploadMedia     // Catch:{ Exception -> 0x2b1e }
            r8.add(r10)     // Catch:{ Exception -> 0x2b1e }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r8 = r5.messages     // Catch:{ Exception -> 0x2b1e }
            r8.add(r6)     // Catch:{ Exception -> 0x2b1e }
            java.util.ArrayList<java.lang.String> r8 = r5.originalPaths     // Catch:{ Exception -> 0x2b1e }
            r8.add(r9)     // Catch:{ Exception -> 0x2b1e }
            org.telegram.tgnet.TLRPC$TL_inputSingleMedia r8 = new org.telegram.tgnet.TLRPC$TL_inputSingleMedia     // Catch:{ Exception -> 0x2b1e }
            r8.<init>()     // Catch:{ Exception -> 0x2b1e }
            r28 = r9
            long r9 = r6.random_id     // Catch:{ Exception -> 0x2afb }
            r8.random_id = r9     // Catch:{ Exception -> 0x2afb }
            r8.media = r15     // Catch:{ Exception -> 0x2afb }
            r10 = r46
            r8.message = r10     // Catch:{ Exception -> 0x2ad8 }
            r14 = r86
            r9 = r103
            if (r9 == 0) goto L_0x2acf
            boolean r29 = r103.isEmpty()     // Catch:{ Exception -> 0x2be7 }
            if (r29 != 0) goto L_0x2acf
            r8.entities = r9     // Catch:{ Exception -> 0x2be7 }
            int r12 = r8.flags     // Catch:{ Exception -> 0x2be7 }
            r13 = 1
            r12 = r12 | r13
            r8.flags = r12     // Catch:{ Exception -> 0x2be7 }
        L_0x2acf:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r12 = r4.multi_media     // Catch:{ Exception -> 0x2be7 }
            r12.add(r8)     // Catch:{ Exception -> 0x2be7 }
            r12 = r4
            goto L_0x2CLASSNAME
        L_0x2ad8:
            r0 = move-exception
            r9 = r103
            r15 = r86
            r71 = r88
            r12 = r95
            r8 = r100
            r1 = r0
            r20 = r5
            r14 = r6
            r46 = r10
            r18 = r19
            r29 = r21
            r6 = r24
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            goto L_0x45cb
        L_0x2afb:
            r0 = move-exception
            r9 = r103
            r10 = r46
            r15 = r86
            r71 = r88
            r12 = r95
            r8 = r100
            r1 = r0
            r20 = r5
            r14 = r6
            r18 = r19
            r29 = r21
            r6 = r24
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            goto L_0x45cb
        L_0x2b1e:
            r0 = move-exception
            r28 = r9
            r10 = r46
            r9 = r103
            r15 = r86
            r71 = r88
            r12 = r95
            r8 = r100
            r1 = r0
            r20 = r5
            r14 = r6
            r18 = r19
            r29 = r21
            r6 = r24
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            goto L_0x45cb
        L_0x2b43:
            r0 = move-exception
            r28 = r9
            r24 = r10
            r10 = r46
            r9 = r103
            r15 = r86
            r71 = r88
            r12 = r95
            r8 = r100
            r1 = r0
            r20 = r5
            r14 = r6
            r18 = r19
            r29 = r21
            r6 = r24
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            goto L_0x45cb
        L_0x2b6a:
            r0 = move-exception
            r28 = r9
            r24 = r10
            r10 = r46
            r9 = r103
            r71 = r88
            r12 = r95
            r1 = r0
            r20 = r5
            r14 = r6
            r15 = r8
            r18 = r19
            r29 = r21
            r6 = r24
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            r8 = r100
            goto L_0x45cb
        L_0x2b90:
            r0 = move-exception
            r65 = r8
            r28 = r9
            r24 = r10
            r10 = r46
            r9 = r103
            r15 = r86
            r71 = r88
            r12 = r95
            r8 = r100
            r1 = r0
            r20 = r5
            r14 = r6
            r18 = r19
            r29 = r21
            r6 = r24
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            goto L_0x45cb
        L_0x2bb9:
            r14 = r86
            r65 = r8
            r28 = r9
            r24 = r10
            r10 = r46
            r9 = r103
            org.telegram.tgnet.TLRPC$TL_messages_sendMedia r4 = new org.telegram.tgnet.TLRPC$TL_messages_sendMedia     // Catch:{ Exception -> 0x2e99 }
            r4.<init>()     // Catch:{ Exception -> 0x2e99 }
            r4.peer = r14     // Catch:{ Exception -> 0x2e99 }
            boolean r8 = r6.silent     // Catch:{ Exception -> 0x2e99 }
            r4.silent = r8     // Catch:{ Exception -> 0x2e99 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r6.reply_to     // Catch:{ Exception -> 0x2e99 }
            if (r8 == 0) goto L_0x2CLASSNAME
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r6.reply_to     // Catch:{ Exception -> 0x2be7 }
            int r8 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x2be7 }
            if (r8 == 0) goto L_0x2CLASSNAME
            int r8 = r4.flags     // Catch:{ Exception -> 0x2be7 }
            r12 = 1
            r8 = r8 | r12
            r4.flags = r8     // Catch:{ Exception -> 0x2be7 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r6.reply_to     // Catch:{ Exception -> 0x2be7 }
            int r8 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x2be7 }
            r4.reply_to_msg_id = r8     // Catch:{ Exception -> 0x2be7 }
            goto L_0x2CLASSNAME
        L_0x2be7:
            r0 = move-exception
            r71 = r88
            r12 = r95
            r8 = r100
            r1 = r0
            r20 = r5
            r46 = r10
            r15 = r14
            r18 = r19
            r29 = r21
            r5 = r25
            r25 = r28
            r21 = r31
            r33 = r34
            r10 = r91
            r14 = r6
            r6 = r24
            goto L_0x45cb
        L_0x2CLASSNAME:
            long r12 = r6.random_id     // Catch:{ Exception -> 0x2e99 }
            r4.random_id = r12     // Catch:{ Exception -> 0x2e99 }
            org.telegram.tgnet.TLRPC$Peer r8 = r6.from_id     // Catch:{ Exception -> 0x2e99 }
            if (r8 == 0) goto L_0x2c1b
            org.telegram.messenger.MessagesController r8 = r84.getMessagesController()     // Catch:{ Exception -> 0x2be7 }
            org.telegram.tgnet.TLRPC$Peer r12 = r6.from_id     // Catch:{ Exception -> 0x2be7 }
            org.telegram.tgnet.TLRPC$InputPeer r8 = r8.getInputPeer((org.telegram.tgnet.TLRPC.Peer) r12)     // Catch:{ Exception -> 0x2be7 }
            r4.send_as = r8     // Catch:{ Exception -> 0x2be7 }
        L_0x2c1b:
            r4.media = r15     // Catch:{ Exception -> 0x2e99 }
            r4.message = r10     // Catch:{ Exception -> 0x2e99 }
            if (r9 == 0) goto L_0x2CLASSNAME
            boolean r8 = r103.isEmpty()     // Catch:{ Exception -> 0x2be7 }
            if (r8 != 0) goto L_0x2CLASSNAME
            r4.entities = r9     // Catch:{ Exception -> 0x2be7 }
            int r8 = r4.flags     // Catch:{ Exception -> 0x2be7 }
            r12 = 8
            r8 = r8 | r12
            r4.flags = r8     // Catch:{ Exception -> 0x2be7 }
        L_0x2CLASSNAME:
            if (r3 == 0) goto L_0x2c3a
            r4.schedule_date = r3     // Catch:{ Exception -> 0x2be7 }
            int r8 = r4.flags     // Catch:{ Exception -> 0x2be7 }
            r8 = r8 | 1024(0x400, float:1.435E-42)
            r4.flags = r8     // Catch:{ Exception -> 0x2be7 }
        L_0x2c3a:
            if (r5 == 0) goto L_0x2c3e
            r5.sendRequest = r4     // Catch:{ Exception -> 0x2be7 }
        L_0x2c3e:
            r8 = r4
            r12 = r8
        L_0x2CLASSNAME:
            int r4 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x2CLASSNAME
            r11.performSendDelayedMessage(r5)     // Catch:{ Exception -> 0x2be7 }
            r71 = r88
            r67 = r1
            r9 = r3
            r93 = r7
            r15 = r10
            r72 = r14
            r89 = r19
            r29 = r21
            r90 = r24
            r33 = r34
            r69 = r49
            r70 = r65
            r13 = r66
            r10 = r5
            r14 = r6
            r35 = r28
            goto L_0x2e74
        L_0x2CLASSNAME:
            r13 = r66
            r4 = 1
            if (r13 != r4) goto L_0x2cdc
            r4 = 0
            if (r3 == 0) goto L_0x2c6f
            r8 = 1
            goto L_0x2CLASSNAME
        L_0x2c6f:
            r8 = 0
        L_0x2CLASSNAME:
            r67 = r1
            r16 = r28
            r1 = r84
            r2 = r12
            r3 = r7
            r86 = r14
            r14 = r53
            r81 = r19
            r19 = r15
            r15 = r81
            r85 = r5
            r69 = r49
            r17 = r6
            r90 = r24
            r70 = r65
            r6 = r90
            r93 = r7
            r7 = r25
            r18 = r100
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2cb0 }
            r72 = r86
            r71 = r88
            r9 = r107
            r53 = r14
            r89 = r15
            r14 = r17
            r100 = r18
            r29 = r21
            r33 = r34
            r15 = r10
            r35 = r16
            r10 = r85
            goto L_0x2e74
        L_0x2cb0:
            r0 = move-exception
            r20 = r85
            r71 = r88
            r6 = r90
            r7 = r93
            r1 = r0
            r46 = r10
            r66 = r13
            r53 = r14
            r14 = r17
            r8 = r18
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r49 = r69
            r65 = r70
            r10 = r91
            r12 = r95
            r18 = r15
            r25 = r16
            r15 = r86
            goto L_0x45cb
        L_0x2cdc:
            r18 = r100
            r67 = r1
            r85 = r5
            r17 = r6
            r93 = r7
            r86 = r14
            r90 = r24
            r16 = r28
            r69 = r49
            r14 = r53
            r70 = r65
            r81 = r19
            r19 = r15
            r15 = r81
            r8 = 2
            if (r13 != r8) goto L_0x2d9e
            if (r20 == 0) goto L_0x2d46
            r7 = r85
            r11.performSendDelayedMessage(r7)     // Catch:{ Exception -> 0x2d1a }
            r72 = r86
            r71 = r88
            r9 = r107
            r53 = r14
            r89 = r15
            r14 = r17
            r100 = r18
            r29 = r21
            r33 = r34
            r15 = r10
            r35 = r16
            r10 = r7
            goto L_0x2e74
        L_0x2d1a:
            r0 = move-exception
            r71 = r88
            r6 = r90
            r1 = r0
            r20 = r7
            r46 = r10
            r66 = r13
            r53 = r14
            r14 = r17
            r8 = r18
            r29 = r21
            r5 = r25
            r21 = r31
            r33 = r34
            r49 = r69
            r65 = r70
            r10 = r91
            r7 = r93
            r12 = r95
            r18 = r15
            r25 = r16
            r15 = r86
            goto L_0x45cb
        L_0x2d46:
            r7 = r85
            r5 = 0
            r6 = 1
            if (r107 == 0) goto L_0x2d4f
            r24 = 1
            goto L_0x2d51
        L_0x2d4f:
            r24 = 0
        L_0x2d51:
            r1 = r84
            r2 = r12
            r3 = r93
            r4 = r16
            r85 = r7
            r8 = r90
            r71 = r88
            r33 = r34
            r9 = r25
            r72 = r86
            r53 = r14
            r89 = r15
            r35 = r16
            r14 = r17
            r100 = r18
            r29 = r21
            r15 = r10
            r10 = r24
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x2d7c }
            r10 = r85
            r9 = r107
            goto L_0x2e74
        L_0x2d7c:
            r0 = move-exception
            r20 = r85
            r18 = r89
            r6 = r90
            r10 = r91
            r7 = r93
            r8 = r100
            r1 = r0
            r66 = r13
            r46 = r15
            r5 = r25
            r21 = r31
            r25 = r35
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            goto L_0x45cb
        L_0x2d9e:
            r72 = r86
            r71 = r88
            r53 = r14
            r89 = r15
            r14 = r17
            r100 = r18
            r29 = r21
            r33 = r34
            r15 = r10
            r35 = r16
            r1 = 3
            if (r13 != r1) goto L_0x2dfb
            if (r20 == 0) goto L_0x2de1
            r10 = r85
            r11.performSendDelayedMessage(r10)     // Catch:{ Exception -> 0x2dbf }
            r9 = r107
            goto L_0x2e74
        L_0x2dbf:
            r0 = move-exception
            r18 = r89
            r6 = r90
            r7 = r93
            r8 = r100
            r1 = r0
            r20 = r10
            r66 = r13
            r46 = r15
            r5 = r25
            r21 = r31
            r25 = r35
            r49 = r69
            r65 = r70
            r15 = r72
            r10 = r91
            r12 = r95
            goto L_0x45cb
        L_0x2de1:
            r10 = r85
            r9 = r107
            if (r9 == 0) goto L_0x2de9
            r8 = 1
            goto L_0x2dea
        L_0x2de9:
            r8 = 0
        L_0x2dea:
            r1 = r84
            r2 = r12
            r3 = r93
            r4 = r35
            r5 = r10
            r6 = r90
            r7 = r25
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2dbf }
            goto L_0x2e74
        L_0x2dfb:
            r10 = r85
            r9 = r107
            r1 = 6
            if (r13 != r1) goto L_0x2e18
            if (r9 == 0) goto L_0x2e06
            r8 = 1
            goto L_0x2e07
        L_0x2e06:
            r8 = 0
        L_0x2e07:
            r1 = r84
            r2 = r12
            r3 = r93
            r4 = r35
            r5 = r10
            r6 = r90
            r7 = r25
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2dbf }
            goto L_0x2e74
        L_0x2e18:
            r1 = 7
            if (r13 != r1) goto L_0x2e39
            if (r20 == 0) goto L_0x2e24
            if (r10 == 0) goto L_0x2e24
            r11.performSendDelayedMessage(r10)     // Catch:{ Exception -> 0x2dbf }
            goto L_0x2e74
        L_0x2e24:
            if (r9 == 0) goto L_0x2e28
            r8 = 1
            goto L_0x2e29
        L_0x2e28:
            r8 = 0
        L_0x2e29:
            r1 = r84
            r2 = r12
            r3 = r93
            r4 = r35
            r5 = r10
            r6 = r90
            r7 = r25
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2dbf }
            goto L_0x2e74
        L_0x2e39:
            r1 = 8
            if (r13 != r1) goto L_0x2e58
            if (r20 == 0) goto L_0x2e43
            r11.performSendDelayedMessage(r10)     // Catch:{ Exception -> 0x2dbf }
            goto L_0x2e74
        L_0x2e43:
            if (r9 == 0) goto L_0x2e47
            r8 = 1
            goto L_0x2e48
        L_0x2e47:
            r8 = 0
        L_0x2e48:
            r1 = r84
            r2 = r12
            r3 = r93
            r4 = r35
            r5 = r10
            r6 = r90
            r7 = r25
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2dbf }
            goto L_0x2e74
        L_0x2e58:
            r1 = 10
            if (r13 == r1) goto L_0x2e60
            r1 = 11
            if (r13 != r1) goto L_0x2e74
        L_0x2e60:
            if (r9 == 0) goto L_0x2e64
            r8 = 1
            goto L_0x2e65
        L_0x2e64:
            r8 = 0
        L_0x2e65:
            r1 = r84
            r2 = r12
            r3 = r93
            r4 = r35
            r5 = r10
            r6 = r90
            r7 = r25
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2dbf }
        L_0x2e74:
            r18 = r89
            r39 = r90
            r19 = r93
            r6 = r10
            r38 = r13
            r16 = r14
            r24 = r15
            r9 = r25
            r21 = r31
            r25 = r35
            r35 = r45
            r31 = r53
            r49 = r69
            r28 = r70
            r14 = r71
            r15 = r72
            r10 = r91
            r12 = r95
            goto L_0x41e9
        L_0x2e99:
            r0 = move-exception
            r71 = r88
            r9 = r3
            r93 = r7
            r15 = r10
            r72 = r14
            r89 = r19
            r29 = r21
            r90 = r24
            r33 = r34
            r69 = r49
            r70 = r65
            r13 = r66
            r10 = r5
            r14 = r6
            r18 = r89
            r6 = r90
            r8 = r100
            r1 = r0
            r20 = r10
            r46 = r15
            r5 = r25
            r25 = r28
            r21 = r31
            r15 = r72
            r10 = r91
            r12 = r95
            goto L_0x45cb
        L_0x2ecb:
            r0 = move-exception
            r71 = r88
            r14 = r6
            r93 = r7
            r70 = r8
            r90 = r10
            r89 = r19
            r29 = r21
            r33 = r34
            r15 = r46
            r69 = r49
            r13 = r66
            r35 = r9
            r9 = r3
            r18 = r89
            r6 = r90
            r10 = r91
            r8 = r100
            r1 = r0
            r20 = r5
            r5 = r25
            r21 = r31
            r25 = r35
            r65 = r70
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x2efd:
            r0 = move-exception
            r71 = r88
            r14 = r6
            r93 = r7
            r70 = r8
            r90 = r10
            r89 = r19
            r29 = r21
            r33 = r34
            r15 = r46
            r69 = r49
            r13 = r66
            r35 = r9
            r9 = r3
            r18 = r89
            r6 = r90
            r10 = r91
            r8 = r100
            r1 = r0
            r5 = r25
            r21 = r31
            r25 = r35
            r20 = r64
            r65 = r70
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x2f2f:
            r0 = move-exception
            r71 = r88
            r14 = r6
            r93 = r7
            r70 = r8
            r90 = r10
            r13 = r15
            r89 = r19
            r29 = r21
            r33 = r34
            r15 = r46
            r69 = r49
            r35 = r9
            r9 = r3
            r18 = r89
            r6 = r90
            r10 = r91
            r8 = r100
            r1 = r0
            r66 = r13
            r5 = r25
            r21 = r31
            r25 = r35
            r20 = r64
            r65 = r70
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x2var_:
            r0 = move-exception
            r71 = r88
            r69 = r5
            r93 = r7
            r100 = r8
            r90 = r10
            r25 = r14
            r13 = r15
            r89 = r19
            r14 = r29
            r33 = r34
            r15 = r46
            r70 = r65
            r35 = r9
            r29 = r21
            r9 = r3
            r18 = r89
            r6 = r90
            r10 = r91
            r1 = r0
            r66 = r13
            r5 = r25
            r21 = r31
            r25 = r35
            r20 = r64
            r49 = r69
            r15 = r86
            r12 = r95
            goto L_0x45cb
        L_0x2var_:
            r11 = r84
            r90 = r85
            r72 = r86
            r71 = r88
            r91 = r12
            r31 = r15
            r32 = r18
            r29 = r21
            r2 = r33
            r33 = r34
            r15 = r46
            r69 = r49
            r1 = r52
            r67 = r62
            r70 = r65
            r35 = r25
            r25 = r13
            r13 = r14
            r14 = r10
            r10 = r91
            int r3 = r10.layer     // Catch:{ Exception -> 0x3var_ }
            int r3 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r3)     // Catch:{ Exception -> 0x3var_ }
            r4 = 73
            if (r3 < r4) goto L_0x2ffe
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r3 = new org.telegram.tgnet.TLRPC$TL_decryptedMessage     // Catch:{ Exception -> 0x2fde }
            r3.<init>()     // Catch:{ Exception -> 0x2fde }
            r7 = r67
            int r4 = (r7 > r16 ? 1 : (r7 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x2fdc
            r3.grouped_id = r7     // Catch:{ Exception -> 0x2fde }
            int r4 = r3.flags     // Catch:{ Exception -> 0x2fde }
            r5 = 131072(0x20000, float:1.83671E-40)
            r4 = r4 | r5
            r3.flags = r4     // Catch:{ Exception -> 0x2fde }
        L_0x2fdc:
            r12 = r3
            goto L_0x3006
        L_0x2fde:
            r0 = move-exception
            r18 = r89
            r6 = r90
            r7 = r93
            r8 = r100
            r1 = r0
            r66 = r13
            r46 = r15
            r5 = r25
            r21 = r31
            r25 = r35
            r20 = r64
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            goto L_0x45cb
        L_0x2ffe:
            r7 = r67
            org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45 r3 = new org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45     // Catch:{ Exception -> 0x3var_ }
            r3.<init>()     // Catch:{ Exception -> 0x3var_ }
            r12 = r3
        L_0x3006:
            int r3 = r14.ttl     // Catch:{ Exception -> 0x3var_ }
            r12.ttl = r3     // Catch:{ Exception -> 0x3var_ }
            r6 = r103
            if (r6 == 0) goto L_0x301c
            boolean r3 = r103.isEmpty()     // Catch:{ Exception -> 0x2fde }
            if (r3 != 0) goto L_0x301c
            r12.entities = r6     // Catch:{ Exception -> 0x2fde }
            int r3 = r12.flags     // Catch:{ Exception -> 0x2fde }
            r3 = r3 | 128(0x80, float:1.794E-43)
            r12.flags = r3     // Catch:{ Exception -> 0x2fde }
        L_0x301c:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r14.reply_to     // Catch:{ Exception -> 0x3var_ }
            if (r3 == 0) goto L_0x3035
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r14.reply_to     // Catch:{ Exception -> 0x2fde }
            long r3 = r3.reply_to_random_id     // Catch:{ Exception -> 0x2fde }
            int r5 = (r3 > r16 ? 1 : (r3 == r16 ? 0 : -1))
            if (r5 == 0) goto L_0x3035
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r14.reply_to     // Catch:{ Exception -> 0x2fde }
            long r3 = r3.reply_to_random_id     // Catch:{ Exception -> 0x2fde }
            r12.reply_to_random_id = r3     // Catch:{ Exception -> 0x2fde }
            int r3 = r12.flags     // Catch:{ Exception -> 0x2fde }
            r4 = 8
            r3 = r3 | r4
            r12.flags = r3     // Catch:{ Exception -> 0x2fde }
        L_0x3035:
            boolean r3 = r14.silent     // Catch:{ Exception -> 0x3var_ }
            r12.silent = r3     // Catch:{ Exception -> 0x3var_ }
            int r3 = r12.flags     // Catch:{ Exception -> 0x3var_ }
            r3 = r3 | 512(0x200, float:7.175E-43)
            r12.flags = r3     // Catch:{ Exception -> 0x3var_ }
            if (r25 == 0) goto L_0x3078
            r3 = r105
            r5 = r25
            java.lang.Object r4 = r5.get(r3)     // Catch:{ Exception -> 0x305a }
            if (r4 == 0) goto L_0x307a
            java.lang.Object r3 = r5.get(r3)     // Catch:{ Exception -> 0x305a }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x305a }
            r12.via_bot_name = r3     // Catch:{ Exception -> 0x305a }
            int r3 = r12.flags     // Catch:{ Exception -> 0x305a }
            r3 = r3 | 2048(0x800, float:2.87E-42)
            r12.flags = r3     // Catch:{ Exception -> 0x305a }
            goto L_0x307a
        L_0x305a:
            r0 = move-exception
            r18 = r89
            r6 = r90
            r7 = r93
            r8 = r100
            r1 = r0
            r66 = r13
            r46 = r15
            r21 = r31
            r25 = r35
            r20 = r64
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            goto L_0x45cb
        L_0x3078:
            r5 = r25
        L_0x307a:
            long r3 = r14.random_id     // Catch:{ Exception -> 0x3var_ }
            r12.random_id = r3     // Catch:{ Exception -> 0x3var_ }
            r12.message = r2     // Catch:{ Exception -> 0x3var_ }
            r2 = 1
            if (r13 != r2) goto L_0x3179
            r4 = r31
            boolean r1 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaVenue     // Catch:{ Exception -> 0x315a }
            if (r1 == 0) goto L_0x30c7
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue     // Catch:{ Exception -> 0x30a9 }
            r1.<init>()     // Catch:{ Exception -> 0x30a9 }
            r12.media = r1     // Catch:{ Exception -> 0x30a9 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x30a9 }
            java.lang.String r2 = r4.address     // Catch:{ Exception -> 0x30a9 }
            r1.address = r2     // Catch:{ Exception -> 0x30a9 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x30a9 }
            java.lang.String r2 = r4.title     // Catch:{ Exception -> 0x30a9 }
            r1.title = r2     // Catch:{ Exception -> 0x30a9 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x30a9 }
            java.lang.String r2 = r4.provider     // Catch:{ Exception -> 0x30a9 }
            r1.provider = r2     // Catch:{ Exception -> 0x30a9 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x30a9 }
            java.lang.String r2 = r4.venue_id     // Catch:{ Exception -> 0x30a9 }
            r1.venue_id = r2     // Catch:{ Exception -> 0x30a9 }
            goto L_0x30ce
        L_0x30a9:
            r0 = move-exception
            r18 = r89
            r6 = r90
            r7 = r93
            r8 = r100
            r1 = r0
            r21 = r4
            r66 = r13
            r46 = r15
            r25 = r35
            r20 = r64
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            goto L_0x45cb
        L_0x30c7:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint     // Catch:{ Exception -> 0x315a }
            r1.<init>()     // Catch:{ Exception -> 0x315a }
            r12.media = r1     // Catch:{ Exception -> 0x315a }
        L_0x30ce:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x315a }
            org.telegram.tgnet.TLRPC$GeoPoint r2 = r4.geo     // Catch:{ Exception -> 0x315a }
            double r2 = r2.lat     // Catch:{ Exception -> 0x315a }
            r1.lat = r2     // Catch:{ Exception -> 0x315a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x315a }
            org.telegram.tgnet.TLRPC$GeoPoint r2 = r4.geo     // Catch:{ Exception -> 0x315a }
            double r2 = r2._long     // Catch:{ Exception -> 0x315a }
            r1._long = r2     // Catch:{ Exception -> 0x315a }
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x315a }
            r3 = r93
            org.telegram.tgnet.TLRPC$Message r2 = r3.messageOwner     // Catch:{ Exception -> 0x3139 }
            r18 = 0
            r19 = 0
            r21 = r2
            r2 = r12
            r93 = r3
            r3 = r21
            r21 = r4
            r4 = r10
            r50 = r7
            r8 = r5
            r5 = r18
            r7 = r6
            r6 = r19
            r43 = r50
            r7 = r93
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x311c }
            r18 = r89
            r76 = r90
            r90 = r8
            r66 = r13
            r25 = r14
            r75 = r35
            r31 = r53
            r37 = r64
            r14 = r69
            r73 = r70
            r13 = r9
            r8 = r95
            goto L_0x3825
        L_0x311c:
            r0 = move-exception
            r18 = r89
            r6 = r90
            r7 = r93
            r1 = r0
            r5 = r8
            r66 = r13
            r46 = r15
            r25 = r35
            r20 = r64
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x3139:
            r0 = move-exception
            r93 = r3
            r21 = r4
            r8 = r5
            r18 = r89
            r6 = r90
            r7 = r93
            r1 = r0
            r66 = r13
            r46 = r15
            r25 = r35
            r20 = r64
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x315a:
            r0 = move-exception
            r21 = r4
            r8 = r5
            r18 = r89
            r6 = r90
            r7 = r93
            r1 = r0
            r66 = r13
            r46 = r15
            r25 = r35
            r20 = r64
            r49 = r69
            r65 = r70
            r15 = r72
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x3179:
            r43 = r7
            r21 = r31
            r8 = r5
            r7 = 2
            if (r13 == r7) goto L_0x3aca
            r2 = 9
            if (r13 != r2) goto L_0x31a7
            r6 = r70
            if (r6 == 0) goto L_0x31a9
            r18 = r89
            r3 = r90
            r5 = r93
            r7 = r97
            r73 = r6
            r4 = r8
            r66 = r13
            r25 = r14
            r6 = r35
            r2 = r42
            r31 = r53
            r37 = r64
            r14 = r69
            r13 = r9
            r8 = r95
            goto L_0x3ae6
        L_0x31a7:
            r6 = r70
        L_0x31a9:
            r2 = 3
            if (r13 != r2) goto L_0x34c0
            r5 = r69
            java.util.ArrayList r1 = r5.thumbs     // Catch:{ Exception -> 0x3498 }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = r11.getThumbForSecretChat(r1)     // Catch:{ Exception -> 0x3498 }
            r4 = r1
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r4)     // Catch:{ Exception -> 0x3498 }
            boolean r1 = org.telegram.messenger.MessageObject.isNewGifDocument((org.telegram.tgnet.TLRPC.Document) r5)     // Catch:{ Exception -> 0x3498 }
            if (r1 != 0) goto L_0x3202
            boolean r1 = org.telegram.messenger.MessageObject.isRoundVideoDocument(r5)     // Catch:{ Exception -> 0x31e5 }
            if (r1 == 0) goto L_0x31c5
            goto L_0x3202
        L_0x31c5:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo     // Catch:{ Exception -> 0x31e5 }
            r1.<init>()     // Catch:{ Exception -> 0x31e5 }
            r12.media = r1     // Catch:{ Exception -> 0x31e5 }
            if (r4 == 0) goto L_0x31db
            byte[] r1 = r4.bytes     // Catch:{ Exception -> 0x31e5 }
            if (r1 == 0) goto L_0x31db
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x31e5 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo) r1     // Catch:{ Exception -> 0x31e5 }
            byte[] r2 = r4.bytes     // Catch:{ Exception -> 0x31e5 }
            r1.thumb = r2     // Catch:{ Exception -> 0x31e5 }
            goto L_0x3227
        L_0x31db:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x31e5 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo) r1     // Catch:{ Exception -> 0x31e5 }
            r2 = 0
            byte[] r3 = new byte[r2]     // Catch:{ Exception -> 0x31e5 }
            r1.thumb = r3     // Catch:{ Exception -> 0x31e5 }
            goto L_0x3227
        L_0x31e5:
            r0 = move-exception
            r18 = r89
            r7 = r93
            r1 = r0
            r49 = r5
            r65 = r6
            r5 = r8
            r66 = r13
            r46 = r15
            r25 = r35
            r20 = r64
            r15 = r72
            r6 = r90
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x3202:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument     // Catch:{ Exception -> 0x3498 }
            r1.<init>()     // Catch:{ Exception -> 0x3498 }
            r12.media = r1     // Catch:{ Exception -> 0x3498 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            java.util.ArrayList r2 = r5.attributes     // Catch:{ Exception -> 0x3498 }
            r1.attributes = r2     // Catch:{ Exception -> 0x3498 }
            if (r4 == 0) goto L_0x321e
            byte[] r1 = r4.bytes     // Catch:{ Exception -> 0x31e5 }
            if (r1 == 0) goto L_0x321e
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x31e5 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r1     // Catch:{ Exception -> 0x31e5 }
            byte[] r2 = r4.bytes     // Catch:{ Exception -> 0x31e5 }
            r1.thumb = r2     // Catch:{ Exception -> 0x31e5 }
            goto L_0x3227
        L_0x321e:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r1     // Catch:{ Exception -> 0x3498 }
            r2 = 0
            byte[] r3 = new byte[r2]     // Catch:{ Exception -> 0x3498 }
            r1.thumb = r3     // Catch:{ Exception -> 0x3498 }
        L_0x3227:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            r1.caption = r15     // Catch:{ Exception -> 0x3498 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            java.lang.String r2 = "video/mp4"
            r1.mime_type = r2     // Catch:{ Exception -> 0x3498 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            int r2 = r5.size     // Catch:{ Exception -> 0x3498 }
            r1.size = r2     // Catch:{ Exception -> 0x3498 }
            r1 = 0
        L_0x3238:
            java.util.ArrayList r2 = r5.attributes     // Catch:{ Exception -> 0x3498 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x3498 }
            if (r1 >= r2) goto L_0x3263
            java.util.ArrayList r2 = r5.attributes     // Catch:{ Exception -> 0x31e5 }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x31e5 }
            org.telegram.tgnet.TLRPC$DocumentAttribute r2 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r2     // Catch:{ Exception -> 0x31e5 }
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeVideo     // Catch:{ Exception -> 0x31e5 }
            if (r3 == 0) goto L_0x325f
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x31e5 }
            int r7 = r2.w     // Catch:{ Exception -> 0x31e5 }
            r3.w = r7     // Catch:{ Exception -> 0x31e5 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x31e5 }
            int r7 = r2.h     // Catch:{ Exception -> 0x31e5 }
            r3.h = r7     // Catch:{ Exception -> 0x31e5 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x31e5 }
            int r7 = r2.duration     // Catch:{ Exception -> 0x31e5 }
            r3.duration = r7     // Catch:{ Exception -> 0x31e5 }
            goto L_0x3263
        L_0x325f:
            int r1 = r1 + 1
            r7 = 2
            goto L_0x3238
        L_0x3263:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            int r2 = r4.h     // Catch:{ Exception -> 0x3498 }
            r1.thumb_h = r2     // Catch:{ Exception -> 0x3498 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3498 }
            int r2 = r4.w     // Catch:{ Exception -> 0x3498 }
            r1.thumb_w = r2     // Catch:{ Exception -> 0x3498 }
            byte[] r1 = r5.key     // Catch:{ Exception -> 0x3498 }
            if (r1 == 0) goto L_0x3334
            int r1 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x3280
            r19 = r4
            r73 = r6
            r25 = r14
            r14 = r5
            goto L_0x333b
        L_0x3280:
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r1 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x3310 }
            r1.<init>()     // Catch:{ Exception -> 0x3310 }
            r7 = r1
            long r1 = r5.id     // Catch:{ Exception -> 0x3310 }
            r7.id = r1     // Catch:{ Exception -> 0x3310 }
            long r1 = r5.access_hash     // Catch:{ Exception -> 0x3310 }
            r7.access_hash = r1     // Catch:{ Exception -> 0x3310 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3310 }
            byte[] r2 = r5.key     // Catch:{ Exception -> 0x3310 }
            r1.key = r2     // Catch:{ Exception -> 0x3310 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3310 }
            byte[] r2 = r5.iv     // Catch:{ Exception -> 0x3310 }
            r1.iv = r2     // Catch:{ Exception -> 0x3310 }
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x3310 }
            r3 = r93
            org.telegram.tgnet.TLRPC$Message r2 = r3.messageOwner     // Catch:{ Exception -> 0x32ea }
            r18 = 0
            r19 = r2
            r2 = r12
            r93 = r3
            r3 = r19
            r19 = r4
            r4 = r10
            r25 = r14
            r14 = r5
            r5 = r7
            r73 = r6
            r6 = r18
            r18 = r7
            r7 = r93
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x32cb }
            r2 = r89
            r3 = r90
            r4 = r93
            r6 = r95
            r5 = r35
            r1 = r64
            goto L_0x3463
        L_0x32cb:
            r0 = move-exception
            r18 = r89
            r6 = r90
            r7 = r93
            r1 = r0
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x32ea:
            r0 = move-exception
            r93 = r3
            r73 = r6
            r25 = r14
            r14 = r5
            r18 = r89
            r6 = r90
            r7 = r93
            r1 = r0
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x3310:
            r0 = move-exception
            r73 = r6
            r25 = r14
            r14 = r5
            r18 = r89
            r6 = r90
            r7 = r93
            r1 = r0
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x3334:
            r19 = r4
            r73 = r6
            r25 = r14
            r14 = r5
        L_0x333b:
            if (r64 != 0) goto L_0x344e
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r1 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x342d }
            r6 = r95
            r1.<init>(r6)     // Catch:{ Exception -> 0x340d }
            r1.encryptedChat = r10     // Catch:{ Exception -> 0x33ed }
            r2 = 1
            r1.type = r2     // Catch:{ Exception -> 0x33ed }
            r1.sendEncryptedRequest = r12     // Catch:{ Exception -> 0x33ed }
            r5 = r35
            r1.originalPath = r5     // Catch:{ Exception -> 0x33cd }
            r4 = r93
            r1.obj = r4     // Catch:{ Exception -> 0x33af }
            if (r8 == 0) goto L_0x3383
            r2 = r42
            boolean r3 = r8.containsKey(r2)     // Catch:{ Exception -> 0x3366 }
            if (r3 == 0) goto L_0x3383
            java.lang.Object r2 = r8.get(r2)     // Catch:{ Exception -> 0x3366 }
            r1.parentObject = r2     // Catch:{ Exception -> 0x3366 }
            r3 = r90
            goto L_0x3387
        L_0x3366:
            r0 = move-exception
            r18 = r89
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r15 = r72
            r65 = r73
            r1 = r0
            r25 = r5
            r12 = r6
            r5 = r8
            r6 = r90
            r8 = r100
            r7 = r4
            goto L_0x45cb
        L_0x3383:
            r3 = r90
            r1.parentObject = r3     // Catch:{ Exception -> 0x3393 }
        L_0x3387:
            r2 = 1
            r1.performMediaUpload = r2     // Catch:{ Exception -> 0x3393 }
            if (r9 == 0) goto L_0x338e
            r2 = 1
            goto L_0x338f
        L_0x338e:
            r2 = 0
        L_0x338f:
            r1.scheduled = r2     // Catch:{ Exception -> 0x3393 }
            goto L_0x3458
        L_0x3393:
            r0 = move-exception
            r18 = r89
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r15 = r72
            r65 = r73
            r1 = r0
            r25 = r5
            r12 = r6
            r5 = r8
            r8 = r100
            r6 = r3
            r7 = r4
            goto L_0x45cb
        L_0x33af:
            r0 = move-exception
            r3 = r90
            r18 = r89
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r15 = r72
            r65 = r73
            r1 = r0
            r25 = r5
            r12 = r6
            r5 = r8
            r8 = r100
            r6 = r3
            r7 = r4
            goto L_0x45cb
        L_0x33cd:
            r0 = move-exception
            r3 = r90
            r4 = r93
            r18 = r89
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r15 = r72
            r65 = r73
            r1 = r0
            r25 = r5
            r12 = r6
            r5 = r8
            r8 = r100
            r6 = r3
            r7 = r4
            goto L_0x45cb
        L_0x33ed:
            r0 = move-exception
            r3 = r90
            r4 = r93
            r18 = r89
            r20 = r1
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r15 = r72
            r65 = r73
            r8 = r100
            r1 = r0
            r12 = r6
            r6 = r3
            r7 = r4
            goto L_0x45cb
        L_0x340d:
            r0 = move-exception
            r3 = r90
            r4 = r93
            r18 = r89
            r1 = r0
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r8 = r100
            r12 = r6
            r6 = r3
            r7 = r4
            goto L_0x45cb
        L_0x342d:
            r0 = move-exception
            r3 = r90
            r4 = r93
            r18 = r89
            r1 = r0
            r6 = r3
            r7 = r4
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x344e:
            r3 = r90
            r4 = r93
            r6 = r95
            r5 = r35
            r1 = r64
        L_0x3458:
            r2 = r89
            r1.videoEditedInfo = r2     // Catch:{ Exception -> 0x347c }
            int r18 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r18 != 0) goto L_0x3463
            r11.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x347c }
        L_0x3463:
            r18 = r2
            r66 = r13
            r49 = r14
            r24 = r15
            r31 = r53
            r15 = r97
            r14 = r5
            r13 = r9
            r5 = r3
            r81 = r6
            r7 = r4
            r6 = r8
            r4 = r73
            r8 = r81
            goto L_0x3d64
        L_0x347c:
            r0 = move-exception
            r20 = r1
            r18 = r2
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r15 = r72
            r65 = r73
            r1 = r0
            r25 = r5
            r12 = r6
            r5 = r8
            r8 = r100
            r6 = r3
            r7 = r4
            goto L_0x45cb
        L_0x3498:
            r0 = move-exception
            r2 = r89
            r3 = r90
            r4 = r93
            r73 = r6
            r25 = r14
            r14 = r5
            r1 = r0
            r18 = r2
            r6 = r3
            r7 = r4
            r5 = r8
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r95
            r8 = r100
            goto L_0x45cb
        L_0x34c0:
            r18 = r89
            r3 = r90
            r4 = r93
            r73 = r6
            r25 = r14
            r5 = r35
            r2 = r42
            r14 = r69
            r6 = r95
            r3 = 6
            if (r13 != r3) goto L_0x35b6
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact     // Catch:{ Exception -> 0x3591 }
            r1.<init>()     // Catch:{ Exception -> 0x3591 }
            r12.media = r1     // Catch:{ Exception -> 0x3591 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3591 }
            r3 = r53
            java.lang.String r2 = r3.phone     // Catch:{ Exception -> 0x356a }
            r1.phone_number = r2     // Catch:{ Exception -> 0x356a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x356a }
            java.lang.String r2 = r3.first_name     // Catch:{ Exception -> 0x356a }
            r1.first_name = r2     // Catch:{ Exception -> 0x356a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x356a }
            java.lang.String r2 = r3.last_name     // Catch:{ Exception -> 0x356a }
            r1.last_name = r2     // Catch:{ Exception -> 0x356a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x356a }
            r35 = r5
            long r5 = r3.id     // Catch:{ Exception -> 0x3542 }
            r1.user_id = r5     // Catch:{ Exception -> 0x3542 }
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x3542 }
            org.telegram.tgnet.TLRPC$Message r5 = r4.messageOwner     // Catch:{ Exception -> 0x3542 }
            r6 = 0
            r7 = 0
            r2 = r12
            r74 = r90
            r31 = r3
            r3 = r5
            r5 = r4
            r4 = r10
            r93 = r5
            r90 = r8
            r8 = r35
            r5 = r6
            r8 = r95
            r6 = r7
            r7 = r93
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x3523 }
            r66 = r13
            r75 = r35
            r37 = r64
            r76 = r74
            r13 = r107
            goto L_0x3825
        L_0x3523:
            r0 = move-exception
            r5 = r90
            r7 = r93
            r1 = r0
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r6 = r74
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x3542:
            r0 = move-exception
            r74 = r90
            r31 = r3
            r93 = r4
            r90 = r8
            r5 = r90
            r7 = r93
            r8 = r100
            r1 = r0
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r6 = r74
            r12 = r95
            goto L_0x45cb
        L_0x356a:
            r0 = move-exception
            r74 = r90
            r31 = r3
            r93 = r4
            r90 = r8
            r8 = r100
            r1 = r0
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r20 = r64
            r15 = r72
            r65 = r73
            r25 = r5
            r12 = r6
            r6 = r74
            r5 = r90
            r7 = r93
            goto L_0x45cb
        L_0x3591:
            r0 = move-exception
            r74 = r90
            r93 = r4
            r90 = r8
            r31 = r53
            r8 = r100
            r1 = r0
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r20 = r64
            r15 = r72
            r65 = r73
            r25 = r5
            r12 = r6
            r6 = r74
            r5 = r90
            r7 = r93
            goto L_0x45cb
        L_0x35b6:
            r74 = r90
            r93 = r4
            r35 = r5
            r90 = r8
            r31 = r53
            r8 = r6
            r3 = 7
            if (r13 == r3) goto L_0x372b
            r3 = 9
            if (r13 != r3) goto L_0x35d4
            if (r14 == 0) goto L_0x35d4
            r7 = r93
            r5 = r107
            r4 = r35
            r6 = r74
            goto L_0x3733
        L_0x35d4:
            r1 = 8
            if (r13 != r1) goto L_0x3718
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r1 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x36f7 }
            r1.<init>(r8)     // Catch:{ Exception -> 0x36f7 }
            r1.encryptedChat = r10     // Catch:{ Exception -> 0x36d6 }
            r1.sendEncryptedRequest = r12     // Catch:{ Exception -> 0x36d6 }
            r7 = r93
            r1.obj = r7     // Catch:{ Exception -> 0x36b7 }
            r2 = 3
            r1.type = r2     // Catch:{ Exception -> 0x36b7 }
            r6 = r74
            r1.parentObject = r6     // Catch:{ Exception -> 0x369a }
            r2 = 1
            r1.performMediaUpload = r2     // Catch:{ Exception -> 0x369a }
            r5 = r107
            if (r5 == 0) goto L_0x35f5
            r3 = 1
            goto L_0x35f6
        L_0x35f5:
            r3 = 0
        L_0x35f6:
            r1.scheduled = r3     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument     // Catch:{ Exception -> 0x3698 }
            r2.<init>()     // Catch:{ Exception -> 0x3698 }
            r12.media = r2     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r12.media     // Catch:{ Exception -> 0x3698 }
            java.util.ArrayList r3 = r14.attributes     // Catch:{ Exception -> 0x3698 }
            r2.attributes = r3     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r12.media     // Catch:{ Exception -> 0x3698 }
            r2.caption = r15     // Catch:{ Exception -> 0x3698 }
            java.util.ArrayList r2 = r14.thumbs     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$PhotoSize r2 = r11.getThumbForSecretChat(r2)     // Catch:{ Exception -> 0x3698 }
            if (r2 == 0) goto L_0x3646
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r2)     // Catch:{ Exception -> 0x362b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x362b }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x362b }
            byte[] r4 = r2.bytes     // Catch:{ Exception -> 0x362b }
            r3.thumb = r4     // Catch:{ Exception -> 0x362b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x362b }
            int r4 = r2.h     // Catch:{ Exception -> 0x362b }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x362b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x362b }
            int r4 = r2.w     // Catch:{ Exception -> 0x362b }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x362b }
            r85 = r2
            goto L_0x3659
        L_0x362b:
            r0 = move-exception
            r5 = r90
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r15 = r72
            r65 = r73
            r1 = r0
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x3646:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x3698 }
            r85 = r2
            r4 = 0
            byte[] r2 = new byte[r4]     // Catch:{ Exception -> 0x3698 }
            r3.thumb = r2     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r12.media     // Catch:{ Exception -> 0x3698 }
            r2.thumb_h = r4     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r12.media     // Catch:{ Exception -> 0x3698 }
            r2.thumb_w = r4     // Catch:{ Exception -> 0x3698 }
        L_0x3659:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r12.media     // Catch:{ Exception -> 0x3698 }
            java.lang.String r3 = r14.mime_type     // Catch:{ Exception -> 0x3698 }
            r2.mime_type = r3     // Catch:{ Exception -> 0x3698 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r12.media     // Catch:{ Exception -> 0x3698 }
            int r3 = r14.size     // Catch:{ Exception -> 0x3698 }
            r2.size = r3     // Catch:{ Exception -> 0x3698 }
            r4 = r35
            r1.originalPath = r4     // Catch:{ Exception -> 0x367d }
            r11.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x367d }
            r66 = r13
            r49 = r14
            r24 = r15
            r15 = r97
            r14 = r4
            r13 = r5
            r5 = r6
            r4 = r73
            r6 = r90
            goto L_0x3d64
        L_0x367d:
            r0 = move-exception
            r5 = r90
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r15 = r72
            r65 = r73
            r1 = r0
            r25 = r4
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x3698:
            r0 = move-exception
            goto L_0x369d
        L_0x369a:
            r0 = move-exception
            r5 = r107
        L_0x369d:
            r5 = r90
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r15 = r72
            r65 = r73
            r1 = r0
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x36b7:
            r0 = move-exception
            r5 = r107
            r6 = r74
            r5 = r90
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r15 = r72
            r65 = r73
            r1 = r0
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x36d6:
            r0 = move-exception
            r7 = r93
            r5 = r107
            r6 = r74
            r5 = r90
            r20 = r1
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r15 = r72
            r65 = r73
            r1 = r0
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x36f7:
            r0 = move-exception
            r7 = r93
            r5 = r107
            r6 = r74
            r5 = r90
            r1 = r0
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x3718:
            r7 = r93
            r5 = r107
            r4 = r35
            r6 = r74
            r75 = r4
            r76 = r6
            r66 = r13
            r37 = r64
            r13 = r5
            goto L_0x3825
        L_0x372b:
            r7 = r93
            r5 = r107
            r4 = r35
            r6 = r74
        L_0x3733:
            r35 = r4
            long r3 = r14.access_hash     // Catch:{ Exception -> 0x3aa6 }
            int r19 = (r3 > r16 ? 1 : (r3 == r16 ? 0 : -1))
            if (r19 == 0) goto L_0x387d
            boolean r3 = org.telegram.messenger.MessageObject.isStickerDocument(r14)     // Catch:{ Exception -> 0x385b }
            if (r3 != 0) goto L_0x3771
            r3 = 1
            boolean r4 = org.telegram.messenger.MessageObject.isAnimatedStickerDocument(r14, r3)     // Catch:{ Exception -> 0x3756 }
            if (r4 == 0) goto L_0x3749
            goto L_0x3771
        L_0x3749:
            r76 = r6
            r93 = r7
            r66 = r13
            r75 = r35
            r37 = r64
            r13 = r5
            goto L_0x3888
        L_0x3756:
            r0 = move-exception
            r5 = r90
            r1 = r0
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r64
            r15 = r72
            r65 = r73
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x3771:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument     // Catch:{ Exception -> 0x385b }
            r1.<init>()     // Catch:{ Exception -> 0x385b }
            r12.media = r1     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            long r2 = r14.id     // Catch:{ Exception -> 0x385b }
            r1.id = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            int r2 = r14.date     // Catch:{ Exception -> 0x385b }
            r1.date = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            long r2 = r14.access_hash     // Catch:{ Exception -> 0x385b }
            r1.access_hash = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            java.lang.String r2 = r14.mime_type     // Catch:{ Exception -> 0x385b }
            r1.mime_type = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            int r2 = r14.size     // Catch:{ Exception -> 0x385b }
            r1.size = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            int r2 = r14.dc_id     // Catch:{ Exception -> 0x385b }
            r1.dc_id = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            java.util.ArrayList r2 = r14.attributes     // Catch:{ Exception -> 0x385b }
            r1.attributes = r2     // Catch:{ Exception -> 0x385b }
            java.util.ArrayList r1 = r14.thumbs     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = r11.getThumbForSecretChat(r1)     // Catch:{ Exception -> 0x385b }
            r4 = r1
            if (r4 == 0) goto L_0x37b2
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3756 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument) r1     // Catch:{ Exception -> 0x3756 }
            r1.thumb = r4     // Catch:{ Exception -> 0x3756 }
            goto L_0x37c7
        L_0x37b2:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument) r1     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$TL_photoSizeEmpty r2 = new org.telegram.tgnet.TLRPC$TL_photoSizeEmpty     // Catch:{ Exception -> 0x385b }
            r2.<init>()     // Catch:{ Exception -> 0x385b }
            r1.thumb = r2     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument) r1     // Catch:{ Exception -> 0x385b }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = r1.thumb     // Catch:{ Exception -> 0x385b }
            java.lang.String r2 = "s"
            r1.type = r2     // Catch:{ Exception -> 0x385b }
        L_0x37c7:
            if (r64 == 0) goto L_0x37fe
            r3 = r64
            int r1 = r3.type     // Catch:{ Exception -> 0x37e3 }
            r2 = 5
            if (r1 != r2) goto L_0x3800
            r3.sendEncryptedRequest = r12     // Catch:{ Exception -> 0x37e3 }
            r3.obj = r7     // Catch:{ Exception -> 0x37e3 }
            r11.performSendDelayedMessage(r3)     // Catch:{ Exception -> 0x37e3 }
            r37 = r3
            r76 = r6
            r93 = r7
            r66 = r13
            r75 = r35
            r13 = r5
            goto L_0x3824
        L_0x37e3:
            r0 = move-exception
            r5 = r90
            r1 = r0
            r20 = r3
            r66 = r13
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r15 = r72
            r65 = r73
            r12 = r8
            r8 = r100
            goto L_0x45cb
        L_0x37fe:
            r3 = r64
        L_0x3800:
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x3839 }
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner     // Catch:{ Exception -> 0x3839 }
            r19 = 0
            r24 = 0
            r28 = r2
            r2 = r12
            r37 = r3
            r3 = r28
            r28 = r4
            r75 = r35
            r4 = r10
            r66 = r13
            r13 = r5
            r5 = r19
            r76 = r6
            r6 = r24
            r93 = r7
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x38ba }
        L_0x3824:
        L_0x3825:
            r6 = r90
            r7 = r93
            r49 = r14
            r24 = r15
            r1 = r37
            r4 = r73
            r14 = r75
            r5 = r76
            r15 = r97
            goto L_0x3d64
        L_0x3839:
            r0 = move-exception
            r37 = r3
            r76 = r6
            r93 = r7
            r66 = r13
            r13 = r5
            r5 = r90
            r1 = r0
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r65 = r73
            r8 = r100
            goto L_0x45cb
        L_0x385b:
            r0 = move-exception
            r76 = r6
            r93 = r7
            r66 = r13
            r37 = r64
            r13 = r5
            r5 = r90
            r1 = r0
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r65 = r73
            r8 = r100
            goto L_0x45cb
        L_0x387d:
            r76 = r6
            r93 = r7
            r66 = r13
            r75 = r35
            r37 = r64
            r13 = r5
        L_0x3888:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument     // Catch:{ Exception -> 0x3a84 }
            r3.<init>()     // Catch:{ Exception -> 0x3a84 }
            r12.media = r3     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            java.util.ArrayList r4 = r14.attributes     // Catch:{ Exception -> 0x3a84 }
            r3.attributes = r4     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            r3.caption = r15     // Catch:{ Exception -> 0x3a84 }
            java.util.ArrayList r3 = r14.thumbs     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r11.getThumbForSecretChat(r3)     // Catch:{ Exception -> 0x3a84 }
            r7 = r3
            if (r7 == 0) goto L_0x38d7
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r7)     // Catch:{ Exception -> 0x38ba }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x38ba }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x38ba }
            byte[] r4 = r7.bytes     // Catch:{ Exception -> 0x38ba }
            r3.thumb = r4     // Catch:{ Exception -> 0x38ba }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x38ba }
            int r4 = r7.h     // Catch:{ Exception -> 0x38ba }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x38ba }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x38ba }
            int r4 = r7.w     // Catch:{ Exception -> 0x38ba }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x38ba }
            goto L_0x38e8
        L_0x38ba:
            r0 = move-exception
            r5 = r90
            r7 = r93
            r1 = r0
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r20 = r37
            r15 = r72
            r65 = r73
            r25 = r75
            r6 = r76
            r8 = r100
            goto L_0x45cb
        L_0x38d7:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x3a84 }
            r4 = 0
            byte[] r5 = new byte[r4]     // Catch:{ Exception -> 0x3a84 }
            r3.thumb = r5     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x3a84 }
        L_0x38e8:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            int r4 = r14.size     // Catch:{ Exception -> 0x3a84 }
            r3.size = r4     // Catch:{ Exception -> 0x3a84 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3a84 }
            java.lang.String r4 = r14.mime_type     // Catch:{ Exception -> 0x3a84 }
            r3.mime_type = r4     // Catch:{ Exception -> 0x3a84 }
            byte[] r3 = r14.key     // Catch:{ Exception -> 0x3a84 }
            if (r3 == 0) goto L_0x395f
            int r3 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x3900
            r19 = r7
            goto L_0x3961
        L_0x3900:
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r1 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x38ba }
            r1.<init>()     // Catch:{ Exception -> 0x38ba }
            r6 = r1
            long r1 = r14.id     // Catch:{ Exception -> 0x38ba }
            r6.id = r1     // Catch:{ Exception -> 0x38ba }
            long r1 = r14.access_hash     // Catch:{ Exception -> 0x38ba }
            r6.access_hash = r1     // Catch:{ Exception -> 0x38ba }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x38ba }
            byte[] r2 = r14.key     // Catch:{ Exception -> 0x38ba }
            r1.key = r2     // Catch:{ Exception -> 0x38ba }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x38ba }
            byte[] r2 = r14.iv     // Catch:{ Exception -> 0x38ba }
            r1.iv = r2     // Catch:{ Exception -> 0x38ba }
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x38ba }
            r5 = r93
            org.telegram.tgnet.TLRPC$Message r3 = r5.messageOwner     // Catch:{ Exception -> 0x3940 }
            r19 = 0
            r2 = r12
            r4 = r10
            r93 = r5
            r5 = r6
            r24 = r6
            r6 = r19
            r19 = r7
            r7 = r93
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x38ba }
            r4 = r90
            r5 = r93
            r7 = r97
            r6 = r75
            r2 = r76
            goto L_0x3a75
        L_0x3940:
            r0 = move-exception
            r93 = r5
            r5 = r90
            r7 = r93
            r1 = r0
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r20 = r37
            r15 = r72
            r65 = r73
            r25 = r75
            r6 = r76
            r8 = r100
            goto L_0x45cb
        L_0x395f:
            r19 = r7
        L_0x3961:
            if (r37 != 0) goto L_0x3a35
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x3a15 }
            r3.<init>(r8)     // Catch:{ Exception -> 0x3a15 }
            r3.encryptedChat = r10     // Catch:{ Exception -> 0x39f5 }
            r7 = 2
            r3.type = r7     // Catch:{ Exception -> 0x39f5 }
            r3.sendEncryptedRequest = r12     // Catch:{ Exception -> 0x39f5 }
            r6 = r75
            r3.originalPath = r6     // Catch:{ Exception -> 0x39d5 }
            r5 = r93
            r3.obj = r5     // Catch:{ Exception -> 0x39b7 }
            if (r90 == 0) goto L_0x39a5
            r4 = r90
            boolean r24 = r4.containsKey(r2)     // Catch:{ Exception -> 0x398a }
            if (r24 == 0) goto L_0x39a7
            java.lang.Object r2 = r4.get(r2)     // Catch:{ Exception -> 0x398a }
            r3.parentObject = r2     // Catch:{ Exception -> 0x398a }
            r2 = r76
            goto L_0x39ab
        L_0x398a:
            r0 = move-exception
            r1 = r0
            r20 = r3
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r15 = r72
            r65 = r73
            r8 = r100
            r5 = r4
            r25 = r6
            r6 = r76
            goto L_0x45cb
        L_0x39a5:
            r4 = r90
        L_0x39a7:
            r2 = r76
            r3.parentObject = r2     // Catch:{ Exception -> 0x3a52 }
        L_0x39ab:
            r7 = 1
            r3.performMediaUpload = r7     // Catch:{ Exception -> 0x3a52 }
            if (r13 == 0) goto L_0x39b2
            r7 = 1
            goto L_0x39b3
        L_0x39b2:
            r7 = 0
        L_0x39b3:
            r3.scheduled = r7     // Catch:{ Exception -> 0x3a52 }
            goto L_0x3a3f
        L_0x39b7:
            r0 = move-exception
            r4 = r90
            r2 = r76
            r1 = r0
            r20 = r3
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r15 = r72
            r65 = r73
            r8 = r100
            r5 = r4
            r25 = r6
            r6 = r2
            goto L_0x45cb
        L_0x39d5:
            r0 = move-exception
            r4 = r90
            r5 = r93
            r2 = r76
            r1 = r0
            r20 = r3
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r15 = r72
            r65 = r73
            r8 = r100
            r5 = r4
            r25 = r6
            r6 = r2
            goto L_0x45cb
        L_0x39f5:
            r0 = move-exception
            r4 = r90
            r5 = r93
            r2 = r76
            r1 = r0
            r6 = r2
            r20 = r3
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r15 = r72
            r65 = r73
            r25 = r75
            r8 = r100
            r5 = r4
            goto L_0x45cb
        L_0x3a15:
            r0 = move-exception
            r4 = r90
            r5 = r93
            r2 = r76
            r1 = r0
            r6 = r2
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r20 = r37
            r15 = r72
            r65 = r73
            r25 = r75
            r8 = r100
            r5 = r4
            goto L_0x45cb
        L_0x3a35:
            r4 = r90
            r5 = r93
            r6 = r75
            r2 = r76
            r3 = r37
        L_0x3a3f:
            r7 = r97
            if (r7 == 0) goto L_0x3a6c
            int r24 = r97.length()     // Catch:{ Exception -> 0x3a52 }
            if (r24 <= 0) goto L_0x3a6c
            boolean r1 = r7.startsWith(r1)     // Catch:{ Exception -> 0x3a52 }
            if (r1 == 0) goto L_0x3a6c
            r3.httpLocation = r7     // Catch:{ Exception -> 0x3a52 }
            goto L_0x3a6c
        L_0x3a52:
            r0 = move-exception
            r1 = r0
            r20 = r3
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r15 = r72
            r65 = r73
            r8 = r100
            r5 = r4
            r25 = r6
            r6 = r2
            goto L_0x45cb
        L_0x3a6c:
            int r1 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x3a73
            r11.performSendDelayedMessage(r3)     // Catch:{ Exception -> 0x3a52 }
        L_0x3a73:
            r37 = r3
        L_0x3a75:
            r49 = r14
            r24 = r15
            r1 = r37
            r14 = r6
            r15 = r7
            r6 = r4
            r7 = r5
            r4 = r73
            r5 = r2
            goto L_0x3d64
        L_0x3a84:
            r0 = move-exception
            r4 = r90
            r5 = r93
            r7 = r97
            r2 = r76
            r1 = r0
            r6 = r2
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r20 = r37
            r15 = r72
            r65 = r73
            r25 = r75
            r8 = r100
            r5 = r4
            goto L_0x45cb
        L_0x3aa6:
            r0 = move-exception
            r4 = r90
            r2 = r6
            r66 = r13
            r37 = r64
            r13 = r5
            r5 = r7
            r7 = r97
            r1 = r0
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r65 = r73
            r8 = r100
            r5 = r4
            goto L_0x45cb
        L_0x3aca:
            r18 = r89
            r3 = r90
            r5 = r93
            r7 = r97
            r4 = r8
            r66 = r13
            r25 = r14
            r6 = r35
            r2 = r42
            r31 = r53
            r37 = r64
            r14 = r69
            r73 = r70
            r13 = r9
            r8 = r95
        L_0x3ae6:
            r90 = r3
            r35 = r6
            r6 = r73
            java.util.ArrayList r3 = r6.sizes     // Catch:{ Exception -> 0x3var_ }
            r19 = r4
            r4 = 0
            java.lang.Object r3 = r3.get(r4)     // Catch:{ Exception -> 0x3ee2 }
            org.telegram.tgnet.TLRPC$PhotoSize r3 = (org.telegram.tgnet.TLRPC.PhotoSize) r3     // Catch:{ Exception -> 0x3ee2 }
            r4 = r3
            java.util.ArrayList r3 = r6.sizes     // Catch:{ Exception -> 0x3ee2 }
            java.util.ArrayList r7 = r6.sizes     // Catch:{ Exception -> 0x3ee2 }
            int r7 = r7.size()     // Catch:{ Exception -> 0x3ee2 }
            r24 = 1
            int r7 = r7 + -1
            java.lang.Object r3 = r3.get(r7)     // Catch:{ Exception -> 0x3ee2 }
            org.telegram.tgnet.TLRPC$PhotoSize r3 = (org.telegram.tgnet.TLRPC.PhotoSize) r3     // Catch:{ Exception -> 0x3ee2 }
            r7 = r3
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r4)     // Catch:{ Exception -> 0x3ee2 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto r3 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto     // Catch:{ Exception -> 0x3ee2 }
            r3.<init>()     // Catch:{ Exception -> 0x3ee2 }
            r12.media = r3     // Catch:{ Exception -> 0x3ee2 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ee2 }
            r3.caption = r15     // Catch:{ Exception -> 0x3ee2 }
            byte[] r3 = r4.bytes     // Catch:{ Exception -> 0x3ee2 }
            if (r3 == 0) goto L_0x3b60
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3b44 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto) r3     // Catch:{ Exception -> 0x3b44 }
            r65 = r6
            byte[] r6 = r4.bytes     // Catch:{ Exception -> 0x3b2a }
            r3.thumb = r6     // Catch:{ Exception -> 0x3b2a }
            r49 = r14
            goto L_0x3b6d
        L_0x3b2a:
            r0 = move-exception
            r6 = r90
            r1 = r0
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r5 = r19
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r8 = r100
            goto L_0x45cb
        L_0x3b44:
            r0 = move-exception
            r65 = r6
            r6 = r90
            r1 = r0
            r7 = r5
            r12 = r8
            r49 = r14
            r46 = r15
            r5 = r19
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r8 = r100
            goto L_0x45cb
        L_0x3b60:
            r65 = r6
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ec1 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto) r3     // Catch:{ Exception -> 0x3ec1 }
            r49 = r14
            r6 = 0
            byte[] r14 = new byte[r6]     // Catch:{ Exception -> 0x3ea2 }
            r3.thumb = r14     // Catch:{ Exception -> 0x3ea2 }
        L_0x3b6d:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ea2 }
            int r6 = r4.h     // Catch:{ Exception -> 0x3ea2 }
            r3.thumb_h = r6     // Catch:{ Exception -> 0x3ea2 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ea2 }
            int r6 = r4.w     // Catch:{ Exception -> 0x3ea2 }
            r3.thumb_w = r6     // Catch:{ Exception -> 0x3ea2 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ea2 }
            int r6 = r7.w     // Catch:{ Exception -> 0x3ea2 }
            r3.w = r6     // Catch:{ Exception -> 0x3ea2 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ea2 }
            int r6 = r7.h     // Catch:{ Exception -> 0x3ea2 }
            r3.h = r6     // Catch:{ Exception -> 0x3ea2 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r12.media     // Catch:{ Exception -> 0x3ea2 }
            int r6 = r7.size     // Catch:{ Exception -> 0x3ea2 }
            r3.size = r6     // Catch:{ Exception -> 0x3ea2 }
            org.telegram.tgnet.TLRPC$FileLocation r3 = r7.location     // Catch:{ Exception -> 0x3ea2 }
            byte[] r3 = r3.key     // Catch:{ Exception -> 0x3ea2 }
            if (r3 == 0) goto L_0x3CLASSNAME
            int r3 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x3ba7
            r77 = r90
            r93 = r5
            r28 = r7
            r24 = r15
            r78 = r19
            r14 = r35
            r15 = r97
            r19 = r4
            goto L_0x3CLASSNAME
        L_0x3ba7:
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r1 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x3CLASSNAME }
            r1.<init>()     // Catch:{ Exception -> 0x3CLASSNAME }
            r14 = r1
            org.telegram.tgnet.TLRPC$FileLocation r1 = r7.location     // Catch:{ Exception -> 0x3CLASSNAME }
            long r1 = r1.volume_id     // Catch:{ Exception -> 0x3CLASSNAME }
            r14.id = r1     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.tgnet.TLRPC$FileLocation r1 = r7.location     // Catch:{ Exception -> 0x3CLASSNAME }
            long r1 = r1.secret     // Catch:{ Exception -> 0x3CLASSNAME }
            r14.access_hash = r1     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.tgnet.TLRPC$FileLocation r2 = r7.location     // Catch:{ Exception -> 0x3CLASSNAME }
            byte[] r2 = r2.key     // Catch:{ Exception -> 0x3CLASSNAME }
            r1.key = r2     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r12.media     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.tgnet.TLRPC$FileLocation r2 = r7.location     // Catch:{ Exception -> 0x3CLASSNAME }
            byte[] r2 = r2.iv     // Catch:{ Exception -> 0x3CLASSNAME }
            r1.iv = r2     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x3CLASSNAME }
            org.telegram.tgnet.TLRPC$Message r3 = r5.messageOwner     // Catch:{ Exception -> 0x3CLASSNAME }
            r6 = 0
            r2 = r12
            r77 = r90
            r78 = r19
            r19 = r4
            r4 = r10
            r93 = r5
            r5 = r14
            r85 = r14
            r24 = r15
            r14 = r35
            r15 = r65
            r28 = r7
            r15 = r97
            r7 = r93
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x3bf6 }
            r7 = r93
            r4 = r65
            r5 = r77
            r6 = r78
            goto L_0x3d62
        L_0x3bf6:
            r0 = move-exception
            r7 = r93
            r1 = r0
            r12 = r8
            r46 = r24
            r53 = r31
            r20 = r37
            r15 = r72
            r6 = r77
            r5 = r78
            r8 = r100
            r81 = r25
            r25 = r14
            r14 = r81
            goto L_0x45cb
        L_0x3CLASSNAME:
            r0 = move-exception
            r77 = r90
            r93 = r5
            r24 = r15
            r78 = r19
            r15 = r97
            r7 = r93
            r1 = r0
            r12 = r8
            r46 = r24
            r14 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r6 = r77
            r5 = r78
            r8 = r100
            goto L_0x45cb
        L_0x3CLASSNAME:
            r77 = r90
            r93 = r5
            r28 = r7
            r24 = r15
            r78 = r19
            r14 = r35
            r15 = r97
            r19 = r4
        L_0x3CLASSNAME:
            if (r37 != 0) goto L_0x3cf1
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x3cd1 }
            r3.<init>(r8)     // Catch:{ Exception -> 0x3cd1 }
            r3.encryptedChat = r10     // Catch:{ Exception -> 0x3cb1 }
            r4 = 0
            r3.type = r4     // Catch:{ Exception -> 0x3cb1 }
            r3.originalPath = r14     // Catch:{ Exception -> 0x3cb1 }
            r3.sendEncryptedRequest = r12     // Catch:{ Exception -> 0x3cb1 }
            r7 = r93
            r3.obj = r7     // Catch:{ Exception -> 0x3CLASSNAME }
            r6 = r78
            if (r6 == 0) goto L_0x3CLASSNAME
            boolean r4 = r6.containsKey(r2)     // Catch:{ Exception -> 0x3c6b }
            if (r4 == 0) goto L_0x3CLASSNAME
            java.lang.Object r2 = r6.get(r2)     // Catch:{ Exception -> 0x3c6b }
            r3.parentObject = r2     // Catch:{ Exception -> 0x3c6b }
            r5 = r77
            goto L_0x3CLASSNAME
        L_0x3c6b:
            r0 = move-exception
            r1 = r0
            r20 = r3
            r5 = r6
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r6 = r77
            r8 = r100
            r81 = r25
            r25 = r14
            r14 = r81
            goto L_0x45cb
        L_0x3CLASSNAME:
            r5 = r77
            r3.parentObject = r5     // Catch:{ Exception -> 0x3d0a }
        L_0x3CLASSNAME:
            r2 = 1
            r3.performMediaUpload = r2     // Catch:{ Exception -> 0x3d0a }
            if (r13 == 0) goto L_0x3c8e
            r2 = 1
            goto L_0x3c8f
        L_0x3c8e:
            r2 = 0
        L_0x3c8f:
            r3.scheduled = r2     // Catch:{ Exception -> 0x3d0a }
            goto L_0x3cf9
        L_0x3CLASSNAME:
            r0 = move-exception
            r5 = r77
            r6 = r78
            r1 = r0
            r20 = r3
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r81 = r6
            r6 = r5
            r5 = r81
            r82 = r25
            r25 = r14
            r14 = r82
            goto L_0x45cb
        L_0x3cb1:
            r0 = move-exception
            r7 = r93
            r5 = r77
            r6 = r78
            r1 = r0
            r20 = r3
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r81 = r6
            r6 = r5
            r5 = r81
            r82 = r25
            r25 = r14
            r14 = r82
            goto L_0x45cb
        L_0x3cd1:
            r0 = move-exception
            r7 = r93
            r5 = r77
            r6 = r78
            r1 = r0
            r12 = r8
            r46 = r24
            r53 = r31
            r20 = r37
            r15 = r72
            r8 = r100
            r81 = r6
            r6 = r5
            r5 = r81
            r82 = r25
            r25 = r14
            r14 = r82
            goto L_0x45cb
        L_0x3cf1:
            r7 = r93
            r5 = r77
            r6 = r78
            r3 = r37
        L_0x3cf9:
            boolean r2 = android.text.TextUtils.isEmpty(r97)     // Catch:{ Exception -> 0x3e82 }
            if (r2 != 0) goto L_0x3d24
            boolean r1 = r15.startsWith(r1)     // Catch:{ Exception -> 0x3d0a }
            if (r1 == 0) goto L_0x3d24
            r3.httpLocation = r15     // Catch:{ Exception -> 0x3d0a }
            r4 = r65
            goto L_0x3d3c
        L_0x3d0a:
            r0 = move-exception
            r1 = r0
            r20 = r3
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r81 = r6
            r6 = r5
            r5 = r81
            r82 = r25
            r25 = r14
            r14 = r82
            goto L_0x45cb
        L_0x3d24:
            r4 = r65
            java.util.ArrayList r1 = r4.sizes     // Catch:{ Exception -> 0x3e60 }
            java.util.ArrayList r2 = r4.sizes     // Catch:{ Exception -> 0x3e60 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x3e60 }
            r35 = 1
            int r2 = r2 + -1
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x3e60 }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = (org.telegram.tgnet.TLRPC.PhotoSize) r1     // Catch:{ Exception -> 0x3e60 }
            r3.photoSize = r1     // Catch:{ Exception -> 0x3e60 }
            r3.locationParent = r4     // Catch:{ Exception -> 0x3e60 }
        L_0x3d3c:
            int r1 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x3d60
            r11.performSendDelayedMessage(r3)     // Catch:{ Exception -> 0x3d44 }
            goto L_0x3d60
        L_0x3d44:
            r0 = move-exception
            r1 = r0
            r20 = r3
            r65 = r4
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r81 = r6
            r6 = r5
            r5 = r81
            r82 = r25
            r25 = r14
            r14 = r82
            goto L_0x45cb
        L_0x3d60:
            r37 = r3
        L_0x3d62:
            r1 = r37
        L_0x3d64:
            int r2 = (r43 > r16 ? 1 : (r43 == r16 ? 0 : -1))
            if (r2 == 0) goto L_0x3e11
            org.telegram.tgnet.TLObject r2 = r1.sendEncryptedRequest     // Catch:{ Exception -> 0x3def }
            if (r2 == 0) goto L_0x3d8d
            org.telegram.tgnet.TLObject r2 = r1.sendEncryptedRequest     // Catch:{ Exception -> 0x3d71 }
            org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia r2 = (org.telegram.tgnet.TLRPC.TL_messages_sendEncryptedMultiMedia) r2     // Catch:{ Exception -> 0x3d71 }
            goto L_0x3d94
        L_0x3d71:
            r0 = move-exception
            r20 = r1
            r65 = r4
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r1 = r0
            r81 = r6
            r6 = r5
            r5 = r81
            r82 = r25
            r25 = r14
            r14 = r82
            goto L_0x45cb
        L_0x3d8d:
            org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia r2 = new org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia     // Catch:{ Exception -> 0x3def }
            r2.<init>()     // Catch:{ Exception -> 0x3def }
            r1.sendEncryptedRequest = r2     // Catch:{ Exception -> 0x3def }
        L_0x3d94:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r1.messageObjects     // Catch:{ Exception -> 0x3def }
            r3.add(r7)     // Catch:{ Exception -> 0x3def }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r1.messages     // Catch:{ Exception -> 0x3def }
            r90 = r5
            r5 = r25
            r3.add(r5)     // Catch:{ Exception -> 0x3dd1 }
            java.util.ArrayList<java.lang.String> r3 = r1.originalPaths     // Catch:{ Exception -> 0x3dd1 }
            r3.add(r14)     // Catch:{ Exception -> 0x3dd1 }
            r3 = 1
            r1.performMediaUpload = r3     // Catch:{ Exception -> 0x3dd1 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_decryptedMessage> r3 = r2.messages     // Catch:{ Exception -> 0x3dd1 }
            r3.add(r12)     // Catch:{ Exception -> 0x3dd1 }
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r3 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x3dd1 }
            r3.<init>()     // Catch:{ Exception -> 0x3dd1 }
            r65 = r4
            r25 = r6
            r4 = r66
            r6 = 3
            if (r4 == r6) goto L_0x3dc0
            r6 = 7
            if (r4 != r6) goto L_0x3dc2
        L_0x3dc0:
            r16 = 1
        L_0x3dc2:
            r35 = r14
            r14 = r16
            r3.id = r14     // Catch:{ Exception -> 0x3e30 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputEncryptedFile> r6 = r2.files     // Catch:{ Exception -> 0x3e30 }
            r6.add(r3)     // Catch:{ Exception -> 0x3e30 }
            r11.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x3e30 }
            goto L_0x3e1d
        L_0x3dd1:
            r0 = move-exception
            r65 = r4
            r25 = r6
            r4 = r66
            r6 = r90
            r20 = r1
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r1 = r0
            r81 = r14
            r14 = r5
            r5 = r25
            r25 = r81
            goto L_0x45cb
        L_0x3def:
            r0 = move-exception
            r65 = r4
            r90 = r5
            r5 = r25
            r4 = r66
            r25 = r6
            r6 = r90
            r20 = r1
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r1 = r0
            r81 = r14
            r14 = r5
            r5 = r25
            r25 = r81
            goto L_0x45cb
        L_0x3e11:
            r65 = r4
            r90 = r5
            r35 = r14
            r5 = r25
            r4 = r66
            r25 = r6
        L_0x3e1d:
            if (r102 != 0) goto L_0x3e48
            org.telegram.messenger.MediaDataController r2 = r84.getMediaDataController()     // Catch:{ Exception -> 0x3e30 }
            if (r99 == 0) goto L_0x3e2a
            int r3 = r99.getId()     // Catch:{ Exception -> 0x3e30 }
            goto L_0x3e2b
        L_0x3e2a:
            r3 = 0
        L_0x3e2b:
            r6 = 0
            r2.cleanDraft(r8, r3, r6)     // Catch:{ Exception -> 0x3e30 }
            goto L_0x3e48
        L_0x3e30:
            r0 = move-exception
            r6 = r90
            r20 = r1
            r66 = r4
            r14 = r5
            r12 = r8
            r46 = r24
            r5 = r25
            r53 = r31
            r25 = r35
            r15 = r72
            r8 = r100
            r1 = r0
            goto L_0x45cb
        L_0x3e48:
            r39 = r90
            r6 = r1
            r38 = r4
            r16 = r5
            r19 = r7
            r12 = r8
            r9 = r25
            r25 = r35
            r35 = r45
            r28 = r65
            r14 = r71
            r15 = r72
            goto L_0x41e9
        L_0x3e60:
            r0 = move-exception
            r65 = r4
            r90 = r5
            r5 = r25
            r4 = r66
            r25 = r6
            r6 = r90
            r1 = r0
            r20 = r3
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r81 = r14
            r14 = r5
            r5 = r25
            r25 = r81
            goto L_0x45cb
        L_0x3e82:
            r0 = move-exception
            r90 = r5
            r5 = r25
            r4 = r66
            r25 = r6
            r6 = r90
            r1 = r0
            r20 = r3
            r12 = r8
            r46 = r24
            r53 = r31
            r15 = r72
            r8 = r100
            r81 = r14
            r14 = r5
            r5 = r25
            r25 = r81
            goto L_0x45cb
        L_0x3ea2:
            r0 = move-exception
            r7 = r5
            r24 = r15
            r5 = r25
            r4 = r66
            r25 = r19
            r6 = r90
            r1 = r0
            r14 = r5
            r12 = r8
            r46 = r24
            r5 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r8 = r100
            goto L_0x45cb
        L_0x3ec1:
            r0 = move-exception
            r7 = r5
            r49 = r14
            r24 = r15
            r5 = r25
            r4 = r66
            r25 = r19
            r6 = r90
            r1 = r0
            r14 = r5
            r12 = r8
            r46 = r24
            r5 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r8 = r100
            goto L_0x45cb
        L_0x3ee2:
            r0 = move-exception
            r7 = r5
            r65 = r6
            r49 = r14
            r24 = r15
            r5 = r25
            r4 = r66
            r25 = r19
            r6 = r90
            r1 = r0
            r14 = r5
            r12 = r8
            r46 = r24
            r5 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r8 = r100
            goto L_0x45cb
        L_0x3var_:
            r0 = move-exception
            r7 = r5
            r65 = r6
            r49 = r14
            r24 = r15
            r5 = r25
            r25 = r4
            r4 = r66
            r6 = r90
            r1 = r0
            r14 = r5
            r12 = r8
            r46 = r24
            r5 = r25
            r53 = r31
            r25 = r35
            r20 = r37
            r15 = r72
            r8 = r100
            goto L_0x45cb
        L_0x3var_:
            r0 = move-exception
            r18 = r89
            r7 = r93
            r25 = r5
            r4 = r13
            r5 = r14
            r24 = r15
            r21 = r31
            r31 = r53
            r37 = r64
            r49 = r69
            r65 = r70
            r13 = r9
            r6 = r90
            r12 = r95
            r8 = r100
            r1 = r0
            r66 = r4
            r46 = r24
            r5 = r25
            r25 = r35
            r20 = r37
            r15 = r72
            goto L_0x45cb
        L_0x3var_:
            r0 = move-exception
            r18 = r89
            r7 = r93
            r4 = r13
            r5 = r14
            r24 = r15
            r21 = r31
            r31 = r53
            r37 = r64
            r49 = r69
            r65 = r70
            r13 = r9
            r6 = r90
            r12 = r95
            r8 = r100
            r1 = r0
            r66 = r4
            r46 = r24
            r5 = r25
            r25 = r35
            r20 = r37
            r15 = r72
            goto L_0x45cb
        L_0x3f7c:
            r65 = r87
            r71 = r88
            r7 = r90
            r4 = r93
            r3 = r105
            r37 = r6
            r5 = r8
            r72 = r11
            r32 = r18
            r29 = r21
            r33 = r34
            r24 = r46
            r43 = r50
            r31 = r53
            r90 = r85
            r21 = r86
            r18 = r89
            r11 = r10
            r10 = r12
            r35 = r25
            r25 = r13
            r13 = r9
            r8 = r14
        L_0x3fa5:
            if (r10 != 0) goto L_0x40f7
            org.telegram.tgnet.TLRPC$TL_messages_sendMessage r1 = new org.telegram.tgnet.TLRPC$TL_messages_sendMessage     // Catch:{ Exception -> 0x40d1 }
            r1.<init>()     // Catch:{ Exception -> 0x40d1 }
            r12 = r1
            r14 = r71
            r12.message = r14     // Catch:{ Exception -> 0x40ab }
            if (r102 != 0) goto L_0x3fb5
            r3 = 1
            goto L_0x3fb6
        L_0x3fb5:
            r3 = 0
        L_0x3fb6:
            r12.clear_draft = r3     // Catch:{ Exception -> 0x40ab }
            boolean r1 = r5.silent     // Catch:{ Exception -> 0x40ab }
            r12.silent = r1     // Catch:{ Exception -> 0x40ab }
            r15 = r72
            r12.peer = r15     // Catch:{ Exception -> 0x4087 }
            long r1 = r5.random_id     // Catch:{ Exception -> 0x4087 }
            r12.random_id = r1     // Catch:{ Exception -> 0x4087 }
            org.telegram.tgnet.TLRPC$Peer r1 = r5.from_id     // Catch:{ Exception -> 0x4087 }
            if (r1 == 0) goto L_0x3fed
            org.telegram.messenger.MessagesController r1 = r84.getMessagesController()     // Catch:{ Exception -> 0x3fd5 }
            org.telegram.tgnet.TLRPC$Peer r2 = r5.from_id     // Catch:{ Exception -> 0x3fd5 }
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((org.telegram.tgnet.TLRPC.Peer) r2)     // Catch:{ Exception -> 0x3fd5 }
            r12.send_as = r1     // Catch:{ Exception -> 0x3fd5 }
            goto L_0x3fed
        L_0x3fd5:
            r0 = move-exception
            r6 = r90
            r1 = r0
            r66 = r4
            r12 = r8
            r71 = r14
            r46 = r24
            r53 = r31
            r20 = r37
            r8 = r100
            r14 = r5
            r5 = r25
            r25 = r35
            goto L_0x45cb
        L_0x3fed:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r5.reply_to     // Catch:{ Exception -> 0x4087 }
            if (r1 == 0) goto L_0x4003
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r5.reply_to     // Catch:{ Exception -> 0x3fd5 }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x3fd5 }
            if (r1 == 0) goto L_0x4003
            int r1 = r12.flags     // Catch:{ Exception -> 0x3fd5 }
            r2 = 1
            r1 = r1 | r2
            r12.flags = r1     // Catch:{ Exception -> 0x3fd5 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r5.reply_to     // Catch:{ Exception -> 0x3fd5 }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x3fd5 }
            r12.reply_to_msg_id = r1     // Catch:{ Exception -> 0x3fd5 }
        L_0x4003:
            if (r101 != 0) goto L_0x4008
            r1 = 1
            r12.no_webpage = r1     // Catch:{ Exception -> 0x3fd5 }
        L_0x4008:
            r6 = r103
            if (r6 == 0) goto L_0x401b
            boolean r1 = r103.isEmpty()     // Catch:{ Exception -> 0x3fd5 }
            if (r1 != 0) goto L_0x401b
            r12.entities = r6     // Catch:{ Exception -> 0x3fd5 }
            int r1 = r12.flags     // Catch:{ Exception -> 0x3fd5 }
            r2 = 8
            r1 = r1 | r2
            r12.flags = r1     // Catch:{ Exception -> 0x3fd5 }
        L_0x401b:
            if (r13 == 0) goto L_0x4025
            r12.schedule_date = r13     // Catch:{ Exception -> 0x3fd5 }
            int r1 = r12.flags     // Catch:{ Exception -> 0x3fd5 }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r12.flags = r1     // Catch:{ Exception -> 0x3fd5 }
        L_0x4025:
            r16 = 0
            r17 = 0
            if (r13 == 0) goto L_0x402e
            r19 = 1
            goto L_0x4030
        L_0x402e:
            r19 = 0
        L_0x4030:
            r1 = r84
            r2 = r12
            r3 = r7
            r38 = r4
            r28 = r65
            r4 = r16
            r39 = r90
            r79 = r5
            r5 = r17
            r16 = r25
            r6 = r39
            r80 = r7
            r7 = r16
            r85 = r12
            r25 = r35
            r12 = r8
            r9 = r16
            r8 = r19
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x406e }
            if (r102 != 0) goto L_0x4066
            org.telegram.messenger.MediaDataController r1 = r84.getMediaDataController()     // Catch:{ Exception -> 0x406e }
            if (r99 == 0) goto L_0x4061
            int r3 = r99.getId()     // Catch:{ Exception -> 0x406e }
            goto L_0x4062
        L_0x4061:
            r3 = 0
        L_0x4062:
            r2 = 0
            r1.cleanDraft(r12, r3, r2)     // Catch:{ Exception -> 0x406e }
        L_0x4066:
            r35 = r45
            r16 = r79
            r19 = r80
            goto L_0x41e7
        L_0x406e:
            r0 = move-exception
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r46 = r24
            r65 = r28
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            r14 = r79
            r7 = r80
            goto L_0x45cb
        L_0x4087:
            r0 = move-exception
            r39 = r90
            r38 = r4
            r79 = r5
            r80 = r7
            r12 = r8
            r9 = r25
            r25 = r35
            r28 = r65
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r46 = r24
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            r14 = r79
            goto L_0x45cb
        L_0x40ab:
            r0 = move-exception
            r39 = r90
            r38 = r4
            r79 = r5
            r80 = r7
            r12 = r8
            r9 = r25
            r25 = r35
            r28 = r65
            r15 = r72
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r46 = r24
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            r14 = r79
            goto L_0x45cb
        L_0x40d1:
            r0 = move-exception
            r39 = r90
            r38 = r4
            r79 = r5
            r80 = r7
            r12 = r8
            r9 = r25
            r25 = r35
            r28 = r65
            r14 = r71
            r15 = r72
            r8 = r100
            r1 = r0
            r5 = r9
            r46 = r24
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            r14 = r79
            goto L_0x45cb
        L_0x40f7:
            r39 = r90
            r38 = r4
            r79 = r5
            r80 = r7
            r12 = r8
            r9 = r25
            r25 = r35
            r28 = r65
            r14 = r71
            r15 = r72
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessage     // Catch:{ Exception -> 0x427f }
            r1.<init>()     // Catch:{ Exception -> 0x427f }
            r8 = r1
            r7 = r79
            int r1 = r7.ttl     // Catch:{ Exception -> 0x4260 }
            r8.ttl = r1     // Catch:{ Exception -> 0x4260 }
            r6 = r103
            if (r6 == 0) goto L_0x4141
            boolean r1 = r103.isEmpty()     // Catch:{ Exception -> 0x4129 }
            if (r1 != 0) goto L_0x4141
            r8.entities = r6     // Catch:{ Exception -> 0x4129 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x4129 }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r8.flags = r1     // Catch:{ Exception -> 0x4129 }
            goto L_0x4141
        L_0x4129:
            r0 = move-exception
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r46 = r24
            r65 = r28
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            r14 = r7
            r7 = r80
            goto L_0x45cb
        L_0x4141:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r7.reply_to     // Catch:{ Exception -> 0x4260 }
            if (r1 == 0) goto L_0x415a
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r7.reply_to     // Catch:{ Exception -> 0x4129 }
            long r1 = r1.reply_to_random_id     // Catch:{ Exception -> 0x4129 }
            int r4 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x415a
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r7.reply_to     // Catch:{ Exception -> 0x4129 }
            long r1 = r1.reply_to_random_id     // Catch:{ Exception -> 0x4129 }
            r8.reply_to_random_id = r1     // Catch:{ Exception -> 0x4129 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x4129 }
            r2 = 8
            r1 = r1 | r2
            r8.flags = r1     // Catch:{ Exception -> 0x4129 }
        L_0x415a:
            if (r9 == 0) goto L_0x4170
            java.lang.Object r1 = r9.get(r3)     // Catch:{ Exception -> 0x4129 }
            if (r1 == 0) goto L_0x4170
            java.lang.Object r1 = r9.get(r3)     // Catch:{ Exception -> 0x4129 }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x4129 }
            r8.via_bot_name = r1     // Catch:{ Exception -> 0x4129 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x4129 }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r8.flags = r1     // Catch:{ Exception -> 0x4129 }
        L_0x4170:
            boolean r1 = r7.silent     // Catch:{ Exception -> 0x4260 }
            r8.silent = r1     // Catch:{ Exception -> 0x4260 }
            long r1 = r7.random_id     // Catch:{ Exception -> 0x4260 }
            r8.random_id = r1     // Catch:{ Exception -> 0x4260 }
            r8.message = r14     // Catch:{ Exception -> 0x4260 }
            r5 = r45
            if (r5 == 0) goto L_0x41b0
            java.lang.String r1 = r5.url     // Catch:{ Exception -> 0x4196 }
            if (r1 == 0) goto L_0x41b0
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage     // Catch:{ Exception -> 0x4196 }
            r1.<init>()     // Catch:{ Exception -> 0x4196 }
            r8.media = r1     // Catch:{ Exception -> 0x4196 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r8.media     // Catch:{ Exception -> 0x4196 }
            java.lang.String r2 = r5.url     // Catch:{ Exception -> 0x4196 }
            r1.url = r2     // Catch:{ Exception -> 0x4196 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x4196 }
            r1 = r1 | 512(0x200, float:7.175E-43)
            r8.flags = r1     // Catch:{ Exception -> 0x4196 }
            goto L_0x41b7
        L_0x4196:
            r0 = move-exception
            r8 = r100
            r1 = r0
            r45 = r5
            r5 = r9
            r71 = r14
            r46 = r24
            r65 = r28
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            r14 = r7
            r7 = r80
            goto L_0x45cb
        L_0x41b0:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty     // Catch:{ Exception -> 0x423f }
            r1.<init>()     // Catch:{ Exception -> 0x423f }
            r8.media = r1     // Catch:{ Exception -> 0x423f }
        L_0x41b7:
            org.telegram.messenger.SecretChatHelper r1 = r84.getSecretChatHelper()     // Catch:{ Exception -> 0x423f }
            r4 = r80
            org.telegram.tgnet.TLRPC$Message r3 = r4.messageOwner     // Catch:{ Exception -> 0x421e }
            r16 = 0
            r17 = 0
            r2 = r8
            r19 = r4
            r4 = r10
            r35 = r5
            r5 = r16
            r6 = r17
            r16 = r7
            r7 = r19
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x4203 }
            if (r102 != 0) goto L_0x41e6
            org.telegram.messenger.MediaDataController r1 = r84.getMediaDataController()     // Catch:{ Exception -> 0x4203 }
            if (r99 == 0) goto L_0x41e1
            int r3 = r99.getId()     // Catch:{ Exception -> 0x4203 }
            goto L_0x41e2
        L_0x41e1:
            r3 = 0
        L_0x41e2:
            r2 = 0
            r1.cleanDraft(r12, r3, r2)     // Catch:{ Exception -> 0x4203 }
        L_0x41e6:
        L_0x41e7:
            r6 = r37
        L_0x41e9:
            r4 = r100
            r20 = r6
            r5 = r9
            r9 = r14
            r8 = r16
            r2 = r18
            r7 = r19
            r46 = r24
            r65 = r28
            r3 = r31
            r45 = r35
            r6 = r39
            r1 = r49
            goto L_0x4608
        L_0x4203:
            r0 = move-exception
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r46 = r24
            r65 = r28
            r53 = r31
            r45 = r35
            r20 = r37
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x421e:
            r0 = move-exception
            r19 = r4
            r35 = r5
            r16 = r7
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r46 = r24
            r65 = r28
            r53 = r31
            r45 = r35
            r20 = r37
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x423f:
            r0 = move-exception
            r35 = r5
            r16 = r7
            r19 = r80
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r46 = r24
            r65 = r28
            r53 = r31
            r45 = r35
            r20 = r37
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x4260:
            r0 = move-exception
            r16 = r7
            r35 = r45
            r19 = r80
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r46 = r24
            r65 = r28
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x427f:
            r0 = move-exception
            r35 = r45
            r16 = r79
            r19 = r80
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r46 = r24
            r65 = r28
            r53 = r31
            r20 = r37
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x429e:
            r0 = move-exception
            r39 = r85
            r28 = r87
            r19 = r90
            r38 = r93
            r37 = r6
            r16 = r8
            r9 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r21 = r86
            r18 = r89
            r81 = r14
            r14 = r88
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r81
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r20 = r37
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x42d9:
            r0 = move-exception
            r39 = r85
            r28 = r87
            r19 = r90
            r38 = r93
            r16 = r8
            r9 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r21 = r86
            r18 = r89
            r81 = r14
            r14 = r88
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r81
            r8 = r100
            r1 = r0
            r20 = r3
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x4312:
            r0 = move-exception
            r39 = r85
            r28 = r87
            r19 = r90
            r38 = r93
            r16 = r8
            r9 = r13
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r21 = r86
            r18 = r89
            r81 = r14
            r14 = r88
            r15 = r11
            r11 = r10
            r10 = r12
            r12 = r81
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x4349:
            r0 = move-exception
            r39 = r85
            r28 = r87
            r38 = r93
            r19 = r6
            r16 = r8
            r100 = r10
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r21 = r86
            r14 = r88
            r15 = r11
            r11 = r84
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x4380:
            r0 = move-exception
            r39 = r85
            r28 = r87
            r38 = r93
            r16 = r8
            r100 = r10
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r29 = r21
            r33 = r34
            r35 = r45
            r24 = r46
            r31 = r53
            r21 = r86
            r14 = r88
            r15 = r11
            r11 = r84
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x43b5:
            r0 = move-exception
            r39 = r85
            r21 = r86
            r28 = r87
            r49 = r90
            r31 = r91
            r11 = r2
            r100 = r5
            r33 = r6
            r16 = r8
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r29 = r30
            r15 = r35
            r30 = r38
            r35 = r45
            r24 = r46
            r14 = r88
            r38 = r93
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r53 = r31
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x43f0:
            r0 = move-exception
            r39 = r85
            r21 = r86
            r28 = r87
            r49 = r90
            r31 = r91
            r11 = r2
            r33 = r6
            r16 = r8
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r29 = r30
            r15 = r35
            r30 = r38
            r35 = r45
            r24 = r46
            r14 = r88
            r38 = r93
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r53 = r31
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x4429:
            r0 = move-exception
            r39 = r85
            r21 = r86
            r28 = r87
            r49 = r90
            r31 = r91
            r11 = r2
            r26 = r4
            r33 = r6
            r16 = r8
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r29 = r30
            r15 = r35
            r30 = r38
            r35 = r45
            r24 = r46
            r14 = r88
            r38 = r93
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r53 = r31
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x4464:
            r0 = move-exception
            r39 = r85
            r21 = r86
            r28 = r87
            r49 = r90
            r31 = r91
            r11 = r2
            r16 = r8
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r33 = r26
            r29 = r30
            r30 = r38
            r35 = r45
            r24 = r46
            r14 = r88
            r38 = r93
            r26 = r4
            r15 = r6
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r53 = r31
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x449e:
            r0 = move-exception
            r39 = r85
            r21 = r86
            r28 = r87
            r49 = r90
            r31 = r91
            r11 = r2
            r16 = r8
            r100 = r10
            r10 = r12
            r9 = r13
            r12 = r14
            r32 = r18
            r33 = r26
            r29 = r30
            r30 = r38
            r35 = r45
            r24 = r46
            r14 = r88
            r38 = r93
            r26 = r4
            r15 = r6
            r18 = r89
            r8 = r100
            r1 = r0
            r5 = r9
            r71 = r14
            r14 = r16
            r7 = r19
            r65 = r28
            r53 = r31
            r66 = r38
            r6 = r39
            goto L_0x45cb
        L_0x44da:
            r0 = move-exception
            r11 = r2
            r10 = r12
            r12 = r14
            r33 = r26
            r29 = r30
            r30 = r38
            r26 = r4
            r15 = r6
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r32 = r93
            r5 = r100
            r6 = r109
            r1 = r0
            r46 = r7
            r53 = r8
            r14 = r9
            r7 = r19
            r66 = r21
            r21 = r87
            r8 = r108
            goto L_0x45cb
        L_0x4507:
            r0 = move-exception
            r100 = r1
            r11 = r2
            r10 = r12
            r12 = r14
            r33 = r26
            r29 = r30
            r30 = r38
            r26 = r4
            r15 = r6
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r32 = r93
            r5 = r100
            r6 = r109
            r1 = r0
            r46 = r7
            r53 = r8
            r14 = r9
            r7 = r19
            r66 = r21
            r21 = r87
            r8 = r108
            goto L_0x45cb
        L_0x4536:
            r0 = move-exception
            r100 = r1
            r11 = r2
            r29 = r4
            r30 = r5
            r10 = r12
            r12 = r14
            r15 = r6
            r81 = r26
            r26 = r32
            r33 = r81
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r32 = r93
            r5 = r100
            r6 = r109
            r1 = r0
            r46 = r7
            r53 = r8
            r14 = r9
            r7 = r19
            r66 = r21
            r21 = r87
            r8 = r108
            goto L_0x45cb
        L_0x4567:
            r0 = move-exception
            r100 = r1
            r11 = r2
            r86 = r4
            r10 = r12
            r12 = r14
            r29 = r30
            r15 = r35
            r30 = r38
            r81 = r26
            r26 = r32
            r33 = r81
            r71 = r85
            r45 = r86
            r65 = r88
            r18 = r89
            r49 = r91
            r32 = r93
            r5 = r100
            r6 = r109
            r1 = r0
            r46 = r7
            r53 = r8
            r14 = r9
            r7 = r19
            r66 = r21
            r21 = r87
            r8 = r108
            goto L_0x45cb
        L_0x459a:
            r0 = move-exception
            r11 = r84
            r8 = r90
            r4 = r5
            r10 = r12
            r12 = r14
            r29 = r30
            r15 = r35
            r30 = r38
            r81 = r26
            r26 = r32
            r33 = r81
            r71 = r85
            r46 = r86
            r65 = r88
            r49 = r91
            r32 = r93
            r45 = r100
            r6 = r109
            r1 = r0
            r53 = r8
            r14 = r18
            r7 = r19
            r66 = r21
            r21 = r87
            r18 = r89
            r8 = r108
        L_0x45cb:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)
            org.telegram.messenger.MessagesStorage r2 = r84.getMessagesStorage()
            if (r107 == 0) goto L_0x45d6
            r3 = 1
            goto L_0x45d7
        L_0x45d6:
            r3 = 0
        L_0x45d7:
            r2.markMessageAsSendError(r14, r3)
            if (r7 == 0) goto L_0x45e1
            org.telegram.tgnet.TLRPC$Message r2 = r7.messageOwner
            r3 = 2
            r2.send_state = r3
        L_0x45e1:
            org.telegram.messenger.NotificationCenter r2 = r84.getNotificationCenter()
            int r3 = org.telegram.messenger.NotificationCenter.messageSendError
            r4 = 1
            java.lang.Object[] r4 = new java.lang.Object[r4]
            int r9 = r14.id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r16 = 0
            r4[r16] = r9
            r2.postNotificationName(r3, r4)
            int r2 = r14.id
            r11.processSentMessage(r2)
            r4 = r8
            r8 = r14
            r2 = r18
            r1 = r49
            r3 = r53
            r38 = r66
            r9 = r71
        L_0x4608:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.sendMessage(java.lang.String, java.lang.String, org.telegram.tgnet.TLRPC$MessageMedia, org.telegram.tgnet.TLRPC$TL_photo, org.telegram.messenger.VideoEditedInfo, org.telegram.tgnet.TLRPC$User, org.telegram.tgnet.TLRPC$TL_document, org.telegram.tgnet.TLRPC$TL_game, org.telegram.tgnet.TLRPC$TL_messageMediaPoll, org.telegram.tgnet.TLRPC$TL_messageMediaInvoice, long, java.lang.String, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$WebPage, boolean, org.telegram.messenger.MessageObject, java.util.ArrayList, org.telegram.tgnet.TLRPC$ReplyMarkup, java.util.HashMap, boolean, int, int, java.lang.Object, org.telegram.messenger.MessageObject$SendAnimationData):void");
    }

    private void performSendDelayedMessage(DelayedMessage message) {
        performSendDelayedMessage(message, -1);
    }

    private TLRPC.PhotoSize getThumbForSecretChat(ArrayList<TLRPC.PhotoSize> arrayList) {
        if (arrayList == null || arrayList.isEmpty()) {
            return null;
        }
        int a = 0;
        int N = arrayList.size();
        while (a < N) {
            TLRPC.PhotoSize size = arrayList.get(a);
            if (size == null || (size instanceof TLRPC.TL_photoStrippedSize) || (size instanceof TLRPC.TL_photoPathSize) || (size instanceof TLRPC.TL_photoSizeEmpty) || size.location == null) {
                a++;
            } else {
                TLRPC.TL_photoSize photoSize = new TLRPC.TL_photoSize_layer127();
                photoSize.type = size.type;
                photoSize.w = size.w;
                photoSize.h = size.h;
                photoSize.size = size.size;
                photoSize.bytes = size.bytes;
                if (photoSize.bytes == null) {
                    photoSize.bytes = new byte[0];
                }
                photoSize.location = new TLRPC.TL_fileLocation_layer82();
                photoSize.location.dc_id = size.location.dc_id;
                photoSize.location.volume_id = size.location.volume_id;
                photoSize.location.local_id = size.location.local_id;
                photoSize.location.secret = size.location.secret;
                return photoSize;
            }
        }
        return null;
    }

    private void performSendDelayedMessage(DelayedMessage message, int index) {
        int index2;
        TLObject inputMedia;
        MessageObject messageObject;
        TLRPC.InputMedia media;
        TLRPC.InputMedia media2;
        TLRPC.InputMedia media3;
        DelayedMessage delayedMessage = message;
        boolean z = false;
        boolean z2 = true;
        if (delayedMessage.type == 0) {
            if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                String location = FileLoader.getPathToAttach(delayedMessage.photoSize).toString();
                putToDelayedMessages(location, delayedMessage);
                getFileLoader().uploadFile(location, false, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
            } else {
                String location2 = FileLoader.getPathToAttach(delayedMessage.photoSize).toString();
                if (!(delayedMessage.sendEncryptedRequest == null || delayedMessage.photoSize.location.dc_id == 0)) {
                    File file = new File(location2);
                    if (!file.exists()) {
                        location2 = FileLoader.getPathToAttach(delayedMessage.photoSize, true).toString();
                        file = new File(location2);
                    }
                    if (!file.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.photoSize), delayedMessage);
                        getFileLoader().loadFile(ImageLocation.getForObject(delayedMessage.photoSize, delayedMessage.locationParent), delayedMessage.parentObject, "jpg", 2, 0);
                        return;
                    }
                }
                putToDelayedMessages(location2, delayedMessage);
                getFileLoader().uploadFile(location2, true, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (delayedMessage.type == 1) {
            if (delayedMessage.videoEditedInfo == null || !delayedMessage.videoEditedInfo.needConvert()) {
                if (delayedMessage.videoEditedInfo != null) {
                    if (delayedMessage.videoEditedInfo.file != null) {
                        if (delayedMessage.sendRequest instanceof TLRPC.TL_messages_sendMedia) {
                            media3 = ((TLRPC.TL_messages_sendMedia) delayedMessage.sendRequest).media;
                        } else {
                            media3 = ((TLRPC.TL_messages_editMessage) delayedMessage.sendRequest).media;
                        }
                        media3.file = delayedMessage.videoEditedInfo.file;
                        delayedMessage.videoEditedInfo.file = null;
                    } else if (delayedMessage.videoEditedInfo.encryptedFile != null) {
                        TLRPC.TL_decryptedMessage decryptedMessage = (TLRPC.TL_decryptedMessage) delayedMessage.sendEncryptedRequest;
                        decryptedMessage.media.size = (int) delayedMessage.videoEditedInfo.estimatedSize;
                        decryptedMessage.media.key = delayedMessage.videoEditedInfo.key;
                        decryptedMessage.media.iv = delayedMessage.videoEditedInfo.iv;
                        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage, delayedMessage.obj.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, delayedMessage.obj);
                        delayedMessage.videoEditedInfo.encryptedFile = null;
                        return;
                    }
                }
                if (delayedMessage.sendRequest != null) {
                    if (delayedMessage.sendRequest instanceof TLRPC.TL_messages_sendMedia) {
                        media2 = ((TLRPC.TL_messages_sendMedia) delayedMessage.sendRequest).media;
                    } else {
                        media2 = ((TLRPC.TL_messages_editMessage) delayedMessage.sendRequest).media;
                    }
                    if (media2.file == null) {
                        String location3 = delayedMessage.obj.messageOwner.attachPath;
                        TLRPC.Document document = delayedMessage.obj.getDocument();
                        if (location3 == null) {
                            location3 = FileLoader.getDirectory(4) + "/" + document.id + ".mp4";
                        }
                        putToDelayedMessages(location3, delayedMessage);
                        if (delayedMessage.obj.videoEditedInfo == null || !delayedMessage.obj.videoEditedInfo.needConvert()) {
                            getFileLoader().uploadFile(location3, false, false, 33554432);
                        } else {
                            getFileLoader().uploadFile(location3, false, false, document.size, 33554432, false);
                        }
                        putToUploadingMessages(delayedMessage.obj);
                    } else {
                        String location4 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                        putToDelayedMessages(location4, delayedMessage);
                        getFileLoader().uploadFile(location4, false, true, 16777216);
                        putToUploadingMessages(delayedMessage.obj);
                    }
                } else {
                    String location5 = delayedMessage.obj.messageOwner.attachPath;
                    TLRPC.Document document2 = delayedMessage.obj.getDocument();
                    if (location5 == null) {
                        location5 = FileLoader.getDirectory(4) + "/" + document2.id + ".mp4";
                    }
                    if (delayedMessage.sendEncryptedRequest == null || document2.dc_id == 0 || new File(location5).exists()) {
                        putToDelayedMessages(location5, delayedMessage);
                        if (delayedMessage.obj.videoEditedInfo == null || !delayedMessage.obj.videoEditedInfo.needConvert()) {
                            getFileLoader().uploadFile(location5, true, false, 33554432);
                        } else {
                            getFileLoader().uploadFile(location5, true, false, document2.size, 33554432, false);
                        }
                        putToUploadingMessages(delayedMessage.obj);
                    } else {
                        putToDelayedMessages(FileLoader.getAttachFileName(document2), delayedMessage);
                        getFileLoader().loadFile(document2, delayedMessage.parentObject, 2, 0);
                        return;
                    }
                }
            } else {
                String location6 = delayedMessage.obj.messageOwner.attachPath;
                TLRPC.Document document3 = delayedMessage.obj.getDocument();
                if (location6 == null) {
                    location6 = FileLoader.getDirectory(4) + "/" + document3.id + ".mp4";
                }
                putToDelayedMessages(location6, delayedMessage);
                MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (delayedMessage.type == 2) {
            if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                if (delayedMessage.sendRequest instanceof TLRPC.TL_messages_sendMedia) {
                    media = ((TLRPC.TL_messages_sendMedia) delayedMessage.sendRequest).media;
                } else {
                    media = ((TLRPC.TL_messages_editMessage) delayedMessage.sendRequest).media;
                }
                if (media.file == null) {
                    String location7 = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(location7, delayedMessage);
                    FileLoader fileLoader = getFileLoader();
                    if (delayedMessage.sendRequest != null) {
                        z2 = false;
                    }
                    fileLoader.uploadFile(location7, z2, false, 67108864);
                    putToUploadingMessages(delayedMessage.obj);
                } else if (media.thumb == null && delayedMessage.photoSize != null && !(delayedMessage.photoSize instanceof TLRPC.TL_photoStrippedSize)) {
                    String location8 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                    putToDelayedMessages(location8, delayedMessage);
                    getFileLoader().uploadFile(location8, false, true, 16777216);
                    putToUploadingMessages(delayedMessage.obj);
                }
            } else {
                String location9 = delayedMessage.obj.messageOwner.attachPath;
                TLRPC.Document document4 = delayedMessage.obj.getDocument();
                if (delayedMessage.sendEncryptedRequest == null || document4.dc_id == 0 || new File(location9).exists()) {
                    putToDelayedMessages(location9, delayedMessage);
                    getFileLoader().uploadFile(location9, true, false, 67108864);
                    putToUploadingMessages(delayedMessage.obj);
                } else {
                    putToDelayedMessages(FileLoader.getAttachFileName(document4), delayedMessage);
                    getFileLoader().loadFile(document4, delayedMessage.parentObject, 2, 0);
                    return;
                }
            }
        } else if (delayedMessage.type == 3) {
            String location10 = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(location10, delayedMessage);
            FileLoader fileLoader2 = getFileLoader();
            if (delayedMessage.sendRequest == null) {
                z = true;
            }
            fileLoader2.uploadFile(location10, z, true, 50331648);
            putToUploadingMessages(delayedMessage.obj);
        } else if (delayedMessage.type == 4) {
            boolean add = index < 0;
            if (delayedMessage.performMediaUpload) {
                if (index < 0) {
                    index2 = delayedMessage.messageObjects.size() - 1;
                } else {
                    index2 = index;
                }
                MessageObject messageObject2 = delayedMessage.messageObjects.get(index2);
                if (messageObject2.getDocument() != null) {
                    if (delayedMessage.videoEditedInfo != null) {
                        String location11 = messageObject2.messageOwner.attachPath;
                        TLRPC.Document document5 = messageObject2.getDocument();
                        if (location11 == null) {
                            location11 = FileLoader.getDirectory(4) + "/" + document5.id + ".mp4";
                        }
                        putToDelayedMessages(location11, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject2, location11);
                        delayedMessage.extraHashMap.put(location11 + "_i", messageObject2);
                        if (!(delayedMessage.photoSize == null || delayedMessage.photoSize.location == null)) {
                            delayedMessage.extraHashMap.put(location11 + "_t", delayedMessage.photoSize);
                        }
                        MediaController.getInstance().scheduleVideoConvert(messageObject2);
                        delayedMessage.obj = messageObject2;
                        putToUploadingMessages(messageObject2);
                        MessageObject messageObject3 = messageObject2;
                    } else {
                        TLRPC.Document document6 = messageObject2.getDocument();
                        String documentLocation = messageObject2.messageOwner.attachPath;
                        if (documentLocation == null) {
                            StringBuilder sb = new StringBuilder();
                            sb.append(FileLoader.getDirectory(4));
                            sb.append("/");
                            messageObject = messageObject2;
                            sb.append(document6.id);
                            sb.append(".mp4");
                            documentLocation = sb.toString();
                        } else {
                            messageObject = messageObject2;
                        }
                        if (delayedMessage.sendRequest != null) {
                            TLRPC.InputMedia media4 = ((TLRPC.TL_messages_sendMultiMedia) delayedMessage.sendRequest).multi_media.get(index2).media;
                            if (media4.file == null) {
                                putToDelayedMessages(documentLocation, delayedMessage);
                                MessageObject messageObject4 = messageObject;
                                delayedMessage.extraHashMap.put(messageObject4, documentLocation);
                                delayedMessage.extraHashMap.put(documentLocation, media4);
                                delayedMessage.extraHashMap.put(documentLocation + "_i", messageObject4);
                                if (!(delayedMessage.photoSize == null || delayedMessage.photoSize.location == null)) {
                                    delayedMessage.extraHashMap.put(documentLocation + "_t", delayedMessage.photoSize);
                                }
                                if (messageObject4.videoEditedInfo == null || !messageObject4.videoEditedInfo.needConvert()) {
                                    getFileLoader().uploadFile(documentLocation, false, false, 33554432);
                                } else {
                                    getFileLoader().uploadFile(documentLocation, false, false, document6.size, 33554432, false);
                                }
                                putToUploadingMessages(messageObject4);
                            } else {
                                MessageObject messageObject5 = messageObject;
                                if (delayedMessage.photoSize != null) {
                                    String location12 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                                    putToDelayedMessages(location12, delayedMessage);
                                    delayedMessage.extraHashMap.put(location12 + "_o", documentLocation);
                                    delayedMessage.extraHashMap.put(messageObject5, location12);
                                    delayedMessage.extraHashMap.put(location12, media4);
                                    getFileLoader().uploadFile(location12, false, true, 16777216);
                                    putToUploadingMessages(messageObject5);
                                }
                            }
                        } else {
                            MessageObject messageObject6 = messageObject;
                            putToDelayedMessages(documentLocation, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject6, documentLocation);
                            delayedMessage.extraHashMap.put(documentLocation, ((TLRPC.TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(index2));
                            delayedMessage.extraHashMap.put(documentLocation + "_i", messageObject6);
                            if (!(delayedMessage.photoSize == null || delayedMessage.photoSize.location == null)) {
                                delayedMessage.extraHashMap.put(documentLocation + "_t", delayedMessage.photoSize);
                            }
                            if (messageObject6.videoEditedInfo == null || !messageObject6.videoEditedInfo.needConvert()) {
                                getFileLoader().uploadFile(documentLocation, true, false, 33554432);
                            } else {
                                getFileLoader().uploadFile(documentLocation, true, false, document6.size, 33554432, false);
                            }
                            putToUploadingMessages(messageObject6);
                        }
                    }
                    delayedMessage.videoEditedInfo = null;
                    delayedMessage.photoSize = null;
                } else {
                    MessageObject messageObject7 = messageObject2;
                    if (delayedMessage.httpLocation != null) {
                        putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, delayedMessage.httpLocation);
                        delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject7);
                        ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
                        delayedMessage.httpLocation = null;
                    } else {
                        if (delayedMessage.sendRequest != null) {
                            inputMedia = ((TLRPC.TL_messages_sendMultiMedia) delayedMessage.sendRequest).multi_media.get(index2).media;
                        } else {
                            inputMedia = ((TLRPC.TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(index2);
                        }
                        String location13 = FileLoader.getPathToAttach(delayedMessage.photoSize).toString();
                        putToDelayedMessages(location13, delayedMessage);
                        delayedMessage.extraHashMap.put(location13, inputMedia);
                        delayedMessage.extraHashMap.put(messageObject7, location13);
                        getFileLoader().uploadFile(location13, delayedMessage.sendEncryptedRequest != null, true, 16777216);
                        putToUploadingMessages(messageObject7);
                        delayedMessage.photoSize = null;
                    }
                }
                delayedMessage.performMediaUpload = false;
            } else {
                if (!delayedMessage.messageObjects.isEmpty()) {
                    putToSendingMessages(delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1).messageOwner, delayedMessage.finalGroupMessage != 0);
                }
                int i = index;
            }
            sendReadyToSendGroup(delayedMessage, add, true);
            return;
        } else if (delayedMessage.type == 5) {
            String key = "stickerset_" + delayedMessage.obj.getId();
            TLRPC.TL_messages_getStickerSet req = new TLRPC.TL_messages_getStickerSet();
            req.stickerset = (TLRPC.InputStickerSet) delayedMessage.parentObject;
            getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda83(this, delayedMessage, key));
            putToDelayedMessages(key, delayedMessage);
        }
        int i2 = index;
    }

    /* renamed from: lambda$performSendDelayedMessage$33$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m439x4ece33ee(DelayedMessage message, String key, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda35(this, response, message, key));
    }

    /* renamed from: lambda$performSendDelayedMessage$32$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m438x698cCLASSNAMEd(TLObject response, DelayedMessage message, String key) {
        DelayedMessage delayedMessage = message;
        boolean found = false;
        if (response != null) {
            TLRPC.TL_messages_stickerSet set = (TLRPC.TL_messages_stickerSet) response;
            getMediaDataController().storeTempStickerSet(set);
            TLRPC.TL_documentAttributeSticker_layer55 attributeSticker = (TLRPC.TL_documentAttributeSticker_layer55) delayedMessage.locationParent;
            attributeSticker.stickerset = new TLRPC.TL_inputStickerSetShortName();
            attributeSticker.stickerset.short_name = set.set.short_name;
            found = true;
        }
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.remove(key);
        if (arrayList != null && !arrayList.isEmpty()) {
            if (found) {
                getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner, (ArrayList<TLRPC.User>) null, (ArrayList<TLRPC.Chat>) null, false);
            }
            getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage) delayedMessage.sendEncryptedRequest, delayedMessage.obj.messageOwner, delayedMessage.encryptedChat, (TLRPC.InputEncryptedFile) null, (String) null, delayedMessage.obj);
        }
    }

    private void uploadMultiMedia(DelayedMessage message, TLRPC.InputMedia inputMedia, TLRPC.InputEncryptedFile inputEncryptedFile, String key) {
        if (inputMedia != null) {
            TLRPC.TL_messages_sendMultiMedia multiMedia = (TLRPC.TL_messages_sendMultiMedia) message.sendRequest;
            int a = 0;
            while (true) {
                if (a >= multiMedia.multi_media.size()) {
                    break;
                } else if (multiMedia.multi_media.get(a).media == inputMedia) {
                    putToSendingMessages(message.messages.get(a), message.scheduled);
                    getNotificationCenter().postNotificationName(NotificationCenter.fileUploadProgressChanged, key, -1L, -1L, false);
                    break;
                } else {
                    a++;
                }
            }
            TLRPC.TL_messages_uploadMedia req = new TLRPC.TL_messages_uploadMedia();
            req.media = inputMedia;
            req.peer = ((TLRPC.TL_messages_sendMultiMedia) message.sendRequest).peer;
            getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda85(this, inputMedia, message));
        } else if (inputEncryptedFile != null) {
            TLRPC.TL_messages_sendEncryptedMultiMedia multiMedia2 = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
            int a2 = 0;
            while (true) {
                if (a2 >= multiMedia2.files.size()) {
                    break;
                } else if (multiMedia2.files.get(a2) == inputEncryptedFile) {
                    putToSendingMessages(message.messages.get(a2), message.scheduled);
                    getNotificationCenter().postNotificationName(NotificationCenter.fileUploadProgressChanged, key, -1L, -1L, false);
                    break;
                } else {
                    a2++;
                }
            }
            sendReadyToSendGroup(message, false, true);
        }
    }

    /* renamed from: lambda$uploadMultiMedia$35$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m497xbfCLASSNAMEb8(TLRPC.InputMedia inputMedia, DelayedMessage message, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda36(this, response, inputMedia, message));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v0, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v1, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v2, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v3, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: lambda$uploadMultiMedia$34$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m496xda8697f7(org.telegram.tgnet.TLObject r7, org.telegram.tgnet.TLRPC.InputMedia r8, org.telegram.messenger.SendMessagesHelper.DelayedMessage r9) {
        /*
            r6 = this;
            r0 = 0
            if (r7 == 0) goto L_0x0073
            r1 = r7
            org.telegram.tgnet.TLRPC$MessageMedia r1 = (org.telegram.tgnet.TLRPC.MessageMedia) r1
            boolean r2 = r8 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedPhoto
            if (r2 == 0) goto L_0x003d
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto
            if (r2 == 0) goto L_0x003d
            org.telegram.tgnet.TLRPC$TL_inputMediaPhoto r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaPhoto
            r2.<init>()
            org.telegram.tgnet.TLRPC$TL_inputPhoto r3 = new org.telegram.tgnet.TLRPC$TL_inputPhoto
            r3.<init>()
            r2.id = r3
            org.telegram.tgnet.TLRPC$InputPhoto r3 = r2.id
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            long r4 = r4.id
            r3.id = r4
            org.telegram.tgnet.TLRPC$InputPhoto r3 = r2.id
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            long r4 = r4.access_hash
            r3.access_hash = r4
            org.telegram.tgnet.TLRPC$InputPhoto r3 = r2.id
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            byte[] r4 = r4.file_reference
            r3.file_reference = r4
            r0 = r2
            boolean r3 = org.telegram.messenger.BuildVars.DEBUG_VERSION
            if (r3 == 0) goto L_0x003c
            java.lang.String r3 = "set uploaded photo"
            org.telegram.messenger.FileLog.d(r3)
        L_0x003c:
            goto L_0x0073
        L_0x003d:
            boolean r2 = r8 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument
            if (r2 == 0) goto L_0x003c
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument
            if (r2 == 0) goto L_0x003c
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument
            r2.<init>()
            org.telegram.tgnet.TLRPC$TL_inputDocument r3 = new org.telegram.tgnet.TLRPC$TL_inputDocument
            r3.<init>()
            r2.id = r3
            org.telegram.tgnet.TLRPC$InputDocument r3 = r2.id
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            long r4 = r4.id
            r3.id = r4
            org.telegram.tgnet.TLRPC$InputDocument r3 = r2.id
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            long r4 = r4.access_hash
            r3.access_hash = r4
            org.telegram.tgnet.TLRPC$InputDocument r3 = r2.id
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            byte[] r4 = r4.file_reference
            r3.file_reference = r4
            r0 = r2
            boolean r3 = org.telegram.messenger.BuildVars.DEBUG_VERSION
            if (r3 == 0) goto L_0x0073
            java.lang.String r3 = "set uploaded document"
            org.telegram.messenger.FileLog.d(r3)
        L_0x0073:
            if (r0 == 0) goto L_0x00af
            int r1 = r8.ttl_seconds
            r2 = 1
            if (r1 == 0) goto L_0x0083
            int r1 = r8.ttl_seconds
            r0.ttl_seconds = r1
            int r1 = r0.flags
            r1 = r1 | r2
            r0.flags = r1
        L_0x0083:
            org.telegram.tgnet.TLObject r1 = r9.sendRequest
            org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia r1 = (org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia) r1
            r3 = 0
        L_0x0088:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r4 = r1.multi_media
            int r4 = r4.size()
            if (r3 >= r4) goto L_0x00aa
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r4 = r1.multi_media
            java.lang.Object r4 = r4.get(r3)
            org.telegram.tgnet.TLRPC$TL_inputSingleMedia r4 = (org.telegram.tgnet.TLRPC.TL_inputSingleMedia) r4
            org.telegram.tgnet.TLRPC$InputMedia r4 = r4.media
            if (r4 != r8) goto L_0x00a7
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r4 = r1.multi_media
            java.lang.Object r4 = r4.get(r3)
            org.telegram.tgnet.TLRPC$TL_inputSingleMedia r4 = (org.telegram.tgnet.TLRPC.TL_inputSingleMedia) r4
            r4.media = r0
            goto L_0x00aa
        L_0x00a7:
            int r3 = r3 + 1
            goto L_0x0088
        L_0x00aa:
            r3 = 0
            r6.sendReadyToSendGroup(r9, r3, r2)
            goto L_0x00b2
        L_0x00af:
            r9.markAsError()
        L_0x00b2:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.m496xda8697f7(org.telegram.tgnet.TLObject, org.telegram.tgnet.TLRPC$InputMedia, org.telegram.messenger.SendMessagesHelper$DelayedMessage):void");
    }

    private void sendReadyToSendGroup(DelayedMessage message, boolean add, boolean check) {
        DelayedMessage maxDelayedMessage;
        if (message.messageObjects.isEmpty()) {
            message.markAsError();
            return;
        }
        String key = "group_" + message.groupId;
        if (message.finalGroupMessage == message.messageObjects.get(message.messageObjects.size() - 1).getId()) {
            if (add) {
                this.delayedMessages.remove(key);
                getMessagesStorage().putMessages(message.messages, false, true, false, 0, message.scheduled);
                getMessagesController().updateInterfaceWithMessages(message.peer, message.messageObjects, message.scheduled);
                if (!message.scheduled) {
                    getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                }
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("add message");
                }
            }
            if (message.sendRequest instanceof TLRPC.TL_messages_sendMultiMedia) {
                TLRPC.TL_messages_sendMultiMedia request = (TLRPC.TL_messages_sendMultiMedia) message.sendRequest;
                int a = 0;
                while (a < request.multi_media.size()) {
                    TLRPC.InputMedia inputMedia = request.multi_media.get(a).media;
                    if (!(inputMedia instanceof TLRPC.TL_inputMediaUploadedPhoto) && !(inputMedia instanceof TLRPC.TL_inputMediaUploadedDocument)) {
                        a++;
                    } else if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("multi media not ready");
                        return;
                    } else {
                        return;
                    }
                }
                if (check && (maxDelayedMessage = findMaxDelayedMessageForMessageId(message.finalGroupMessage, message.peer)) != null) {
                    maxDelayedMessage.addDelayedRequest(message.sendRequest, message.messageObjects, message.originalPaths, message.parentObjects, message, message.scheduled);
                    if (message.requests != null) {
                        maxDelayedMessage.requests.addAll(message.requests);
                    }
                    if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("has maxDelayedMessage, delay");
                        return;
                    }
                    return;
                }
            } else {
                TLRPC.TL_messages_sendEncryptedMultiMedia request2 = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
                int a2 = 0;
                while (a2 < request2.files.size()) {
                    if (!(request2.files.get(a2) instanceof TLRPC.TL_inputEncryptedFile)) {
                        a2++;
                    } else {
                        return;
                    }
                }
            }
            if (message.sendRequest instanceof TLRPC.TL_messages_sendMultiMedia) {
                performSendMessageRequestMulti((TLRPC.TL_messages_sendMultiMedia) message.sendRequest, message.messageObjects, message.originalPaths, message.parentObjects, message, message.scheduled);
            } else {
                getSecretChatHelper().performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest, message);
            }
            message.sendDelayedRequests();
        } else if (add) {
            if (BuildVars.DEBUG_VERSION) {
                FileLog.d("final message not added, add");
            }
            putToDelayedMessages(key, message);
        } else if (BuildVars.DEBUG_VERSION) {
            FileLog.d("final message not added");
        }
    }

    /* renamed from: lambda$stopVideoService$36$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m494x610147a9(String path) {
        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, path, Integer.valueOf(this.currentAccount));
    }

    /* renamed from: lambda$stopVideoService$37$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m495x4642b66a(String path) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda18(this, path));
    }

    public void stopVideoService(String path) {
        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda19(this, path));
    }

    /* access modifiers changed from: protected */
    public void putToSendingMessages(TLRPC.Message message, boolean scheduled) {
        if (Thread.currentThread() != ApplicationLoader.applicationHandler.getLooper().getThread()) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda48(this, message, scheduled));
        } else {
            putToSendingMessages(message, scheduled, true);
        }
    }

    /* renamed from: lambda$putToSendingMessages$38$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m470x5747eb0b(TLRPC.Message message, boolean scheduled) {
        putToSendingMessages(message, scheduled, true);
    }

    /* access modifiers changed from: protected */
    public void putToSendingMessages(TLRPC.Message message, boolean scheduled, boolean notify) {
        if (message != null) {
            if (message.id > 0) {
                this.editingMessages.put(message.id, message);
                return;
            }
            boolean contains = this.sendingMessages.indexOfKey(message.id) >= 0;
            removeFromUploadingMessages(message.id, scheduled);
            this.sendingMessages.put(message.id, message);
            if (!scheduled && !contains) {
                long did = MessageObject.getDialogId(message);
                LongSparseArray<Integer> longSparseArray = this.sendingMessagesIdDialogs;
                longSparseArray.put(did, Integer.valueOf(longSparseArray.get(did, 0).intValue() + 1));
                if (notify) {
                    getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
                }
            }
        }
    }

    /* access modifiers changed from: protected */
    public TLRPC.Message removeFromSendingMessages(int mid, boolean scheduled) {
        TLRPC.Message message;
        long did;
        Integer currentCount;
        if (mid > 0) {
            message = this.editingMessages.get(mid);
            if (message != null) {
                this.editingMessages.remove(mid);
            }
        } else {
            message = this.sendingMessages.get(mid);
            if (message != null) {
                this.sendingMessages.remove(mid);
                if (!scheduled && (currentCount = this.sendingMessagesIdDialogs.get(did)) != null) {
                    int count = currentCount.intValue() - 1;
                    if (count <= 0) {
                        this.sendingMessagesIdDialogs.remove(did);
                    } else {
                        this.sendingMessagesIdDialogs.put((did = MessageObject.getDialogId(message)), Integer.valueOf(count));
                    }
                    getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
                }
            }
        }
        return message;
    }

    public int getSendingMessageId(long did) {
        for (int a = 0; a < this.sendingMessages.size(); a++) {
            TLRPC.Message message = this.sendingMessages.valueAt(a);
            if (message.dialog_id == did) {
                return message.id;
            }
        }
        for (int a2 = 0; a2 < this.uploadMessages.size(); a2++) {
            TLRPC.Message message2 = this.uploadMessages.valueAt(a2);
            if (message2.dialog_id == did) {
                return message2.id;
            }
        }
        return 0;
    }

    /* access modifiers changed from: protected */
    public void putToUploadingMessages(MessageObject obj) {
        if (obj != null && obj.getId() <= 0 && !obj.scheduled) {
            TLRPC.Message message = obj.messageOwner;
            boolean contains = this.uploadMessages.indexOfKey(message.id) >= 0;
            this.uploadMessages.put(message.id, message);
            if (!contains) {
                long did = MessageObject.getDialogId(message);
                LongSparseArray<Integer> longSparseArray = this.uploadingMessagesIdDialogs;
                longSparseArray.put(did, Integer.valueOf(longSparseArray.get(did, 0).intValue() + 1));
                getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
    }

    /* access modifiers changed from: protected */
    public void removeFromUploadingMessages(int mid, boolean scheduled) {
        TLRPC.Message message;
        if (mid <= 0 && !scheduled && (message = this.uploadMessages.get(mid)) != null) {
            this.uploadMessages.remove(mid);
            long did = MessageObject.getDialogId(message);
            Integer currentCount = this.uploadingMessagesIdDialogs.get(did);
            if (currentCount != null) {
                int count = currentCount.intValue() - 1;
                if (count <= 0) {
                    this.uploadingMessagesIdDialogs.remove(did);
                } else {
                    this.uploadingMessagesIdDialogs.put(did, Integer.valueOf(count));
                }
                getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
    }

    public boolean isSendingMessage(int mid) {
        return this.sendingMessages.indexOfKey(mid) >= 0 || this.editingMessages.indexOfKey(mid) >= 0;
    }

    public boolean isSendingMessageIdDialog(long did) {
        return this.sendingMessagesIdDialogs.get(did, 0).intValue() > 0;
    }

    public boolean isUploadingMessageIdDialog(long did) {
        return this.uploadingMessagesIdDialogs.get(did, 0).intValue() > 0;
    }

    /* access modifiers changed from: protected */
    public void performSendMessageRequestMulti(TLRPC.TL_messages_sendMultiMedia req, ArrayList<MessageObject> msgObjs, ArrayList<String> originalPaths, ArrayList<Object> parentObjects, DelayedMessage delayedMessage, boolean scheduled) {
        int size = msgObjs.size();
        for (int a = 0; a < size; a++) {
            ArrayList<MessageObject> arrayList = msgObjs;
            putToSendingMessages(msgObjs.get(a).messageOwner, scheduled);
        }
        ArrayList<MessageObject> arrayList2 = msgObjs;
        boolean z = scheduled;
        TLRPC.TL_messages_sendMultiMedia tL_messages_sendMultiMedia = req;
        getConnectionsManager().sendRequest((TLObject) req, (RequestDelegate) new SendMessagesHelper$$ExternalSyntheticLambda81(this, parentObjects, req, msgObjs, originalPaths, delayedMessage, scheduled), (QuickAckDelegate) null, 68);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$46$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m463xCLASSNAMEdc(ArrayList parentObjects, TLRPC.TL_messages_sendMultiMedia req, ArrayList msgObjs, ArrayList originalPaths, DelayedMessage delayedMessage, boolean scheduled, TLObject response, TLRPC.TL_error error) {
        ArrayList arrayList = parentObjects;
        DelayedMessage delayedMessage2 = delayedMessage;
        TLRPC.TL_error tL_error = error;
        if (tL_error != null && FileRefController.isFileRefError(tL_error.text)) {
            if (arrayList != null) {
                ArrayList<Object> arrayList2 = new ArrayList<>(arrayList);
                getFileRefController().requestReference(arrayList2, req, msgObjs, originalPaths, arrayList2, delayedMessage2, Boolean.valueOf(scheduled));
                return;
            } else if (delayedMessage2 != null && !delayedMessage2.retriedToSend) {
                delayedMessage2.retriedToSend = true;
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda56(this, req, delayedMessage, msgObjs, scheduled));
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda50(this, error, response, msgObjs, originalPaths, scheduled, req));
    }

    /* renamed from: lambda$performSendMessageRequestMulti$39$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m456xb30048c0(TLRPC.TL_messages_sendMultiMedia req, DelayedMessage delayedMessage, ArrayList msgObjs, boolean scheduled) {
        boolean hasEmptyFile = false;
        int size = req.multi_media.size();
        for (int a = 0; a < size; a++) {
            if (delayedMessage.parentObjects.get(a) != null) {
                removeFromSendingMessages(((MessageObject) msgObjs.get(a)).getId(), scheduled);
                TLRPC.TL_inputSingleMedia request = req.multi_media.get(a);
                if (request.media instanceof TLRPC.TL_inputMediaPhoto) {
                    request.media = delayedMessage.inputMedias.get(a);
                } else if (request.media instanceof TLRPC.TL_inputMediaDocument) {
                    request.media = delayedMessage.inputMedias.get(a);
                }
                delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(a);
                delayedMessage.httpLocation = delayedMessage.httpLocations.get(a);
                delayedMessage.photoSize = delayedMessage.locations.get(a);
                delayedMessage.performMediaUpload = true;
                if (request.media.file == null || delayedMessage.photoSize != null) {
                    hasEmptyFile = true;
                }
                performSendDelayedMessage(delayedMessage, a);
            }
        }
        if (!hasEmptyFile) {
            for (int i = 0; i < msgObjs.size(); i++) {
                TLRPC.Message newMsgObj = ((MessageObject) msgObjs.get(i)).messageOwner;
                getMessagesStorage().markMessageAsSendError(newMsgObj, scheduled);
                newMsgObj.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsgObj.id));
                processSentMessage(newMsgObj.id);
                removeFromSendingMessages(newMsgObj.id, scheduled);
            }
        }
    }

    /* renamed from: lambda$performSendMessageRequestMulti$45$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m462xe0e6var_b(TLRPC.TL_error error, TLObject response, ArrayList msgObjs, ArrayList originalPaths, boolean scheduled, TLRPC.TL_messages_sendMultiMedia req) {
        SendMessagesHelper sendMessagesHelper;
        int i;
        boolean oldId;
        TLRPC.Updates updates;
        TLRPC.Message newMsgObj;
        LongSparseArray<Integer> newIds;
        SparseArray<TLRPC.Message> newMessages;
        boolean isSentError;
        int i2;
        LongSparseArray<Integer> newIds2;
        SparseArray<TLRPC.Message> newMessages2;
        TLRPC.Updates updates2;
        SendMessagesHelper sendMessagesHelper2;
        TLRPC.MessageReplies messageReplies;
        SendMessagesHelper sendMessagesHelper3 = this;
        ArrayList arrayList = msgObjs;
        boolean z = scheduled;
        boolean isSentError2 = false;
        if (error == null) {
            SparseArray<TLRPC.Message> newMessages3 = new SparseArray<>();
            LongSparseArray<Integer> newIds3 = new LongSparseArray<>();
            TLRPC.Updates updates3 = (TLRPC.Updates) response;
            ArrayList<TLRPC.Update> updatesArr = ((TLRPC.Updates) response).updates;
            int a = 0;
            LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies = null;
            while (a < updatesArr.size()) {
                TLRPC.Update update = updatesArr.get(a);
                if (update instanceof TLRPC.TL_updateMessageID) {
                    TLRPC.TL_updateMessageID updateMessageID = (TLRPC.TL_updateMessageID) update;
                    newIds3.put(updateMessageID.random_id, Integer.valueOf(updateMessageID.id));
                    updatesArr.remove(a);
                    a--;
                    sendMessagesHelper2 = this;
                    updates2 = updates3;
                } else if (update instanceof TLRPC.TL_updateNewMessage) {
                    TLRPC.TL_updateNewMessage newMessage = (TLRPC.TL_updateNewMessage) update;
                    newMessages3.put(newMessage.message.id, newMessage.message);
                    sendMessagesHelper2 = this;
                    Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda61(sendMessagesHelper2, newMessage));
                    updatesArr.remove(a);
                    a--;
                    updates2 = updates3;
                } else {
                    sendMessagesHelper2 = this;
                    if (update instanceof TLRPC.TL_updateNewChannelMessage) {
                        TLRPC.TL_updateNewChannelMessage newMessage2 = (TLRPC.TL_updateNewChannelMessage) update;
                        long channelId = MessagesController.getUpdateChannelId(newMessage2);
                        updates2 = updates3;
                        TLRPC.Chat chat = getMessagesController().getChat(Long.valueOf(channelId));
                        if (chat == null || chat.megagroup) {
                            if (newMessage2.message.reply_to == null) {
                                long j = channelId;
                            } else if (!(newMessage2.message.reply_to.reply_to_top_id == 0 && newMessage2.message.reply_to.reply_to_msg_id == 0)) {
                                if (channelReplies == null) {
                                    channelReplies = new LongSparseArray<>();
                                }
                                long j2 = channelId;
                                long did = MessageObject.getDialogId(newMessage2.message);
                                SparseArray<TLRPC.MessageReplies> replies = channelReplies.get(did);
                                if (replies == null) {
                                    replies = new SparseArray<>();
                                    channelReplies.put(did, replies);
                                }
                                LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies2 = channelReplies;
                                int id = newMessage2.message.reply_to.reply_to_top_id != 0 ? newMessage2.message.reply_to.reply_to_top_id : newMessage2.message.reply_to.reply_to_msg_id;
                                TLRPC.MessageReplies messageReplies2 = replies.get(id);
                                if (messageReplies2 == null) {
                                    TLRPC.Chat chat2 = chat;
                                    messageReplies = new TLRPC.TL_messageReplies();
                                    replies.put(id, messageReplies);
                                } else {
                                    messageReplies = messageReplies2;
                                }
                                int i3 = id;
                                if (newMessage2.message.from_id != null) {
                                    long j3 = did;
                                    messageReplies.recent_repliers.add(0, newMessage2.message.from_id);
                                }
                                messageReplies.replies++;
                                channelReplies = channelReplies2;
                            }
                            newMessages3.put(newMessage2.message.id, newMessage2.message);
                            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda59(sendMessagesHelper2, newMessage2));
                            updatesArr.remove(a);
                            a--;
                        }
                        TLRPC.Chat chat3 = chat;
                        long j4 = channelId;
                        newMessages3.put(newMessage2.message.id, newMessage2.message);
                        Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda59(sendMessagesHelper2, newMessage2));
                        updatesArr.remove(a);
                        a--;
                    } else {
                        updates2 = updates3;
                        if (update instanceof TLRPC.TL_updateNewScheduledMessage) {
                            TLRPC.TL_updateNewScheduledMessage newMessage3 = (TLRPC.TL_updateNewScheduledMessage) update;
                            newMessages3.put(newMessage3.message.id, newMessage3.message);
                            updatesArr.remove(a);
                            a--;
                        }
                    }
                }
                a++;
                sendMessagesHelper3 = sendMessagesHelper2;
                updates3 = updates2;
            }
            TLRPC.Updates updates4 = updates3;
            sendMessagesHelper = sendMessagesHelper3;
            if (channelReplies != null) {
                getMessagesStorage().putChannelViews((LongSparseArray<SparseIntArray>) null, (LongSparseArray<SparseIntArray>) null, channelReplies, true);
                getNotificationCenter().postNotificationName(NotificationCenter.didUpdateMessagesViews, null, null, channelReplies, true);
            }
            int i4 = 0;
            while (true) {
                if (i4 >= msgObjs.size()) {
                    ArrayList<TLRPC.Update> arrayList2 = updatesArr;
                    SparseArray<TLRPC.Message> sparseArray = newMessages3;
                    LongSparseArray<Integer> longSparseArray = newIds3;
                    int i5 = i4;
                    boolean isSentError3 = isSentError2;
                    updates = updates4;
                    i = 1;
                    oldId = isSentError3;
                    break;
                }
                MessageObject msgObj = (MessageObject) arrayList.get(i4);
                String originalPath = (String) originalPaths.get(i4);
                TLRPC.Message newMsgObj2 = msgObj.messageOwner;
                int oldId2 = newMsgObj2.id;
                ArrayList<TLRPC.Message> sentMessages = new ArrayList<>();
                String attachPath = newMsgObj2.attachPath;
                Integer id2 = newIds3.get(newMsgObj2.random_id);
                if (id2 == null) {
                    ArrayList<TLRPC.Update> arrayList3 = updatesArr;
                    SparseArray<TLRPC.Message> sparseArray2 = newMessages3;
                    LongSparseArray<Integer> longSparseArray2 = newIds3;
                    int i6 = i4;
                    Integer num = id2;
                    boolean z2 = isSentError2;
                    String str = attachPath;
                    updates = updates4;
                    ArrayList<TLRPC.Message> arrayList4 = sentMessages;
                    i = 1;
                    int i7 = oldId2;
                    TLRPC.Message message = newMsgObj2;
                    MessageObject messageObject = msgObj;
                    oldId = true;
                    break;
                }
                TLRPC.Message message2 = newMessages3.get(id2.intValue());
                if (message2 == null) {
                    ArrayList<TLRPC.Update> arrayList5 = updatesArr;
                    SparseArray<TLRPC.Message> sparseArray3 = newMessages3;
                    LongSparseArray<Integer> longSparseArray3 = newIds3;
                    int i8 = i4;
                    Integer num2 = id2;
                    boolean z3 = isSentError2;
                    String str2 = attachPath;
                    updates = updates4;
                    ArrayList<TLRPC.Message> arrayList6 = sentMessages;
                    i = 1;
                    int i9 = oldId2;
                    TLRPC.Message message3 = newMsgObj2;
                    MessageObject messageObject2 = msgObj;
                    oldId = true;
                    break;
                }
                MessageObject.getDialogId(message2);
                Integer num3 = id2;
                ArrayList<TLRPC.Message> sentMessages2 = sentMessages;
                sentMessages2.add(message2);
                int oldId3 = oldId2;
                if ((message2.flags & 33554432) != 0) {
                    newMsgObj = newMsgObj2;
                    msgObj.messageOwner.ttl_period = message2.ttl_period;
                    msgObj.messageOwner.flags |= 33554432;
                } else {
                    newMsgObj = newMsgObj2;
                }
                String str3 = attachPath;
                TLRPC.Message newMsgObj3 = newMsgObj;
                LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies3 = channelReplies;
                ArrayList<TLRPC.Update> updatesArr2 = updatesArr;
                TLRPC.Updates updates5 = updates4;
                updateMediaPaths(msgObj, message2, message2.id, originalPath, false);
                int existFlags = msgObj.getMediaExistanceFlags();
                newMsgObj3.id = message2.id;
                long grouped_id = message2.grouped_id;
                if (!z) {
                    Integer value = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(message2.dialog_id));
                    if (value == null) {
                        newMessages = newMessages3;
                        newIds = newIds3;
                        value = Integer.valueOf(getMessagesStorage().getDialogReadMax(message2.out, message2.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(message2.dialog_id), value);
                    } else {
                        newMessages = newMessages3;
                        newIds = newIds3;
                    }
                    message2.unread = value.intValue() < message2.id;
                } else {
                    newMessages = newMessages3;
                    newIds = newIds3;
                }
                if (!isSentError2) {
                    getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                    newMsgObj3.send_state = 0;
                    getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId3), Integer.valueOf(newMsgObj3.id), newMsgObj3, Long.valueOf(newMsgObj3.dialog_id), Long.valueOf(grouped_id), Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
                    ArrayList<TLRPC.Message> arrayList7 = sentMessages2;
                    DispatchQueue storageQueue = getMessagesStorage().getStorageQueue();
                    ArrayList<TLRPC.Message> arrayList8 = sentMessages2;
                    newMessages2 = newMessages;
                    newIds2 = newIds;
                    SendMessagesHelper$$ExternalSyntheticLambda43 sendMessagesHelper$$ExternalSyntheticLambda43 = r0;
                    i2 = i4;
                    isSentError = isSentError2;
                    SendMessagesHelper$$ExternalSyntheticLambda43 sendMessagesHelper$$ExternalSyntheticLambda432 = new SendMessagesHelper$$ExternalSyntheticLambda43(this, newMsgObj3, oldId3, scheduled, arrayList7, grouped_id, existFlags);
                    storageQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda43);
                } else {
                    ArrayList<TLRPC.Message> arrayList9 = sentMessages2;
                    isSentError = isSentError2;
                    newMessages2 = newMessages;
                    newIds2 = newIds;
                    i2 = i4;
                }
                i4 = i2 + 1;
                TLRPC.TL_error tL_error = error;
                updates4 = updates5;
                newMessages3 = newMessages2;
                updatesArr = updatesArr2;
                channelReplies = channelReplies3;
                newIds3 = newIds2;
                isSentError2 = isSentError;
                arrayList = msgObjs;
            }
            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda64(sendMessagesHelper, updates));
            TLRPC.TL_error tL_error2 = error;
            TLRPC.TL_messages_sendMultiMedia tL_messages_sendMultiMedia = req;
        } else {
            sendMessagesHelper = sendMessagesHelper3;
            i = 1;
            AlertsCreator.processError(sendMessagesHelper.currentAccount, error, (BaseFragment) null, req, new Object[0]);
            oldId = true;
        }
        if (oldId) {
            for (int i10 = 0; i10 < msgObjs.size(); i10++) {
                TLRPC.Message newMsgObj4 = ((MessageObject) msgObjs.get(i10)).messageOwner;
                getMessagesStorage().markMessageAsSendError(newMsgObj4, z);
                newMsgObj4.send_state = 2;
                NotificationCenter notificationCenter = getNotificationCenter();
                int i11 = NotificationCenter.messageSendError;
                Object[] objArr = new Object[i];
                objArr[0] = Integer.valueOf(newMsgObj4.id);
                notificationCenter.postNotificationName(i11, objArr);
                sendMessagesHelper.processSentMessage(newMsgObj4.id);
                sendMessagesHelper.removeFromSendingMessages(newMsgObj4.id, z);
            }
            ArrayList arrayList10 = msgObjs;
            return;
        }
        ArrayList arrayList11 = msgObjs;
    }

    /* renamed from: lambda$performSendMessageRequestMulti$40$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m457x669fcd56(TLRPC.TL_updateNewMessage newMessage) {
        getMessagesController().processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$41$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m458x4be13CLASSNAME(TLRPC.TL_updateNewChannelMessage newMessage) {
        getMessagesController().processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.peer_id.channel_id);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$43$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m460x16641999(TLRPC.Message newMsgObj, int oldId, boolean scheduled, ArrayList sentMessages, long grouped_id, int existFlags) {
        TLRPC.Message message = newMsgObj;
        getMessagesStorage().updateMessageStateAndId(message.random_id, MessageObject.getPeerId(message.peer_id), Integer.valueOf(oldId), message.id, 0, false, scheduled ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, scheduled);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda41(this, newMsgObj, oldId, grouped_id, existFlags, scheduled));
    }

    /* renamed from: lambda$performSendMessageRequestMulti$42$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m459x3122aad8(TLRPC.Message newMsgObj, int oldId, long grouped_id, int existFlags, boolean scheduled) {
        getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(newMsgObj.id), newMsgObj, Long.valueOf(newMsgObj.dialog_id), Long.valueOf(grouped_id), Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
        processSentMessage(oldId);
        removeFromSendingMessages(oldId, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$44$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m461xfba5885a(TLRPC.Updates updates) {
        getMessagesController().processUpdates(updates, false);
    }

    /* access modifiers changed from: private */
    public void performSendMessageRequest(TLObject req, MessageObject msgObj, String originalPath, DelayedMessage delayedMessage, Object parentObject, HashMap<String, String> params, boolean scheduled) {
        performSendMessageRequest(req, msgObj, originalPath, (DelayedMessage) null, false, delayedMessage, parentObject, params, scheduled);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int messageId, long dialogId) {
        DelayedMessage maxDelayedMessage = null;
        int maxDalyedMessageId = Integer.MIN_VALUE;
        for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> messages = entry.getValue();
            int size = messages.size();
            for (int a = 0; a < size; a++) {
                DelayedMessage delayedMessage = messages.get(a);
                if ((delayedMessage.type == 4 || delayedMessage.type == 0) && delayedMessage.peer == dialogId) {
                    int mid = 0;
                    if (delayedMessage.obj != null) {
                        mid = delayedMessage.obj.getId();
                    } else if (delayedMessage.messageObjects != null && !delayedMessage.messageObjects.isEmpty()) {
                        mid = delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1).getId();
                    }
                    if (mid != 0 && mid > messageId && maxDelayedMessage == null && maxDalyedMessageId < mid) {
                        maxDelayedMessage = delayedMessage;
                        maxDalyedMessageId = mid;
                    }
                }
            }
        }
        return maxDelayedMessage;
    }

    /* access modifiers changed from: protected */
    public void performSendMessageRequest(TLObject req, MessageObject msgObj, String originalPath, DelayedMessage parentMessage, boolean check, DelayedMessage delayedMessage, Object parentObject, HashMap<String, String> hashMap, boolean scheduled) {
        DelayedMessage maxDelayedMessage;
        TLObject tLObject = req;
        DelayedMessage delayedMessage2 = parentMessage;
        if ((tLObject instanceof TLRPC.TL_messages_editMessage) || !check || (maxDelayedMessage = findMaxDelayedMessageForMessageId(msgObj.getId(), msgObj.getDialogId())) == null) {
            TLRPC.Message newMsgObj = msgObj.messageOwner;
            boolean z = scheduled;
            putToSendingMessages(newMsgObj, z);
            SendMessagesHelper$$ExternalSyntheticLambda84 sendMessagesHelper$$ExternalSyntheticLambda84 = r0;
            ConnectionsManager connectionsManager = getConnectionsManager();
            SendMessagesHelper$$ExternalSyntheticLambda84 sendMessagesHelper$$ExternalSyntheticLambda842 = new SendMessagesHelper$$ExternalSyntheticLambda84(this, req, parentObject, msgObj, originalPath, parentMessage, check, delayedMessage, z, newMsgObj);
            TLRPC.Message newMsgObj2 = newMsgObj;
            newMsgObj2.reqId = connectionsManager.sendRequest(tLObject, (RequestDelegate) sendMessagesHelper$$ExternalSyntheticLambda84, (QuickAckDelegate) new SendMessagesHelper$$ExternalSyntheticLambda74(this, newMsgObj2), (tLObject instanceof TLRPC.TL_messages_sendMessage ? 128 : 0) | 68);
            if (delayedMessage2 != null) {
                parentMessage.sendDelayedRequests();
                return;
            }
            return;
        }
        maxDelayedMessage.addDelayedRequest(req, msgObj, originalPath, parentObject, delayedMessage, delayedMessage2 != null ? delayedMessage2.scheduled : false);
        if (delayedMessage2 != null && delayedMessage2.requests != null) {
            maxDelayedMessage.requests.addAll(delayedMessage2.requests);
        }
    }

    /* renamed from: lambda$performSendMessageRequest$60$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m453xCLASSNAMEba465(TLObject req, Object parentObject, MessageObject msgObj, String originalPath, DelayedMessage parentMessage, boolean check, DelayedMessage delayedMessage, boolean scheduled, TLRPC.Message newMsgObj, TLObject response, TLRPC.TL_error error) {
        TLObject tLObject = req;
        Object obj = parentObject;
        TLRPC.TL_error tL_error = error;
        if (tL_error != null && (((tLObject instanceof TLRPC.TL_messages_sendMedia) || (tLObject instanceof TLRPC.TL_messages_editMessage)) && FileRefController.isFileRefError(tL_error.text))) {
            if (obj != null) {
                getFileRefController().requestReference(parentObject, tLObject, msgObj, originalPath, parentMessage, Boolean.valueOf(check), delayedMessage, Boolean.valueOf(scheduled));
                return;
            } else if (delayedMessage != null) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda49(this, newMsgObj, scheduled, req, delayedMessage));
                return;
            }
        }
        if (tLObject instanceof TLRPC.TL_messages_editMessage) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda52(this, error, newMsgObj, response, msgObj, originalPath, scheduled, req));
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda67(this, scheduled, error, newMsgObj, response, msgObj, originalPath, req));
        }
    }

    /* renamed from: lambda$performSendMessageRequest$47$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m440x836cd8ee(TLRPC.Message newMsgObj, boolean scheduled, TLObject req, DelayedMessage delayedMessage) {
        removeFromSendingMessages(newMsgObj.id, scheduled);
        if (req instanceof TLRPC.TL_messages_sendMedia) {
            TLRPC.TL_messages_sendMedia request = (TLRPC.TL_messages_sendMedia) req;
            if (request.media instanceof TLRPC.TL_inputMediaPhoto) {
                request.media = delayedMessage.inputUploadMedia;
            } else if (request.media instanceof TLRPC.TL_inputMediaDocument) {
                request.media = delayedMessage.inputUploadMedia;
            }
        } else if (req instanceof TLRPC.TL_messages_editMessage) {
            TLRPC.TL_messages_editMessage request2 = (TLRPC.TL_messages_editMessage) req;
            if (request2.media instanceof TLRPC.TL_inputMediaPhoto) {
                request2.media = delayedMessage.inputUploadMedia;
            } else if (request2.media instanceof TLRPC.TL_inputMediaDocument) {
                request2.media = delayedMessage.inputUploadMedia;
            }
        }
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
    }

    /* renamed from: lambda$performSendMessageRequest$50$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m443x18f3b06(TLRPC.TL_error error, TLRPC.Message newMsgObj, TLObject response, MessageObject msgObj, String originalPath, boolean scheduled, TLObject req) {
        TLRPC.Message message;
        TLRPC.Message message2 = newMsgObj;
        boolean z = scheduled;
        if (error == null) {
            String attachPath = message2.attachPath;
            TLRPC.Updates updates = (TLRPC.Updates) response;
            ArrayList<TLRPC.Update> updatesArr = ((TLRPC.Updates) response).updates;
            int a = 0;
            while (true) {
                if (a >= updatesArr.size()) {
                    message = null;
                    break;
                }
                TLRPC.Update update = updatesArr.get(a);
                if (update instanceof TLRPC.TL_updateEditMessage) {
                    message = ((TLRPC.TL_updateEditMessage) update).message;
                    break;
                } else if (update instanceof TLRPC.TL_updateEditChannelMessage) {
                    message = ((TLRPC.TL_updateEditChannelMessage) update).message;
                    break;
                } else if (update instanceof TLRPC.TL_updateNewScheduledMessage) {
                    message = ((TLRPC.TL_updateNewScheduledMessage) update).message;
                    break;
                } else {
                    a++;
                }
            }
            if (message != null) {
                ImageLoader.saveMessageThumbs(message);
                updateMediaPaths(msgObj, message, message.id, originalPath, false);
            }
            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda65(this, updates, message2, z));
            if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
                stopVideoService(attachPath);
            }
            MessageObject messageObject = msgObj;
            TLObject tLObject = req;
            return;
        }
        AlertsCreator.processError(this.currentAccount, error, (BaseFragment) null, req, new Object[0]);
        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
            stopVideoService(message2.attachPath);
        }
        removeFromSendingMessages(message2.id, z);
        revertEditingMessageObject(msgObj);
    }

    /* renamed from: lambda$performSendMessageRequest$49$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m442x4defb670(TLRPC.Updates updates, TLRPC.Message newMsgObj, boolean scheduled) {
        getMessagesController().processUpdates(updates, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda47(this, newMsgObj, scheduled));
    }

    /* renamed from: lambda$performSendMessageRequest$48$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m441x68ae47af(TLRPC.Message newMsgObj, boolean scheduled) {
        processSentMessage(newMsgObj.id);
        removeFromSendingMessages(newMsgObj.id, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequest$59$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m452x10dc1fcf(boolean scheduled, TLRPC.TL_error error, TLRPC.Message newMsgObj, TLObject response, MessageObject msgObj, String originalPath, TLObject req) {
        boolean isSentError;
        boolean currentSchedule;
        String attachPath;
        int oldId;
        int existFlags;
        ArrayList<TLRPC.Message> sentMessages;
        LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies;
        TLRPC.Message message;
        ArrayList<TLRPC.Update> updatesArr;
        int existFlags2;
        SparseArray<TLRPC.MessageReplies> replies;
        TLRPC.MessageReplies messageReplies;
        boolean z = scheduled;
        TLRPC.TL_error tL_error = error;
        TLRPC.Message message2 = newMsgObj;
        TLObject tLObject = response;
        MessageObject messageObject = msgObj;
        boolean currentSchedule2 = scheduled;
        boolean isSentError2 = false;
        if (tL_error == null) {
            int oldId2 = message2.id;
            ArrayList<TLRPC.Message> sentMessages2 = new ArrayList<>();
            String attachPath2 = message2.attachPath;
            boolean scheduledOnline = message2.date == NUM;
            if (tLObject instanceof TLRPC.TL_updateShortSentMessage) {
                TLRPC.TL_updateShortSentMessage res = (TLRPC.TL_updateShortSentMessage) tLObject;
                attachPath = attachPath2;
                sentMessages = sentMessages2;
                oldId = oldId2;
                TLRPC.TL_updateShortSentMessage res2 = res;
                updateMediaPaths(msgObj, (TLRPC.Message) null, res.id, (String) null, false);
                int existFlags3 = msgObj.getMediaExistanceFlags();
                int i = res2.id;
                message2.id = i;
                message2.local_id = i;
                message2.date = res2.date;
                message2.entities = res2.entities;
                message2.out = res2.out;
                if ((res2.flags & 33554432) != 0) {
                    message2.ttl_period = res2.ttl_period;
                    message2.flags |= 33554432;
                }
                if (res2.media != null) {
                    message2.media = res2.media;
                    message2.flags |= 512;
                    ImageLoader.saveMessageThumbs(newMsgObj);
                }
                if (((res2.media instanceof TLRPC.TL_messageMediaGame) || (res2.media instanceof TLRPC.TL_messageMediaInvoice)) && !TextUtils.isEmpty(res2.message)) {
                    message2.message = res2.message;
                }
                if (!message2.entities.isEmpty()) {
                    message2.flags |= 128;
                }
                if (0 == 0) {
                    Integer value = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(message2.dialog_id));
                    if (value == null) {
                        value = Integer.valueOf(getMessagesStorage().getDialogReadMax(message2.out, message2.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(message2.dialog_id), value);
                    }
                    message2.unread = value.intValue() < message2.id;
                }
                Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda62(this, res2));
                sentMessages.add(message2);
                existFlags = existFlags3;
                currentSchedule = false;
                isSentError = false;
            } else {
                attachPath = attachPath2;
                sentMessages = sentMessages2;
                oldId = oldId2;
                if (tLObject instanceof TLRPC.Updates) {
                    TLRPC.Updates updates = (TLRPC.Updates) tLObject;
                    ArrayList<TLRPC.Update> updatesArr2 = ((TLRPC.Updates) tLObject).updates;
                    TLRPC.Message message3 = null;
                    LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies2 = null;
                    int a = 0;
                    while (true) {
                        if (a >= updatesArr2.size()) {
                            currentSchedule = currentSchedule2;
                            isSentError = isSentError2;
                            channelReplies = null;
                            message = message3;
                            break;
                        }
                        TLRPC.Update update = updatesArr2.get(a);
                        if (update instanceof TLRPC.TL_updateNewMessage) {
                            TLRPC.TL_updateNewMessage newMessage = (TLRPC.TL_updateNewMessage) update;
                            TLRPC.Message message4 = message3;
                            TLRPC.Message message5 = newMessage.message;
                            sentMessages.add(message5);
                            currentSchedule = currentSchedule2;
                            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda60(this, newMessage));
                            updatesArr2.remove(a);
                            isSentError = isSentError2;
                            message = message5;
                            channelReplies = null;
                            break;
                        }
                        TLRPC.Message message6 = message3;
                        currentSchedule = currentSchedule2;
                        if (update instanceof TLRPC.TL_updateNewChannelMessage) {
                            TLRPC.TL_updateNewChannelMessage newMessage2 = (TLRPC.TL_updateNewChannelMessage) update;
                            TLRPC.Chat chat = getMessagesController().getChat(Long.valueOf(MessagesController.getUpdateChannelId(newMessage2)));
                            if (chat == null || chat.megagroup) {
                                if (newMessage2.message.reply_to == null) {
                                    isSentError = isSentError2;
                                } else if (!(newMessage2.message.reply_to.reply_to_top_id == 0 && newMessage2.message.reply_to.reply_to_msg_id == 0)) {
                                    if (0 == 0) {
                                        channelReplies2 = new LongSparseArray<>();
                                    }
                                    isSentError = isSentError2;
                                    long did = MessageObject.getDialogId(newMessage2.message);
                                    SparseArray<TLRPC.MessageReplies> replies2 = channelReplies2.get(did);
                                    if (replies2 == null) {
                                        TLRPC.Chat chat2 = chat;
                                        replies = new SparseArray<>();
                                        channelReplies2.put(did, replies);
                                    } else {
                                        replies = replies2;
                                    }
                                    LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies3 = channelReplies2;
                                    int id = newMessage2.message.reply_to.reply_to_top_id != 0 ? newMessage2.message.reply_to.reply_to_top_id : newMessage2.message.reply_to.reply_to_msg_id;
                                    TLRPC.MessageReplies messageReplies2 = replies.get(id);
                                    if (messageReplies2 == null) {
                                        long j = did;
                                        messageReplies = new TLRPC.TL_messageReplies();
                                        replies.put(id, messageReplies);
                                    } else {
                                        messageReplies = messageReplies2;
                                    }
                                    if (newMessage2.message.from_id != null) {
                                        SparseArray<TLRPC.MessageReplies> sparseArray = replies;
                                        int i2 = id;
                                        messageReplies.recent_repliers.add(0, newMessage2.message.from_id);
                                    } else {
                                        int i3 = id;
                                    }
                                    messageReplies.replies++;
                                    channelReplies2 = channelReplies3;
                                }
                                TLRPC.Message message7 = newMessage2.message;
                                message = message7;
                                sentMessages.add(message7);
                                Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda58(this, newMessage2));
                                updatesArr2.remove(a);
                                channelReplies = channelReplies2;
                            }
                            TLRPC.Chat chat3 = chat;
                            isSentError = isSentError2;
                            TLRPC.Message message72 = newMessage2.message;
                            message = message72;
                            sentMessages.add(message72);
                            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda58(this, newMessage2));
                            updatesArr2.remove(a);
                            channelReplies = channelReplies2;
                        } else {
                            isSentError = isSentError2;
                            if (update instanceof TLRPC.TL_updateNewScheduledMessage) {
                                TLRPC.Message message8 = ((TLRPC.TL_updateNewScheduledMessage) update).message;
                                message = message8;
                                sentMessages.add(message8);
                                updatesArr2.remove(a);
                                channelReplies = null;
                                break;
                            }
                            a++;
                            message3 = message6;
                            currentSchedule2 = currentSchedule;
                            isSentError2 = isSentError;
                        }
                    }
                    if (channelReplies != null) {
                        getMessagesStorage().putChannelViews((LongSparseArray<SparseIntArray>) null, (LongSparseArray<SparseIntArray>) null, channelReplies, true);
                        updatesArr = updatesArr2;
                        getNotificationCenter().postNotificationName(NotificationCenter.didUpdateMessagesViews, null, null, channelReplies, true);
                    } else {
                        updatesArr = updatesArr2;
                    }
                    if (message != null) {
                        MessageObject.getDialogId(message);
                        if (scheduledOnline && message.date != NUM) {
                            currentSchedule = false;
                        }
                        ImageLoader.saveMessageThumbs(message);
                        if (!currentSchedule) {
                            Integer value2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(message.dialog_id));
                            if (value2 == null) {
                                value2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(message.out, message.dialog_id));
                                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(message.dialog_id), value2);
                            }
                            message.unread = value2.intValue() < message.id;
                        }
                        messageObject.messageOwner.post_author = message.post_author;
                        if ((message.flags & 33554432) != 0) {
                            messageObject.messageOwner.ttl_period = message.ttl_period;
                            messageObject.messageOwner.flags |= 33554432;
                        }
                        messageObject.messageOwner.entities = message.entities;
                        ArrayList<TLRPC.Update> arrayList = updatesArr;
                        updateMediaPaths(msgObj, message, message.id, originalPath, false);
                        existFlags2 = msgObj.getMediaExistanceFlags();
                        message2.id = message.id;
                    } else {
                        isSentError = true;
                        existFlags2 = 0;
                    }
                    Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda63(this, updates));
                    existFlags = existFlags2;
                } else {
                    currentSchedule = currentSchedule2;
                    isSentError = false;
                    existFlags = 0;
                }
            }
            if (MessageObject.isLiveLocationMessage(newMsgObj) && message2.via_bot_id == 0 && TextUtils.isEmpty(message2.via_bot_name)) {
                getLocationController().addSharingLocation(message2);
            }
            if (!isSentError) {
                getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                message2.send_state = 0;
                if (!z || currentSchedule) {
                    getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(message2.id), message2, Long.valueOf(message2.dialog_id), 0L, Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
                    getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda42(this, newMsgObj, oldId, scheduled, sentMessages, existFlags, attachPath));
                } else {
                    ArrayList<Integer> messageIds = new ArrayList<>();
                    messageIds.add(Integer.valueOf(oldId));
                    getMessagesController().deleteMessages(messageIds, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, message2.dialog_id, false, true);
                    SendMessagesHelper$$ExternalSyntheticLambda27 sendMessagesHelper$$ExternalSyntheticLambda27 = r0;
                    DispatchQueue storageQueue = getMessagesStorage().getStorageQueue();
                    ArrayList<Integer> arrayList2 = messageIds;
                    SendMessagesHelper$$ExternalSyntheticLambda27 sendMessagesHelper$$ExternalSyntheticLambda272 = new SendMessagesHelper$$ExternalSyntheticLambda27(this, sentMessages, msgObj, newMsgObj, oldId, scheduled, attachPath);
                    storageQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda27);
                }
            }
            TLObject tLObject2 = req;
            boolean z2 = currentSchedule;
        } else {
            AlertsCreator.processError(this.currentAccount, tL_error, (BaseFragment) null, req, new Object[0]);
            isSentError = true;
        }
        if (isSentError) {
            boolean z3 = scheduled;
            getMessagesStorage().markMessageAsSendError(message2, z3);
            message2.send_state = 2;
            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
            processSentMessage(message2.id);
            if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
                stopVideoService(message2.attachPath);
            }
            removeFromSendingMessages(message2.id, z3);
            return;
        }
        boolean z4 = scheduled;
    }

    /* renamed from: lambda$performSendMessageRequest$51$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m444xe6d0a9c7(TLRPC.TL_updateShortSentMessage res) {
        getMessagesController().processNewDifferenceParams(-1, res.pts, res.date, res.pts_count);
    }

    /* renamed from: lambda$performSendMessageRequest$52$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m445xcCLASSNAME(TLRPC.TL_updateNewMessage newMessage) {
        getMessagesController().processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count);
    }

    /* renamed from: lambda$performSendMessageRequest$53$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m446xb1538749(TLRPC.TL_updateNewChannelMessage newMessage) {
        getMessagesController().processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.peer_id.channel_id);
    }

    /* renamed from: lambda$performSendMessageRequest$54$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m447x9694var_a(TLRPC.Updates updates) {
        getMessagesController().processUpdates(updates, false);
    }

    /* renamed from: lambda$performSendMessageRequest$56$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m449x6117d38c(ArrayList sentMessages, MessageObject msgObj, TLRPC.Message newMsgObj, int oldId, boolean scheduled, String attachPath) {
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda30(this, msgObj, newMsgObj, oldId, scheduled));
        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
            stopVideoService(attachPath);
            return;
        }
        String str = attachPath;
    }

    /* renamed from: lambda$performSendMessageRequest$55$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m448x7bd664cb(MessageObject msgObj, TLRPC.Message newMsgObj, int oldId, boolean scheduled) {
        ArrayList<MessageObject> messageObjects = new ArrayList<>();
        messageObjects.add(new MessageObject(msgObj.currentAccount, msgObj.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(newMsgObj.dialog_id, messageObjects, false);
        getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
        processSentMessage(oldId);
        removeFromSendingMessages(oldId, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequest$58$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m451x2b9ab10e(TLRPC.Message newMsgObj, int oldId, boolean scheduled, ArrayList sentMessages, int existFlags, String attachPath) {
        TLRPC.Message message = newMsgObj;
        getMessagesStorage().updateMessageStateAndId(message.random_id, MessageObject.getPeerId(message.peer_id), Integer.valueOf(oldId), message.id, 0, false, scheduled ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, scheduled);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda40(this, newMsgObj, oldId, existFlags, scheduled));
        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
            stopVideoService(attachPath);
            return;
        }
        String str = attachPath;
    }

    /* renamed from: lambda$performSendMessageRequest$57$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m450x4659424d(TLRPC.Message newMsgObj, int oldId, int existFlags, boolean scheduled) {
        getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(newMsgObj.id), newMsgObj, Long.valueOf(newMsgObj.dialog_id), 0L, Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
        processSentMessage(oldId);
        removeFromSendingMessages(oldId, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequest$62$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m455x8efe81e7(TLRPC.Message newMsgObj) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda38(this, newMsgObj, newMsgObj.id));
    }

    /* renamed from: lambda$performSendMessageRequest$61$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m454xa9bd1326(TLRPC.Message newMsgObj, int msg_id) {
        newMsgObj.send_state = 0;
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByAck, Integer.valueOf(msg_id));
    }

    private void updateMediaPaths(MessageObject newMsgObj, TLRPC.Message sentMessage, int newMsgId, String originalPath, boolean post) {
        TLRPC.PhotoSize strippedNew;
        MessageObject messageObject;
        byte[] oldWaveform;
        boolean save;
        int b;
        int b2;
        TLRPC.Message newMsg;
        TLRPC.PhotoSize strippedNew2;
        TLRPC.PhotoSize size;
        boolean found;
        File cacheFile2;
        String newKey;
        TLRPC.PhotoSize strippedNew3;
        TLRPC.PhotoSize strippedNew4;
        TLRPC.PhotoSize strippedNew5;
        MessageObject messageObject2 = newMsgObj;
        TLRPC.Message message = sentMessage;
        String str = originalPath;
        boolean z = post;
        TLRPC.Message newMsg2 = messageObject2.messageOwner;
        TLRPC.PhotoSize strippedNew6 = null;
        if (newMsg2.media != null) {
            TLRPC.PhotoSize strippedOld = null;
            TLObject photoObject = null;
            if (newMsgObj.isLiveLocation() && (message.media instanceof TLRPC.TL_messageMediaGeoLive)) {
                newMsg2.media.period = message.media.period;
            } else if (newMsgObj.isDice()) {
                ((TLRPC.TL_messageMediaDice) newMsg2.media).value = ((TLRPC.TL_messageMediaDice) message.media).value;
            } else if (newMsg2.media.photo != null) {
                strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.photo.sizes, 40);
                if (message == null || message.media == null || message.media.photo == null) {
                    strippedNew6 = strippedOld;
                } else {
                    strippedNew6 = FileLoader.getClosestPhotoSizeWithSize(message.media.photo.sizes, 40);
                }
                photoObject = newMsg2.media.photo;
            } else if (newMsg2.media.document != null) {
                strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.document.thumbs, 40);
                if (message == null || message.media == null || message.media.document == null) {
                    strippedNew5 = strippedOld;
                } else {
                    strippedNew5 = FileLoader.getClosestPhotoSizeWithSize(message.media.document.thumbs, 40);
                }
                photoObject = newMsg2.media.document;
            } else if (newMsg2.media.webpage != null) {
                if (newMsg2.media.webpage.photo != null) {
                    strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.webpage.photo.sizes, 40);
                    if (message == null || message.media == null || message.media.webpage == null || message.media.webpage.photo == null) {
                        strippedNew4 = strippedOld;
                    } else {
                        strippedNew4 = FileLoader.getClosestPhotoSizeWithSize(message.media.webpage.photo.sizes, 40);
                    }
                    photoObject = newMsg2.media.webpage.photo;
                } else if (newMsg2.media.webpage.document != null) {
                    strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.webpage.document.thumbs, 40);
                    if (message == null || message.media == null || message.media.webpage == null || message.media.webpage.document == null) {
                        strippedNew3 = strippedOld;
                    } else {
                        strippedNew3 = FileLoader.getClosestPhotoSizeWithSize(message.media.webpage.document.thumbs, 40);
                    }
                    photoObject = newMsg2.media.webpage.document;
                }
            }
            if (!(strippedNew6 instanceof TLRPC.TL_photoStrippedSize) || !(strippedOld instanceof TLRPC.TL_photoStrippedSize)) {
                int i = newMsgId;
            } else {
                String oldKey = "stripped" + FileRefController.getKeyForParentObject(newMsgObj);
                if (message != null) {
                    newKey = "stripped" + FileRefController.getKeyForParentObject(sentMessage);
                    int i2 = newMsgId;
                } else {
                    newKey = "strippedmessage" + newMsgId + "_" + newMsgObj.getChannelId() + "_" + messageObject2.scheduled;
                }
                ImageLoader.getInstance().replaceImageInCache(oldKey, newKey, ImageLocation.getForObject(strippedNew6, photoObject), z);
            }
            strippedNew = strippedNew6;
        } else {
            int i3 = newMsgId;
            strippedNew = null;
        }
        if (message != null) {
            if ((message.media instanceof TLRPC.TL_messageMediaPhoto) && message.media.photo != null && (newMsg2.media instanceof TLRPC.TL_messageMediaPhoto) && newMsg2.media.photo != null) {
                if (message.media.ttl_seconds == 0 && !messageObject2.scheduled) {
                    getMessagesStorage().putSentFile(str, message.media.photo, 0, "sent_" + message.peer_id.channel_id + "_" + message.id);
                }
                if (newMsg2.media.photo.sizes.size() != 1 || !(newMsg2.media.photo.sizes.get(0).location instanceof TLRPC.TL_fileLocationUnavailable)) {
                    int b3 = 0;
                    while (b3 < newMsg2.media.photo.sizes.size()) {
                        TLRPC.PhotoSize size2 = newMsg2.media.photo.sizes.get(b3);
                        if (size2 == null || size2.location == null) {
                            b = b3;
                        } else if (size2.type == null) {
                            b = b3;
                        } else {
                            boolean found2 = false;
                            int a = 0;
                            while (true) {
                                if (a >= message.media.photo.sizes.size()) {
                                    b2 = b3;
                                    newMsg = newMsg2;
                                    strippedNew2 = strippedNew;
                                    break;
                                }
                                size = message.media.photo.sizes.get(a);
                                if (size == null || size.location == null || (size instanceof TLRPC.TL_photoSizeEmpty)) {
                                    b2 = b3;
                                } else if (size.type == null) {
                                    b2 = b3;
                                } else {
                                    b2 = b3;
                                    if ((size2.location.volume_id == -2147483648L && size.type.equals(size2.type)) || (size.w == size2.w && size.h == size2.h)) {
                                        StringBuilder sb = new StringBuilder();
                                        newMsg = newMsg2;
                                        strippedNew2 = strippedNew;
                                        sb.append(size2.location.volume_id);
                                        sb.append("_");
                                        sb.append(size2.location.local_id);
                                        String fileName = sb.toString();
                                        String fileName2 = size.location.volume_id + "_" + size.location.local_id;
                                    }
                                }
                                a++;
                                MessageObject messageObject3 = newMsgObj;
                                newMsg2 = newMsg2;
                                b3 = b2;
                                strippedNew = strippedNew;
                            }
                            StringBuilder sb2 = new StringBuilder();
                            newMsg = newMsg2;
                            strippedNew2 = strippedNew;
                            sb2.append(size2.location.volume_id);
                            sb2.append("_");
                            sb2.append(size2.location.local_id);
                            String fileName3 = sb2.toString();
                            String fileName22 = size.location.volume_id + "_" + size.location.local_id;
                            if (fileName3.equals(fileName22)) {
                                found = true;
                            } else {
                                File cacheFile = new File(FileLoader.getDirectory(4), fileName3 + ".jpg");
                                if (message.media.ttl_seconds != 0 || (message.media.photo.sizes.size() != 1 && size.w <= 90 && size.h <= 90)) {
                                    found = true;
                                    cacheFile2 = new File(FileLoader.getDirectory(4), fileName22 + ".jpg");
                                } else {
                                    cacheFile2 = FileLoader.getPathToAttach(size);
                                    found = true;
                                }
                                cacheFile.renameTo(cacheFile2);
                                ImageLoader.getInstance().replaceImageInCache(fileName3, fileName22, ImageLocation.getForPhoto(size, message.media.photo), z);
                                size2.location = size.location;
                                size2.size = size.size;
                            }
                            found2 = found;
                            if (!found2) {
                                String fileName4 = size2.location.volume_id + "_" + size2.location.local_id;
                                File cacheFile3 = new File(FileLoader.getDirectory(4), fileName4 + ".jpg");
                                cacheFile3.delete();
                                if (!"s".equals(size2.type) || strippedNew2 == null) {
                                    newMsg2 = newMsg;
                                    b = b2;
                                    strippedNew = strippedNew2;
                                    File file = cacheFile3;
                                } else {
                                    newMsg2 = newMsg;
                                    b = b2;
                                    strippedNew = strippedNew2;
                                    newMsg2.media.photo.sizes.set(b, strippedNew);
                                    ImageLocation location = ImageLocation.getForPhoto(strippedNew, message.media.photo);
                                    File file2 = cacheFile3;
                                    ImageLoader.getInstance().replaceImageInCache(fileName4, location.getKey(message, (Object) null, false), location, z);
                                }
                            } else {
                                newMsg2 = newMsg;
                                b = b2;
                                strippedNew = strippedNew2;
                            }
                        }
                        b3 = b + 1;
                        MessageObject messageObject4 = newMsgObj;
                    }
                    int i4 = b3;
                } else {
                    newMsg2.media.photo.sizes = message.media.photo.sizes;
                }
                newMsg2.message = message.message;
                message.attachPath = newMsg2.attachPath;
                newMsg2.media.photo.id = message.media.photo.id;
                newMsg2.media.photo.dc_id = message.media.photo.dc_id;
                newMsg2.media.photo.access_hash = message.media.photo.access_hash;
                MessageObject messageObject5 = newMsgObj;
                TLRPC.PhotoSize photoSize = strippedNew;
            } else if (!(message.media instanceof TLRPC.TL_messageMediaDocument) || message.media.document == null || !(newMsg2.media instanceof TLRPC.TL_messageMediaDocument) || newMsg2.media.document == null) {
                MessageObject messageObject6 = newMsgObj;
                TLRPC.PhotoSize photoSize2 = strippedNew;
                if ((message.media instanceof TLRPC.TL_messageMediaContact) && (newMsg2.media instanceof TLRPC.TL_messageMediaContact)) {
                    newMsg2.media = message.media;
                } else if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
                    newMsg2.media = message.media;
                } else if (message.media instanceof TLRPC.TL_messageMediaGeo) {
                    message.media.geo.lat = newMsg2.media.geo.lat;
                    message.media.geo._long = newMsg2.media.geo._long;
                } else if ((message.media instanceof TLRPC.TL_messageMediaGame) || (message.media instanceof TLRPC.TL_messageMediaInvoice)) {
                    newMsg2.media = message.media;
                    if (!TextUtils.isEmpty(message.message)) {
                        newMsg2.entities = message.entities;
                        newMsg2.message = message.message;
                    }
                    if (message.reply_markup != null) {
                        newMsg2.reply_markup = message.reply_markup;
                        newMsg2.flags |= 64;
                    }
                } else if (message.media instanceof TLRPC.TL_messageMediaPoll) {
                    newMsg2.media = message.media;
                }
            } else {
                if (message.media.ttl_seconds == 0) {
                    messageObject = newMsgObj;
                    if (messageObject.videoEditedInfo == null || (messageObject.videoEditedInfo.mediaEntities == null && TextUtils.isEmpty(messageObject.videoEditedInfo.paintPath) && messageObject.videoEditedInfo.cropState == null)) {
                        boolean isVideo = MessageObject.isVideoMessage(sentMessage);
                        if (!isVideo && !MessageObject.isGifMessage(sentMessage)) {
                            TLRPC.PhotoSize photoSize3 = strippedNew;
                        } else if (MessageObject.isGifDocument(message.media.document) == MessageObject.isGifDocument(newMsg2.media.document)) {
                            if (!messageObject.scheduled) {
                                MessagesStorage messagesStorage = getMessagesStorage();
                                TLRPC.Document document = message.media.document;
                                StringBuilder sb3 = new StringBuilder();
                                sb3.append("sent_");
                                TLRPC.PhotoSize photoSize4 = strippedNew;
                                sb3.append(message.peer_id.channel_id);
                                sb3.append("_");
                                sb3.append(message.id);
                                messagesStorage.putSentFile(str, document, 2, sb3.toString());
                            }
                            if (isVideo) {
                                message.attachPath = newMsg2.attachPath;
                            }
                        }
                        if (!MessageObject.isVoiceMessage(sentMessage) && !MessageObject.isRoundVideoMessage(sentMessage) && !messageObject.scheduled) {
                            getMessagesStorage().putSentFile(str, message.media.document, 1, "sent_" + message.peer_id.channel_id + "_" + message.id);
                        }
                    } else {
                        TLRPC.PhotoSize photoSize5 = strippedNew;
                    }
                } else {
                    messageObject = newMsgObj;
                    TLRPC.PhotoSize photoSize6 = strippedNew;
                }
                TLRPC.PhotoSize size22 = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.document.thumbs, 320);
                TLRPC.PhotoSize size3 = FileLoader.getClosestPhotoSizeWithSize(message.media.document.thumbs, 320);
                if (size22 != null && size22.location != null && size22.location.volume_id == -2147483648L && size3 != null && size3.location != null && !(size3 instanceof TLRPC.TL_photoSizeEmpty) && !(size22 instanceof TLRPC.TL_photoSizeEmpty)) {
                    String fileName5 = size22.location.volume_id + "_" + size22.location.local_id;
                    String fileName23 = size3.location.volume_id + "_" + size3.location.local_id;
                    if (!fileName5.equals(fileName23)) {
                        new File(FileLoader.getDirectory(4), fileName5 + ".jpg").renameTo(new File(FileLoader.getDirectory(4), fileName23 + ".jpg"));
                        ImageLoader.getInstance().replaceImageInCache(fileName5, fileName23, ImageLocation.getForDocument(size3, message.media.document), z);
                        size22.location = size3.location;
                        size22.size = size3.size;
                    }
                } else if (size3 != null && size22 != null && MessageObject.isStickerMessage(sentMessage) && size22.location != null) {
                    size3.location = size22.location;
                } else if (size22 == null || ((size22 != null && (size22.location instanceof TLRPC.TL_fileLocationUnavailable)) || (size22 instanceof TLRPC.TL_photoSizeEmpty))) {
                    newMsg2.media.document.thumbs = message.media.document.thumbs;
                }
                newMsg2.media.document.dc_id = message.media.document.dc_id;
                newMsg2.media.document.id = message.media.document.id;
                newMsg2.media.document.access_hash = message.media.document.access_hash;
                int a2 = 0;
                while (true) {
                    if (a2 >= newMsg2.media.document.attributes.size()) {
                        oldWaveform = null;
                        break;
                    }
                    TLRPC.DocumentAttribute attribute = newMsg2.media.document.attributes.get(a2);
                    if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
                        oldWaveform = attribute.waveform;
                        break;
                    }
                    a2++;
                }
                newMsg2.media.document.attributes = message.media.document.attributes;
                if (oldWaveform != null) {
                    for (int a3 = 0; a3 < newMsg2.media.document.attributes.size(); a3++) {
                        TLRPC.DocumentAttribute attribute2 = newMsg2.media.document.attributes.get(a3);
                        if (attribute2 instanceof TLRPC.TL_documentAttributeAudio) {
                            attribute2.waveform = oldWaveform;
                            attribute2.flags |= 4;
                        }
                    }
                }
                newMsg2.media.document.size = message.media.document.size;
                newMsg2.media.document.mime_type = message.media.document.mime_type;
                if ((message.flags & 4) == 0 && MessageObject.isOut(sentMessage)) {
                    if (MessageObject.isNewGifDocument(message.media.document)) {
                        if (MessageObject.isDocumentHasAttachedStickers(message.media.document)) {
                            save = getMessagesController().saveGifsWithStickers;
                        } else {
                            save = true;
                        }
                        if (save) {
                            getMediaDataController().addRecentGif(message.media.document, message.date);
                        }
                    } else if (MessageObject.isStickerDocument(message.media.document) || MessageObject.isAnimatedStickerDocument(message.media.document, true)) {
                        getMediaDataController().addRecentSticker(0, sentMessage, message.media.document, message.date, false);
                    }
                }
                if (newMsg2.attachPath == null || !newMsg2.attachPath.startsWith(FileLoader.getDirectory(4).getAbsolutePath())) {
                    message.attachPath = newMsg2.attachPath;
                    message.message = newMsg2.message;
                    return;
                }
                File cacheFile4 = new File(newMsg2.attachPath);
                File cacheFile22 = FileLoader.getPathToAttach(message.media.document, message.media.ttl_seconds != 0);
                if (!cacheFile4.renameTo(cacheFile22)) {
                    if (cacheFile4.exists()) {
                        message.attachPath = newMsg2.attachPath;
                    } else {
                        messageObject.attachPathExists = false;
                    }
                    messageObject.mediaExists = cacheFile22.exists();
                    message.message = newMsg2.message;
                } else if (MessageObject.isVideoMessage(sentMessage)) {
                    messageObject.attachPathExists = true;
                } else {
                    messageObject.mediaExists = messageObject.attachPathExists;
                    messageObject.attachPathExists = false;
                    newMsg2.attachPath = "";
                    if (str != null && str.startsWith("http")) {
                        getMessagesStorage().addRecentLocalFile(str, cacheFile22.toString(), newMsg2.media.document);
                    }
                }
            }
        }
    }

    private void putToDelayedMessages(String location, DelayedMessage message) {
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.get(location);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.delayedMessages.put(location, arrayList);
        }
        arrayList.add(message);
    }

    /* access modifiers changed from: protected */
    public ArrayList<DelayedMessage> getDelayedMessages(String location) {
        return this.delayedMessages.get(location);
    }

    /* access modifiers changed from: protected */
    public long getNextRandomId() {
        long val = 0;
        while (val == 0) {
            val = Utilities.random.nextLong();
        }
        return val;
    }

    public void checkUnsentMessages() {
        getMessagesStorage().getUnsentMessages(1000);
    }

    /* access modifiers changed from: protected */
    public void processUnsentMessages(ArrayList<TLRPC.Message> messages, ArrayList<TLRPC.Message> scheduledMessages, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, ArrayList<TLRPC.EncryptedChat> encryptedChats) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda25(this, users, chats, encryptedChats, messages, scheduledMessages));
    }

    /* renamed from: lambda$processUnsentMessages$63$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m469x625b480d(ArrayList users, ArrayList chats, ArrayList encryptedChats, ArrayList messages, ArrayList scheduledMessages) {
        getMessagesController().putUsers(users, true);
        getMessagesController().putChats(chats, true);
        getMessagesController().putEncryptedChats(encryptedChats, true);
        int N = messages.size();
        for (int a = 0; a < N; a++) {
            MessageObject messageObject = new MessageObject(this.currentAccount, (TLRPC.Message) messages.get(a), false, true);
            long groupId = messageObject.getGroupId();
            if (groupId != 0 && messageObject.messageOwner.params != null && !messageObject.messageOwner.params.containsKey("final") && (a == N - 1 || ((TLRPC.Message) messages.get(a + 1)).grouped_id != groupId)) {
                messageObject.messageOwner.params.put("final", "1");
            }
            retrySendMessage(messageObject, true);
        }
        if (scheduledMessages != null) {
            for (int a2 = 0; a2 < scheduledMessages.size(); a2++) {
                MessageObject messageObject2 = new MessageObject(this.currentAccount, (TLRPC.Message) scheduledMessages.get(a2), false, true);
                messageObject2.scheduled = true;
                retrySendMessage(messageObject2, true);
            }
        }
    }

    public ImportingStickers getImportingStickers(String shortName) {
        return this.importingStickersMap.get(shortName);
    }

    public ImportingHistory getImportingHistory(long dialogId) {
        return this.importingHistoryMap.get(dialogId);
    }

    public boolean isImportingStickers() {
        return this.importingStickersMap.size() != 0;
    }

    public boolean isImportingHistory() {
        return this.importingHistoryMap.size() != 0;
    }

    public void prepareImportHistory(long dialogId, Uri uri, ArrayList<Uri> mediaUris, MessagesStorage.LongCallback onStartImport) {
        TLRPC.Chat chat;
        if (this.importingHistoryMap.get(dialogId) != null) {
            onStartImport.run(0);
        } else if (!DialogObject.isChatDialog(dialogId) || (chat = getMessagesController().getChat(Long.valueOf(-dialogId))) == null || chat.megagroup) {
            new Thread(new SendMessagesHelper$$ExternalSyntheticLambda24(this, mediaUris, dialogId, uri, onStartImport)).start();
        } else {
            getMessagesController().convertToMegaGroup((Context) null, -dialogId, (BaseFragment) null, new SendMessagesHelper$$ExternalSyntheticLambda73(this, uri, mediaUris, onStartImport));
        }
    }

    /* renamed from: lambda$prepareImportHistory$64$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m464x12cad7b8(Uri uri, ArrayList mediaUris, MessagesStorage.LongCallback onStartImport, long chatId) {
        if (chatId != 0) {
            prepareImportHistory(-chatId, uri, mediaUris, onStartImport);
            return;
        }
        onStartImport.run(0);
    }

    /* renamed from: lambda$prepareImportHistory$69$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m466x8d12017d(ArrayList mediaUris, long dialogId, Uri uri, MessagesStorage.LongCallback onStartImport) {
        Uri mediaUri;
        long j = dialogId;
        MessagesStorage.LongCallback longCallback = onStartImport;
        ArrayList arrayList = mediaUris != null ? mediaUris : new ArrayList();
        ImportingHistory importingHistory = new ImportingHistory();
        importingHistory.mediaPaths = arrayList;
        importingHistory.dialogId = j;
        importingHistory.peer = getMessagesController().getInputPeer(j);
        HashMap<String, ImportingHistory> files = new HashMap<>();
        int N = arrayList.size();
        for (int a = 0; a < N + 1; a++) {
            if (a == 0) {
                mediaUri = uri;
            } else {
                mediaUri = (Uri) arrayList.get(a - 1);
            }
            if (mediaUri != null && !AndroidUtilities.isInternalUri(mediaUri)) {
                String path = MediaController.copyFileToCache(mediaUri, "txt");
                if (path == null) {
                    continue;
                } else {
                    File f = new File(path);
                    if (f.exists()) {
                        long length = f.length();
                        long size = length;
                        if (length != 0) {
                            importingHistory.totalSize += size;
                            if (a != 0) {
                                importingHistory.uploadMedia.add(path);
                            } else if (size > 33554432) {
                                f.delete();
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda9(longCallback));
                                return;
                            } else {
                                importingHistory.historyPath = path;
                            }
                            importingHistory.uploadSet.add(path);
                            files.put(path, importingHistory);
                        }
                    }
                    if (a == 0) {
                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda8(longCallback));
                        return;
                    }
                }
            } else if (a == 0) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda7(longCallback));
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda28(this, files, dialogId, importingHistory, onStartImport));
    }

    static /* synthetic */ void lambda$prepareImportHistory$67(MessagesStorage.LongCallback onStartImport) {
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("ImportFileTooLarge", NUM), 0).show();
        onStartImport.run(0);
    }

    /* renamed from: lambda$prepareImportHistory$68$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m465xa7d092bc(HashMap files, long dialogId, ImportingHistory importingHistory, MessagesStorage.LongCallback onStartImport) {
        this.importingHistoryFiles.putAll(files);
        this.importingHistoryMap.put(dialogId, importingHistory);
        getFileLoader().uploadFile(importingHistory.historyPath, false, true, 0, 67108864, true);
        getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(dialogId));
        onStartImport.run(dialogId);
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable e) {
            FileLog.e(e);
        }
    }

    public void prepareImportStickers(String title, String shortName, String sofrware, ArrayList<ImportingSticker> paths, MessagesStorage.StringCallback onStartImport) {
        if (this.importingStickersMap.get(shortName) != null) {
            onStartImport.run((String) null);
        } else {
            new Thread(new SendMessagesHelper$$ExternalSyntheticLambda21(this, title, shortName, sofrware, paths, onStartImport)).start();
        }
    }

    /* renamed from: lambda$prepareImportStickers$72$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m468xfa297655(String title, String shortName, String sofrware, ArrayList paths, MessagesStorage.StringCallback onStartImport) {
        ImportingStickers importingStickers = new ImportingStickers();
        importingStickers.title = title;
        importingStickers.shortName = shortName;
        importingStickers.software = sofrware;
        HashMap<String, ImportingStickers> files = new HashMap<>();
        int a = 0;
        int N = paths.size();
        while (a < N) {
            ImportingSticker sticker = (ImportingSticker) paths.get(a);
            File f = new File(sticker.path);
            if (f.exists()) {
                long length = f.length();
                long size = length;
                if (length != 0) {
                    importingStickers.totalSize += size;
                    importingStickers.uploadMedia.add(sticker);
                    importingStickers.uploadSet.put(sticker.path, sticker);
                    files.put(sticker.path, importingStickers);
                    MessagesStorage.StringCallback stringCallback = onStartImport;
                    a++;
                }
            }
            if (a == 0) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda10(onStartImport));
                return;
            } else {
                MessagesStorage.StringCallback stringCallback2 = onStartImport;
                a++;
            }
        }
        ArrayList arrayList = paths;
        MessagesStorage.StringCallback stringCallback3 = onStartImport;
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda34(this, importingStickers, files, shortName, onStartImport));
    }

    /* renamed from: lambda$prepareImportStickers$71$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m467x14e80794(ImportingStickers importingStickers, HashMap files, String shortName, MessagesStorage.StringCallback onStartImport) {
        if (importingStickers.uploadMedia.get(0).item != null) {
            importingStickers.startImport();
        } else {
            this.importingStickersFiles.putAll(files);
            this.importingStickersMap.put(shortName, importingStickers);
            importingStickers.initImport();
            getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, shortName);
            onStartImport.run(shortName);
        }
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable e) {
            FileLog.e(e);
        }
    }

    public TLRPC.TL_photo generatePhotoSizes(String path, Uri imageUri) {
        return generatePhotoSizes((TLRPC.TL_photo) null, path, imageUri);
    }

    public TLRPC.TL_photo generatePhotoSizes(TLRPC.TL_photo photo, String path, Uri imageUri) {
        Bitmap bitmap = ImageLoader.loadBitmap(path, imageUri, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true);
        if (bitmap == null) {
            bitmap = ImageLoader.loadBitmap(path, imageUri, 800.0f, 800.0f, true);
        }
        ArrayList<TLRPC.PhotoSize> sizes = new ArrayList<>();
        TLRPC.PhotoSize size = ImageLoader.scaleAndSaveImage(bitmap, 90.0f, 90.0f, 55, true);
        if (size != null) {
            sizes.add(size);
        }
        TLRPC.PhotoSize size2 = ImageLoader.scaleAndSaveImage(bitmap, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true, 80, false, 101, 101);
        if (size2 != null) {
            sizes.add(size2);
        }
        if (bitmap != null) {
            bitmap.recycle();
        }
        if (sizes.isEmpty()) {
            return null;
        }
        getUserConfig().saveConfig(false);
        if (photo == null) {
            photo = new TLRPC.TL_photo();
        }
        photo.date = getConnectionsManager().getCurrentTime();
        photo.sizes = sizes;
        photo.file_reference = new byte[0];
        return photo;
    }

    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:222:0x043c, code lost:
        r0 = 65535;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:223:0x043d, code lost:
        switch(r0) {
            case 0: goto L_0x0462;
            case 1: goto L_0x045d;
            case 2: goto L_0x0458;
            case 3: goto L_0x0453;
            case 4: goto L_0x044e;
            case 5: goto L_0x0449;
            default: goto L_0x0440;
        };
     */
    /* JADX WARNING: Code restructure failed: missing block: B:224:0x0440, code lost:
        r0 = r14.getMimeTypeFromExtension(r12);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:225:0x0444, code lost:
        if (r0 == null) goto L_0x0465;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:226:0x0446, code lost:
        r8.mime_type = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:227:0x0449, code lost:
        r8.mime_type = "audio/flac";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:228:0x044e, code lost:
        r8.mime_type = "audio/ogg";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:229:0x0453, code lost:
        r8.mime_type = "audio/m4a";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:230:0x0458, code lost:
        r8.mime_type = "audio/mpeg";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:231:0x045d, code lost:
        r8.mime_type = "audio/opus";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:232:0x0462, code lost:
        r8.mime_type = "image/webp";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:233:0x0465, code lost:
        r8.mime_type = "application/octet-stream";
     */
    /* JADX WARNING: Removed duplicated region for block: B:119:0x01e6 A[SYNTHETIC, Splitter:B:119:0x01e6] */
    /* JADX WARNING: Removed duplicated region for block: B:127:0x01ff A[SYNTHETIC, Splitter:B:127:0x01ff] */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x0248  */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x0276  */
    /* JADX WARNING: Removed duplicated region for block: B:156:0x027b  */
    /* JADX WARNING: Removed duplicated region for block: B:162:0x02cc  */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x02da A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x03b7  */
    /* JADX WARNING: Removed duplicated region for block: B:261:0x04d1 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:290:0x052b  */
    /* JADX WARNING: Removed duplicated region for block: B:291:0x0553  */
    /* JADX WARNING: Removed duplicated region for block: B:294:0x055c  */
    /* JADX WARNING: Removed duplicated region for block: B:296:0x0568  */
    /* JADX WARNING: Removed duplicated region for block: B:297:0x056d  */
    /* JADX WARNING: Removed duplicated region for block: B:300:0x057d  */
    /* JADX WARNING: Removed duplicated region for block: B:301:0x0585  */
    /* JADX WARNING: Removed duplicated region for block: B:304:0x058b A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:308:0x0599  */
    /* JADX WARNING: Removed duplicated region for block: B:311:0x05a7  */
    /* JADX WARNING: Removed duplicated region for block: B:330:0x060c  */
    /* JADX WARNING: Removed duplicated region for block: B:332:0x0612 A[ADDED_TO_REGION] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static boolean prepareSendingDocumentInternal(org.telegram.messenger.AccountInstance r45, java.lang.String r46, java.lang.String r47, android.net.Uri r48, java.lang.String r49, long r50, org.telegram.messenger.MessageObject r52, org.telegram.messenger.MessageObject r53, java.lang.CharSequence r54, java.util.ArrayList<org.telegram.tgnet.TLRPC.MessageEntity> r55, org.telegram.messenger.MessageObject r56, long[] r57, boolean r58, boolean r59, boolean r60, int r61, java.lang.Integer[] r62) {
        /*
            r0 = r46
            r1 = r47
            r2 = r48
            r3 = r49
            r4 = 0
            if (r0 == 0) goto L_0x0011
            int r5 = r46.length()
            if (r5 != 0) goto L_0x0014
        L_0x0011:
            if (r2 != 0) goto L_0x0014
            return r4
        L_0x0014:
            if (r2 == 0) goto L_0x001d
            boolean r5 = org.telegram.messenger.AndroidUtilities.isInternalUri((android.net.Uri) r48)
            if (r5 == 0) goto L_0x001d
            return r4
        L_0x001d:
            if (r0 == 0) goto L_0x002f
            java.io.File r5 = new java.io.File
            r5.<init>(r0)
            android.net.Uri r5 = android.net.Uri.fromFile(r5)
            boolean r5 = org.telegram.messenger.AndroidUtilities.isInternalUri((android.net.Uri) r5)
            if (r5 == 0) goto L_0x002f
            return r4
        L_0x002f:
            android.webkit.MimeTypeMap r14 = android.webkit.MimeTypeMap.getSingleton()
            r5 = 0
            r6 = 0
            if (r2 == 0) goto L_0x0058
            if (r0 != 0) goto L_0x0058
            r7 = 0
            if (r3 == 0) goto L_0x0040
            java.lang.String r6 = r14.getExtensionFromMimeType(r3)
        L_0x0040:
            if (r6 != 0) goto L_0x0045
            java.lang.String r6 = "txt"
            goto L_0x0046
        L_0x0045:
            r7 = 1
        L_0x0046:
            java.lang.String r0 = org.telegram.messenger.MediaController.copyFileToCache(r2, r6)
            if (r0 != 0) goto L_0x004d
            return r4
        L_0x004d:
            if (r7 != 0) goto L_0x0054
            r6 = 0
            r19 = r6
            r6 = r0
            goto L_0x005b
        L_0x0054:
            r19 = r6
            r6 = r0
            goto L_0x005b
        L_0x0058:
            r19 = r6
            r6 = r0
        L_0x005b:
            java.io.File r0 = new java.io.File
            r0.<init>(r6)
            r20 = r0
            boolean r0 = r20.exists()
            if (r0 == 0) goto L_0x06a9
            long r7 = r20.length()
            r12 = 0
            int r0 = (r7 > r12 ? 1 : (r7 == r12 ? 0 : -1))
            if (r0 != 0) goto L_0x007a
            r29 = r5
            r25 = r6
            r34 = r14
            goto L_0x06af
        L_0x007a:
            boolean r7 = org.telegram.messenger.DialogObject.isEncryptedDialog(r50)
            java.lang.String r15 = r20.getName()
            java.lang.String r0 = ""
            r11 = -1
            if (r19 == 0) goto L_0x008c
            r0 = r19
            r21 = r0
            goto L_0x009f
        L_0x008c:
            r8 = 46
            int r8 = r6.lastIndexOf(r8)
            if (r8 == r11) goto L_0x009d
            int r9 = r8 + 1
            java.lang.String r0 = r6.substring(r9)
            r21 = r0
            goto L_0x009f
        L_0x009d:
            r21 = r0
        L_0x009f:
            java.lang.String r10 = r21.toLowerCase()
            r8 = 0
            r9 = 0
            r16 = 0
            r17 = 0
            java.lang.String r11 = "mp3"
            boolean r0 = r10.equals(r11)
            r18 = r11
            java.lang.String r11 = "flac"
            java.lang.String r4 = "opus"
            java.lang.String r12 = "m4a"
            java.lang.String r13 = "ogg"
            if (r0 != 0) goto L_0x020c
            boolean r0 = r10.equals(r12)
            if (r0 == 0) goto L_0x00c9
            r29 = r5
            r27 = r8
            r28 = r9
            goto L_0x0212
        L_0x00c9:
            boolean r0 = r10.equals(r4)
            if (r0 != 0) goto L_0x00e8
            boolean r0 = r10.equals(r13)
            if (r0 != 0) goto L_0x00e8
            boolean r0 = r10.equals(r11)
            if (r0 == 0) goto L_0x00dc
            goto L_0x00e8
        L_0x00dc:
            r29 = r5
            r2 = r8
            r3 = r9
            r26 = r16
            r5 = r17
            r23 = 0
            goto L_0x0244
        L_0x00e8:
            r26 = 0
            android.media.MediaMetadataRetriever r0 = new android.media.MediaMetadataRetriever     // Catch:{ Exception -> 0x01da, all -> 0x01d1 }
            r0.<init>()     // Catch:{ Exception -> 0x01da, all -> 0x01d1 }
            r26 = r0
            java.lang.String r0 = r20.getAbsolutePath()     // Catch:{ Exception -> 0x01c7, all -> 0x01bc }
            r2 = r26
            r2.setDataSource(r0)     // Catch:{ Exception -> 0x01b2, all -> 0x01a7 }
            r0 = 9
            java.lang.String r0 = r2.extractMetadata(r0)     // Catch:{ Exception -> 0x01b2, all -> 0x01a7 }
            if (r0 == 0) goto L_0x016d
            r27 = r8
            r28 = r9
            long r8 = java.lang.Long.parseLong(r0)     // Catch:{ Exception -> 0x0162, all -> 0x0156 }
            float r8 = (float) r8     // Catch:{ Exception -> 0x0162, all -> 0x0156 }
            r9 = 1148846080(0x447a0000, float:1000.0)
            float r8 = r8 / r9
            double r8 = (double) r8     // Catch:{ Exception -> 0x0162, all -> 0x0156 }
            double r8 = java.lang.Math.ceil(r8)     // Catch:{ Exception -> 0x0162, all -> 0x0156 }
            int r8 = (int) r8
            r9 = 7
            java.lang.String r9 = r2.extractMetadata(r9)     // Catch:{ Exception -> 0x0149, all -> 0x013b }
            r3 = 2
            java.lang.String r17 = r2.extractMetadata(r3)     // Catch:{ Exception -> 0x0130, all -> 0x0124 }
            r3 = r17
            r17 = r8
            r8 = r3
            goto L_0x0171
        L_0x0124:
            r0 = move-exception
            r26 = r2
            r29 = r5
            r17 = r8
            r8 = r27
            r2 = r0
            goto L_0x01fd
        L_0x0130:
            r0 = move-exception
            r26 = r2
            r29 = r5
            r17 = r8
            r8 = r27
            goto L_0x01e1
        L_0x013b:
            r0 = move-exception
            r26 = r2
            r29 = r5
            r17 = r8
            r8 = r27
            r9 = r28
            r2 = r0
            goto L_0x01fd
        L_0x0149:
            r0 = move-exception
            r26 = r2
            r29 = r5
            r17 = r8
            r8 = r27
            r9 = r28
            goto L_0x01e1
        L_0x0156:
            r0 = move-exception
            r26 = r2
            r29 = r5
            r8 = r27
            r9 = r28
            r2 = r0
            goto L_0x01fd
        L_0x0162:
            r0 = move-exception
            r26 = r2
            r29 = r5
            r8 = r27
            r9 = r28
            goto L_0x01e1
        L_0x016d:
            r27 = r8
            r28 = r9
        L_0x0171:
            if (r56 != 0) goto L_0x0198
            boolean r3 = r10.equals(r13)     // Catch:{ Exception -> 0x0192, all -> 0x018a }
            if (r3 == 0) goto L_0x0198
            java.lang.String r3 = r20.getAbsolutePath()     // Catch:{ Exception -> 0x0192, all -> 0x018a }
            int r3 = org.telegram.messenger.MediaController.isOpusFile(r3)     // Catch:{ Exception -> 0x0192, all -> 0x018a }
            r29 = r5
            r5 = 1
            if (r3 != r5) goto L_0x019a
            r3 = 1
            r16 = r3
            goto L_0x019a
        L_0x018a:
            r0 = move-exception
            r29 = r5
            r26 = r2
            r2 = r0
            goto L_0x01fd
        L_0x0192:
            r0 = move-exception
            r29 = r5
            r26 = r2
            goto L_0x01e1
        L_0x0198:
            r29 = r5
        L_0x019a:
            r2.release()     // Catch:{ Exception -> 0x01a0 }
            goto L_0x01f2
        L_0x01a0:
            r0 = move-exception
            r3 = r0
            r0 = r3
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x01f2
        L_0x01a7:
            r0 = move-exception
            r29 = r5
            r27 = r8
            r28 = r9
            r26 = r2
            r2 = r0
            goto L_0x01fd
        L_0x01b2:
            r0 = move-exception
            r29 = r5
            r27 = r8
            r28 = r9
            r26 = r2
            goto L_0x01e1
        L_0x01bc:
            r0 = move-exception
            r29 = r5
            r27 = r8
            r28 = r9
            r2 = r26
            r2 = r0
            goto L_0x01fd
        L_0x01c7:
            r0 = move-exception
            r29 = r5
            r27 = r8
            r28 = r9
            r2 = r26
            goto L_0x01e1
        L_0x01d1:
            r0 = move-exception
            r29 = r5
            r27 = r8
            r28 = r9
            r2 = r0
            goto L_0x01fd
        L_0x01da:
            r0 = move-exception
            r29 = r5
            r27 = r8
            r28 = r9
        L_0x01e1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01fb }
            if (r26 == 0) goto L_0x01f1
            r26.release()     // Catch:{ Exception -> 0x01ea }
            goto L_0x01f1
        L_0x01ea:
            r0 = move-exception
            r2 = r0
            r0 = r2
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x01f2
        L_0x01f1:
        L_0x01f2:
            r2 = r8
            r3 = r9
            r26 = r16
            r5 = r17
            r23 = 0
            goto L_0x0244
        L_0x01fb:
            r0 = move-exception
            r2 = r0
        L_0x01fd:
            if (r26 == 0) goto L_0x020a
            r26.release()     // Catch:{ Exception -> 0x0203 }
            goto L_0x020a
        L_0x0203:
            r0 = move-exception
            r3 = r0
            r0 = r3
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x020b
        L_0x020a:
        L_0x020b:
            throw r2
        L_0x020c:
            r29 = r5
            r27 = r8
            r28 = r9
        L_0x0212:
            org.telegram.messenger.audioinfo.AudioInfo r0 = org.telegram.messenger.audioinfo.AudioInfo.getAudioInfo(r20)
            if (r0 == 0) goto L_0x0238
            long r2 = r0.getDuration()
            r23 = 0
            int r5 = (r2 > r23 ? 1 : (r2 == r23 ? 0 : -1))
            if (r5 == 0) goto L_0x023a
            java.lang.String r8 = r0.getArtist()
            java.lang.String r9 = r0.getTitle()
            r27 = 1000(0x3e8, double:4.94E-321)
            r5 = r8
            r26 = r9
            long r8 = r2 / r27
            int r9 = (int) r8
            r8 = r5
            r17 = r9
            r9 = r26
            goto L_0x023e
        L_0x0238:
            r23 = 0
        L_0x023a:
            r8 = r27
            r9 = r28
        L_0x023e:
            r2 = r8
            r3 = r9
            r26 = r16
            r5 = r17
        L_0x0244:
            java.lang.String r9 = ""
            if (r5 == 0) goto L_0x0276
            org.telegram.tgnet.TLRPC$TL_documentAttributeAudio r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAudio
            r0.<init>()
            r0.duration = r5
            r0.title = r3
            r0.performer = r2
            java.lang.String r8 = r0.title
            if (r8 != 0) goto L_0x0259
            r0.title = r9
        L_0x0259:
            int r8 = r0.flags
            r16 = 1
            r8 = r8 | 1
            r0.flags = r8
            java.lang.String r8 = r0.performer
            if (r8 != 0) goto L_0x0267
            r0.performer = r9
        L_0x0267:
            int r8 = r0.flags
            r16 = 2
            r8 = r8 | 2
            r0.flags = r8
            if (r26 == 0) goto L_0x0274
            r8 = 1
            r0.voice = r8
        L_0x0274:
            r8 = r0
            goto L_0x0278
        L_0x0276:
            r8 = r29
        L_0x0278:
            r0 = 0
            if (r1 == 0) goto L_0x02cc
            r16 = r0
            java.lang.String r0 = "attheme"
            boolean r0 = r1.endsWith(r0)
            if (r0 == 0) goto L_0x028c
            r0 = 1
            r27 = r2
            r28 = r3
            r2 = r0
            goto L_0x02d4
        L_0x028c:
            if (r8 == 0) goto L_0x02ae
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r1)
            r27 = r2
            java.lang.String r2 = "audio"
            r0.append(r2)
            r28 = r3
            long r2 = r20.length()
            r0.append(r2)
            java.lang.String r0 = r0.toString()
            r1 = r0
            r2 = r16
            goto L_0x02d4
        L_0x02ae:
            r27 = r2
            r28 = r3
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r1)
            r0.append(r9)
            long r2 = r20.length()
            r0.append(r2)
            java.lang.String r0 = r0.toString()
            r1 = r0
            r2 = r16
            goto L_0x02d4
        L_0x02cc:
            r16 = r0
            r27 = r2
            r28 = r3
            r2 = r16
        L_0x02d4:
            r0 = 0
            r3 = 0
            r16 = 4
            if (r2 != 0) goto L_0x0390
            if (r7 != 0) goto L_0x0390
            r47 = r0
            org.telegram.messenger.MessagesStorage r0 = r45.getMessagesStorage()
            r29 = r2
            if (r7 != 0) goto L_0x02e8
            r2 = 1
            goto L_0x02e9
        L_0x02e8:
            r2 = 4
        L_0x02e9:
            java.lang.Object[] r0 = r0.getSentFile(r1, r2)
            if (r0 == 0) goto L_0x0305
            r17 = r3
            r2 = 0
            r3 = r0[r2]
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r3 == 0) goto L_0x0307
            r3 = r0[r2]
            r2 = r3
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2
            r3 = 1
            r30 = r0[r3]
            r3 = r30
            java.lang.String r3 = (java.lang.String) r3
            goto L_0x030b
        L_0x0305:
            r17 = r3
        L_0x0307:
            r2 = r47
            r3 = r17
        L_0x030b:
            if (r2 != 0) goto L_0x035a
            boolean r17 = r6.equals(r1)
            if (r17 != 0) goto L_0x035a
            if (r7 != 0) goto L_0x035a
            r30 = r0
            org.telegram.messenger.MessagesStorage r0 = r45.getMessagesStorage()
            r47 = r2
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r6)
            r32 = r8
            r31 = r9
            long r8 = r20.length()
            r2.append(r8)
            java.lang.String r2 = r2.toString()
            if (r7 != 0) goto L_0x0338
            r8 = 1
            goto L_0x0339
        L_0x0338:
            r8 = 4
        L_0x0339:
            java.lang.Object[] r0 = r0.getSentFile(r2, r8)
            if (r0 == 0) goto L_0x0355
            r2 = 0
            r8 = r0[r2]
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r8 == 0) goto L_0x0355
            r8 = r0[r2]
            r2 = r8
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2
            r8 = 1
            r9 = r0[r8]
            r3 = r9
            java.lang.String r3 = (java.lang.String) r3
            r30 = r0
            r0 = r2
            goto L_0x0364
        L_0x0355:
            r30 = r0
            r0 = r47
            goto L_0x0364
        L_0x035a:
            r30 = r0
            r47 = r2
            r32 = r8
            r31 = r9
            r0 = r47
        L_0x0364:
            r2 = 0
            r33 = 0
            r9 = r32
            r8 = r7
            r35 = r9
            r36 = r31
            r9 = r0
            r31 = r10
            r10 = r6
            r46 = r3
            r32 = r5
            r3 = r11
            r5 = r18
            r18 = -1
            r11 = r2
            r37 = r7
            r2 = r12
            r43 = r23
            r23 = r1
            r24 = r6
            r1 = r13
            r6 = r43
            r12 = r33
            ensureMediaThumbExists(r8, r9, r10, r11, r12)
            r30 = r46
            goto L_0x03b3
        L_0x0390:
            r47 = r0
            r29 = r2
            r17 = r3
            r32 = r5
            r37 = r7
            r35 = r8
            r36 = r9
            r31 = r10
            r3 = r11
            r2 = r12
            r5 = r18
            r18 = -1
            r43 = r23
            r23 = r1
            r24 = r6
            r1 = r13
            r6 = r43
            r0 = r47
            r30 = r17
        L_0x03b3:
            java.lang.String r9 = "image/webp"
            if (r0 != 0) goto L_0x055c
            org.telegram.tgnet.TLRPC$TL_document r8 = new org.telegram.tgnet.TLRPC$TL_document
            r8.<init>()
            r8.id = r6
            org.telegram.tgnet.ConnectionsManager r0 = r45.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r8.date = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeFilename r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeFilename
            r0.<init>()
            r10 = r0
            r10.file_name = r15
            r11 = 0
            byte[] r0 = new byte[r11]
            r8.file_reference = r0
            java.util.ArrayList r0 = r8.attributes
            r0.add(r10)
            long r12 = r20.length()
            int r0 = (int) r12
            r8.size = r0
            r8.dc_id = r11
            r13 = r35
            if (r13 == 0) goto L_0x03ec
            java.util.ArrayList r0 = r8.attributes
            r0.add(r13)
        L_0x03ec:
            int r0 = r21.length()
            java.lang.String r11 = "application/octet-stream"
            if (r0 == 0) goto L_0x0468
            int r0 = r31.hashCode()
            switch(r0) {
                case 106458: goto L_0x0432;
                case 108272: goto L_0x0428;
                case 109967: goto L_0x041e;
                case 3145576: goto L_0x0414;
                case 3418175: goto L_0x040a;
                case 3645340: goto L_0x03fe;
                default: goto L_0x03fb;
            }
        L_0x03fb:
            r12 = r31
            goto L_0x043c
        L_0x03fe:
            java.lang.String r0 = "webp"
            r12 = r31
            boolean r0 = r12.equals(r0)
            if (r0 == 0) goto L_0x043c
            r0 = 0
            goto L_0x043d
        L_0x040a:
            r12 = r31
            boolean r0 = r12.equals(r4)
            if (r0 == 0) goto L_0x043c
            r0 = 1
            goto L_0x043d
        L_0x0414:
            r12 = r31
            boolean r0 = r12.equals(r3)
            if (r0 == 0) goto L_0x043c
            r0 = 5
            goto L_0x043d
        L_0x041e:
            r12 = r31
            boolean r0 = r12.equals(r1)
            if (r0 == 0) goto L_0x043c
            r0 = 4
            goto L_0x043d
        L_0x0428:
            r12 = r31
            boolean r0 = r12.equals(r5)
            if (r0 == 0) goto L_0x043c
            r0 = 2
            goto L_0x043d
        L_0x0432:
            r12 = r31
            boolean r0 = r12.equals(r2)
            if (r0 == 0) goto L_0x043c
            r0 = 3
            goto L_0x043d
        L_0x043c:
            r0 = -1
        L_0x043d:
            switch(r0) {
                case 0: goto L_0x0462;
                case 1: goto L_0x045d;
                case 2: goto L_0x0458;
                case 3: goto L_0x0453;
                case 4: goto L_0x044e;
                case 5: goto L_0x0449;
                default: goto L_0x0440;
            }
        L_0x0440:
            java.lang.String r0 = r14.getMimeTypeFromExtension(r12)
            if (r0 == 0) goto L_0x0465
            r8.mime_type = r0
            goto L_0x0467
        L_0x0449:
            java.lang.String r0 = "audio/flac"
            r8.mime_type = r0
            goto L_0x0467
        L_0x044e:
            java.lang.String r0 = "audio/ogg"
            r8.mime_type = r0
            goto L_0x0467
        L_0x0453:
            java.lang.String r0 = "audio/m4a"
            r8.mime_type = r0
            goto L_0x0467
        L_0x0458:
            java.lang.String r0 = "audio/mpeg"
            r8.mime_type = r0
            goto L_0x0467
        L_0x045d:
            java.lang.String r0 = "audio/opus"
            r8.mime_type = r0
            goto L_0x0467
        L_0x0462:
            r8.mime_type = r9
            goto L_0x0467
        L_0x0465:
            r8.mime_type = r11
        L_0x0467:
            goto L_0x046c
        L_0x0468:
            r12 = r31
            r8.mime_type = r11
        L_0x046c:
            r1 = 0
            if (r59 != 0) goto L_0x04c7
            java.lang.String r0 = r8.mime_type
            java.lang.String r2 = "image/gif"
            boolean r0 = r0.equals(r2)
            if (r0 == 0) goto L_0x04c7
            if (r56 == 0) goto L_0x0487
            long r2 = r56.getGroupIdForUse()
            int r0 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1))
            if (r0 != 0) goto L_0x0484
            goto L_0x0487
        L_0x0484:
            r4 = r37
            goto L_0x04c9
        L_0x0487:
            java.lang.String r0 = r20.getAbsolutePath()     // Catch:{ Exception -> 0x04c0 }
            r2 = 1119092736(0x42b40000, float:90.0)
            r3 = 1
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r1, r2, r2, r3)     // Catch:{ Exception -> 0x04c0 }
            if (r0 == 0) goto L_0x04bd
            java.lang.String r3 = "animation.gif"
            r10.file_name = r3     // Catch:{ Exception -> 0x04c0 }
            java.util.ArrayList r3 = r8.attributes     // Catch:{ Exception -> 0x04c0 }
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r4 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated     // Catch:{ Exception -> 0x04c0 }
            r4.<init>()     // Catch:{ Exception -> 0x04c0 }
            r3.add(r4)     // Catch:{ Exception -> 0x04c0 }
            r3 = 55
            r4 = r37
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r0, r2, r2, r3, r4)     // Catch:{ Exception -> 0x04bb }
            if (r2 == 0) goto L_0x04b7
            java.util.ArrayList r3 = r8.thumbs     // Catch:{ Exception -> 0x04bb }
            r3.add(r2)     // Catch:{ Exception -> 0x04bb }
            int r3 = r8.flags     // Catch:{ Exception -> 0x04bb }
            r5 = 1
            r3 = r3 | r5
            r8.flags = r3     // Catch:{ Exception -> 0x04bb }
        L_0x04b7:
            r0.recycle()     // Catch:{ Exception -> 0x04bb }
            goto L_0x04bf
        L_0x04bb:
            r0 = move-exception
            goto L_0x04c3
        L_0x04bd:
            r4 = r37
        L_0x04bf:
            goto L_0x04c9
        L_0x04c0:
            r0 = move-exception
            r4 = r37
        L_0x04c3:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x04c9
        L_0x04c7:
            r4 = r37
        L_0x04c9:
            java.lang.String r0 = r8.mime_type
            boolean r0 = r0.equals(r9)
            if (r0 == 0) goto L_0x0556
            if (r56 != 0) goto L_0x0556
            android.graphics.BitmapFactory$Options r0 = new android.graphics.BitmapFactory$Options
            r0.<init>()
            r2 = r0
            r3 = 1
            r2.inJustDecodeBounds = r3     // Catch:{ Exception -> 0x0512 }
            java.io.RandomAccessFile r0 = new java.io.RandomAccessFile     // Catch:{ Exception -> 0x0512 }
            java.lang.String r3 = "r"
            r6 = r24
            r0.<init>(r6, r3)     // Catch:{ Exception -> 0x050f }
            java.nio.channels.FileChannel r37 = r0.getChannel()     // Catch:{ Exception -> 0x050f }
            java.nio.channels.FileChannel$MapMode r38 = java.nio.channels.FileChannel.MapMode.READ_ONLY     // Catch:{ Exception -> 0x050f }
            r39 = 0
            int r3 = r6.length()     // Catch:{ Exception -> 0x050f }
            r47 = r2
            long r1 = (long) r3
            r41 = r1
            java.nio.MappedByteBuffer r1 = r37.map(r38, r39, r41)     // Catch:{ Exception -> 0x050b }
            int r2 = r1.limit()     // Catch:{ Exception -> 0x050b }
            r3 = r47
            r5 = 0
            r7 = 1
            org.telegram.messenger.Utilities.loadWebpImage(r5, r1, r2, r3, r7)     // Catch:{ Exception -> 0x0509 }
            r0.close()     // Catch:{ Exception -> 0x0509 }
            goto L_0x0519
        L_0x0509:
            r0 = move-exception
            goto L_0x0516
        L_0x050b:
            r0 = move-exception
            r3 = r47
            goto L_0x0516
        L_0x050f:
            r0 = move-exception
            r3 = r2
            goto L_0x0516
        L_0x0512:
            r0 = move-exception
            r3 = r2
            r6 = r24
        L_0x0516:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0519:
            int r0 = r3.outWidth
            if (r0 == 0) goto L_0x0553
            int r0 = r3.outHeight
            if (r0 == 0) goto L_0x0553
            int r0 = r3.outWidth
            r1 = 800(0x320, float:1.121E-42)
            if (r0 > r1) goto L_0x0553
            int r0 = r3.outHeight
            if (r0 > r1) goto L_0x0553
            org.telegram.tgnet.TLRPC$TL_documentAttributeSticker r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeSticker
            r0.<init>()
            r1 = r36
            r0.alt = r1
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r2 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty
            r2.<init>()
            r0.stickerset = r2
            java.util.ArrayList r2 = r8.attributes
            r2.add(r0)
            org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize r2 = new org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize
            r2.<init>()
            int r5 = r3.outWidth
            r2.w = r5
            int r5 = r3.outHeight
            r2.h = r5
            java.util.ArrayList r5 = r8.attributes
            r5.add(r2)
            goto L_0x055a
        L_0x0553:
            r1 = r36
            goto L_0x055a
        L_0x0556:
            r6 = r24
            r1 = r36
        L_0x055a:
            r0 = r8
            goto L_0x0566
        L_0x055c:
            r6 = r24
            r12 = r31
            r13 = r35
            r1 = r36
            r4 = r37
        L_0x0566:
            if (r54 == 0) goto L_0x056d
            java.lang.String r2 = r54.toString()
            goto L_0x056e
        L_0x056d:
            r2 = r1
        L_0x056e:
            r3 = r15
            r15 = r2
            r2 = r4
            r7 = r0
            r8 = r6
            r11 = r30
            java.util.HashMap r4 = new java.util.HashMap
            r4.<init>()
            r10 = r4
            if (r23 == 0) goto L_0x0585
            java.lang.String r4 = "originalPath"
            r5 = r23
            r10.put(r4, r5)
            goto L_0x0587
        L_0x0585:
            r5 = r23
        L_0x0587:
            java.lang.String r4 = "1"
            if (r59 == 0) goto L_0x0595
            if (r13 != 0) goto L_0x0595
            r46 = r3
            java.lang.String r3 = "forceDocument"
            r10.put(r3, r4)
            goto L_0x0597
        L_0x0595:
            r46 = r3
        L_0x0597:
            if (r11 == 0) goto L_0x059e
            java.lang.String r3 = "parentObject"
            r10.put(r3, r11)
        L_0x059e:
            r3 = 0
            java.lang.Integer r16 = java.lang.Integer.valueOf(r3)
            r17 = 0
            if (r62 == 0) goto L_0x060c
            r16 = r62[r3]
            java.lang.String r3 = r0.mime_type
            if (r3 == 0) goto L_0x05c7
            java.lang.String r3 = r0.mime_type
            java.lang.String r3 = r3.toLowerCase()
            boolean r3 = r3.startsWith(r9)
            if (r3 == 0) goto L_0x05c7
            java.lang.Integer r3 = java.lang.Integer.valueOf(r18)
            r9 = 0
            r62[r9] = r3
            r17 = 1
            r3 = r16
            r23 = r17
            goto L_0x0610
        L_0x05c7:
            java.lang.String r3 = r0.mime_type
            if (r3 == 0) goto L_0x05e7
            java.lang.String r3 = r0.mime_type
            java.lang.String r3 = r3.toLowerCase()
            java.lang.String r9 = "image/"
            boolean r3 = r3.startsWith(r9)
            if (r3 != 0) goto L_0x05ed
            java.lang.String r3 = r0.mime_type
            java.lang.String r3 = r3.toLowerCase()
            java.lang.String r9 = "video/mp4"
            boolean r3 = r3.startsWith(r9)
            if (r3 != 0) goto L_0x05ed
        L_0x05e7:
            boolean r3 = org.telegram.messenger.MessageObject.canPreviewDocument(r0)
            if (r3 == 0) goto L_0x05f6
        L_0x05ed:
            r3 = 1
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)
            r3 = 0
            r62[r3] = r9
            goto L_0x0607
        L_0x05f6:
            r3 = 0
            if (r13 == 0) goto L_0x0601
            r9 = 2
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r62[r3] = r9
            goto L_0x0607
        L_0x0601:
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)
            r62[r3] = r9
        L_0x0607:
            r3 = r16
            r23 = r17
            goto L_0x0610
        L_0x060c:
            r3 = r16
            r23 = r17
        L_0x0610:
            if (r2 != 0) goto L_0x0671
            if (r57 == 0) goto L_0x0671
            if (r62 == 0) goto L_0x0642
            if (r3 == 0) goto L_0x0642
            r47 = r0
            r9 = 0
            r0 = r62[r9]
            if (r3 == r0) goto L_0x0638
            r37 = r2
            r0 = r3
            r2 = r57[r9]
            r9 = r45
            r24 = r7
            r7 = r61
            finishGroup(r9, r2, r7)
            java.security.SecureRandom r2 = org.telegram.messenger.Utilities.random
            long r2 = r2.nextLong()
            r16 = 0
            r57[r16] = r2
            goto L_0x064d
        L_0x0638:
            r9 = r45
            r37 = r2
            r0 = r3
            r24 = r7
            r7 = r61
            goto L_0x064d
        L_0x0642:
            r9 = r45
            r47 = r0
            r37 = r2
            r0 = r3
            r24 = r7
            r7 = r61
        L_0x064d:
            if (r23 != 0) goto L_0x066f
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r1)
            r3 = r0
            r1 = 0
            r0 = r57[r1]
            r2.append(r0)
            java.lang.String r0 = r2.toString()
            java.lang.String r1 = "groupId"
            r10.put(r1, r0)
            if (r58 == 0) goto L_0x067b
            java.lang.String r0 = "final"
            r10.put(r0, r4)
            goto L_0x067b
        L_0x066f:
            r3 = r0
            goto L_0x067b
        L_0x0671:
            r9 = r45
            r47 = r0
            r37 = r2
            r24 = r7
            r7 = r61
        L_0x067b:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3 r0 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda3
            r4 = r0
            r2 = r5
            r1 = r32
            r5 = r56
            r25 = r6
            r6 = r45
            r9 = r10
            r22 = r10
            r10 = r11
            r32 = r11
            r31 = r12
            r11 = r50
            r33 = r13
            r13 = r52
            r34 = r14
            r14 = r53
            r16 = r55
            r17 = r60
            r18 = r61
            r7 = r24
            r4.<init>(r5, r6, r7, r8, r9, r10, r11, r13, r14, r15, r16, r17, r18)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            r4 = 1
            return r4
        L_0x06a9:
            r29 = r5
            r25 = r6
            r34 = r14
        L_0x06af:
            r2 = 0
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.prepareSendingDocumentInternal(org.telegram.messenger.AccountInstance, java.lang.String, java.lang.String, android.net.Uri, java.lang.String, long, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, java.lang.CharSequence, java.util.ArrayList, org.telegram.messenger.MessageObject, long[], boolean, boolean, boolean, int, java.lang.Integer[]):boolean");
    }

    static /* synthetic */ void lambda$prepareSendingDocumentInternal$73(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_document documentFinal, String pathFinal, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, String captionFinal, ArrayList entities, boolean notify, int scheduleDate) {
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, documentFinal, pathFinal, params, false, parentFinal);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(documentFinal, (VideoEditedInfo) null, pathFinal, dialogId, replyToMsg, replyToTopMsg, captionFinal, entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentFinal, (MessageObject.SendAnimationData) null);
        }
    }

    public static void prepareSendingDocument(AccountInstance accountInstance, String path, String originalPath, Uri uri, String caption, String mine, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, InputContentInfoCompat inputContent, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        ArrayList<Uri> uris;
        String str = path;
        String str2 = originalPath;
        Uri uri2 = uri;
        if ((str != null && str2 != null) || uri2 != null) {
            ArrayList<String> paths = new ArrayList<>();
            ArrayList<String> originalPaths = new ArrayList<>();
            if (uri2 != null) {
                ArrayList<Uri> uris2 = new ArrayList<>();
                uris2.add(uri2);
                uris = uris2;
            } else {
                uris = null;
            }
            if (str != null) {
                paths.add(str);
                originalPaths.add(str2);
            }
            ArrayList<String> arrayList = originalPaths;
            prepareSendingDocuments(accountInstance, paths, originalPaths, uris, caption, mine, dialogId, replyToMsg, replyToTopMsg, inputContent, editingMessageObject, notify, scheduleDate);
        }
    }

    public static void prepareSendingAudioDocuments(AccountInstance accountInstance, ArrayList<MessageObject> messageObjects, String caption, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        new Thread(new SendMessagesHelper$$ExternalSyntheticLambda91(messageObjects, dialogId, accountInstance, caption, editingMessageObject, replyToMsg, replyToTopMsg, notify, scheduleDate)).start();
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v17, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX WARNING: type inference failed for: r8v10, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0084  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0090  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0094  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x00ad  */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x00b0  */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x00bb  */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x00c2  */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00e7  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00ee A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingAudioDocuments$75(java.util.ArrayList r29, long r30, org.telegram.messenger.AccountInstance r32, java.lang.String r33, org.telegram.messenger.MessageObject r34, org.telegram.messenger.MessageObject r35, org.telegram.messenger.MessageObject r36, boolean r37, int r38) {
        /*
            int r0 = r29.size()
            r1 = 0
            r3 = 0
            r4 = 0
        L_0x0008:
            if (r4 >= r0) goto L_0x0113
            r5 = r29
            java.lang.Object r6 = r5.get(r4)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            org.telegram.tgnet.TLRPC$Message r7 = r6.messageOwner
            java.lang.String r7 = r7.attachPath
            java.io.File r8 = new java.io.File
            r8.<init>(r7)
            r21 = r8
            boolean r22 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)
            r8 = 1
            if (r22 != 0) goto L_0x0031
            if (r0 <= r8) goto L_0x0031
            int r9 = r3 % 10
            if (r9 != 0) goto L_0x0031
            java.security.SecureRandom r9 = org.telegram.messenger.Utilities.random
            long r1 = r9.nextLong()
            r3 = 0
        L_0x0031:
            if (r7 == 0) goto L_0x004d
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            r9.append(r7)
            java.lang.String r10 = "audio"
            r9.append(r10)
            long r10 = r21.length()
            r9.append(r10)
            java.lang.String r7 = r9.toString()
            r14 = r7
            goto L_0x004e
        L_0x004d:
            r14 = r7
        L_0x004e:
            r7 = 0
            r9 = 0
            if (r22 != 0) goto L_0x0080
            org.telegram.messenger.MessagesStorage r10 = r32.getMessagesStorage()
            if (r22 != 0) goto L_0x005a
            r11 = 1
            goto L_0x005b
        L_0x005a:
            r11 = 4
        L_0x005b:
            java.lang.Object[] r15 = r10.getSentFile(r14, r11)
            if (r15 == 0) goto L_0x0080
            r10 = 0
            r11 = r15[r10]
            boolean r11 = r11 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r11 == 0) goto L_0x0080
            r10 = r15[r10]
            r7 = r10
            org.telegram.tgnet.TLRPC$TL_document r7 = (org.telegram.tgnet.TLRPC.TL_document) r7
            r8 = r15[r8]
            r16 = r8
            java.lang.String r16 = (java.lang.String) r16
            r11 = 0
            r12 = 0
            r8 = r22
            r9 = r7
            r10 = r14
            ensureMediaThumbExists(r8, r9, r10, r11, r12)
            r23 = r16
            goto L_0x0082
        L_0x0080:
            r23 = r9
        L_0x0082:
            if (r7 != 0) goto L_0x0090
            org.telegram.tgnet.TLRPC$Message r8 = r6.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r8.media
            org.telegram.tgnet.TLRPC$Document r8 = r8.document
            r7 = r8
            org.telegram.tgnet.TLRPC$TL_document r7 = (org.telegram.tgnet.TLRPC.TL_document) r7
            r24 = r7
            goto L_0x0092
        L_0x0090:
            r24 = r7
        L_0x0092:
            if (r22 == 0) goto L_0x00a7
            int r7 = org.telegram.messenger.DialogObject.getEncryptedChatId(r30)
            org.telegram.messenger.MessagesController r8 = r32.getMessagesController()
            java.lang.Integer r9 = java.lang.Integer.valueOf(r7)
            org.telegram.tgnet.TLRPC$EncryptedChat r8 = r8.getEncryptedChat(r9)
            if (r8 != 0) goto L_0x00a7
            return
        L_0x00a7:
            r10 = r24
            r15 = r23
            if (r4 != 0) goto L_0x00b0
            r18 = r33
            goto L_0x00b3
        L_0x00b0:
            r7 = 0
            r18 = r7
        L_0x00b3:
            java.util.HashMap r7 = new java.util.HashMap
            r7.<init>()
            r13 = r7
            if (r14 == 0) goto L_0x00c0
            java.lang.String r7 = "originalPath"
            r13.put(r7, r14)
        L_0x00c0:
            if (r15 == 0) goto L_0x00c7
            java.lang.String r7 = "parentObject"
            r13.put(r7, r15)
        L_0x00c7:
            int r3 = r3 + 1
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r8 = ""
            r7.append(r8)
            r7.append(r1)
            java.lang.String r7 = r7.toString()
            java.lang.String r8 = "groupId"
            r13.put(r8, r7)
            r7 = 10
            if (r3 == r7) goto L_0x00e7
            int r7 = r0 + -1
            if (r4 != r7) goto L_0x00ee
        L_0x00e7:
            java.lang.String r7 = "final"
            java.lang.String r8 = "1"
            r13.put(r7, r8)
        L_0x00ee:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5 r25 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
            r7 = r25
            r8 = r34
            r9 = r32
            r11 = r6
            r12 = r13
            r26 = r13
            r13 = r15
            r27 = r14
            r28 = r15
            r14 = r30
            r16 = r35
            r17 = r36
            r19 = r37
            r20 = r38
            r7.<init>(r8, r9, r10, r11, r12, r13, r14, r16, r17, r18, r19, r20)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r25)
            int r4 = r4 + 1
            goto L_0x0008
        L_0x0113:
            r5 = r29
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingAudioDocuments$75(java.util.ArrayList, long, org.telegram.messenger.AccountInstance, java.lang.String, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, boolean, int):void");
    }

    static /* synthetic */ void lambda$prepareSendingAudioDocuments$74(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_document documentFinal, MessageObject messageObject, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, String captionFinal, boolean notify, int scheduleDate) {
        MessageObject messageObject2 = messageObject;
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, documentFinal, messageObject2.messageOwner.attachPath, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(documentFinal, (VideoEditedInfo) null, messageObject2.messageOwner.attachPath, dialogId, replyToMsg, replyToTopMsg, captionFinal, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentFinal, (MessageObject.SendAnimationData) null);
    }

    private static void finishGroup(AccountInstance accountInstance, long groupId, int scheduleDate) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda2(accountInstance, groupId, scheduleDate));
    }

    static /* synthetic */ void lambda$finishGroup$76(AccountInstance accountInstance, long groupId, int scheduleDate) {
        SendMessagesHelper instance = accountInstance.getSendMessagesHelper();
        HashMap<String, ArrayList<DelayedMessage>> hashMap = instance.delayedMessages;
        ArrayList<DelayedMessage> arrayList = hashMap.get("group_" + groupId);
        if (arrayList != null && !arrayList.isEmpty()) {
            DelayedMessage message = arrayList.get(0);
            MessageObject prevMessage = message.messageObjects.get(message.messageObjects.size() - 1);
            message.finalGroupMessage = prevMessage.getId();
            prevMessage.messageOwner.params.put("final", "1");
            TLRPC.TL_messages_messages messagesRes = new TLRPC.TL_messages_messages();
            messagesRes.messages.add(prevMessage.messageOwner);
            accountInstance.getMessagesStorage().putMessages((TLRPC.messages_Messages) messagesRes, message.peer, -2, 0, false, scheduleDate != 0);
            instance.sendReadyToSendGroup(message, true, true);
        }
    }

    public static void prepareSendingDocuments(AccountInstance accountInstance, ArrayList<String> paths, ArrayList<String> originalPaths, ArrayList<Uri> uris, String caption, String mime, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, InputContentInfoCompat inputContent, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        if (paths != null || originalPaths != null || uris != null) {
            if (paths == null || originalPaths == null || paths.size() == originalPaths.size()) {
                SendMessagesHelper$$ExternalSyntheticLambda22 sendMessagesHelper$$ExternalSyntheticLambda22 = r0;
                SendMessagesHelper$$ExternalSyntheticLambda22 sendMessagesHelper$$ExternalSyntheticLambda222 = new SendMessagesHelper$$ExternalSyntheticLambda22(dialogId, paths, caption, accountInstance, scheduleDate, originalPaths, mime, replyToMsg, replyToTopMsg, editingMessageObject, inputContent, notify, uris);
                new Thread(sendMessagesHelper$$ExternalSyntheticLambda22).start();
            }
        }
    }

    static /* synthetic */ void lambda$prepareSendingDocuments$78(long dialogId, ArrayList paths, String caption, AccountInstance accountInstance, int scheduleDate, ArrayList originalPaths, String mime, MessageObject replyToMsg, MessageObject replyToTopMsg, MessageObject editingMessageObject, InputContentInfoCompat inputContent, boolean notify, ArrayList uris) {
        long[] groupId;
        Integer[] docType;
        ArrayList arrayList = paths;
        AccountInstance accountInstance2 = accountInstance;
        int i = scheduleDate;
        ArrayList arrayList2 = uris;
        boolean error = false;
        int i2 = 1;
        long[] groupId2 = new long[1];
        int mediaCount = 0;
        Integer[] docType2 = new Integer[1];
        boolean isEncrypted = DialogObject.isEncryptedDialog(dialogId);
        int i3 = 10;
        if (arrayList != null) {
            int count = paths.size();
            boolean error2 = false;
            int a = 0;
            while (a < count) {
                String captionFinal = a == 0 ? caption : null;
                if (!isEncrypted && count > i2 && mediaCount % 10 == 0) {
                    if (groupId2[0] != 0) {
                        finishGroup(accountInstance2, groupId2[0], i);
                    }
                    groupId2[0] = Utilities.random.nextLong();
                    mediaCount = 0;
                }
                int mediaCount2 = mediaCount + 1;
                long prevGroupId = groupId2[0];
                int mediaCount3 = mediaCount2;
                int count2 = count;
                int a2 = a;
                Integer[] docType3 = docType2;
                long[] groupId3 = groupId2;
                if (!prepareSendingDocumentInternal(accountInstance, (String) arrayList.get(a), (String) originalPaths.get(a), (Uri) null, mime, dialogId, replyToMsg, replyToTopMsg, captionFinal, (ArrayList<TLRPC.MessageEntity>) null, editingMessageObject, groupId3, mediaCount2 == i3 || a == count + -1, inputContent == null, notify, scheduleDate, docType3)) {
                    error2 = true;
                }
                if (prevGroupId != groupId3[0] || groupId3[0] == -1) {
                    mediaCount = 1;
                } else {
                    mediaCount = mediaCount3;
                }
                a = a2 + 1;
                accountInstance2 = accountInstance;
                i = scheduleDate;
                ArrayList arrayList3 = uris;
                count = count2;
                docType2 = docType3;
                groupId2 = groupId3;
                i3 = 10;
                i2 = 1;
            }
            int i4 = a;
            docType = docType2;
            groupId = groupId2;
            error = error2;
        } else {
            docType = docType2;
            groupId = groupId2;
        }
        ArrayList arrayList4 = uris;
        if (arrayList4 != null) {
            groupId[0] = 0;
            int mediaCount4 = 0;
            int count3 = uris.size();
            boolean error3 = error;
            int a3 = 0;
            while (a3 < uris.size()) {
                String captionFinal2 = (a3 == 0 && (arrayList == null || paths.size() == 0)) ? caption : null;
                if (isEncrypted) {
                    AccountInstance accountInstance3 = accountInstance;
                    int i5 = scheduleDate;
                } else if (count3 <= 1 || mediaCount4 % 10 != 0) {
                    AccountInstance accountInstance4 = accountInstance;
                    int i6 = scheduleDate;
                } else {
                    if (groupId[0] != 0) {
                        finishGroup(accountInstance, groupId[0], scheduleDate);
                    } else {
                        AccountInstance accountInstance5 = accountInstance;
                        int i7 = scheduleDate;
                    }
                    groupId[0] = Utilities.random.nextLong();
                    mediaCount4 = 0;
                }
                int mediaCount5 = mediaCount4 + 1;
                long prevGroupId2 = groupId[0];
                int mediaCount6 = mediaCount5;
                int a4 = a3;
                int count4 = count3;
                if (!prepareSendingDocumentInternal(accountInstance, (String) null, (String) null, (Uri) arrayList4.get(a3), mime, dialogId, replyToMsg, replyToTopMsg, captionFinal2, (ArrayList<TLRPC.MessageEntity>) null, editingMessageObject, groupId, mediaCount5 == 10 || a3 == count3 + -1, inputContent == null, notify, scheduleDate, docType)) {
                    error3 = true;
                }
                if (prevGroupId2 != groupId[0] || groupId[0] == -1) {
                    mediaCount4 = 1;
                } else {
                    mediaCount4 = mediaCount6;
                }
                a3 = a4 + 1;
                arrayList4 = uris;
                count3 = count4;
            }
            int i8 = a3;
            int i9 = count3;
            error = error3;
        }
        if (inputContent != null) {
            inputContent.releasePermission();
        }
        if (error) {
            AndroidUtilities.runOnUIThread(SendMessagesHelper$$ExternalSyntheticLambda72.INSTANCE);
        }
    }

    static /* synthetic */ void lambda$prepareSendingDocuments$77() {
        try {
            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.showBulletin, 1, LocaleController.getString("UnsupportedAttachment", NUM));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String imageFilePath, Uri imageUri, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, ArrayList<TLRPC.InputDocument> stickers, InputContentInfoCompat inputContent, int ttl, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        prepareSendingPhoto(accountInstance, imageFilePath, (String) null, imageUri, dialogId, replyToMsg, replyToTopMsg, caption, entities, stickers, inputContent, ttl, editingMessageObject, (VideoEditedInfo) null, notify, scheduleDate, false);
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String imageFilePath, String thumbFilePath, Uri imageUri, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, ArrayList<TLRPC.InputDocument> stickers, InputContentInfoCompat inputContent, int ttl, MessageObject editingMessageObject, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate, boolean forceDocument) {
        ArrayList<TLRPC.InputDocument> arrayList = stickers;
        SendingMediaInfo info = new SendingMediaInfo();
        info.path = imageFilePath;
        info.thumbPath = thumbFilePath;
        info.uri = imageUri;
        if (caption != null) {
            info.caption = caption.toString();
        }
        info.entities = entities;
        info.ttl = ttl;
        if (arrayList != null) {
            info.masks = new ArrayList<>(arrayList);
        }
        info.videoEditedInfo = videoEditedInfo;
        ArrayList<SendingMediaInfo> infos = new ArrayList<>();
        infos.add(info);
        prepareSendingMedia(accountInstance, infos, dialogId, replyToMsg, replyToTopMsg, inputContent, forceDocument, false, editingMessageObject, notify, scheduleDate);
    }

    public static void prepareSendingBotContextResult(AccountInstance accountInstance, TLRPC.BotInlineResult result, HashMap<String, String> params, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate) {
        TLRPC.BotInlineResult botInlineResult = result;
        if (botInlineResult != null) {
            if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaAuto) {
                new Thread(new SendMessagesHelper$$ExternalSyntheticLambda33(dialogId, result, accountInstance, params, replyToMsg, replyToTopMsg, notify, scheduleDate)).run();
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageText) {
                TLRPC.WebPage webPage = null;
                if (DialogObject.isEncryptedDialog(dialogId)) {
                    int a = 0;
                    while (true) {
                        if (a >= botInlineResult.send_message.entities.size()) {
                            break;
                        }
                        TLRPC.MessageEntity entity = botInlineResult.send_message.entities.get(a);
                        if (entity instanceof TLRPC.TL_messageEntityUrl) {
                            webPage = new TLRPC.TL_webPagePending();
                            webPage.url = botInlineResult.send_message.message.substring(entity.offset, entity.offset + entity.length);
                            break;
                        }
                        a++;
                    }
                }
                accountInstance.getSendMessagesHelper().sendMessage(botInlineResult.send_message.message, dialogId, replyToMsg, replyToTopMsg, webPage, !botInlineResult.send_message.no_webpage, botInlineResult.send_message.entities, botInlineResult.send_message.reply_markup, params, notify, scheduleDate, (MessageObject.SendAnimationData) null);
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaVenue) {
                TLRPC.TL_messageMediaVenue venue = new TLRPC.TL_messageMediaVenue();
                venue.geo = botInlineResult.send_message.geo;
                venue.address = botInlineResult.send_message.address;
                venue.title = botInlineResult.send_message.title;
                venue.provider = botInlineResult.send_message.provider;
                venue.venue_id = botInlineResult.send_message.venue_id;
                String str = botInlineResult.send_message.venue_type;
                venue.venue_id = str;
                venue.venue_type = str;
                if (venue.venue_type == null) {
                    venue.venue_type = "";
                }
                accountInstance.getSendMessagesHelper().sendMessage((TLRPC.MessageMedia) venue, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaGeo) {
                if (botInlineResult.send_message.period == 0 && botInlineResult.send_message.proximity_notification_radius == 0) {
                    TLRPC.TL_messageMediaGeo location = new TLRPC.TL_messageMediaGeo();
                    location.geo = botInlineResult.send_message.geo;
                    location.heading = botInlineResult.send_message.heading;
                    accountInstance.getSendMessagesHelper().sendMessage((TLRPC.MessageMedia) location, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
                    return;
                }
                TLRPC.TL_messageMediaGeoLive location2 = new TLRPC.TL_messageMediaGeoLive();
                location2.period = botInlineResult.send_message.period != 0 ? botInlineResult.send_message.period : 900;
                location2.geo = botInlineResult.send_message.geo;
                location2.heading = botInlineResult.send_message.heading;
                location2.proximity_notification_radius = botInlineResult.send_message.proximity_notification_radius;
                accountInstance.getSendMessagesHelper().sendMessage((TLRPC.MessageMedia) location2, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaContact) {
                TLRPC.TL_user tL_user = new TLRPC.TL_user();
                tL_user.phone = botInlineResult.send_message.phone_number;
                tL_user.first_name = botInlineResult.send_message.first_name;
                tL_user.last_name = botInlineResult.send_message.last_name;
                TLRPC.TL_restrictionReason reason = new TLRPC.TL_restrictionReason();
                reason.text = botInlineResult.send_message.vcard;
                reason.platform = "";
                reason.reason = "";
                tL_user.restriction_reason.add(reason);
                accountInstance.getSendMessagesHelper().sendMessage((TLRPC.User) tL_user, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            } else if ((botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaInvoice) && !DialogObject.isEncryptedDialog(dialogId)) {
                TLRPC.TL_botInlineMessageMediaInvoice invoice = (TLRPC.TL_botInlineMessageMediaInvoice) botInlineResult.send_message;
                TLRPC.TL_messageMediaInvoice messageMediaInvoice = new TLRPC.TL_messageMediaInvoice();
                messageMediaInvoice.shipping_address_requested = invoice.shipping_address_requested;
                messageMediaInvoice.test = invoice.test;
                messageMediaInvoice.title = invoice.title;
                messageMediaInvoice.description = invoice.description;
                if (invoice.photo != null) {
                    messageMediaInvoice.photo = invoice.photo;
                    messageMediaInvoice.flags |= 1;
                }
                messageMediaInvoice.currency = invoice.currency;
                messageMediaInvoice.total_amount = invoice.total_amount;
                messageMediaInvoice.start_param = "";
                accountInstance.getSendMessagesHelper().sendMessage(messageMediaInvoice, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            }
        }
    }

    /* JADX WARNING: type inference failed for: r4v18, types: [org.telegram.tgnet.TLRPC$Photo] */
    /* JADX WARNING: type inference failed for: r4v21, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x049b  */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x04a1  */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x04ad  */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x04d7  */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x0504  */
    /* JADX WARNING: Removed duplicated region for block: B:190:0x053b  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingBotContextResult$80(long r27, org.telegram.tgnet.TLRPC.BotInlineResult r29, org.telegram.messenger.AccountInstance r30, java.util.HashMap r31, org.telegram.messenger.MessageObject r32, org.telegram.messenger.MessageObject r33, boolean r34, int r35) {
        /*
            r14 = r29
            r13 = r31
            boolean r17 = org.telegram.messenger.DialogObject.isEncryptedDialog(r27)
            r0 = 0
            r1 = 0
            r2 = 0
            r3 = 0
            java.lang.String r4 = r14.type
            java.lang.String r5 = "game"
            boolean r4 = r5.equals(r4)
            r12 = 1
            if (r4 == 0) goto L_0x0052
            if (r17 == 0) goto L_0x001a
            return
        L_0x001a:
            org.telegram.tgnet.TLRPC$TL_game r4 = new org.telegram.tgnet.TLRPC$TL_game
            r4.<init>()
            r3 = r4
            java.lang.String r4 = r14.title
            r3.title = r4
            java.lang.String r4 = r14.description
            r3.description = r4
            java.lang.String r4 = r14.id
            r3.short_name = r4
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            r3.photo = r4
            org.telegram.tgnet.TLRPC$Photo r4 = r3.photo
            if (r4 != 0) goto L_0x003b
            org.telegram.tgnet.TLRPC$TL_photoEmpty r4 = new org.telegram.tgnet.TLRPC$TL_photoEmpty
            r4.<init>()
            r3.photo = r4
        L_0x003b:
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r4 == 0) goto L_0x004a
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            r3.document = r4
            int r4 = r3.flags
            r4 = r4 | r12
            r3.flags = r4
        L_0x004a:
            r5 = r1
            r25 = r2
            r24 = r3
            r3 = 0
            goto L_0x04e4
        L_0x0052:
            boolean r4 = r14 instanceof org.telegram.tgnet.TLRPC.TL_botInlineMediaResult
            if (r4 == 0) goto L_0x009f
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            if (r4 == 0) goto L_0x0076
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r4 == 0) goto L_0x006d
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            r1 = r4
            org.telegram.tgnet.TLRPC$TL_document r1 = (org.telegram.tgnet.TLRPC.TL_document) r1
            r5 = r1
            r25 = r2
            r24 = r3
            r3 = 0
            goto L_0x04e4
        L_0x006d:
            r23 = r1
            r25 = r2
            r24 = r3
            r3 = 0
            goto L_0x04e2
        L_0x0076:
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            if (r4 == 0) goto L_0x0096
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r4 == 0) goto L_0x008d
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            r2 = r4
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            r5 = r1
            r25 = r2
            r24 = r3
            r3 = 0
            goto L_0x04e4
        L_0x008d:
            r23 = r1
            r25 = r2
            r24 = r3
            r3 = 0
            goto L_0x04e2
        L_0x0096:
            r23 = r1
            r25 = r2
            r24 = r3
            r3 = 0
            goto L_0x04e2
        L_0x009f:
            org.telegram.tgnet.TLRPC$WebDocument r4 = r14.content
            if (r4 == 0) goto L_0x04db
            org.telegram.tgnet.TLRPC$WebDocument r4 = r14.content
            java.lang.String r4 = r4.url
            r6 = 0
            java.lang.String r4 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r4, r6)
            boolean r7 = android.text.TextUtils.isEmpty(r4)
            java.lang.String r8 = "."
            if (r7 == 0) goto L_0x00bd
            org.telegram.tgnet.TLRPC$WebDocument r7 = r14.content
            java.lang.String r7 = r7.mime_type
            java.lang.String r4 = org.telegram.messenger.FileLoader.getExtensionByMimeType(r7)
            goto L_0x00cc
        L_0x00bd:
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            r7.append(r8)
            r7.append(r4)
            java.lang.String r4 = r7.toString()
        L_0x00cc:
            java.io.File r7 = new java.io.File
            r9 = 4
            java.io.File r10 = org.telegram.messenger.FileLoader.getDirectory(r9)
            java.lang.StringBuilder r15 = new java.lang.StringBuilder
            r15.<init>()
            org.telegram.tgnet.TLRPC$WebDocument r5 = r14.content
            java.lang.String r5 = r5.url
            java.lang.String r5 = org.telegram.messenger.Utilities.MD5(r5)
            r15.append(r5)
            r15.append(r4)
            java.lang.String r5 = r15.toString()
            r7.<init>(r10, r5)
            r5 = r7
            boolean r7 = r5.exists()
            if (r7 == 0) goto L_0x00fa
            java.lang.String r0 = r5.getAbsolutePath()
            r7 = r0
            goto L_0x00ff
        L_0x00fa:
            org.telegram.tgnet.TLRPC$WebDocument r7 = r14.content
            java.lang.String r0 = r7.url
            r7 = r0
        L_0x00ff:
            java.lang.String r0 = r14.type
            int r10 = r0.hashCode()
            r16 = 5
            java.lang.String r15 = "voice"
            java.lang.String r9 = "video"
            java.lang.String r12 = "audio"
            java.lang.String r11 = "gif"
            java.lang.String r6 = "sticker"
            r22 = 2
            r23 = r1
            java.lang.String r1 = "file"
            switch(r10) {
                case -1890252483: goto L_0x014d;
                case 102340: goto L_0x0145;
                case 3143036: goto L_0x013d;
                case 93166550: goto L_0x0135;
                case 106642994: goto L_0x012b;
                case 112202875: goto L_0x0123;
                case 112386354: goto L_0x011b;
                default: goto L_0x011a;
            }
        L_0x011a:
            goto L_0x0155
        L_0x011b:
            boolean r0 = r0.equals(r15)
            if (r0 == 0) goto L_0x011a
            r0 = 1
            goto L_0x0156
        L_0x0123:
            boolean r0 = r0.equals(r9)
            if (r0 == 0) goto L_0x011a
            r0 = 3
            goto L_0x0156
        L_0x012b:
            java.lang.String r10 = "photo"
            boolean r0 = r0.equals(r10)
            if (r0 == 0) goto L_0x011a
            r0 = 6
            goto L_0x0156
        L_0x0135:
            boolean r0 = r0.equals(r12)
            if (r0 == 0) goto L_0x011a
            r0 = 0
            goto L_0x0156
        L_0x013d:
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L_0x011a
            r0 = 2
            goto L_0x0156
        L_0x0145:
            boolean r0 = r0.equals(r11)
            if (r0 == 0) goto L_0x011a
            r0 = 5
            goto L_0x0156
        L_0x014d:
            boolean r0 = r0.equals(r6)
            if (r0 == 0) goto L_0x011a
            r0 = 4
            goto L_0x0156
        L_0x0155:
            r0 = -1
        L_0x0156:
            java.lang.String r10 = "x"
            switch(r0) {
                case 0: goto L_0x01c3;
                case 1: goto L_0x01c3;
                case 2: goto L_0x01c3;
                case 3: goto L_0x01c3;
                case 4: goto L_0x01c3;
                case 5: goto L_0x01c3;
                case 6: goto L_0x0167;
                default: goto L_0x015b;
            }
        L_0x015b:
            r25 = r2
            r24 = r3
            r26 = r4
            r3 = 0
            r0 = r7
            r5 = r23
            goto L_0x04e4
        L_0x0167:
            boolean r0 = r5.exists()
            if (r0 == 0) goto L_0x0176
            org.telegram.messenger.SendMessagesHelper r0 = r30.getSendMessagesHelper()
            r1 = 0
            org.telegram.tgnet.TLRPC$TL_photo r2 = r0.generatePhotoSizes(r7, r1)
        L_0x0176:
            if (r2 != 0) goto L_0x01b9
            org.telegram.tgnet.TLRPC$TL_photo r0 = new org.telegram.tgnet.TLRPC$TL_photo
            r0.<init>()
            r2 = r0
            org.telegram.tgnet.ConnectionsManager r0 = r30.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r2.date = r0
            r1 = 0
            byte[] r0 = new byte[r1]
            r2.file_reference = r0
            org.telegram.tgnet.TLRPC$TL_photoSize r0 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r0.<init>()
            int[] r6 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r29)
            r8 = r6[r1]
            r0.w = r8
            r1 = 1
            r8 = r6[r1]
            r0.h = r8
            r0.size = r1
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r1 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r1.<init>()
            r0.location = r1
            r0.type = r10
            java.util.ArrayList r1 = r2.sizes
            r1.add(r0)
            r25 = r2
            r24 = r3
            r0 = r7
            r5 = r23
            r3 = 0
            goto L_0x04e4
        L_0x01b9:
            r25 = r2
            r24 = r3
            r0 = r7
            r5 = r23
            r3 = 0
            goto L_0x04e4
        L_0x01c3:
            org.telegram.tgnet.TLRPC$TL_document r0 = new org.telegram.tgnet.TLRPC$TL_document
            r0.<init>()
            r23 = r0
            r25 = r2
            r24 = r3
            r2 = 0
            r26 = r4
            r4 = r23
            r4.id = r2
            r2 = 0
            r4.size = r2
            r4.dc_id = r2
            org.telegram.tgnet.TLRPC$WebDocument r0 = r14.content
            java.lang.String r0 = r0.mime_type
            r4.mime_type = r0
            byte[] r0 = new byte[r2]
            r4.file_reference = r0
            org.telegram.tgnet.ConnectionsManager r0 = r30.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r4.date = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeFilename r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeFilename
            r0.<init>()
            r2 = r0
            java.util.ArrayList r0 = r4.attributes
            r0.add(r2)
            java.lang.String r0 = r14.type
            int r3 = r0.hashCode()
            switch(r3) {
                case -1890252483: goto L_0x022c;
                case 102340: goto L_0x0224;
                case 3143036: goto L_0x021c;
                case 93166550: goto L_0x0214;
                case 112202875: goto L_0x020c;
                case 112386354: goto L_0x0204;
                default: goto L_0x0203;
            }
        L_0x0203:
            goto L_0x0234
        L_0x0204:
            boolean r0 = r0.equals(r15)
            if (r0 == 0) goto L_0x0203
            r15 = 1
            goto L_0x0235
        L_0x020c:
            boolean r0 = r0.equals(r9)
            if (r0 == 0) goto L_0x0203
            r15 = 4
            goto L_0x0235
        L_0x0214:
            boolean r0 = r0.equals(r12)
            if (r0 == 0) goto L_0x0203
            r15 = 2
            goto L_0x0235
        L_0x021c:
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L_0x0203
            r15 = 3
            goto L_0x0235
        L_0x0224:
            boolean r0 = r0.equals(r11)
            if (r0 == 0) goto L_0x0203
            r15 = 0
            goto L_0x0235
        L_0x022c:
            boolean r0 = r0.equals(r6)
            if (r0 == 0) goto L_0x0203
            r15 = 5
            goto L_0x0235
        L_0x0234:
            r15 = -1
        L_0x0235:
            switch(r15) {
                case 0: goto L_0x03c5;
                case 1: goto L_0x03ac;
                case 2: goto L_0x037e;
                case 3: goto L_0x034e;
                case 4: goto L_0x02ca;
                case 5: goto L_0x023a;
                default: goto L_0x0238;
            }
        L_0x0238:
            goto L_0x0497
        L_0x023a:
            org.telegram.tgnet.TLRPC$TL_documentAttributeSticker r6 = new org.telegram.tgnet.TLRPC$TL_documentAttributeSticker
            r6.<init>()
            java.lang.String r9 = ""
            r6.alt = r9
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r9 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty
            r9.<init>()
            r6.stickerset = r9
            java.util.ArrayList r9 = r4.attributes
            r9.add(r6)
            org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize r9 = new org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize
            r9.<init>()
            int[] r11 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r29)
            r12 = 0
            r15 = r11[r12]
            r9.w = r15
            r12 = 1
            r15 = r11[r12]
            r9.h = r15
            java.util.ArrayList r12 = r4.attributes
            r12.add(r9)
            java.lang.String r12 = "sticker.webp"
            r2.file_name = r12
            org.telegram.tgnet.TLRPC$WebDocument r12 = r14.thumb     // Catch:{ all -> 0x02c4 }
            if (r12 == 0) goto L_0x02c2
            java.io.File r12 = new java.io.File     // Catch:{ all -> 0x02c4 }
            r15 = 4
            java.io.File r15 = org.telegram.messenger.FileLoader.getDirectory(r15)     // Catch:{ all -> 0x02c4 }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ all -> 0x02c4 }
            r0.<init>()     // Catch:{ all -> 0x02c4 }
            org.telegram.tgnet.TLRPC$WebDocument r3 = r14.thumb     // Catch:{ all -> 0x02c4 }
            java.lang.String r3 = r3.url     // Catch:{ all -> 0x02c4 }
            java.lang.String r3 = org.telegram.messenger.Utilities.MD5(r3)     // Catch:{ all -> 0x02c4 }
            r0.append(r3)     // Catch:{ all -> 0x02c4 }
            r0.append(r8)     // Catch:{ all -> 0x02c4 }
            org.telegram.tgnet.TLRPC$WebDocument r3 = r14.thumb     // Catch:{ all -> 0x02c4 }
            java.lang.String r3 = r3.url     // Catch:{ all -> 0x02c4 }
            java.lang.String r8 = "webp"
            java.lang.String r3 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r3, r8)     // Catch:{ all -> 0x02c4 }
            r0.append(r3)     // Catch:{ all -> 0x02c4 }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x02c4 }
            r12.<init>(r15, r0)     // Catch:{ all -> 0x02c4 }
            java.lang.String r0 = r12.getAbsolutePath()     // Catch:{ all -> 0x02c4 }
            r3 = 0
            r8 = 1119092736(0x42b40000, float:90.0)
            r12 = 1
            android.graphics.Bitmap r3 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r3, r8, r8, r12)     // Catch:{ all -> 0x02c4 }
            if (r3 == 0) goto L_0x02c2
            r12 = 55
            r15 = 0
            org.telegram.tgnet.TLRPC$PhotoSize r8 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r3, r8, r8, r12, r15)     // Catch:{ all -> 0x02c4 }
            if (r8 == 0) goto L_0x02bf
            java.util.ArrayList r12 = r4.thumbs     // Catch:{ all -> 0x02c4 }
            r12.add(r8)     // Catch:{ all -> 0x02c4 }
            int r12 = r4.flags     // Catch:{ all -> 0x02c4 }
            r15 = 1
            r12 = r12 | r15
            r4.flags = r12     // Catch:{ all -> 0x02c4 }
        L_0x02bf:
            r3.recycle()     // Catch:{ all -> 0x02c4 }
        L_0x02c2:
            goto L_0x0497
        L_0x02c4:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x0497
        L_0x02ca:
            java.lang.String r0 = "video.mp4"
            r2.file_name = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r0.<init>()
            r3 = r0
            int[] r6 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r29)
            r9 = 0
            r0 = r6[r9]
            r3.w = r0
            r9 = 1
            r0 = r6[r9]
            r3.h = r0
            int r0 = org.telegram.messenger.MessageObject.getInlineResultDuration(r29)
            r3.duration = r0
            r3.supports_streaming = r9
            java.util.ArrayList r0 = r4.attributes
            r0.add(r3)
            org.telegram.tgnet.TLRPC$WebDocument r0 = r14.thumb     // Catch:{ all -> 0x0348 }
            if (r0 == 0) goto L_0x0346
            java.io.File r0 = new java.io.File     // Catch:{ all -> 0x0348 }
            r9 = 4
            java.io.File r9 = org.telegram.messenger.FileLoader.getDirectory(r9)     // Catch:{ all -> 0x0348 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ all -> 0x0348 }
            r11.<init>()     // Catch:{ all -> 0x0348 }
            org.telegram.tgnet.TLRPC$WebDocument r12 = r14.thumb     // Catch:{ all -> 0x0348 }
            java.lang.String r12 = r12.url     // Catch:{ all -> 0x0348 }
            java.lang.String r12 = org.telegram.messenger.Utilities.MD5(r12)     // Catch:{ all -> 0x0348 }
            r11.append(r12)     // Catch:{ all -> 0x0348 }
            r11.append(r8)     // Catch:{ all -> 0x0348 }
            org.telegram.tgnet.TLRPC$WebDocument r8 = r14.thumb     // Catch:{ all -> 0x0348 }
            java.lang.String r8 = r8.url     // Catch:{ all -> 0x0348 }
            java.lang.String r12 = "jpg"
            java.lang.String r8 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r8, r12)     // Catch:{ all -> 0x0348 }
            r11.append(r8)     // Catch:{ all -> 0x0348 }
            java.lang.String r8 = r11.toString()     // Catch:{ all -> 0x0348 }
            r0.<init>(r9, r8)     // Catch:{ all -> 0x0348 }
            java.lang.String r0 = r0.getAbsolutePath()     // Catch:{ all -> 0x0348 }
            r8 = 0
            r9 = 1119092736(0x42b40000, float:90.0)
            r11 = 1
            android.graphics.Bitmap r8 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r8, r9, r9, r11)     // Catch:{ all -> 0x0348 }
            if (r8 == 0) goto L_0x0346
            r11 = 55
            r12 = 0
            org.telegram.tgnet.TLRPC$PhotoSize r9 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r8, r9, r9, r11, r12)     // Catch:{ all -> 0x0348 }
            if (r9 == 0) goto L_0x0343
            java.util.ArrayList r11 = r4.thumbs     // Catch:{ all -> 0x0348 }
            r11.add(r9)     // Catch:{ all -> 0x0348 }
            int r11 = r4.flags     // Catch:{ all -> 0x0348 }
            r12 = 1
            r11 = r11 | r12
            r4.flags = r11     // Catch:{ all -> 0x0348 }
        L_0x0343:
            r8.recycle()     // Catch:{ all -> 0x0348 }
        L_0x0346:
            goto L_0x0497
        L_0x0348:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x0497
        L_0x034e:
            org.telegram.tgnet.TLRPC$WebDocument r0 = r14.content
            java.lang.String r0 = r0.mime_type
            r3 = 47
            int r0 = r0.lastIndexOf(r3)
            r3 = -1
            if (r0 == r3) goto L_0x037a
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.String r6 = "file."
            r3.append(r6)
            org.telegram.tgnet.TLRPC$WebDocument r6 = r14.content
            java.lang.String r6 = r6.mime_type
            int r8 = r0 + 1
            java.lang.String r6 = r6.substring(r8)
            r3.append(r6)
            java.lang.String r3 = r3.toString()
            r2.file_name = r3
            goto L_0x0497
        L_0x037a:
            r2.file_name = r1
            goto L_0x0497
        L_0x037e:
            org.telegram.tgnet.TLRPC$TL_documentAttributeAudio r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAudio
            r0.<init>()
            int r3 = org.telegram.messenger.MessageObject.getInlineResultDuration(r29)
            r0.duration = r3
            java.lang.String r3 = r14.title
            r0.title = r3
            int r3 = r0.flags
            r6 = 1
            r3 = r3 | r6
            r0.flags = r3
            java.lang.String r3 = r14.description
            if (r3 == 0) goto L_0x03a1
            java.lang.String r3 = r14.description
            r0.performer = r3
            int r3 = r0.flags
            r3 = r3 | 2
            r0.flags = r3
        L_0x03a1:
            java.lang.String r3 = "audio.mp3"
            r2.file_name = r3
            java.util.ArrayList r3 = r4.attributes
            r3.add(r0)
            goto L_0x0497
        L_0x03ac:
            org.telegram.tgnet.TLRPC$TL_documentAttributeAudio r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAudio
            r0.<init>()
            int r3 = org.telegram.messenger.MessageObject.getInlineResultDuration(r29)
            r0.duration = r3
            r3 = 1
            r0.voice = r3
            java.lang.String r3 = "audio.ogg"
            r2.file_name = r3
            java.util.ArrayList r3 = r4.attributes
            r3.add(r0)
            goto L_0x0497
        L_0x03c5:
            r11 = 55
            java.lang.String r0 = "animation.gif"
            r2.file_name = r0
            java.lang.String r0 = "mp4"
            boolean r3 = r7.endsWith(r0)
            java.lang.String r6 = "video/mp4"
            if (r3 == 0) goto L_0x03e2
            r4.mime_type = r6
            java.util.ArrayList r3 = r4.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r9 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r9.<init>()
            r3.add(r9)
            goto L_0x03e6
        L_0x03e2:
            java.lang.String r3 = "image/gif"
            r4.mime_type = r3
        L_0x03e6:
            r3 = 90
            if (r17 == 0) goto L_0x03ed
            r9 = 90
            goto L_0x03ef
        L_0x03ed:
            r9 = 320(0x140, float:4.48E-43)
        L_0x03ef:
            boolean r0 = r7.endsWith(r0)     // Catch:{ all -> 0x048f }
            if (r0 == 0) goto L_0x0466
            r12 = 1
            android.graphics.Bitmap r0 = createVideoThumbnail(r7, r12)     // Catch:{ all -> 0x048f }
            if (r0 != 0) goto L_0x046e
            org.telegram.tgnet.TLRPC$WebDocument r12 = r14.thumb     // Catch:{ all -> 0x048f }
            boolean r12 = r12 instanceof org.telegram.tgnet.TLRPC.TL_webDocument     // Catch:{ all -> 0x048f }
            if (r12 == 0) goto L_0x046e
            org.telegram.tgnet.TLRPC$WebDocument r12 = r14.thumb     // Catch:{ all -> 0x048f }
            java.lang.String r12 = r12.mime_type     // Catch:{ all -> 0x048f }
            boolean r6 = r6.equals(r12)     // Catch:{ all -> 0x048f }
            if (r6 == 0) goto L_0x046e
            org.telegram.tgnet.TLRPC$WebDocument r6 = r14.thumb     // Catch:{ all -> 0x048f }
            java.lang.String r6 = r6.url     // Catch:{ all -> 0x048f }
            r12 = 0
            java.lang.String r6 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r6, r12)     // Catch:{ all -> 0x048f }
            boolean r12 = android.text.TextUtils.isEmpty(r6)     // Catch:{ all -> 0x0464 }
            if (r12 == 0) goto L_0x0425
            org.telegram.tgnet.TLRPC$WebDocument r8 = r14.thumb     // Catch:{ all -> 0x0464 }
            java.lang.String r8 = r8.mime_type     // Catch:{ all -> 0x0464 }
            java.lang.String r8 = org.telegram.messenger.FileLoader.getExtensionByMimeType(r8)     // Catch:{ all -> 0x0464 }
            r6 = r8
            goto L_0x0435
        L_0x0425:
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ all -> 0x0464 }
            r12.<init>()     // Catch:{ all -> 0x0464 }
            r12.append(r8)     // Catch:{ all -> 0x0464 }
            r12.append(r6)     // Catch:{ all -> 0x0464 }
            java.lang.String r8 = r12.toString()     // Catch:{ all -> 0x0464 }
            r6 = r8
        L_0x0435:
            java.io.File r8 = new java.io.File     // Catch:{ all -> 0x0464 }
            r12 = 4
            java.io.File r12 = org.telegram.messenger.FileLoader.getDirectory(r12)     // Catch:{ all -> 0x0464 }
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ all -> 0x0464 }
            r15.<init>()     // Catch:{ all -> 0x0464 }
            org.telegram.tgnet.TLRPC$WebDocument r11 = r14.thumb     // Catch:{ all -> 0x0464 }
            java.lang.String r11 = r11.url     // Catch:{ all -> 0x0464 }
            java.lang.String r11 = org.telegram.messenger.Utilities.MD5(r11)     // Catch:{ all -> 0x0464 }
            r15.append(r11)     // Catch:{ all -> 0x0464 }
            r15.append(r6)     // Catch:{ all -> 0x0464 }
            java.lang.String r11 = r15.toString()     // Catch:{ all -> 0x0464 }
            r8.<init>(r12, r11)     // Catch:{ all -> 0x0464 }
            r5 = r8
            java.lang.String r8 = r5.getAbsolutePath()     // Catch:{ all -> 0x0464 }
            r11 = 1
            android.graphics.Bitmap r8 = createVideoThumbnail(r8, r11)     // Catch:{ all -> 0x0464 }
            r0 = r8
            r26 = r6
            goto L_0x046e
        L_0x0464:
            r0 = move-exception
            goto L_0x0492
        L_0x0466:
            float r0 = (float) r9
            float r6 = (float) r9
            r8 = 0
            r11 = 1
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r7, r8, r0, r6, r11)     // Catch:{ all -> 0x048f }
        L_0x046e:
            if (r0 == 0) goto L_0x048e
            float r6 = (float) r9     // Catch:{ all -> 0x048f }
            float r8 = (float) r9     // Catch:{ all -> 0x048f }
            if (r9 <= r3) goto L_0x0477
            r3 = 80
            goto L_0x0479
        L_0x0477:
            r3 = 55
        L_0x0479:
            r11 = 0
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r0, r6, r8, r3, r11)     // Catch:{ all -> 0x048f }
            if (r3 == 0) goto L_0x048b
            java.util.ArrayList r6 = r4.thumbs     // Catch:{ all -> 0x048f }
            r6.add(r3)     // Catch:{ all -> 0x048f }
            int r6 = r4.flags     // Catch:{ all -> 0x048f }
            r8 = 1
            r6 = r6 | r8
            r4.flags = r6     // Catch:{ all -> 0x048f }
        L_0x048b:
            r0.recycle()     // Catch:{ all -> 0x048f }
        L_0x048e:
            goto L_0x0497
        L_0x048f:
            r0 = move-exception
            r6 = r26
        L_0x0492:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r26 = r6
        L_0x0497:
            java.lang.String r0 = r2.file_name
            if (r0 != 0) goto L_0x049d
            r2.file_name = r1
        L_0x049d:
            java.lang.String r0 = r4.mime_type
            if (r0 != 0) goto L_0x04a5
            java.lang.String r0 = "application/octet-stream"
            r4.mime_type = r0
        L_0x04a5:
            java.util.ArrayList r0 = r4.thumbs
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x04d7
            org.telegram.tgnet.TLRPC$TL_photoSize r0 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r0.<init>()
            int[] r1 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r29)
            r3 = 0
            r6 = r1[r3]
            r0.w = r6
            r6 = 1
            r8 = r1[r6]
            r0.h = r8
            r0.size = r3
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r6 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r6.<init>()
            r0.location = r6
            r0.type = r10
            java.util.ArrayList r6 = r4.thumbs
            r6.add(r0)
            int r6 = r4.flags
            r8 = 1
            r6 = r6 | r8
            r4.flags = r6
            goto L_0x04d8
        L_0x04d7:
            r3 = 0
        L_0x04d8:
            r5 = r4
            r0 = r7
            goto L_0x04e4
        L_0x04db:
            r23 = r1
            r25 = r2
            r24 = r3
            r3 = 0
        L_0x04e2:
            r5 = r23
        L_0x04e4:
            r6 = r0
            r2 = r5
            r15 = r25
            r16 = r24
            if (r13 == 0) goto L_0x04f9
            org.telegram.tgnet.TLRPC$WebDocument r1 = r14.content
            if (r1 == 0) goto L_0x04f9
            org.telegram.tgnet.TLRPC$WebDocument r1 = r14.content
            java.lang.String r1 = r1.url
            java.lang.String r4 = "originalPath"
            r13.put(r4, r1)
        L_0x04f9:
            r1 = 1
            android.graphics.Bitmap[] r4 = new android.graphics.Bitmap[r1]
            java.lang.String[] r11 = new java.lang.String[r1]
            boolean r1 = org.telegram.messenger.MessageObject.isGifDocument((org.telegram.tgnet.TLRPC.Document) r5)
            if (r1 == 0) goto L_0x053b
            java.util.ArrayList r1 = r5.thumbs
            r7 = 320(0x140, float:4.48E-43)
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r7)
            java.io.File r7 = org.telegram.messenger.FileLoader.getPathToAttach(r5)
            boolean r8 = r7.exists()
            if (r8 != 0) goto L_0x051e
            r12 = 1
            java.io.File r7 = org.telegram.messenger.FileLoader.getPathToAttach(r5, r12)
            r18 = r7
            goto L_0x0521
        L_0x051e:
            r12 = 1
            r18 = r7
        L_0x0521:
            java.lang.String r9 = r18.getAbsolutePath()
            r10 = 0
            r19 = 0
            r7 = r17
            r8 = r5
            r21 = r11
            r3 = 1
            r11 = r19
            ensureMediaThumbExists(r7, r8, r9, r10, r11)
            java.lang.String r3 = getKeyForPhotoSize(r1, r4, r3, r3)
            r7 = 0
            r21[r7] = r3
            goto L_0x053d
        L_0x053b:
            r21 = r11
        L_0x053d:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda70 r18 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda70
            r1 = r18
            r3 = r4
            r19 = r4
            r4 = r21
            r23 = r5
            r5 = r30
            r7 = r27
            r9 = r32
            r10 = r33
            r11 = r29
            r12 = r31
            r13 = r34
            r14 = r35
            r1.<init>(r2, r3, r4, r5, r6, r7, r9, r10, r11, r12, r13, r14, r15, r16)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r18)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingBotContextResult$80(long, org.telegram.tgnet.TLRPC$BotInlineResult, org.telegram.messenger.AccountInstance, java.util.HashMap, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, boolean, int):void");
    }

    static /* synthetic */ void lambda$prepareSendingBotContextResult$79(TLRPC.TL_document finalDocument, Bitmap[] precahcedThumb, String[] precachedKey, AccountInstance accountInstance, String finalPathFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.BotInlineResult result, HashMap params, boolean notify, int scheduleDate, TLRPC.TL_photo finalPhoto, TLRPC.TL_game finalGame) {
        TLRPC.BotInlineResult botInlineResult = result;
        if (finalDocument != null) {
            if (!(precahcedThumb[0] == null || precachedKey[0] == null)) {
                ImageLoader.getInstance().putImageToCache(new BitmapDrawable(precahcedThumb[0]), precachedKey[0], false);
            }
            accountInstance.getSendMessagesHelper().sendMessage(finalDocument, (VideoEditedInfo) null, finalPathFinal, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.message, botInlineResult.send_message.entities, botInlineResult.send_message.reply_markup, params, notify, scheduleDate, 0, result, (MessageObject.SendAnimationData) null);
        } else if (finalPhoto != null) {
            TLRPC.BotInlineResult botInlineResult2 = result;
            accountInstance.getSendMessagesHelper().sendMessage(finalPhoto, botInlineResult2.content != null ? botInlineResult2.content.url : null, dialogId, replyToMsg, replyToTopMsg, botInlineResult2.send_message.message, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, params, notify, scheduleDate, 0, result);
        } else {
            TLRPC.BotInlineResult botInlineResult3 = result;
            if (finalGame != null) {
                accountInstance.getSendMessagesHelper().sendMessage(finalGame, dialogId, botInlineResult3.send_message.reply_markup, (HashMap<String, String>) params, notify, scheduleDate);
            }
        }
    }

    private static String getTrimmedString(String src) {
        String result = src.trim();
        if (result.length() == 0) {
            return result;
        }
        while (src.startsWith("\n")) {
            src = src.substring(1);
        }
        while (src.endsWith("\n")) {
            src = src.substring(0, src.length() - 1);
        }
        return src;
    }

    public static void prepareSendingText(AccountInstance accountInstance, String text, long dialogId, boolean notify, int scheduleDate) {
        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda88(text, accountInstance, dialogId, notify, scheduleDate));
    }

    static /* synthetic */ void lambda$prepareSendingText$81(String text, AccountInstance accountInstance, long dialogId, boolean notify, int scheduleDate) {
        String textFinal = getTrimmedString(text);
        if (textFinal.length() != 0) {
            int count = (int) Math.ceil((double) (((float) textFinal.length()) / 4096.0f));
            for (int a = 0; a < count; a++) {
                accountInstance.getSendMessagesHelper().sendMessage(textFinal.substring(a * 4096, Math.min((a + 1) * 4096, textFinal.length())), dialogId, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate, (MessageObject.SendAnimationData) null);
            }
        }
    }

    public static void ensureMediaThumbExists(boolean isEncrypted, TLObject object, String path, Uri uri, long startTime) {
        Bitmap thumb;
        boolean smallExists;
        Bitmap bitmap;
        TLRPC.PhotoSize size;
        TLObject tLObject = object;
        String str = path;
        Uri uri2 = uri;
        if (tLObject instanceof TLRPC.TL_photo) {
            TLRPC.TL_photo photo = (TLRPC.TL_photo) tLObject;
            TLRPC.PhotoSize smallSize = FileLoader.getClosestPhotoSizeWithSize(photo.sizes, 90);
            if ((smallSize instanceof TLRPC.TL_photoStrippedSize) || (smallSize instanceof TLRPC.TL_photoPathSize)) {
                smallExists = true;
            } else {
                smallExists = FileLoader.getPathToAttach(smallSize, true).exists();
            }
            TLRPC.PhotoSize bigSize = FileLoader.getClosestPhotoSizeWithSize(photo.sizes, AndroidUtilities.getPhotoSize());
            boolean bigExists = FileLoader.getPathToAttach(bigSize, false).exists();
            if (!smallExists || !bigExists) {
                Bitmap bitmap2 = ImageLoader.loadBitmap(str, uri2, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true);
                if (bitmap2 == null) {
                    bitmap = ImageLoader.loadBitmap(str, uri2, 800.0f, 800.0f, true);
                } else {
                    bitmap = bitmap2;
                }
                if (!bigExists && (size = ImageLoader.scaleAndSaveImage(bigSize, bitmap, Bitmap.CompressFormat.JPEG, true, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), 80, false, 101, 101, false)) != bigSize) {
                    photo.sizes.add(0, size);
                }
                if (!smallExists) {
                    TLRPC.PhotoSize photoSize = bigSize;
                    TLRPC.PhotoSize size2 = ImageLoader.scaleAndSaveImage(smallSize, bitmap, 90.0f, 90.0f, 55, true, false);
                    if (size2 != smallSize) {
                        photo.sizes.add(0, size2);
                    }
                }
                if (bitmap != null) {
                    bitmap.recycle();
                }
            }
        } else if (tLObject instanceof TLRPC.TL_document) {
            TLRPC.TL_document document = (TLRPC.TL_document) tLObject;
            if ((MessageObject.isVideoDocument(document) || MessageObject.isNewGifDocument((TLRPC.Document) document)) && MessageObject.isDocumentHasThumb(document)) {
                int side = 320;
                TLRPC.PhotoSize photoSize2 = FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 320);
                if (!(photoSize2 instanceof TLRPC.TL_photoStrippedSize) && !(photoSize2 instanceof TLRPC.TL_photoPathSize) && !FileLoader.getPathToAttach(photoSize2, true).exists()) {
                    Bitmap thumb2 = createVideoThumbnailAtTime(str, startTime);
                    if (thumb2 == null) {
                        thumb = createVideoThumbnail(str, 1);
                    } else {
                        thumb = thumb2;
                    }
                    if (isEncrypted) {
                        side = 90;
                    }
                    document.thumbs.set(0, ImageLoader.scaleAndSaveImage(photoSize2, thumb, (float) side, (float) side, side > 90 ? 80 : 55, false, true));
                }
            }
        }
    }

    public static String getKeyForPhotoSize(TLRPC.PhotoSize photoSize, Bitmap[] bitmap, boolean blur, boolean forceCache) {
        if (photoSize == null || photoSize.location == null) {
            return null;
        }
        Point point = ChatMessageCell.getMessageSize(photoSize.w, photoSize.h);
        if (bitmap != null) {
            try {
                BitmapFactory.Options opts = new BitmapFactory.Options();
                opts.inJustDecodeBounds = true;
                File file = FileLoader.getPathToAttach(photoSize, forceCache);
                FileInputStream is = new FileInputStream(file);
                BitmapFactory.decodeStream(is, (Rect) null, opts);
                is.close();
                float scaleFactor = Math.max(((float) opts.outWidth) / point.x, ((float) opts.outHeight) / point.y);
                if (scaleFactor < 1.0f) {
                    scaleFactor = 1.0f;
                }
                opts.inJustDecodeBounds = false;
                opts.inSampleSize = (int) scaleFactor;
                opts.inPreferredConfig = Bitmap.Config.RGB_565;
                if (Build.VERSION.SDK_INT >= 21) {
                    FileInputStream is2 = new FileInputStream(file);
                    bitmap[0] = BitmapFactory.decodeStream(is2, (Rect) null, opts);
                    is2.close();
                }
            } catch (Throwable th) {
            }
        }
        return String.format(Locale.US, blur ? "%d_%d@%d_%d_b" : "%d_%d@%d_%d", new Object[]{Long.valueOf(photoSize.location.volume_id), Integer.valueOf(photoSize.location.local_id), Integer.valueOf((int) (point.x / AndroidUtilities.density)), Integer.valueOf((int) (point.y / AndroidUtilities.density))});
    }

    public static boolean shouldSendWebPAsSticker(String path, Uri uri) {
        InputStream inputStream;
        BitmapFactory.Options bmOptions = new BitmapFactory.Options();
        bmOptions.inJustDecodeBounds = true;
        if (path != null) {
            try {
                RandomAccessFile file = new RandomAccessFile(path, "r");
                ByteBuffer buffer = file.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, (long) path.length());
                Utilities.loadWebpImage((Bitmap) null, buffer, buffer.limit(), bmOptions, true);
                file.close();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            try {
                inputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(uri);
                BitmapFactory.decodeStream(inputStream, (Rect) null, bmOptions);
                if (inputStream != null) {
                    inputStream.close();
                }
            } catch (Exception e2) {
            } catch (Throwable th) {
            }
        }
        if (bmOptions.outWidth >= 800 || bmOptions.outHeight >= 800) {
            return false;
        }
        return true;
        throw th;
    }

    public static void prepareSendingMedia(AccountInstance accountInstance, ArrayList<SendingMediaInfo> media, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, InputContentInfoCompat inputContent, boolean forceDocument, boolean groupMedia, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        boolean groupMedia2;
        if (!media.isEmpty()) {
            int a = 0;
            int N = media.size();
            while (true) {
                if (a >= N) {
                    ArrayList<SendingMediaInfo> arrayList = media;
                    groupMedia2 = groupMedia;
                    break;
                } else if (media.get(a).ttl > 0) {
                    groupMedia2 = false;
                    break;
                } else {
                    a++;
                }
            }
            DispatchQueue dispatchQueue = mediaSendQueue;
            boolean z = groupMedia2;
            SendMessagesHelper$$ExternalSyntheticLambda1 sendMessagesHelper$$ExternalSyntheticLambda1 = r2;
            SendMessagesHelper$$ExternalSyntheticLambda1 sendMessagesHelper$$ExternalSyntheticLambda12 = new SendMessagesHelper$$ExternalSyntheticLambda1(media, dialogId, forceDocument, groupMedia2, accountInstance, editingMessageObject, replyToMsg, replyToTopMsg, notify, scheduleDate, inputContent);
            dispatchQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda1);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v9, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v92, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v74, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v119, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v155, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v122, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v158, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v160, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v126, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v78, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v79, resolved type: java.lang.Object} */
    /* JADX WARNING: type inference failed for: r6v0 */
    /* JADX WARNING: type inference failed for: r6v62, types: [org.telegram.tgnet.TLRPC$Photo] */
    /* JADX WARNING: type inference failed for: r2v137, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: type inference failed for: r6v65, types: [boolean] */
    /* JADX WARNING: type inference failed for: r6v66 */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x0065, code lost:
        if (r8 != false) goto L_0x0067;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:411:0x09f7, code lost:
        if (r76.size() == 1) goto L_0x09fe;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x0357 A[Catch:{ Exception -> 0x0348 }] */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x0362 A[Catch:{ Exception -> 0x0348 }] */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x0370 A[Catch:{ Exception -> 0x0390 }] */
    /* JADX WARNING: Removed duplicated region for block: B:163:0x039e  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x03c9  */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x03e3  */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x03e8  */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x03f4  */
    /* JADX WARNING: Removed duplicated region for block: B:175:0x03fd  */
    /* JADX WARNING: Removed duplicated region for block: B:270:0x0722 A[SYNTHETIC, Splitter:B:270:0x0722] */
    /* JADX WARNING: Removed duplicated region for block: B:274:0x072b A[SYNTHETIC, Splitter:B:274:0x072b] */
    /* JADX WARNING: Removed duplicated region for block: B:291:0x075a  */
    /* JADX WARNING: Removed duplicated region for block: B:321:0x07dc  */
    /* JADX WARNING: Removed duplicated region for block: B:324:0x07e1  */
    /* JADX WARNING: Removed duplicated region for block: B:325:0x07eb  */
    /* JADX WARNING: Removed duplicated region for block: B:328:0x07f3  */
    /* JADX WARNING: Removed duplicated region for block: B:333:0x0846  */
    /* JADX WARNING: Removed duplicated region for block: B:363:0x08db  */
    /* JADX WARNING: Removed duplicated region for block: B:376:0x0915  */
    /* JADX WARNING: Removed duplicated region for block: B:422:0x0a18  */
    /* JADX WARNING: Removed duplicated region for block: B:429:0x0a52  */
    /* JADX WARNING: Removed duplicated region for block: B:503:0x0ceb  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00d8  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00fe  */
    /* JADX WARNING: Removed duplicated region for block: B:562:0x0e10  */
    /* JADX WARNING: Removed duplicated region for block: B:568:0x0e2f  */
    /* JADX WARNING: Removed duplicated region for block: B:573:0x0e40  */
    /* JADX WARNING: Removed duplicated region for block: B:582:0x0e9b  */
    /* JADX WARNING: Removed duplicated region for block: B:584:0x0ea0  */
    /* JADX WARNING: Removed duplicated region for block: B:586:0x0ea5 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:603:0x0var_ A[LOOP:4: B:601:0x0f1c->B:603:0x0var_, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x010a  */
    /* JADX WARNING: Removed duplicated region for block: B:663:0x0e3e A[EDGE_INSN: B:663:0x0e3e->B:572:0x0e3e ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x0138  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x016b  */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x0193  */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x01aa  */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x01af  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingMedia$89(java.util.ArrayList r76, long r77, boolean r79, boolean r80, org.telegram.messenger.AccountInstance r81, org.telegram.messenger.MessageObject r82, org.telegram.messenger.MessageObject r83, org.telegram.messenger.MessageObject r84, boolean r85, int r86, androidx.core.view.inputmethod.InputContentInfoCompat r87) {
        /*
            r1 = r76
            r15 = r81
            long r20 = java.lang.System.currentTimeMillis()
            int r14 = r76.size()
            boolean r13 = org.telegram.messenger.DialogObject.isEncryptedDialog(r77)
            java.lang.String r12 = ".webp"
            java.lang.String r11 = ".gif"
            r19 = 3
            java.lang.String r9 = "_"
            r10 = 0
            r6 = 1
            if (r79 != 0) goto L_0x01d6
            if (r80 == 0) goto L_0x01d6
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r2 = 0
            r7 = r2
        L_0x0025:
            if (r7 >= r14) goto L_0x01cf
            java.lang.Object r2 = r1.get(r7)
            r5 = r2
            org.telegram.messenger.SendMessagesHelper$SendingMediaInfo r5 = (org.telegram.messenger.SendMessagesHelper.SendingMediaInfo) r5
            org.telegram.messenger.MediaController$SearchImage r2 = r5.searchImage
            if (r2 != 0) goto L_0x01c1
            boolean r2 = r5.isVideo
            if (r2 != 0) goto L_0x01c1
            org.telegram.messenger.VideoEditedInfo r2 = r5.videoEditedInfo
            if (r2 != 0) goto L_0x01c1
            java.lang.String r2 = r5.path
            java.lang.String r3 = r5.path
            if (r3 != 0) goto L_0x0052
            android.net.Uri r4 = r5.uri
            if (r4 == 0) goto L_0x0052
            android.net.Uri r4 = r5.uri
            java.lang.String r3 = org.telegram.messenger.AndroidUtilities.getPath(r4)
            android.net.Uri r4 = r5.uri
            java.lang.String r2 = r4.toString()
            r4 = r3
            goto L_0x0053
        L_0x0052:
            r4 = r3
        L_0x0053:
            r3 = 0
            if (r4 == 0) goto L_0x0087
            int r8 = r5.ttl
            if (r8 > 0) goto L_0x0087
            boolean r8 = r4.endsWith(r11)
            if (r8 != 0) goto L_0x0067
            boolean r8 = r4.endsWith(r12)
            r3 = r8
            if (r8 == 0) goto L_0x0087
        L_0x0067:
            int r8 = r76.size()
            if (r8 > r6) goto L_0x0083
            if (r3 == 0) goto L_0x007c
            boolean r8 = shouldSendWebPAsSticker(r4, r10)
            if (r8 == 0) goto L_0x0083
            r22 = r7
            r29 = r12
            r12 = 1
            goto L_0x01c7
        L_0x007c:
            r22 = r7
            r29 = r12
            r12 = 1
            goto L_0x01c7
        L_0x0083:
            r5.forceImage = r6
            r8 = r3
            goto L_0x00d6
        L_0x0087:
            java.lang.String r8 = r5.path
            android.net.Uri r10 = r5.uri
            boolean r8 = org.telegram.messenger.ImageLoader.shouldSendImageAsDocument(r8, r10)
            if (r8 == 0) goto L_0x0098
            r22 = r7
            r29 = r12
            r12 = 1
            goto L_0x01c7
        L_0x0098:
            if (r4 != 0) goto L_0x00d5
            android.net.Uri r8 = r5.uri
            if (r8 == 0) goto L_0x00d5
            android.net.Uri r8 = r5.uri
            boolean r8 = org.telegram.messenger.MediaController.isGif(r8)
            if (r8 != 0) goto L_0x00b2
            android.net.Uri r8 = r5.uri
            boolean r8 = org.telegram.messenger.MediaController.isWebp(r8)
            r3 = r8
            if (r8 == 0) goto L_0x00b0
            goto L_0x00b2
        L_0x00b0:
            r8 = r3
            goto L_0x00d6
        L_0x00b2:
            int r8 = r76.size()
            if (r8 > r6) goto L_0x00d1
            if (r3 == 0) goto L_0x00ca
            android.net.Uri r8 = r5.uri
            r10 = 0
            boolean r8 = shouldSendWebPAsSticker(r10, r8)
            if (r8 == 0) goto L_0x00d1
            r22 = r7
            r29 = r12
            r12 = 1
            goto L_0x01c7
        L_0x00ca:
            r22 = r7
            r29 = r12
            r12 = 1
            goto L_0x01c7
        L_0x00d1:
            r5.forceImage = r6
            r8 = r3
            goto L_0x00d6
        L_0x00d5:
            r8 = r3
        L_0x00d6:
            if (r4 == 0) goto L_0x00fe
            java.io.File r3 = new java.io.File
            r3.<init>(r4)
            java.lang.StringBuilder r10 = new java.lang.StringBuilder
            r10.<init>()
            r10.append(r2)
            r22 = r7
            long r6 = r3.length()
            r10.append(r6)
            r10.append(r9)
            long r6 = r3.lastModified()
            r10.append(r6)
            java.lang.String r2 = r10.toString()
            r10 = r2
            goto L_0x0102
        L_0x00fe:
            r22 = r7
            r2 = 0
            r10 = r2
        L_0x0102:
            r2 = 0
            r3 = 0
            if (r13 != 0) goto L_0x0193
            int r6 = r5.ttl
            if (r6 != 0) goto L_0x0193
            org.telegram.messenger.MessagesStorage r6 = r81.getMessagesStorage()
            if (r13 != 0) goto L_0x0112
            r7 = 0
            goto L_0x0113
        L_0x0112:
            r7 = 3
        L_0x0113:
            java.lang.Object[] r6 = r6.getSentFile(r10, r7)
            if (r6 == 0) goto L_0x012e
            r23 = r2
            r7 = 0
            r2 = r6[r7]
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r2 == 0) goto L_0x0130
            r2 = r6[r7]
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            r7 = 1
            r23 = r6[r7]
            r3 = r23
            java.lang.String r3 = (java.lang.String) r3
            goto L_0x0132
        L_0x012e:
            r23 = r2
        L_0x0130:
            r2 = r23
        L_0x0132:
            if (r2 != 0) goto L_0x016b
            android.net.Uri r7 = r5.uri
            if (r7 == 0) goto L_0x016b
            org.telegram.messenger.MessagesStorage r7 = r81.getMessagesStorage()
            r23 = r2
            android.net.Uri r2 = r5.uri
            java.lang.String r2 = org.telegram.messenger.AndroidUtilities.getPath(r2)
            r24 = r3
            if (r13 != 0) goto L_0x014a
            r3 = 0
            goto L_0x014b
        L_0x014a:
            r3 = 3
        L_0x014b:
            java.lang.Object[] r6 = r7.getSentFile(r2, r3)
            if (r6 == 0) goto L_0x0169
            r2 = 0
            r3 = r6[r2]
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r3 == 0) goto L_0x0169
            r3 = r6[r2]
            r2 = r3
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            r7 = 1
            r3 = r6[r7]
            java.lang.String r3 = (java.lang.String) r3
            r23 = r2
            r24 = r3
            r18 = r6
            goto L_0x0172
        L_0x0169:
            r7 = 1
            goto L_0x0170
        L_0x016b:
            r23 = r2
            r24 = r3
            r7 = 1
        L_0x0170:
            r18 = r6
        L_0x0172:
            java.lang.String r6 = r5.path
            android.net.Uri r3 = r5.uri
            r25 = 0
            r2 = r13
            r27 = r3
            r3 = r23
            r28 = r4
            r4 = r6
            r6 = r5
            r5 = r27
            r27 = r8
            r29 = r12
            r12 = 1
            r8 = r6
            r6 = r25
            ensureMediaThumbExists(r2, r3, r4, r5, r6)
            r2 = r23
            r3 = r24
            goto L_0x019f
        L_0x0193:
            r23 = r2
            r28 = r4
            r27 = r8
            r29 = r12
            r12 = 1
            r8 = r5
            r2 = r23
        L_0x019f:
            org.telegram.messenger.SendMessagesHelper$MediaSendPrepareWorker r4 = new org.telegram.messenger.SendMessagesHelper$MediaSendPrepareWorker
            r5 = 0
            r4.<init>()
            r0.put(r8, r4)
            if (r2 == 0) goto L_0x01af
            r4.parentObject = r3
            r4.photo = r2
            goto L_0x01c7
        L_0x01af:
            java.util.concurrent.CountDownLatch r5 = new java.util.concurrent.CountDownLatch
            r5.<init>(r12)
            r4.sync = r5
            java.util.concurrent.ThreadPoolExecutor r5 = mediaSendThreadPool
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda12 r6 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda12
            r6.<init>(r4, r15, r8, r13)
            r5.execute(r6)
            goto L_0x01c7
        L_0x01c1:
            r8 = r5
            r22 = r7
            r29 = r12
            r12 = 1
        L_0x01c7:
            int r7 = r22 + 1
            r12 = r29
            r6 = 1
            r10 = 0
            goto L_0x0025
        L_0x01cf:
            r22 = r7
            r29 = r12
            r12 = 1
            r10 = r0
            goto L_0x01db
        L_0x01d6:
            r29 = r12
            r12 = 1
            r0 = 0
            r10 = r0
        L_0x01db:
            r2 = 0
            r4 = 0
            r0 = 0
            r6 = 0
            r7 = 0
            r8 = 0
            r18 = 0
            r22 = 0
            r23 = 0
            r24 = 0
            r12 = r24
            r24 = r22
            r73 = r8
            r8 = r0
            r0 = r23
            r22 = r2
            r3 = r7
            r2 = r73
            r74 = r4
            r4 = r6
            r6 = r74
            r5 = r18
        L_0x0200:
            r26 = r2
            r25 = r3
            r27 = r6
            if (r12 >= r14) goto L_0x0ffc
            java.lang.Object r6 = r1.get(r12)
            org.telegram.messenger.SendMessagesHelper$SendingMediaInfo r6 = (org.telegram.messenger.SendMessagesHelper.SendingMediaInfo) r6
            if (r80 == 0) goto L_0x0227
            r7 = 1
            if (r14 <= r7) goto L_0x0227
            int r7 = r0 % 10
            if (r7 != 0) goto L_0x0227
            java.security.SecureRandom r7 = org.telegram.messenger.Utilities.random
            long r31 = r7.nextLong()
            r22 = r31
            r27 = r31
            r0 = 0
            r33 = r22
            r22 = r0
            goto L_0x022b
        L_0x0227:
            r33 = r22
            r22 = r0
        L_0x022b:
            org.telegram.messenger.MediaController$SearchImage r0 = r6.searchImage
            java.lang.String r7 = "video/mp4"
            java.lang.String r2 = "1"
            java.lang.String r3 = "final"
            java.lang.String r1 = "groupId"
            r35 = r4
            java.lang.String r4 = "mp4"
            r36 = r10
            java.lang.String r10 = "parentObject"
            r37 = r11
            java.lang.String r11 = "originalPath"
            r38 = r5
            java.lang.String r5 = ""
            r39 = r5
            java.lang.String r5 = "jpg"
            r40 = r8
            java.lang.String r8 = "."
            r41 = 4
            if (r0 == 0) goto L_0x061c
            org.telegram.messenger.VideoEditedInfo r0 = r6.videoEditedInfo
            if (r0 != 0) goto L_0x061c
            org.telegram.messenger.MediaController$SearchImage r0 = r6.searchImage
            int r0 = r0.type
            r42 = r9
            java.lang.String r9 = "x"
            r43 = r12
            r12 = 1
            if (r0 != r12) goto L_0x0462
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r1 = r0
            r0 = 0
            r30 = 0
            org.telegram.messenger.MediaController$SearchImage r2 = r6.searchImage
            org.telegram.tgnet.TLRPC$Document r2 = r2.document
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r2 == 0) goto L_0x0280
            org.telegram.messenger.MediaController$SearchImage r2 = r6.searchImage
            org.telegram.tgnet.TLRPC$Document r2 = r2.document
            r0 = r2
            org.telegram.tgnet.TLRPC$TL_document r0 = (org.telegram.tgnet.TLRPC.TL_document) r0
            r2 = 1
            java.io.File r3 = org.telegram.messenger.FileLoader.getPathToAttach(r0, r2)
            goto L_0x02ab
        L_0x0280:
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            org.telegram.messenger.MediaController$SearchImage r3 = r6.searchImage
            java.lang.String r3 = r3.imageUrl
            java.lang.String r3 = org.telegram.messenger.Utilities.MD5(r3)
            r2.append(r3)
            r2.append(r8)
            org.telegram.messenger.MediaController$SearchImage r3 = r6.searchImage
            java.lang.String r3 = r3.imageUrl
            java.lang.String r3 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r3, r5)
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            java.io.File r3 = new java.io.File
            java.io.File r12 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r3.<init>(r12, r2)
        L_0x02ab:
            if (r0 != 0) goto L_0x03d0
            r2 = 0
            org.telegram.tgnet.TLRPC$TL_document r12 = new org.telegram.tgnet.TLRPC$TL_document
            r12.<init>()
            r44 = r14
            r14 = 0
            r12.id = r14
            r14 = 0
            byte[] r0 = new byte[r14]
            r12.file_reference = r0
            org.telegram.tgnet.ConnectionsManager r0 = r81.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r12.date = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeFilename r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeFilename
            r0.<init>()
            r14 = r0
            java.lang.String r0 = "animation.gif"
            r14.file_name = r0
            java.util.ArrayList r0 = r12.attributes
            r0.add(r14)
            org.telegram.messenger.MediaController$SearchImage r0 = r6.searchImage
            int r0 = r0.size
            r12.size = r0
            r15 = 0
            r12.dc_id = r15
            if (r79 != 0) goto L_0x02f9
            java.lang.String r0 = r3.toString()
            boolean r0 = r0.endsWith(r4)
            if (r0 == 0) goto L_0x02f9
            r12.mime_type = r7
            java.util.ArrayList r0 = r12.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r7 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r7.<init>()
            r0.add(r7)
            goto L_0x02fd
        L_0x02f9:
            java.lang.String r0 = "image/gif"
            r12.mime_type = r0
        L_0x02fd:
            boolean r0 = r3.exists()
            if (r0 == 0) goto L_0x0305
            r2 = r3
            goto L_0x0307
        L_0x0305:
            r0 = 0
            r3 = r0
        L_0x0307:
            if (r2 != 0) goto L_0x033c
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            org.telegram.messenger.MediaController$SearchImage r7 = r6.searchImage
            java.lang.String r7 = r7.thumbUrl
            java.lang.String r7 = org.telegram.messenger.Utilities.MD5(r7)
            r0.append(r7)
            r0.append(r8)
            org.telegram.messenger.MediaController$SearchImage r7 = r6.searchImage
            java.lang.String r7 = r7.thumbUrl
            java.lang.String r5 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r7, r5)
            r0.append(r5)
            java.lang.String r0 = r0.toString()
            java.io.File r5 = new java.io.File
            java.io.File r7 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r5.<init>(r7, r0)
            r2 = r5
            boolean r5 = r2.exists()
            if (r5 != 0) goto L_0x033c
            r2 = 0
        L_0x033c:
            if (r2 == 0) goto L_0x0395
            if (r13 != 0) goto L_0x034b
            int r0 = r6.ttl     // Catch:{ Exception -> 0x0348 }
            if (r0 == 0) goto L_0x0345
            goto L_0x034b
        L_0x0345:
            r0 = 320(0x140, float:4.48E-43)
            goto L_0x034d
        L_0x0348:
            r0 = move-exception
            r15 = 0
            goto L_0x0391
        L_0x034b:
            r0 = 90
        L_0x034d:
            java.lang.String r5 = r2.getAbsolutePath()     // Catch:{ Exception -> 0x0348 }
            boolean r4 = r5.endsWith(r4)     // Catch:{ Exception -> 0x0348 }
            if (r4 == 0) goto L_0x0362
            java.lang.String r4 = r2.getAbsolutePath()     // Catch:{ Exception -> 0x0348 }
            r5 = 1
            android.graphics.Bitmap r4 = createVideoThumbnail(r4, r5)     // Catch:{ Exception -> 0x0348 }
            r15 = 0
            goto L_0x036e
        L_0x0362:
            java.lang.String r4 = r2.getAbsolutePath()     // Catch:{ Exception -> 0x0348 }
            float r5 = (float) r0
            float r7 = (float) r0
            r8 = 1
            r15 = 0
            android.graphics.Bitmap r4 = org.telegram.messenger.ImageLoader.loadBitmap(r4, r15, r5, r7, r8)     // Catch:{ Exception -> 0x0390 }
        L_0x036e:
            if (r4 == 0) goto L_0x038f
            float r5 = (float) r0     // Catch:{ Exception -> 0x0390 }
            float r7 = (float) r0     // Catch:{ Exception -> 0x0390 }
            r8 = 90
            if (r0 <= r8) goto L_0x0379
            r8 = 80
            goto L_0x037b
        L_0x0379:
            r8 = 55
        L_0x037b:
            org.telegram.tgnet.TLRPC$PhotoSize r5 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r4, r5, r7, r8, r13)     // Catch:{ Exception -> 0x0390 }
            if (r5 == 0) goto L_0x038c
            java.util.ArrayList r7 = r12.thumbs     // Catch:{ Exception -> 0x0390 }
            r7.add(r5)     // Catch:{ Exception -> 0x0390 }
            int r7 = r12.flags     // Catch:{ Exception -> 0x0390 }
            r8 = 1
            r7 = r7 | r8
            r12.flags = r7     // Catch:{ Exception -> 0x0390 }
        L_0x038c:
            r4.recycle()     // Catch:{ Exception -> 0x0390 }
        L_0x038f:
            goto L_0x0396
        L_0x0390:
            r0 = move-exception
        L_0x0391:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x0396
        L_0x0395:
            r15 = 0
        L_0x0396:
            java.util.ArrayList r0 = r12.thumbs
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x03c9
            org.telegram.tgnet.TLRPC$TL_photoSize r0 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r0.<init>()
            org.telegram.messenger.MediaController$SearchImage r4 = r6.searchImage
            int r4 = r4.width
            r0.w = r4
            org.telegram.messenger.MediaController$SearchImage r4 = r6.searchImage
            int r4 = r4.height
            r0.h = r4
            r8 = 0
            r0.size = r8
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r4 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r4.<init>()
            r0.location = r4
            r0.type = r9
            java.util.ArrayList r4 = r12.thumbs
            r4.add(r0)
            int r4 = r12.flags
            r16 = 1
            r4 = r4 | 1
            r12.flags = r4
            goto L_0x03cc
        L_0x03c9:
            r8 = 0
            r16 = 1
        L_0x03cc:
            r17 = r3
            r0 = r12
            goto L_0x03d8
        L_0x03d0:
            r44 = r14
            r8 = 0
            r15 = 0
            r16 = 1
            r17 = r3
        L_0x03d8:
            r14 = r38
            r5 = r0
            r12 = r30
            org.telegram.messenger.MediaController$SearchImage r2 = r6.searchImage
            java.lang.String r9 = r2.imageUrl
            if (r17 != 0) goto L_0x03e8
            org.telegram.messenger.MediaController$SearchImage r2 = r6.searchImage
            java.lang.String r2 = r2.imageUrl
            goto L_0x03ec
        L_0x03e8:
            java.lang.String r2 = r17.toString()
        L_0x03ec:
            r7 = r6
            r6 = r2
            org.telegram.messenger.MediaController$SearchImage r2 = r7.searchImage
            java.lang.String r2 = r2.imageUrl
            if (r2 == 0) goto L_0x03fb
            org.telegram.messenger.MediaController$SearchImage r2 = r7.searchImage
            java.lang.String r2 = r2.imageUrl
            r1.put(r11, r2)
        L_0x03fb:
            if (r12 == 0) goto L_0x0400
            r1.put(r10, r12)
        L_0x0400:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4 r18 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4
            r11 = r26
            r2 = r18
            r10 = r25
            r3 = r82
            r45 = r35
            r4 = r81
            r23 = r7
            r7 = r1
            r25 = r1
            r46 = r40
            r1 = 0
            r8 = r12
            r26 = r9
            r1 = r15
            r47 = r36
            r48 = r42
            r15 = r10
            r9 = r77
            r49 = r11
            r50 = r37
            r11 = r83
            r16 = r12
            r52 = r29
            r51 = r43
            r12 = r84
            r1 = r13
            r13 = r23
            r54 = r14
            r53 = r44
            r14 = r85
            r55 = r15
            r15 = r86
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r11, r12, r13, r14, r15)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r18)
            r0 = r22
            r6 = r27
            r56 = r33
            r4 = r45
            r8 = r46
            r25 = r47
            r2 = r49
            r38 = r50
            r34 = r51
            r30 = r52
            r71 = r53
            r5 = r54
            r3 = r55
            r43 = 0
            r47 = r1
            goto L_0x0fe6
        L_0x0462:
            r12 = r1
            r23 = r6
            r1 = r13
            r53 = r14
            r55 = r25
            r49 = r26
            r52 = r29
            r45 = r35
            r47 = r36
            r50 = r37
            r54 = r38
            r46 = r40
            r48 = r42
            r51 = r43
            r0 = 1
            r4 = 0
            r16 = 0
            r15 = r23
            org.telegram.messenger.MediaController$SearchImage r6 = r15.searchImage
            org.telegram.tgnet.TLRPC$Photo r6 = r6.photo
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r6 == 0) goto L_0x0492
            org.telegram.messenger.MediaController$SearchImage r6 = r15.searchImage
            org.telegram.tgnet.TLRPC$Photo r6 = r6.photo
            r4 = r6
            org.telegram.tgnet.TLRPC$TL_photo r4 = (org.telegram.tgnet.TLRPC.TL_photo) r4
            goto L_0x0496
        L_0x0492:
            if (r1 != 0) goto L_0x0496
            int r6 = r15.ttl
        L_0x0496:
            if (r4 != 0) goto L_0x056f
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            org.telegram.messenger.MediaController$SearchImage r7 = r15.searchImage
            java.lang.String r7 = r7.imageUrl
            java.lang.String r7 = org.telegram.messenger.Utilities.MD5(r7)
            r6.append(r7)
            r6.append(r8)
            org.telegram.messenger.MediaController$SearchImage r7 = r15.searchImage
            java.lang.String r7 = r7.imageUrl
            java.lang.String r7 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r7, r5)
            r6.append(r7)
            java.lang.String r6 = r6.toString()
            java.io.File r7 = new java.io.File
            java.io.File r13 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r7.<init>(r13, r6)
            boolean r13 = r7.exists()
            if (r13 == 0) goto L_0x04e9
            long r13 = r7.length()
            r17 = 0
            int r23 = (r13 > r17 ? 1 : (r13 == r17 ? 0 : -1))
            if (r23 == 0) goto L_0x04e9
            org.telegram.messenger.SendMessagesHelper r13 = r81.getSendMessagesHelper()
            java.lang.String r14 = r7.toString()
            r17 = r4
            r4 = 0
            org.telegram.tgnet.TLRPC$TL_photo r13 = r13.generatePhotoSizes(r14, r4)
            if (r13 == 0) goto L_0x04e7
            r0 = 0
            r4 = r13
            goto L_0x04ed
        L_0x04e7:
            r4 = r13
            goto L_0x04ed
        L_0x04e9:
            r17 = r4
            r4 = r17
        L_0x04ed:
            if (r4 != 0) goto L_0x056c
            java.lang.StringBuilder r13 = new java.lang.StringBuilder
            r13.<init>()
            org.telegram.messenger.MediaController$SearchImage r14 = r15.searchImage
            java.lang.String r14 = r14.thumbUrl
            java.lang.String r14 = org.telegram.messenger.Utilities.MD5(r14)
            r13.append(r14)
            r13.append(r8)
            org.telegram.messenger.MediaController$SearchImage r8 = r15.searchImage
            java.lang.String r8 = r8.thumbUrl
            java.lang.String r5 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r8, r5)
            r13.append(r5)
            java.lang.String r5 = r13.toString()
            java.io.File r6 = new java.io.File
            java.io.File r8 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r6.<init>(r8, r5)
            boolean r7 = r6.exists()
            if (r7 == 0) goto L_0x052d
            org.telegram.messenger.SendMessagesHelper r7 = r81.getSendMessagesHelper()
            java.lang.String r8 = r6.toString()
            r13 = 0
            org.telegram.tgnet.TLRPC$TL_photo r4 = r7.generatePhotoSizes(r8, r13)
        L_0x052d:
            if (r4 != 0) goto L_0x0569
            org.telegram.tgnet.TLRPC$TL_photo r7 = new org.telegram.tgnet.TLRPC$TL_photo
            r7.<init>()
            r4 = r7
            org.telegram.tgnet.ConnectionsManager r7 = r81.getConnectionsManager()
            int r7 = r7.getCurrentTime()
            r4.date = r7
            r7 = 0
            byte[] r8 = new byte[r7]
            r4.file_reference = r8
            org.telegram.tgnet.TLRPC$TL_photoSize r7 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r7.<init>()
            org.telegram.messenger.MediaController$SearchImage r8 = r15.searchImage
            int r8 = r8.width
            r7.w = r8
            org.telegram.messenger.MediaController$SearchImage r8 = r15.searchImage
            int r8 = r8.height
            r7.h = r8
            r8 = 0
            r7.size = r8
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r8 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r8.<init>()
            r7.location = r8
            r7.type = r9
            java.util.ArrayList r8 = r4.sizes
            r8.add(r7)
            r17 = r4
            goto L_0x0571
        L_0x0569:
            r17 = r4
            goto L_0x0571
        L_0x056c:
            r17 = r4
            goto L_0x0571
        L_0x056f:
            r17 = r4
        L_0x0571:
            if (r17 == 0) goto L_0x05f5
            r13 = r39
            r5 = r17
            r14 = r16
            r6 = r0
            java.util.HashMap r4 = new java.util.HashMap
            r4.<init>()
            r9 = r4
            org.telegram.messenger.MediaController$SearchImage r4 = r15.searchImage
            java.lang.String r4 = r4.imageUrl
            if (r4 == 0) goto L_0x058d
            org.telegram.messenger.MediaController$SearchImage r4 = r15.searchImage
            java.lang.String r4 = r4.imageUrl
            r9.put(r11, r4)
        L_0x058d:
            if (r14 == 0) goto L_0x0592
            r9.put(r10, r14)
        L_0x0592:
            if (r80 == 0) goto L_0x05c6
            int r4 = r22 + 1
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            r7.append(r13)
            r10 = r33
            r7.append(r10)
            java.lang.String r7 = r7.toString()
            r9.put(r12, r7)
            r7 = 10
            if (r4 == r7) goto L_0x05ba
            r13 = r53
            int r7 = r13 + -1
            r12 = r51
            if (r12 != r7) goto L_0x05b7
            goto L_0x05be
        L_0x05b7:
            r22 = r4
            goto L_0x05cc
        L_0x05ba:
            r12 = r51
            r13 = r53
        L_0x05be:
            r9.put(r3, r2)
            r27 = 0
            r22 = r4
            goto L_0x05cc
        L_0x05c6:
            r10 = r33
            r12 = r51
            r13 = r53
        L_0x05cc:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6 r18 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
            r2 = r18
            r3 = r82
            r4 = r81
            r7 = r15
            r8 = r9
            r23 = r9
            r9 = r14
            r56 = r10
            r10 = r77
            r58 = r12
            r12 = r83
            r59 = r13
            r13 = r84
            r25 = r14
            r14 = r85
            r26 = r1
            r1 = r15
            r15 = r86
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r18)
            goto L_0x05fe
        L_0x05f5:
            r26 = r1
            r1 = r15
            r56 = r33
            r58 = r51
            r59 = r53
        L_0x05fe:
            r0 = r22
            r6 = r27
            r4 = r45
            r8 = r46
            r25 = r47
            r2 = r49
            r38 = r50
            r30 = r52
            r5 = r54
            r3 = r55
            r34 = r58
            r71 = r59
            r43 = 0
            r47 = r26
            goto L_0x0fe6
        L_0x061c:
            r48 = r9
            r58 = r12
            r59 = r14
            r55 = r25
            r49 = r26
            r52 = r29
            r56 = r33
            r45 = r35
            r47 = r36
            r50 = r37
            r54 = r38
            r46 = r40
            r0 = 90
            r12 = r1
            r1 = r6
            r26 = r13
            r13 = r39
            r6 = 10
            boolean r9 = r1.isVideo
            if (r9 != 0) goto L_0x0b1e
            org.telegram.messenger.VideoEditedInfo r9 = r1.videoEditedInfo
            if (r9 == 0) goto L_0x065b
            r9 = r1
            r1 = r2
            r15 = r3
            r14 = r46
            r25 = r47
            r62 = r48
            r38 = r50
            r30 = r52
            r64 = r56
            r66 = r58
            r67 = r59
            goto L_0x0b31
        L_0x065b:
            java.lang.String r0 = r1.path
            java.lang.String r4 = r1.path
            if (r4 != 0) goto L_0x068a
            android.net.Uri r5 = r1.uri
            if (r5 == 0) goto L_0x068a
            int r5 = android.os.Build.VERSION.SDK_INT
            r7 = 30
            if (r5 < r7) goto L_0x067b
            android.net.Uri r5 = r1.uri
            java.lang.String r5 = r5.getScheme()
            java.lang.String r7 = "content"
            boolean r5 = r7.equals(r5)
            if (r5 == 0) goto L_0x067b
            r4 = 0
            goto L_0x0681
        L_0x067b:
            android.net.Uri r5 = r1.uri
            java.lang.String r4 = org.telegram.messenger.AndroidUtilities.getPath(r5)
        L_0x0681:
            android.net.Uri r5 = r1.uri
            java.lang.String r0 = r5.toString()
            r5 = r4
            r4 = r0
            goto L_0x068c
        L_0x068a:
            r5 = r4
            r4 = r0
        L_0x068c:
            r7 = 0
            if (r87 == 0) goto L_0x0750
            android.net.Uri r0 = r1.uri
            if (r0 == 0) goto L_0x0750
            android.content.ClipDescription r8 = r87.getDescription()
            java.lang.String r0 = "image/png"
            boolean r0 = r8.hasMimeType(r0)
            if (r0 == 0) goto L_0x0747
            r9 = 0
            r14 = 0
            android.graphics.BitmapFactory$Options r0 = new android.graphics.BitmapFactory$Options     // Catch:{ all -> 0x0714 }
            r0.<init>()     // Catch:{ all -> 0x0714 }
            android.content.Context r15 = org.telegram.messenger.ApplicationLoader.applicationContext     // Catch:{ all -> 0x0714 }
            android.content.ContentResolver r15 = r15.getContentResolver()     // Catch:{ all -> 0x0714 }
            android.net.Uri r6 = r1.uri     // Catch:{ all -> 0x0714 }
            java.io.InputStream r6 = r15.openInputStream(r6)     // Catch:{ all -> 0x0714 }
            r9 = r6
            r6 = 0
            android.graphics.Bitmap r15 = android.graphics.BitmapFactory.decodeStream(r9, r6, r0)     // Catch:{ all -> 0x0714 }
            r6 = r15
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ all -> 0x0714 }
            r15.<init>()     // Catch:{ all -> 0x0714 }
            r16 = r0
            java.lang.String r0 = "-2147483648_"
            r15.append(r0)     // Catch:{ all -> 0x0714 }
            int r0 = org.telegram.messenger.SharedConfig.getLastLocalId()     // Catch:{ all -> 0x0714 }
            r15.append(r0)     // Catch:{ all -> 0x0714 }
            r17 = r7
            r7 = r52
            r15.append(r7)     // Catch:{ all -> 0x070e }
            java.lang.String r0 = r15.toString()     // Catch:{ all -> 0x070e }
            java.io.File r15 = org.telegram.messenger.FileLoader.getDirectory(r41)     // Catch:{ all -> 0x070e }
            r18 = r2
            java.io.File r2 = new java.io.File     // Catch:{ all -> 0x070c }
            r2.<init>(r15, r0)     // Catch:{ all -> 0x070c }
            r23 = r0
            java.io.FileOutputStream r0 = new java.io.FileOutputStream     // Catch:{ all -> 0x070c }
            r0.<init>(r2)     // Catch:{ all -> 0x070c }
            r14 = r0
            android.graphics.Bitmap$CompressFormat r0 = android.graphics.Bitmap.CompressFormat.WEBP     // Catch:{ all -> 0x070c }
            r25 = r3
            r3 = 100
            r6.compress(r0, r3, r14)     // Catch:{ all -> 0x070a }
            org.telegram.messenger.SharedConfig.saveConfig()     // Catch:{ all -> 0x070a }
            android.net.Uri r0 = android.net.Uri.fromFile(r2)     // Catch:{ all -> 0x070a }
            r1.uri = r0     // Catch:{ all -> 0x070a }
            if (r9 == 0) goto L_0x0704
            r9.close()     // Catch:{ Exception -> 0x0702 }
            goto L_0x0704
        L_0x0702:
            r0 = move-exception
            goto L_0x0705
        L_0x0704:
        L_0x0705:
            r14.close()     // Catch:{ Exception -> 0x072f }
            goto L_0x0731
        L_0x070a:
            r0 = move-exception
            goto L_0x071d
        L_0x070c:
            r0 = move-exception
            goto L_0x0711
        L_0x070e:
            r0 = move-exception
            r18 = r2
        L_0x0711:
            r25 = r3
            goto L_0x071d
        L_0x0714:
            r0 = move-exception
            r18 = r2
            r25 = r3
            r17 = r7
            r7 = r52
        L_0x071d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0732 }
            if (r9 == 0) goto L_0x0728
            r9.close()     // Catch:{ Exception -> 0x0726 }
            goto L_0x0728
        L_0x0726:
            r0 = move-exception
            goto L_0x0729
        L_0x0728:
        L_0x0729:
            if (r14 == 0) goto L_0x0731
            r14.close()     // Catch:{ Exception -> 0x072f }
            goto L_0x0731
        L_0x072f:
            r0 = move-exception
            goto L_0x0758
        L_0x0731:
            goto L_0x0758
        L_0x0732:
            r0 = move-exception
            r2 = r0
            if (r9 == 0) goto L_0x073c
            r9.close()     // Catch:{ Exception -> 0x073a }
            goto L_0x073c
        L_0x073a:
            r0 = move-exception
            goto L_0x073d
        L_0x073c:
        L_0x073d:
            if (r14 == 0) goto L_0x0745
            r14.close()     // Catch:{ Exception -> 0x0743 }
            goto L_0x0745
        L_0x0743:
            r0 = move-exception
            goto L_0x0746
        L_0x0745:
        L_0x0746:
            throw r2
        L_0x0747:
            r18 = r2
            r25 = r3
            r17 = r7
            r7 = r52
            goto L_0x0758
        L_0x0750:
            r18 = r2
            r25 = r3
            r17 = r7
            r7 = r52
        L_0x0758:
            if (r79 != 0) goto L_0x07dc
            java.lang.String r0 = r1.path
            android.net.Uri r2 = r1.uri
            boolean r0 = org.telegram.messenger.ImageLoader.shouldSendImageAsDocument(r0, r2)
            if (r0 == 0) goto L_0x0768
            r15 = r50
            goto L_0x07de
        L_0x0768:
            boolean r0 = r1.forceImage
            if (r0 != 0) goto L_0x0794
            if (r5 == 0) goto L_0x0794
            r15 = r50
            boolean r0 = r5.endsWith(r15)
            if (r0 != 0) goto L_0x077c
            boolean r0 = r5.endsWith(r7)
            if (r0 == 0) goto L_0x0796
        L_0x077c:
            int r0 = r1.ttl
            if (r0 > 0) goto L_0x0796
            boolean r0 = r5.endsWith(r15)
            if (r0 == 0) goto L_0x078b
            java.lang.String r0 = "gif"
            r24 = r0
            goto L_0x078f
        L_0x078b:
            java.lang.String r0 = "webp"
            r24 = r0
        L_0x078f:
            r0 = 1
            r17 = r0
            r14 = r5
            goto L_0x07f1
        L_0x0794:
            r15 = r50
        L_0x0796:
            boolean r0 = r1.forceImage
            if (r0 != 0) goto L_0x07da
            if (r5 != 0) goto L_0x07da
            android.net.Uri r0 = r1.uri
            if (r0 == 0) goto L_0x07da
            android.net.Uri r0 = r1.uri
            boolean r0 = org.telegram.messenger.MediaController.isGif(r0)
            if (r0 == 0) goto L_0x07bd
            r0 = 1
            android.net.Uri r2 = r1.uri
            java.lang.String r4 = r2.toString()
            android.net.Uri r2 = r1.uri
            java.lang.String r3 = "gif"
            java.lang.String r5 = org.telegram.messenger.MediaController.copyFileToCache(r2, r3)
            java.lang.String r24 = "gif"
            r17 = r0
            r14 = r5
            goto L_0x07f1
        L_0x07bd:
            android.net.Uri r0 = r1.uri
            boolean r0 = org.telegram.messenger.MediaController.isWebp(r0)
            if (r0 == 0) goto L_0x07da
            r0 = 1
            android.net.Uri r2 = r1.uri
            java.lang.String r4 = r2.toString()
            android.net.Uri r2 = r1.uri
            java.lang.String r3 = "webp"
            java.lang.String r5 = org.telegram.messenger.MediaController.copyFileToCache(r2, r3)
            java.lang.String r24 = "webp"
            r17 = r0
            r14 = r5
            goto L_0x07f1
        L_0x07da:
            r14 = r5
            goto L_0x07f1
        L_0x07dc:
            r15 = r50
        L_0x07de:
            r0 = 1
            if (r5 == 0) goto L_0x07eb
            java.io.File r2 = new java.io.File
            r2.<init>(r5)
            java.lang.String r2 = org.telegram.messenger.FileLoader.getFileExtension(r2)
            goto L_0x07ec
        L_0x07eb:
            r2 = r13
        L_0x07ec:
            r24 = r2
            r17 = r0
            r14 = r5
        L_0x07f1:
            if (r17 == 0) goto L_0x0846
            r9 = r46
            if (r9 != 0) goto L_0x0813
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r8 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            r5 = r3
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            goto L_0x081c
        L_0x0813:
            r8 = r9
            r0 = r45
            r2 = r49
            r5 = r54
            r3 = r55
        L_0x081c:
            r8.add(r14)
            r0.add(r4)
            android.net.Uri r6 = r1.uri
            r3.add(r6)
            java.lang.String r6 = r1.caption
            r2.add(r6)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r6 = r1.entities
            r5.add(r6)
            r4 = r0
            r30 = r7
            r38 = r15
            r0 = r22
            r6 = r27
            r25 = r47
            r34 = r58
            r71 = r59
            r43 = 0
            r47 = r26
            goto L_0x0fe6
        L_0x0846:
            r9 = r46
            if (r14 == 0) goto L_0x0870
            java.io.File r0 = new java.io.File
            r0.<init>(r14)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r4)
            long r5 = r0.length()
            r2.append(r5)
            r8 = r48
            r2.append(r8)
            long r5 = r0.lastModified()
            r2.append(r5)
            java.lang.String r0 = r2.toString()
            r6 = r0
            goto L_0x0874
        L_0x0870:
            r8 = r48
            r0 = 0
            r6 = r0
        L_0x0874:
            r0 = 0
            r2 = 0
            r5 = r47
            if (r5 == 0) goto L_0x08a8
            java.lang.Object r3 = r5.get(r1)
            org.telegram.messenger.SendMessagesHelper$MediaSendPrepareWorker r3 = (org.telegram.messenger.SendMessagesHelper.MediaSendPrepareWorker) r3
            org.telegram.tgnet.TLRPC$TL_photo r4 = r3.photo
            java.lang.String r2 = r3.parentObject
            if (r4 != 0) goto L_0x0894
            java.util.concurrent.CountDownLatch r0 = r3.sync     // Catch:{ Exception -> 0x088c }
            r0.await()     // Catch:{ Exception -> 0x088c }
            goto L_0x0890
        L_0x088c:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0890:
            org.telegram.tgnet.TLRPC$TL_photo r4 = r3.photo
            java.lang.String r2 = r3.parentObject
        L_0x0894:
            r23 = r2
            r30 = r7
            r50 = r15
            r60 = r18
            r61 = r25
            r7 = r4
            r25 = r5
            r15 = r6
            r18 = r14
            r14 = 10
            goto L_0x097d
        L_0x08a8:
            if (r26 != 0) goto L_0x0945
            int r3 = r1.ttl
            if (r3 != 0) goto L_0x0945
            org.telegram.messenger.MessagesStorage r3 = r81.getMessagesStorage()
            if (r26 != 0) goto L_0x08b6
            r4 = 0
            goto L_0x08b7
        L_0x08b6:
            r4 = 3
        L_0x08b7:
            java.lang.Object[] r3 = r3.getSentFile(r6, r4)
            if (r3 == 0) goto L_0x08d4
            r16 = r0
            r4 = 0
            r0 = r3[r4]
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r0 == 0) goto L_0x08d2
            r0 = r3[r4]
            org.telegram.tgnet.TLRPC$TL_photo r0 = (org.telegram.tgnet.TLRPC.TL_photo) r0
            r4 = 1
            r16 = r3[r4]
            r2 = r16
            java.lang.String r2 = (java.lang.String) r2
            goto L_0x08d9
        L_0x08d2:
            r4 = 1
            goto L_0x08d7
        L_0x08d4:
            r16 = r0
            r4 = 1
        L_0x08d7:
            r0 = r16
        L_0x08d9:
            if (r0 != 0) goto L_0x0915
            android.net.Uri r4 = r1.uri
            if (r4 == 0) goto L_0x090f
            org.telegram.messenger.MessagesStorage r4 = r81.getMessagesStorage()
            r16 = r0
            android.net.Uri r0 = r1.uri
            java.lang.String r0 = org.telegram.messenger.AndroidUtilities.getPath(r0)
            r23 = r2
            if (r26 != 0) goto L_0x08f1
            r2 = 0
            goto L_0x08f2
        L_0x08f1:
            r2 = 3
        L_0x08f2:
            java.lang.Object[] r3 = r4.getSentFile(r0, r2)
            if (r3 == 0) goto L_0x090d
            r2 = 0
            r0 = r3[r2]
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r0 == 0) goto L_0x090d
            r0 = r3[r2]
            org.telegram.tgnet.TLRPC$TL_photo r0 = (org.telegram.tgnet.TLRPC.TL_photo) r0
            r4 = 1
            r2 = r3[r4]
            java.lang.String r2 = (java.lang.String) r2
            r23 = r2
            r16 = r3
            goto L_0x091d
        L_0x090d:
            r4 = 1
            goto L_0x0919
        L_0x090f:
            r16 = r0
            r23 = r2
            r4 = 1
            goto L_0x0919
        L_0x0915:
            r16 = r0
            r23 = r2
        L_0x0919:
            r0 = r16
            r16 = r3
        L_0x091d:
            java.lang.String r3 = r1.path
            android.net.Uri r2 = r1.uri
            r31 = 0
            r60 = r18
            r18 = r2
            r2 = r26
            r61 = r25
            r25 = r3
            r3 = r0
            r4 = r25
            r25 = r5
            r5 = r18
            r30 = r7
            r18 = r14
            r50 = r15
            r14 = 10
            r15 = r6
            r6 = r31
            ensureMediaThumbExists(r2, r3, r4, r5, r6)
            r2 = r23
            goto L_0x0958
        L_0x0945:
            r16 = r0
            r30 = r7
            r50 = r15
            r60 = r18
            r61 = r25
            r25 = r5
            r15 = r6
            r18 = r14
            r14 = 10
            r0 = r16
        L_0x0958:
            if (r0 != 0) goto L_0x097a
            org.telegram.messenger.SendMessagesHelper r3 = r81.getSendMessagesHelper()
            java.lang.String r4 = r1.path
            android.net.Uri r5 = r1.uri
            org.telegram.tgnet.TLRPC$TL_photo r4 = r3.generatePhotoSizes(r4, r5)
            if (r26 == 0) goto L_0x0976
            boolean r0 = r1.canDeleteAfter
            if (r0 == 0) goto L_0x0976
            java.io.File r0 = new java.io.File
            java.lang.String r3 = r1.path
            r0.<init>(r3)
            r0.delete()
        L_0x0976:
            r23 = r2
            r7 = r4
            goto L_0x097d
        L_0x097a:
            r7 = r0
            r23 = r2
        L_0x097d:
            if (r7 == 0) goto L_0x0ab4
            r6 = r7
            r5 = r23
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r4 = r0
            r3 = 1
            android.graphics.Bitmap[] r2 = new android.graphics.Bitmap[r3]
            java.lang.String[] r14 = new java.lang.String[r3]
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r0 = r1.masks
            if (r0 == 0) goto L_0x099b
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r0 = r1.masks
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x099b
            r0 = 1
            goto L_0x099c
        L_0x099b:
            r0 = 0
        L_0x099c:
            r7.has_stickers = r0
            if (r0 == 0) goto L_0x09e4
            org.telegram.tgnet.SerializedData r0 = new org.telegram.tgnet.SerializedData
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r3 = r1.masks
            int r3 = r3.size()
            int r3 = r3 * 20
            int r3 = r3 + 4
            r0.<init>((int) r3)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r3 = r1.masks
            int r3 = r3.size()
            r0.writeInt32(r3)
            r3 = 0
        L_0x09b9:
            r31 = r7
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r7 = r1.masks
            int r7 = r7.size()
            if (r3 >= r7) goto L_0x09d3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r7 = r1.masks
            java.lang.Object r7 = r7.get(r3)
            org.telegram.tgnet.TLRPC$InputDocument r7 = (org.telegram.tgnet.TLRPC.InputDocument) r7
            r7.serializeToStream(r0)
            int r3 = r3 + 1
            r7 = r31
            goto L_0x09b9
        L_0x09d3:
            byte[] r3 = r0.toByteArray()
            java.lang.String r3 = org.telegram.messenger.Utilities.bytesToHex(r3)
            java.lang.String r7 = "masks"
            r4.put(r7, r3)
            r0.cleanup()
            goto L_0x09e6
        L_0x09e4:
            r31 = r7
        L_0x09e6:
            if (r15 == 0) goto L_0x09eb
            r4.put(r11, r15)
        L_0x09eb:
            if (r5 == 0) goto L_0x09f0
            r4.put(r10, r5)
        L_0x09f0:
            if (r80 == 0) goto L_0x09fd
            int r0 = r76.size()     // Catch:{ Exception -> 0x09fa }
            r3 = 1
            if (r0 != r3) goto L_0x0a11
            goto L_0x09fe
        L_0x09fa:
            r0 = move-exception
            r3 = 1
            goto L_0x0a13
        L_0x09fd:
            r3 = 1
        L_0x09fe:
            java.util.ArrayList r0 = r6.sizes     // Catch:{ Exception -> 0x0a12 }
            int r7 = org.telegram.messenger.AndroidUtilities.getPhotoSize()     // Catch:{ Exception -> 0x0a12 }
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r0, r7)     // Catch:{ Exception -> 0x0a12 }
            if (r0 == 0) goto L_0x0a11
            r7 = 0
            java.lang.String r10 = getKeyForPhotoSize(r0, r2, r7, r7)     // Catch:{ Exception -> 0x0a12 }
            r14[r7] = r10     // Catch:{ Exception -> 0x0a12 }
        L_0x0a11:
            goto L_0x0a16
        L_0x0a12:
            r0 = move-exception
        L_0x0a13:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0a16:
            if (r80 == 0) goto L_0x0a52
            int r0 = r22 + 1
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            r7.append(r13)
            r10 = r56
            r7.append(r10)
            java.lang.String r7 = r7.toString()
            r4.put(r12, r7)
            r7 = 10
            if (r0 == r7) goto L_0x0a40
            r13 = r59
            int r7 = r13 + -1
            r12 = r58
            if (r12 != r7) goto L_0x0a3b
            goto L_0x0a44
        L_0x0a3b:
            r22 = r0
            r16 = r15
            goto L_0x0a5a
        L_0x0a40:
            r12 = r58
            r13 = r59
        L_0x0a44:
            r16 = r15
            r7 = r60
            r15 = r61
            r4.put(r15, r7)
            r27 = 0
            r22 = r0
            goto L_0x0a5a
        L_0x0a52:
            r16 = r15
            r10 = r56
            r12 = r58
            r13 = r59
        L_0x0a5a:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71 r0 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71
            r32 = r2
            r2 = r0
            r15 = 1
            r3 = r32
            r33 = r4
            r4 = r14
            r34 = r5
            r5 = r82
            r36 = r6
            r6 = r81
            r7 = r36
            r62 = r8
            r8 = r33
            r63 = r9
            r9 = r34
            r64 = r10
            r10 = r77
            r66 = r12
            r12 = r83
            r67 = r13
            r13 = r84
            r68 = r18
            r18 = r14
            r14 = r1
            r37 = r1
            r1 = r16
            r38 = r50
            r15 = r85
            r16 = r86
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15, r16)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            r0 = r22
            r47 = r26
            r6 = r27
            r4 = r45
            r2 = r49
            r5 = r54
            r3 = r55
            r48 = r62
            r8 = r63
            r56 = r64
            r34 = r66
            r71 = r67
            r43 = 0
            goto L_0x0fe6
        L_0x0ab4:
            r37 = r1
            r31 = r7
            r62 = r8
            r63 = r9
            r1 = r15
            r68 = r18
            r38 = r50
            r64 = r56
            r66 = r58
            r67 = r59
            r14 = r63
            if (r14 != 0) goto L_0x0aea
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r8 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r4 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r2 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r5 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r3 = r0
            goto L_0x0af3
        L_0x0aea:
            r8 = r14
            r4 = r45
            r2 = r49
            r5 = r54
            r3 = r55
        L_0x0af3:
            r6 = r68
            r8.add(r6)
            r4.add(r1)
            r9 = r37
            android.net.Uri r0 = r9.uri
            r3.add(r0)
            java.lang.String r0 = r9.caption
            r2.add(r0)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r9.entities
            r5.add(r0)
            r0 = r22
            r47 = r26
            r6 = r27
            r48 = r62
            r56 = r64
            r34 = r66
            r71 = r67
            r43 = 0
            goto L_0x0fe6
        L_0x0b1e:
            r9 = r1
            r1 = r2
            r15 = r3
            r14 = r46
            r25 = r47
            r62 = r48
            r38 = r50
            r30 = r52
            r64 = r56
            r66 = r58
            r67 = r59
        L_0x0b31:
            r17 = 0
            r18 = 0
            if (r79 == 0) goto L_0x0b3a
            r2 = 0
            r6 = r2
            goto L_0x0b48
        L_0x0b3a:
            org.telegram.messenger.VideoEditedInfo r2 = r9.videoEditedInfo
            if (r2 == 0) goto L_0x0b41
            org.telegram.messenger.VideoEditedInfo r2 = r9.videoEditedInfo
            goto L_0x0b47
        L_0x0b41:
            java.lang.String r2 = r9.path
            org.telegram.messenger.VideoEditedInfo r2 = createCompressionSettings(r2)
        L_0x0b47:
            r6 = r2
        L_0x0b48:
            if (r79 != 0) goto L_0x0f8c
            if (r6 != 0) goto L_0x0b68
            java.lang.String r2 = r9.path
            boolean r2 = r2.endsWith(r4)
            if (r2 == 0) goto L_0x0b55
            goto L_0x0b68
        L_0x0b55:
            r44 = r6
            r72 = r9
            r1 = r14
            r47 = r26
            r48 = r62
            r56 = r64
            r34 = r66
            r71 = r67
            r43 = 0
            goto L_0x0f9d
        L_0x0b68:
            java.lang.String r2 = r9.path
            if (r2 != 0) goto L_0x0bbb
            org.telegram.messenger.MediaController$SearchImage r2 = r9.searchImage
            if (r2 == 0) goto L_0x0bbb
            org.telegram.messenger.MediaController$SearchImage r2 = r9.searchImage
            org.telegram.tgnet.TLRPC$Photo r2 = r2.photo
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r2 == 0) goto L_0x0b88
            org.telegram.messenger.MediaController$SearchImage r2 = r9.searchImage
            org.telegram.tgnet.TLRPC$Photo r2 = r2.photo
            r4 = 1
            java.io.File r2 = org.telegram.messenger.FileLoader.getPathToAttach(r2, r4)
            java.lang.String r2 = r2.getAbsolutePath()
            r9.path = r2
            goto L_0x0bbc
        L_0x0b88:
            r4 = 1
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            org.telegram.messenger.MediaController$SearchImage r3 = r9.searchImage
            java.lang.String r3 = r3.imageUrl
            java.lang.String r3 = org.telegram.messenger.Utilities.MD5(r3)
            r2.append(r3)
            r2.append(r8)
            org.telegram.messenger.MediaController$SearchImage r3 = r9.searchImage
            java.lang.String r3 = r3.imageUrl
            java.lang.String r3 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r3, r5)
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            java.io.File r3 = new java.io.File
            java.io.File r5 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r3.<init>(r5, r2)
            java.lang.String r3 = r3.getAbsolutePath()
            r9.path = r3
            goto L_0x0bbc
        L_0x0bbb:
            r4 = 1
        L_0x0bbc:
            java.lang.String r8 = r9.path
            java.lang.String r2 = r9.path
            java.io.File r3 = new java.io.File
            r3.<init>(r2)
            r23 = r3
            r33 = 0
            r3 = 0
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            r5.<init>()
            r5.append(r2)
            r60 = r1
            long r0 = r23.length()
            r5.append(r0)
            r1 = r62
            r5.append(r1)
            r0 = r2
            r37 = r3
            long r2 = r23.lastModified()
            r5.append(r2)
            java.lang.String r0 = r5.toString()
            if (r6 == 0) goto L_0x0c4a
            boolean r3 = r6.muted
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r0)
            long r4 = r6.estimatedDuration
            r2.append(r4)
            r2.append(r1)
            long r4 = r6.startTime
            r2.append(r4)
            r2.append(r1)
            long r4 = r6.endTime
            r2.append(r4)
            boolean r4 = r6.muted
            if (r4 == 0) goto L_0x0CLASSNAME
            java.lang.String r5 = "_m"
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r5 = r13
        L_0x0CLASSNAME:
            r2.append(r5)
            java.lang.String r0 = r2.toString()
            int r2 = r6.resultWidth
            int r4 = r6.originalWidth
            if (r2 == r4) goto L_0x0CLASSNAME
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r0)
            r2.append(r1)
            int r4 = r6.resultWidth
            r2.append(r4)
            java.lang.String r0 = r2.toString()
        L_0x0CLASSNAME:
            long r4 = r6.startTime
            r31 = 0
            int r2 = (r4 > r31 ? 1 : (r4 == r31 ? 0 : -1))
            if (r2 < 0) goto L_0x0CLASSNAME
            long r4 = r6.startTime
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r4 = 0
        L_0x0CLASSNAME:
            r33 = r4
            r37 = r3
            goto L_0x0c4c
        L_0x0c4a:
            r4 = r33
        L_0x0c4c:
            r2 = 0
            r3 = 0
            if (r26 != 0) goto L_0x0cda
            r48 = r1
            int r1 = r9.ttl
            if (r1 != 0) goto L_0x0cdc
            if (r6 == 0) goto L_0x0CLASSNAME
            org.telegram.messenger.MediaController$SavedFilterState r1 = r6.filterState
            if (r1 != 0) goto L_0x0CLASSNAME
            java.lang.String r1 = r6.paintPath
            if (r1 != 0) goto L_0x0CLASSNAME
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r6.mediaEntities
            if (r1 != 0) goto L_0x0CLASSNAME
            org.telegram.messenger.MediaController$CropState r1 = r6.cropState
            if (r1 != 0) goto L_0x0CLASSNAME
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r32 = r2
            r31 = r3
            r42 = r4
            r69 = r6
            r70 = r7
            r1 = 1
            goto L_0x0ce7
        L_0x0CLASSNAME:
            org.telegram.messenger.MessagesStorage r1 = r81.getMessagesStorage()
            if (r26 != 0) goto L_0x0CLASSNAME
            r31 = 2
            r32 = r2
            r2 = 2
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r31 = 5
            r32 = r2
            r2 = 5
        L_0x0CLASSNAME:
            java.lang.Object[] r1 = r1.getSentFile(r0, r2)
            if (r1 == 0) goto L_0x0cce
            r31 = r3
            r2 = 0
            r3 = r1[r2]
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r3 == 0) goto L_0x0cc4
            r3 = r1[r2]
            r32 = r3
            org.telegram.tgnet.TLRPC$TL_document r32 = (org.telegram.tgnet.TLRPC.TL_document) r32
            r33 = 1
            r2 = r1[r33]
            r31 = r2
            java.lang.String r31 = (java.lang.String) r31
            java.lang.String r3 = r9.path
            r34 = 0
            r2 = r26
            r39 = r3
            r3 = r32
            r42 = r4
            r5 = 1
            r4 = r39
            r33 = r1
            r1 = 1
            r5 = r34
            r69 = r6
            r70 = r7
            r6 = r42
            ensureMediaThumbExists(r2, r3, r4, r5, r6)
            r2 = r32
            goto L_0x0ce9
        L_0x0cc4:
            r33 = r1
            r42 = r4
            r69 = r6
            r70 = r7
            r1 = 1
            goto L_0x0ce7
        L_0x0cce:
            r33 = r1
            r31 = r3
            r42 = r4
            r69 = r6
            r70 = r7
            r1 = 1
            goto L_0x0ce7
        L_0x0cda:
            r48 = r1
        L_0x0cdc:
            r32 = r2
            r31 = r3
            r42 = r4
            r69 = r6
            r70 = r7
            r1 = 1
        L_0x0ce7:
            r2 = r32
        L_0x0ce9:
            if (r2 != 0) goto L_0x0e10
            java.lang.String r3 = r9.thumbPath
            if (r3 == 0) goto L_0x0cf5
            java.lang.String r3 = r9.thumbPath
            android.graphics.Bitmap r17 = android.graphics.BitmapFactory.decodeFile(r3)
        L_0x0cf5:
            if (r17 != 0) goto L_0x0d08
            java.lang.String r3 = r9.path
            r6 = r42
            android.graphics.Bitmap r3 = createVideoThumbnailAtTime(r3, r6)
            if (r3 != 0) goto L_0x0d0c
            java.lang.String r4 = r9.path
            android.graphics.Bitmap r3 = createVideoThumbnail(r4, r1)
            goto L_0x0d0c
        L_0x0d08:
            r6 = r42
            r3 = r17
        L_0x0d0c:
            r4 = 0
            if (r3 == 0) goto L_0x0d47
            if (r26 != 0) goto L_0x0d23
            int r5 = r9.ttl
            if (r5 == 0) goto L_0x0d16
            goto L_0x0d23
        L_0x0d16:
            int r5 = r3.getWidth()
            int r1 = r3.getHeight()
            int r5 = java.lang.Math.max(r5, r1)
            goto L_0x0d25
        L_0x0d23:
            r5 = 90
        L_0x0d25:
            r1 = r5
            float r5 = (float) r1
            r32 = r2
            float r2 = (float) r1
            r17 = r4
            r4 = 90
            if (r1 <= r4) goto L_0x0d33
            r4 = 80
            goto L_0x0d35
        L_0x0d33:
            r4 = 55
        L_0x0d35:
            r33 = r1
            r1 = r26
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r3, r5, r2, r4, r1)
            r26 = r3
            r2 = 0
            r3 = 1
            r5 = 0
            java.lang.String r18 = getKeyForPhotoSize(r4, r2, r3, r5)
            goto L_0x0d50
        L_0x0d47:
            r32 = r2
            r17 = r4
            r1 = r26
            r5 = 0
            r26 = r3
        L_0x0d50:
            org.telegram.tgnet.TLRPC$TL_document r2 = new org.telegram.tgnet.TLRPC$TL_document
            r2.<init>()
            byte[] r3 = new byte[r5]
            r2.file_reference = r3
            if (r4 == 0) goto L_0x0d66
            java.util.ArrayList r3 = r2.thumbs
            r3.add(r4)
            int r3 = r2.flags
            r5 = 1
            r3 = r3 | r5
            r2.flags = r3
        L_0x0d66:
            r3 = r70
            r2.mime_type = r3
            org.telegram.messenger.UserConfig r3 = r81.getUserConfig()
            r5 = 0
            r3.saveConfig(r5)
            if (r1 == 0) goto L_0x0d7a
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r3 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r3.<init>()
            goto L_0x0d82
        L_0x0d7a:
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r3 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r3.<init>()
            r5 = 1
            r3.supports_streaming = r5
        L_0x0d82:
            java.util.ArrayList r5 = r2.attributes
            r5.add(r3)
            r5 = r69
            if (r5 == 0) goto L_0x0df3
            boolean r17 = r5.needConvert()
            if (r17 != 0) goto L_0x0d9d
            r17 = r4
            boolean r4 = r9.isVideo
            if (r4 != 0) goto L_0x0d98
            goto L_0x0d9f
        L_0x0d98:
            r42 = r6
            r33 = r8
            goto L_0x0df9
        L_0x0d9d:
            r17 = r4
        L_0x0d9f:
            boolean r4 = r9.isVideo
            if (r4 == 0) goto L_0x0db7
            boolean r4 = r5.muted
            if (r4 == 0) goto L_0x0db7
            java.lang.String r4 = r9.path
            fillVideoAttribute(r4, r3, r5)
            int r4 = r3.w
            r5.originalWidth = r4
            int r4 = r3.h
            r5.originalHeight = r4
            r42 = r6
            goto L_0x0dc2
        L_0x0db7:
            r42 = r6
            long r6 = r5.estimatedDuration
            r32 = 1000(0x3e8, double:4.94E-321)
            long r6 = r6 / r32
            int r4 = (int) r6
            r3.duration = r4
        L_0x0dc2:
            int r4 = r5.rotationValue
            org.telegram.messenger.MediaController$CropState r6 = r5.cropState
            if (r6 == 0) goto L_0x0dd1
            org.telegram.messenger.MediaController$CropState r6 = r5.cropState
            int r6 = r6.transformWidth
            org.telegram.messenger.MediaController$CropState r7 = r5.cropState
            int r7 = r7.transformHeight
            goto L_0x0dd5
        L_0x0dd1:
            int r6 = r5.resultWidth
            int r7 = r5.resultHeight
        L_0x0dd5:
            r33 = r8
            r8 = 90
            if (r4 == r8) goto L_0x0de5
            r8 = 270(0x10e, float:3.78E-43)
            if (r4 != r8) goto L_0x0de0
            goto L_0x0de5
        L_0x0de0:
            r3.w = r6
            r3.h = r7
            goto L_0x0de9
        L_0x0de5:
            r3.w = r7
            r3.h = r6
        L_0x0de9:
            r8 = r6
            r32 = r7
            long r6 = r5.estimatedSize
            int r7 = (int) r6
            r2.size = r7
            r7 = 0
            goto L_0x0e0c
        L_0x0df3:
            r17 = r4
            r42 = r6
            r33 = r8
        L_0x0df9:
            boolean r4 = r23.exists()
            if (r4 == 0) goto L_0x0e06
            long r6 = r23.length()
            int r4 = (int) r6
            r2.size = r4
        L_0x0e06:
            java.lang.String r4 = r9.path
            r7 = 0
            fillVideoAttribute(r4, r3, r7)
        L_0x0e0c:
            r6 = r2
            r29 = r18
            goto L_0x0e1f
        L_0x0e10:
            r32 = r2
            r33 = r8
            r1 = r26
            r5 = r69
            r7 = 0
            r26 = r17
            r29 = r18
            r6 = r32
        L_0x0e1f:
            if (r5 == 0) goto L_0x0e4a
            boolean r2 = r5.muted
            if (r2 == 0) goto L_0x0e4a
            r2 = 0
            r3 = 0
            java.util.ArrayList r4 = r6.attributes
            int r4 = r4.size()
        L_0x0e2d:
            if (r3 >= r4) goto L_0x0e3e
            java.util.ArrayList r8 = r6.attributes
            java.lang.Object r8 = r8.get(r3)
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeAnimated
            if (r8 == 0) goto L_0x0e3b
            r2 = 1
            goto L_0x0e3e
        L_0x0e3b:
            int r3 = r3 + 1
            goto L_0x0e2d
        L_0x0e3e:
            if (r2 != 0) goto L_0x0e4a
            java.util.ArrayList r3 = r6.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r4 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r4.<init>()
            r3.add(r4)
        L_0x0e4a:
            if (r5 == 0) goto L_0x0e82
            boolean r2 = r5.needConvert()
            if (r2 != 0) goto L_0x0e56
            boolean r2 = r9.isVideo
            if (r2 != 0) goto L_0x0e82
        L_0x0e56:
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            java.lang.String r3 = "-2147483648_"
            r2.append(r3)
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            java.lang.String r3 = ".mp4"
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            java.io.File r3 = new java.io.File
            java.io.File r4 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r3.<init>(r4, r2)
            org.telegram.messenger.SharedConfig.saveConfig()
            java.lang.String r8 = r3.getAbsolutePath()
            r33 = r8
        L_0x0e82:
            r8 = r6
            r2 = r31
            r32 = r0
            r4 = r9
            r9 = r33
            java.util.HashMap r3 = new java.util.HashMap
            r3.<init>()
            r34 = r8
            r8 = r3
            r3 = r26
            r36 = r3
            r3 = r4
            r4 = r29
            if (r0 == 0) goto L_0x0e9e
            r8.put(r11, r0)
        L_0x0e9e:
            if (r2 == 0) goto L_0x0ea3
            r8.put(r10, r2)
        L_0x0ea3:
            if (r37 != 0) goto L_0x0ee1
            if (r80 == 0) goto L_0x0ee1
            int r10 = r22 + 1
            java.lang.StringBuilder r11 = new java.lang.StringBuilder
            r11.<init>()
            r11.append(r13)
            r46 = r14
            r13 = r64
            r11.append(r13)
            java.lang.String r11 = r11.toString()
            r8.put(r12, r11)
            r11 = 10
            if (r10 == r11) goto L_0x0ed1
            r12 = r67
            int r11 = r12 + -1
            r39 = r4
            r4 = r66
            if (r4 != r11) goto L_0x0ece
            goto L_0x0ed7
        L_0x0ece:
            r22 = r10
            goto L_0x0eeb
        L_0x0ed1:
            r39 = r4
            r4 = r66
            r12 = r67
        L_0x0ed7:
            r11 = r60
            r8.put(r15, r11)
            r27 = 0
            r22 = r10
            goto L_0x0eeb
        L_0x0ee1:
            r39 = r4
            r46 = r14
            r13 = r64
            r4 = r66
            r12 = r67
        L_0x0eeb:
            if (r1 != 0) goto L_0x0var_
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r10 = r3.masks
            if (r10 == 0) goto L_0x0var_
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r10 = r3.masks
            boolean r10 = r10.isEmpty()
            if (r10 != 0) goto L_0x0var_
            java.util.ArrayList r10 = r6.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers r11 = new org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers
            r11.<init>()
            r10.add(r11)
            org.telegram.tgnet.SerializedData r10 = new org.telegram.tgnet.SerializedData
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r11 = r3.masks
            int r11 = r11.size()
            int r11 = r11 * 20
            int r11 = r11 + 4
            r10.<init>((int) r11)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r11 = r3.masks
            int r11 = r11.size()
            r10.writeInt32(r11)
            r11 = 0
        L_0x0f1c:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r15 = r3.masks
            int r15 = r15.size()
            if (r11 >= r15) goto L_0x0var_
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r15 = r3.masks
            java.lang.Object r15 = r15.get(r11)
            org.telegram.tgnet.TLRPC$InputDocument r15 = (org.telegram.tgnet.TLRPC.InputDocument) r15
            r15.serializeToStream(r10)
            int r11 = r11 + 1
            goto L_0x0f1c
        L_0x0var_:
            byte[] r11 = r10.toByteArray()
            java.lang.String r11 = org.telegram.messenger.Utilities.bytesToHex(r11)
            java.lang.String r15 = "masks"
            r8.put(r15, r11)
            r10.cleanup()
        L_0x0var_:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55 r40 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55
            r41 = r2
            r2 = r40
            r44 = r5
            r5 = r82
            r50 = r42
            r42 = r6
            r6 = r81
            r43 = r7
            r7 = r44
            r10 = r8
            r11 = r41
            r15 = r12
            r56 = r13
            r12 = r77
            r47 = r1
            r1 = r46
            r14 = r83
            r71 = r15
            r15 = r84
            r16 = r3
            r17 = r85
            r18 = r86
            r72 = r3
            r3 = r36
            r36 = r8
            r8 = r34
            r34 = r4
            r4 = r39
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r14, r15, r16, r17, r18)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r40)
            r8 = r1
            r4 = r45
            r2 = r49
            r5 = r54
            r3 = r55
            r1 = r72
            goto L_0x0fe2
        L_0x0f8c:
            r44 = r6
            r72 = r9
            r1 = r14
            r47 = r26
            r48 = r62
            r56 = r64
            r34 = r66
            r71 = r67
            r43 = 0
        L_0x0f9d:
            if (r1 != 0) goto L_0x0fbe
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r8 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r4 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r2 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r5 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r3 = r0
            goto L_0x0fc7
        L_0x0fbe:
            r8 = r1
            r4 = r45
            r2 = r49
            r5 = r54
            r3 = r55
        L_0x0fc7:
            r1 = r72
            java.lang.String r0 = r1.path
            r8.add(r0)
            java.lang.String r0 = r1.path
            r4.add(r0)
            android.net.Uri r0 = r1.uri
            r3.add(r0)
            java.lang.String r0 = r1.caption
            r2.add(r0)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r1.entities
            r5.add(r0)
        L_0x0fe2:
            r0 = r22
            r6 = r27
        L_0x0fe6:
            int r12 = r34 + 1
            r1 = r76
            r15 = r81
            r10 = r25
            r29 = r30
            r11 = r38
            r13 = r47
            r9 = r48
            r22 = r56
            r14 = r71
            goto L_0x0200
        L_0x0ffc:
            r45 = r4
            r54 = r5
            r1 = r8
            r34 = r12
            r47 = r13
            r71 = r14
            r55 = r25
            r49 = r26
            r25 = r10
            r2 = 0
            int r4 = (r27 > r2 ? 1 : (r27 == r2 ? 0 : -1))
            if (r4 == 0) goto L_0x101d
            r15 = r81
            r14 = r86
            r6 = r27
            finishGroup(r15, r6, r14)
            goto L_0x1023
        L_0x101d:
            r15 = r81
            r14 = r86
            r6 = r27
        L_0x1023:
            if (r87 == 0) goto L_0x1028
            r87.releasePermission()
        L_0x1028:
            if (r1 == 0) goto L_0x10f7
            boolean r2 = r1.isEmpty()
            if (r2 != 0) goto L_0x10f7
            r2 = 1
            long[] r13 = new long[r2]
            int r12 = r1.size()
            r2 = 0
            r11 = r2
        L_0x1039:
            if (r11 >= r12) goto L_0x10e2
            if (r79 == 0) goto L_0x1057
            if (r47 != 0) goto L_0x1057
            r10 = r71
            r2 = 1
            if (r10 <= r2) goto L_0x1054
            int r2 = r0 % 10
            if (r2 != 0) goto L_0x1054
            java.security.SecureRandom r2 = org.telegram.messenger.Utilities.random
            long r2 = r2.nextLong()
            r26 = 0
            r13[r26] = r2
            r0 = 0
            goto L_0x105b
        L_0x1054:
            r26 = 0
            goto L_0x105b
        L_0x1057:
            r10 = r71
            r26 = 0
        L_0x105b:
            r27 = 1
            int r0 = r0 + 1
            java.lang.Object r2 = r1.get(r11)
            r3 = r2
            java.lang.String r3 = (java.lang.String) r3
            r9 = r45
            java.lang.Object r2 = r9.get(r11)
            r4 = r2
            java.lang.String r4 = (java.lang.String) r4
            r8 = r55
            java.lang.Object r2 = r8.get(r11)
            r5 = r2
            android.net.Uri r5 = (android.net.Uri) r5
            r2 = r49
            java.lang.Object r17 = r2.get(r11)
            java.lang.CharSequence r17 = (java.lang.CharSequence) r17
            r46 = r1
            r1 = r54
            java.lang.Object r18 = r1.get(r11)
            java.util.ArrayList r18 = (java.util.ArrayList) r18
            r38 = r1
            r1 = 10
            if (r0 == r1) goto L_0x1097
            int r1 = r12 + -1
            if (r11 != r1) goto L_0x1095
            goto L_0x1097
        L_0x1095:
            r1 = 0
            goto L_0x1098
        L_0x1097:
            r1 = 1
        L_0x1098:
            r19 = 0
            r28 = r2
            r2 = r81
            r31 = r6
            r6 = r24
            r29 = r8
            r7 = r77
            r33 = r9
            r9 = r83
            r34 = r10
            r10 = r84
            r35 = r11
            r11 = r17
            r36 = r12
            r12 = r18
            r37 = r13
            r13 = r82
            r30 = 10
            r14 = r37
            r15 = r1
            r16 = r79
            r17 = r85
            r18 = r86
            prepareSendingDocumentInternal(r2, r3, r4, r5, r6, r7, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19)
            int r11 = r35 + 1
            r15 = r81
            r14 = r86
            r49 = r28
            r55 = r29
            r6 = r31
            r45 = r33
            r71 = r34
            r12 = r36
            r13 = r37
            r54 = r38
            r1 = r46
            goto L_0x1039
        L_0x10e2:
            r46 = r1
            r31 = r6
            r35 = r11
            r36 = r12
            r37 = r13
            r33 = r45
            r28 = r49
            r38 = r54
            r29 = r55
            r34 = r71
            goto L_0x1105
        L_0x10f7:
            r46 = r1
            r31 = r6
            r33 = r45
            r28 = r49
            r38 = r54
            r29 = r55
            r34 = r71
        L_0x1105:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x1123
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "total send time = "
            r1.append(r2)
            long r2 = java.lang.System.currentTimeMillis()
            long r2 = r2 - r20
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            org.telegram.messenger.FileLog.d(r1)
        L_0x1123:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingMedia$89(java.util.ArrayList, long, boolean, boolean, org.telegram.messenger.AccountInstance, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, boolean, int, androidx.core.view.inputmethod.InputContentInfoCompat):void");
    }

    static /* synthetic */ void lambda$prepareSendingMedia$84(MediaSendPrepareWorker worker, AccountInstance accountInstance, SendingMediaInfo info, boolean isEncrypted) {
        worker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(info.path, info.uri);
        if (isEncrypted && info.canDeleteAfter) {
            new File(info.path).delete();
        }
        worker.sync.countDown();
    }

    static /* synthetic */ void lambda$prepareSendingMedia$85(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_document documentFinal, String pathFinal, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, SendingMediaInfo info, boolean notify, int scheduleDate) {
        SendingMediaInfo sendingMediaInfo = info;
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, documentFinal, pathFinal, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(documentFinal, (VideoEditedInfo) null, pathFinal, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentFinal, (MessageObject.SendAnimationData) null);
    }

    static /* synthetic */ void lambda$prepareSendingMedia$86(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_photo photoFinal, boolean needDownloadHttpFinal, SendingMediaInfo info, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate) {
        SendingMediaInfo sendingMediaInfo = info;
        String str = null;
        if (editingMessageObject != null) {
            SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
            if (needDownloadHttpFinal) {
                str = sendingMediaInfo.searchImage.imageUrl;
            }
            sendMessagesHelper.editMessage(editingMessageObject, photoFinal, (VideoEditedInfo) null, (TLRPC.TL_document) null, str, params, false, parentFinal);
            return;
        }
        SendMessagesHelper sendMessagesHelper2 = accountInstance.getSendMessagesHelper();
        if (needDownloadHttpFinal) {
            str = sendingMediaInfo.searchImage.imageUrl;
        }
        sendMessagesHelper2.sendMessage(photoFinal, str, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, sendingMediaInfo.ttl, parentFinal);
    }

    static /* synthetic */ void lambda$prepareSendingMedia$87(Bitmap thumbFinal, String thumbKeyFinal, MessageObject editingMessageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC.TL_document videoFinal, String finalPath, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, SendingMediaInfo info, boolean notify, int scheduleDate) {
        Bitmap bitmap = thumbFinal;
        String str = thumbKeyFinal;
        SendingMediaInfo sendingMediaInfo = info;
        if (!(bitmap == null || str == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(videoFinal, videoEditedInfo, finalPath, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, sendingMediaInfo.ttl, parentFinal, (MessageObject.SendAnimationData) null);
    }

    static /* synthetic */ void lambda$prepareSendingMedia$88(Bitmap[] bitmapFinal, String[] keyFinal, MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_photo photoFinal, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, SendingMediaInfo info, boolean notify, int scheduleDate) {
        SendingMediaInfo sendingMediaInfo = info;
        if (!(bitmapFinal[0] == null || keyFinal[0] == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapFinal[0]), keyFinal[0], false);
        }
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, photoFinal, (VideoEditedInfo) null, (TLRPC.TL_document) null, (String) null, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(photoFinal, (String) null, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, sendingMediaInfo.ttl, parentFinal);
    }

    private static void fillVideoAttribute(String videoPath, TLRPC.TL_documentAttributeVideo attributeVideo, VideoEditedInfo videoEditedInfo) {
        String rotation;
        boolean infoObtained = false;
        MediaMetadataRetriever mediaMetadataRetriever = null;
        try {
            MediaMetadataRetriever mediaMetadataRetriever2 = new MediaMetadataRetriever();
            mediaMetadataRetriever2.setDataSource(videoPath);
            String width = mediaMetadataRetriever2.extractMetadata(18);
            if (width != null) {
                attributeVideo.w = Integer.parseInt(width);
            }
            String height = mediaMetadataRetriever2.extractMetadata(19);
            if (height != null) {
                attributeVideo.h = Integer.parseInt(height);
            }
            String duration = mediaMetadataRetriever2.extractMetadata(9);
            if (duration != null) {
                attributeVideo.duration = (int) Math.ceil((double) (((float) Long.parseLong(duration)) / 1000.0f));
            }
            if (Build.VERSION.SDK_INT >= 17 && (rotation = mediaMetadataRetriever2.extractMetadata(24)) != null) {
                int val = Utilities.parseInt(rotation).intValue();
                if (videoEditedInfo != null) {
                    videoEditedInfo.rotationValue = val;
                } else if (val == 90 || val == 270) {
                    int temp = attributeVideo.w;
                    attributeVideo.w = attributeVideo.h;
                    attributeVideo.h = temp;
                }
            }
            infoObtained = true;
            try {
                mediaMetadataRetriever2.release();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
            if (mediaMetadataRetriever != null) {
                mediaMetadataRetriever.release();
            }
        } catch (Throwable th) {
            if (mediaMetadataRetriever != null) {
                try {
                    mediaMetadataRetriever.release();
                } catch (Exception e3) {
                    FileLog.e((Throwable) e3);
                }
            }
            throw th;
        }
        if (!infoObtained) {
            try {
                MediaPlayer mp = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(videoPath)));
                if (mp != null) {
                    attributeVideo.duration = (int) Math.ceil((double) (((float) mp.getDuration()) / 1000.0f));
                    attributeVideo.w = mp.getVideoWidth();
                    attributeVideo.h = mp.getVideoHeight();
                    mp.release();
                }
            } catch (Exception e4) {
                FileLog.e((Throwable) e4);
            }
        }
    }

    public static Bitmap createVideoThumbnail(String filePath, int kind) {
        float size;
        if (kind == 2) {
            size = 1920.0f;
        } else if (kind == 3) {
            size = 96.0f;
        } else {
            size = 512.0f;
        }
        Bitmap bitmap = createVideoThumbnailAtTime(filePath, 0);
        if (bitmap == null) {
            return bitmap;
        }
        int w = bitmap.getWidth();
        int h = bitmap.getHeight();
        if (((float) w) <= size && ((float) h) <= size) {
            return bitmap;
        }
        float scale = ((float) Math.max(w, h)) / size;
        return Bitmap.createScaledBitmap(bitmap, (int) (((float) w) / scale), (int) (((float) h) / scale), true);
    }

    public static Bitmap createVideoThumbnailAtTime(String filePath, long time) {
        return createVideoThumbnailAtTime(filePath, time, (int[]) null, false);
    }

    public static Bitmap createVideoThumbnailAtTime(String filePath, long time, int[] orientation, boolean precise) {
        String str = filePath;
        long j = time;
        int[] iArr = orientation;
        boolean z = precise;
        Bitmap bitmap = null;
        if (z) {
            AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(str), true, 0, (TLRPC.Document) null, (ImageLocation) null, (Object) null, 0, 0, true);
            bitmap = animatedFileDrawable.getFrameAtTime(j, z);
            if (iArr != null) {
                iArr[0] = animatedFileDrawable.getOrientation();
            }
            animatedFileDrawable.recycle();
            if (bitmap == null) {
                return createVideoThumbnailAtTime(str, j, iArr, false);
            }
        } else {
            MediaMetadataRetriever retriever = new MediaMetadataRetriever();
            try {
                retriever.setDataSource(str);
                bitmap = retriever.getFrameAtTime(j, 1);
                if (bitmap == null) {
                    bitmap = retriever.getFrameAtTime(j, 3);
                }
                try {
                    retriever.release();
                } catch (RuntimeException e) {
                }
            } catch (Exception e2) {
                retriever.release();
            } catch (Throwable th) {
                Throwable th2 = th;
                try {
                    retriever.release();
                } catch (RuntimeException e3) {
                }
                throw th2;
            }
        }
        return bitmap;
    }

    private static VideoEditedInfo createCompressionSettings(String videoPath) {
        int compressionsCount;
        float maxSize;
        String str = videoPath;
        int[] params = new int[11];
        AnimatedFileDrawable.getVideoInfo(str, params);
        if (params[0] == 0) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("video hasn't avc1 atom");
            }
            return null;
        }
        int originalBitrate = MediaController.getVideoBitrate(videoPath);
        if (originalBitrate == -1) {
            originalBitrate = params[3];
        }
        int bitrate = originalBitrate;
        float videoDuration = (float) params[4];
        long j = (long) params[6];
        long audioFramesSize = (long) params[5];
        int videoFramerate = params[7];
        if (Build.VERSION.SDK_INT < 18) {
            try {
                MediaCodecInfo codecInfo = MediaController.selectCodec("video/avc");
                if (codecInfo == null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("no codec info for video/avc");
                    }
                    return null;
                }
                String name = codecInfo.getName();
                if (!name.equals("OMX.google.h264.encoder") && !name.equals("OMX.ST.VFM.H264Enc") && !name.equals("OMX.Exynos.avc.enc") && !name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") && !name.equals("OMX.MARVELL.VIDEO.H264ENCODER") && !name.equals("OMX.k3.video.encoder.avc")) {
                    if (!name.equals("OMX.TI.DUCATI1.VIDEO.H264E")) {
                        if (MediaController.selectColorFormat(codecInfo, "video/avc") == 0) {
                            if (BuildVars.LOGS_ENABLED) {
                                FileLog.d("no color format for video/avc");
                            }
                            return null;
                        }
                    }
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("unsupported encoder = " + name);
                }
                return null;
            } catch (Exception e) {
                return null;
            }
        }
        VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
        videoEditedInfo.startTime = -1;
        videoEditedInfo.endTime = -1;
        videoEditedInfo.bitrate = bitrate;
        videoEditedInfo.originalPath = str;
        videoEditedInfo.framerate = videoFramerate;
        videoEditedInfo.estimatedDuration = (long) Math.ceil((double) videoDuration);
        int i = params[1];
        videoEditedInfo.originalWidth = i;
        videoEditedInfo.resultWidth = i;
        int i2 = params[2];
        videoEditedInfo.originalHeight = i2;
        videoEditedInfo.resultHeight = i2;
        videoEditedInfo.rotationValue = params[8];
        videoEditedInfo.originalDuration = (long) (videoDuration * 1000.0f);
        float maxSize2 = (float) Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight);
        if (maxSize2 > 1280.0f) {
            compressionsCount = 4;
        } else if (maxSize2 > 854.0f) {
            compressionsCount = 3;
        } else if (maxSize2 > 640.0f) {
            compressionsCount = 2;
        } else {
            compressionsCount = 1;
        }
        int selectedCompression = Math.round(((float) DownloadController.getInstance(UserConfig.selectedAccount).getMaxVideoBitrate()) / (100.0f / ((float) compressionsCount)));
        if (selectedCompression > compressionsCount) {
            selectedCompression = compressionsCount;
        }
        boolean needCompress = false;
        if (selectedCompression != compressionsCount || Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight) > 1280) {
            needCompress = true;
            switch (selectedCompression) {
                case 1:
                    maxSize = 432.0f;
                    break;
                case 2:
                    maxSize = 640.0f;
                    break;
                case 3:
                    maxSize = 848.0f;
                    break;
                default:
                    maxSize = 1280.0f;
                    break;
            }
            float scale = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
            videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * scale) / 2.0f) * 2;
            videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * scale) / 2.0f) * 2;
        }
        int[] iArr = params;
        int i3 = bitrate;
        int bitrate2 = MediaController.makeVideoBitrate(videoEditedInfo.originalHeight, videoEditedInfo.originalWidth, originalBitrate, videoEditedInfo.resultHeight, videoEditedInfo.resultWidth);
        if (!needCompress) {
            videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
            videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
            videoEditedInfo.bitrate = bitrate2;
        } else {
            videoEditedInfo.bitrate = bitrate2;
        }
        videoEditedInfo.estimatedSize = (long) ((int) (((float) audioFramesSize) + (((videoDuration / 1000.0f) * ((float) bitrate2)) / 8.0f)));
        if (videoEditedInfo.estimatedSize == 0) {
            videoEditedInfo.estimatedSize = 1;
        }
        return videoEditedInfo;
    }

    public static void prepareSendingVideo(AccountInstance accountInstance, String videoPath, VideoEditedInfo info, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, int ttl, MessageObject editingMessageObject, boolean notify, int scheduleDate, boolean forceDocument) {
        if (videoPath != null && videoPath.length() != 0) {
            SendMessagesHelper$$ExternalSyntheticLambda69 sendMessagesHelper$$ExternalSyntheticLambda69 = r0;
            SendMessagesHelper$$ExternalSyntheticLambda69 sendMessagesHelper$$ExternalSyntheticLambda692 = new SendMessagesHelper$$ExternalSyntheticLambda69(info, videoPath, dialogId, ttl, accountInstance, caption, editingMessageObject, replyToMsg, replyToTopMsg, entities, notify, scheduleDate, forceDocument);
            new Thread(sendMessagesHelper$$ExternalSyntheticLambda69).start();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:131:0x0368  */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x037a  */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x03a8  */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x03be  */
    /* JADX WARNING: Removed duplicated region for block: B:142:0x03c8  */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x03cf  */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x014c  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingVideo$91(org.telegram.messenger.VideoEditedInfo r35, java.lang.String r36, long r37, int r39, org.telegram.messenger.AccountInstance r40, java.lang.CharSequence r41, org.telegram.messenger.MessageObject r42, org.telegram.messenger.MessageObject r43, org.telegram.messenger.MessageObject r44, java.util.ArrayList r45, boolean r46, int r47, boolean r48) {
        /*
            r15 = r36
            if (r35 == 0) goto L_0x0007
            r0 = r35
            goto L_0x000b
        L_0x0007:
            org.telegram.messenger.VideoEditedInfo r0 = createCompressionSettings(r36)
        L_0x000b:
            r14 = r0
            boolean r11 = org.telegram.messenger.DialogObject.isEncryptedDialog(r37)
            r6 = 0
            r7 = 1
            if (r14 == 0) goto L_0x001a
            boolean r0 = r14.roundVideo
            if (r0 == 0) goto L_0x001a
            r0 = 1
            goto L_0x001b
        L_0x001a:
            r0 = 0
        L_0x001b:
            r10 = r0
            r18 = 0
            r19 = 0
            if (r14 != 0) goto L_0x0062
            java.lang.String r0 = "mp4"
            boolean r0 = r15.endsWith(r0)
            if (r0 != 0) goto L_0x0062
            if (r10 == 0) goto L_0x0033
            r20 = r10
            r21 = r11
            r22 = r14
            goto L_0x0068
        L_0x0033:
            r3 = 0
            r4 = 0
            r12 = 0
            r13 = 0
            r17 = 0
            r0 = r40
            r1 = r36
            r2 = r36
            r5 = r37
            r7 = r43
            r8 = r44
            r9 = r41
            r20 = r10
            r10 = r45
            r21 = r11
            r11 = r42
            r22 = r14
            r14 = r48
            r15 = r46
            r16 = r47
            prepareSendingDocumentInternal(r0, r1, r2, r3, r4, r5, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17)
            r33 = r20
            r27 = r21
            r34 = r22
            goto L_0x0401
        L_0x0062:
            r20 = r10
            r21 = r11
            r22 = r14
        L_0x0068:
            r8 = r36
            r0 = r36
            java.io.File r1 = new java.io.File
            r1.<init>(r0)
            r23 = r1
            r1 = 0
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            long r4 = r23.length()
            r3.append(r4)
            java.lang.String r9 = "_"
            r3.append(r9)
            long r4 = r23.lastModified()
            r3.append(r4)
            java.lang.String r0 = r3.toString()
            java.lang.String r10 = ""
            r15 = r22
            if (r15 == 0) goto L_0x00f2
            r13 = r20
            if (r13 != 0) goto L_0x00e4
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            long r4 = r15.estimatedDuration
            r3.append(r4)
            r3.append(r9)
            long r4 = r15.startTime
            r3.append(r4)
            r3.append(r9)
            long r4 = r15.endTime
            r3.append(r4)
            boolean r4 = r15.muted
            if (r4 == 0) goto L_0x00c2
            java.lang.String r4 = "_m"
            goto L_0x00c3
        L_0x00c2:
            r4 = r10
        L_0x00c3:
            r3.append(r4)
            java.lang.String r0 = r3.toString()
            int r3 = r15.resultWidth
            int r4 = r15.originalWidth
            if (r3 == r4) goto L_0x00e4
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            r3.append(r9)
            int r4 = r15.resultWidth
            r3.append(r4)
            java.lang.String r0 = r3.toString()
        L_0x00e4:
            long r3 = r15.startTime
            r11 = 0
            int r5 = (r3 > r11 ? 1 : (r3 == r11 ? 0 : -1))
            if (r5 < 0) goto L_0x00ee
            long r11 = r15.startTime
        L_0x00ee:
            r1 = r11
            r12 = r0
            r4 = r1
            goto L_0x00f6
        L_0x00f2:
            r13 = r20
            r12 = r0
            r4 = r1
        L_0x00f6:
            r0 = 0
            r1 = 0
            r14 = r21
            if (r14 != 0) goto L_0x0146
            if (r39 != 0) goto L_0x0146
            if (r15 == 0) goto L_0x0114
            org.telegram.messenger.MediaController$SavedFilterState r2 = r15.filterState
            if (r2 != 0) goto L_0x0111
            java.lang.String r2 = r15.paintPath
            if (r2 != 0) goto L_0x0111
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r2 = r15.mediaEntities
            if (r2 != 0) goto L_0x0111
            org.telegram.messenger.MediaController$CropState r2 = r15.cropState
            if (r2 != 0) goto L_0x0111
            goto L_0x0114
        L_0x0111:
            r21 = r4
            goto L_0x0148
        L_0x0114:
            org.telegram.messenger.MessagesStorage r2 = r40.getMessagesStorage()
            if (r14 != 0) goto L_0x011c
            r3 = 2
            goto L_0x011d
        L_0x011c:
            r3 = 5
        L_0x011d:
            java.lang.Object[] r16 = r2.getSentFile(r12, r3)
            if (r16 == 0) goto L_0x0143
            r2 = r16[r6]
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r2 == 0) goto L_0x0143
            r2 = r16[r6]
            r17 = r2
            org.telegram.tgnet.TLRPC$TL_document r17 = (org.telegram.tgnet.TLRPC.TL_document) r17
            r0 = r16[r7]
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20
            r3 = 0
            r0 = r14
            r1 = r17
            r2 = r36
            r21 = r4
            ensureMediaThumbExists(r0, r1, r2, r3, r4)
            r0 = r17
            goto L_0x014a
        L_0x0143:
            r21 = r4
            goto L_0x0148
        L_0x0146:
            r21 = r4
        L_0x0148:
            r20 = r1
        L_0x014a:
            if (r0 != 0) goto L_0x0368
            r5 = r36
            r3 = r21
            android.graphics.Bitmap r1 = createVideoThumbnailAtTime(r5, r3)
            if (r1 != 0) goto L_0x015a
            android.graphics.Bitmap r1 = createVideoThumbnail(r5, r7)
        L_0x015a:
            r2 = 90
            if (r14 != 0) goto L_0x0164
            if (r39 == 0) goto L_0x0161
            goto L_0x0164
        L_0x0161:
            r16 = 320(0x140, float:4.48E-43)
            goto L_0x0166
        L_0x0164:
            r16 = 90
        L_0x0166:
            r17 = r16
            r6 = r17
            float r11 = (float) r6
            float r7 = (float) r6
            if (r6 <= r2) goto L_0x0173
            r18 = 80
            r2 = 80
            goto L_0x0177
        L_0x0173:
            r18 = 55
            r2 = 55
        L_0x0177:
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r1, r11, r7, r2, r14)
            if (r1 == 0) goto L_0x029b
            if (r2 == 0) goto L_0x029b
            if (r13 == 0) goto L_0x0295
            if (r14 == 0) goto L_0x0230
            r7 = 1
            r11 = 90
            android.graphics.Bitmap r1 = android.graphics.Bitmap.createScaledBitmap(r1, r11, r11, r7)
            r25 = 7
            int r7 = android.os.Build.VERSION.SDK_INT
            r11 = 21
            if (r7 >= r11) goto L_0x0195
            r26 = 0
            goto L_0x0197
        L_0x0195:
            r26 = 1
        L_0x0197:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            r25 = 7
            int r7 = android.os.Build.VERSION.SDK_INT
            r11 = 21
            if (r7 >= r11) goto L_0x01b3
            r26 = 0
            goto L_0x01b5
        L_0x01b3:
            r26 = 1
        L_0x01b5:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            r25 = 7
            int r7 = android.os.Build.VERSION.SDK_INT
            r11 = 21
            if (r7 >= r11) goto L_0x01d1
            r26 = 0
            goto L_0x01d3
        L_0x01d1:
            r26 = 1
        L_0x01d3:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            org.telegram.tgnet.TLRPC$FileLocation r11 = r2.location
            r30 = r0
            r18 = r1
            long r0 = r11.volume_id
            r7.append(r0)
            r7.append(r9)
            org.telegram.tgnet.TLRPC$FileLocation r0 = r2.location
            int r0 = r0.local_id
            r7.append(r0)
            java.lang.String r0 = "@%d_%d_b2"
            r7.append(r0)
            java.lang.String r0 = r7.toString()
            r1 = 2
            java.lang.Object[] r1 = new java.lang.Object[r1]
            int r7 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r7 = (float) r7
            float r9 = org.telegram.messenger.AndroidUtilities.density
            float r7 = r7 / r9
            int r7 = (int) r7
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r9 = 0
            r1[r9] = r7
            int r7 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r7 = (float) r7
            float r9 = org.telegram.messenger.AndroidUtilities.density
            float r7 = r7 / r9
            int r7 = (int) r7
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r9 = 1
            r1[r9] = r7
            java.lang.String r19 = java.lang.String.format(r0, r1)
            r24 = r3
            r1 = r18
            goto L_0x029f
        L_0x0230:
            r30 = r0
            r25 = 3
            int r0 = android.os.Build.VERSION.SDK_INT
            r7 = 21
            if (r0 >= r7) goto L_0x023d
            r26 = 0
            goto L_0x023f
        L_0x023d:
            r26 = 1
        L_0x023f:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            org.telegram.tgnet.TLRPC$FileLocation r7 = r2.location
            r24 = r3
            long r3 = r7.volume_id
            r0.append(r3)
            r0.append(r9)
            org.telegram.tgnet.TLRPC$FileLocation r3 = r2.location
            int r3 = r3.local_id
            r0.append(r3)
            java.lang.String r3 = "@%d_%d_b"
            r0.append(r3)
            java.lang.String r0 = r0.toString()
            r3 = 2
            java.lang.Object[] r3 = new java.lang.Object[r3]
            int r4 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r4 = (float) r4
            float r7 = org.telegram.messenger.AndroidUtilities.density
            float r4 = r4 / r7
            int r4 = (int) r4
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r7 = 0
            r3[r7] = r4
            int r4 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r4 = (float) r4
            float r7 = org.telegram.messenger.AndroidUtilities.density
            float r4 = r4 / r7
            int r4 = (int) r4
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r7 = 1
            r3[r7] = r4
            java.lang.String r19 = java.lang.String.format(r0, r3)
            goto L_0x029f
        L_0x0295:
            r30 = r0
            r24 = r3
            r1 = 0
            goto L_0x029f
        L_0x029b:
            r30 = r0
            r24 = r3
        L_0x029f:
            org.telegram.tgnet.TLRPC$TL_document r0 = new org.telegram.tgnet.TLRPC$TL_document
            r0.<init>()
            if (r2 == 0) goto L_0x02b1
            java.util.ArrayList r3 = r0.thumbs
            r3.add(r2)
            int r3 = r0.flags
            r4 = 1
            r3 = r3 | r4
            r0.flags = r3
        L_0x02b1:
            r3 = 0
            byte[] r4 = new byte[r3]
            r0.file_reference = r4
            java.lang.String r4 = "video/mp4"
            r0.mime_type = r4
            org.telegram.messenger.UserConfig r4 = r40.getUserConfig()
            r4.saveConfig(r3)
            if (r14 == 0) goto L_0x02dd
            int r3 = org.telegram.messenger.DialogObject.getEncryptedChatId(r37)
            org.telegram.messenger.MessagesController r4 = r40.getMessagesController()
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r4.getEncryptedChat(r7)
            if (r4 != 0) goto L_0x02d6
            return
        L_0x02d6:
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r7 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r7.<init>()
            r3 = r7
            goto L_0x02e5
        L_0x02dd:
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r3 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r3.<init>()
            r4 = 1
            r3.supports_streaming = r4
        L_0x02e5:
            r3.round_message = r13
            java.util.ArrayList r4 = r0.attributes
            r4.add(r3)
            if (r15 == 0) goto L_0x034e
            boolean r4 = r15.needConvert()
            if (r4 == 0) goto L_0x034e
            boolean r4 = r15.muted
            if (r4 == 0) goto L_0x0310
            java.util.ArrayList r4 = r0.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r7 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r7.<init>()
            r4.add(r7)
            fillVideoAttribute(r5, r3, r15)
            int r4 = r3.w
            r15.originalWidth = r4
            int r4 = r3.h
            r15.originalHeight = r4
            r7 = r1
            r4 = r2
            goto L_0x031b
        L_0x0310:
            r7 = r1
            r4 = r2
            long r1 = r15.estimatedDuration
            r16 = 1000(0x3e8, double:4.94E-321)
            long r1 = r1 / r16
            int r2 = (int) r1
            r3.duration = r2
        L_0x031b:
            int r1 = r15.rotationValue
            org.telegram.messenger.MediaController$CropState r2 = r15.cropState
            if (r2 == 0) goto L_0x032f
            org.telegram.messenger.MediaController$CropState r2 = r15.cropState
            int r2 = r2.transformWidth
            org.telegram.messenger.MediaController$CropState r9 = r15.cropState
            int r9 = r9.transformHeight
            org.telegram.messenger.MediaController$CropState r11 = r15.cropState
            int r11 = r11.transformRotation
            int r1 = r1 + r11
            goto L_0x0333
        L_0x032f:
            int r2 = r15.resultWidth
            int r9 = r15.resultHeight
        L_0x0333:
            r11 = 90
            if (r1 == r11) goto L_0x0341
            r11 = 270(0x10e, float:3.78E-43)
            if (r1 != r11) goto L_0x033c
            goto L_0x0341
        L_0x033c:
            r3.w = r2
            r3.h = r9
            goto L_0x0345
        L_0x0341:
            r3.w = r9
            r3.h = r2
        L_0x0345:
            r11 = r1
            r16 = r2
            long r1 = r15.estimatedSize
            int r2 = (int) r1
            r0.size = r2
            goto L_0x0361
        L_0x034e:
            r7 = r1
            r4 = r2
            boolean r1 = r23.exists()
            if (r1 == 0) goto L_0x035d
            long r1 = r23.length()
            int r2 = (int) r1
            r0.size = r2
        L_0x035d:
            r1 = 0
            fillVideoAttribute(r5, r3, r1)
        L_0x0361:
            r30 = r0
            r21 = r19
            r19 = r7
            goto L_0x0372
        L_0x0368:
            r5 = r36
            r30 = r0
            r24 = r21
            r21 = r19
            r19 = r18
        L_0x0372:
            if (r15 == 0) goto L_0x03a8
            boolean r0 = r15.needConvert()
            if (r0 == 0) goto L_0x03a8
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = "-2147483648_"
            r0.append(r1)
            int r1 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r0.append(r1)
            java.lang.String r1 = ".mp4"
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            java.io.File r1 = new java.io.File
            r2 = 4
            java.io.File r2 = org.telegram.messenger.FileLoader.getDirectory(r2)
            r1.<init>(r2, r0)
            org.telegram.messenger.SharedConfig.saveConfig()
            java.lang.String r8 = r1.getAbsolutePath()
            r22 = r8
            goto L_0x03aa
        L_0x03a8:
            r22 = r8
        L_0x03aa:
            r6 = r30
            r11 = r20
            r26 = r12
            r7 = r22
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r9 = r0
            r1 = r19
            r2 = r21
            if (r41 == 0) goto L_0x03c3
            java.lang.String r0 = r41.toString()
            r10 = r0
        L_0x03c3:
            r27 = r14
            r14 = r10
            if (r12 == 0) goto L_0x03cd
            java.lang.String r0 = "originalPath"
            r9.put(r0, r12)
        L_0x03cd:
            if (r11 == 0) goto L_0x03d4
            java.lang.String r0 = "parentObject"
            r9.put(r0, r11)
        L_0x03d4:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda44 r28 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda44
            r0 = r28
            r3 = r42
            r4 = r40
            r5 = r15
            r8 = r9
            r29 = r9
            r9 = r11
            r31 = r11
            r10 = r37
            r32 = r12
            r12 = r43
            r33 = r13
            r13 = r44
            r34 = r15
            r15 = r45
            r16 = r46
            r17 = r47
            r18 = r39
            r0.<init>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15, r16, r17, r18)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r28)
            r18 = r19
            r19 = r21
        L_0x0401:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingVideo$91(org.telegram.messenger.VideoEditedInfo, java.lang.String, long, int, org.telegram.messenger.AccountInstance, java.lang.CharSequence, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, java.util.ArrayList, boolean, int, boolean):void");
    }

    static /* synthetic */ void lambda$prepareSendingVideo$90(Bitmap thumbFinal, String thumbKeyFinal, MessageObject editingMessageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC.TL_document videoFinal, String finalPath, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, String captionFinal, ArrayList entities, boolean notify, int scheduleDate, int ttl) {
        Bitmap bitmap = thumbFinal;
        String str = thumbKeyFinal;
        if (!(bitmap == null || str == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(videoFinal, videoEditedInfo, finalPath, dialogId, replyToMsg, replyToTopMsg, captionFinal, entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, ttl, parentFinal, (MessageObject.SendAnimationData) null);
        }
    }
}
