package org.telegram.messenger;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.media.MediaCodecInfo;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.SystemClock;
import android.text.TextUtils;
import android.util.SparseArray;
import android.util.SparseIntArray;
import android.webkit.MimeTypeMap;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.LongSparseArray;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.json.JSONObject;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.QuickAckDelegate;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.SerializedData;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.ChatActivity;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.Point;
import org.telegram.ui.PaymentFormActivity;
import org.telegram.ui.TwoStepVerificationActivity;

public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
    private static final int ERROR_TYPE_FILE_TOO_LARGE = 2;
    private static final int ERROR_TYPE_UNSUPPORTED = 1;
    private static volatile SendMessagesHelper[] Instance = new SendMessagesHelper[4];
    private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
    private static ThreadPoolExecutor mediaSendThreadPool;
    /* access modifiers changed from: private */
    public HashMap<String, ArrayList<DelayedMessage>> delayedMessages = new HashMap<>();
    private SparseArray<TLRPC.Message> editingMessages = new SparseArray<>();
    private HashMap<String, ImportingHistory> importingHistoryFiles = new HashMap<>();
    /* access modifiers changed from: private */
    public LongSparseArray<ImportingHistory> importingHistoryMap = new LongSparseArray<>();
    private HashMap<String, ImportingStickers> importingStickersFiles = new HashMap<>();
    /* access modifiers changed from: private */
    public HashMap<String, ImportingStickers> importingStickersMap = new HashMap<>();
    private LocationProvider locationProvider = new LocationProvider(new LocationProvider.LocationProviderDelegate() {
        public void onLocationAcquired(Location location) {
            SendMessagesHelper.this.sendLocation(location);
            SendMessagesHelper.this.waitingForLocation.clear();
        }

        public void onUnableLocationAcquire() {
            HashMap<String, MessageObject> waitingForLocationCopy = new HashMap<>(SendMessagesHelper.this.waitingForLocation);
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, waitingForLocationCopy);
            SendMessagesHelper.this.waitingForLocation.clear();
        }
    });
    private SparseArray<TLRPC.Message> sendingMessages = new SparseArray<>();
    private LongSparseArray<Integer> sendingMessagesIdDialogs = new LongSparseArray<>();
    private SparseArray<MessageObject> unsentMessages = new SparseArray<>();
    private SparseArray<TLRPC.Message> uploadMessages = new SparseArray<>();
    private LongSparseArray<Integer> uploadingMessagesIdDialogs = new LongSparseArray<>();
    private LongSparseArray<Long> voteSendTime = new LongSparseArray<>();
    private HashMap<String, Boolean> waitingForCallback = new HashMap<>();
    /* access modifiers changed from: private */
    public HashMap<String, MessageObject> waitingForLocation = new HashMap<>();
    private HashMap<String, byte[]> waitingForVote = new HashMap<>();

    public static class SendingMediaInfo {
        public boolean canDeleteAfter;
        public String caption;
        public ArrayList<TLRPC.MessageEntity> entities;
        public boolean forceImage;
        public TLRPC.BotInlineResult inlineResult;
        public boolean isVideo;
        public ArrayList<TLRPC.InputDocument> masks;
        public String paintPath;
        public HashMap<String, String> params;
        public String path;
        public MediaController.SearchImage searchImage;
        public String thumbPath;
        public int ttl;
        public Uri uri;
        public VideoEditedInfo videoEditedInfo;
    }

    public class ImportingHistory {
        public long dialogId;
        public double estimatedUploadSpeed;
        public String historyPath;
        public long importId;
        private long lastUploadSize;
        /* access modifiers changed from: private */
        public long lastUploadTime;
        public ArrayList<Uri> mediaPaths = new ArrayList<>();
        public TLRPC.InputPeer peer;
        public int timeUntilFinish = Integer.MAX_VALUE;
        public long totalSize;
        public ArrayList<String> uploadMedia = new ArrayList<>();
        public int uploadProgress;
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashSet<String> uploadSet = new HashSet<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public long uploadedSize;

        public ImportingHistory() {
        }

        /* access modifiers changed from: private */
        public void initImport(TLRPC.InputFile inputFile) {
            final TLRPC.TL_messages_initHistoryImport req = new TLRPC.TL_messages_initHistoryImport();
            req.file = inputFile;
            req.media_count = this.mediaPaths.size();
            req.peer = this.peer;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$1$$ExternalSyntheticLambda0(this, response, req, error));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingHistory$1  reason: not valid java name */
                public /* synthetic */ void m2385x6fa5ea93(TLObject response, TLRPC.TL_messages_initHistoryImport req, TLRPC.TL_error error) {
                    if (response instanceof TLRPC.TL_messages_historyImport) {
                        ImportingHistory.this.importId = ((TLRPC.TL_messages_historyImport) response).id;
                        ImportingHistory.this.uploadSet.remove(ImportingHistory.this.historyPath);
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                        if (ImportingHistory.this.uploadSet.isEmpty()) {
                            ImportingHistory.this.startImport();
                        }
                        long unused = ImportingHistory.this.lastUploadTime = SystemClock.elapsedRealtime();
                        int N = ImportingHistory.this.uploadMedia.size();
                        for (int a = 0; a < N; a++) {
                            SendMessagesHelper.this.getFileLoader().uploadFile(ImportingHistory.this.uploadMedia.get(a), false, true, 67108864);
                        }
                        return;
                    }
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), req, error);
                }
            }, 2);
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* access modifiers changed from: private */
        public void onFileFailedToUpload(String path) {
            if (path.equals(this.historyPath)) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
                TLRPC.TL_error error = new TLRPC.TL_error();
                error.code = 400;
                error.text = "IMPORT_UPLOAD_FAILED";
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId), new TLRPC.TL_messages_initHistoryImport(), error);
                return;
            }
            this.uploadSet.remove(path);
        }

        /* access modifiers changed from: private */
        public void addUploadProgress(String path, long sz, float progress) {
            String str = path;
            this.uploadProgresses.put(str, Float.valueOf(progress));
            this.uploadSize.put(str, Long.valueOf(sz));
            this.uploadedSize = 0;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long newTime = SystemClock.elapsedRealtime();
            if (!str.equals(this.historyPath)) {
                long j = this.uploadedSize;
                long j2 = this.lastUploadSize;
                if (j != j2) {
                    long j3 = this.lastUploadTime;
                    if (newTime != j3) {
                        double d = (double) (newTime - j3);
                        Double.isNaN(d);
                        double d2 = (double) (j - j2);
                        Double.isNaN(d2);
                        double uploadSpeed = d2 / (d / 1000.0d);
                        double d3 = this.estimatedUploadSpeed;
                        if (d3 == 0.0d) {
                            this.estimatedUploadSpeed = uploadSpeed;
                        } else {
                            this.estimatedUploadSpeed = (0.01d * uploadSpeed) + ((1.0d - 0.01d) * d3);
                        }
                        double d4 = (double) ((this.totalSize - j) * 1000);
                        double d5 = this.estimatedUploadSpeed;
                        Double.isNaN(d4);
                        this.timeUntilFinish = (int) (d4 / d5);
                        this.lastUploadSize = j;
                        this.lastUploadTime = newTime;
                    }
                }
            }
            int newProgress = (int) (100.0f * (((float) getUploadedCount()) / ((float) getTotalCount())));
            if (this.uploadProgress != newProgress) {
                this.uploadProgress = newProgress;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
            }
        }

        /* access modifiers changed from: private */
        public void onMediaImport(final String path, long size, TLRPC.InputFile inputFile) {
            addUploadProgress(path, size, 1.0f);
            TLRPC.TL_messages_uploadImportedMedia req = new TLRPC.TL_messages_uploadImportedMedia();
            req.peer = this.peer;
            req.import_id = this.importId;
            req.file_name = new File(path).getName();
            MimeTypeMap myMime = MimeTypeMap.getSingleton();
            String ext = "txt";
            int idx = req.file_name.lastIndexOf(46);
            if (idx != -1) {
                ext = req.file_name.substring(idx + 1).toLowerCase();
            }
            String mimeType = myMime.getMimeTypeFromExtension(ext);
            if (mimeType == null) {
                if ("opus".equals(ext)) {
                    mimeType = "audio/opus";
                } else if ("webp".equals(ext)) {
                    mimeType = "image/webp";
                } else {
                    mimeType = "text/plain";
                }
            }
            if (mimeType.equals("image/jpg") || mimeType.equals("image/jpeg")) {
                TLRPC.TL_inputMediaUploadedPhoto inputMediaUploadedPhoto = new TLRPC.TL_inputMediaUploadedPhoto();
                inputMediaUploadedPhoto.file = inputFile;
                req.media = inputMediaUploadedPhoto;
            } else {
                TLRPC.TL_inputMediaUploadedDocument inputMediaDocument = new TLRPC.TL_inputMediaUploadedDocument();
                inputMediaDocument.file = inputFile;
                inputMediaDocument.mime_type = mimeType;
                req.media = inputMediaDocument;
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$2$$ExternalSyntheticLambda0(this, path));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingHistory$2  reason: not valid java name */
                public /* synthetic */ void m2386x6fa5ea94(String path) {
                    ImportingHistory.this.uploadSet.remove(path);
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                    if (ImportingHistory.this.uploadSet.isEmpty()) {
                        ImportingHistory.this.startImport();
                    }
                }
            }, 2);
        }

        /* access modifiers changed from: private */
        public void startImport() {
            final TLRPC.TL_messages_startHistoryImport req = new TLRPC.TL_messages_startHistoryImport();
            req.peer = this.peer;
            req.import_id = this.importId;
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingHistory$3$$ExternalSyntheticLambda0(this, error, req));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingHistory$3  reason: not valid java name */
                public /* synthetic */ void m2387x6fa5ea95(TLRPC.TL_error error, TLRPC.TL_messages_startHistoryImport req) {
                    SendMessagesHelper.this.importingHistoryMap.remove(ImportingHistory.this.dialogId);
                    if (error == null) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId));
                        return;
                    }
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(ImportingHistory.this.dialogId), req, error);
                }
            });
        }

        public void setImportProgress(int value) {
            if (value == 100) {
                SendMessagesHelper.this.importingHistoryMap.remove(this.dialogId);
            }
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(this.dialogId));
        }
    }

    public static class ImportingSticker {
        public boolean animated;
        public String emoji;
        public TLRPC.TL_inputStickerSetItem item;
        public String mimeType;
        public String path;
        public boolean validated;

        public void uploadMedia(int account, TLRPC.InputFile inputFile, final Runnable onFinish) {
            TLRPC.TL_messages_uploadMedia req = new TLRPC.TL_messages_uploadMedia();
            req.peer = new TLRPC.TL_inputPeerSelf();
            req.media = new TLRPC.TL_inputMediaUploadedDocument();
            req.media.file = inputFile;
            req.media.mime_type = this.mimeType;
            ConnectionsManager.getInstance(account).sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingSticker$1$$ExternalSyntheticLambda0(this, response, onFinish));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingSticker$1  reason: not valid java name */
                public /* synthetic */ void m2388x170488fc(TLObject response, Runnable onFinish) {
                    if (response instanceof TLRPC.TL_messageMediaDocument) {
                        TLRPC.TL_messageMediaDocument mediaDocument = (TLRPC.TL_messageMediaDocument) response;
                        ImportingSticker.this.item = new TLRPC.TL_inputStickerSetItem();
                        ImportingSticker.this.item.document = new TLRPC.TL_inputDocument();
                        ImportingSticker.this.item.document.id = mediaDocument.document.id;
                        ImportingSticker.this.item.document.access_hash = mediaDocument.document.access_hash;
                        ImportingSticker.this.item.document.file_reference = mediaDocument.document.file_reference;
                        ImportingSticker.this.item.emoji = ImportingSticker.this.emoji != null ? ImportingSticker.this.emoji : "";
                        ImportingSticker.this.mimeType = mediaDocument.document.mime_type;
                    } else if (ImportingSticker.this.animated) {
                        ImportingSticker.this.mimeType = "application/x-bad-tgsticker";
                    }
                    onFinish.run();
                }
            }, 2);
        }
    }

    public class ImportingStickers {
        public double estimatedUploadSpeed;
        private long lastUploadSize;
        private long lastUploadTime;
        public String shortName;
        public String software;
        public int timeUntilFinish = Integer.MAX_VALUE;
        public String title;
        public long totalSize;
        public ArrayList<ImportingSticker> uploadMedia = new ArrayList<>();
        public int uploadProgress;
        public HashMap<String, Float> uploadProgresses = new HashMap<>();
        public HashMap<String, ImportingSticker> uploadSet = new HashMap<>();
        public HashMap<String, Long> uploadSize = new HashMap<>();
        public long uploadedSize;

        public ImportingStickers() {
        }

        /* access modifiers changed from: private */
        public void initImport() {
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            this.lastUploadTime = SystemClock.elapsedRealtime();
            int N = this.uploadMedia.size();
            for (int a = 0; a < N; a++) {
                SendMessagesHelper.this.getFileLoader().uploadFile(this.uploadMedia.get(a).path, false, true, 67108864);
            }
        }

        public long getUploadedCount() {
            return this.uploadedSize;
        }

        public long getTotalCount() {
            return this.totalSize;
        }

        /* access modifiers changed from: private */
        public void onFileFailedToUpload(String path) {
            ImportingSticker file = this.uploadSet.remove(path);
            if (file != null) {
                this.uploadMedia.remove(file);
            }
        }

        /* access modifiers changed from: private */
        public void addUploadProgress(String path, long sz, float progress) {
            String str = path;
            this.uploadProgresses.put(str, Float.valueOf(progress));
            this.uploadSize.put(str, Long.valueOf(sz));
            this.uploadedSize = 0;
            for (Map.Entry<String, Long> entry : this.uploadSize.entrySet()) {
                this.uploadedSize += entry.getValue().longValue();
            }
            long newTime = SystemClock.elapsedRealtime();
            long j = this.uploadedSize;
            long j2 = this.lastUploadSize;
            if (j != j2) {
                long j3 = this.lastUploadTime;
                if (newTime != j3) {
                    double d = (double) (newTime - j3);
                    Double.isNaN(d);
                    double d2 = (double) (j - j2);
                    Double.isNaN(d2);
                    double uploadSpeed = d2 / (d / 1000.0d);
                    double d3 = this.estimatedUploadSpeed;
                    if (d3 == 0.0d) {
                        this.estimatedUploadSpeed = uploadSpeed;
                    } else {
                        this.estimatedUploadSpeed = (0.01d * uploadSpeed) + ((1.0d - 0.01d) * d3);
                    }
                    double d4 = (double) ((this.totalSize - j) * 1000);
                    double d5 = this.estimatedUploadSpeed;
                    Double.isNaN(d4);
                    this.timeUntilFinish = (int) (d4 / d5);
                    this.lastUploadSize = j;
                    this.lastUploadTime = newTime;
                }
            }
            int newProgress = (int) (100.0f * (((float) getUploadedCount()) / ((float) getTotalCount())));
            if (this.uploadProgress != newProgress) {
                this.uploadProgress = newProgress;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            }
        }

        /* access modifiers changed from: private */
        public void onMediaImport(String path, long size, TLRPC.InputFile inputFile) {
            addUploadProgress(path, size, 1.0f);
            ImportingSticker file = this.uploadSet.get(path);
            if (file != null) {
                file.uploadMedia(SendMessagesHelper.this.currentAccount, inputFile, new SendMessagesHelper$ImportingStickers$$ExternalSyntheticLambda0(this, path));
            }
        }

        /* renamed from: lambda$onMediaImport$0$org-telegram-messenger-SendMessagesHelper$ImportingStickers  reason: not valid java name */
        public /* synthetic */ void m2389xb92aa0e3(String path) {
            this.uploadSet.remove(path);
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
            if (this.uploadSet.isEmpty()) {
                startImport();
            }
        }

        /* access modifiers changed from: private */
        public void startImport() {
            final TLRPC.TL_stickers_createStickerSet req = new TLRPC.TL_stickers_createStickerSet();
            req.user_id = new TLRPC.TL_inputUserSelf();
            req.title = this.title;
            req.short_name = this.shortName;
            req.animated = this.uploadMedia.get(0).animated;
            String str = this.software;
            if (str != null) {
                req.software = str;
                req.flags |= 8;
            }
            int N = this.uploadMedia.size();
            for (int a = 0; a < N; a++) {
                ImportingSticker file = this.uploadMedia.get(a);
                if (file.item != null) {
                    req.stickers.add(file.item);
                }
            }
            SendMessagesHelper.this.getConnectionsManager().sendRequest(req, new RequestDelegate() {
                public void run(TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$ImportingStickers$1$$ExternalSyntheticLambda0(this, error, req, response));
                }

                /* renamed from: lambda$run$0$org-telegram-messenger-SendMessagesHelper$ImportingStickers$1  reason: not valid java name */
                public /* synthetic */ void m2390xCLASSNAMEdbdb1(TLRPC.TL_error error, TLRPC.TL_stickers_createStickerSet req, TLObject response) {
                    SendMessagesHelper.this.importingStickersMap.remove(ImportingStickers.this.shortName);
                    if (error == null) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName);
                    } else {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, ImportingStickers.this.shortName, req, error);
                    }
                    if (!(response instanceof TLRPC.TL_messages_stickerSet)) {
                        return;
                    }
                    if (SendMessagesHelper.this.getNotificationCenter().hasObservers(NotificationCenter.stickersImportComplete)) {
                        SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportComplete, response);
                        return;
                    }
                    SendMessagesHelper.this.getMediaDataController().toggleStickerSet((Context) null, response, 2, (BaseFragment) null, false, false);
                }
            });
        }

        public void setImportProgress(int value) {
            if (value == 100) {
                SendMessagesHelper.this.importingStickersMap.remove(this.shortName);
            }
            SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.stickersImportProgressChanged, this.shortName);
        }
    }

    static {
        int cores;
        if (Build.VERSION.SDK_INT >= 17) {
            cores = Runtime.getRuntime().availableProcessors();
        } else {
            cores = 2;
        }
        mediaSendThreadPool = new ThreadPoolExecutor(cores, cores, 60, TimeUnit.SECONDS, new LinkedBlockingQueue());
    }

    private static class MediaSendPrepareWorker {
        public volatile String parentObject;
        public volatile TLRPC.TL_photo photo;
        public CountDownLatch sync;

        private MediaSendPrepareWorker() {
        }
    }

    public static class LocationProvider {
        /* access modifiers changed from: private */
        public LocationProviderDelegate delegate;
        private GpsLocationListener gpsLocationListener = new GpsLocationListener();
        /* access modifiers changed from: private */
        public Location lastKnownLocation;
        private LocationManager locationManager;
        /* access modifiers changed from: private */
        public Runnable locationQueryCancelRunnable;
        private GpsLocationListener networkLocationListener = new GpsLocationListener();

        public interface LocationProviderDelegate {
            void onLocationAcquired(Location location);

            void onUnableLocationAcquire();
        }

        private class GpsLocationListener implements LocationListener {
            private GpsLocationListener() {
            }

            public void onLocationChanged(Location location) {
                if (location != null && LocationProvider.this.locationQueryCancelRunnable != null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("found location " + location);
                    }
                    Location unused = LocationProvider.this.lastKnownLocation = location;
                    if (location.getAccuracy() < 100.0f) {
                        if (LocationProvider.this.delegate != null) {
                            LocationProvider.this.delegate.onLocationAcquired(location);
                        }
                        if (LocationProvider.this.locationQueryCancelRunnable != null) {
                            AndroidUtilities.cancelRunOnUIThread(LocationProvider.this.locationQueryCancelRunnable);
                        }
                        LocationProvider.this.cleanup();
                    }
                }
            }

            public void onStatusChanged(String provider, int status, Bundle extras) {
            }

            public void onProviderEnabled(String provider) {
            }

            public void onProviderDisabled(String provider) {
            }
        }

        public LocationProvider() {
        }

        public LocationProvider(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        public void setDelegate(LocationProviderDelegate locationProviderDelegate) {
            this.delegate = locationProviderDelegate;
        }

        /* access modifiers changed from: private */
        public void cleanup() {
            this.locationManager.removeUpdates(this.gpsLocationListener);
            this.locationManager.removeUpdates(this.networkLocationListener);
            this.lastKnownLocation = null;
            this.locationQueryCancelRunnable = null;
        }

        public void start() {
            if (this.locationManager == null) {
                this.locationManager = (LocationManager) ApplicationLoader.applicationContext.getSystemService("location");
            }
            try {
                this.locationManager.requestLocationUpdates("gps", 1, 0.0f, this.gpsLocationListener);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            try {
                this.locationManager.requestLocationUpdates("network", 1, 0.0f, this.networkLocationListener);
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
            }
            try {
                Location lastKnownLocation2 = this.locationManager.getLastKnownLocation("gps");
                this.lastKnownLocation = lastKnownLocation2;
                if (lastKnownLocation2 == null) {
                    this.lastKnownLocation = this.locationManager.getLastKnownLocation("network");
                }
            } catch (Exception e3) {
                FileLog.e((Throwable) e3);
            }
            Runnable runnable = this.locationQueryCancelRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0 sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0 = new SendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0(this);
            this.locationQueryCancelRunnable = sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0;
            AndroidUtilities.runOnUIThread(sendMessagesHelper$LocationProvider$$ExternalSyntheticLambda0, 5000);
        }

        /* renamed from: lambda$start$0$org-telegram-messenger-SendMessagesHelper$LocationProvider  reason: not valid java name */
        public /* synthetic */ void m2391x9940a2de() {
            LocationProviderDelegate locationProviderDelegate = this.delegate;
            if (locationProviderDelegate != null) {
                Location location = this.lastKnownLocation;
                if (location != null) {
                    locationProviderDelegate.onLocationAcquired(location);
                } else {
                    locationProviderDelegate.onUnableLocationAcquire();
                }
            }
            cleanup();
        }

        public void stop() {
            if (this.locationManager != null) {
                Runnable runnable = this.locationQueryCancelRunnable;
                if (runnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(runnable);
                }
                cleanup();
            }
        }
    }

    protected class DelayedMessageSendAfterRequest {
        public DelayedMessage delayedMessage;
        public MessageObject msgObj;
        public ArrayList<MessageObject> msgObjs;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public TLObject request;
        public boolean scheduled;

        protected DelayedMessageSendAfterRequest() {
        }
    }

    protected class DelayedMessage {
        public TLRPC.EncryptedChat encryptedChat;
        public HashMap<Object, Object> extraHashMap;
        public int finalGroupMessage;
        public long groupId;
        public String httpLocation;
        public ArrayList<String> httpLocations;
        public ArrayList<TLRPC.InputMedia> inputMedias;
        public TLRPC.InputMedia inputUploadMedia;
        public TLObject locationParent;
        public ArrayList<TLRPC.PhotoSize> locations;
        public ArrayList<MessageObject> messageObjects;
        public ArrayList<TLRPC.Message> messages;
        public MessageObject obj;
        public String originalPath;
        public ArrayList<String> originalPaths;
        public Object parentObject;
        public ArrayList<Object> parentObjects;
        public long peer;
        public boolean performMediaUpload;
        public TLRPC.PhotoSize photoSize;
        ArrayList<DelayedMessageSendAfterRequest> requests;
        public boolean retriedToSend;
        public boolean scheduled;
        public TLObject sendEncryptedRequest;
        public TLObject sendRequest;
        public int topMessageId;
        public int type;
        public VideoEditedInfo videoEditedInfo;
        public ArrayList<VideoEditedInfo> videoEditedInfos;

        public DelayedMessage(long peer2) {
            this.peer = peer2;
        }

        public void initForGroup(long id) {
            this.type = 4;
            this.groupId = id;
            this.messageObjects = new ArrayList<>();
            this.messages = new ArrayList<>();
            this.inputMedias = new ArrayList<>();
            this.originalPaths = new ArrayList<>();
            this.parentObjects = new ArrayList<>();
            this.extraHashMap = new HashMap<>();
            this.locations = new ArrayList<>();
            this.httpLocations = new ArrayList<>();
            this.videoEditedInfos = new ArrayList<>();
        }

        public void addDelayedRequest(TLObject req, MessageObject msgObj, String originalPath2, Object parentObject2, DelayedMessage delayedMessage, boolean scheduled2) {
            DelayedMessageSendAfterRequest request = new DelayedMessageSendAfterRequest();
            request.request = req;
            request.msgObj = msgObj;
            request.originalPath = originalPath2;
            request.delayedMessage = delayedMessage;
            request.parentObject = parentObject2;
            request.scheduled = scheduled2;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(request);
        }

        public void addDelayedRequest(TLObject req, ArrayList<MessageObject> msgObjs, ArrayList<String> originalPaths2, ArrayList<Object> parentObjects2, DelayedMessage delayedMessage, boolean scheduled2) {
            DelayedMessageSendAfterRequest request = new DelayedMessageSendAfterRequest();
            request.request = req;
            request.msgObjs = msgObjs;
            request.originalPaths = originalPaths2;
            request.delayedMessage = delayedMessage;
            request.parentObjects = parentObjects2;
            request.scheduled = scheduled2;
            if (this.requests == null) {
                this.requests = new ArrayList<>();
            }
            this.requests.add(request);
        }

        public void sendDelayedRequests() {
            ArrayList<DelayedMessageSendAfterRequest> arrayList = this.requests;
            if (arrayList != null) {
                int i = this.type;
                if (i == 4 || i == 0) {
                    int size = arrayList.size();
                    for (int a = 0; a < size; a++) {
                        DelayedMessageSendAfterRequest request = this.requests.get(a);
                        if (request.request instanceof TLRPC.TL_messages_sendEncryptedMultiMedia) {
                            SendMessagesHelper.this.getSecretChatHelper().performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) request.request, this);
                        } else if (request.request instanceof TLRPC.TL_messages_sendMultiMedia) {
                            SendMessagesHelper.this.performSendMessageRequestMulti((TLRPC.TL_messages_sendMultiMedia) request.request, request.msgObjs, request.originalPaths, request.parentObjects, request.delayedMessage, request.scheduled);
                        } else {
                            SendMessagesHelper.this.performSendMessageRequest(request.request, request.msgObj, request.originalPath, request.delayedMessage, request.parentObject, (HashMap<String, String>) null, request.scheduled);
                        }
                    }
                    this.requests = null;
                }
            }
        }

        public void markAsError() {
            if (this.type == 4) {
                for (int a = 0; a < this.messageObjects.size(); a++) {
                    MessageObject obj2 = this.messageObjects.get(a);
                    SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(obj2.messageOwner, obj2.scheduled);
                    obj2.messageOwner.send_state = 2;
                    SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(obj2.getId()));
                    SendMessagesHelper.this.processSentMessage(obj2.getId());
                    SendMessagesHelper.this.removeFromUploadingMessages(obj2.getId(), this.scheduled);
                }
                HashMap access$1200 = SendMessagesHelper.this.delayedMessages;
                access$1200.remove("group_" + this.groupId);
            } else {
                SendMessagesHelper.this.getMessagesStorage().markMessageAsSendError(this.obj.messageOwner, this.obj.scheduled);
                this.obj.messageOwner.send_state = 2;
                SendMessagesHelper.this.getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(this.obj.getId()));
                SendMessagesHelper.this.processSentMessage(this.obj.getId());
                SendMessagesHelper.this.removeFromUploadingMessages(this.obj.getId(), this.scheduled);
            }
            sendDelayedRequests();
        }
    }

    public static SendMessagesHelper getInstance(int num) {
        SendMessagesHelper localInstance = Instance[num];
        if (localInstance == null) {
            synchronized (SendMessagesHelper.class) {
                localInstance = Instance[num];
                if (localInstance == null) {
                    SendMessagesHelper[] sendMessagesHelperArr = Instance;
                    SendMessagesHelper sendMessagesHelper = new SendMessagesHelper(num);
                    localInstance = sendMessagesHelper;
                    sendMessagesHelperArr[num] = sendMessagesHelper;
                }
            }
        }
        return localInstance;
    }

    public SendMessagesHelper(int instance) {
        super(instance);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda14(this));
    }

    /* renamed from: lambda$new$0$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m445lambda$new$0$orgtelegrammessengerSendMessagesHelper() {
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadProgressChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.fileUploadFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingStarted);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.filePreparingFailed);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidFailedLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.httpFileDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoaded);
        getNotificationCenter().addObserver(this, NotificationCenter.fileLoadFailed);
    }

    public void cleanup() {
        this.delayedMessages.clear();
        this.unsentMessages.clear();
        this.sendingMessages.clear();
        this.editingMessages.clear();
        this.sendingMessagesIdDialogs.clear();
        this.uploadMessages.clear();
        this.uploadingMessagesIdDialogs.clear();
        this.waitingForLocation.clear();
        this.waitingForCallback.clear();
        this.waitingForVote.clear();
        this.importingHistoryFiles.clear();
        this.importingHistoryMap.clear();
        this.importingStickersFiles.clear();
        this.importingStickersMap.clear();
        this.locationProvider.stop();
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v29, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v18, resolved type: org.telegram.tgnet.TLRPC$InputMedia} */
    /* JADX WARNING: type inference failed for: r4v40, types: [org.telegram.tgnet.TLObject] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void didReceivedNotification(int r35, int r36, java.lang.Object... r37) {
        /*
            r34 = this;
            r10 = r34
            r11 = r35
            int r0 = org.telegram.messenger.NotificationCenter.fileUploadProgressChanged
            r12 = 2
            r1 = 0
            r13 = 1
            if (r11 != r0) goto L_0x005a
            r0 = r37[r1]
            java.lang.String r0 = (java.lang.String) r0
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingHistory> r1 = r10.importingHistoryFiles
            java.lang.Object r1 = r1.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingHistory r1 = (org.telegram.messenger.SendMessagesHelper.ImportingHistory) r1
            if (r1 == 0) goto L_0x0033
            r2 = r37[r13]
            java.lang.Long r2 = (java.lang.Long) r2
            r3 = r37[r12]
            java.lang.Long r3 = (java.lang.Long) r3
            long r4 = r2.longValue()
            long r6 = r2.longValue()
            float r6 = (float) r6
            long r7 = r3.longValue()
            float r7 = (float) r7
            float r6 = r6 / r7
            r1.addUploadProgress(r0, r4, r6)
        L_0x0033:
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingStickers> r2 = r10.importingStickersFiles
            java.lang.Object r2 = r2.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingStickers r2 = (org.telegram.messenger.SendMessagesHelper.ImportingStickers) r2
            if (r2 == 0) goto L_0x0057
            r3 = r37[r13]
            java.lang.Long r3 = (java.lang.Long) r3
            r4 = r37[r12]
            java.lang.Long r4 = (java.lang.Long) r4
            long r5 = r3.longValue()
            long r7 = r3.longValue()
            float r7 = (float) r7
            long r8 = r4.longValue()
            float r8 = (float) r8
            float r7 = r7 / r8
            r2.addUploadProgress(r0, r5, r7)
        L_0x0057:
            r6 = r11
            goto L_0x07ba
        L_0x005a:
            int r0 = org.telegram.messenger.NotificationCenter.fileUploaded
            java.lang.String r14 = "_t"
            if (r11 != r0) goto L_0x0405
            r0 = r37[r1]
            r7 = r0
            java.lang.String r7 = (java.lang.String) r7
            r0 = r37[r13]
            r6 = r0
            org.telegram.tgnet.TLRPC$InputFile r6 = (org.telegram.tgnet.TLRPC.InputFile) r6
            r0 = r37[r12]
            r5 = r0
            org.telegram.tgnet.TLRPC$InputEncryptedFile r5 = (org.telegram.tgnet.TLRPC.InputEncryptedFile) r5
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingHistory> r0 = r10.importingHistoryFiles
            java.lang.Object r0 = r0.get(r7)
            r4 = r0
            org.telegram.messenger.SendMessagesHelper$ImportingHistory r4 = (org.telegram.messenger.SendMessagesHelper.ImportingHistory) r4
            r23 = 5
            if (r4 == 0) goto L_0x0093
            java.lang.String r0 = r4.historyPath
            boolean r0 = r7.equals(r0)
            if (r0 == 0) goto L_0x0088
            r4.initImport(r6)
            goto L_0x0093
        L_0x0088:
            r0 = r37[r23]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            r4.onMediaImport(r7, r0, r6)
        L_0x0093:
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingStickers> r0 = r10.importingStickersFiles
            java.lang.Object r0 = r0.get(r7)
            r3 = r0
            org.telegram.messenger.SendMessagesHelper$ImportingStickers r3 = (org.telegram.messenger.SendMessagesHelper.ImportingStickers) r3
            if (r3 == 0) goto L_0x00a9
            r0 = r37[r23]
            java.lang.Long r0 = (java.lang.Long) r0
            long r0 = r0.longValue()
            r3.onMediaImport(r7, r0, r6)
        L_0x00a9:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            java.lang.Object r0 = r0.get(r7)
            r2 = r0
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x03f6
            r0 = 0
            r1 = r0
        L_0x00b6:
            int r0 = r2.size()
            if (r1 >= r0) goto L_0x03de
            java.lang.Object r0 = r2.get(r1)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r0 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r0
            r16 = 0
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messages_sendMedia
            if (r8 == 0) goto L_0x00d1
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            org.telegram.tgnet.TLRPC$TL_messages_sendMedia r8 = (org.telegram.tgnet.TLRPC.TL_messages_sendMedia) r8
            org.telegram.tgnet.TLRPC$InputMedia r8 = r8.media
            goto L_0x00f3
        L_0x00d1:
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messages_editMessage
            if (r8 == 0) goto L_0x00de
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            org.telegram.tgnet.TLRPC$TL_messages_editMessage r8 = (org.telegram.tgnet.TLRPC.TL_messages_editMessage) r8
            org.telegram.tgnet.TLRPC$InputMedia r8 = r8.media
            goto L_0x00f3
        L_0x00de:
            org.telegram.tgnet.TLObject r8 = r0.sendRequest
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia
            if (r8 == 0) goto L_0x00f1
            java.util.HashMap<java.lang.Object, java.lang.Object> r8 = r0.extraHashMap
            java.lang.Object r8 = r8.get(r7)
            r16 = r8
            org.telegram.tgnet.TLRPC$InputMedia r16 = (org.telegram.tgnet.TLRPC.InputMedia) r16
            r8 = r16
            goto L_0x00f3
        L_0x00f1:
            r8 = r16
        L_0x00f3:
            java.lang.String r9 = "_i"
            if (r6 == 0) goto L_0x02dc
            if (r8 == 0) goto L_0x02dc
            int r15 = r0.type
            if (r15 != 0) goto L_0x0143
            r8.file = r6
            org.telegram.tgnet.TLObject r9 = r0.sendRequest
            org.telegram.messenger.MessageObject r15 = r0.obj
            java.lang.String r12 = r0.originalPath
            r18 = 1
            r19 = 0
            java.lang.Object r13 = r0.parentObject
            r20 = 0
            r21 = r8
            boolean r8 = r0.scheduled
            r26 = r0
            r0 = r34
            r27 = r1
            r1 = r9
            r9 = r2
            r2 = r15
            r15 = r3
            r3 = r12
            r12 = r4
            r4 = r26
            r28 = r5
            r5 = r18
            r29 = r6
            r6 = r19
            r30 = r7
            r7 = r13
            r17 = r8
            r13 = r21
            r8 = r20
            r31 = r12
            r32 = r15
            r15 = 0
            r12 = r9
            r9 = r17
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7, r8, r9)
            r8 = r26
            r15 = r29
            r2 = r30
            goto L_0x02cf
        L_0x0143:
            r26 = r0
            r27 = r1
            r12 = r2
            r32 = r3
            r31 = r4
            r28 = r5
            r29 = r6
            r30 = r7
            r13 = r8
            r15 = 0
            r8 = r26
            int r0 = r8.type
            r1 = 1
            if (r0 != r1) goto L_0x01b4
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.file
            if (r0 != 0) goto L_0x018f
            r9 = r29
            r13.file = r9
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.thumb
            if (r0 != 0) goto L_0x0179
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            if (r0 == 0) goto L_0x0179
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            org.telegram.tgnet.TLRPC$FileLocation r0 = r0.location
            if (r0 == 0) goto L_0x0179
            r10.performSendDelayedMessage(r8)
            r15 = r9
            r2 = r30
            goto L_0x02cf
        L_0x0179:
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r7 = r8.scheduled
            r0 = r34
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r15 = r9
            r2 = r30
            goto L_0x02cf
        L_0x018f:
            r9 = r29
            r13.thumb = r9
            int r0 = r13.flags
            r7 = 4
            r0 = r0 | r7
            r13.flags = r0
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r0 = r8.scheduled
            r16 = r0
            r0 = r34
            r15 = 4
            r7 = r16
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r15 = r9
            r2 = r30
            goto L_0x02cf
        L_0x01b4:
            r7 = r29
            r15 = 4
            int r0 = r8.type
            r1 = 2
            if (r0 != r1) goto L_0x020d
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.file
            if (r0 != 0) goto L_0x01ef
            r13.file = r7
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.thumb
            if (r0 != 0) goto L_0x01d8
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            if (r0 == 0) goto L_0x01d8
            org.telegram.tgnet.TLRPC$PhotoSize r0 = r8.photoSize
            org.telegram.tgnet.TLRPC$FileLocation r0 = r0.location
            if (r0 == 0) goto L_0x01d8
            r10.performSendDelayedMessage(r8)
            r15 = r7
            r2 = r30
            goto L_0x02cf
        L_0x01d8:
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r9 = r8.scheduled
            r0 = r34
            r15 = r7
            r7 = r9
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r2 = r30
            goto L_0x02cf
        L_0x01ef:
            r15 = r7
            r13.thumb = r15
            int r0 = r13.flags
            r1 = 4
            r0 = r0 | r1
            r13.flags = r0
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r7 = r8.scheduled
            r0 = r34
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r2 = r30
            goto L_0x02cf
        L_0x020d:
            r15 = r7
            int r0 = r8.type
            r1 = 3
            if (r0 != r1) goto L_0x022a
            r13.file = r15
            org.telegram.tgnet.TLObject r1 = r8.sendRequest
            org.telegram.messenger.MessageObject r2 = r8.obj
            java.lang.String r3 = r8.originalPath
            r4 = 0
            java.lang.Object r5 = r8.parentObject
            r6 = 0
            boolean r7 = r8.scheduled
            r0 = r34
            r0.performSendMessageRequest(r1, r2, r3, r4, r5, r6, r7)
            r2 = r30
            goto L_0x02cf
        L_0x022a:
            int r0 = r8.type
            r1 = 4
            if (r0 != r1) goto L_0x02cd
            boolean r0 = r13 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument
            if (r0 == 0) goto L_0x02c4
            org.telegram.tgnet.TLRPC$InputFile r0 = r13.file
            if (r0 != 0) goto L_0x029c
            r13.file = r15
            java.util.HashMap<java.lang.Object, java.lang.Object> r0 = r8.extraHashMap
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r2 = r30
            r1.append(r2)
            r1.append(r9)
            java.lang.String r1 = r1.toString()
            java.lang.Object r0 = r0.get(r1)
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r8.messageObjects
            int r1 = r1.indexOf(r0)
            if (r1 < 0) goto L_0x0269
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r8.messageObjects
            java.lang.Object r3 = r3.get(r1)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            java.lang.String r3 = r3.attachPath
            r10.stopVideoService(r3)
        L_0x0269:
            java.util.HashMap<java.lang.Object, java.lang.Object> r3 = r8.extraHashMap
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            r4.append(r2)
            r4.append(r14)
            java.lang.String r4 = r4.toString()
            java.lang.Object r3 = r3.get(r4)
            org.telegram.tgnet.TLRPC$PhotoSize r3 = (org.telegram.tgnet.TLRPC.PhotoSize) r3
            r8.photoSize = r3
            org.telegram.tgnet.TLRPC$InputFile r3 = r13.thumb
            if (r3 != 0) goto L_0x0297
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r8.photoSize
            if (r3 == 0) goto L_0x0297
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r8.photoSize
            org.telegram.tgnet.TLRPC$FileLocation r3 = r3.location
            if (r3 == 0) goto L_0x0297
            r3 = 1
            r8.performMediaUpload = r3
            r10.performSendDelayedMessage(r8, r1)
            goto L_0x029b
        L_0x0297:
            r3 = 0
            r10.uploadMultiMedia(r8, r13, r3, r2)
        L_0x029b:
            goto L_0x02cf
        L_0x029c:
            r2 = r30
            r13.thumb = r15
            int r0 = r13.flags
            r1 = 4
            r0 = r0 | r1
            r13.flags = r0
            java.util.HashMap<java.lang.Object, java.lang.Object> r0 = r8.extraHashMap
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r1.append(r2)
            java.lang.String r3 = "_o"
            r1.append(r3)
            java.lang.String r1 = r1.toString()
            java.lang.Object r0 = r0.get(r1)
            java.lang.String r0 = (java.lang.String) r0
            r1 = 0
            r10.uploadMultiMedia(r8, r13, r1, r0)
            goto L_0x02cf
        L_0x02c4:
            r2 = r30
            r1 = 0
            r13.file = r15
            r10.uploadMultiMedia(r8, r13, r1, r2)
            goto L_0x02cf
        L_0x02cd:
            r2 = r30
        L_0x02cf:
            r0 = r27
            r12.remove(r0)
            int r1 = r0 + -1
            r0 = r1
            r7 = r12
            r1 = r28
            goto L_0x03ca
        L_0x02dc:
            r12 = r2
            r32 = r3
            r31 = r4
            r28 = r5
            r15 = r6
            r2 = r7
            r13 = r8
            r8 = r0
            r0 = r1
            r1 = r28
            if (r1 == 0) goto L_0x03c9
            org.telegram.tgnet.TLObject r3 = r8.sendEncryptedRequest
            if (r3 == 0) goto L_0x03c9
            r3 = 0
            int r4 = r8.type
            r5 = 4
            if (r4 != r5) goto L_0x0363
            org.telegram.tgnet.TLObject r4 = r8.sendEncryptedRequest
            org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia r4 = (org.telegram.tgnet.TLRPC.TL_messages_sendEncryptedMultiMedia) r4
            java.util.HashMap<java.lang.Object, java.lang.Object> r5 = r8.extraHashMap
            java.lang.Object r5 = r5.get(r2)
            org.telegram.tgnet.TLRPC$InputEncryptedFile r5 = (org.telegram.tgnet.TLRPC.InputEncryptedFile) r5
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputEncryptedFile> r6 = r4.files
            int r6 = r6.indexOf(r5)
            if (r6 < 0) goto L_0x0361
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputEncryptedFile> r7 = r4.files
            r7.set(r6, r1)
            r7 = r12
            long r11 = r5.id
            r16 = 1
            int r18 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r18 != 0) goto L_0x0357
            java.util.HashMap<java.lang.Object, java.lang.Object> r11 = r8.extraHashMap
            java.lang.StringBuilder r12 = new java.lang.StringBuilder
            r12.<init>()
            r12.append(r2)
            r12.append(r9)
            java.lang.String r9 = r12.toString()
            java.lang.Object r9 = r11.get(r9)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            java.util.HashMap<java.lang.Object, java.lang.Object> r11 = r8.extraHashMap
            java.lang.StringBuilder r12 = new java.lang.StringBuilder
            r12.<init>()
            r12.append(r2)
            r12.append(r14)
            java.lang.String r12 = r12.toString()
            java.lang.Object r11 = r11.get(r12)
            org.telegram.tgnet.TLRPC$PhotoSize r11 = (org.telegram.tgnet.TLRPC.PhotoSize) r11
            r8.photoSize = r11
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r8.messageObjects
            java.lang.Object r11 = r11.get(r6)
            org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
            org.telegram.tgnet.TLRPC$Message r11 = r11.messageOwner
            java.lang.String r11 = r11.attachPath
            r10.stopVideoService(r11)
        L_0x0357:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_decryptedMessage> r9 = r4.messages
            java.lang.Object r9 = r9.get(r6)
            r3 = r9
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessage) r3
            goto L_0x0362
        L_0x0361:
            r7 = r12
        L_0x0362:
            goto L_0x0369
        L_0x0363:
            r7 = r12
            org.telegram.tgnet.TLObject r4 = r8.sendEncryptedRequest
            r3 = r4
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessage) r3
        L_0x0369:
            if (r3 == 0) goto L_0x03c3
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo
            if (r4 != 0) goto L_0x037d
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto
            if (r4 != 0) goto L_0x037d
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument
            if (r4 == 0) goto L_0x038b
        L_0x037d:
            r4 = r37[r23]
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r6 = r3.media
            int r9 = (int) r4
            long r11 = (long) r9
            r6.size = r11
        L_0x038b:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            r5 = 3
            r6 = r37[r5]
            byte[] r6 = (byte[]) r6
            r4.key = r6
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r3.media
            r5 = 4
            r6 = r37[r5]
            byte[] r6 = (byte[]) r6
            r4.iv = r6
            int r4 = r8.type
            if (r4 != r5) goto L_0x03a6
            r4 = 0
            r10.uploadMultiMedia(r8, r4, r1, r2)
            goto L_0x03c3
        L_0x03a6:
            org.telegram.messenger.SecretChatHelper r16 = r34.getSecretChatHelper()
            org.telegram.messenger.MessageObject r4 = r8.obj
            org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = r8.encryptedChat
            java.lang.String r6 = r8.originalPath
            org.telegram.messenger.MessageObject r9 = r8.obj
            r17 = r3
            r18 = r4
            r19 = r5
            r20 = r1
            r21 = r6
            r22 = r9
            r16.performSendEncryptedRequest(r17, r18, r19, r20, r21, r22)
        L_0x03c3:
            r7.remove(r0)
            int r0 = r0 + -1
            goto L_0x03ca
        L_0x03c9:
            r7 = r12
        L_0x03ca:
            r3 = 1
            int r0 = r0 + r3
            r11 = r35
            r5 = r1
            r6 = r15
            r4 = r31
            r3 = r32
            r12 = 2
            r13 = 1
            r1 = r0
            r33 = r7
            r7 = r2
            r2 = r33
            goto L_0x00b6
        L_0x03de:
            r0 = r1
            r32 = r3
            r31 = r4
            r1 = r5
            r15 = r6
            r33 = r7
            r7 = r2
            r2 = r33
            boolean r0 = r7.isEmpty()
            if (r0 == 0) goto L_0x0401
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            r0.remove(r2)
            goto L_0x0401
        L_0x03f6:
            r32 = r3
            r31 = r4
            r1 = r5
            r15 = r6
            r33 = r7
            r7 = r2
            r2 = r33
        L_0x0401:
            r6 = r35
            goto L_0x07ba
        L_0x0405:
            int r0 = org.telegram.messenger.NotificationCenter.fileUploadFailed
            r6 = r35
            if (r6 != r0) goto L_0x046d
            r0 = r37[r1]
            java.lang.String r0 = (java.lang.String) r0
            r1 = 1
            r2 = r37[r1]
            java.lang.Boolean r2 = (java.lang.Boolean) r2
            boolean r1 = r2.booleanValue()
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingHistory> r2 = r10.importingHistoryFiles
            java.lang.Object r2 = r2.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingHistory r2 = (org.telegram.messenger.SendMessagesHelper.ImportingHistory) r2
            if (r2 == 0) goto L_0x0425
            r2.onFileFailedToUpload(r0)
        L_0x0425:
            java.util.HashMap<java.lang.String, org.telegram.messenger.SendMessagesHelper$ImportingStickers> r3 = r10.importingStickersFiles
            java.lang.Object r3 = r3.get(r0)
            org.telegram.messenger.SendMessagesHelper$ImportingStickers r3 = (org.telegram.messenger.SendMessagesHelper.ImportingStickers) r3
            if (r3 == 0) goto L_0x0432
            r3.onFileFailedToUpload(r0)
        L_0x0432:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r4 = r10.delayedMessages
            java.lang.Object r4 = r4.get(r0)
            java.util.ArrayList r4 = (java.util.ArrayList) r4
            if (r4 == 0) goto L_0x046b
            r5 = 0
        L_0x043d:
            int r7 = r4.size()
            if (r5 >= r7) goto L_0x0460
            java.lang.Object r7 = r4.get(r5)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r7
            if (r1 == 0) goto L_0x044f
            org.telegram.tgnet.TLObject r8 = r7.sendEncryptedRequest
            if (r8 != 0) goto L_0x0455
        L_0x044f:
            if (r1 != 0) goto L_0x045d
            org.telegram.tgnet.TLObject r8 = r7.sendRequest
            if (r8 == 0) goto L_0x045d
        L_0x0455:
            r7.markAsError()
            r4.remove(r5)
            int r5 = r5 + -1
        L_0x045d:
            r7 = 1
            int r5 = r5 + r7
            goto L_0x043d
        L_0x0460:
            boolean r5 = r4.isEmpty()
            if (r5 == 0) goto L_0x046b
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r5 = r10.delayedMessages
            r5.remove(r0)
        L_0x046b:
            goto L_0x07ba
        L_0x046d:
            int r0 = org.telegram.messenger.NotificationCenter.filePreparingStarted
            if (r6 != r0) goto L_0x04f2
            r0 = r37[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r1 = r0.getId()
            if (r1 != 0) goto L_0x047c
            return
        L_0x047c:
            r1 = 1
            r2 = r37[r1]
            r1 = r2
            java.lang.String r1 = (java.lang.String) r1
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            org.telegram.tgnet.TLRPC$Message r3 = r0.messageOwner
            java.lang.String r3 = r3.attachPath
            java.lang.Object r2 = r2.get(r3)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x04f0
            r3 = 0
        L_0x0491:
            int r4 = r2.size()
            if (r3 >= r4) goto L_0x04e1
            java.lang.Object r4 = r2.get(r3)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r4 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r4
            int r5 = r4.type
            r7 = 4
            if (r5 != r7) goto L_0x04cf
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r4.messageObjects
            int r5 = r5.indexOf(r0)
            java.util.HashMap<java.lang.Object, java.lang.Object> r7 = r4.extraHashMap
            java.lang.StringBuilder r8 = new java.lang.StringBuilder
            r8.<init>()
            org.telegram.tgnet.TLRPC$Message r9 = r0.messageOwner
            java.lang.String r9 = r9.attachPath
            r8.append(r9)
            r8.append(r14)
            java.lang.String r8 = r8.toString()
            java.lang.Object r7 = r7.get(r8)
            org.telegram.tgnet.TLRPC$PhotoSize r7 = (org.telegram.tgnet.TLRPC.PhotoSize) r7
            r4.photoSize = r7
            r7 = 1
            r4.performMediaUpload = r7
            r10.performSendDelayedMessage(r4, r5)
            r2.remove(r3)
            goto L_0x04e1
        L_0x04cf:
            org.telegram.messenger.MessageObject r5 = r4.obj
            if (r5 != r0) goto L_0x04dd
            r5 = 0
            r4.videoEditedInfo = r5
            r10.performSendDelayedMessage(r4)
            r2.remove(r3)
            goto L_0x04e1
        L_0x04dd:
            r5 = 0
            int r3 = r3 + 1
            goto L_0x0491
        L_0x04e1:
            boolean r3 = r2.isEmpty()
            if (r3 == 0) goto L_0x04f0
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r3 = r10.delayedMessages
            org.telegram.tgnet.TLRPC$Message r4 = r0.messageOwner
            java.lang.String r4 = r4.attachPath
            r3.remove(r4)
        L_0x04f0:
            goto L_0x07ba
        L_0x04f2:
            int r0 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            if (r6 != r0) goto L_0x0613
            r0 = r37[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r1 = r0.getId()
            if (r1 != 0) goto L_0x0501
            return
        L_0x0501:
            r1 = 1
            r2 = r37[r1]
            r1 = r2
            java.lang.String r1 = (java.lang.String) r1
            r2 = 2
            r2 = r37[r2]
            java.lang.Long r2 = (java.lang.Long) r2
            long r2 = r2.longValue()
            r4 = 3
            r4 = r37[r4]
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            long r7 = r0.getDialogId()
            boolean r7 = org.telegram.messenger.DialogObject.isEncryptedDialog(r7)
            org.telegram.messenger.FileLoader r11 = r34.getFileLoader()
            r12 = r1
            r13 = r7
            r14 = r2
            r16 = r4
            r11.checkUploadNewDataAvailable(r12, r13, r14, r16)
            r8 = 0
            int r11 = (r4 > r8 ? 1 : (r4 == r8 ? 0 : -1))
            if (r11 == 0) goto L_0x060d
            org.telegram.tgnet.TLRPC$Message r8 = r0.messageOwner
            java.lang.String r8 = r8.attachPath
            r10.stopVideoService(r8)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r8 = r10.delayedMessages
            org.telegram.tgnet.TLRPC$Message r9 = r0.messageOwner
            java.lang.String r9 = r9.attachPath
            java.lang.Object r8 = r8.get(r9)
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            if (r8 == 0) goto L_0x0608
            r9 = 0
        L_0x0549:
            int r11 = r8.size()
            if (r9 >= r11) goto L_0x0603
            java.lang.Object r11 = r8.get(r9)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r11 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r11
            int r12 = r11.type
            java.lang.String r13 = "ve"
            r14 = 4
            if (r12 != r14) goto L_0x05b5
            r12 = 0
        L_0x055d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r14 = r11.messageObjects
            int r14 = r14.size()
            if (r12 >= r14) goto L_0x05b0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r14 = r11.messageObjects
            java.lang.Object r14 = r14.get(r12)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            if (r14 != r0) goto L_0x05a9
            org.telegram.messenger.MessageObject r15 = r11.obj
            r16 = r1
            r1 = 1
            r15.shouldRemoveVideoEditedInfo = r1
            org.telegram.tgnet.TLRPC$Message r1 = r14.messageOwner
            java.util.HashMap<java.lang.String, java.lang.String> r1 = r1.params
            r1.remove(r13)
            org.telegram.tgnet.TLRPC$Message r1 = r14.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            int r13 = (int) r4
            r17 = r2
            long r2 = (long) r13
            r1.size = r2
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            org.telegram.tgnet.TLRPC$Message r2 = r14.messageOwner
            r1.add(r2)
            org.telegram.messenger.MessagesStorage r19 = r34.getMessagesStorage()
            r21 = 0
            r22 = 1
            r23 = 0
            r24 = 0
            boolean r2 = r14.scheduled
            r20 = r1
            r25 = r2
            r19.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r20, (boolean) r21, (boolean) r22, (boolean) r23, (int) r24, (boolean) r25)
            goto L_0x05b4
        L_0x05a9:
            r16 = r1
            r17 = r2
            int r12 = r12 + 1
            goto L_0x055d
        L_0x05b0:
            r16 = r1
            r17 = r2
        L_0x05b4:
            goto L_0x05fb
        L_0x05b5:
            r16 = r1
            r17 = r2
            org.telegram.messenger.MessageObject r1 = r11.obj
            if (r1 != r0) goto L_0x05fb
            org.telegram.messenger.MessageObject r1 = r11.obj
            r2 = 1
            r1.shouldRemoveVideoEditedInfo = r2
            org.telegram.messenger.MessageObject r1 = r11.obj
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.util.HashMap<java.lang.String, java.lang.String> r1 = r1.params
            r1.remove(r13)
            org.telegram.messenger.MessageObject r1 = r11.obj
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            int r2 = (int) r4
            long r2 = (long) r2
            r1.size = r2
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            org.telegram.messenger.MessageObject r2 = r11.obj
            org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
            r1.add(r2)
            org.telegram.messenger.MessagesStorage r19 = r34.getMessagesStorage()
            r21 = 0
            r22 = 1
            r23 = 0
            r24 = 0
            org.telegram.messenger.MessageObject r2 = r11.obj
            boolean r2 = r2.scheduled
            r20 = r1
            r25 = r2
            r19.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r20, (boolean) r21, (boolean) r22, (boolean) r23, (int) r24, (boolean) r25)
            goto L_0x0611
        L_0x05fb:
            int r9 = r9 + 1
            r1 = r16
            r2 = r17
            goto L_0x0549
        L_0x0603:
            r16 = r1
            r17 = r2
            goto L_0x0611
        L_0x0608:
            r16 = r1
            r17 = r2
            goto L_0x0611
        L_0x060d:
            r16 = r1
            r17 = r2
        L_0x0611:
            goto L_0x07ba
        L_0x0613:
            int r0 = org.telegram.messenger.NotificationCenter.filePreparingFailed
            if (r6 != r0) goto L_0x0685
            r0 = r37[r1]
            org.telegram.messenger.MessageObject r0 = (org.telegram.messenger.MessageObject) r0
            int r1 = r0.getId()
            if (r1 != 0) goto L_0x0622
            return
        L_0x0622:
            r1 = 1
            r2 = r37[r1]
            r1 = r2
            java.lang.String r1 = (java.lang.String) r1
            org.telegram.tgnet.TLRPC$Message r2 = r0.messageOwner
            java.lang.String r2 = r2.attachPath
            r10.stopVideoService(r2)
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            java.lang.Object r2 = r2.get(r1)
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            if (r2 == 0) goto L_0x0683
            r3 = 0
        L_0x063a:
            int r4 = r2.size()
            if (r3 >= r4) goto L_0x0678
            java.lang.Object r4 = r2.get(r3)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r4 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r4
            int r5 = r4.type
            r7 = 4
            if (r5 != r7) goto L_0x0669
            r5 = 0
        L_0x064c:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r7 = r4.messages
            int r7 = r7.size()
            if (r5 >= r7) goto L_0x0668
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r4.messageObjects
            java.lang.Object r7 = r7.get(r5)
            if (r7 != r0) goto L_0x0665
            r4.markAsError()
            r2.remove(r3)
            int r3 = r3 + -1
            goto L_0x0668
        L_0x0665:
            int r5 = r5 + 1
            goto L_0x064c
        L_0x0668:
            goto L_0x0675
        L_0x0669:
            org.telegram.messenger.MessageObject r5 = r4.obj
            if (r5 != r0) goto L_0x0675
            r4.markAsError()
            r2.remove(r3)
            int r3 = r3 + -1
        L_0x0675:
            r4 = 1
            int r3 = r3 + r4
            goto L_0x063a
        L_0x0678:
            boolean r3 = r2.isEmpty()
            if (r3 == 0) goto L_0x0683
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r3 = r10.delayedMessages
            r3.remove(r1)
        L_0x0683:
            goto L_0x07ba
        L_0x0685:
            int r0 = org.telegram.messenger.NotificationCenter.httpFileDidLoad
            if (r6 != r0) goto L_0x075f
            r0 = r37[r1]
            r7 = r0
            java.lang.String r7 = (java.lang.String) r7
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            java.lang.Object r0 = r0.get(r7)
            r8 = r0
            java.util.ArrayList r8 = (java.util.ArrayList) r8
            if (r8 == 0) goto L_0x075c
            r0 = 0
            r9 = r0
        L_0x069b:
            int r0 = r8.size()
            if (r9 >= r0) goto L_0x0754
            java.lang.Object r0 = r8.get(r9)
            r11 = r0
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r11 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r11
            r0 = -1
            int r1 = r11.type
            if (r1 != 0) goto L_0x06b4
            r0 = 0
            org.telegram.messenger.MessageObject r1 = r11.obj
            r13 = r0
            r14 = r1
            r12 = 2
            goto L_0x06dd
        L_0x06b4:
            int r1 = r11.type
            r12 = 2
            if (r1 != r12) goto L_0x06bf
            r0 = 1
            org.telegram.messenger.MessageObject r1 = r11.obj
            r13 = r0
            r14 = r1
            goto L_0x06dd
        L_0x06bf:
            int r1 = r11.type
            r2 = 4
            if (r1 != r2) goto L_0x06da
            java.util.HashMap<java.lang.Object, java.lang.Object> r1 = r11.extraHashMap
            java.lang.Object r1 = r1.get(r7)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            org.telegram.tgnet.TLRPC$Document r2 = r1.getDocument()
            if (r2 == 0) goto L_0x06d6
            r0 = 1
            r13 = r0
            r14 = r1
            goto L_0x06dd
        L_0x06d6:
            r0 = 0
            r13 = r0
            r14 = r1
            goto L_0x06dd
        L_0x06da:
            r1 = 0
            r13 = r0
            r14 = r1
        L_0x06dd:
            if (r13 != 0) goto L_0x071e
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = org.telegram.messenger.Utilities.MD5(r7)
            r0.append(r1)
            java.lang.String r1 = "."
            r0.append(r1)
            java.lang.String r1 = "file"
            java.lang.String r1 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r7, r1)
            r0.append(r1)
            java.lang.String r15 = r0.toString()
            java.io.File r2 = new java.io.File
            r0 = 4
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r0)
            r2.<init>(r1, r15)
            org.telegram.messenger.DispatchQueue r5 = org.telegram.messenger.Utilities.globalQueue
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda17 r4 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda17
            r0 = r4
            r1 = r34
            r3 = r14
            r12 = r4
            r4 = r11
            r16 = r8
            r8 = r5
            r5 = r7
            r0.<init>(r1, r2, r3, r4, r5)
            r8.postRunnable(r12)
            r0 = 1
            r3 = 4
            goto L_0x074e
        L_0x071e:
            r16 = r8
            r0 = 1
            if (r13 != r0) goto L_0x074d
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = org.telegram.messenger.Utilities.MD5(r7)
            r1.append(r2)
            java.lang.String r2 = ".gif"
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            java.io.File r2 = new java.io.File
            r3 = 4
            java.io.File r4 = org.telegram.messenger.FileLoader.getDirectory(r3)
            r2.<init>(r4, r1)
            org.telegram.messenger.DispatchQueue r4 = org.telegram.messenger.Utilities.globalQueue
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda32 r5 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda32
            r5.<init>(r10, r11, r2, r14)
            r4.postRunnable(r5)
            goto L_0x074e
        L_0x074d:
            r3 = 4
        L_0x074e:
            int r9 = r9 + 1
            r8 = r16
            goto L_0x069b
        L_0x0754:
            r16 = r8
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r0 = r10.delayedMessages
            r0.remove(r7)
            goto L_0x075e
        L_0x075c:
            r16 = r8
        L_0x075e:
            goto L_0x07ba
        L_0x075f:
            int r0 = org.telegram.messenger.NotificationCenter.fileLoaded
            if (r6 != r0) goto L_0x078a
            r0 = r37[r1]
            java.lang.String r0 = (java.lang.String) r0
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r1 = r10.delayedMessages
            java.lang.Object r1 = r1.get(r0)
            java.util.ArrayList r1 = (java.util.ArrayList) r1
            if (r1 == 0) goto L_0x0793
            r2 = 0
        L_0x0772:
            int r3 = r1.size()
            if (r2 >= r3) goto L_0x0784
            java.lang.Object r3 = r1.get(r2)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r3
            r10.performSendDelayedMessage(r3)
            int r2 = r2 + 1
            goto L_0x0772
        L_0x0784:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            r2.remove(r0)
            goto L_0x0793
        L_0x078a:
            int r0 = org.telegram.messenger.NotificationCenter.httpFileDidFailedLoad
            if (r6 == r0) goto L_0x0794
            int r0 = org.telegram.messenger.NotificationCenter.fileLoadFailed
            if (r6 != r0) goto L_0x0793
            goto L_0x0794
        L_0x0793:
            goto L_0x07ba
        L_0x0794:
            r0 = r37[r1]
            java.lang.String r0 = (java.lang.String) r0
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r1 = r10.delayedMessages
            java.lang.Object r1 = r1.get(r0)
            java.util.ArrayList r1 = (java.util.ArrayList) r1
            if (r1 == 0) goto L_0x07ba
            r2 = 0
        L_0x07a3:
            int r3 = r1.size()
            if (r2 >= r3) goto L_0x07b5
            java.lang.Object r3 = r1.get(r2)
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r3
            r3.markAsError()
            int r2 = r2 + 1
            goto L_0x07a3
        L_0x07b5:
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r10.delayedMessages
            r2.remove(r0)
        L_0x07ba:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    /* renamed from: lambda$didReceivedNotification$2$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m440x5b683917(File cacheFile, MessageObject messageObject, DelayedMessage message, String path) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda58(this, generatePhotoSizes(cacheFile.toString(), (Uri) null), messageObject, cacheFile, message, path));
    }

    /* renamed from: lambda$didReceivedNotification$1$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m439x7626ca56(TLRPC.TL_photo photo, MessageObject messageObject, File cacheFile, DelayedMessage message, String path) {
        if (photo != null) {
            messageObject.messageOwner.media.photo = photo;
            messageObject.messageOwner.attachPath = cacheFile.toString();
            ArrayList<TLRPC.Message> messages = new ArrayList<>();
            messages.add(messageObject.messageOwner);
            getMessagesStorage().putMessages(messages, false, true, false, 0, messageObject.scheduled);
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
            message.photoSize = (TLRPC.PhotoSize) photo.sizes.get(photo.sizes.size() - 1);
            message.locationParent = photo;
            message.httpLocation = null;
            if (message.type == 4) {
                message.performMediaUpload = true;
                performSendDelayedMessage(message, message.messageObjects.indexOf(messageObject));
                return;
            }
            performSendDelayedMessage(message);
            return;
        }
        if (BuildVars.LOGS_ENABLED) {
            FileLog.e("can't load image " + path + " to file " + cacheFile.toString());
        }
        message.markAsError();
    }

    /* renamed from: lambda$didReceivedNotification$4$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m442x25eb1699(DelayedMessage message, File cacheFile, MessageObject messageObject) {
        TLRPC.Document document = message.obj.getDocument();
        boolean z = false;
        if (document.thumbs.isEmpty() || (document.thumbs.get(0).location instanceof TLRPC.TL_fileLocationUnavailable)) {
            try {
                Bitmap bitmap = ImageLoader.loadBitmap(cacheFile.getAbsolutePath(), (Uri) null, 90.0f, 90.0f, true);
                if (bitmap != null) {
                    document.thumbs.clear();
                    ArrayList<TLRPC.PhotoSize> arrayList = document.thumbs;
                    if (message.sendEncryptedRequest != null) {
                        z = true;
                    }
                    arrayList.add(ImageLoader.scaleAndSaveImage(bitmap, 90.0f, 90.0f, 55, z));
                    bitmap.recycle();
                }
            } catch (Exception e) {
                document.thumbs.clear();
                FileLog.e((Throwable) e);
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda34(this, message, cacheFile, document, messageObject));
    }

    /* renamed from: lambda$didReceivedNotification$3$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m441x40a9a7d8(DelayedMessage message, File cacheFile, TLRPC.Document document, MessageObject messageObject) {
        message.httpLocation = null;
        message.obj.messageOwner.attachPath = cacheFile.toString();
        if (!document.thumbs.isEmpty()) {
            TLRPC.PhotoSize photoSize = document.thumbs.get(0);
            if (!(photoSize instanceof TLRPC.TL_photoStrippedSize)) {
                message.photoSize = photoSize;
                message.locationParent = document;
            }
        }
        ArrayList<TLRPC.Message> messages = new ArrayList<>();
        messages.add(messageObject.messageOwner);
        getMessagesStorage().putMessages(messages, false, true, false, 0, messageObject.scheduled);
        message.performMediaUpload = true;
        performSendDelayedMessage(message);
        getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, message.obj.messageOwner);
    }

    private void revertEditingMessageObject(MessageObject object) {
        object.cancelEditing = true;
        object.messageOwner.media = object.previousMedia;
        object.messageOwner.message = object.previousMessage;
        object.messageOwner.entities = object.previousMessageEntities;
        object.messageOwner.attachPath = object.previousAttachPath;
        object.messageOwner.send_state = 0;
        if (object.messageOwner.entities != null) {
            object.messageOwner.flags |= 128;
        } else {
            object.messageOwner.flags &= -129;
        }
        object.previousMedia = null;
        object.previousMessage = null;
        object.previousMessageEntities = null;
        object.previousAttachPath = null;
        object.videoEditedInfo = null;
        object.type = -1;
        object.setType();
        object.caption = null;
        if (object.type != 0) {
            object.generateCaption();
        } else {
            object.resetLayout();
            object.checkLayout();
        }
        ArrayList<TLRPC.Message> arr = new ArrayList<>();
        arr.add(object.messageOwner);
        getMessagesStorage().putMessages(arr, false, true, false, 0, object.scheduled);
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(object);
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(object.getDialogId()), arrayList);
    }

    public void cancelSendingMessage(MessageObject object) {
        ArrayList<MessageObject> arrayList = new ArrayList<>();
        arrayList.add(object);
        cancelSendingMessage(arrayList);
    }

    public void cancelSendingMessage(ArrayList<MessageObject> objects) {
        TLRPC.Message sendingMessage;
        Iterator<Map.Entry<String, ArrayList<DelayedMessage>>> it;
        boolean enc;
        long dialogId;
        int b;
        MessageObject messageObject;
        ArrayList<String> keysToRemove;
        ArrayList<MessageObject> arrayList = objects;
        ArrayList<String> keysToRemove2 = new ArrayList<>();
        ArrayList<DelayedMessage> checkReadyToSendGroups = new ArrayList<>();
        ArrayList<Integer> messageIds = new ArrayList<>();
        int c = 0;
        boolean enc2 = false;
        boolean scheduled = false;
        long dialogId2 = 0;
        while (c < objects.size()) {
            MessageObject object = arrayList.get(c);
            if (object.scheduled) {
                scheduled = true;
            }
            dialogId2 = object.getDialogId();
            messageIds.add(Integer.valueOf(object.getId()));
            TLRPC.Message sendingMessage2 = removeFromSendingMessages(object.getId(), object.scheduled);
            if (sendingMessage2 != null) {
                getConnectionsManager().cancelRequest(sendingMessage2.reqId, true);
            }
            Iterator<Map.Entry<String, ArrayList<DelayedMessage>>> it2 = this.delayedMessages.entrySet().iterator();
            while (it2.hasNext()) {
                Map.Entry<String, ArrayList<DelayedMessage>> entry = it2.next();
                ArrayList<DelayedMessage> messages = entry.getValue();
                int a = 0;
                while (true) {
                    if (a >= messages.size()) {
                        sendingMessage = sendingMessage2;
                        it = it2;
                        enc = enc2;
                        dialogId = dialogId2;
                        break;
                    }
                    DelayedMessage message = messages.get(a);
                    sendingMessage = sendingMessage2;
                    it = it2;
                    if (message.type == 4) {
                        MessageObject messageObject2 = null;
                        int b2 = 0;
                        while (true) {
                            MessageObject messageObject3 = messageObject2;
                            if (b2 >= message.messageObjects.size()) {
                                enc = enc2;
                                b = -1;
                                messageObject = messageObject3;
                                break;
                            }
                            MessageObject messageObject4 = message.messageObjects.get(b2);
                            enc = enc2;
                            MessageObject messageObject5 = messageObject4;
                            if (messageObject4.getId() == object.getId()) {
                                removeFromUploadingMessages(object.getId(), object.scheduled);
                                b = b2;
                                messageObject = messageObject5;
                                break;
                            }
                            b2++;
                            messageObject2 = messageObject5;
                            enc2 = enc;
                        }
                        if (b >= 0) {
                            message.messageObjects.remove(b);
                            message.messages.remove(b);
                            message.originalPaths.remove(b);
                            if (!message.parentObjects.isEmpty()) {
                                message.parentObjects.remove(b);
                            }
                            if (message.sendRequest != null) {
                                dialogId = dialogId2;
                                ((TLRPC.TL_messages_sendMultiMedia) message.sendRequest).multi_media.remove(b);
                            } else {
                                dialogId = dialogId2;
                                TLRPC.TL_messages_sendEncryptedMultiMedia request = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
                                request.messages.remove(b);
                                request.files.remove(b);
                            }
                            MediaController.getInstance().cancelVideoConvert(object);
                            String keyToRemove = (String) message.extraHashMap.get(messageObject);
                            if (keyToRemove != null) {
                                keysToRemove2.add(keyToRemove);
                            }
                            if (message.messageObjects.isEmpty()) {
                                message.sendDelayedRequests();
                                keysToRemove = keysToRemove2;
                                int i = b;
                                MessageObject messageObject6 = messageObject;
                            } else {
                                int i2 = b;
                                if (message.finalGroupMessage == object.getId()) {
                                    MessageObject prevMessage = message.messageObjects.get(message.messageObjects.size() - 1);
                                    message.finalGroupMessage = prevMessage.getId();
                                    MessageObject messageObject7 = messageObject;
                                    String str = keyToRemove;
                                    prevMessage.messageOwner.params.put("final", "1");
                                    TLRPC.TL_messages_messages messagesRes = new TLRPC.TL_messages_messages();
                                    messagesRes.messages.add(prevMessage.messageOwner);
                                    keysToRemove = keysToRemove2;
                                    getMessagesStorage().putMessages((TLRPC.messages_Messages) messagesRes, message.peer, -2, 0, false, scheduled);
                                } else {
                                    keysToRemove = keysToRemove2;
                                    MessageObject messageObject8 = messageObject;
                                    String str2 = keyToRemove;
                                }
                                if (!checkReadyToSendGroups.contains(message)) {
                                    checkReadyToSendGroups.add(message);
                                }
                            }
                            keysToRemove2 = keysToRemove;
                        } else {
                            MessageObject messageObject9 = messageObject;
                            dialogId = dialogId2;
                            int i3 = b;
                        }
                    } else {
                        ArrayList<String> keysToRemove3 = keysToRemove2;
                        enc = enc2;
                        dialogId = dialogId2;
                        if (message.obj.getId() == object.getId()) {
                            removeFromUploadingMessages(object.getId(), object.scheduled);
                            messages.remove(a);
                            message.sendDelayedRequests();
                            MediaController.getInstance().cancelVideoConvert(message.obj);
                            if (messages.size() == 0) {
                                keysToRemove2 = keysToRemove3;
                                keysToRemove2.add(entry.getKey());
                                if (message.sendEncryptedRequest != null) {
                                    enc2 = true;
                                }
                            } else {
                                keysToRemove2 = keysToRemove3;
                            }
                        } else {
                            keysToRemove2 = keysToRemove3;
                            a++;
                            ArrayList<MessageObject> arrayList2 = objects;
                            sendingMessage2 = sendingMessage;
                            it2 = it;
                            enc2 = enc;
                            dialogId2 = dialogId;
                        }
                    }
                }
                enc2 = enc;
                ArrayList<MessageObject> arrayList3 = objects;
                sendingMessage2 = sendingMessage;
                it2 = it;
                dialogId2 = dialogId;
            }
            boolean z = enc2;
            long j = dialogId2;
            c++;
            arrayList = objects;
        }
        for (int a2 = 0; a2 < keysToRemove2.size(); a2++) {
            String key = keysToRemove2.get(a2);
            if (key.startsWith("http")) {
                ImageLoader.getInstance().cancelLoadHttpFile(key);
            } else {
                getFileLoader().cancelFileUpload(key, enc2);
            }
            stopVideoService(key);
            this.delayedMessages.remove(key);
        }
        int N = checkReadyToSendGroups.size();
        for (int a3 = 0; a3 < N; a3++) {
            sendReadyToSendGroup(checkReadyToSendGroups.get(a3), false, true);
        }
        if (objects.size() == 1) {
            ArrayList<MessageObject> arrayList4 = objects;
            if (arrayList4.get(0).isEditing() && arrayList4.get(0).previousMedia != null) {
                revertEditingMessageObject(arrayList4.get(0));
                return;
            }
        } else {
            ArrayList<MessageObject> arrayList5 = objects;
        }
        getMessagesController().deleteMessages(messageIds, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, dialogId2, false, scheduled);
    }

    public boolean retrySendMessage(MessageObject messageObject, boolean unsent) {
        if (messageObject.getId() >= 0) {
            if (messageObject.isEditing()) {
                editMessage(messageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.TL_document) null, (String) null, (HashMap<String, String>) null, true, messageObject);
            }
            return false;
        } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction) {
            TLRPC.EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
            if (encryptedChat == null) {
                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner, messageObject.scheduled);
                messageObject.messageOwner.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(messageObject.getId()));
                processSentMessage(messageObject.getId());
                return false;
            }
            if (messageObject.messageOwner.random_id == 0) {
                messageObject.messageOwner.random_id = getNextRandomId();
            }
            if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL) {
                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionDeleteMessages) {
                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, (ArrayList<Long>) null, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionFlushHistory) {
                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionNotifyLayer) {
                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionReadMessages) {
                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, (ArrayList<Long>) null, messageObject.messageOwner);
            } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionScreenshotMessages) {
                getSecretChatHelper().sendScreenshotMessage(encryptedChat, (ArrayList<Long>) null, messageObject.messageOwner);
            } else if (!(messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionTyping)) {
                if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionResend) {
                    getSecretChatHelper().sendResendMessage(encryptedChat, 0, 0, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionCommitKey) {
                    getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionAbortKey) {
                    getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionRequestKey) {
                    getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionAcceptKey) {
                    getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
                } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionNoop) {
                    getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
                }
            }
            return true;
        } else {
            if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionScreenshotTaken) {
                sendScreenshotMessage(getMessagesController().getUser(Long.valueOf(messageObject.getDialogId())), messageObject.getReplyMsgId(), messageObject.messageOwner);
            }
            if (unsent) {
                this.unsentMessages.put(messageObject.getId(), messageObject);
            }
            sendMessage(messageObject);
            return true;
        }
    }

    /* access modifiers changed from: protected */
    public void processSentMessage(int id) {
        int prevSize = this.unsentMessages.size();
        this.unsentMessages.remove(id);
        if (prevSize != 0 && this.unsentMessages.size() == 0) {
            checkUnsentMessages();
        }
    }

    public void processForwardFromMyName(MessageObject messageObject, long did) {
        ArrayList<TLRPC.MessageEntity> entities;
        HashMap<String, String> params;
        MessageObject messageObject2 = messageObject;
        if (messageObject2 != null) {
            if (messageObject2.messageOwner.media == null || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty) || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaGame) || (messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice)) {
                MessageObject messageObject3 = messageObject2;
                if (messageObject3.messageOwner.message != null) {
                    TLRPC.WebPage webPage = null;
                    if (messageObject3.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) {
                        webPage = messageObject3.messageOwner.media.webpage;
                    }
                    if (messageObject3.messageOwner.entities == null || messageObject3.messageOwner.entities.isEmpty()) {
                        entities = null;
                    } else {
                        ArrayList<TLRPC.MessageEntity> entities2 = new ArrayList<>();
                        for (int a = 0; a < messageObject3.messageOwner.entities.size(); a++) {
                            TLRPC.MessageEntity entity = messageObject3.messageOwner.entities.get(a);
                            if ((entity instanceof TLRPC.TL_messageEntityBold) || (entity instanceof TLRPC.TL_messageEntityItalic) || (entity instanceof TLRPC.TL_messageEntityPre) || (entity instanceof TLRPC.TL_messageEntityCode) || (entity instanceof TLRPC.TL_messageEntityTextUrl) || (entity instanceof TLRPC.TL_messageEntitySpoiler)) {
                                entities2.add(entity);
                            }
                        }
                        entities = entities2;
                    }
                    sendMessage(messageObject3.messageOwner.message, did, messageObject3.replyMessageObject, (MessageObject) null, webPage, true, entities, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0, (MessageObject.SendAnimationData) null);
                } else if (DialogObject.isEncryptedDialog(did)) {
                    ArrayList<MessageObject> arrayList = new ArrayList<>();
                    arrayList.add(messageObject3);
                    sendMessage(arrayList, did, true, false, true, 0);
                }
            } else {
                if (!DialogObject.isEncryptedDialog(did) || messageObject2.messageOwner.peer_id == null || (!(messageObject2.messageOwner.media.photo instanceof TLRPC.TL_photo) && !(messageObject2.messageOwner.media.document instanceof TLRPC.TL_document))) {
                    params = null;
                } else {
                    HashMap<String, String> params2 = new HashMap<>();
                    params2.put("parentObject", "sent_" + messageObject2.messageOwner.peer_id.channel_id + "_" + messageObject.getId());
                    params = params2;
                }
                if (messageObject2.messageOwner.media.photo instanceof TLRPC.TL_photo) {
                    sendMessage((TLRPC.TL_photo) messageObject2.messageOwner.media.photo, (String) null, did, messageObject2.replyMessageObject, (MessageObject) null, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, (TLRPC.ReplyMarkup) null, params, true, 0, messageObject2.messageOwner.media.ttl_seconds, messageObject);
                    MessageObject messageObject4 = messageObject2;
                } else if (messageObject2.messageOwner.media.document instanceof TLRPC.TL_document) {
                    sendMessage((TLRPC.TL_document) messageObject2.messageOwner.media.document, (VideoEditedInfo) null, messageObject2.messageOwner.attachPath, did, messageObject2.replyMessageObject, (MessageObject) null, messageObject2.messageOwner.message, messageObject2.messageOwner.entities, (TLRPC.ReplyMarkup) null, params, true, 0, messageObject2.messageOwner.media.ttl_seconds, messageObject, (MessageObject.SendAnimationData) null);
                    MessageObject messageObject5 = messageObject;
                } else {
                    MessageObject messageObject6 = messageObject;
                    if ((messageObject6.messageOwner.media instanceof TLRPC.TL_messageMediaVenue) || (messageObject6.messageOwner.media instanceof TLRPC.TL_messageMediaGeo)) {
                        sendMessage(messageObject6.messageOwner.media, did, messageObject6.replyMessageObject, (MessageObject) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    } else if (messageObject6.messageOwner.media.phone_number != null) {
                        TLRPC.TL_userContact_old2 tL_userContact_old2 = new TLRPC.TL_userContact_old2();
                        tL_userContact_old2.phone = messageObject6.messageOwner.media.phone_number;
                        tL_userContact_old2.first_name = messageObject6.messageOwner.media.first_name;
                        tL_userContact_old2.last_name = messageObject6.messageOwner.media.last_name;
                        tL_userContact_old2.id = messageObject6.messageOwner.media.user_id;
                        sendMessage((TLRPC.User) tL_userContact_old2, did, messageObject6.replyMessageObject, (MessageObject) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
                    } else if (!DialogObject.isEncryptedDialog(did)) {
                        ArrayList<MessageObject> arrayList2 = new ArrayList<>();
                        arrayList2.add(messageObject6);
                        sendMessage(arrayList2, did, true, false, true, 0);
                    }
                }
            }
        }
    }

    public void sendScreenshotMessage(TLRPC.User user, int messageId, TLRPC.Message resendMessage) {
        TLRPC.Message message;
        TLRPC.User user2 = user;
        int i = messageId;
        TLRPC.Message message2 = resendMessage;
        if (user2 == null || i == 0) {
        } else if (user2.id == getUserConfig().getClientUserId()) {
        } else {
            TLRPC.TL_messages_sendScreenshotNotification req = new TLRPC.TL_messages_sendScreenshotNotification();
            req.peer = new TLRPC.TL_inputPeerUser();
            req.peer.access_hash = user2.access_hash;
            req.peer.user_id = user2.id;
            if (message2 != null) {
                req.reply_to_msg_id = i;
                req.random_id = message2.random_id;
                message = resendMessage;
            } else {
                TLRPC.Message tL_messageService = new TLRPC.TL_messageService();
                tL_messageService.random_id = getNextRandomId();
                tL_messageService.dialog_id = user2.id;
                tL_messageService.unread = true;
                tL_messageService.out = true;
                int newMessageId = getUserConfig().getNewMessageId();
                tL_messageService.id = newMessageId;
                tL_messageService.local_id = newMessageId;
                tL_messageService.from_id = new TLRPC.TL_peerUser();
                tL_messageService.from_id.user_id = getUserConfig().getClientUserId();
                tL_messageService.flags |= 256;
                tL_messageService.flags |= 8;
                tL_messageService.reply_to = new TLRPC.TL_messageReplyHeader();
                tL_messageService.reply_to.reply_to_msg_id = i;
                tL_messageService.peer_id = new TLRPC.TL_peerUser();
                tL_messageService.peer_id.user_id = user2.id;
                tL_messageService.date = getConnectionsManager().getCurrentTime();
                tL_messageService.action = new TLRPC.TL_messageActionScreenshotTaken();
                getUserConfig().saveConfig(false);
                message = tL_messageService;
            }
            req.random_id = message.random_id;
            MessageObject newMsgObj = new MessageObject(this.currentAccount, message, false, true);
            newMsgObj.messageOwner.send_state = 1;
            newMsgObj.wasJustSent = true;
            ArrayList arrayList = new ArrayList();
            arrayList.add(newMsgObj);
            getMessagesController().updateInterfaceWithMessages(message.dialog_id, arrayList, false);
            getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
            ArrayList<TLRPC.Message> arr = new ArrayList<>();
            arr.add(message);
            getMessagesStorage().putMessages(arr, false, true, false, 0, false);
            ArrayList<TLRPC.Message> arrayList2 = arr;
            performSendMessageRequest(req, newMsgObj, (String) null, (DelayedMessage) null, (Object) null, (HashMap<String, String>) null, false);
        }
    }

    public void sendSticker(TLRPC.Document document, String query, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, Object parentObject, MessageObject.SendAnimationData sendAnimationData, boolean notify, int scheduleDate) {
        TLRPC.Document document2;
        HashMap<String, String> params;
        TLRPC.Document document3 = document;
        if (document3 != null) {
            if (DialogObject.isEncryptedDialog(peer)) {
                if (getMessagesController().getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(peer))) != null) {
                    TLRPC.TL_document_layer82 newDocument = new TLRPC.TL_document_layer82();
                    newDocument.id = document3.id;
                    newDocument.access_hash = document3.access_hash;
                    newDocument.date = document3.date;
                    newDocument.mime_type = document3.mime_type;
                    newDocument.file_reference = document3.file_reference;
                    if (newDocument.file_reference == null) {
                        newDocument.file_reference = new byte[0];
                    }
                    newDocument.size = document3.size;
                    newDocument.dc_id = document3.dc_id;
                    newDocument.attributes = new ArrayList(document3.attributes);
                    if (newDocument.mime_type == null) {
                        newDocument.mime_type = "";
                    }
                    TLRPC.PhotoSize thumb = FileLoader.getClosestPhotoSizeWithSize(document3.thumbs, 90);
                    if ((thumb instanceof TLRPC.TL_photoSize) || (thumb instanceof TLRPC.TL_photoSizeProgressive)) {
                        File file = FileLoader.getInstance(this.currentAccount).getPathToAttach(thumb, true);
                        if (file.exists()) {
                            try {
                                int length = (int) file.length();
                                byte[] arr = new byte[((int) file.length())];
                                new RandomAccessFile(file, "r").readFully(arr);
                                TLRPC.PhotoSize newThumb = new TLRPC.TL_photoCachedSize();
                                TLRPC.TL_fileLocation_layer82 fileLocation = new TLRPC.TL_fileLocation_layer82();
                                fileLocation.dc_id = thumb.location.dc_id;
                                fileLocation.volume_id = thumb.location.volume_id;
                                fileLocation.local_id = thumb.location.local_id;
                                fileLocation.secret = thumb.location.secret;
                                newThumb.location = fileLocation;
                                newThumb.size = thumb.size;
                                newThumb.w = thumb.w;
                                newThumb.h = thumb.h;
                                newThumb.type = thumb.type;
                                newThumb.bytes = arr;
                                newDocument.thumbs.add(newThumb);
                                newDocument.flags = 1 | newDocument.flags;
                            } catch (Exception e) {
                                FileLog.e((Throwable) e);
                            }
                        }
                    }
                    if (newDocument.thumbs.isEmpty()) {
                        TLRPC.PhotoSize thumb2 = new TLRPC.TL_photoSizeEmpty();
                        thumb2.type = "s";
                        newDocument.thumbs.add(thumb2);
                    }
                    document2 = newDocument;
                } else {
                    return;
                }
            } else {
                document2 = document3;
            }
            TLRPC.Document finalDocument = document2;
            if (MessageObject.isGifDocument(document2)) {
                mediaSendQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda38(this, finalDocument, peer, replyToMsg, replyToTopMsg, notify, scheduleDate, parentObject, sendAnimationData));
                String str = query;
                return;
            }
            if (!TextUtils.isEmpty(query)) {
                params = new HashMap<>();
                params.put("query", query);
            } else {
                String str2 = query;
                params = null;
            }
            sendMessage((TLRPC.TL_document) finalDocument, (VideoEditedInfo) null, (String) null, peer, replyToMsg, replyToTopMsg, (String) null, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentObject, sendAnimationData);
        }
    }

    /* renamed from: lambda$sendSticker$6$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m499lambda$sendSticker$6$orgtelegrammessengerSendMessagesHelper(TLRPC.Document finalDocument, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate, Object parentObject, MessageObject.SendAnimationData sendAnimationData) {
        String docExt;
        File docFile;
        TLRPC.Document document = finalDocument;
        Bitmap[] bitmapFinal = new Bitmap[1];
        String[] keyFinal = new String[1];
        String mediaLocationKey = ImageLocation.getForDocument(finalDocument).getKey((Object) null, (Object) null, false);
        if ("video/mp4".equals(document.mime_type)) {
            docExt = ".mp4";
        } else if ("video/x-matroska".equals(document.mime_type)) {
            docExt = ".mkv";
        } else {
            docExt = "";
        }
        File directory = FileLoader.getDirectory(3);
        File docFile2 = new File(directory, mediaLocationKey + docExt);
        if (!docFile2.exists()) {
            File directory2 = FileLoader.getDirectory(2);
            docFile = new File(directory2, mediaLocationKey + docExt);
        } else {
            docFile = docFile2;
        }
        ensureMediaThumbExists(getAccountInstance(), false, finalDocument, docFile.getAbsolutePath(), (Uri) null, 0);
        keyFinal[0] = getKeyForPhotoSize(getAccountInstance(), FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 320), bitmapFinal, true, true);
        String str = docExt;
        String str2 = mediaLocationKey;
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda69(this, bitmapFinal, keyFinal, finalDocument, peer, replyToMsg, replyToTopMsg, notify, scheduleDate, parentObject, sendAnimationData));
    }

    /* renamed from: lambda$sendSticker$5$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m498lambda$sendSticker$5$orgtelegrammessengerSendMessagesHelper(Bitmap[] bitmapFinal, String[] keyFinal, TLRPC.Document finalDocument, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate, Object parentObject, MessageObject.SendAnimationData sendAnimationData) {
        if (!(bitmapFinal[0] == null || keyFinal[0] == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapFinal[0]), keyFinal[0], false);
        }
        sendMessage((TLRPC.TL_document) finalDocument, (VideoEditedInfo) null, (String) null, peer, replyToMsg, replyToTopMsg, (String) null, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate, 0, parentObject, sendAnimationData);
    }

    /* JADX WARNING: Removed duplicated region for block: B:117:0x039a  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x047f  */
    /* JADX WARNING: Removed duplicated region for block: B:311:0x08ea  */
    /* JADX WARNING: Removed duplicated region for block: B:314:0x08fa  */
    /* JADX WARNING: Removed duplicated region for block: B:317:0x0927  */
    /* JADX WARNING: Removed duplicated region for block: B:320:0x0942  */
    /* JADX WARNING: Removed duplicated region for block: B:323:0x0951  */
    /* JADX WARNING: Removed duplicated region for block: B:327:0x096c  */
    /* JADX WARNING: Removed duplicated region for block: B:328:0x096e  */
    /* JADX WARNING: Removed duplicated region for block: B:331:0x09b3  */
    /* JADX WARNING: Removed duplicated region for block: B:332:0x09db  */
    /* JADX WARNING: Removed duplicated region for block: B:96:0x02dd  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public int sendMessage(java.util.ArrayList<org.telegram.messenger.MessageObject> r53, long r54, boolean r56, boolean r57, boolean r58, int r59) {
        /*
            r52 = this;
            r15 = r52
            r14 = r53
            r12 = r54
            r11 = r56
            r10 = r57
            r4 = r59
            if (r14 == 0) goto L_0x0ac0
            boolean r0 = r53.isEmpty()
            if (r0 == 0) goto L_0x001b
            r5 = r12
            r3 = r14
            r4 = r15
            r48 = 0
            goto L_0x0ac5
        L_0x001b:
            r0 = 0
            org.telegram.messenger.UserConfig r1 = r52.getUserConfig()
            long r7 = r1.getClientUserId()
            r1 = 0
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r54)
            if (r3 != 0) goto L_0x0a9c
            org.telegram.messenger.MessagesController r3 = r52.getMessagesController()
            org.telegram.tgnet.TLRPC$Peer r3 = r3.getPeer(r12)
            r5 = 0
            r6 = 1
            r9 = 1
            r16 = 1
            r17 = 1
            r18 = 0
            r19 = 0
            boolean r21 = org.telegram.messenger.DialogObject.isUserDialog(r54)
            if (r21 == 0) goto L_0x006a
            org.telegram.messenger.MessagesController r2 = r52.getMessagesController()
            r23 = r0
            java.lang.Long r0 = java.lang.Long.valueOf(r54)
            org.telegram.tgnet.TLRPC$User r0 = r2.getUser(r0)
            if (r0 != 0) goto L_0x0056
            r2 = 0
            return r2
        L_0x0056:
            r0 = 0
            r2 = r0
            r24 = r1
            r25 = r5
            r26 = r6
            r27 = r9
            r28 = r16
            r29 = r17
            r1 = r18
            r5 = r19
            goto L_0x00e1
        L_0x006a:
            r23 = r0
            org.telegram.messenger.MessagesController r0 = r52.getMessagesController()
            r24 = r1
            long r1 = -r12
            java.lang.Long r1 = java.lang.Long.valueOf(r1)
            org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r1)
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r1 == 0) goto L_0x00ab
            boolean r5 = r0.signatures
            boolean r1 = r0.megagroup
            r2 = 1
            r1 = r1 ^ r2
            if (r1 == 0) goto L_0x00a4
            boolean r2 = r0.has_link
            if (r2 == 0) goto L_0x00a4
            org.telegram.messenger.MessagesController r2 = r52.getMessagesController()
            r26 = r5
            r25 = r6
            long r5 = r0.id
            org.telegram.tgnet.TLRPC$ChatFull r2 = r2.getChatFull(r5)
            if (r2 == 0) goto L_0x00a8
            long r5 = r2.linked_chat_id
            r19 = r5
            r5 = r26
            goto L_0x00af
        L_0x00a4:
            r26 = r5
            r25 = r6
        L_0x00a8:
            r5 = r26
            goto L_0x00af
        L_0x00ab:
            r25 = r6
            r1 = r24
        L_0x00af:
            if (r0 == 0) goto L_0x00be
            org.telegram.messenger.MessagesController r2 = r52.getMessagesController()
            r24 = r5
            long r5 = r0.id
            java.lang.String r18 = r2.getAdminRank(r5, r7)
            goto L_0x00c0
        L_0x00be:
            r24 = r5
        L_0x00c0:
            boolean r6 = org.telegram.messenger.ChatObject.canSendStickers(r0)
            boolean r9 = org.telegram.messenger.ChatObject.canSendMedia(r0)
            boolean r17 = org.telegram.messenger.ChatObject.canSendEmbed(r0)
            boolean r16 = org.telegram.messenger.ChatObject.canSendPolls(r0)
            r2 = r0
            r26 = r6
            r27 = r9
            r28 = r16
            r29 = r17
            r5 = r19
            r25 = r24
            r24 = r1
            r1 = r18
        L_0x00e1:
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray
            r0.<init>()
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>()
            java.util.ArrayList r16 = new java.util.ArrayList
            r16.<init>()
            java.util.ArrayList r17 = new java.util.ArrayList
            r17.<init>()
            java.util.ArrayList r18 = new java.util.ArrayList
            r18.<init>()
            androidx.collection.LongSparseArray r19 = new androidx.collection.LongSparseArray
            r19.<init>()
            r30 = r5
            org.telegram.messenger.MessagesController r5 = r52.getMessagesController()
            org.telegram.tgnet.TLRPC$InputPeer r5 = r5.getInputPeer((long) r12)
            r32 = 0
            int r6 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r6 != 0) goto L_0x0111
            r6 = 1
            goto L_0x0112
        L_0x0111:
            r6 = 0
        L_0x0112:
            r20 = r5
            r4 = r30
            r30 = 0
            r15 = r19
            r51 = r30
            r30 = r6
            r6 = r17
            r17 = r9
            r9 = r51
        L_0x0124:
            r19 = r15
            int r15 = r53.size()
            if (r9 >= r15) goto L_0x0a75
            java.lang.Object r15 = r14.get(r9)
            org.telegram.messenger.MessageObject r15 = (org.telegram.messenger.MessageObject) r15
            int r31 = r15.getId()
            r34 = r9
            if (r31 <= 0) goto L_0x09e1
            boolean r31 = r15.needDrawBluredPreview()
            if (r31 == 0) goto L_0x0165
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r43 = r17
            r42 = r18
            r37 = r19
            r44 = r20
            r2 = r34
            r4 = 0
            r48 = 0
            r49 = 1
            r34 = r16
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a04
        L_0x0165:
            boolean r31 = r15.isSticker()
            if (r31 != 0) goto L_0x0181
            boolean r31 = r15.isAnimatedSticker()
            if (r31 != 0) goto L_0x0181
            boolean r31 = r15.isGif()
            if (r31 != 0) goto L_0x0181
            boolean r31 = r15.isGame()
            if (r31 == 0) goto L_0x017e
            goto L_0x0181
        L_0x017e:
            r31 = 0
            goto L_0x0183
        L_0x0181:
            r31 = 1
        L_0x0183:
            if (r26 != 0) goto L_0x01e0
            if (r31 == 0) goto L_0x01e0
            if (r23 != 0) goto L_0x01b9
            r9 = 8
            boolean r9 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r2, r9)
            if (r9 == 0) goto L_0x0194
            r37 = 4
            goto L_0x0196
        L_0x0194:
            r37 = 1
        L_0x0196:
            r23 = r37
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r3 = r14
            r15 = r19
            r44 = r20
            r2 = r34
            r48 = 0
            r49 = 1
            r4 = r52
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a56
        L_0x01b9:
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r3 = r14
            r43 = r17
            r42 = r18
            r37 = r19
            r44 = r20
            r2 = r34
            r48 = 0
            r49 = 1
            r4 = r52
            r34 = r16
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a4e
        L_0x01e0:
            if (r27 != 0) goto L_0x024a
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto
            if (r9 != 0) goto L_0x01f2
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument
            if (r9 == 0) goto L_0x024a
        L_0x01f2:
            if (r31 != 0) goto L_0x024a
            if (r23 != 0) goto L_0x0223
            r9 = 7
            boolean r9 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r2, r9)
            if (r9 == 0) goto L_0x01ff
            r9 = 5
            goto L_0x0200
        L_0x01ff:
            r9 = 2
        L_0x0200:
            r23 = r9
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r3 = r14
            r15 = r19
            r44 = r20
            r2 = r34
            r48 = 0
            r49 = 1
            r4 = r52
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a56
        L_0x0223:
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r3 = r14
            r43 = r17
            r42 = r18
            r37 = r19
            r44 = r20
            r2 = r34
            r48 = 0
            r49 = 1
            r4 = r52
            r34 = r16
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a4e
        L_0x024a:
            if (r28 != 0) goto L_0x02ab
            org.telegram.tgnet.TLRPC$Message r9 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            boolean r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll
            if (r9 == 0) goto L_0x02ab
            if (r23 != 0) goto L_0x0284
            r9 = 10
            boolean r9 = org.telegram.messenger.ChatObject.isActionBannedByDefault(r2, r9)
            if (r9 == 0) goto L_0x0260
            r9 = 6
            goto L_0x0261
        L_0x0260:
            r9 = 3
        L_0x0261:
            r23 = r9
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r3 = r14
            r15 = r19
            r44 = r20
            r2 = r34
            r48 = 0
            r49 = 1
            r4 = r52
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a56
        L_0x0284:
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r3 = r14
            r43 = r17
            r42 = r18
            r37 = r19
            r44 = r20
            r2 = r34
            r48 = 0
            r49 = 1
            r4 = r52
            r34 = r16
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a4e
        L_0x02ab:
            org.telegram.tgnet.TLRPC$TL_message r9 = new org.telegram.tgnet.TLRPC$TL_message
            r9.<init>()
            r38 = 0
            if (r11 != 0) goto L_0x048a
            long r40 = r15.getDialogId()
            int r42 = (r40 > r7 ? 1 : (r40 == r7 ? 0 : -1))
            if (r42 != 0) goto L_0x02d2
            boolean r40 = r15.isFromUser()
            if (r40 == 0) goto L_0x02d2
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.from_id
            r41 = r1
            r40 = r2
            long r1 = r11.user_id
            int r11 = (r1 > r7 ? 1 : (r1 == r7 ? 0 : -1))
            if (r11 != 0) goto L_0x02d6
            r1 = 1
            goto L_0x02d7
        L_0x02d2:
            r41 = r1
            r40 = r2
        L_0x02d6:
            r1 = 0
        L_0x02d7:
            boolean r2 = r15.isForwarded()
            if (r2 == 0) goto L_0x039a
            org.telegram.tgnet.TLRPC$TL_messageFwdHeader r2 = new org.telegram.tgnet.TLRPC$TL_messageFwdHeader
            r2.<init>()
            r9.fwd_from = r2
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r11 = 1
            r2 = r2 & r11
            if (r2 == 0) goto L_0x02ff
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r14 = r2.flags
            r14 = r14 | r11
            r2.flags = r14
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            org.telegram.tgnet.TLRPC$Peer r11 = r11.from_id
            r2.from_id = r11
        L_0x02ff:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r2 = r2 & 32
            if (r2 == 0) goto L_0x031b
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r11 = r11 | 32
            r2.flags = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            java.lang.String r11 = r11.from_name
            r2.from_name = r11
        L_0x031b:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r11 = 4
            r2 = r2 & r11
            if (r2 == 0) goto L_0x0336
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r14 = r2.flags
            r14 = r14 | r11
            r2.flags = r14
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            int r11 = r11.channel_post
            r2.channel_post = r11
        L_0x0336:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r11 = 8
            r2 = r2 & r11
            if (r2 == 0) goto L_0x0352
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r14 = r2.flags
            r11 = r11 | r14
            r2.flags = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            java.lang.String r11 = r11.post_author
            r2.post_author = r11
        L_0x0352:
            int r2 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r2 == 0) goto L_0x0358
            if (r24 == 0) goto L_0x0388
        L_0x0358:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            int r2 = r2.flags
            r2 = r2 & 16
            if (r2 == 0) goto L_0x0388
            long r42 = r15.getDialogId()
            boolean r2 = org.telegram.messenger.UserObject.isReplyUser((long) r42)
            if (r2 != 0) goto L_0x0388
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r11 = r11 | 16
            r2.flags = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            org.telegram.tgnet.TLRPC$Peer r11 = r11.saved_from_peer
            r2.saved_from_peer = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            int r11 = r11.saved_from_msg_id
            r2.saved_from_msg_id = r11
        L_0x0388:
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r11 = r11.fwd_from
            int r11 = r11.date
            r2.date = r11
            r2 = 4
            r9.flags = r2
            r14 = r0
            r44 = r1
            goto L_0x0455
        L_0x039a:
            if (r1 != 0) goto L_0x0452
            long r42 = r15.getFromChatId()
            org.telegram.tgnet.TLRPC$TL_messageFwdHeader r2 = new org.telegram.tgnet.TLRPC$TL_messageFwdHeader
            r2.<init>()
            r9.fwd_from = r2
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r15.getId()
            r2.channel_post = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r14 = 4
            r11 = r11 | r14
            r2.flags = r11
            boolean r2 = r15.isFromUser()
            if (r2 == 0) goto L_0x03d1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.from_id
            r2.from_id = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            int r11 = r2.flags
            r14 = 1
            r11 = r11 | r14
            r2.flags = r11
            r14 = r0
            r44 = r1
            goto L_0x040e
        L_0x03d1:
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$TL_peerChannel r11 = new org.telegram.tgnet.TLRPC$TL_peerChannel
            r11.<init>()
            r2.from_id = r11
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r2 = r2.from_id
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.peer_id
            r14 = r0
            r44 = r1
            long r0 = r11.channel_id
            r2.channel_id = r0
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            int r1 = r0.flags
            r2 = 1
            r1 = r1 | r2
            r0.flags = r1
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            boolean r0 = r0.post
            if (r0 == 0) goto L_0x040e
            int r0 = (r42 > r38 ? 1 : (r42 == r38 ? 0 : -1))
            if (r0 <= 0) goto L_0x040e
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id
            if (r1 == 0) goto L_0x0408
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id
            goto L_0x040c
        L_0x0408:
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.peer_id
        L_0x040c:
            r0.from_id = r1
        L_0x040e:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.lang.String r0 = r0.post_author
            if (r0 == 0) goto L_0x0415
            goto L_0x0448
        L_0x0415:
            boolean r0 = r15.isOutOwner()
            if (r0 != 0) goto L_0x0448
            int r0 = (r42 > r38 ? 1 : (r42 == r38 ? 0 : -1))
            if (r0 <= 0) goto L_0x0448
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            boolean r0 = r0.post
            if (r0 == 0) goto L_0x0448
            org.telegram.messenger.MessagesController r0 = r52.getMessagesController()
            java.lang.Long r1 = java.lang.Long.valueOf(r42)
            org.telegram.tgnet.TLRPC$User r0 = r0.getUser(r1)
            if (r0 == 0) goto L_0x0448
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r9.fwd_from
            java.lang.String r2 = r0.first_name
            java.lang.String r11 = r0.last_name
            java.lang.String r2 = org.telegram.messenger.ContactsController.formatName(r2, r11)
            r1.post_author = r2
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r9.fwd_from
            int r2 = r1.flags
            r11 = 8
            r2 = r2 | r11
            r1.flags = r2
        L_0x0448:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            int r0 = r0.date
            r9.date = r0
            r0 = 4
            r9.flags = r0
            goto L_0x0455
        L_0x0452:
            r14 = r0
            r44 = r1
        L_0x0455:
            int r0 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r0 != 0) goto L_0x048f
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            if (r0 == 0) goto L_0x048f
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            int r1 = r0.flags
            r1 = r1 | 16
            r0.flags = r1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            int r1 = r15.getId()
            r0.saved_from_msg_id = r1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r1 = r1.peer_id
            r0.saved_from_peer = r1
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r0 = r0.saved_from_peer
            long r0 = r0.user_id
            int r2 = (r0 > r7 ? 1 : (r0 == r7 ? 0 : -1))
            if (r2 != 0) goto L_0x048f
            org.telegram.tgnet.TLRPC$MessageFwdHeader r0 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r0 = r0.saved_from_peer
            long r1 = r15.getDialogId()
            r0.user_id = r1
            goto L_0x048f
        L_0x048a:
            r14 = r0
            r41 = r1
            r40 = r2
        L_0x048f:
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r9.params = r0
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r9.params
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = ""
            r1.append(r2)
            int r11 = r15.getId()
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            java.lang.String r11 = "fwd_id"
            r0.put(r11, r1)
            java.util.HashMap<java.lang.String, java.lang.String> r0 = r9.params
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r1.append(r2)
            long r11 = r15.getDialogId()
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            java.lang.String r11 = "fwd_peer"
            r0.put(r11, r1)
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r0 = r0.restriction_reason
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x04e3
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r0 = r0.restriction_reason
            r9.restriction_reason = r0
            int r0 = r9.flags
            r1 = 4194304(0x400000, float:5.877472E-39)
            r0 = r0 | r1
            r9.flags = r0
        L_0x04e3:
            if (r29 != 0) goto L_0x04f5
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage
            if (r0 == 0) goto L_0x04f5
            org.telegram.tgnet.TLRPC$TL_messageMediaEmpty r0 = new org.telegram.tgnet.TLRPC$TL_messageMediaEmpty
            r0.<init>()
            r9.media = r0
            goto L_0x04fb
        L_0x04f5:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            r9.media = r0
        L_0x04fb:
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r9.media
            if (r0 == 0) goto L_0x0505
            int r0 = r9.flags
            r0 = r0 | 512(0x200, float:7.175E-43)
            r9.flags = r0
        L_0x0505:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.via_bot_id
            int r11 = (r0 > r38 ? 1 : (r0 == r38 ? 0 : -1))
            if (r11 == 0) goto L_0x0519
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.via_bot_id
            r9.via_bot_id = r0
            int r0 = r9.flags
            r0 = r0 | 2048(0x800, float:2.87E-42)
            r9.flags = r0
        L_0x0519:
            int r0 = (r4 > r38 ? 1 : (r4 == r38 ? 0 : -1))
            if (r0 == 0) goto L_0x053b
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = new org.telegram.tgnet.TLRPC$TL_messageReplies
            r0.<init>()
            r9.replies = r0
            org.telegram.tgnet.TLRPC$MessageReplies r0 = r9.replies
            r1 = 1
            r0.comments = r1
            org.telegram.tgnet.TLRPC$MessageReplies r0 = r9.replies
            r0.channel_id = r4
            org.telegram.tgnet.TLRPC$MessageReplies r0 = r9.replies
            int r11 = r0.flags
            r11 = r11 | r1
            r0.flags = r11
            int r0 = r9.flags
            r1 = 8388608(0x800000, float:1.17549435E-38)
            r0 = r0 | r1
            r9.flags = r0
        L_0x053b:
            if (r10 == 0) goto L_0x0541
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r9.media
            if (r0 != 0) goto L_0x0547
        L_0x0541:
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.lang.String r0 = r0.message
            r9.message = r0
        L_0x0547:
            java.lang.String r0 = r9.message
            if (r0 != 0) goto L_0x054d
            r9.message = r2
        L_0x054d:
            int r0 = r15.getId()
            r9.fwd_msg_id = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.lang.String r0 = r0.attachPath
            r9.attachPath = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r0.entities
            r9.entities = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r0 = r0.reply_markup
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_replyInlineMarkup
            if (r0 == 0) goto L_0x0629
            org.telegram.tgnet.TLRPC$TL_replyInlineMarkup r0 = new org.telegram.tgnet.TLRPC$TL_replyInlineMarkup
            r0.<init>()
            r9.reply_markup = r0
            r0 = 0
            r1 = 0
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r11 = r11.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r11 = r11.rows
            int r11 = r11.size()
        L_0x057a:
            if (r1 >= r11) goto L_0x060e
            org.telegram.tgnet.TLRPC$Message r12 = r15.messageOwner
            org.telegram.tgnet.TLRPC$ReplyMarkup r12 = r12.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r12 = r12.rows
            java.lang.Object r12 = r12.get(r1)
            org.telegram.tgnet.TLRPC$TL_keyboardButtonRow r12 = (org.telegram.tgnet.TLRPC.TL_keyboardButtonRow) r12
            r13 = 0
            r36 = 0
            r37 = r0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r0 = r12.buttons
            int r0 = r0.size()
            r42 = r4
            r4 = r36
        L_0x0597:
            if (r4 >= r0) goto L_0x05fd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r5 = r12.buttons
            java.lang.Object r5 = r5.get(r4)
            org.telegram.tgnet.TLRPC$KeyboardButton r5 = (org.telegram.tgnet.TLRPC.KeyboardButton) r5
            r36 = r0
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonUrlAuth
            if (r0 != 0) goto L_0x05b8
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonUrl
            if (r0 != 0) goto L_0x05b8
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline
            if (r0 != 0) goto L_0x05b8
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy
            if (r0 == 0) goto L_0x05b4
            goto L_0x05b8
        L_0x05b4:
            r0 = 1
            r44 = r11
            goto L_0x0603
        L_0x05b8:
            boolean r0 = r5 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonUrlAuth
            if (r0 == 0) goto L_0x05e0
            org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth r0 = new org.telegram.tgnet.TLRPC$TL_keyboardButtonUrlAuth
            r0.<init>()
            r44 = r11
            int r11 = r5.flags
            r0.flags = r11
            java.lang.String r11 = r5.fwd_text
            if (r11 == 0) goto L_0x05d2
            java.lang.String r11 = r5.fwd_text
            r0.fwd_text = r11
            r0.text = r11
            goto L_0x05d6
        L_0x05d2:
            java.lang.String r11 = r5.text
            r0.text = r11
        L_0x05d6:
            java.lang.String r11 = r5.url
            r0.url = r11
            int r11 = r5.button_id
            r0.button_id = r11
            r5 = r0
            goto L_0x05e2
        L_0x05e0:
            r44 = r11
        L_0x05e2:
            if (r13 != 0) goto L_0x05f1
            org.telegram.tgnet.TLRPC$TL_keyboardButtonRow r0 = new org.telegram.tgnet.TLRPC$TL_keyboardButtonRow
            r0.<init>()
            org.telegram.tgnet.TLRPC$ReplyMarkup r11 = r9.reply_markup
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_keyboardButtonRow> r11 = r11.rows
            r11.add(r0)
            r13 = r0
        L_0x05f1:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$KeyboardButton> r0 = r13.buttons
            r0.add(r5)
            int r4 = r4 + 1
            r0 = r36
            r11 = r44
            goto L_0x0597
        L_0x05fd:
            r36 = r0
            r44 = r11
            r0 = r37
        L_0x0603:
            if (r0 == 0) goto L_0x0606
            goto L_0x0614
        L_0x0606:
            int r1 = r1 + 1
            r4 = r42
            r11 = r44
            goto L_0x057a
        L_0x060e:
            r37 = r0
            r42 = r4
            r44 = r11
        L_0x0614:
            if (r0 != 0) goto L_0x061d
            int r1 = r9.flags
            r1 = r1 | 64
            r9.flags = r1
            goto L_0x062b
        L_0x061d:
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            r4 = 0
            r1.reply_markup = r4
            int r1 = r9.flags
            r1 = r1 & -65
            r9.flags = r1
            goto L_0x062b
        L_0x0629:
            r42 = r4
        L_0x062b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r9.entities
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x0639
            int r0 = r9.flags
            r0 = r0 | 128(0x80, float:1.794E-43)
            r9.flags = r0
        L_0x0639:
            java.lang.String r0 = r9.attachPath
            if (r0 != 0) goto L_0x063f
            r9.attachPath = r2
        L_0x063f:
            org.telegram.messenger.UserConfig r0 = r52.getUserConfig()
            int r0 = r0.getNewMessageId()
            r9.id = r0
            r9.local_id = r0
            r0 = 1
            r9.out = r0
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.grouped_id
            r35 = r0
            int r2 = (r0 > r38 ? 1 : (r0 == r38 ? 0 : -1))
            if (r2 == 0) goto L_0x0684
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            long r0 = r0.grouped_id
            r2 = r14
            java.lang.Object r0 = r2.get(r0)
            java.lang.Long r0 = (java.lang.Long) r0
            if (r0 != 0) goto L_0x0676
            java.security.SecureRandom r1 = org.telegram.messenger.Utilities.random
            long r4 = r1.nextLong()
            java.lang.Long r0 = java.lang.Long.valueOf(r4)
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            long r4 = r1.grouped_id
            r2.put(r4, r0)
        L_0x0676:
            long r4 = r0.longValue()
            r9.grouped_id = r4
            int r1 = r9.flags
            r4 = 131072(0x20000, float:1.83671E-40)
            r1 = r1 | r4
            r9.flags = r1
            goto L_0x0685
        L_0x0684:
            r2 = r14
        L_0x0685:
            long r0 = r3.channel_id
            int r4 = (r0 > r38 ? 1 : (r0 == r38 ? 0 : -1))
            if (r4 == 0) goto L_0x06a8
            if (r24 == 0) goto L_0x06a8
            if (r25 == 0) goto L_0x069b
            org.telegram.tgnet.TLRPC$TL_peerUser r0 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r0.<init>()
            r9.from_id = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r9.from_id
            r0.user_id = r7
            goto L_0x069d
        L_0x069b:
            r9.from_id = r3
        L_0x069d:
            r0 = 1
            r9.post = r0
            r12 = r54
            r14 = r2
            r4 = r40
            r11 = r41
            goto L_0x06ed
        L_0x06a8:
            r0 = 1
            org.telegram.messenger.MessagesController r1 = r52.getMessagesController()
            r12 = r54
            long r4 = -r12
            org.telegram.tgnet.TLRPC$ChatFull r1 = r1.getChatFull(r4)
            r14 = r2
            r4 = r40
            long r1 = org.telegram.messenger.ChatObject.getSendAsPeerId(r4, r1, r0)
            int r0 = (r1 > r7 ? 1 : (r1 == r7 ? 0 : -1))
            if (r0 != 0) goto L_0x06d3
            org.telegram.tgnet.TLRPC$TL_peerUser r0 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r0.<init>()
            r9.from_id = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r9.from_id
            r0.user_id = r7
            int r0 = r9.flags
            r0 = r0 | 256(0x100, float:3.59E-43)
            r9.flags = r0
            r11 = r41
            goto L_0x06ed
        L_0x06d3:
            org.telegram.messenger.MessagesController r0 = r52.getMessagesController()
            org.telegram.tgnet.TLRPC$Peer r0 = r0.getPeer(r1)
            r9.from_id = r0
            if (r41 == 0) goto L_0x06eb
            r11 = r41
            r9.post_author = r11
            int r0 = r9.flags
            r5 = 65536(0x10000, float:9.18355E-41)
            r0 = r0 | r5
            r9.flags = r0
            goto L_0x06ed
        L_0x06eb:
            r11 = r41
        L_0x06ed:
            long r0 = r9.random_id
            int r2 = (r0 > r38 ? 1 : (r0 == r38 ? 0 : -1))
            if (r2 != 0) goto L_0x06f9
            long r0 = r52.getNextRandomId()
            r9.random_id = r0
        L_0x06f9:
            long r0 = r9.random_id
            java.lang.Long r0 = java.lang.Long.valueOf(r0)
            r6.add(r0)
            long r0 = r9.random_id
            r2 = r19
            r2.put(r0, r9)
            int r0 = r9.fwd_msg_id
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)
            r1 = r18
            r1.add(r0)
            r0 = r59
            r40 = r42
            if (r0 == 0) goto L_0x071c
            r5 = r0
            goto L_0x0724
        L_0x071c:
            org.telegram.tgnet.ConnectionsManager r5 = r52.getConnectionsManager()
            int r5 = r5.getCurrentTime()
        L_0x0724:
            r9.date = r5
            r19 = r2
            r5 = r20
            boolean r2 = r5 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel
            if (r2 == 0) goto L_0x073c
            if (r24 == 0) goto L_0x073c
            if (r0 != 0) goto L_0x0755
            r2 = 1
            r9.views = r2
            int r2 = r9.flags
            r2 = r2 | 1024(0x400, float:1.435E-42)
            r9.flags = r2
            goto L_0x0755
        L_0x073c:
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            int r2 = r2.flags
            r2 = r2 & 1024(0x400, float:1.435E-42)
            if (r2 == 0) goto L_0x0752
            if (r0 != 0) goto L_0x0752
            org.telegram.tgnet.TLRPC$Message r2 = r15.messageOwner
            int r2 = r2.views
            r9.views = r2
            int r2 = r9.flags
            r2 = r2 | 1024(0x400, float:1.435E-42)
            r9.flags = r2
        L_0x0752:
            r2 = 1
            r9.unread = r2
        L_0x0755:
            r9.dialog_id = r12
            r9.peer_id = r3
            boolean r2 = org.telegram.messenger.MessageObject.isVoiceMessage(r9)
            if (r2 != 0) goto L_0x0768
            boolean r2 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r9)
            if (r2 == 0) goto L_0x0766
            goto L_0x0768
        L_0x0766:
            r2 = 1
            goto L_0x077f
        L_0x0768:
            boolean r2 = r5 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel
            if (r2 == 0) goto L_0x077c
            long r42 = r15.getChannelId()
            int r2 = (r42 > r38 ? 1 : (r42 == r38 ? 0 : -1))
            if (r2 == 0) goto L_0x077c
            boolean r2 = r15.isContentUnread()
            r9.media_unread = r2
            r2 = 1
            goto L_0x077f
        L_0x077c:
            r2 = 1
            r9.media_unread = r2
        L_0x077f:
            r18 = r3
            org.telegram.messenger.MessageObject r3 = new org.telegram.messenger.MessageObject
            r20 = r14
            r37 = r19
            r14 = r52
            r19 = r4
            int r4 = r14.currentAccount
            r3.<init>(r4, r9, r2, r2)
            r4 = r3
            if (r0 == 0) goto L_0x0795
            r2 = 1
            goto L_0x0796
        L_0x0795:
            r2 = 0
        L_0x0796:
            r4.scheduled = r2
            org.telegram.tgnet.TLRPC$Message r2 = r4.messageOwner
            r3 = 1
            r2.send_state = r3
            r4.wasJustSent = r3
            r2 = r17
            r2.add(r4)
            r3 = r16
            r3.add(r9)
            r16 = r7
            org.telegram.messenger.MessageObject r7 = r15.replyMessageObject
            if (r7 == 0) goto L_0x07e5
            r7 = 0
        L_0x07b0:
            int r8 = r53.size()
            if (r7 >= r8) goto L_0x07e0
            r8 = r53
            java.lang.Object r38 = r8.get(r7)
            org.telegram.messenger.MessageObject r38 = (org.telegram.messenger.MessageObject) r38
            r39 = r11
            int r11 = r38.getId()
            org.telegram.messenger.MessageObject r10 = r15.replyMessageObject
            int r10 = r10.getId()
            if (r11 != r10) goto L_0x07d9
            org.telegram.tgnet.TLRPC$Message r10 = r4.messageOwner
            org.telegram.messenger.MessageObject r11 = r15.replyMessageObject
            org.telegram.tgnet.TLRPC$Message r11 = r11.messageOwner
            r10.replyMessage = r11
            org.telegram.messenger.MessageObject r10 = r15.replyMessageObject
            r4.replyMessageObject = r10
            goto L_0x07e9
        L_0x07d9:
            int r7 = r7 + 1
            r10 = r57
            r11 = r39
            goto L_0x07b0
        L_0x07e0:
            r8 = r53
            r39 = r11
            goto L_0x07e9
        L_0x07e5:
            r8 = r53
            r39 = r11
        L_0x07e9:
            if (r0 == 0) goto L_0x07ed
            r7 = 1
            goto L_0x07ee
        L_0x07ed:
            r7 = 0
        L_0x07ee:
            r14.putToSendingMessages(r9, r7)
            r38 = 0
            boolean r7 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r7 == 0) goto L_0x082b
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r10 = "forward message user_id = "
            r7.append(r10)
            long r10 = r5.user_id
            r7.append(r10)
            java.lang.String r10 = " chat_id = "
            r7.append(r10)
            long r10 = r5.chat_id
            r7.append(r10)
            java.lang.String r10 = " channel_id = "
            r7.append(r10)
            long r10 = r5.channel_id
            r7.append(r10)
            java.lang.String r10 = " access_hash = "
            r7.append(r10)
            long r10 = r5.access_hash
            r7.append(r10)
            java.lang.String r7 = r7.toString()
            org.telegram.messenger.FileLog.d(r7)
        L_0x082b:
            int r7 = r3.size()
            r10 = 100
            if (r7 == r10) goto L_0x0878
            int r7 = r53.size()
            r10 = 1
            int r7 = r7 - r10
            r11 = r34
            if (r11 == r7) goto L_0x087a
            int r7 = r53.size()
            int r7 = r7 - r10
            if (r11 == r7) goto L_0x0859
            int r7 = r11 + 1
            java.lang.Object r7 = r8.get(r7)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            long r42 = r7.getDialogId()
            long r44 = r15.getDialogId()
            int r7 = (r42 > r44 ? 1 : (r42 == r44 ? 0 : -1))
            if (r7 == 0) goto L_0x0859
            goto L_0x087a
        L_0x0859:
            r42 = r1
            r43 = r2
            r34 = r3
            r44 = r5
            r3 = r8
            r2 = r11
            r4 = r14
            r21 = r16
            r46 = r18
            r47 = r19
            r45 = r20
            r48 = 0
            r49 = 1
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0a4e
        L_0x0878:
            r11 = r34
        L_0x087a:
            org.telegram.messenger.MessagesStorage r42 = r52.getMessagesStorage()
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>(r3)
            r44 = 0
            r45 = 1
            r46 = 0
            r47 = 0
            if (r0 == 0) goto L_0x0890
            r48 = 1
            goto L_0x0892
        L_0x0890:
            r48 = 0
        L_0x0892:
            r43 = r7
            r42.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r43, (boolean) r44, (boolean) r45, (boolean) r46, (int) r47, (boolean) r48)
            org.telegram.messenger.MessagesController r7 = r52.getMessagesController()
            if (r0 == 0) goto L_0x089f
            r10 = 1
            goto L_0x08a0
        L_0x089f:
            r10 = 0
        L_0x08a0:
            r7.updateInterfaceWithMessages(r12, r2, r10)
            org.telegram.messenger.NotificationCenter r7 = r52.getNotificationCenter()
            int r10 = org.telegram.messenger.NotificationCenter.dialogsNeedReload
            r34 = r4
            r42 = r9
            r4 = 0
            java.lang.Object[] r9 = new java.lang.Object[r4]
            r7.postNotificationName(r10, r9)
            org.telegram.messenger.UserConfig r7 = r52.getUserConfig()
            r7.saveConfig(r4)
            org.telegram.tgnet.TLRPC$TL_messages_forwardMessages r4 = new org.telegram.tgnet.TLRPC$TL_messages_forwardMessages
            r4.<init>()
            r10 = r4
            r10.to_peer = r5
            if (r58 == 0) goto L_0x08e5
            int r4 = r14.currentAccount
            android.content.SharedPreferences r4 = org.telegram.messenger.MessagesController.getNotificationsSettings(r4)
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r9 = "silent_"
            r7.append(r9)
            r7.append(r12)
            java.lang.String r7 = r7.toString()
            r9 = 0
            boolean r4 = r4.getBoolean(r7, r9)
            if (r4 == 0) goto L_0x08e3
            goto L_0x08e5
        L_0x08e3:
            r4 = 0
            goto L_0x08e6
        L_0x08e5:
            r4 = 1
        L_0x08e6:
            r10.silent = r4
            if (r0 == 0) goto L_0x08f2
            r10.schedule_date = r0
            int r4 = r10.flags
            r4 = r4 | 1024(0x400, float:1.435E-42)
            r10.flags = r4
        L_0x08f2:
            org.telegram.tgnet.TLRPC$Message r4 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r4 = r4.peer_id
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_peerChannel
            if (r4 == 0) goto L_0x0927
            org.telegram.messenger.MessagesController r4 = r52.getMessagesController()
            org.telegram.tgnet.TLRPC$Message r7 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r7 = r7.peer_id
            r9 = r11
            long r11 = r7.channel_id
            java.lang.Long r7 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r4 = r4.getChat(r7)
            org.telegram.tgnet.TLRPC$TL_inputPeerChannel r7 = new org.telegram.tgnet.TLRPC$TL_inputPeerChannel
            r7.<init>()
            r10.from_peer = r7
            org.telegram.tgnet.TLRPC$InputPeer r7 = r10.from_peer
            org.telegram.tgnet.TLRPC$Message r11 = r15.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.peer_id
            long r11 = r11.channel_id
            r7.channel_id = r11
            if (r4 == 0) goto L_0x0926
            org.telegram.tgnet.TLRPC$InputPeer r7 = r10.from_peer
            long r11 = r4.access_hash
            r7.access_hash = r11
        L_0x0926:
            goto L_0x092f
        L_0x0927:
            r9 = r11
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r4 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty
            r4.<init>()
            r10.from_peer = r4
        L_0x092f:
            r10.random_id = r6
            r10.id = r1
            r11 = r56
            r10.drop_author = r11
            r12 = r57
            r10.drop_media_captions = r12
            int r4 = r53.size()
            r13 = 1
            if (r4 != r13) goto L_0x0951
            r4 = 0
            java.lang.Object r7 = r8.get(r4)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            org.telegram.tgnet.TLRPC$Message r7 = r7.messageOwner
            boolean r7 = r7.with_my_score
            if (r7 == 0) goto L_0x0952
            r7 = 1
            goto L_0x0953
        L_0x0951:
            r4 = 0
        L_0x0952:
            r7 = 0
        L_0x0953:
            r10.with_my_score = r7
            r21 = r16
            r8 = r3
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>(r2)
            r43 = r2
            r2 = r9
            r16 = r42
            r42 = r1
            r9 = r7
            r7 = r37
            r1 = 2147483646(0x7ffffffe, float:NaN)
            if (r0 != r1) goto L_0x096e
            r1 = 1
            goto L_0x096f
        L_0x096e:
            r1 = 0
        L_0x096f:
            r44 = r5
            r5 = r1
            org.telegram.tgnet.ConnectionsManager r1 = r52.getConnectionsManager()
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76 r13 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda76
            r45 = r20
            r0 = r13
            r14 = r1
            r1 = r52
            r4 = r2
            r17 = r3
            r46 = r18
            r47 = r19
            r48 = 0
            r49 = 1
            r2 = r54
            r50 = r4
            r18 = r34
            r4 = r59
            r12 = r10
            r10 = r15
            r11 = r46
            r19 = r12
            r34 = r17
            r51 = r30
            r30 = r6
            r6 = r51
            r0.<init>(r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, r12)
            r0 = 68
            r1 = r19
            r14.sendRequest(r1, r13, r0)
            int r0 = r53.size()
            int r0 = r0 + -1
            r2 = r50
            if (r2 == r0) goto L_0x09db
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            java.util.ArrayList r4 = new java.util.ArrayList
            r4.<init>()
            java.util.ArrayList r10 = new java.util.ArrayList
            r10.<init>()
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray
            r11.<init>()
            r17 = r0
            r16 = r3
            r30 = r4
            r18 = r10
            r15 = r11
            r4 = r52
            r3 = r53
            goto L_0x0a56
        L_0x09db:
            r4 = r52
            r3 = r53
            goto L_0x0a4e
        L_0x09e1:
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r43 = r17
            r42 = r18
            r37 = r19
            r44 = r20
            r2 = r34
            r4 = 0
            r48 = 0
            r49 = 1
            r34 = r16
            r51 = r30
            r30 = r6
            r6 = r51
        L_0x0a04:
            int r0 = r15.type
            if (r0 != 0) goto L_0x0a49
            java.lang.CharSequence r0 = r15.messageText
            boolean r0 = android.text.TextUtils.isEmpty(r0)
            if (r0 != 0) goto L_0x0a49
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            if (r0 == 0) goto L_0x0a1d
            org.telegram.tgnet.TLRPC$Message r0 = r15.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
            org.telegram.tgnet.TLRPC$WebPage r9 = r0.webpage
            goto L_0x0a1e
        L_0x0a1d:
            r9 = r4
        L_0x0a1e:
            r0 = r9
            java.lang.CharSequence r1 = r15.messageText
            java.lang.String r8 = r1.toString()
            r11 = 0
            r12 = 0
            if (r0 == 0) goto L_0x0a2b
            r14 = 1
            goto L_0x0a2c
        L_0x0a2b:
            r14 = 0
        L_0x0a2c:
            org.telegram.tgnet.TLRPC$Message r1 = r15.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r1.entities
            r16 = 0
            r17 = 0
            r20 = 0
            r7 = r52
            r9 = r54
            r13 = r0
            r3 = r53
            r4 = r52
            r5 = r15
            r15 = r1
            r18 = r58
            r19 = r59
            r7.sendMessage(r8, r9, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20)
            goto L_0x0a4e
        L_0x0a49:
            r4 = r52
            r3 = r53
            r5 = r15
        L_0x0a4e:
            r16 = r34
            r15 = r37
            r18 = r42
            r17 = r43
        L_0x0a56:
            int r9 = r2 + 1
            r12 = r54
            r11 = r56
            r10 = r57
            r14 = r3
            r7 = r21
            r1 = r39
            r4 = r40
            r20 = r44
            r0 = r45
            r3 = r46
            r2 = r47
            r51 = r30
            r30 = r6
            r6 = r51
            goto L_0x0124
        L_0x0a75:
            r45 = r0
            r39 = r1
            r47 = r2
            r46 = r3
            r40 = r4
            r21 = r7
            r2 = r9
            r3 = r14
            r34 = r16
            r43 = r17
            r42 = r18
            r37 = r19
            r44 = r20
            r4 = r52
            r51 = r30
            r30 = r6
            r6 = r51
            r5 = r54
            r0 = r23
            r1 = r24
            goto L_0x0abf
        L_0x0a9c:
            r23 = r0
            r24 = r1
            r21 = r7
            r3 = r14
            r4 = r15
            r0 = 0
        L_0x0aa5:
            int r1 = r53.size()
            if (r0 >= r1) goto L_0x0ab9
            java.lang.Object r1 = r3.get(r0)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            r5 = r54
            r4.processForwardFromMyName(r1, r5)
            int r0 = r0 + 1
            goto L_0x0aa5
        L_0x0ab9:
            r5 = r54
            r0 = r23
            r1 = r24
        L_0x0abf:
            return r0
        L_0x0ac0:
            r5 = r12
            r3 = r14
            r4 = r15
            r48 = 0
        L_0x0ac5:
            return r48
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.sendMessage(java.util.ArrayList, long, boolean, boolean, boolean, int):int");
    }

    /* renamed from: lambda$sendMessage$14$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m490lambda$sendMessage$14$orgtelegrammessengerSendMessagesHelper(long peer, int scheduleDate, boolean scheduledOnline, boolean toMyself, LongSparseArray messagesByRandomIdsFinal, ArrayList newMsgObjArr, ArrayList newMsgArr, MessageObject msgObj, TLRPC.Peer peer_id, TLRPC.TL_messages_forwardMessages req, TLObject response, TLRPC.TL_error error) {
        SendMessagesHelper sendMessagesHelper;
        Integer value;
        SparseLongArray newMessagesByIds;
        TLRPC.Updates updates;
        int i;
        int sentCount;
        boolean currentSchedule;
        TLRPC.Message message;
        int sentCount2;
        TLRPC.Updates updates2;
        int i2;
        int i3 = scheduleDate;
        ArrayList arrayList = newMsgObjArr;
        ArrayList arrayList2 = newMsgArr;
        TLRPC.TL_error tL_error = error;
        if (tL_error == null) {
            SparseLongArray newMessagesByIds2 = new SparseLongArray();
            TLRPC.Updates updates3 = (TLRPC.Updates) response;
            int a1 = 0;
            while (a1 < updates3.updates.size()) {
                TLRPC.Update update = updates3.updates.get(a1);
                if (update instanceof TLRPC.TL_updateMessageID) {
                    TLRPC.TL_updateMessageID updateMessageID = (TLRPC.TL_updateMessageID) update;
                    newMessagesByIds2.put(updateMessageID.id, updateMessageID.random_id);
                    updates3.updates.remove(a1);
                    a1--;
                }
                a1++;
            }
            Integer value2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(peer));
            if (value2 == null) {
                Integer value3 = Integer.valueOf(getMessagesStorage().getDialogReadMax(true, peer));
                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(peer), value3);
                value = value3;
            } else {
                long j = peer;
                value = value2;
            }
            int a12 = 0;
            int sentCount3 = 0;
            while (a12 < updates3.updates.size()) {
                TLRPC.Update update2 = updates3.updates.get(a12);
                if ((update2 instanceof TLRPC.TL_updateNewMessage) || (update2 instanceof TLRPC.TL_updateNewChannelMessage) || (update2 instanceof TLRPC.TL_updateNewScheduledMessage)) {
                    boolean currentSchedule2 = i3 != 0;
                    updates3.updates.remove(a12);
                    int a13 = a12 - 1;
                    if ((update2 instanceof TLRPC.TL_updateNewMessage) != 0) {
                        TLRPC.TL_updateNewMessage updateNewMessage = (TLRPC.TL_updateNewMessage) update2;
                        message = updateNewMessage.message;
                        currentSchedule = currentSchedule2;
                        sentCount = sentCount3;
                        getMessagesController().processNewDifferenceParams(-1, updateNewMessage.pts, -1, updateNewMessage.pts_count);
                        TLRPC.Update update3 = update2;
                    } else {
                        currentSchedule = currentSchedule2;
                        sentCount = sentCount3;
                        if (update2 instanceof TLRPC.TL_updateNewScheduledMessage) {
                            message = ((TLRPC.TL_updateNewScheduledMessage) update2).message;
                            TLRPC.Update update4 = update2;
                        } else {
                            TLRPC.TL_updateNewChannelMessage updateNewChannelMessage = (TLRPC.TL_updateNewChannelMessage) update2;
                            message = updateNewChannelMessage.message;
                            TLRPC.Update update5 = update2;
                            getMessagesController().processNewChannelDifferenceParams(updateNewChannelMessage.pts, updateNewChannelMessage.pts_count, message.peer_id.channel_id);
                        }
                    }
                    if (scheduledOnline && message.date != NUM) {
                        currentSchedule = false;
                    }
                    ImageLoader.saveMessageThumbs(message);
                    if (!currentSchedule) {
                        message.unread = value.intValue() < message.id;
                    }
                    if (toMyself) {
                        message.out = true;
                        message.unread = false;
                        message.media_unread = false;
                    }
                    long random_id = newMessagesByIds2.get(message.id);
                    if (random_id != 0) {
                        TLRPC.Message newMsgObj1 = (TLRPC.Message) messagesByRandomIdsFinal.get(random_id);
                        if (newMsgObj1 == null) {
                            newMessagesByIds = newMessagesByIds2;
                            updates2 = updates3;
                            sentCount2 = sentCount;
                            i2 = 1;
                        } else {
                            int index = arrayList.indexOf(newMsgObj1);
                            if (index == -1) {
                                newMessagesByIds = newMessagesByIds2;
                                updates2 = updates3;
                                sentCount2 = sentCount;
                                i2 = 1;
                            } else {
                                MessageObject msgObj1 = (MessageObject) arrayList2.get(index);
                                arrayList.remove(index);
                                arrayList2.remove(index);
                                int i4 = index;
                                int oldId = newMsgObj1.id;
                                ArrayList<TLRPC.Message> sentMessages = new ArrayList<>();
                                sentMessages.add(message);
                                msgObj1.messageOwner.post_author = message.post_author;
                                if ((message.flags & 33554432) != 0) {
                                    msgObj1.messageOwner.ttl_period = message.ttl_period;
                                    msgObj1.messageOwner.flags |= 33554432;
                                }
                                long j2 = random_id;
                                newMessagesByIds = newMessagesByIds2;
                                ArrayList<TLRPC.Message> sentMessages2 = sentMessages;
                                updateMediaPaths(msgObj1, message, message.id, (String) null, true);
                                int existFlags = msgObj1.getMediaExistanceFlags();
                                TLRPC.Message newMsgObj12 = newMsgObj1;
                                newMsgObj12.id = message.id;
                                int sentCount4 = sentCount + 1;
                                if (i3 == 0 || currentSchedule) {
                                    SendMessagesHelper$$ExternalSyntheticLambda47 sendMessagesHelper$$ExternalSyntheticLambda47 = r0;
                                    DispatchQueue storageQueue = getMessagesStorage().getStorageQueue();
                                    updates = updates3;
                                    TLRPC.Message message2 = newMsgObj12;
                                    i = 1;
                                    TLRPC.Message message3 = message;
                                    SendMessagesHelper$$ExternalSyntheticLambda47 sendMessagesHelper$$ExternalSyntheticLambda472 = new SendMessagesHelper$$ExternalSyntheticLambda47(this, newMsgObj12, peer_id, oldId, scheduleDate, sentMessages2, peer, message, existFlags);
                                    storageQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda47);
                                } else {
                                    MessageObject messageObject = msgObj1;
                                    AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda15(this, oldId, newMsgObj12, sentMessages2, msgObj, scheduleDate));
                                    updates = updates3;
                                    i = 1;
                                }
                                a12 = a13;
                                sentCount3 = sentCount4;
                            }
                        }
                    } else {
                        long j3 = random_id;
                        newMessagesByIds = newMessagesByIds2;
                        updates2 = updates3;
                        sentCount2 = sentCount;
                        i2 = 1;
                        TLRPC.Message message4 = message;
                    }
                    sentCount3 = sentCount2;
                    a12 = a13;
                } else {
                    newMessagesByIds = newMessagesByIds2;
                    updates = updates3;
                    i = 1;
                }
                a12 += i;
                long j4 = peer;
                arrayList = newMsgObjArr;
                arrayList2 = newMsgArr;
                updates3 = updates;
                newMessagesByIds2 = newMessagesByIds;
                i3 = scheduleDate;
            }
            TLRPC.Updates updates4 = updates3;
            int sentCount5 = sentCount3;
            if (!updates4.updates.isEmpty()) {
                getMessagesController().processUpdates(updates4, false);
            }
            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, sentCount5);
            sendMessagesHelper = this;
            TLRPC.TL_messages_forwardMessages tL_messages_forwardMessages = req;
        } else {
            sendMessagesHelper = this;
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda54(sendMessagesHelper, tL_error, req));
        }
        for (int a14 = 0; a14 < newMsgObjArr.size(); a14++) {
            TLRPC.Message newMsgObj13 = (TLRPC.Message) newMsgObjArr.get(a14);
            int i5 = scheduleDate;
            getMessagesStorage().markMessageAsSendError(newMsgObj13, i5 != 0);
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda40(sendMessagesHelper, newMsgObj13, i5));
        }
        int i6 = scheduleDate;
        ArrayList arrayList3 = newMsgObjArr;
    }

    /* renamed from: lambda$sendMessage$9$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m493lambda$sendMessage$9$orgtelegrammessengerSendMessagesHelper(int oldId, TLRPC.Message newMsgObj1, ArrayList sentMessages, MessageObject msgObj, int scheduleDate) {
        ArrayList<Integer> messageIds = new ArrayList<>();
        messageIds.add(Integer.valueOf(oldId));
        getMessagesController().deleteMessages(messageIds, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, newMsgObj1.dialog_id, false, true);
        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda27(this, sentMessages, msgObj, newMsgObj1, oldId, scheduleDate));
    }

    /* renamed from: lambda$sendMessage$8$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m492lambda$sendMessage$8$orgtelegrammessengerSendMessagesHelper(ArrayList sentMessages, MessageObject msgObj, TLRPC.Message newMsgObj1, int oldId, int scheduleDate) {
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda30(this, msgObj, newMsgObj1, oldId, scheduleDate));
    }

    /* renamed from: lambda$sendMessage$7$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m491lambda$sendMessage$7$orgtelegrammessengerSendMessagesHelper(MessageObject msgObj, TLRPC.Message newMsgObj1, int oldId, int scheduleDate) {
        ArrayList<MessageObject> messageObjects = new ArrayList<>();
        boolean z = true;
        messageObjects.add(new MessageObject(msgObj.currentAccount, msgObj.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(newMsgObj1.dialog_id, messageObjects, false);
        getMediaDataController().increasePeerRaiting(newMsgObj1.dialog_id);
        processSentMessage(oldId);
        if (scheduleDate == 0) {
            z = false;
        }
        removeFromSendingMessages(oldId, z);
    }

    /* renamed from: lambda$sendMessage$11$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m487lambda$sendMessage$11$orgtelegrammessengerSendMessagesHelper(TLRPC.Message newMsgObj1, TLRPC.Peer peer_id, int oldId, int scheduleDate, ArrayList sentMessages, long peer, TLRPC.Message message, int existFlags) {
        TLRPC.Message message2 = newMsgObj1;
        getMessagesStorage().updateMessageStateAndId(message2.random_id, MessageObject.getPeerId(peer_id), Integer.valueOf(oldId), message2.id, 0, false, scheduleDate != 0 ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, scheduleDate != 0);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda46(this, newMsgObj1, peer, oldId, message, existFlags, scheduleDate));
    }

    /* renamed from: lambda$sendMessage$10$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m486lambda$sendMessage$10$orgtelegrammessengerSendMessagesHelper(TLRPC.Message newMsgObj1, long peer, int oldId, TLRPC.Message message, int existFlags, int scheduleDate) {
        boolean z = false;
        newMsgObj1.send_state = 0;
        getMediaDataController().increasePeerRaiting(peer);
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.messageReceivedByServer;
        Object[] objArr = new Object[7];
        objArr[0] = Integer.valueOf(oldId);
        objArr[1] = Integer.valueOf(message.id);
        objArr[2] = message;
        objArr[3] = Long.valueOf(peer);
        objArr[4] = 0L;
        objArr[5] = Integer.valueOf(existFlags);
        objArr[6] = Boolean.valueOf(scheduleDate != 0);
        notificationCenter.postNotificationName(i, objArr);
        processSentMessage(oldId);
        if (scheduleDate != 0) {
            z = true;
        }
        removeFromSendingMessages(oldId, z);
    }

    /* renamed from: lambda$sendMessage$12$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m488lambda$sendMessage$12$orgtelegrammessengerSendMessagesHelper(TLRPC.TL_error error, TLRPC.TL_messages_forwardMessages req) {
        AlertsCreator.processError(this.currentAccount, error, (BaseFragment) null, req, new Object[0]);
    }

    /* renamed from: lambda$sendMessage$13$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m489lambda$sendMessage$13$orgtelegrammessengerSendMessagesHelper(TLRPC.Message newMsgObj1, int scheduleDate) {
        newMsgObj1.send_state = 2;
        boolean z = true;
        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsgObj1.id));
        processSentMessage(newMsgObj1.id);
        int i = newMsgObj1.id;
        if (scheduleDate == 0) {
            z = false;
        }
        removeFromSendingMessages(i, z);
    }

    private void writePreviousMessageData(TLRPC.Message message, SerializedData data) {
        if (message.media == null) {
            new TLRPC.TL_messageMediaEmpty().serializeToStream(data);
        } else {
            message.media.serializeToStream(data);
        }
        String str = "";
        data.writeString(message.message != null ? message.message : str);
        if (message.attachPath != null) {
            str = message.attachPath;
        }
        data.writeString(str);
        int size = message.entities.size();
        int count = size;
        data.writeInt32(size);
        for (int a = 0; a < count; a++) {
            message.entities.get(a).serializeToStream(data);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v1, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v3, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v2, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v6, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v8, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v9, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v10, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v11, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v8, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v12, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v10, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v17, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v12, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v13, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v19, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v18, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v18, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v19, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v19, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v20, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v20, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v21, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v22, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v23, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v13, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v32, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v29, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v47, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v39, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v42, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v14, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v15, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v16, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v17, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v18, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r27v5, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v12, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v13, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v15, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v14, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v16, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v17, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v19, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v20, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v21, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v22, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v23, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v24, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v83, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v43, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v19, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v96, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v21, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v97, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v98, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v100, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v5, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v16, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v6, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v21, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v42, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v43, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v65, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v44, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v71, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v45, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v46, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v47, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v48, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX WARNING: type inference failed for: r25v4 */
    /* JADX WARNING: type inference failed for: r22v4 */
    /* JADX WARNING: type inference failed for: r20v10 */
    /* JADX WARNING: type inference failed for: r20v11 */
    /* JADX WARNING: type inference failed for: r22v10 */
    /* JADX WARNING: type inference failed for: r22v11 */
    /* JADX WARNING: type inference failed for: r25v10 */
    /* JADX WARNING: type inference failed for: r25v11 */
    /* JADX WARNING: type inference failed for: r25v12 */
    /* JADX WARNING: type inference failed for: r25v14 */
    /* JADX WARNING: type inference failed for: r25v20 */
    /* JADX WARNING: type inference failed for: r22v14 */
    /* JADX WARNING: type inference failed for: r20v17 */
    /* JADX WARNING: type inference failed for: r20v18 */
    /* JADX WARNING: type inference failed for: r20v19 */
    /* JADX WARNING: type inference failed for: r22v16 */
    /* JADX WARNING: type inference failed for: r25v22 */
    /* JADX WARNING: type inference failed for: r25v23 */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x0229, code lost:
        if (r14.type != 2) goto L_0x0242;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x004c, code lost:
        if (org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r6.layer) < 101) goto L_0x0051;
     */
    /* JADX WARNING: Incorrect type for immutable var: ssa=org.telegram.tgnet.TLRPC$TL_document, code=java.lang.Object, for r35v0, types: [org.telegram.tgnet.TLRPC$TL_document, org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:105:0x01e7 A[Catch:{ Exception -> 0x01b5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x020c  */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0069 A[SYNTHETIC, Splitter:B:24:0x0069] */
    /* JADX WARNING: Removed duplicated region for block: B:355:0x0688 A[SYNTHETIC, Splitter:B:355:0x0688] */
    /* JADX WARNING: Removed duplicated region for block: B:362:0x069b A[SYNTHETIC, Splitter:B:362:0x069b] */
    /* JADX WARNING: Removed duplicated region for block: B:367:0x06ad A[SYNTHETIC, Splitter:B:367:0x06ad] */
    /* JADX WARNING: Removed duplicated region for block: B:381:0x0701 A[Catch:{ Exception -> 0x0691 }] */
    /* JADX WARNING: Removed duplicated region for block: B:383:0x0705 A[Catch:{ Exception -> 0x0691 }] */
    /* JADX WARNING: Removed duplicated region for block: B:386:0x070b  */
    /* JADX WARNING: Removed duplicated region for block: B:396:0x074f A[Catch:{ Exception -> 0x0731 }] */
    /* JADX WARNING: Removed duplicated region for block: B:67:0x0118 A[SYNTHETIC, Splitter:B:67:0x0118] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void editMessage(org.telegram.messenger.MessageObject r32, org.telegram.tgnet.TLRPC.TL_photo r33, org.telegram.messenger.VideoEditedInfo r34, java.lang.Object r35, java.lang.String r36, java.util.HashMap<java.lang.String, java.lang.String> r37, boolean r38, java.lang.Object r39) {
        /*
            r31 = this;
            r13 = r31
            r14 = r32
            r1 = r33
            r2 = r35
            r3 = r36
            java.lang.String r0 = "originalPath"
            java.lang.String r4 = "parentObject"
            if (r14 != 0) goto L_0x0011
            return
        L_0x0011:
            if (r37 != 0) goto L_0x0019
            java.util.HashMap r5 = new java.util.HashMap
            r5.<init>()
            goto L_0x001b
        L_0x0019:
            r5 = r37
        L_0x001b:
            org.telegram.tgnet.TLRPC$Message r15 = r14.messageOwner
            r6 = 0
            r14.cancelEditing = r6
            r7 = -1
            r8 = 0
            long r9 = r32.getDialogId()     // Catch:{ Exception -> 0x0870 }
            r11 = r9
            r9 = 1
            boolean r10 = org.telegram.messenger.DialogObject.isEncryptedDialog(r11)     // Catch:{ Exception -> 0x0870 }
            if (r10 == 0) goto L_0x0062
            int r10 = org.telegram.messenger.DialogObject.getEncryptedChatId(r11)     // Catch:{ Exception -> 0x0054 }
            org.telegram.messenger.MessagesController r6 = r31.getMessagesController()     // Catch:{ Exception -> 0x0054 }
            r16 = r7
            java.lang.Integer r7 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = r6.getEncryptedChat(r7)     // Catch:{ Exception -> 0x0054 }
            if (r6 == 0) goto L_0x004f
            int r7 = r6.layer     // Catch:{ Exception -> 0x0054 }
            int r7 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r7)     // Catch:{ Exception -> 0x0054 }
            r17 = r6
            r6 = 101(0x65, float:1.42E-43)
            if (r7 >= r6) goto L_0x0064
            goto L_0x0051
        L_0x004f:
            r17 = r6
        L_0x0051:
            r9 = 0
            r10 = r9
            goto L_0x0065
        L_0x0054:
            r0 = move-exception
            r16 = r34
            r9 = r1
            r8 = r2
            r7 = r3
            r28 = r5
            r19 = r15
            r5 = r39
            goto L_0x087d
        L_0x0062:
            r16 = r7
        L_0x0064:
            r10 = r9
        L_0x0065:
            java.lang.String r6 = "http"
            if (r38 == 0) goto L_0x0118
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0054 }
            if (r7 != 0) goto L_0x00c8
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x00c8
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaEmpty     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x0080
            goto L_0x00c8
        L_0x0080:
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x0095
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$Photo r7 = r7.photo     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$TL_photo r7 = (org.telegram.tgnet.TLRPC.TL_photo) r7     // Catch:{ Exception -> 0x0054 }
            r1 = r7
            r7 = 2
            r9 = r34
            goto L_0x00cb
        L_0x0095:
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x0054 }
            if (r7 == 0) goto L_0x00c3
            org.telegram.tgnet.TLRPC$Message r7 = r14.messageOwner     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$Document r7 = r7.document     // Catch:{ Exception -> 0x0054 }
            org.telegram.tgnet.TLRPC$TL_document r7 = (org.telegram.tgnet.TLRPC.TL_document) r7     // Catch:{ Exception -> 0x0054 }
            r2 = r7
            boolean r7 = org.telegram.messenger.MessageObject.isVideoDocument(r2)     // Catch:{ Exception -> 0x00b5 }
            if (r7 != 0) goto L_0x00b1
            if (r34 == 0) goto L_0x00af
            goto L_0x00b1
        L_0x00af:
            r7 = 7
            goto L_0x00b2
        L_0x00b1:
            r7 = 3
        L_0x00b2:
            org.telegram.messenger.VideoEditedInfo r9 = r14.videoEditedInfo     // Catch:{ Exception -> 0x00b5 }
            goto L_0x00cb
        L_0x00b5:
            r0 = move-exception
            r16 = r34
            r9 = r1
            r8 = r2
            r7 = r3
            r28 = r5
            r19 = r15
            r5 = r39
            goto L_0x087d
        L_0x00c3:
            r9 = r34
            r7 = r16
            goto L_0x00cb
        L_0x00c8:
            r7 = 1
            r9 = r34
        L_0x00cb:
            r33 = r1
            java.util.HashMap<java.lang.String, java.lang.String> r1 = r15.params     // Catch:{ Exception -> 0x0109 }
            r5 = r1
            if (r39 != 0) goto L_0x00df
            if (r5 == 0) goto L_0x00df
            boolean r1 = r5.containsKey(r4)     // Catch:{ Exception -> 0x0109 }
            if (r1 == 0) goto L_0x00df
            java.lang.Object r1 = r5.get(r4)     // Catch:{ Exception -> 0x0109 }
            goto L_0x00e1
        L_0x00df:
            r1 = r39
        L_0x00e1:
            java.lang.String r4 = r15.message     // Catch:{ Exception -> 0x00fb }
            r14.editingMessage = r4     // Catch:{ Exception -> 0x00fb }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r4 = r15.entities     // Catch:{ Exception -> 0x00fb }
            r14.editingMessageEntities = r4     // Catch:{ Exception -> 0x00fb }
            java.lang.String r4 = r15.attachPath     // Catch:{ Exception -> 0x00fb }
            r3 = r4
            r4 = r5
            r21 = r8
            r5 = r1
            r8 = r2
            r1 = r9
            r9 = r33
            r30 = r7
            r7 = r3
            r3 = r30
            goto L_0x0208
        L_0x00fb:
            r0 = move-exception
            r8 = r2
            r7 = r3
            r28 = r5
            r16 = r9
            r19 = r15
            r9 = r33
            r5 = r1
            goto L_0x087d
        L_0x0109:
            r0 = move-exception
            r8 = r2
            r7 = r3
            r28 = r5
            r16 = r9
            r19 = r15
            r9 = r33
            r5 = r39
            goto L_0x087d
        L_0x0118:
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0870 }
            r14.previousMedia = r4     // Catch:{ Exception -> 0x0870 }
            java.lang.String r4 = r15.message     // Catch:{ Exception -> 0x0870 }
            r14.previousMessage = r4     // Catch:{ Exception -> 0x0870 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r4 = r15.entities     // Catch:{ Exception -> 0x0870 }
            r14.previousMessageEntities = r4     // Catch:{ Exception -> 0x0870 }
            java.lang.String r4 = r15.attachPath     // Catch:{ Exception -> 0x0870 }
            r14.previousAttachPath = r4     // Catch:{ Exception -> 0x0870 }
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0870 }
            if (r4 != 0) goto L_0x0132
            org.telegram.tgnet.TLRPC$TL_messageMediaEmpty r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaEmpty     // Catch:{ Exception -> 0x0054 }
            r7.<init>()     // Catch:{ Exception -> 0x0054 }
            r4 = r7
        L_0x0132:
            org.telegram.tgnet.SerializedData r7 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x0870 }
            r9 = 1
            r7.<init>((boolean) r9)     // Catch:{ Exception -> 0x0870 }
            r13.writePreviousMessageData(r15, r7)     // Catch:{ Exception -> 0x0870 }
            org.telegram.tgnet.SerializedData r9 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x0870 }
            r19 = r4
            int r4 = r7.length()     // Catch:{ Exception -> 0x0870 }
            r9.<init>((int) r4)     // Catch:{ Exception -> 0x0870 }
            r4 = r9
            r13.writePreviousMessageData(r15, r4)     // Catch:{ Exception -> 0x0870 }
            if (r5 != 0) goto L_0x0152
            java.util.HashMap r9 = new java.util.HashMap     // Catch:{ Exception -> 0x0054 }
            r9.<init>()     // Catch:{ Exception -> 0x0054 }
            r5 = r9
        L_0x0152:
            java.lang.String r9 = "prevMedia"
            r20 = r7
            byte[] r7 = r4.toByteArray()     // Catch:{ Exception -> 0x0870 }
            r21 = r8
            r8 = 0
            java.lang.String r7 = android.util.Base64.encodeToString(r7, r8)     // Catch:{ Exception -> 0x0870 }
            r5.put(r9, r7)     // Catch:{ Exception -> 0x0870 }
            r4.cleanup()     // Catch:{ Exception -> 0x0870 }
            if (r1 == 0) goto L_0x01c4
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x01b5 }
            r7.<init>()     // Catch:{ Exception -> 0x01b5 }
            r15.media = r7     // Catch:{ Exception -> 0x01b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x01b5 }
            int r8 = r7.flags     // Catch:{ Exception -> 0x01b5 }
            r9 = 3
            r8 = r8 | r9
            r7.flags = r8     // Catch:{ Exception -> 0x01b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x01b5 }
            r7.photo = r1     // Catch:{ Exception -> 0x01b5 }
            r7 = 2
            if (r3 == 0) goto L_0x018f
            int r8 = r36.length()     // Catch:{ Exception -> 0x0054 }
            if (r8 <= 0) goto L_0x018f
            boolean r8 = r3.startsWith(r6)     // Catch:{ Exception -> 0x0054 }
            if (r8 == 0) goto L_0x018f
            r15.attachPath = r3     // Catch:{ Exception -> 0x0054 }
            goto L_0x01f6
        L_0x018f:
            java.util.ArrayList r8 = r1.sizes     // Catch:{ Exception -> 0x01b5 }
            java.util.ArrayList r9 = r1.sizes     // Catch:{ Exception -> 0x01b5 }
            int r9 = r9.size()     // Catch:{ Exception -> 0x01b5 }
            r16 = 1
            int r9 = r9 + -1
            java.lang.Object r8 = r8.get(r9)     // Catch:{ Exception -> 0x01b5 }
            org.telegram.tgnet.TLRPC$PhotoSize r8 = (org.telegram.tgnet.TLRPC.PhotoSize) r8     // Catch:{ Exception -> 0x01b5 }
            org.telegram.tgnet.TLRPC$FileLocation r8 = r8.location     // Catch:{ Exception -> 0x01b5 }
            int r9 = r13.currentAccount     // Catch:{ Exception -> 0x01b5 }
            org.telegram.messenger.FileLoader r9 = org.telegram.messenger.FileLoader.getInstance(r9)     // Catch:{ Exception -> 0x01b5 }
            r1 = 1
            java.io.File r9 = r9.getPathToAttach(r8, r1)     // Catch:{ Exception -> 0x01b5 }
            java.lang.String r1 = r9.toString()     // Catch:{ Exception -> 0x01b5 }
            r15.attachPath = r1     // Catch:{ Exception -> 0x01b5 }
            goto L_0x01f6
        L_0x01b5:
            r0 = move-exception
            r9 = r33
            r16 = r34
            r8 = r2
            r7 = r3
            r28 = r5
            r19 = r15
            r5 = r39
            goto L_0x087d
        L_0x01c4:
            if (r2 == 0) goto L_0x01f4
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x01b5 }
            r1.<init>()     // Catch:{ Exception -> 0x01b5 }
            r15.media = r1     // Catch:{ Exception -> 0x01b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r15.media     // Catch:{ Exception -> 0x01b5 }
            int r7 = r1.flags     // Catch:{ Exception -> 0x01b5 }
            r8 = 3
            r7 = r7 | r8
            r1.flags = r7     // Catch:{ Exception -> 0x01b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r15.media     // Catch:{ Exception -> 0x01b5 }
            r1.document = r2     // Catch:{ Exception -> 0x01b5 }
            boolean r1 = org.telegram.messenger.MessageObject.isVideoDocument(r35)     // Catch:{ Exception -> 0x01b5 }
            if (r1 != 0) goto L_0x01e4
            if (r34 == 0) goto L_0x01e2
            goto L_0x01e4
        L_0x01e2:
            r1 = 7
            goto L_0x01e5
        L_0x01e4:
            r1 = 3
        L_0x01e5:
            if (r34 == 0) goto L_0x01f0
            java.lang.String r7 = r34.getString()     // Catch:{ Exception -> 0x01b5 }
            java.lang.String r8 = "ve"
            r5.put(r8, r7)     // Catch:{ Exception -> 0x01b5 }
        L_0x01f0:
            r15.attachPath = r3     // Catch:{ Exception -> 0x01b5 }
            r7 = r1
            goto L_0x01f6
        L_0x01f4:
            r1 = 1
            r7 = r1
        L_0x01f6:
            r15.params = r5     // Catch:{ Exception -> 0x0870 }
            r1 = 3
            r15.send_state = r1     // Catch:{ Exception -> 0x0870 }
            r9 = r33
            r1 = r34
            r8 = r2
            r4 = r5
            r5 = r39
            r30 = r7
            r7 = r3
            r3 = r30
        L_0x0208:
            java.lang.String r2 = r15.attachPath     // Catch:{ Exception -> 0x085e }
            if (r2 != 0) goto L_0x021a
            java.lang.String r2 = ""
            r15.attachPath = r2     // Catch:{ Exception -> 0x0211 }
            goto L_0x021a
        L_0x0211:
            r0 = move-exception
            r16 = r1
            r28 = r4
            r19 = r15
            goto L_0x087d
        L_0x021a:
            r2 = 0
            r15.local_id = r2     // Catch:{ Exception -> 0x085e }
            int r2 = r14.type     // Catch:{ Exception -> 0x085e }
            r16 = r8
            r8 = 3
            if (r2 == r8) goto L_0x0237
            if (r1 != 0) goto L_0x0237
            int r2 = r14.type     // Catch:{ Exception -> 0x022c }
            r8 = 2
            if (r2 != r8) goto L_0x0242
            goto L_0x0237
        L_0x022c:
            r0 = move-exception
            r28 = r4
            r19 = r15
            r8 = r16
            r16 = r1
            goto L_0x087d
        L_0x0237:
            java.lang.String r2 = r15.attachPath     // Catch:{ Exception -> 0x084a }
            boolean r2 = android.text.TextUtils.isEmpty(r2)     // Catch:{ Exception -> 0x084a }
            if (r2 != 0) goto L_0x0242
            r2 = 1
            r14.attachPathExists = r2     // Catch:{ Exception -> 0x022c }
        L_0x0242:
            org.telegram.messenger.VideoEditedInfo r2 = r14.videoEditedInfo     // Catch:{ Exception -> 0x084a }
            if (r2 == 0) goto L_0x024d
            if (r1 != 0) goto L_0x024d
            org.telegram.messenger.VideoEditedInfo r2 = r14.videoEditedInfo     // Catch:{ Exception -> 0x022c }
            r1 = r2
            r8 = r1
            goto L_0x024e
        L_0x024d:
            r8 = r1
        L_0x024e:
            if (r38 != 0) goto L_0x0381
            java.lang.CharSequence r2 = r14.editingMessage     // Catch:{ Exception -> 0x0374 }
            if (r2 == 0) goto L_0x02fd
            java.lang.String r2 = r15.message     // Catch:{ Exception -> 0x02f0 }
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x02f0 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x02f0 }
            r15.message = r1     // Catch:{ Exception -> 0x02f0 }
            r1 = 0
            r14.caption = r1     // Catch:{ Exception -> 0x02f0 }
            r1 = 1
            if (r3 != r1) goto L_0x0299
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x028c }
            if (r1 == 0) goto L_0x0276
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x028c }
            r15.entities = r1     // Catch:{ Exception -> 0x028c }
            int r1 = r15.flags     // Catch:{ Exception -> 0x028c }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r15.flags = r1     // Catch:{ Exception -> 0x028c }
            r35 = r8
            goto L_0x02ff
        L_0x0276:
            java.lang.String r1 = r15.message     // Catch:{ Exception -> 0x028c }
            boolean r1 = android.text.TextUtils.equals(r2, r1)     // Catch:{ Exception -> 0x028c }
            if (r1 != 0) goto L_0x0288
            int r1 = r15.flags     // Catch:{ Exception -> 0x028c }
            r1 = r1 & -129(0xffffffffffffff7f, float:NaN)
            r15.flags = r1     // Catch:{ Exception -> 0x028c }
            r35 = r8
            goto L_0x02ff
        L_0x0288:
            r35 = r8
            goto L_0x02ff
        L_0x028c:
            r0 = move-exception
            r28 = r4
            r19 = r15
            r30 = r16
            r16 = r8
            r8 = r30
            goto L_0x087d
        L_0x0299:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x02f0 }
            if (r1 == 0) goto L_0x02aa
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x028c }
            r15.entities = r1     // Catch:{ Exception -> 0x028c }
            int r1 = r15.flags     // Catch:{ Exception -> 0x028c }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r15.flags = r1     // Catch:{ Exception -> 0x028c }
            r35 = r8
            goto L_0x02e1
        L_0x02aa:
            r35 = r8
            r1 = 1
            java.lang.CharSequence[] r8 = new java.lang.CharSequence[r1]     // Catch:{ Exception -> 0x02e5 }
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x02e5 }
            r19 = 0
            r8[r19] = r1     // Catch:{ Exception -> 0x02e5 }
            r1 = r8
            org.telegram.messenger.MediaDataController r8 = r31.getMediaDataController()     // Catch:{ Exception -> 0x02e5 }
            java.util.ArrayList r8 = r8.getEntities(r1, r10)     // Catch:{ Exception -> 0x02e5 }
            if (r8 == 0) goto L_0x02d1
            boolean r19 = r8.isEmpty()     // Catch:{ Exception -> 0x02e5 }
            if (r19 != 0) goto L_0x02d1
            r15.entities = r8     // Catch:{ Exception -> 0x02e5 }
            r36 = r1
            int r1 = r15.flags     // Catch:{ Exception -> 0x02e5 }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r15.flags = r1     // Catch:{ Exception -> 0x02e5 }
            goto L_0x02e1
        L_0x02d1:
            r36 = r1
            java.lang.String r1 = r15.message     // Catch:{ Exception -> 0x02e5 }
            boolean r1 = android.text.TextUtils.equals(r2, r1)     // Catch:{ Exception -> 0x02e5 }
            if (r1 != 0) goto L_0x02e1
            int r1 = r15.flags     // Catch:{ Exception -> 0x02e5 }
            r1 = r1 & -129(0xffffffffffffff7f, float:NaN)
            r15.flags = r1     // Catch:{ Exception -> 0x02e5 }
        L_0x02e1:
            r32.generateCaption()     // Catch:{ Exception -> 0x02e5 }
            goto L_0x02ff
        L_0x02e5:
            r0 = move-exception
            r28 = r4
            r19 = r15
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x02f0:
            r0 = move-exception
            r35 = r8
            r28 = r4
            r19 = r15
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x02fd:
            r35 = r8
        L_0x02ff:
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0369 }
            r1.<init>()     // Catch:{ Exception -> 0x0369 }
            r1.add(r15)     // Catch:{ Exception -> 0x0369 }
            org.telegram.messenger.MessagesStorage r22 = r31.getMessagesStorage()     // Catch:{ Exception -> 0x0369 }
            r24 = 0
            r25 = 1
            r26 = 0
            r27 = 0
            boolean r2 = r14.scheduled     // Catch:{ Exception -> 0x0369 }
            r23 = r1
            r28 = r2
            r22.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r23, (boolean) r24, (boolean) r25, (boolean) r26, (int) r27, (boolean) r28)     // Catch:{ Exception -> 0x0369 }
            r2 = -1
            r14.type = r2     // Catch:{ Exception -> 0x0369 }
            r32.setType()     // Catch:{ Exception -> 0x0369 }
            r2 = 1
            if (r3 != r2) goto L_0x0340
            org.telegram.tgnet.TLRPC$Message r2 = r14.messageOwner     // Catch:{ Exception -> 0x02e5 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media     // Catch:{ Exception -> 0x02e5 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x02e5 }
            if (r2 != 0) goto L_0x033d
            org.telegram.tgnet.TLRPC$Message r2 = r14.messageOwner     // Catch:{ Exception -> 0x02e5 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media     // Catch:{ Exception -> 0x02e5 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x02e5 }
            if (r2 == 0) goto L_0x0336
            goto L_0x033d
        L_0x0336:
            r32.resetLayout()     // Catch:{ Exception -> 0x02e5 }
            r32.checkLayout()     // Catch:{ Exception -> 0x02e5 }
            goto L_0x0340
        L_0x033d:
            r32.generateCaption()     // Catch:{ Exception -> 0x02e5 }
        L_0x0340:
            r32.createMessageSendInfo()     // Catch:{ Exception -> 0x0369 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0369 }
            r2.<init>()     // Catch:{ Exception -> 0x0369 }
            r2.add(r14)     // Catch:{ Exception -> 0x0369 }
            org.telegram.messenger.NotificationCenter r8 = r31.getNotificationCenter()     // Catch:{ Exception -> 0x0369 }
            r36 = r1
            int r1 = org.telegram.messenger.NotificationCenter.replaceMessagesObjects     // Catch:{ Exception -> 0x0369 }
            r20 = r10
            r19 = r15
            r15 = 2
            java.lang.Object[] r10 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0398 }
            java.lang.Long r15 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0398 }
            r22 = 0
            r10[r22] = r15     // Catch:{ Exception -> 0x0398 }
            r15 = 1
            r10[r15] = r2     // Catch:{ Exception -> 0x0398 }
            r8.postNotificationName(r1, r10)     // Catch:{ Exception -> 0x0398 }
            goto L_0x0387
        L_0x0369:
            r0 = move-exception
            r19 = r15
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x0374:
            r0 = move-exception
            r35 = r8
            r19 = r15
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x0381:
            r35 = r8
            r20 = r10
            r19 = r15
        L_0x0387:
            r1 = 0
            if (r4 == 0) goto L_0x03a1
            boolean r2 = r4.containsKey(r0)     // Catch:{ Exception -> 0x0398 }
            if (r2 == 0) goto L_0x03a1
            java.lang.Object r0 = r4.get(r0)     // Catch:{ Exception -> 0x0398 }
            java.lang.String r0 = (java.lang.String) r0     // Catch:{ Exception -> 0x0398 }
            r1 = r0
            goto L_0x03a2
        L_0x0398:
            r0 = move-exception
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x03a1:
            r0 = r1
        L_0x03a2:
            r1 = 0
            r8 = 8
            r2 = 1
            if (r3 < r2) goto L_0x03ab
            r2 = 3
            if (r3 <= r2) goto L_0x03b0
        L_0x03ab:
            r2 = 5
            if (r3 < r2) goto L_0x082c
            if (r3 > r8) goto L_0x082c
        L_0x03b0:
            r2 = 0
            r15 = 1
            if (r3 != r15) goto L_0x03c3
            r24 = r1
            r26 = r2
            r28 = r4
            r15 = r9
            r8 = r16
            r16 = r35
            r35 = r7
            goto L_0x066c
        L_0x03c3:
            java.lang.String r15 = "masks"
            r22 = 0
            r8 = 2
            if (r3 != r8) goto L_0x04c3
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto r8 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto     // Catch:{ Exception -> 0x04ba }
            r8.<init>()     // Catch:{ Exception -> 0x04ba }
            if (r4 == 0) goto L_0x042a
            java.lang.Object r15 = r4.get(r15)     // Catch:{ Exception -> 0x04ba }
            java.lang.String r15 = (java.lang.String) r15     // Catch:{ Exception -> 0x04ba }
            if (r15 == 0) goto L_0x0421
            org.telegram.tgnet.SerializedData r10 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x04ba }
            r24 = r1
            byte[] r1 = org.telegram.messenger.Utilities.hexToBytes(r15)     // Catch:{ Exception -> 0x04ba }
            r10.<init>((byte[]) r1)     // Catch:{ Exception -> 0x04ba }
            r1 = r10
            r10 = 0
            int r25 = r1.readInt32(r10)     // Catch:{ Exception -> 0x04ba }
            r10 = r25
            r25 = 0
            r26 = r2
            r2 = r25
        L_0x03f2:
            if (r2 >= r10) goto L_0x0411
            r25 = r10
            java.util.ArrayList r10 = r8.stickers     // Catch:{ Exception -> 0x04ba }
            r28 = r4
            r27 = r15
            r15 = 0
            int r4 = r1.readInt32(r15)     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r1, r4, r15)     // Catch:{ Exception -> 0x04b3 }
            r10.add(r4)     // Catch:{ Exception -> 0x04b3 }
            int r2 = r2 + 1
            r10 = r25
            r15 = r27
            r4 = r28
            goto L_0x03f2
        L_0x0411:
            r28 = r4
            r25 = r10
            r27 = r15
            int r2 = r8.flags     // Catch:{ Exception -> 0x04b3 }
            r4 = 1
            r2 = r2 | r4
            r8.flags = r2     // Catch:{ Exception -> 0x04b3 }
            r1.cleanup()     // Catch:{ Exception -> 0x04b3 }
            goto L_0x0430
        L_0x0421:
            r24 = r1
            r26 = r2
            r28 = r4
            r27 = r15
            goto L_0x0430
        L_0x042a:
            r24 = r1
            r26 = r2
            r28 = r4
        L_0x0430:
            long r1 = r9.access_hash     // Catch:{ Exception -> 0x04b3 }
            int r4 = (r1 > r22 ? 1 : (r1 == r22 ? 0 : -1))
            if (r4 != 0) goto L_0x043f
            r1 = r8
            r2 = 1
            r10 = r3
            r30 = r2
            r2 = r1
            r1 = r30
            goto L_0x046e
        L_0x043f:
            org.telegram.tgnet.TLRPC$TL_inputMediaPhoto r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaPhoto     // Catch:{ Exception -> 0x04b3 }
            r1.<init>()     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$TL_inputPhoto r2 = new org.telegram.tgnet.TLRPC$TL_inputPhoto     // Catch:{ Exception -> 0x04b3 }
            r2.<init>()     // Catch:{ Exception -> 0x04b3 }
            r1.id = r2     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x04b3 }
            r10 = r3
            long r3 = r9.id     // Catch:{ Exception -> 0x04b3 }
            r2.id = r3     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x04b3 }
            long r3 = r9.access_hash     // Catch:{ Exception -> 0x04b3 }
            r2.access_hash = r3     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x04b3 }
            byte[] r3 = r9.file_reference     // Catch:{ Exception -> 0x04b3 }
            r2.file_reference = r3     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x04b3 }
            byte[] r2 = r2.file_reference     // Catch:{ Exception -> 0x04b3 }
            if (r2 != 0) goto L_0x046b
            org.telegram.tgnet.TLRPC$InputPhoto r2 = r1.id     // Catch:{ Exception -> 0x04b3 }
            r3 = 0
            byte[] r4 = new byte[r3]     // Catch:{ Exception -> 0x04b3 }
            r2.file_reference = r4     // Catch:{ Exception -> 0x04b3 }
        L_0x046b:
            r2 = r1
            r1 = r24
        L_0x046e:
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x04b3 }
            r3.<init>(r11)     // Catch:{ Exception -> 0x04b3 }
            r4 = 0
            r3.type = r4     // Catch:{ Exception -> 0x04b3 }
            r3.obj = r14     // Catch:{ Exception -> 0x04b3 }
            r3.originalPath = r0     // Catch:{ Exception -> 0x04b3 }
            r3.parentObject = r5     // Catch:{ Exception -> 0x04b3 }
            r3.inputUploadMedia = r8     // Catch:{ Exception -> 0x04b3 }
            r3.performMediaUpload = r1     // Catch:{ Exception -> 0x04b3 }
            if (r7 == 0) goto L_0x0491
            int r4 = r7.length()     // Catch:{ Exception -> 0x04b3 }
            if (r4 <= 0) goto L_0x0491
            boolean r4 = r7.startsWith(r6)     // Catch:{ Exception -> 0x04b3 }
            if (r4 == 0) goto L_0x0491
            r3.httpLocation = r7     // Catch:{ Exception -> 0x04b3 }
            goto L_0x04a5
        L_0x0491:
            java.util.ArrayList r4 = r9.sizes     // Catch:{ Exception -> 0x04b3 }
            java.util.ArrayList r6 = r9.sizes     // Catch:{ Exception -> 0x04b3 }
            int r6 = r6.size()     // Catch:{ Exception -> 0x04b3 }
            r15 = 1
            int r6 = r6 - r15
            java.lang.Object r4 = r4.get(r6)     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$PhotoSize r4 = (org.telegram.tgnet.TLRPC.PhotoSize) r4     // Catch:{ Exception -> 0x04b3 }
            r3.photoSize = r4     // Catch:{ Exception -> 0x04b3 }
            r3.locationParent = r9     // Catch:{ Exception -> 0x04b3 }
        L_0x04a5:
            r24 = r1
            r15 = r9
            r8 = r16
            r16 = r35
            r9 = r3
            r35 = r7
            r3 = r10
            r10 = r2
            goto L_0x0670
        L_0x04b3:
            r0 = move-exception
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x04ba:
            r0 = move-exception
            r28 = r4
            r8 = r16
            r16 = r35
            goto L_0x087d
        L_0x04c3:
            r24 = r1
            r26 = r2
            r10 = r3
            r28 = r4
            r1 = 3
            if (r3 != r1) goto L_0x05cd
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x05c2 }
            r1.<init>()     // Catch:{ Exception -> 0x05c2 }
            if (r28 == 0) goto L_0x051b
            r4 = r28
            java.lang.Object r2 = r4.get(r15)     // Catch:{ Exception -> 0x04ba }
            java.lang.String r2 = (java.lang.String) r2     // Catch:{ Exception -> 0x04ba }
            if (r2 == 0) goto L_0x0517
            org.telegram.tgnet.SerializedData r6 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x04ba }
            byte[] r8 = org.telegram.messenger.Utilities.hexToBytes(r2)     // Catch:{ Exception -> 0x04ba }
            r6.<init>((byte[]) r8)     // Catch:{ Exception -> 0x04ba }
            r8 = 0
            int r10 = r6.readInt32(r8)     // Catch:{ Exception -> 0x04ba }
            r8 = r10
            r10 = 0
        L_0x04ee:
            if (r10 >= r8) goto L_0x0509
            java.util.ArrayList r15 = r1.stickers     // Catch:{ Exception -> 0x04ba }
            r25 = r2
            r28 = r4
            r2 = 0
            int r4 = r6.readInt32(r2)     // Catch:{ Exception -> 0x04b3 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r6, r4, r2)     // Catch:{ Exception -> 0x04b3 }
            r15.add(r4)     // Catch:{ Exception -> 0x04b3 }
            int r10 = r10 + 1
            r2 = r25
            r4 = r28
            goto L_0x04ee
        L_0x0509:
            r25 = r2
            r28 = r4
            int r2 = r1.flags     // Catch:{ Exception -> 0x04b3 }
            r4 = 1
            r2 = r2 | r4
            r1.flags = r2     // Catch:{ Exception -> 0x04b3 }
            r6.cleanup()     // Catch:{ Exception -> 0x04b3 }
            goto L_0x051b
        L_0x0517:
            r25 = r2
            r28 = r4
        L_0x051b:
            r8 = r16
            java.lang.String r2 = r8.mime_type     // Catch:{ Exception -> 0x05b9 }
            r1.mime_type = r2     // Catch:{ Exception -> 0x05b9 }
            java.util.ArrayList r2 = r8.attributes     // Catch:{ Exception -> 0x05b9 }
            r1.attributes = r2     // Catch:{ Exception -> 0x05b9 }
            boolean r2 = r32.isGif()     // Catch:{ Exception -> 0x05b9 }
            if (r2 != 0) goto L_0x0548
            if (r35 == 0) goto L_0x0534
            r10 = r35
            boolean r2 = r10.muted     // Catch:{ Exception -> 0x0543 }
            if (r2 != 0) goto L_0x054a
            goto L_0x0536
        L_0x0534:
            r10 = r35
        L_0x0536:
            r2 = 1
            r1.nosound_video = r2     // Catch:{ Exception -> 0x0543 }
            boolean r2 = org.telegram.messenger.BuildVars.DEBUG_VERSION     // Catch:{ Exception -> 0x0543 }
            if (r2 == 0) goto L_0x054a
            java.lang.String r2 = "nosound_video = true"
            org.telegram.messenger.FileLog.d(r2)     // Catch:{ Exception -> 0x0543 }
            goto L_0x054a
        L_0x0543:
            r0 = move-exception
            r16 = r10
            goto L_0x087d
        L_0x0548:
            r10 = r35
        L_0x054a:
            r35 = r7
            long r6 = r8.access_hash     // Catch:{ Exception -> 0x05f1 }
            int r2 = (r6 > r22 ? 1 : (r6 == r22 ? 0 : -1))
            if (r2 != 0) goto L_0x0555
            r2 = r1
            r4 = 1
            goto L_0x0583
        L_0x0555:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x05f1 }
            r2.<init>()     // Catch:{ Exception -> 0x05f1 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r4 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x05f1 }
            r4.<init>()     // Catch:{ Exception -> 0x05f1 }
            r2.id = r4     // Catch:{ Exception -> 0x05f1 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05f1 }
            long r6 = r8.id     // Catch:{ Exception -> 0x05f1 }
            r4.id = r6     // Catch:{ Exception -> 0x05f1 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05f1 }
            long r6 = r8.access_hash     // Catch:{ Exception -> 0x05f1 }
            r4.access_hash = r6     // Catch:{ Exception -> 0x05f1 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05f1 }
            byte[] r6 = r8.file_reference     // Catch:{ Exception -> 0x05f1 }
            r4.file_reference = r6     // Catch:{ Exception -> 0x05f1 }
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05f1 }
            byte[] r4 = r4.file_reference     // Catch:{ Exception -> 0x05f1 }
            if (r4 != 0) goto L_0x0580
            org.telegram.tgnet.TLRPC$InputDocument r4 = r2.id     // Catch:{ Exception -> 0x05f1 }
            r6 = 0
            byte[] r7 = new byte[r6]     // Catch:{ Exception -> 0x05f1 }
            r4.file_reference = r7     // Catch:{ Exception -> 0x05f1 }
        L_0x0580:
            r4 = r2
            r4 = r24
        L_0x0583:
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r6 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x05f1 }
            r6.<init>(r11)     // Catch:{ Exception -> 0x05f1 }
            r7 = 1
            r6.type = r7     // Catch:{ Exception -> 0x05f1 }
            r6.obj = r14     // Catch:{ Exception -> 0x05f1 }
            r6.originalPath = r0     // Catch:{ Exception -> 0x05f1 }
            r6.parentObject = r5     // Catch:{ Exception -> 0x05f1 }
            r6.inputUploadMedia = r1     // Catch:{ Exception -> 0x05f1 }
            r6.performMediaUpload = r4     // Catch:{ Exception -> 0x05f1 }
            java.util.ArrayList r7 = r8.thumbs     // Catch:{ Exception -> 0x05f1 }
            boolean r7 = r7.isEmpty()     // Catch:{ Exception -> 0x05f1 }
            if (r7 != 0) goto L_0x05ae
            java.util.ArrayList r7 = r8.thumbs     // Catch:{ Exception -> 0x05f1 }
            r15 = 0
            java.lang.Object r7 = r7.get(r15)     // Catch:{ Exception -> 0x05f1 }
            org.telegram.tgnet.TLRPC$PhotoSize r7 = (org.telegram.tgnet.TLRPC.PhotoSize) r7     // Catch:{ Exception -> 0x05f1 }
            boolean r15 = r7 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x05f1 }
            if (r15 != 0) goto L_0x05ae
            r6.photoSize = r7     // Catch:{ Exception -> 0x05f1 }
            r6.locationParent = r8     // Catch:{ Exception -> 0x05f1 }
        L_0x05ae:
            r6.videoEditedInfo = r10     // Catch:{ Exception -> 0x05f1 }
            r24 = r4
            r15 = r9
            r16 = r10
            r10 = r2
            r9 = r6
            goto L_0x0670
        L_0x05b9:
            r0 = move-exception
            r10 = r35
            r35 = r7
            r16 = r10
            goto L_0x087d
        L_0x05c2:
            r0 = move-exception
            r10 = r35
            r35 = r7
            r8 = r16
            r16 = r10
            goto L_0x087d
        L_0x05cd:
            r10 = r35
            r35 = r7
            r8 = r16
            r1 = 7
            if (r3 != r1) goto L_0x0669
            r1 = 0
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x0661 }
            r2.<init>()     // Catch:{ Exception -> 0x0661 }
            java.lang.String r4 = r8.mime_type     // Catch:{ Exception -> 0x0661 }
            r2.mime_type = r4     // Catch:{ Exception -> 0x0661 }
            java.util.ArrayList r4 = r8.attributes     // Catch:{ Exception -> 0x0661 }
            r2.attributes = r4     // Catch:{ Exception -> 0x0661 }
            long r6 = r8.access_hash     // Catch:{ Exception -> 0x0661 }
            int r4 = (r6 > r22 ? 1 : (r6 == r22 ? 0 : -1))
            if (r4 != 0) goto L_0x05f8
            r4 = r2
            boolean r6 = r2 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x05f1 }
            r15 = r9
            r16 = r10
            goto L_0x0629
        L_0x05f1:
            r0 = move-exception
            r7 = r35
            r16 = r10
            goto L_0x087d
        L_0x05f8:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r4 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x0661 }
            r4.<init>()     // Catch:{ Exception -> 0x0661 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r6 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x0661 }
            r6.<init>()     // Catch:{ Exception -> 0x0661 }
            r4.id = r6     // Catch:{ Exception -> 0x0661 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0661 }
            r15 = r9
            r16 = r10
            long r9 = r8.id     // Catch:{ Exception -> 0x0691 }
            r6.id = r9     // Catch:{ Exception -> 0x0691 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0691 }
            long r9 = r8.access_hash     // Catch:{ Exception -> 0x0691 }
            r6.access_hash = r9     // Catch:{ Exception -> 0x0691 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0691 }
            byte[] r7 = r8.file_reference     // Catch:{ Exception -> 0x0691 }
            r6.file_reference = r7     // Catch:{ Exception -> 0x0691 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0691 }
            byte[] r6 = r6.file_reference     // Catch:{ Exception -> 0x0691 }
            if (r6 != 0) goto L_0x0626
            org.telegram.tgnet.TLRPC$InputDocument r6 = r4.id     // Catch:{ Exception -> 0x0691 }
            r7 = 0
            byte[] r9 = new byte[r7]     // Catch:{ Exception -> 0x0691 }
            r6.file_reference = r9     // Catch:{ Exception -> 0x0691 }
        L_0x0626:
            r6 = r4
            r6 = r24
        L_0x0629:
            if (r1 != 0) goto L_0x065b
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x0691 }
            r7.<init>(r11)     // Catch:{ Exception -> 0x0691 }
            r7.originalPath = r0     // Catch:{ Exception -> 0x0691 }
            r9 = 2
            r7.type = r9     // Catch:{ Exception -> 0x0691 }
            r7.obj = r14     // Catch:{ Exception -> 0x0691 }
            java.util.ArrayList r9 = r8.thumbs     // Catch:{ Exception -> 0x0691 }
            boolean r9 = r9.isEmpty()     // Catch:{ Exception -> 0x0691 }
            if (r9 != 0) goto L_0x0650
            java.util.ArrayList r9 = r8.thumbs     // Catch:{ Exception -> 0x0691 }
            r10 = 0
            java.lang.Object r9 = r9.get(r10)     // Catch:{ Exception -> 0x0691 }
            org.telegram.tgnet.TLRPC$PhotoSize r9 = (org.telegram.tgnet.TLRPC.PhotoSize) r9     // Catch:{ Exception -> 0x0691 }
            boolean r10 = r9 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x0691 }
            if (r10 != 0) goto L_0x0650
            r7.photoSize = r9     // Catch:{ Exception -> 0x0691 }
            r7.locationParent = r8     // Catch:{ Exception -> 0x0691 }
        L_0x0650:
            r7.parentObject = r5     // Catch:{ Exception -> 0x0691 }
            r7.inputUploadMedia = r2     // Catch:{ Exception -> 0x0691 }
            r7.performMediaUpload = r6     // Catch:{ Exception -> 0x0691 }
            r10 = r4
            r24 = r6
            r9 = r7
            goto L_0x0670
        L_0x065b:
            r10 = r4
            r24 = r6
            r9 = r21
            goto L_0x0670
        L_0x0661:
            r0 = move-exception
            r15 = r9
            r16 = r10
            r7 = r35
            goto L_0x087d
        L_0x0669:
            r15 = r9
            r16 = r10
        L_0x066c:
            r9 = r21
            r10 = r26
        L_0x0670:
            org.telegram.tgnet.TLRPC$TL_messages_editMessage r1 = new org.telegram.tgnet.TLRPC$TL_messages_editMessage     // Catch:{ Exception -> 0x081b }
            r1.<init>()     // Catch:{ Exception -> 0x081b }
            r7 = r1
            int r1 = r32.getId()     // Catch:{ Exception -> 0x081b }
            r7.id = r1     // Catch:{ Exception -> 0x081b }
            org.telegram.messenger.MessagesController r1 = r31.getMessagesController()     // Catch:{ Exception -> 0x081b }
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((long) r11)     // Catch:{ Exception -> 0x081b }
            r7.peer = r1     // Catch:{ Exception -> 0x081b }
            if (r10 == 0) goto L_0x0697
            int r1 = r7.flags     // Catch:{ Exception -> 0x0691 }
            r1 = r1 | 16384(0x4000, float:2.2959E-41)
            r7.flags = r1     // Catch:{ Exception -> 0x0691 }
            r7.media = r10     // Catch:{ Exception -> 0x0691 }
            goto L_0x0697
        L_0x0691:
            r0 = move-exception
            r7 = r35
            r9 = r15
            goto L_0x087d
        L_0x0697:
            boolean r1 = r14.scheduled     // Catch:{ Exception -> 0x081b }
            if (r1 == 0) goto L_0x06a9
            org.telegram.tgnet.TLRPC$Message r1 = r14.messageOwner     // Catch:{ Exception -> 0x0691 }
            int r1 = r1.date     // Catch:{ Exception -> 0x0691 }
            r7.schedule_date = r1     // Catch:{ Exception -> 0x0691 }
            int r1 = r7.flags     // Catch:{ Exception -> 0x0691 }
            r2 = 32768(0x8000, float:4.5918E-41)
            r1 = r1 | r2
            r7.flags = r1     // Catch:{ Exception -> 0x0691 }
        L_0x06a9:
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x081b }
            if (r1 == 0) goto L_0x0701
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x0691 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0691 }
            r7.message = r1     // Catch:{ Exception -> 0x0691 }
            int r1 = r7.flags     // Catch:{ Exception -> 0x0691 }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r7.flags = r1     // Catch:{ Exception -> 0x0691 }
            boolean r1 = r14.editingMessageSearchWebPage     // Catch:{ Exception -> 0x0691 }
            if (r1 != 0) goto L_0x06c1
            r1 = 1
            goto L_0x06c2
        L_0x06c1:
            r1 = 0
        L_0x06c2:
            r7.no_webpage = r1     // Catch:{ Exception -> 0x0691 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0691 }
            if (r1 == 0) goto L_0x06d6
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r1 = r14.editingMessageEntities     // Catch:{ Exception -> 0x0691 }
            r7.entities = r1     // Catch:{ Exception -> 0x0691 }
            int r1 = r7.flags     // Catch:{ Exception -> 0x0691 }
            r2 = 8
            r1 = r1 | r2
            r7.flags = r1     // Catch:{ Exception -> 0x0691 }
            r6 = r20
            goto L_0x06fb
        L_0x06d6:
            r1 = 1
            java.lang.CharSequence[] r2 = new java.lang.CharSequence[r1]     // Catch:{ Exception -> 0x0691 }
            java.lang.CharSequence r1 = r14.editingMessage     // Catch:{ Exception -> 0x0691 }
            r4 = 0
            r2[r4] = r1     // Catch:{ Exception -> 0x0691 }
            r1 = r2
            org.telegram.messenger.MediaDataController r2 = r31.getMediaDataController()     // Catch:{ Exception -> 0x0691 }
            r6 = r20
            java.util.ArrayList r2 = r2.getEntities(r1, r6)     // Catch:{ Exception -> 0x0691 }
            if (r2 == 0) goto L_0x06fb
            boolean r4 = r2.isEmpty()     // Catch:{ Exception -> 0x0691 }
            if (r4 != 0) goto L_0x06fb
            r7.entities = r2     // Catch:{ Exception -> 0x0691 }
            int r4 = r7.flags     // Catch:{ Exception -> 0x0691 }
            r20 = 8
            r4 = r4 | 8
            r7.flags = r4     // Catch:{ Exception -> 0x0691 }
        L_0x06fb:
            r1 = 0
            r14.editingMessage = r1     // Catch:{ Exception -> 0x0691 }
            r14.editingMessageEntities = r1     // Catch:{ Exception -> 0x0691 }
            goto L_0x0703
        L_0x0701:
            r6 = r20
        L_0x0703:
            if (r9 == 0) goto L_0x0707
            r9.sendRequest = r7     // Catch:{ Exception -> 0x0691 }
        L_0x0707:
            r2 = r7
            r1 = 1
            if (r3 != r1) goto L_0x074f
            r4 = 0
            boolean r1 = r14.scheduled     // Catch:{ Exception -> 0x073e }
            r17 = r1
            r1 = r31
            r34 = r15
            r15 = r3
            r3 = r32
            r18 = r28
            r20 = r5
            r5 = r9
            r21 = r6
            r6 = r20
            r22 = r35
            r23 = r7
            r7 = r18
            r25 = r8
            r8 = r17
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x0731 }
            r26 = r34
            goto L_0x083f
        L_0x0731:
            r0 = move-exception
            r9 = r34
            r28 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            goto L_0x087d
        L_0x073e:
            r0 = move-exception
            r22 = r35
            r20 = r5
            r25 = r8
            r34 = r15
            r18 = r28
            r9 = r34
            r7 = r22
            goto L_0x087d
        L_0x074f:
            r22 = r35
            r20 = r5
            r21 = r6
            r23 = r7
            r25 = r8
            r34 = r15
            r18 = r28
            r15 = r3
            r1 = 2
            if (r15 != r1) goto L_0x0797
            if (r24 == 0) goto L_0x076a
            r13.performSendDelayedMessage(r9)     // Catch:{ Exception -> 0x0731 }
            r26 = r34
            goto L_0x083f
        L_0x076a:
            r7 = 0
            r8 = 1
            boolean r1 = r14.scheduled     // Catch:{ Exception -> 0x0788 }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r26 = r34
            r33 = r9
            r27 = r21
            r21 = r10
            r10 = r20
            r28 = r11
            r11 = r18
            r12 = r1
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10, r11, r12)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x0788:
            r0 = move-exception
            r26 = r34
            r28 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            r9 = r26
            goto L_0x087d
        L_0x0797:
            r26 = r34
            r33 = r9
            r28 = r11
            r27 = r21
            r21 = r10
            r1 = 3
            if (r15 != r1) goto L_0x07c1
            if (r24 == 0) goto L_0x07ad
            r1 = r33
            r13.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x07ad:
            r1 = r33
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07d8 }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x07c1:
            r1 = r33
            r3 = 6
            if (r15 != r3) goto L_0x07e5
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07d8 }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x07d8:
            r0 = move-exception
            r28 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            r9 = r26
            goto L_0x087d
        L_0x07e5:
            r3 = 7
            if (r15 != r3) goto L_0x0800
            if (r24 == 0) goto L_0x07ef
            r13.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x07ef:
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07d8 }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x0800:
            r3 = 8
            if (r15 != r3) goto L_0x083f
            if (r24 == 0) goto L_0x080a
            r13.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x080a:
            boolean r10 = r14.scheduled     // Catch:{ Exception -> 0x07d8 }
            r3 = r31
            r4 = r2
            r5 = r32
            r6 = r0
            r7 = r1
            r8 = r20
            r9 = r18
            r3.performSendMessageRequest(r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x07d8 }
            goto L_0x083f
        L_0x081b:
            r0 = move-exception
            r22 = r35
            r20 = r5
            r25 = r8
            r26 = r15
            r18 = r28
            r7 = r22
            r9 = r26
            goto L_0x087d
        L_0x082c:
            r24 = r1
            r15 = r3
            r18 = r4
            r22 = r7
            r26 = r9
            r28 = r11
            r25 = r16
            r27 = r20
            r16 = r35
            r20 = r5
        L_0x083f:
            r4 = r18
            r5 = r20
            r7 = r22
            r8 = r25
            r9 = r26
            goto L_0x0885
        L_0x084a:
            r0 = move-exception
            r18 = r4
            r20 = r5
            r22 = r7
            r26 = r9
            r19 = r15
            r25 = r16
            r16 = r1
            r28 = r18
            r8 = r25
            goto L_0x087d
        L_0x085e:
            r0 = move-exception
            r18 = r4
            r20 = r5
            r22 = r7
            r25 = r8
            r26 = r9
            r19 = r15
            r16 = r1
            r28 = r18
            goto L_0x087d
        L_0x0870:
            r0 = move-exception
            r19 = r15
            r9 = r33
            r16 = r34
            r8 = r2
            r7 = r3
            r28 = r5
            r5 = r39
        L_0x087d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r31.revertEditingMessageObject(r32)
            r4 = r28
        L_0x0885:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.editMessage(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$TL_photo, org.telegram.messenger.VideoEditedInfo, org.telegram.tgnet.TLRPC$TL_document, java.lang.String, java.util.HashMap, boolean, java.lang.Object):void");
    }

    public int editMessage(MessageObject messageObject, String message, boolean searchLinks, BaseFragment fragment, ArrayList<TLRPC.MessageEntity> entities, int scheduleDate) {
        if (fragment == null || fragment.getParentActivity() == null) {
            return 0;
        }
        TLRPC.TL_messages_editMessage req = new TLRPC.TL_messages_editMessage();
        req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (message != null) {
            req.message = message;
            req.flags |= 2048;
            req.no_webpage = !searchLinks;
        }
        req.id = messageObject.getId();
        if (entities != null) {
            req.entities = entities;
            req.flags |= 8;
        }
        if (scheduleDate != 0) {
            req.schedule_date = scheduleDate;
            req.flags |= 32768;
        }
        return getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda86(this, fragment, req));
    }

    /* renamed from: lambda$editMessage$16$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m444lambda$editMessage$16$orgtelegrammessengerSendMessagesHelper(BaseFragment fragment, TLRPC.TL_messages_editMessage req, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda56(this, error, fragment, req));
        }
    }

    /* renamed from: lambda$editMessage$15$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m443lambda$editMessage$15$orgtelegrammessengerSendMessagesHelper(TLRPC.TL_error error, BaseFragment fragment, TLRPC.TL_messages_editMessage req) {
        AlertsCreator.processError(this.currentAccount, error, fragment, req, new Object[0]);
    }

    /* access modifiers changed from: private */
    public void sendLocation(Location location) {
        TLRPC.TL_messageMediaGeo mediaGeo = new TLRPC.TL_messageMediaGeo();
        mediaGeo.geo = new TLRPC.TL_geoPoint();
        mediaGeo.geo.lat = AndroidUtilities.fixLocationCoord(location.getLatitude());
        mediaGeo.geo._long = AndroidUtilities.fixLocationCoord(location.getLongitude());
        for (Map.Entry<String, MessageObject> entry : this.waitingForLocation.entrySet()) {
            MessageObject messageObject = entry.getValue();
            sendMessage((TLRPC.MessageMedia) mediaGeo, messageObject.getDialogId(), messageObject, (MessageObject) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0);
        }
    }

    public void sendCurrentLocation(MessageObject messageObject, TLRPC.KeyboardButton button) {
        if (messageObject != null && button != null) {
            StringBuilder sb = new StringBuilder();
            sb.append(messageObject.getDialogId());
            sb.append("_");
            sb.append(messageObject.getId());
            sb.append("_");
            sb.append(Utilities.bytesToHex(button.data));
            sb.append("_");
            sb.append(button instanceof TLRPC.TL_keyboardButtonGame ? "1" : "0");
            this.waitingForLocation.put(sb.toString(), messageObject);
            this.locationProvider.start();
        }
    }

    public boolean isSendingCurrentLocation(MessageObject messageObject, TLRPC.KeyboardButton button) {
        if (messageObject == null || button == null) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        sb.append(messageObject.getDialogId());
        sb.append("_");
        sb.append(messageObject.getId());
        sb.append("_");
        sb.append(Utilities.bytesToHex(button.data));
        sb.append("_");
        sb.append(button instanceof TLRPC.TL_keyboardButtonGame ? "1" : "0");
        return this.waitingForLocation.containsKey(sb.toString());
    }

    public void sendNotificationCallback(long dialogId, int msgId, byte[] data) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda16(this, dialogId, msgId, data));
    }

    /* renamed from: lambda$sendNotificationCallback$19$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m496xb2d0eCLASSNAME(long dialogId, int msgId, byte[] data) {
        TLRPC.Chat chat;
        TLRPC.User user;
        long j = dialogId;
        int i = msgId;
        byte[] bArr = data;
        String key = j + "_" + i + "_" + Utilities.bytesToHex(data) + "_" + 0;
        this.waitingForCallback.put(key, true);
        if (DialogObject.isUserDialog(dialogId)) {
            if (getMessagesController().getUser(Long.valueOf(dialogId)) == null && (user = getMessagesStorage().getUserSync(j)) != null) {
                getMessagesController().putUser(user, true);
            }
        } else if (getMessagesController().getChat(Long.valueOf(-j)) == null && (chat = getMessagesStorage().getChatSync(-j)) != null) {
            getMessagesController().putChat(chat, true);
        }
        TLRPC.TL_messages_getBotCallbackAnswer req = new TLRPC.TL_messages_getBotCallbackAnswer();
        req.peer = getMessagesController().getInputPeer(j);
        req.msg_id = i;
        req.game = false;
        if (bArr != null) {
            req.flags |= 1;
            req.data = bArr;
        }
        getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda79(this, key), 2);
        TLRPC.TL_messages_getBotCallbackAnswer tL_messages_getBotCallbackAnswer = req;
        String str = key;
        getMessagesController().markDialogAsRead(dialogId, msgId, msgId, 0, false, 0, 0, true, 0);
    }

    /* renamed from: lambda$sendNotificationCallback$17$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m494xe84e0var_(String key) {
        this.waitingForCallback.remove(key);
    }

    /* renamed from: lambda$sendNotificationCallback$18$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m495xcd8f7dd1(String key, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda18(this, key));
    }

    public byte[] isSendingVote(MessageObject messageObject) {
        if (messageObject == null) {
            return null;
        }
        return this.waitingForVote.get("poll_" + messageObject.getPollId());
    }

    public int sendVote(MessageObject messageObject, ArrayList<TLRPC.TL_pollAnswer> answers, Runnable finishRunnable) {
        byte[] options;
        if (messageObject == null) {
            return 0;
        }
        String key = "poll_" + messageObject.getPollId();
        if (this.waitingForCallback.containsKey(key)) {
            return 0;
        }
        TLRPC.TL_messages_sendVote req = new TLRPC.TL_messages_sendVote();
        req.msg_id = messageObject.getId();
        req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
        if (answers != null) {
            options = new byte[answers.size()];
            for (int a = 0; a < answers.size(); a++) {
                TLRPC.TL_pollAnswer answer = answers.get(a);
                req.options.add(answer.option);
                options[a] = answer.option[0];
            }
        } else {
            options = new byte[0];
        }
        this.waitingForVote.put(key, options);
        return getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda82(this, messageObject, key, finishRunnable));
    }

    /* renamed from: lambda$sendVote$21$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m501lambda$sendVote$21$orgtelegrammessengerSendMessagesHelper(MessageObject messageObject, String key, Runnable finishRunnable, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            this.voteSendTime.put(messageObject.getPollId(), 0L);
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
            this.voteSendTime.put(messageObject.getPollId(), Long.valueOf(SystemClock.elapsedRealtime()));
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda21(this, key, finishRunnable));
    }

    /* renamed from: lambda$sendVote$20$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m500lambda$sendVote$20$orgtelegrammessengerSendMessagesHelper(String key, Runnable finishRunnable) {
        this.waitingForVote.remove(key);
        if (finishRunnable != null) {
            finishRunnable.run();
        }
    }

    /* access modifiers changed from: protected */
    public long getVoteSendTime(long pollId) {
        return this.voteSendTime.get(pollId, 0L).longValue();
    }

    public void sendReaction(MessageObject messageObject, CharSequence reaction, boolean big, ChatActivity parentFragment, Runnable callback) {
        if (messageObject != null && parentFragment != null) {
            TLRPC.TL_messages_sendReaction req = new TLRPC.TL_messages_sendReaction();
            if (!messageObject.messageOwner.isThreadMessage || messageObject.messageOwner.fwd_from == null) {
                req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                req.msg_id = messageObject.getId();
            } else {
                req.peer = getMessagesController().getInputPeer(messageObject.getFromChatId());
                req.msg_id = messageObject.messageOwner.fwd_from.saved_from_msg_id;
            }
            if (reaction != null) {
                req.reaction = reaction.toString();
                req.flags |= 1;
            }
            if (big) {
                req.flags |= 2;
                req.big = true;
            }
            getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda78(this, callback));
        }
    }

    /* renamed from: lambda$sendReaction$22$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m497lambda$sendReaction$22$orgtelegrammessengerSendMessagesHelper(Runnable callback, TLObject response, TLRPC.TL_error error) {
        if (response != null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
            if (callback != null) {
                AndroidUtilities.runOnUIThread(callback);
            }
        }
    }

    public void requestUrlAuth(String url, ChatActivity parentFragment, boolean ask) {
        TLRPC.TL_messages_requestUrlAuth req = new TLRPC.TL_messages_requestUrlAuth();
        req.url = url;
        req.flags |= 4;
        getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda89(parentFragment, req, url, ask), 2);
    }

    static /* synthetic */ void lambda$requestUrlAuth$23(ChatActivity parentFragment, TLRPC.TL_messages_requestUrlAuth req, String url, boolean ask, TLObject response, TLRPC.TL_error error) {
        if (response == null) {
            AlertsCreator.showOpenUrlAlert(parentFragment, url, false, ask);
        } else if (response instanceof TLRPC.TL_urlAuthResultRequest) {
            parentFragment.showRequestUrlAlert((TLRPC.TL_urlAuthResultRequest) response, req, url, ask);
        } else if (response instanceof TLRPC.TL_urlAuthResultAccepted) {
            AlertsCreator.showOpenUrlAlert(parentFragment, ((TLRPC.TL_urlAuthResultAccepted) response).url, false, false);
        } else if (response instanceof TLRPC.TL_urlAuthResultDefault) {
            AlertsCreator.showOpenUrlAlert(parentFragment, url, false, ask);
        }
    }

    public void sendCallback(boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment) {
        m479lambda$sendCallback$24$orgtelegrammessengerSendMessagesHelper(cache, messageObject, button, (TLRPC.InputCheckPasswordSRP) null, (TwoStepVerificationActivity) null, parentFragment);
    }

    /* renamed from: sendCallback */
    public void m479lambda$sendCallback$24$orgtelegrammessengerSendMessagesHelper(boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, TLRPC.InputCheckPasswordSRP srp, TwoStepVerificationActivity passwordFragment, ChatActivity parentFragment) {
        int type;
        boolean cacheFinal;
        MessageObject messageObject2 = messageObject;
        TLRPC.KeyboardButton keyboardButton = button;
        if (messageObject2 != null && keyboardButton != null && parentFragment != null) {
            if (keyboardButton instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                cacheFinal = false;
                type = 3;
            } else if (keyboardButton instanceof TLRPC.TL_keyboardButtonGame) {
                cacheFinal = false;
                type = 1;
            } else {
                boolean cacheFinal2 = cache;
                if (keyboardButton instanceof TLRPC.TL_keyboardButtonBuy) {
                    cacheFinal = cacheFinal2;
                    type = 2;
                } else {
                    cacheFinal = cacheFinal2;
                    type = 0;
                }
            }
            String key = messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(keyboardButton.data) + "_" + type;
            this.waitingForCallback.put(key, true);
            TLObject[] request = new TLObject[1];
            int i = type;
            String key2 = key;
            RequestDelegate requestDelegate = new SendMessagesHelper$$ExternalSyntheticLambda80(this, key, cacheFinal, messageObject, button, parentFragment, passwordFragment, request, srp, cache);
            if (cacheFinal) {
                getMessagesStorage().getBotCache(key2, requestDelegate);
            } else if (keyboardButton instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                TLRPC.TL_messages_requestUrlAuth req = new TLRPC.TL_messages_requestUrlAuth();
                req.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                req.msg_id = messageObject.getId();
                req.button_id = keyboardButton.button_id;
                req.flags |= 2;
                request[0] = req;
                getConnectionsManager().sendRequest(req, requestDelegate, 2);
            } else if (!(keyboardButton instanceof TLRPC.TL_keyboardButtonBuy)) {
                TLRPC.TL_messages_getBotCallbackAnswer req2 = new TLRPC.TL_messages_getBotCallbackAnswer();
                req2.peer = getMessagesController().getInputPeer(messageObject.getDialogId());
                req2.msg_id = messageObject.getId();
                req2.game = keyboardButton instanceof TLRPC.TL_keyboardButtonGame;
                if (keyboardButton.requires_password) {
                    TLRPC.InputCheckPasswordSRP tL_inputCheckPasswordEmpty = srp != null ? srp : new TLRPC.TL_inputCheckPasswordEmpty();
                    req2.password = tL_inputCheckPasswordEmpty;
                    req2.password = tL_inputCheckPasswordEmpty;
                    req2.flags |= 4;
                }
                if (keyboardButton.data != null) {
                    req2.flags |= 1;
                    req2.data = keyboardButton.data;
                }
                getConnectionsManager().sendRequest(req2, requestDelegate, 2);
            } else if ((messageObject2.messageOwner.media.flags & 4) == 0) {
                TLRPC.TL_payments_getPaymentForm req3 = new TLRPC.TL_payments_getPaymentForm();
                TLRPC.TL_inputInvoiceMessage inputInvoice = new TLRPC.TL_inputInvoiceMessage();
                inputInvoice.msg_id = messageObject.getId();
                inputInvoice.peer = getMessagesController().getInputPeer(messageObject2.messageOwner.peer_id);
                req3.invoice = inputInvoice;
                try {
                    JSONObject jsonObject = new JSONObject();
                    jsonObject.put("bg_color", Theme.getColor("windowBackgroundWhite"));
                    jsonObject.put("text_color", Theme.getColor("windowBackgroundWhiteBlackText"));
                    jsonObject.put("hint_color", Theme.getColor("windowBackgroundWhiteHintText"));
                    jsonObject.put("link_color", Theme.getColor("windowBackgroundWhiteLinkText"));
                    jsonObject.put("button_color", Theme.getColor("featuredStickers_addButton"));
                    jsonObject.put("button_text_color", Theme.getColor("featuredStickers_buttonText"));
                    req3.theme_params = new TLRPC.TL_dataJSON();
                    req3.theme_params.data = jsonObject.toString();
                    req3.flags |= 1;
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                getConnectionsManager().sendRequest(req3, requestDelegate, 2);
            } else {
                TLRPC.TL_payments_getPaymentReceipt req4 = new TLRPC.TL_payments_getPaymentReceipt();
                req4.msg_id = messageObject2.messageOwner.media.receipt_msg_id;
                req4.peer = getMessagesController().getInputPeer(messageObject2.messageOwner.peer_id);
                getConnectionsManager().sendRequest(req4, requestDelegate, 2);
            }
        }
    }

    /* renamed from: lambda$sendCallback$30$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m484lambda$sendCallback$30$orgtelegrammessengerSendMessagesHelper(String key, boolean cacheFinal, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, TwoStepVerificationActivity passwordFragment, TLObject[] request, TLRPC.InputCheckPasswordSRP srp, boolean cache, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda24(this, key, cacheFinal, response, messageObject, button, parentFragment, passwordFragment, request, error, srp, cache));
    }

    /* renamed from: lambda$sendCallback$29$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m483lambda$sendCallback$29$orgtelegrammessengerSendMessagesHelper(String key, boolean cacheFinal, TLObject response, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, TwoStepVerificationActivity passwordFragment, TLObject[] request, TLRPC.TL_error error, TLRPC.InputCheckPasswordSRP srp, boolean cache) {
        long uid;
        String name;
        boolean z;
        String str = key;
        TLObject tLObject = response;
        MessageObject messageObject2 = messageObject;
        TLRPC.KeyboardButton keyboardButton = button;
        ChatActivity chatActivity = parentFragment;
        TLRPC.TL_error tL_error = error;
        this.waitingForCallback.remove(str);
        if (cacheFinal && tLObject == null) {
            sendCallback(false, messageObject2, keyboardButton, chatActivity);
        } else if (tLObject != null) {
            if (passwordFragment != null) {
                passwordFragment.needHideProgress();
                passwordFragment.finishFragment();
            }
            long uid2 = messageObject.getFromChatId();
            if (messageObject2.messageOwner.via_bot_id != 0) {
                uid = messageObject2.messageOwner.via_bot_id;
            } else {
                uid = uid2;
            }
            String name2 = null;
            if (uid > 0) {
                TLRPC.User user = getMessagesController().getUser(Long.valueOf(uid));
                if (user != null) {
                    name2 = ContactsController.formatName(user.first_name, user.last_name);
                }
            } else {
                TLRPC.Chat chat = getMessagesController().getChat(Long.valueOf(-uid));
                if (chat != null) {
                    name2 = chat.title;
                }
            }
            if (name2 == null) {
                name = "bot";
            } else {
                name = name2;
            }
            if (keyboardButton instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                if (tLObject instanceof TLRPC.TL_urlAuthResultRequest) {
                    chatActivity.showRequestUrlAlert((TLRPC.TL_urlAuthResultRequest) tLObject, request[0], keyboardButton.url, false);
                } else if (tLObject instanceof TLRPC.TL_urlAuthResultAccepted) {
                    AlertsCreator.showOpenUrlAlert(chatActivity, ((TLRPC.TL_urlAuthResultAccepted) tLObject).url, false, false);
                } else if (tLObject instanceof TLRPC.TL_urlAuthResultDefault) {
                    TLRPC.TL_urlAuthResultDefault tL_urlAuthResultDefault = (TLRPC.TL_urlAuthResultDefault) tLObject;
                    AlertsCreator.showOpenUrlAlert(chatActivity, keyboardButton.url, false, true);
                }
            } else if (!(keyboardButton instanceof TLRPC.TL_keyboardButtonBuy)) {
                TLRPC.TL_messages_botCallbackAnswer res = (TLRPC.TL_messages_botCallbackAnswer) tLObject;
                if (!cacheFinal && res.cache_time != 0 && !keyboardButton.requires_password) {
                    getMessagesStorage().saveBotCache(str, res);
                }
                if (res.message != null) {
                    if (!res.alert) {
                        chatActivity.showAlert(name, res.message);
                    } else if (parentFragment.getParentActivity() != null) {
                        AlertDialog.Builder builder = new AlertDialog.Builder((Context) parentFragment.getParentActivity());
                        builder.setTitle(name);
                        builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                        builder.setMessage(res.message);
                        chatActivity.showDialog(builder.create());
                    }
                } else if (res.url == null) {
                    TLRPC.TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer = res;
                } else if (parentFragment.getParentActivity() != null) {
                    TLRPC.User user2 = getMessagesController().getUser(Long.valueOf(uid));
                    boolean verified = user2 != null && user2.verified;
                    if (keyboardButton instanceof TLRPC.TL_keyboardButtonGame) {
                        TLRPC.TL_game game = messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaGame ? messageObject2.messageOwner.media.game : null;
                        if (game != null) {
                            String str2 = res.url;
                            if (!verified) {
                                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                                if (notificationsSettings.getBoolean("askgame_" + uid, true)) {
                                    z = true;
                                    TLRPC.User user3 = user2;
                                    String str3 = name;
                                    TLRPC.TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer2 = res;
                                    parentFragment.showOpenGameAlert(game, messageObject, str2, z, uid);
                                    return;
                                }
                            }
                            z = false;
                            TLRPC.User user32 = user2;
                            String str32 = name;
                            TLRPC.TL_messages_botCallbackAnswer tL_messages_botCallbackAnswer22 = res;
                            parentFragment.showOpenGameAlert(game, messageObject, str2, z, uid);
                            return;
                        }
                        return;
                    }
                    String str4 = name;
                    AlertsCreator.showOpenUrlAlert(chatActivity, res.url, false, false);
                }
            } else if (tLObject instanceof TLRPC.TL_payments_paymentForm) {
                TLRPC.TL_payments_paymentForm form = (TLRPC.TL_payments_paymentForm) tLObject;
                getMessagesController().putUsers(form.users, false);
                chatActivity.presentFragment(new PaymentFormActivity(form, messageObject2, (BaseFragment) chatActivity));
            } else if (tLObject instanceof TLRPC.TL_payments_paymentReceipt) {
                chatActivity.presentFragment(new PaymentFormActivity((TLRPC.TL_payments_paymentReceipt) tLObject));
            }
        } else if (tL_error != null && parentFragment.getParentActivity() != null) {
            if ("PASSWORD_HASH_INVALID".equals(tL_error.text)) {
                if (srp == null) {
                    AlertDialog.Builder builder2 = new AlertDialog.Builder((Context) parentFragment.getParentActivity());
                    builder2.setTitle(LocaleController.getString("BotOwnershipTransfer", NUM));
                    builder2.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferReadyAlertText", NUM, new Object[0])));
                    String string = LocaleController.getString("BotOwnershipTransferChangeOwner", NUM);
                    SendMessagesHelper$$ExternalSyntheticLambda0 sendMessagesHelper$$ExternalSyntheticLambda0 = r0;
                    SendMessagesHelper$$ExternalSyntheticLambda0 sendMessagesHelper$$ExternalSyntheticLambda02 = new SendMessagesHelper$$ExternalSyntheticLambda0(this, cache, messageObject, button, parentFragment);
                    builder2.setPositiveButton(string, sendMessagesHelper$$ExternalSyntheticLambda0);
                    builder2.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                    chatActivity.showDialog(builder2.create());
                }
            } else if ("PASSWORD_MISSING".equals(tL_error.text) || tL_error.text.startsWith("PASSWORD_TOO_FRESH_") || tL_error.text.startsWith("SESSION_TOO_FRESH_")) {
                if (passwordFragment != null) {
                    passwordFragment.needHideProgress();
                }
                AlertDialog.Builder builder3 = new AlertDialog.Builder((Context) parentFragment.getParentActivity());
                builder3.setTitle(LocaleController.getString("EditAdminTransferAlertTitle", NUM));
                LinearLayout linearLayout = new LinearLayout(parentFragment.getParentActivity());
                linearLayout.setPadding(AndroidUtilities.dp(24.0f), AndroidUtilities.dp(2.0f), AndroidUtilities.dp(24.0f), 0);
                linearLayout.setOrientation(1);
                builder3.setView(linearLayout);
                TextView messageTextView = new TextView(parentFragment.getParentActivity());
                messageTextView.setTextColor(Theme.getColor("dialogTextBlack"));
                messageTextView.setTextSize(1, 16.0f);
                messageTextView.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                messageTextView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("BotOwnershipTransferAlertText", NUM, new Object[0])));
                linearLayout.addView(messageTextView, LayoutHelper.createLinear(-1, -2));
                LinearLayout linearLayout2 = new LinearLayout(parentFragment.getParentActivity());
                linearLayout2.setOrientation(0);
                linearLayout.addView(linearLayout2, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView dotImageView = new ImageView(parentFragment.getParentActivity());
                dotImageView.setImageResource(NUM);
                TextView textView = messageTextView;
                dotImageView.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                dotImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("dialogTextBlack"), PorterDuff.Mode.MULTIPLY));
                TextView messageTextView2 = new TextView(parentFragment.getParentActivity());
                messageTextView2.setTextColor(Theme.getColor("dialogTextBlack"));
                messageTextView2.setTextSize(1, 16.0f);
                messageTextView2.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                messageTextView2.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText1", NUM)));
                if (LocaleController.isRTL) {
                    linearLayout2.addView(messageTextView2, LayoutHelper.createLinear(-1, -2));
                    linearLayout2.addView(dotImageView, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout2.addView(dotImageView, LayoutHelper.createLinear(-2, -2));
                    linearLayout2.addView(messageTextView2, LayoutHelper.createLinear(-1, -2));
                }
                LinearLayout linearLayout22 = new LinearLayout(parentFragment.getParentActivity());
                linearLayout22.setOrientation(0);
                linearLayout.addView(linearLayout22, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                ImageView dotImageView2 = new ImageView(parentFragment.getParentActivity());
                dotImageView2.setImageResource(NUM);
                TextView textView2 = messageTextView2;
                dotImageView2.setPadding(LocaleController.isRTL ? AndroidUtilities.dp(11.0f) : 0, AndroidUtilities.dp(9.0f), LocaleController.isRTL ? 0 : AndroidUtilities.dp(11.0f), 0);
                dotImageView2.setColorFilter(new PorterDuffColorFilter(Theme.getColor("dialogTextBlack"), PorterDuff.Mode.MULTIPLY));
                TextView messageTextView3 = new TextView(parentFragment.getParentActivity());
                messageTextView3.setTextColor(Theme.getColor("dialogTextBlack"));
                messageTextView3.setTextSize(1, 16.0f);
                messageTextView3.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                messageTextView3.setText(AndroidUtilities.replaceTags(LocaleController.getString("EditAdminTransferAlertText2", NUM)));
                if (LocaleController.isRTL) {
                    linearLayout22.addView(messageTextView3, LayoutHelper.createLinear(-1, -2));
                    linearLayout22.addView(dotImageView2, LayoutHelper.createLinear(-2, -2, 5));
                } else {
                    linearLayout22.addView(dotImageView2, LayoutHelper.createLinear(-2, -2));
                    linearLayout22.addView(messageTextView3, LayoutHelper.createLinear(-1, -2));
                }
                if ("PASSWORD_MISSING".equals(tL_error.text)) {
                    builder3.setPositiveButton(LocaleController.getString("EditAdminTransferSetPassword", NUM), new SendMessagesHelper$$ExternalSyntheticLambda11(chatActivity));
                    builder3.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                } else {
                    TextView messageTextView4 = new TextView(parentFragment.getParentActivity());
                    messageTextView4.setTextColor(Theme.getColor("dialogTextBlack"));
                    messageTextView4.setTextSize(1, 16.0f);
                    messageTextView4.setGravity((LocaleController.isRTL ? 5 : 3) | 48);
                    messageTextView4.setText(LocaleController.getString("EditAdminTransferAlertText3", NUM));
                    linearLayout.addView(messageTextView4, LayoutHelper.createLinear(-1, -2, 0.0f, 11.0f, 0.0f, 0.0f));
                    builder3.setNegativeButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
                }
                chatActivity.showDialog(builder3.create());
            } else if ("SRP_ID_INVALID".equals(tL_error.text)) {
                ConnectionsManager.getInstance(this.currentAccount).sendRequest(new TLRPC.TL_account_getPassword(), new SendMessagesHelper$$ExternalSyntheticLambda87(this, passwordFragment, cache, messageObject, button, parentFragment), 8);
            } else if (passwordFragment != null) {
                passwordFragment.needHideProgress();
                passwordFragment.finishFragment();
            }
        }
    }

    /* renamed from: lambda$sendCallback$25$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m480lambda$sendCallback$25$orgtelegrammessengerSendMessagesHelper(boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, DialogInterface dialogInterface, int i) {
        TwoStepVerificationActivity fragment = new TwoStepVerificationActivity();
        fragment.setDelegate(new SendMessagesHelper$$ExternalSyntheticLambda90(this, cache, messageObject, button, fragment, parentFragment));
        parentFragment.presentFragment(fragment);
    }

    /* renamed from: lambda$sendCallback$28$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m482lambda$sendCallback$28$orgtelegrammessengerSendMessagesHelper(TwoStepVerificationActivity passwordFragment, boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment, TLObject response2, TLRPC.TL_error error2) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda52(this, error2, response2, passwordFragment, cache, messageObject, button, parentFragment));
    }

    /* renamed from: lambda$sendCallback$27$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m481lambda$sendCallback$27$orgtelegrammessengerSendMessagesHelper(TLRPC.TL_error error2, TLObject response2, TwoStepVerificationActivity passwordFragment, boolean cache, MessageObject messageObject, TLRPC.KeyboardButton button, ChatActivity parentFragment) {
        if (error2 == null) {
            TLRPC.TL_account_password currentPassword = (TLRPC.TL_account_password) response2;
            TwoStepVerificationActivity twoStepVerificationActivity = passwordFragment;
            passwordFragment.setCurrentPasswordInfo((byte[]) null, currentPassword);
            TwoStepVerificationActivity.initPasswordNewAlgo(currentPassword);
            m479lambda$sendCallback$24$orgtelegrammessengerSendMessagesHelper(cache, messageObject, button, passwordFragment.getNewSrpPassword(), passwordFragment, parentFragment);
            return;
        }
        TwoStepVerificationActivity twoStepVerificationActivity2 = passwordFragment;
    }

    public boolean isSendingCallback(MessageObject messageObject, TLRPC.KeyboardButton button) {
        int type;
        if (messageObject == null || button == null) {
            return false;
        }
        if (button instanceof TLRPC.TL_keyboardButtonUrlAuth) {
            type = 3;
        } else if ((button instanceof TLRPC.TL_keyboardButtonGame) != 0) {
            type = 1;
        } else if ((button instanceof TLRPC.TL_keyboardButtonBuy) != 0) {
            type = 2;
        } else {
            type = 0;
        }
        return this.waitingForCallback.containsKey(messageObject.getDialogId() + "_" + messageObject.getId() + "_" + Utilities.bytesToHex(button.data) + "_" + type);
    }

    public void sendGame(TLRPC.InputPeer peer, TLRPC.TL_inputMediaGame game, long random_id, long taskId) {
        long newTaskId;
        if (peer != null && game != null) {
            TLRPC.TL_messages_sendMedia request = new TLRPC.TL_messages_sendMedia();
            request.peer = peer;
            if (request.peer instanceof TLRPC.TL_inputPeerChannel) {
                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                request.silent = notificationsSettings.getBoolean("silent_" + (-peer.channel_id), false);
            } else if (request.peer instanceof TLRPC.TL_inputPeerChat) {
                SharedPreferences notificationsSettings2 = MessagesController.getNotificationsSettings(this.currentAccount);
                request.silent = notificationsSettings2.getBoolean("silent_" + (-peer.chat_id), false);
            } else {
                SharedPreferences notificationsSettings3 = MessagesController.getNotificationsSettings(this.currentAccount);
                request.silent = notificationsSettings3.getBoolean("silent_" + peer.user_id, false);
            }
            request.random_id = random_id != 0 ? random_id : getNextRandomId();
            request.message = "";
            request.media = game;
            long fromId = ChatObject.getSendAsPeerId(getMessagesController().getChat(Long.valueOf(peer.chat_id)), getMessagesController().getChatFull(peer.chat_id));
            if (fromId != UserConfig.getInstance(this.currentAccount).getClientUserId()) {
                request.send_as = getMessagesController().getInputPeer(fromId);
            }
            if (taskId == 0) {
                NativeByteBuffer data = null;
                try {
                    data = new NativeByteBuffer(peer.getObjectSize() + game.getObjectSize() + 4 + 8);
                    data.writeInt32(3);
                    data.writeInt64(random_id);
                    peer.serializeToStream(data);
                    game.serializeToStream(data);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                newTaskId = getMessagesStorage().createPendingTask(data);
            } else {
                newTaskId = taskId;
            }
            getConnectionsManager().sendRequest(request, new SendMessagesHelper$$ExternalSyntheticLambda75(this, newTaskId));
        }
    }

    /* renamed from: lambda$sendGame$31$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m485lambda$sendGame$31$orgtelegrammessengerSendMessagesHelper(long newTaskId, TLObject response, TLRPC.TL_error error) {
        if (error == null) {
            getMessagesController().processUpdates((TLRPC.Updates) response, false);
        }
        if (newTaskId != 0) {
            getMessagesStorage().removePendingTask(newTaskId);
        }
    }

    public void sendMessage(MessageObject retryMessageObject) {
        MessageObject messageObject = retryMessageObject;
        long dialogId = retryMessageObject.getDialogId();
        String str = messageObject.messageOwner.attachPath;
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, dialogId, str, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, retryMessageObject, (ArrayList<TLRPC.MessageEntity>) null, messageObject.messageOwner.reply_markup, messageObject.messageOwner.params, !messageObject.messageOwner.silent, messageObject.scheduled ? messageObject.messageOwner.date : 0, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.User user, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, user, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_messageMediaInvoice invoice, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, invoice, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_document document, VideoEditedInfo videoEditedInfo, String path, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, String caption, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, int ttl, Object parentObject, MessageObject.SendAnimationData sendAnimationData) {
        String str = caption;
        sendMessage((String) null, str, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, videoEditedInfo, (TLRPC.User) null, document, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, path, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, entities, replyMarkup, params, notify, scheduleDate, ttl, parentObject, sendAnimationData);
    }

    public void sendMessage(String message, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.WebPage webPage, boolean searchLinks, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, MessageObject.SendAnimationData sendAnimationData) {
        sendMessage(message, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, webPage, searchLinks, (MessageObject) null, entities, replyMarkup, params, notify, scheduleDate, 0, (Object) null, sendAnimationData);
    }

    public void sendMessage(TLRPC.MessageMedia location, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, location, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_messageMediaPoll poll, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, poll, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_game game, long peer, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate) {
        sendMessage((String) null, (String) null, (TLRPC.MessageMedia) null, (TLRPC.TL_photo) null, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, game, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, (String) null, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, (MessageObject) null, (ArrayList<TLRPC.MessageEntity>) null, replyMarkup, params, notify, scheduleDate, 0, (Object) null, (MessageObject.SendAnimationData) null);
    }

    public void sendMessage(TLRPC.TL_photo photo, String path, long peer, MessageObject replyToMsg, MessageObject replyToTopMsg, String caption, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, int ttl, Object parentObject) {
        String str = caption;
        sendMessage((String) null, str, (TLRPC.MessageMedia) null, photo, (VideoEditedInfo) null, (TLRPC.User) null, (TLRPC.TL_document) null, (TLRPC.TL_game) null, (TLRPC.TL_messageMediaPoll) null, (TLRPC.TL_messageMediaInvoice) null, peer, path, replyToMsg, replyToTopMsg, (TLRPC.WebPage) null, true, (MessageObject) null, entities, replyMarkup, params, notify, scheduleDate, ttl, parentObject, (MessageObject.SendAnimationData) null);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v0, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r92v1, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v0, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v5, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v0, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v2, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v0, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v1, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v1, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v2, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v1, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v1, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v2, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v1, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v1, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v0, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v1, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v1, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v2, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v7, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v4, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v3, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v4, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v9, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v1, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v1, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v1, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v1, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v2, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v4, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v5, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v3, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v3, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v3, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v2, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v3, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v4, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v4, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v4, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v6, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v6, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v1, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v1, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v5, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v6, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v4, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v12, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v7, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v5, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v5, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v5, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v7, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v5, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v6, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v6, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v13, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v8, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v6, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v6, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v7, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v7, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v7, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v18, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v9, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v5, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v8, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v8, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v7, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v8, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v20, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v11, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v12, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v9, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v9, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v8, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v9, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v21, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v3, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v3, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v13, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v10, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v10, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v9, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v10, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v26, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v6, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v11, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v10, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v11, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v14, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v11, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v7, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v7, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v2, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v12, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v11, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v12, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v16, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v12, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v2, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v3, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v13, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v12, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v13, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v17, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v13, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v9, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v12, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v8, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v30, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v13, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v9, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v31, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v34, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v36, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v38, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v40, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v18, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v46, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v14, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v50, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v15, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v52, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v16, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v54, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v17, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v13, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v10, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v62, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v18, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v73, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v19, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v18, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v4, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v14, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v14, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v9, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v13, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v14, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v2, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v3, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v4, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v19, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v21, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v15, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v8, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v3, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v10, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v15, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v15, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v79, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v23, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v5, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v11, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v14, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v16, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v10, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v16, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v17, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v29, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v88, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v6, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v14, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v19, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v7, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v17, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v20, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v31, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v14, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v89, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v26, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v21, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v32, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v15, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v90, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v27, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v22, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v33, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v16, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v91, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v28, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v37, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v17, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v92, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v9, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v29, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v9, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v0, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r84v0, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v0, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v22, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v7, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v17, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v16, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v18, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v23, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v93, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v38, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v19, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v12, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v18, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v10, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v23, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v17, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v18, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v20, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v15, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v21, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v28, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v95, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v32, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v25, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v27, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v31, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v96, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v33, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v5, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v28, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v25, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v44, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v43, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v50, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v97, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v0, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v26, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v51, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v98, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v26, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v10, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v34, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v52, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v45, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v99, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v35, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v101, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v11, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v36, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v47, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v102, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v29, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v50, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v37, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v53, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v107, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v52, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v12, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v38, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v54, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v108, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v31, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v53, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v13, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v39, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v109, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v32, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v54, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v14, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v40, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v110, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v33, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v55, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v15, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v41, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v51, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v27, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v111, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v16, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v42, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v57, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r86v3, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v120, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v37, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v17, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v43, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v57, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v32, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v38, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v53, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v121, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v44, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v55, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v122, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v45, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v123, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v18, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v46, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v40, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v124, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v19, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v47, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v19, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v41, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v11, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v34, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v29, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v42, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v35, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v31, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v20, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v130, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v30, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v21, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v52, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v13, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v1, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v21, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v32, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v131, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v31, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v53, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v22, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v33, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v132, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v32, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v54, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v34, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v23, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v36, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v35, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v66, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v72, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v133, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v41, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v74, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v73, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v24, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v38, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v37, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v74, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v67, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v25, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v38, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v75, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v26, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v40, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v39, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v76, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v136, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v46, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v55, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v27, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v40, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v137, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v35, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v56, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v77, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v28, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v41, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v138, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v48, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v36, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v57, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v42, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v29, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v43, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v30, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v139, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v49, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v58, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v140, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v50, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v31, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v38, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v59, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v65, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v44, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v141, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v32, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v39, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v29, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v60, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v148, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v34, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v40, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v30, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v61, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v71, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v80, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v35, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v45, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v46, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v149, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v36, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v41, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v31, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v62, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v2, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v14, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v3, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v150, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v37, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v42, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v32, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v63, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v4, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v161, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v38, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v43, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v33, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v64, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v17, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v5, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v163, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v40, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v44, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v34, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v65, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v164, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v45, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v41, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v96, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v35, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v66, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v6, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v18, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v52, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v173, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v46, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v42, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v97, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v36, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v67, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v7, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v19, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v48, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v48, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v49, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v18, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v8, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v20, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v54, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v175, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v43, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v101, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v37, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v68, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v62, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v44, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v103, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v177, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v38, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v69, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v63, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v45, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v105, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v178, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v39, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v70, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v64, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v46, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v107, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v179, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v40, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v71, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v65, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v47, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v108, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v180, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v41, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v72, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v48, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v21, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v55, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v109, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v54, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v2, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v181, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v73, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v49, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v111, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v3, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v182, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v75, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v50, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v112, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v8, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v4, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v183, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v76, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v51, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v113, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r81v4, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v5, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v185, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r38v56, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v115, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v52, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v42, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v78, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v19, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v22, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r85v9, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v56, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v100, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v87, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v186, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v116, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v53, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v101, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v89, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v191, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v118, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v54, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v45, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v65, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v90, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v112, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v108, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v199, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v23, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v55, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v120, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v57, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v46, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v66, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v91, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v113, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v200, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v56, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v80, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v201, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v122, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v92, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v202, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v93, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v203, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v124, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v57, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v81, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v204, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v94, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v205, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v125, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v58, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v82, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v95, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v76, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v126, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v59, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v83, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v206, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v96, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v77, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v60, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v84, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v207, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v128, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v97, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v78, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v61, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v85, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v208, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v79, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v86, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v209, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v116, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v47, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v74, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v211, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v131, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v77, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v49, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v218, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v90, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v133, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v219, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v120, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v99, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v50, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v79, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v220, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v135, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v229, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v136, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v67, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v24, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v82, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r79v1, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v238, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v19, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v68, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v138, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r79v2, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v243, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v20, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v69, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v140, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v21, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v56, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r82v6, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v85, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v25, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v59, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v141, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v245, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v22, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v70, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v252, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v142, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v71, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v23, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v132, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v253, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v143, resolved type: org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v266, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v72, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v24, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v4, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v5, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v15, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v73, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v20, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v6, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v56, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v62, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v146, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v40, resolved type: org.telegram.tgnet.TLRPC$TL_messages_sendMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v1, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v17, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v62, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v16, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v26, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v41, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v63, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v2, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v16, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v18, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v8, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v2, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v26, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v92, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v95, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v64, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v282, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v42, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v27, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v94, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v96, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v284, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v77, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v43, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v66, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v285, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v78, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v97, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v44, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v28, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v67, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v12, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v3, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v17, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v19, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v70, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v3, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v287, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v79, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v99, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v64, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v30, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v45, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v29, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v68, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v4, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v20, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v30, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v69, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v101, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v46, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v288, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v21, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v31, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v103, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v104, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v5, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v22, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v100, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v105, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v289, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v32, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v47, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v6, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v23, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v102, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v106, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v290, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v33, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v48, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v49, resolved type: org.telegram.tgnet.TLRPC$TL_messages_sendMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v50, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v291, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v24, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v34, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v107, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v108, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v51, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v292, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v35, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v109, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v25, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v68, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v110, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v52, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v293, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v26, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v36, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v111, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v117, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v99, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v294, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v27, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v37, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v118, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v53, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v54, resolved type: org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v55, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v119, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v58, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v295, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v28, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v38, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v120, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v70, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v121, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v59, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v296, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v29, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v39, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v122, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v297, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v30, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v60, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v40, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v123, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v298, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v61, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v41, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v31, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v124, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v72, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v6, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v73, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v107, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v21, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v7, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v125, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v115, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v33, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v300, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v80, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v43, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v62, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v72, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v81, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v8, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v126, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v117, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v34, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v301, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v44, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v64, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v303, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r75v9, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v127, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v119, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v35, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v304, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v45, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v65, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v17, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v87, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v305, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v66, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v46, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v128, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v36, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v88, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v306, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v307, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v67, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v47, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v129, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v37, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v308, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v12, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v82, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v13, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v68, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v309, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v48, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v130, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v38, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v84, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v15, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v69, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v310, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v49, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v131, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v39, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v72, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v313, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v50, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v132, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v40, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v73, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v314, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v51, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v133, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v41, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v74, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v52, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v315, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v134, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v42, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v75, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v53, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v316, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v135, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v43, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v22, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v6, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v119, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v136, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v7, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v228, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v23, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v138, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v45, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v318, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v8, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v46, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v77, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v319, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v136, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v9, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v121, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v78, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v137, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v320, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v47, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v123, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v119, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v79, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v138, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v321, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v48, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v129, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v125, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v114, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v126, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v80, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v139, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v322, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v49, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v128, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v117, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v153, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v16, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v94, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v18, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v235, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v21, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v84, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v82, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v140, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v323, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v131, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v83, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v141, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v324, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v132, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v25, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v102, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v131, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v128, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v162, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v142, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v84, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v325, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v167, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v133, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v85, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v326, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v143, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v135, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v86, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v144, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v327, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v140, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v87, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v328, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v145, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v144, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v88, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v329, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v146, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v17, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v102, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v99, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v19, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v248, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v22, resolved type: org.telegram.tgnet.TLRPC$InputMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v90, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v330, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v147, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v91, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v331, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v148, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v18, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v105, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v100, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v20, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v251, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v23, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDice} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v93, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v332, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v149, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v95, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v333, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v150, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v19, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v108, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v103, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v21, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v254, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v24, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v101, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v334, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v151, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v102, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v62, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v335, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v152, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v103, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v63, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v336, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v153, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v104, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v64, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v337, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v154, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v190, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v105, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v162, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v65, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v338, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v155, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v106, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v163, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v66, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v339, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v156, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v20, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v115, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v106, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v22, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v272, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v25, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v273, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v192, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v67, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v108, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v340, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v157, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v197, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v10, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v68, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v109, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v341, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v158, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v11, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v69, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v110, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v342, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v159, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v12, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v21, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v119, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v116, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v23, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v286, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v26, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaContact} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v13, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v14, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v15, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v24, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v343, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v139, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v73, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v71, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v344, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v160, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v140, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v25, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v345, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v74, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v73, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v346, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v161, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v77, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v347, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v10, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v26, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v27, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v75, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v85, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v348, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v162, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v200, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v117, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v22, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v123, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v24, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v172, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v298, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v27, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v65, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v118, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v29, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v30, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v173, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v76, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v349, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v163, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v31, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v77, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v350, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v164, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v32, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v175, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v78, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v351, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v165, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v33, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v176, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v79, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v352, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v166, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v177, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v80, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v353, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v167, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v178, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v81, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v354, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v168, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v305, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v211, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v216, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v11, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v83, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v34, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v84, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v355, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v169, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v13, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v35, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v95, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v85, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v356, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v170, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v37, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v87, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v357, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v171, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v127, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v311, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v87, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v88, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v316, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v42, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v358, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v99, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v90, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v172, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v43, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v361, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v100, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v91, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v173, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v44, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v362, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v93, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v102, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v363, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v174, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v45, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v364, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v103, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v94, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v175, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v46, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v93, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v15, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v168, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v141, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v47, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v366, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v137, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v96, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v176, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v48, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v139, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v25, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v138, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v188, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v324, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v368, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v369, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v370, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaVenue} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v23, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v26, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v20, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v33, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v49, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v26, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v139, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v98, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v41, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v36, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v107, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v177, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v25, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v21, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v28, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v31, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v50, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v376, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v140, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v99, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v108, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v178, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r68v4, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v22, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v26, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v29, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v32, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v51, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v382, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v141, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v100, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v109, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v179, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v387, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v392, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v226, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r36v34, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v52, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v27, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v142, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v101, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v42, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r37v37, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v110, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v134, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v180, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v53, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v399, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v143, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v102, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v111, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v181, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r68v5, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v23, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v30, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v192, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v408, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v144, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v103, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v112, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v182, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v30, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r68v6, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v24, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r88v86, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v34, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v32, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v193, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v412, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v145, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v104, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v113, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v183, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v156, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v56, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v413, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v194, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v146, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v105, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v114, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v184, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v32, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v141, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v35, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v36, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v142, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v33, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v157, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v429, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v195, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v147, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v106, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v115, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v185, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v430, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v338, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v161, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v58, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v434, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v196, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v148, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v107, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v116, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v186, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r68v8, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r93v39, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v162, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v59, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v161, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v149, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v108, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v43, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v117, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v135, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v163, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v60, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v438, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v197, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v150, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v109, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v118, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v188, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v27, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v38, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v61, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v441, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v198, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v151, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v110, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v119, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v189, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v18, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v28, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v442, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v152, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v111, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v120, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v190, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v29, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v63, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v153, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v112, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v44, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v121, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v191, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v443, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v199, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v39, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v101, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v64, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v154, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v113, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r80v45, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v122, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v192, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v446, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v40, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v41, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v201, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v65, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v447, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v155, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v114, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v123, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v193, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v31, resolved type: org.telegram.messenger.VideoEditedInfo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v66, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v449, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v156, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v115, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v124, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v194, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v47, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v23, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v24, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v105, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v457, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v67, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v157, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v116, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v125, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v195, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v356, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v94, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v126, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v464, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v68, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v158, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v117, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v196, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v166, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v95, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v127, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v504, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v108, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v69, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v159, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v118, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v197, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v167, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v40, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v168, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v178, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v96, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v128, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v511, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v109, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v70, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v160, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v119, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v198, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v43, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v97, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v129, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v516, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v110, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v71, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v161, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v120, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v199, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v45, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v98, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v130, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v519, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v72, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v162, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v121, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v200, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v26, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v27, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v538, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v28, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v543, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v29, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r99v30, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v25, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v32, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v33, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v26, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v34, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v27, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v99, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v131, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v548, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v73, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v163, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v122, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v201, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r96v35, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v28, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v132, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v551, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v113, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v74, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v164, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v123, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v202, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r97v29, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v133, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v101, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v165, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v124, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v554, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v203, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v75, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v202, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v154, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v262, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v268, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v134, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v102, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v166, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v126, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v556, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v205, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v76, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r106v6, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v138, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v135, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v103, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v167, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v127, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v116, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v558, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v206, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v77, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v271, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v3, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v3, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v89, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v155, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v179, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v40, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v203, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v263, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v139, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v136, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v104, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v168, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v129, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v560, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v207, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v79, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v137, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v105, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v169, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v130, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v563, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v208, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v80, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v138, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v106, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v566, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v81, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v131, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v209, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v139, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v107, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v567, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v82, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v132, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v210, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r106v8, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v140, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v108, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v570, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v83, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v211, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v133, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v372, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r106v9, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v141, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v109, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v571, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v84, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v134, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v212, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v373, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v142, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v110, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v85, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v573, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v213, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v135, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v374, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v266, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v157, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v183, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v276, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v185, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v159, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v277, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v268, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v160, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v143, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v111, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v577, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v214, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v87, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v137, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v144, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v112, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v217, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v88, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v138, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v578, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v378, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v145, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v113, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v579, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v218, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v89, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v139, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v126, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v278, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v269, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v161, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v50, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v51, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v52, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v53, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v203, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v280, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v271, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v162, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v54, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v204, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v146, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v114, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v589, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v224, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v90, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v140, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v127, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v55, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v205, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v56, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v57, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v147, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v115, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v590, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v206, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v225, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v91, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v141, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v207, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v148, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v116, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v591, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v226, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v92, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v142, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v58, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v149, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v117, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v594, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v227, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v93, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v143, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v60, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v396, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v150, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v118, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v234, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v94, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v144, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v598, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v151, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v119, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v599, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v237, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v95, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v145, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v152, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v120, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v238, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v96, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v146, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v133, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v600, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v186, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v153, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v121, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v185, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v239, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v97, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v147, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v601, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v175, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v275, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v289, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v187, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v177, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v276, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v290, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v188, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v154, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v122, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v186, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v242, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v98, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v148, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v135, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v604, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v155, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v123, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v187, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v99, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v149, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v136, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v605, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v190, resolved type: org.telegram.tgnet.TLRPC$TL_message_secret} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v277, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v187, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v191, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v291, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v156, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v124, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v188, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v100, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v150, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v137, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v607, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v278, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v157, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v125, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v189, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v101, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v245, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v151, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v138, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v608, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v279, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v188, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v195, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v292, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v610, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v158, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v126, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v190, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v152, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v103, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v246, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v611, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v193, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v196, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v280, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v293, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v159, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v127, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v191, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v154, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v140, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v107, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v247, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v613, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v160, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v128, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v192, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v155, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v141, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v108, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v248, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v614, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v161, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v129, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v193, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v109, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v249, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v157, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v142, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v615, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v162, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v194, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v159, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v143, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v112, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v250, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v616, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v163, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v131, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v195, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v160, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v144, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v617, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v114, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v196, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v162, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v145, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v115, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v619, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v620, resolved type: org.telegram.tgnet.TLRPC$TL_message_secret} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v186, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v133, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v197, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v116, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v621, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v253, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v146, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v207, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v294, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v283, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v198, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v208, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v295, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v284, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v199, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v134, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v198, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v119, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v624, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v209, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v167, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v135, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v199, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v120, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v625, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v255, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v148, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v296, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v285, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v210, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v200, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v168, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v136, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v200, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v122, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v627, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v286, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v213, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v297, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v202, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v194, resolved type: org.telegram.tgnet.TLRPC$WebPage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v169, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v137, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v201, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v124, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v629, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v257, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v216, resolved type: java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v168, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v170, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v138, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v202, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v125, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v630, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v258, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v169, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v196, resolved type: java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v298, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v203, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v171, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v139, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v203, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v127, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v632, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v259, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v170, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v172, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v140, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v204, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v128, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v633, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v171, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v287, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v288, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v173, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v141, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v205, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v129, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v634, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v172, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v291, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v36, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v174, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v142, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v206, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v130, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v635, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v173, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v155, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v129, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v4, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v4, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v228, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v201, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v41, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v192, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v301, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v243, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v292, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v201, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v193, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v229, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v212, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v302, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v638, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v175, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v143, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v207, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v132, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v202, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v175, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v133, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v5, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v5, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v43, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v131, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v194, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v230, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v203, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v293, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v303, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v6, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r91v44, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v132, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v195, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v231, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v204, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v294, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v304, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v176, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v144, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v208, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v135, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v203, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v645, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v157, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v178, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v308, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v216, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v232, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v196, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v205, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v177, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v145, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v209, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v136, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v648, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v179, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v158, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v223, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v200, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v233, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v208, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v314, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v201, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v234, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v315, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v209, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v226, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v233, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v204, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v235, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v211, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v320, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v205, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v236, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v321, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v212, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v236, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v328, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v243, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v237, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v206, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v213, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v244, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v238, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v207, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v215, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v331, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v247, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v208, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v239, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v217, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v335, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v209, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v240, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v336, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v218, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v250, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v178, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v146, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v210, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v137, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v649, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v180, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v159, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v341, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v241, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v217, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPoll} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v215, resolved type: org.telegram.tgnet.TLRPC$TL_userRequest_old2} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v220, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v252, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v255, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v211, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v147, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v138, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v650, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v160, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v220, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v242, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v222, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v342, resolved type: org.telegram.tgnet.TLRPC$MessageMedia} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v257, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v243, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v224, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v244, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v258, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v137, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v148, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v212, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v139, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v652, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v138, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v149, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v213, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v140, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v653, resolved type: java.lang.Exception} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v3, resolved type: org.telegram.tgnet.TLRPC$InputPeer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v116, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v118, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v119, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r92v12, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r92v13, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r92v14, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v260, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v215, resolved type: org.telegram.tgnet.TLRPC$Peer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v216, resolved type: org.telegram.tgnet.TLRPC$Peer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v217, resolved type: org.telegram.tgnet.TLRPC$Peer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v265, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v220, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v141, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v142, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v266, resolved type: org.telegram.tgnet.TLRPC$Message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v267, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v269, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v271, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v272, resolved type: org.telegram.tgnet.TLRPC$EncryptedChat} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v273, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v245, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v246, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v303, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v304, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v219, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v247, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v249, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v305, resolved type: org.telegram.messenger.SendMessagesHelper$DelayedMessage} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v274, resolved type: org.telegram.tgnet.TLRPC$PhotoSize} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v275, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v278, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v279, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r71v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v151, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v152, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v153, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v154, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v155, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v156, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v157, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v158, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v654, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v220, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v221, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v222, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v268, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v269, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v270, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v275, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v276, resolved type: org.telegram.tgnet.TLRPC$TL_message} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v143, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v144, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v145, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v239, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v146, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r68v9, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r68v10, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v61, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v62, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v241, resolved type: java.util.ArrayList} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v409, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v64, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v65, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v66, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r111v67, resolved type: java.util.HashMap<java.lang.String, java.lang.String>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v221, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v222, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v413, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v414, resolved type: java.util.HashMap} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v224, resolved type: org.telegram.tgnet.TLRPC$TL_webPageUrlPending} */
    /* JADX WARNING: type inference failed for: r21v0 */
    /* JADX WARNING: type inference failed for: r21v1 */
    /* JADX WARNING: type inference failed for: r21v2 */
    /* JADX WARNING: type inference failed for: r21v3 */
    /* JADX WARNING: type inference failed for: r21v4 */
    /* JADX WARNING: type inference failed for: r21v5 */
    /* JADX WARNING: type inference failed for: r21v8 */
    /* JADX WARNING: type inference failed for: r21v9 */
    /* JADX WARNING: type inference failed for: r21v10 */
    /* JADX WARNING: type inference failed for: r21v11 */
    /* JADX WARNING: type inference failed for: r21v12 */
    /* JADX WARNING: type inference failed for: r21v13 */
    /* JADX WARNING: type inference failed for: r21v14 */
    /* JADX WARNING: type inference failed for: r21v15 */
    /* JADX WARNING: type inference failed for: r21v16 */
    /* JADX WARNING: type inference failed for: r21v17 */
    /* JADX WARNING: type inference failed for: r21v18 */
    /* JADX WARNING: type inference failed for: r21v19 */
    /* JADX WARNING: type inference failed for: r21v20 */
    /* JADX WARNING: type inference failed for: r21v21 */
    /* JADX WARNING: type inference failed for: r21v22 */
    /* JADX WARNING: type inference failed for: r4v14 */
    /* JADX WARNING: type inference failed for: r21v23 */
    /* JADX WARNING: type inference failed for: r21v24 */
    /* JADX WARNING: type inference failed for: r21v25 */
    /* JADX WARNING: type inference failed for: r21v26 */
    /* JADX WARNING: type inference failed for: r21v27 */
    /* JADX WARNING: type inference failed for: r21v28 */
    /* JADX WARNING: type inference failed for: r21v29 */
    /* JADX WARNING: type inference failed for: r21v30 */
    /* JADX WARNING: type inference failed for: r4v44 */
    /* JADX WARNING: type inference failed for: r21v31 */
    /* JADX WARNING: type inference failed for: r4v46 */
    /* JADX WARNING: type inference failed for: r21v32 */
    /* JADX WARNING: type inference failed for: r21v33 */
    /* JADX WARNING: type inference failed for: r4v48 */
    /* JADX WARNING: type inference failed for: r21v34 */
    /* JADX WARNING: type inference failed for: r21v35 */
    /* JADX WARNING: type inference failed for: r4v50 */
    /* JADX WARNING: type inference failed for: r21v36 */
    /* JADX WARNING: type inference failed for: r21v37 */
    /* JADX WARNING: type inference failed for: r21v38 */
    /* JADX WARNING: type inference failed for: r21v39 */
    /* JADX WARNING: type inference failed for: r21v40 */
    /* JADX WARNING: type inference failed for: r21v41 */
    /* JADX WARNING: type inference failed for: r21v42 */
    /* JADX WARNING: type inference failed for: r21v43 */
    /* JADX WARNING: type inference failed for: r21v44 */
    /* JADX WARNING: type inference failed for: r21v45 */
    /* JADX WARNING: type inference failed for: r21v46 */
    /* JADX WARNING: type inference failed for: r3v71, types: [byte[]] */
    /* JADX WARNING: type inference failed for: r21v47 */
    /* JADX WARNING: type inference failed for: r21v48 */
    /* JADX WARNING: type inference failed for: r21v49 */
    /* JADX WARNING: type inference failed for: r21v50 */
    /* JADX WARNING: type inference failed for: r21v51 */
    /* JADX WARNING: type inference failed for: r21v52 */
    /* JADX WARNING: type inference failed for: r21v53 */
    /* JADX WARNING: type inference failed for: r21v54 */
    /* JADX WARNING: type inference failed for: r21v55 */
    /* JADX WARNING: type inference failed for: r21v56 */
    /* JADX WARNING: type inference failed for: r21v57 */
    /* JADX WARNING: type inference failed for: r21v58 */
    /* JADX WARNING: type inference failed for: r21v59 */
    /* JADX WARNING: type inference failed for: r21v60 */
    /* JADX WARNING: type inference failed for: r21v61 */
    /* JADX WARNING: type inference failed for: r21v62 */
    /* JADX WARNING: type inference failed for: r21v63 */
    /* JADX WARNING: type inference failed for: r21v64 */
    /* JADX WARNING: type inference failed for: r21v65 */
    /* JADX WARNING: type inference failed for: r21v66 */
    /* JADX WARNING: type inference failed for: r21v67 */
    /* JADX WARNING: type inference failed for: r21v68 */
    /* JADX WARNING: type inference failed for: r21v69 */
    /* JADX WARNING: type inference failed for: r21v70 */
    /* JADX WARNING: type inference failed for: r21v71 */
    /* JADX WARNING: type inference failed for: r21v72 */
    /* JADX WARNING: type inference failed for: r21v73 */
    /* JADX WARNING: type inference failed for: r21v74 */
    /* JADX WARNING: type inference failed for: r21v75 */
    /* JADX WARNING: type inference failed for: r21v76 */
    /* JADX WARNING: type inference failed for: r21v77 */
    /* JADX WARNING: type inference failed for: r21v78 */
    /* JADX WARNING: type inference failed for: r21v79 */
    /* JADX WARNING: type inference failed for: r21v80 */
    /* JADX WARNING: type inference failed for: r21v81 */
    /* JADX WARNING: type inference failed for: r21v82 */
    /* JADX WARNING: type inference failed for: r21v83 */
    /* JADX WARNING: type inference failed for: r21v84 */
    /* JADX WARNING: type inference failed for: r21v85 */
    /* JADX WARNING: type inference failed for: r21v86 */
    /* JADX WARNING: type inference failed for: r21v87 */
    /* JADX WARNING: type inference failed for: r21v88 */
    /* JADX WARNING: type inference failed for: r21v89 */
    /* JADX WARNING: type inference failed for: r21v90 */
    /* JADX WARNING: type inference failed for: r21v91 */
    /* JADX WARNING: type inference failed for: r21v92 */
    /* JADX WARNING: type inference failed for: r21v93 */
    /* JADX WARNING: type inference failed for: r21v94 */
    /* JADX WARNING: type inference failed for: r21v95 */
    /* JADX WARNING: type inference failed for: r21v96 */
    /* JADX WARNING: type inference failed for: r21v97 */
    /* JADX WARNING: type inference failed for: r21v98 */
    /* JADX WARNING: type inference failed for: r21v99 */
    /* JADX WARNING: type inference failed for: r21v100 */
    /* JADX WARNING: type inference failed for: r21v101 */
    /* JADX WARNING: type inference failed for: r21v102 */
    /* JADX WARNING: type inference failed for: r21v103 */
    /* JADX WARNING: type inference failed for: r21v104 */
    /* JADX WARNING: type inference failed for: r21v105 */
    /* JADX WARNING: type inference failed for: r21v106 */
    /* JADX WARNING: type inference failed for: r21v107 */
    /* JADX WARNING: type inference failed for: r21v108 */
    /* JADX WARNING: type inference failed for: r99v8 */
    /* JADX WARNING: type inference failed for: r21v109 */
    /* JADX WARNING: type inference failed for: r21v110 */
    /* JADX WARNING: type inference failed for: r21v111 */
    /* JADX WARNING: type inference failed for: r21v112 */
    /* JADX WARNING: type inference failed for: r21v113 */
    /* JADX WARNING: type inference failed for: r21v114 */
    /* JADX WARNING: type inference failed for: r21v115 */
    /* JADX WARNING: type inference failed for: r9v86 */
    /* JADX WARNING: type inference failed for: r21v116 */
    /* JADX WARNING: type inference failed for: r9v91 */
    /* JADX WARNING: type inference failed for: r21v117 */
    /* JADX WARNING: type inference failed for: r21v118 */
    /* JADX WARNING: type inference failed for: r21v119 */
    /* JADX WARNING: type inference failed for: r21v120 */
    /* JADX WARNING: type inference failed for: r21v121 */
    /* JADX WARNING: type inference failed for: r21v122 */
    /* JADX WARNING: type inference failed for: r21v123 */
    /* JADX WARNING: type inference failed for: r21v124 */
    /* JADX WARNING: type inference failed for: r21v125 */
    /* JADX WARNING: type inference failed for: r21v126 */
    /* JADX WARNING: type inference failed for: r21v127 */
    /* JADX WARNING: type inference failed for: r21v128 */
    /* JADX WARNING: type inference failed for: r21v129 */
    /* JADX WARNING: type inference failed for: r21v130 */
    /* JADX WARNING: type inference failed for: r21v131 */
    /* JADX WARNING: type inference failed for: r21v132 */
    /* JADX WARNING: type inference failed for: r21v133 */
    /* JADX WARNING: type inference failed for: r21v134 */
    /* JADX WARNING: type inference failed for: r21v135 */
    /* JADX WARNING: type inference failed for: r21v136 */
    /* JADX WARNING: type inference failed for: r21v137 */
    /* JADX WARNING: type inference failed for: r21v138 */
    /* JADX WARNING: type inference failed for: r21v139 */
    /* JADX WARNING: type inference failed for: r19v121 */
    /* JADX WARNING: type inference failed for: r21v140 */
    /* JADX WARNING: type inference failed for: r21v141 */
    /* JADX WARNING: type inference failed for: r21v142 */
    /* JADX WARNING: type inference failed for: r21v143 */
    /* JADX WARNING: type inference failed for: r21v144 */
    /* JADX WARNING: type inference failed for: r21v145 */
    /* JADX WARNING: type inference failed for: r21v146 */
    /* JADX WARNING: type inference failed for: r21v147 */
    /* JADX WARNING: type inference failed for: r21v148 */
    /* JADX WARNING: type inference failed for: r21v149 */
    /* JADX WARNING: type inference failed for: r21v150 */
    /* JADX WARNING: type inference failed for: r21v151 */
    /* JADX WARNING: type inference failed for: r21v152 */
    /* JADX WARNING: type inference failed for: r21v153 */
    /* JADX WARNING: type inference failed for: r21v154 */
    /* JADX WARNING: type inference failed for: r21v155 */
    /* JADX WARNING: type inference failed for: r21v156 */
    /* JADX WARNING: type inference failed for: r21v157 */
    /* JADX WARNING: type inference failed for: r21v158 */
    /* JADX WARNING: type inference failed for: r21v159 */
    /* JADX WARNING: type inference failed for: r21v160 */
    /* JADX WARNING: type inference failed for: r21v161 */
    /* JADX WARNING: type inference failed for: r21v162 */
    /* JADX WARNING: type inference failed for: r21v163 */
    /* JADX WARNING: type inference failed for: r21v164 */
    /* JADX WARNING: type inference failed for: r21v165 */
    /* JADX WARNING: type inference failed for: r21v166 */
    /* JADX WARNING: type inference failed for: r21v167 */
    /* JADX WARNING: type inference failed for: r21v168 */
    /* JADX WARNING: type inference failed for: r21v169 */
    /* JADX WARNING: type inference failed for: r21v170 */
    /* JADX WARNING: type inference failed for: r21v172 */
    /* JADX WARNING: type inference failed for: r21v174 */
    /* JADX WARNING: type inference failed for: r21v175 */
    /* JADX WARNING: type inference failed for: r21v176 */
    /* JADX WARNING: type inference failed for: r21v177 */
    /* JADX WARNING: type inference failed for: r21v178 */
    /* JADX WARNING: type inference failed for: r6v173 */
    /* JADX WARNING: type inference failed for: r21v179 */
    /* JADX WARNING: type inference failed for: r21v185 */
    /* JADX WARNING: type inference failed for: r21v186 */
    /* JADX WARNING: type inference failed for: r21v187 */
    /* JADX WARNING: type inference failed for: r21v188 */
    /* JADX WARNING: type inference failed for: r21v189 */
    /* JADX WARNING: type inference failed for: r21v193 */
    /* JADX WARNING: type inference failed for: r21v194 */
    /* JADX WARNING: type inference failed for: r21v195 */
    /* JADX WARNING: type inference failed for: r21v199 */
    /* JADX WARNING: type inference failed for: r6v197, types: [boolean] */
    /* JADX WARNING: type inference failed for: r6v198, types: [java.lang.String] */
    /* JADX WARNING: type inference failed for: r21v200 */
    /* JADX WARNING: type inference failed for: r10v245 */
    /* JADX WARNING: type inference failed for: r10v246 */
    /* JADX WARNING: type inference failed for: r21v206 */
    /* JADX WARNING: type inference failed for: r21v207 */
    /* JADX WARNING: type inference failed for: r21v210 */
    /* JADX WARNING: type inference failed for: r21v216 */
    /* JADX WARNING: type inference failed for: r21v225 */
    /* JADX WARNING: type inference failed for: r21v227 */
    /* JADX WARNING: type inference failed for: r4v268 */
    /* JADX WARNING: type inference failed for: r4v270 */
    /* JADX WARNING: type inference failed for: r4v276 */
    /* JADX WARNING: type inference failed for: r99v33 */
    /* JADX WARNING: type inference failed for: r9v232 */
    /* JADX WARNING: type inference failed for: r9v234 */
    /* JADX WARNING: type inference failed for: r9v235 */
    /* JADX WARNING: type inference failed for: r9v237 */
    /* JADX WARNING: type inference failed for: r19v233 */
    /* JADX WARNING: type inference failed for: r19v234 */
    /* JADX WARNING: type inference failed for: r19v235 */
    /* JADX WARNING: type inference failed for: r19v236 */
    /* JADX WARNING: type inference failed for: r19v237 */
    /* JADX WARNING: type inference failed for: r21v228 */
    /* JADX WARNING: type inference failed for: r21v229 */
    /* JADX WARNING: type inference failed for: r21v230 */
    /* JADX WARNING: type inference failed for: r21v231 */
    /* JADX WARNING: type inference failed for: r21v232 */
    /* JADX WARNING: type inference failed for: r21v233 */
    /* JADX WARNING: type inference failed for: r21v234 */
    /* JADX WARNING: type inference failed for: r21v235 */
    /* JADX WARNING: type inference failed for: r21v236 */
    /* JADX WARNING: type inference failed for: r21v246 */
    /* JADX WARNING: type inference failed for: r21v252 */
    /* JADX WARNING: type inference failed for: r21v253 */
    /* JADX WARNING: type inference failed for: r21v254 */
    /* JADX WARNING: Code restructure failed: missing block: B:1089:0x1ccb, code lost:
        if (r8.roundVideo == false) goto L_0x1cff;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1354:0x255c, code lost:
        if (r1.containsKey("forceDocument") != false) goto L_0x2588;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1808:?, code lost:
        r15.media.thumb_h = r5.h;
        r15.media.thumb_w = r5.w;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1809:0x325f, code lost:
        if (r10.key == null) goto L_0x32f9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1811:0x3263, code lost:
        if (r40 == 0) goto L_0x3270;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1812:0x3265, code lost:
        r80 = r4;
        r20 = r5;
        r50 = r6;
        r25 = r14;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1814:?, code lost:
        r7 = new org.telegram.tgnet.TLRPC.TL_inputEncryptedFile();
        r7.id = r10.id;
        r7.access_hash = r10.access_hash;
        r15.media.key = r10.key;
        r15.media.iv = r10.iv;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1815:0x3290, code lost:
        r80 = r4;
        r20 = r5;
        r25 = r14;
        r19 = r7;
        r50 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1817:?, code lost:
        getSecretChatHelper().performSendEncryptedRequest(r15, r13.messageOwner, r8, r7, (java.lang.String) null, r13);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1818:0x32a7, code lost:
        r3 = r91;
        r1 = r93;
        r6 = r101;
        r5 = r36;
        r2 = r75;
        r4 = r79;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1819:0x32b5, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1820:0x32b6, code lost:
        r38 = r91;
        r20 = r93;
        r15 = r109;
        r1 = r0;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r25 = r36;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r5 = r79;
        r48 = r80;
        r10 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1821:0x32d5, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1822:0x32d6, code lost:
        r50 = r6;
        r25 = r14;
        r38 = r91;
        r20 = r93;
        r15 = r109;
        r1 = r0;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r25 = r36;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r5 = r79;
        r48 = r4;
        r10 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1823:0x32f9, code lost:
        r80 = r4;
        r20 = r5;
        r50 = r6;
        r25 = r14;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1824:0x3302, code lost:
        if (r93 != null) goto L_0x3402;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1827:0x3306, code lost:
        r6 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1829:?, code lost:
        r1 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r12, r6);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1831:?, code lost:
        r1.encryptedChat = r8;
        r1.type = 1;
        r1.sendEncryptedRequest = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1832:0x3312, code lost:
        r5 = r36;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1834:?, code lost:
        r1.originalPath = r5;
        r1.obj = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1835:0x3318, code lost:
        r4 = r79;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1836:0x331a, code lost:
        if (r4 == null) goto L_0x334b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1837:0x331c, code lost:
        r2 = r42;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1840:0x3322, code lost:
        if (r4.containsKey(r2) == false) goto L_0x334b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1841:0x3324, code lost:
        r1.parentObject = r4.get(r2);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1842:0x332a, code lost:
        r3 = r91;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1843:0x332d, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1844:0x332e, code lost:
        r38 = r91;
        r15 = r109;
        r20 = r1;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r48 = r80;
        r1 = r0;
        r25 = r5;
        r10 = r6;
        r5 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1845:0x334b, code lost:
        r3 = r91;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1847:?, code lost:
        r1.parentObject = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1848:0x334f, code lost:
        r1.performMediaUpload = true;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1849:0x3352, code lost:
        if (r11 == 0) goto L_0x3356;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1850:0x3354, code lost:
        r2 = true;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1851:0x3356, code lost:
        r2 = false;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1852:0x3357, code lost:
        r1.scheduled = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1853:0x335b, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1854:0x335c, code lost:
        r15 = r109;
        r20 = r1;
        r38 = r3;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r48 = r80;
        r1 = r0;
        r25 = r5;
        r10 = r6;
        r5 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1855:0x3379, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1856:0x337a, code lost:
        r15 = r109;
        r20 = r1;
        r38 = r91;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r48 = r80;
        r1 = r0;
        r25 = r5;
        r10 = r6;
        r5 = r79;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1857:0x339b, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1858:0x339c, code lost:
        r15 = r109;
        r20 = r1;
        r38 = r91;
        r5 = r79;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r25 = r36;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r48 = r80;
        r1 = r0;
        r10 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1859:0x33bd, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1860:0x33be, code lost:
        r20 = r93;
        r15 = r109;
        r1 = r0;
        r38 = r91;
        r5 = r79;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r25 = r36;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r48 = r80;
        r10 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1861:0x33df, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1862:0x33e0, code lost:
        r20 = r93;
        r15 = r109;
        r1 = r0;
        r38 = r91;
        r5 = r79;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r25 = r36;
        r49 = r74;
        r19 = r75;
        r28 = r78;
        r48 = r80;
        r10 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1863:0x3402, code lost:
        r3 = r91;
        r6 = r101;
        r5 = r36;
        r4 = r79;
        r1 = r93;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1864:0x340c, code lost:
        r2 = r75;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1866:?, code lost:
        r1.videoEditedInfo = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1867:0x3412, code lost:
        if (r40 != 0) goto L_0x3417;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1868:0x3414, code lost:
        r12.performSendDelayedMessage(r1);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1869:0x3417, code lost:
        r19 = r2;
        r38 = r3;
        r14 = r5;
        r93 = r9;
        r24 = r10;
        r5 = r50;
        r49 = r74;
        r9 = r4;
        r88 = r6;
        r6 = r103;
        r7 = r11;
        r10 = r88;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1870:0x342e, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1871:0x342f, code lost:
        r15 = r109;
        r20 = r1;
        r19 = r2;
        r38 = r3;
        r39 = r8;
        r21 = r9;
        r24 = r10;
        r14 = r25;
        r49 = r74;
        r28 = r78;
        r48 = r80;
        r1 = r0;
        r25 = r5;
        r10 = r6;
        r5 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:230:0x05c8, code lost:
        if (r109.isEmpty() != false) goto L_0x05ca;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:485:0x0d04, code lost:
        r4.attributes.remove(r9);
        r15 = new org.telegram.tgnet.TLRPC.TL_documentAttributeSticker_layer55();
        r4.attributes.add(r15);
        r15.alt = r14.alt;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:486:0x0d19, code lost:
        if (r14.stickerset == null) goto L_0x0e03;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:488:0x0d1f, code lost:
        if ((r14.stickerset instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName) == false) goto L_0x0d53;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:490:?, code lost:
        r1 = r14.stickerset.short_name;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:491:0x0d25, code lost:
        r43 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:492:0x0d28, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:493:0x0d29, code lost:
        r77 = r91;
        r48 = r92;
        r29 = r93;
        r50 = r94;
        r10 = r101;
        r47 = r106;
        r1 = r0;
        r49 = r3;
        r24 = r4;
        r15 = r6;
        r14 = r7;
        r39 = r12;
        r13 = null;
        r28 = r35;
        r31 = r38;
        r19 = r95;
        r38 = r115;
        r12 = r8;
        r34 = r26;
        r26 = r32;
        r32 = r99;
        r33 = r114;
        r21 = r21;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:494:0x0d53, code lost:
        r5 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:495:?, code lost:
        r43 = r2;
        r1 = getMediaDataController().getStickerSetName(r14.stickerset.id);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:497:0x0d65, code lost:
        if (android.text.TextUtils.isEmpty(r1) != false) goto L_0x0da3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:499:?, code lost:
        r15.stickerset = new org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName();
        r15.stickerset.short_name = r1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:500:0x0d72, code lost:
        r111 = r5;
        r5 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:501:0x0d78, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:502:0x0d79, code lost:
        r77 = r91;
        r48 = r92;
        r29 = r93;
        r50 = r94;
        r49 = r96;
        r10 = r101;
        r47 = r106;
        r1 = r0;
        r24 = r4;
        r15 = r6;
        r14 = r7;
        r39 = r12;
        r13 = null;
        r28 = r35;
        r31 = r38;
        r19 = r95;
        r38 = r115;
        r12 = r8;
        r34 = r26;
        r26 = r32;
        r32 = r99;
        r33 = r114;
        r21 = r21;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:503:0x0da3, code lost:
        r5 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:505:0x0da7, code lost:
        if ((r14.stickerset instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetID) == false) goto L_0x0def;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:507:0x0dab, code lost:
        r111 = r5;
        r5 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:509:?, code lost:
        r2 = new org.telegram.messenger.SendMessagesHelper.DelayedMessage(r8, r5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:511:?, code lost:
        r2.encryptedChat = r12;
        r2.locationParent = r15;
        r2.type = 5;
        r2.parentObject = r14.stickerset;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:512:0x0dbd, code lost:
        r20 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:513:0x0dc0, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:514:0x0dc1, code lost:
        r77 = r91;
        r48 = r92;
        r29 = r93;
        r50 = r94;
        r49 = r96;
        r47 = r106;
        r15 = r109;
        r1 = r0;
        r20 = r2;
        r24 = r4;
        r10 = r5;
        r14 = r7;
        r39 = r12;
        r13 = null;
        r28 = r35;
        r31 = r38;
        r19 = r95;
        r5 = r111;
        r38 = r115;
        r12 = r8;
        r34 = r26;
        r26 = r32;
        r32 = r99;
        r33 = r114;
        r21 = r21;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:515:0x0def, code lost:
        r111 = r5;
        r5 = r101;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:517:?, code lost:
        r15.stickerset = new org.telegram.tgnet.TLRPC.TL_inputStickerSetEmpty();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:518:0x0dfa, code lost:
        r1 = r106;
        r2 = r111;
        r3 = r7;
        r7 = r92;
        r21 = r21;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:519:0x0e03, code lost:
        r43 = r2;
        r111 = r5;
        r5 = r101;
        r15.stickerset = new org.telegram.tgnet.TLRPC.TL_inputStickerSetEmpty();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:520:0x0e11, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:521:0x0e12, code lost:
        r77 = r91;
        r48 = r92;
        r29 = r93;
        r50 = r94;
        r49 = r96;
        r47 = r106;
        r15 = r109;
        r1 = r0;
        r24 = r4;
        r10 = r5;
        r14 = r7;
        r39 = r12;
        r13 = null;
        r28 = r35;
        r31 = r38;
        r19 = r95;
        r5 = r111;
        r38 = r115;
        r12 = r8;
        r34 = r26;
        r26 = r32;
        r32 = r99;
        r33 = r114;
        r21 = r21;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:784:0x14a0, code lost:
        if (org.telegram.messenger.MessageObject.isRoundVideoMessage(r10) != false) goto L_0x14a2;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:1044:0x1bb1  */
    /* JADX WARNING: Removed duplicated region for block: B:1104:0x1d37  */
    /* JADX WARNING: Removed duplicated region for block: B:1109:0x1d71  */
    /* JADX WARNING: Removed duplicated region for block: B:1112:0x1d79  */
    /* JADX WARNING: Removed duplicated region for block: B:1134:0x1e51  */
    /* JADX WARNING: Removed duplicated region for block: B:1138:0x1e5f A[Catch:{ Exception -> 0x200a }] */
    /* JADX WARNING: Removed duplicated region for block: B:1139:0x1e65 A[Catch:{ Exception -> 0x200a }] */
    /* JADX WARNING: Removed duplicated region for block: B:1149:0x1eab A[SYNTHETIC, Splitter:B:1149:0x1eab] */
    /* JADX WARNING: Removed duplicated region for block: B:1182:0x1var_ A[Catch:{ Exception -> 0x1fe8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:1185:0x1fb0 A[Catch:{ Exception -> 0x1fe8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x1fc6 A[Catch:{ Exception -> 0x1fe8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:1363:0x258d  */
    /* JADX WARNING: Removed duplicated region for block: B:1376:0x25ca  */
    /* JADX WARNING: Removed duplicated region for block: B:1380:0x25d5 A[SYNTHETIC, Splitter:B:1380:0x25d5] */
    /* JADX WARNING: Removed duplicated region for block: B:1396:0x2640 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:1696:0x2var_  */
    /* JADX WARNING: Removed duplicated region for block: B:1800:0x320e A[SYNTHETIC, Splitter:B:1800:0x320e] */
    /* JADX WARNING: Removed duplicated region for block: B:190:0x04c0  */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x053f  */
    /* JADX WARNING: Removed duplicated region for block: B:2038:0x399a  */
    /* JADX WARNING: Removed duplicated region for block: B:2039:0x399c  */
    /* JADX WARNING: Removed duplicated region for block: B:2130:0x3c6f  */
    /* JADX WARNING: Removed duplicated region for block: B:2131:0x3CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:2158:0x3d1b A[SYNTHETIC, Splitter:B:2158:0x3d1b] */
    /* JADX WARNING: Removed duplicated region for block: B:2165:0x3d3d A[SYNTHETIC, Splitter:B:2165:0x3d3d] */
    /* JADX WARNING: Removed duplicated region for block: B:2190:0x3dcd A[Catch:{ Exception -> 0x3de4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2192:0x3dd3 A[Catch:{ Exception -> 0x3de4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0079  */
    /* JADX WARNING: Removed duplicated region for block: B:2217:0x3eee  */
    /* JADX WARNING: Removed duplicated region for block: B:2219:0x3var_ A[SYNTHETIC, Splitter:B:2219:0x3var_] */
    /* JADX WARNING: Removed duplicated region for block: B:2277:0x4040  */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x0082  */
    /* JADX WARNING: Removed duplicated region for block: B:2319:0x4100 A[Catch:{ Exception -> 0x4129 }] */
    /* JADX WARNING: Removed duplicated region for block: B:2364:0x43f9  */
    /* JADX WARNING: Removed duplicated region for block: B:2365:0x43fb  */
    /* JADX WARNING: Removed duplicated region for block: B:2368:0x4401  */
    /* JADX WARNING: Removed duplicated region for block: B:240:0x062c A[Catch:{ Exception -> 0x0660 }] */
    /* JADX WARNING: Removed duplicated region for block: B:241:0x0634 A[Catch:{ Exception -> 0x0660 }] */
    /* JADX WARNING: Removed duplicated region for block: B:245:0x0647 A[Catch:{ Exception -> 0x0660 }] */
    /* JADX WARNING: Removed duplicated region for block: B:246:0x064c A[Catch:{ Exception -> 0x0660 }] */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0093  */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x00e0  */
    /* JADX WARNING: Removed duplicated region for block: B:316:0x088a A[Catch:{ Exception -> 0x082d }] */
    /* JADX WARNING: Removed duplicated region for block: B:320:0x089b  */
    /* JADX WARNING: Removed duplicated region for block: B:451:0x0CLASSNAME A[SYNTHETIC, Splitter:B:451:0x0CLASSNAME] */
    /* JADX WARNING: Removed duplicated region for block: B:466:0x0CLASSNAME A[Catch:{ Exception -> 0x0caa }] */
    /* JADX WARNING: Removed duplicated region for block: B:469:0x0cd5 A[SYNTHETIC, Splitter:B:469:0x0cd5] */
    /* JADX WARNING: Removed duplicated region for block: B:472:0x0cd9 A[Catch:{ Exception -> 0x0e66 }] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0141  */
    /* JADX WARNING: Removed duplicated region for block: B:524:0x0e57  */
    /* JADX WARNING: Removed duplicated region for block: B:595:0x1098  */
    /* JADX WARNING: Removed duplicated region for block: B:610:0x1121  */
    /* JADX WARNING: Removed duplicated region for block: B:616:0x1130 A[SYNTHETIC, Splitter:B:616:0x1130] */
    /* JADX WARNING: Removed duplicated region for block: B:622:0x116a A[SYNTHETIC, Splitter:B:622:0x116a] */
    /* JADX WARNING: Removed duplicated region for block: B:637:0x11a8 A[SYNTHETIC, Splitter:B:637:0x11a8] */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x0188  */
    /* JADX WARNING: Removed duplicated region for block: B:643:0x11b4  */
    /* JADX WARNING: Removed duplicated region for block: B:644:0x11b6 A[SYNTHETIC, Splitter:B:644:0x11b6] */
    /* JADX WARNING: Removed duplicated region for block: B:648:0x11c6 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:661:0x1200  */
    /* JADX WARNING: Removed duplicated region for block: B:667:0x1213 A[SYNTHETIC, Splitter:B:667:0x1213] */
    /* JADX WARNING: Removed duplicated region for block: B:696:0x1300  */
    /* JADX WARNING: Removed duplicated region for block: B:699:0x130c A[SYNTHETIC, Splitter:B:699:0x130c] */
    /* JADX WARNING: Removed duplicated region for block: B:706:0x135e A[Catch:{ Exception -> 0x136f }] */
    /* JADX WARNING: Removed duplicated region for block: B:716:0x13a3 A[SYNTHETIC, Splitter:B:716:0x13a3] */
    /* JADX WARNING: Removed duplicated region for block: B:728:0x13d5  */
    /* JADX WARNING: Removed duplicated region for block: B:782:0x149c A[SYNTHETIC, Splitter:B:782:0x149c] */
    /* JADX WARNING: Removed duplicated region for block: B:790:0x14a9 A[SYNTHETIC, Splitter:B:790:0x14a9] */
    /* JADX WARNING: Removed duplicated region for block: B:797:0x14b6  */
    /* JADX WARNING: Removed duplicated region for block: B:809:0x1540  */
    /* JADX WARNING: Removed duplicated region for block: B:819:0x1586 A[Catch:{ Exception -> 0x4209 }] */
    /* JADX WARNING: Removed duplicated region for block: B:820:0x1588 A[Catch:{ Exception -> 0x4209 }] */
    /* JADX WARNING: Removed duplicated region for block: B:823:0x1591 A[SYNTHETIC, Splitter:B:823:0x1591] */
    /* JADX WARNING: Removed duplicated region for block: B:836:0x15cc  */
    /* JADX WARNING: Removed duplicated region for block: B:840:0x15d1 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:846:0x15de A[SYNTHETIC, Splitter:B:846:0x15de] */
    /* JADX WARNING: Removed duplicated region for block: B:870:0x1690  */
    /* JADX WARNING: Removed duplicated region for block: B:897:0x172b  */
    /* JADX WARNING: Removed duplicated region for block: B:906:0x17bf  */
    /* JADX WARNING: Removed duplicated region for block: B:909:0x17c8  */
    /* JADX WARNING: Removed duplicated region for block: B:962:0x191d A[SYNTHETIC, Splitter:B:962:0x191d] */
    /* JADX WARNING: Removed duplicated region for block: B:969:0x195e A[SYNTHETIC, Splitter:B:969:0x195e] */
    /* JADX WARNING: Removed duplicated region for block: B:971:0x196c A[SYNTHETIC, Splitter:B:971:0x196c] */
    /* JADX WARNING: Removed duplicated region for block: B:983:0x1999  */
    /* JADX WARNING: Removed duplicated region for block: B:984:0x199b  */
    /* JADX WARNING: Unknown variable types count: 4 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void sendMessage(java.lang.String r91, java.lang.String r92, org.telegram.tgnet.TLRPC.MessageMedia r93, org.telegram.tgnet.TLRPC.TL_photo r94, org.telegram.messenger.VideoEditedInfo r95, org.telegram.tgnet.TLRPC.User r96, org.telegram.tgnet.TLRPC.TL_document r97, org.telegram.tgnet.TLRPC.TL_game r98, org.telegram.tgnet.TLRPC.TL_messageMediaPoll r99, org.telegram.tgnet.TLRPC.TL_messageMediaInvoice r100, long r101, java.lang.String r103, org.telegram.messenger.MessageObject r104, org.telegram.messenger.MessageObject r105, org.telegram.tgnet.TLRPC.WebPage r106, boolean r107, org.telegram.messenger.MessageObject r108, java.util.ArrayList<org.telegram.tgnet.TLRPC.MessageEntity> r109, org.telegram.tgnet.TLRPC.ReplyMarkup r110, java.util.HashMap<java.lang.String, java.lang.String> r111, boolean r112, int r113, int r114, java.lang.Object r115, org.telegram.messenger.MessageObject.SendAnimationData r116) {
        /*
            r90 = this;
            r11 = r90
            r1 = r91
            r2 = r93
            r3 = r94
            r4 = r96
            r5 = r97
            r12 = r98
            r6 = r99
            r13 = r100
            r14 = r101
            r10 = r103
            r9 = r104
            r8 = r105
            r7 = r106
            r8 = r108
            r9 = r109
            r5 = r111
            r13 = r113
            r12 = r114
            if (r4 == 0) goto L_0x002d
            java.lang.String r10 = r4.phone
            if (r10 != 0) goto L_0x002d
            return
        L_0x002d:
            r16 = 0
            int r10 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r10 != 0) goto L_0x0034
            return
        L_0x0034:
            if (r1 != 0) goto L_0x003b
            if (r92 != 0) goto L_0x003b
            java.lang.String r10 = ""
            goto L_0x003d
        L_0x003b:
            r10 = r92
        L_0x003d:
            r18 = 0
            if (r5 == 0) goto L_0x0058
            r92 = r10
            java.lang.String r10 = "originalPath"
            boolean r10 = r5.containsKey(r10)
            if (r10 == 0) goto L_0x005a
            java.lang.String r10 = "originalPath"
            java.lang.Object r10 = r5.get(r10)
            r18 = r10
            java.lang.String r18 = (java.lang.String) r18
            r10 = r18
            goto L_0x005c
        L_0x0058:
            r92 = r10
        L_0x005a:
            r10 = r18
        L_0x005c:
            r18 = 0
            r19 = 0
            r20 = 0
            r21 = -1
            r22 = 0
            r23 = 0
            r24 = 0
            r25 = r10
            r10 = 0
            r26 = 0
            r28 = 0
            boolean r29 = org.telegram.messenger.DialogObject.isEncryptedDialog(r101)
            r30 = r10
            if (r29 != 0) goto L_0x0082
            org.telegram.messenger.MessagesController r10 = r90.getMessagesController()
            org.telegram.tgnet.TLRPC$InputPeer r10 = r10.getInputPeer((long) r14)
            goto L_0x0083
        L_0x0082:
            r10 = 0
        L_0x0083:
            org.telegram.messenger.UserConfig r31 = r90.getUserConfig()
            long r3 = r31.getClientUserId()
            boolean r31 = org.telegram.messenger.DialogObject.isEncryptedDialog(r101)
            r32 = r3
            if (r31 == 0) goto L_0x00e0
            org.telegram.messenger.MessagesController r3 = r90.getMessagesController()
            int r35 = org.telegram.messenger.DialogObject.getEncryptedChatId(r101)
            java.lang.Integer r4 = java.lang.Integer.valueOf(r35)
            org.telegram.tgnet.TLRPC$EncryptedChat r28 = r3.getEncryptedChat(r4)
            if (r28 != 0) goto L_0x00d7
            if (r8 == 0) goto L_0x00d6
            org.telegram.messenger.MessagesStorage r3 = r90.getMessagesStorage()
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner
            boolean r12 = r8.scheduled
            r3.markMessageAsSendError(r4, r12)
            org.telegram.tgnet.TLRPC$Message r3 = r8.messageOwner
            r4 = 2
            r3.send_state = r4
            org.telegram.messenger.NotificationCenter r3 = r90.getNotificationCenter()
            int r4 = org.telegram.messenger.NotificationCenter.messageSendError
            r12 = 1
            java.lang.Object[] r12 = new java.lang.Object[r12]
            int r16 = r108.getId()
            java.lang.Integer r16 = java.lang.Integer.valueOf(r16)
            r17 = 0
            r12[r17] = r16
            r3.postNotificationName(r4, r12)
            int r3 = r108.getId()
            r11.processSentMessage(r3)
        L_0x00d6:
            return
        L_0x00d7:
            r35 = r10
            r11 = r24
            r9 = r26
            r12 = r28
            goto L_0x0131
        L_0x00e0:
            boolean r3 = r10 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel
            if (r3 == 0) goto L_0x0129
            org.telegram.messenger.MessagesController r3 = r90.getMessagesController()
            long r11 = r10.channel_id
            java.lang.Long r4 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r3 = r3.getChat(r4)
            org.telegram.messenger.MessagesController r4 = r90.getMessagesController()
            long r11 = r3.id
            org.telegram.tgnet.TLRPC$ChatFull r4 = r4.getChatFull(r11)
            if (r3 == 0) goto L_0x0104
            boolean r11 = r3.megagroup
            if (r11 != 0) goto L_0x0104
            r11 = 1
            goto L_0x0105
        L_0x0104:
            r11 = 0
        L_0x0105:
            r22 = r11
            if (r22 == 0) goto L_0x0113
            boolean r11 = r3.has_link
            if (r11 == 0) goto L_0x0113
            if (r4 == 0) goto L_0x0113
            long r11 = r4.linked_chat_id
            r26 = r11
        L_0x0113:
            org.telegram.messenger.MessagesController r11 = r90.getMessagesController()
            r35 = r10
            r12 = 1
            long r9 = org.telegram.messenger.ChatObject.getSendAsPeerId(r3, r4, r12)
            org.telegram.tgnet.TLRPC$Peer r24 = r11.getPeer(r9)
            r11 = r24
            r9 = r26
            r12 = r28
            goto L_0x0131
        L_0x0129:
            r35 = r10
            r11 = r24
            r9 = r26
            r12 = r28
        L_0x0131:
            java.lang.String r4 = "fwd_id"
            java.lang.String r3 = "http"
            r26 = r9
            java.lang.String r9 = "parentObject"
            java.lang.String r10 = "query_id"
            r38 = r11
            java.lang.String r11 = ""
            if (r8 == 0) goto L_0x053f
            r40 = r3
            org.telegram.tgnet.TLRPC$Message r3 = r8.messageOwner     // Catch:{ Exception -> 0x0512 }
            if (r115 != 0) goto L_0x0180
            if (r5 == 0) goto L_0x0180
            boolean r18 = r5.containsKey(r9)     // Catch:{ Exception -> 0x0154 }
            if (r18 == 0) goto L_0x0180
            java.lang.Object r18 = r5.get(r9)     // Catch:{ Exception -> 0x0154 }
            goto L_0x0182
        L_0x0154:
            r0 = move-exception
            r48 = r92
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r29 = r2
            r47 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r38 = r115
            r1 = r0
            r14 = r3
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r6
            goto L_0x43f0
        L_0x0180:
            r18 = r115
        L_0x0182:
            boolean r41 = r108.isForwarded()     // Catch:{ Exception -> 0x04e6 }
            if (r41 != 0) goto L_0x04c0
            if (r5 == 0) goto L_0x01c2
            boolean r41 = r5.containsKey(r4)     // Catch:{ Exception -> 0x0196 }
            if (r41 == 0) goto L_0x01c2
            r41 = r4
            r42 = r9
            goto L_0x04c4
        L_0x0196:
            r0 = move-exception
            r48 = r92
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r29 = r2
            r47 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r1 = r0
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r6
            goto L_0x43f0
        L_0x01c2:
            boolean r41 = r108.isDice()     // Catch:{ Exception -> 0x04e6 }
            if (r41 == 0) goto L_0x01e3
            r21 = 11
            java.lang.String r41 = r108.getDiceEmoji()     // Catch:{ Exception -> 0x0196 }
            r1 = r41
            r41 = r11
            r7 = r97
            r42 = r9
            r43 = r21
            r21 = r41
            r41 = r4
            r9 = r6
            r4 = r94
            r6 = r96
            goto L_0x040a
        L_0x01e3:
            r41 = r4
            int r4 = r8.type     // Catch:{ Exception -> 0x04e6 }
            if (r4 == 0) goto L_0x03ec
            boolean r4 = r108.isAnimatedEmoji()     // Catch:{ Exception -> 0x04e6 }
            if (r4 == 0) goto L_0x01f3
            r42 = r9
            goto L_0x03ee
        L_0x01f3:
            int r4 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r42 = r9
            r9 = 4
            if (r4 != r9) goto L_0x020c
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r3.media     // Catch:{ Exception -> 0x0196 }
            r2 = r4
            r21 = 1
            r4 = r94
            r7 = r97
            r9 = r6
            r43 = r21
            r21 = r92
            r6 = r96
            goto L_0x040a
        L_0x020c:
            int r4 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r9 = 1
            if (r4 != r9) goto L_0x025d
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r3.media     // Catch:{ Exception -> 0x0196 }
            org.telegram.tgnet.TLRPC$Photo r4 = r4.photo     // Catch:{ Exception -> 0x0196 }
            org.telegram.tgnet.TLRPC$TL_photo r4 = (org.telegram.tgnet.TLRPC.TL_photo) r4     // Catch:{ Exception -> 0x0196 }
            org.telegram.tgnet.TLRPC$Message r9 = r8.messageOwner     // Catch:{ Exception -> 0x0231 }
            java.lang.String r9 = r9.message     // Catch:{ Exception -> 0x0231 }
            if (r9 == 0) goto L_0x0222
            org.telegram.tgnet.TLRPC$Message r9 = r8.messageOwner     // Catch:{ Exception -> 0x0231 }
            java.lang.String r9 = r9.message     // Catch:{ Exception -> 0x0231 }
            goto L_0x0224
        L_0x0222:
            r9 = r92
        L_0x0224:
            r21 = 2
            r7 = r97
            r43 = r21
            r21 = r9
            r9 = r6
            r6 = r96
            goto L_0x040a
        L_0x0231:
            r0 = move-exception
            r48 = r92
            r49 = r96
            r24 = r97
            r77 = r1
            r29 = r2
            r50 = r4
            r47 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r1 = r0
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r6
            goto L_0x43f0
        L_0x025d:
            int r4 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r9 = 3
            if (r4 == r9) goto L_0x0391
            int r4 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r9 = 5
            if (r4 == r9) goto L_0x0391
            org.telegram.messenger.VideoEditedInfo r4 = r8.videoEditedInfo     // Catch:{ Exception -> 0x04e6 }
            if (r4 == 0) goto L_0x026d
            goto L_0x0391
        L_0x026d:
            int r4 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r9 = 12
            if (r4 != r9) goto L_0x02e1
            org.telegram.tgnet.TLRPC$TL_userRequest_old2 r4 = new org.telegram.tgnet.TLRPC$TL_userRequest_old2     // Catch:{ Exception -> 0x04e6 }
            r4.<init>()     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r3.media     // Catch:{ Exception -> 0x02b5 }
            java.lang.String r9 = r9.phone_number     // Catch:{ Exception -> 0x02b5 }
            r4.phone = r9     // Catch:{ Exception -> 0x02b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r3.media     // Catch:{ Exception -> 0x02b5 }
            java.lang.String r9 = r9.first_name     // Catch:{ Exception -> 0x02b5 }
            r4.first_name = r9     // Catch:{ Exception -> 0x02b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r3.media     // Catch:{ Exception -> 0x02b5 }
            java.lang.String r9 = r9.last_name     // Catch:{ Exception -> 0x02b5 }
            r4.last_name = r9     // Catch:{ Exception -> 0x02b5 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r9 = new org.telegram.tgnet.TLRPC$TL_restrictionReason     // Catch:{ Exception -> 0x02b5 }
            r9.<init>()     // Catch:{ Exception -> 0x02b5 }
            r9.platform = r11     // Catch:{ Exception -> 0x02b5 }
            r9.reason = r11     // Catch:{ Exception -> 0x02b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x02b5 }
            java.lang.String r2 = r2.vcard     // Catch:{ Exception -> 0x02b5 }
            r9.text = r2     // Catch:{ Exception -> 0x02b5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r2 = r4.restriction_reason     // Catch:{ Exception -> 0x02b5 }
            r2.add(r9)     // Catch:{ Exception -> 0x02b5 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x02b5 }
            long r6 = r2.user_id     // Catch:{ Exception -> 0x02b5 }
            r4.id = r6     // Catch:{ Exception -> 0x02b5 }
            r21 = 6
            r2 = r93
            r7 = r97
            r9 = r99
            r6 = r4
            r43 = r21
            r21 = r92
            r4 = r94
            goto L_0x040a
        L_0x02b5:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r24 = r97
            r47 = r106
            r77 = r1
            r49 = r4
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r1 = r0
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x02e1:
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 8
            if (r2 == r4) goto L_0x0361
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 9
            if (r2 == r4) goto L_0x0361
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 13
            if (r2 == r4) goto L_0x0361
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 14
            if (r2 == r4) goto L_0x0361
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 15
            if (r2 != r4) goto L_0x0301
            goto L_0x0361
        L_0x0301:
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 2
            if (r2 != r4) goto L_0x0336
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2     // Catch:{ Exception -> 0x04e6 }
            r21 = 8
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03c0 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03c0 }
            if (r4 == 0) goto L_0x0327
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03c0 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03c0 }
            r6 = r96
            r9 = r99
            r7 = r2
            r43 = r21
            r2 = r93
            r21 = r4
            r4 = r94
            goto L_0x040a
        L_0x0327:
            r4 = r94
            r6 = r96
            r9 = r99
            r7 = r2
            r43 = r21
            r21 = r92
            r2 = r93
            goto L_0x040a
        L_0x0336:
            int r2 = r8.type     // Catch:{ Exception -> 0x04e6 }
            r4 = 17
            if (r2 != r4) goto L_0x0351
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x04e6 }
            r21 = 10
            r4 = r94
            r6 = r96
            r7 = r97
            r9 = r2
            r43 = r21
            r21 = r92
            r2 = r93
            goto L_0x040a
        L_0x0351:
            r2 = r93
            r4 = r94
            r6 = r96
            r7 = r97
            r9 = r99
            r43 = r21
            r21 = r92
            goto L_0x040a
        L_0x0361:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2     // Catch:{ Exception -> 0x04e6 }
            r21 = 7
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03c0 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03c0 }
            if (r4 == 0) goto L_0x0382
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03c0 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03c0 }
            r6 = r96
            r9 = r99
            r7 = r2
            r43 = r21
            r2 = r93
            r21 = r4
            r4 = r94
            goto L_0x040a
        L_0x0382:
            r4 = r94
            r6 = r96
            r9 = r99
            r7 = r2
            r43 = r21
            r21 = r92
            r2 = r93
            goto L_0x040a
        L_0x0391:
            r21 = 3
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r3.media     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$TL_document r2 = (org.telegram.tgnet.TLRPC.TL_document) r2     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03c0 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03c0 }
            if (r4 == 0) goto L_0x03b2
            org.telegram.tgnet.TLRPC$Message r4 = r8.messageOwner     // Catch:{ Exception -> 0x03c0 }
            java.lang.String r4 = r4.message     // Catch:{ Exception -> 0x03c0 }
            r6 = r96
            r9 = r99
            r7 = r2
            r43 = r21
            r2 = r93
            r21 = r4
            r4 = r94
            goto L_0x040a
        L_0x03b2:
            r4 = r94
            r6 = r96
            r9 = r99
            r7 = r2
            r43 = r21
            r21 = r92
            r2 = r93
            goto L_0x040a
        L_0x03c0:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r47 = r106
            r77 = r1
            r24 = r2
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r1 = r0
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x03ec:
            r42 = r9
        L_0x03ee:
            org.telegram.tgnet.TLRPC$Message r2 = r8.messageOwner     // Catch:{ Exception -> 0x04e6 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media     // Catch:{ Exception -> 0x04e6 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGame     // Catch:{ Exception -> 0x04e6 }
            if (r2 == 0) goto L_0x03f7
            goto L_0x03fa
        L_0x03f7:
            java.lang.String r2 = r3.message     // Catch:{ Exception -> 0x04e6 }
            r1 = r2
        L_0x03fa:
            r21 = 0
            r2 = r93
            r4 = r94
            r6 = r96
            r7 = r97
            r9 = r99
            r43 = r21
            r21 = r92
        L_0x040a:
            if (r5 == 0) goto L_0x0443
            boolean r44 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0415 }
            if (r44 == 0) goto L_0x0443
            r43 = 9
            goto L_0x0443
        L_0x0415:
            r0 = move-exception
            r47 = r106
            r77 = r1
            r29 = r2
            r50 = r4
            r49 = r6
            r24 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r48 = r21
            r28 = r35
            r31 = r38
            r21 = r43
            r12 = r90
            r19 = r95
            r15 = r109
            r1 = r0
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r9
            goto L_0x43f0
        L_0x0443:
            r91 = r1
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r3.media     // Catch:{ Exception -> 0x0492 }
            int r1 = r1.ttl_seconds     // Catch:{ Exception -> 0x0492 }
            if (r1 <= 0) goto L_0x0470
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r3.media     // Catch:{ Exception -> 0x0492 }
            int r1 = r1.ttl_seconds     // Catch:{ Exception -> 0x0492 }
            r8 = r90
            r92 = r91
            r47 = r106
            r13 = r1
            r1 = r6
            r45 = r7
            r46 = r9
            r91 = r18
            r48 = r21
            r9 = r35
            r7 = r43
            r6 = r5
            r88 = r3
            r3 = r2
            r2 = r4
            r4 = r32
            r32 = r10
            r10 = r88
            goto L_0x1092
        L_0x0470:
            r8 = r90
            r92 = r91
            r47 = r106
            r13 = r114
            r1 = r6
            r45 = r7
            r46 = r9
            r91 = r18
            r48 = r21
            r9 = r35
            r7 = r43
            r6 = r5
            r88 = r3
            r3 = r2
            r2 = r4
            r4 = r32
            r32 = r10
            r10 = r88
            goto L_0x1092
        L_0x0492:
            r0 = move-exception
            r77 = r91
            r47 = r106
            r1 = r0
            r29 = r2
            r50 = r4
            r49 = r6
            r24 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r48 = r21
            r28 = r35
            r31 = r38
            r21 = r43
            r12 = r90
            r19 = r95
            r15 = r109
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r9
            goto L_0x43f0
        L_0x04c0:
            r41 = r4
            r42 = r9
        L_0x04c4:
            r2 = 4
            r8 = r90
            r48 = r92
            r45 = r97
            r46 = r99
            r47 = r106
            r13 = r114
            r92 = r1
            r7 = r2
            r6 = r5
            r91 = r18
            r4 = r32
            r9 = r35
            r2 = r94
            r1 = r96
            r32 = r10
            r10 = r3
            r3 = r93
            goto L_0x1092
        L_0x04e6:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r47 = r106
            r77 = r1
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r1 = r0
            r14 = r3
            r38 = r18
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0512:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r47 = r106
            r77 = r1
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r38 = r115
            r1 = r0
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x053f:
            r40 = r3
            r41 = r4
            r42 = r9
            r2 = 1
            boolean r3 = org.telegram.messenger.DialogObject.isChatDialog(r101)     // Catch:{ Exception -> 0x43c3 }
            if (r3 == 0) goto L_0x055e
            org.telegram.messenger.MessagesController r3 = r90.getMessagesController()     // Catch:{ Exception -> 0x0512 }
            long r6 = -r14
            java.lang.Long r4 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x0512 }
            org.telegram.tgnet.TLRPC$Chat r3 = r3.getChat(r4)     // Catch:{ Exception -> 0x0512 }
            boolean r4 = org.telegram.messenger.ChatObject.canSendStickers(r3)     // Catch:{ Exception -> 0x0512 }
            r2 = r4
        L_0x055e:
            if (r1 == 0) goto L_0x06ba
            if (r12 == 0) goto L_0x0568
            org.telegram.tgnet.TLRPC$TL_message_secret r3 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x0512 }
            r3.<init>()     // Catch:{ Exception -> 0x0512 }
            goto L_0x056d
        L_0x0568:
            org.telegram.tgnet.TLRPC$TL_message r3 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x068b }
            r3.<init>()     // Catch:{ Exception -> 0x068b }
        L_0x056d:
            if (r12 == 0) goto L_0x05b2
            r4 = r106
            boolean r6 = r4 instanceof org.telegram.tgnet.TLRPC.TL_webPagePending     // Catch:{ Exception -> 0x0586 }
            if (r6 == 0) goto L_0x05b4
            java.lang.String r6 = r4.url     // Catch:{ Exception -> 0x0586 }
            if (r6 == 0) goto L_0x0584
            org.telegram.tgnet.TLRPC$TL_webPageUrlPending r6 = new org.telegram.tgnet.TLRPC$TL_webPageUrlPending     // Catch:{ Exception -> 0x0586 }
            r6.<init>()     // Catch:{ Exception -> 0x0586 }
            java.lang.String r7 = r4.url     // Catch:{ Exception -> 0x0586 }
            r6.url = r7     // Catch:{ Exception -> 0x0586 }
            r4 = r6
            goto L_0x05b4
        L_0x0584:
            r4 = 0
            goto L_0x05b4
        L_0x0586:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r38 = r115
            r1 = r0
            r14 = r3
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x05b2:
            r4 = r106
        L_0x05b4:
            if (r2 == 0) goto L_0x0628
            int r6 = r91.length()     // Catch:{ Exception -> 0x05fc }
            r7 = 30
            if (r6 >= r7) goto L_0x0628
            if (r4 != 0) goto L_0x0628
            r6 = r109
            if (r6 == 0) goto L_0x05ca
            boolean r7 = r109.isEmpty()     // Catch:{ Exception -> 0x0660 }
            if (r7 == 0) goto L_0x062a
        L_0x05ca:
            org.telegram.messenger.MessagesController r7 = r90.getMessagesController()     // Catch:{ Exception -> 0x0660 }
            java.util.HashSet<java.lang.String> r7 = r7.diceEmojies     // Catch:{ Exception -> 0x0660 }
            java.lang.String r9 = "️"
            java.lang.String r9 = r1.replace(r9, r11)     // Catch:{ Exception -> 0x0660 }
            boolean r7 = r7.contains(r9)     // Catch:{ Exception -> 0x0660 }
            if (r7 == 0) goto L_0x062a
            if (r12 != 0) goto L_0x062a
            if (r13 != 0) goto L_0x062a
            org.telegram.tgnet.TLRPC$TL_messageMediaDice r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaDice     // Catch:{ Exception -> 0x0660 }
            r7.<init>()     // Catch:{ Exception -> 0x0660 }
            r7.emoticon = r1     // Catch:{ Exception -> 0x0660 }
            r9 = -1
            r7.value = r9     // Catch:{ Exception -> 0x0660 }
            r3.media = r7     // Catch:{ Exception -> 0x0660 }
            r21 = 11
            r7 = r11
            r8 = r90
            r13 = r103
            r43 = r2
            r1 = r4
            r2 = r5
            r5 = r14
            r4 = r97
            goto L_0x0efd
        L_0x05fc:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r38 = r115
            r1 = r0
            r14 = r3
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0628:
            r6 = r109
        L_0x062a:
            if (r4 != 0) goto L_0x0634
            org.telegram.tgnet.TLRPC$TL_messageMediaEmpty r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaEmpty     // Catch:{ Exception -> 0x0660 }
            r7.<init>()     // Catch:{ Exception -> 0x0660 }
            r3.media = r7     // Catch:{ Exception -> 0x0660 }
            goto L_0x063f
        L_0x0634:
            org.telegram.tgnet.TLRPC$TL_messageMediaWebPage r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0660 }
            r7.<init>()     // Catch:{ Exception -> 0x0660 }
            r3.media = r7     // Catch:{ Exception -> 0x0660 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r3.media     // Catch:{ Exception -> 0x0660 }
            r7.webpage = r4     // Catch:{ Exception -> 0x0660 }
        L_0x063f:
            if (r5 == 0) goto L_0x064c
            boolean r7 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0660 }
            if (r7 == 0) goto L_0x064c
            r7 = 9
            r21 = r7
            goto L_0x064f
        L_0x064c:
            r7 = 0
            r21 = r7
        L_0x064f:
            r3.message = r1     // Catch:{ Exception -> 0x0660 }
            r8 = r90
            r7 = r92
            r13 = r103
            r43 = r2
            r1 = r4
            r2 = r5
            r5 = r14
            r4 = r97
            goto L_0x0efd
        L_0x0660:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r1 = r0
            r14 = r3
            r15 = r6
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x068b:
            r0 = move-exception
            r4 = r106
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r15 = r109
            r38 = r115
            r1 = r0
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x06ba:
            r4 = r106
            r6 = r109
            r3 = r99
            if (r3 == 0) goto L_0x073a
            if (r12 == 0) goto L_0x06ca
            org.telegram.tgnet.TLRPC$TL_message_secret r7 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x070e }
            r7.<init>()     // Catch:{ Exception -> 0x070e }
            goto L_0x06cf
        L_0x06ca:
            org.telegram.tgnet.TLRPC$TL_message r7 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x070e }
            r7.<init>()     // Catch:{ Exception -> 0x070e }
        L_0x06cf:
            r7.media = r3     // Catch:{ Exception -> 0x06e3 }
            r21 = 10
            r8 = r90
            r13 = r103
            r43 = r2
            r1 = r4
            r2 = r5
            r3 = r7
            r5 = r14
            r7 = r92
            r4 = r97
            goto L_0x0efd
        L_0x06e3:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r1 = r0
            r15 = r6
            r14 = r7
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r3
            goto L_0x43f0
        L_0x070e:
            r0 = move-exception
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r1 = r0
            r15 = r6
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r3
            goto L_0x43f0
        L_0x073a:
            r7 = r93
            if (r7 == 0) goto L_0x07d0
            if (r12 == 0) goto L_0x0746
            org.telegram.tgnet.TLRPC$TL_message_secret r9 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x07a4 }
            r9.<init>()     // Catch:{ Exception -> 0x07a4 }
            goto L_0x074b
        L_0x0746:
            org.telegram.tgnet.TLRPC$TL_message r9 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x07a4 }
            r9.<init>()     // Catch:{ Exception -> 0x07a4 }
        L_0x074b:
            r9.media = r7     // Catch:{ Exception -> 0x0779 }
            if (r5 == 0) goto L_0x0767
            boolean r18 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0779 }
            if (r18 == 0) goto L_0x0767
            r21 = 9
            r8 = r90
            r7 = r92
            r13 = r103
            r43 = r2
            r1 = r4
            r2 = r5
            r3 = r9
            r5 = r14
            r4 = r97
            goto L_0x0efd
        L_0x0767:
            r21 = 1
            r8 = r90
            r7 = r92
            r13 = r103
            r43 = r2
            r1 = r4
            r2 = r5
            r3 = r9
            r5 = r14
            r4 = r97
            goto L_0x0efd
        L_0x0779:
            r0 = move-exception
            r48 = r92
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r29 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r1 = r0
            r15 = r6
            r14 = r9
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r3
            goto L_0x43f0
        L_0x07a4:
            r0 = move-exception
            r48 = r92
            r50 = r94
            r49 = r96
            r24 = r97
            r77 = r1
            r47 = r4
            r29 = r7
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r1 = r0
            r15 = r6
            r34 = r26
            r26 = r32
            r33 = r114
            r32 = r3
            goto L_0x43f0
        L_0x07d0:
            r9 = r94
            r3 = r32
            if (r9 == 0) goto L_0x09b0
            if (r12 == 0) goto L_0x080e
            org.telegram.tgnet.TLRPC$TL_message_secret r32 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x07e2 }
            r32.<init>()     // Catch:{ Exception -> 0x07e2 }
            r18 = r32
            r1 = r18
            goto L_0x0817
        L_0x07e2:
            r0 = move-exception
            r48 = r92
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r33 = r114
            r77 = r1
            r29 = r7
            r50 = r9
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r1 = r0
            r15 = r6
            r34 = r26
            r26 = r3
            goto L_0x43f0
        L_0x080e:
            org.telegram.tgnet.TLRPC$TL_message r32 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0982 }
            r32.<init>()     // Catch:{ Exception -> 0x0982 }
            r18 = r32
            r1 = r18
        L_0x0817:
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0955 }
            r7.<init>()     // Catch:{ Exception -> 0x0955 }
            r1.media = r7     // Catch:{ Exception -> 0x0955 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r1.media     // Catch:{ Exception -> 0x0955 }
            int r13 = r7.flags     // Catch:{ Exception -> 0x0955 }
            r18 = 3
            r13 = r13 | 3
            r7.flags = r13     // Catch:{ Exception -> 0x0955 }
            if (r6 == 0) goto L_0x0858
            r1.entities = r6     // Catch:{ Exception -> 0x082d }
            goto L_0x0858
        L_0x082d:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r33 = r114
            r50 = r9
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r14 = r1
            r15 = r6
            r34 = r26
            r1 = r0
            r26 = r3
            goto L_0x43f0
        L_0x0858:
            r7 = r114
            if (r7 == 0) goto L_0x086c
            org.telegram.tgnet.TLRPC$MessageMedia r13 = r1.media     // Catch:{ Exception -> 0x082d }
            r13.ttl_seconds = r7     // Catch:{ Exception -> 0x082d }
            r1.ttl = r7     // Catch:{ Exception -> 0x082d }
            org.telegram.tgnet.TLRPC$MessageMedia r13 = r1.media     // Catch:{ Exception -> 0x082d }
            int r7 = r13.flags     // Catch:{ Exception -> 0x082d }
            r18 = 4
            r7 = r7 | 4
            r13.flags = r7     // Catch:{ Exception -> 0x082d }
        L_0x086c:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r1.media     // Catch:{ Exception -> 0x0955 }
            r7.photo = r9     // Catch:{ Exception -> 0x0955 }
            if (r5 == 0) goto L_0x087d
            boolean r7 = r5.containsKey(r10)     // Catch:{ Exception -> 0x082d }
            if (r7 == 0) goto L_0x087d
            r7 = 9
            r21 = r7
            goto L_0x0880
        L_0x087d:
            r7 = 2
            r21 = r7
        L_0x0880:
            r13 = r103
            if (r13 == 0) goto L_0x089b
            int r7 = r103.length()     // Catch:{ Exception -> 0x082d }
            if (r7 <= 0) goto L_0x089b
            r7 = r40
            boolean r18 = r13.startsWith(r7)     // Catch:{ Exception -> 0x082d }
            if (r18 == 0) goto L_0x089d
            r1.attachPath = r13     // Catch:{ Exception -> 0x082d }
            r8 = r90
            r32 = r3
            r40 = r7
            goto L_0x08c9
        L_0x089b:
            r7 = r40
        L_0x089d:
            r40 = r7
            java.util.ArrayList r7 = r9.sizes     // Catch:{ Exception -> 0x092a }
            java.util.ArrayList r8 = r9.sizes     // Catch:{ Exception -> 0x092a }
            int r8 = r8.size()     // Catch:{ Exception -> 0x092a }
            r18 = 1
            int r8 = r8 + -1
            java.lang.Object r7 = r7.get(r8)     // Catch:{ Exception -> 0x092a }
            org.telegram.tgnet.TLRPC$PhotoSize r7 = (org.telegram.tgnet.TLRPC.PhotoSize) r7     // Catch:{ Exception -> 0x092a }
            org.telegram.tgnet.TLRPC$FileLocation r7 = r7.location     // Catch:{ Exception -> 0x092a }
            r8 = r90
            int r9 = r8.currentAccount     // Catch:{ Exception -> 0x0900 }
            org.telegram.messenger.FileLoader r9 = org.telegram.messenger.FileLoader.getInstance(r9)     // Catch:{ Exception -> 0x0900 }
            r32 = r3
            r3 = 1
            java.io.File r4 = r9.getPathToAttach(r7, r3)     // Catch:{ Exception -> 0x08d6 }
            java.lang.String r3 = r4.toString()     // Catch:{ Exception -> 0x08d6 }
            r1.attachPath = r3     // Catch:{ Exception -> 0x08d6 }
        L_0x08c9:
            r7 = r92
            r4 = r97
            r3 = r1
            r43 = r2
            r2 = r5
            r5 = r14
            r1 = r106
            goto L_0x0efd
        L_0x08d6:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r47 = r106
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r14 = r1
            r15 = r6
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            r1 = r0
            goto L_0x43f0
        L_0x0900:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r33 = r114
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r14 = r1
            r15 = r6
            r12 = r8
            r34 = r26
            r1 = r0
            r26 = r3
            goto L_0x43f0
        L_0x092a:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r33 = r114
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r14 = r1
            r15 = r6
            r34 = r26
            r1 = r0
            r26 = r3
            goto L_0x43f0
        L_0x0955:
            r0 = move-exception
            r13 = r103
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r33 = r114
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r14 = r1
            r15 = r6
            r34 = r26
            r1 = r0
            r26 = r3
            goto L_0x43f0
        L_0x0982:
            r0 = move-exception
            r13 = r103
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r33 = r114
            r1 = r0
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r12 = r90
            r19 = r95
            r38 = r115
            r15 = r6
            r34 = r26
            r26 = r3
            goto L_0x43f0
        L_0x09b0:
            r8 = r90
            r13 = r103
            r32 = r3
            r9 = r98
            r1 = r114
            if (r9 == 0) goto L_0x0a37
            org.telegram.tgnet.TLRPC$TL_message r3 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0a0c }
            r3.<init>()     // Catch:{ Exception -> 0x0a0c }
            org.telegram.tgnet.TLRPC$TL_messageMediaGame r4 = new org.telegram.tgnet.TLRPC$TL_messageMediaGame     // Catch:{ Exception -> 0x09e2 }
            r4.<init>()     // Catch:{ Exception -> 0x09e2 }
            r3.media = r4     // Catch:{ Exception -> 0x09e2 }
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r3.media     // Catch:{ Exception -> 0x09e2 }
            r4.game = r9     // Catch:{ Exception -> 0x09e2 }
            if (r5 == 0) goto L_0x0a5a
            boolean r4 = r5.containsKey(r10)     // Catch:{ Exception -> 0x09e2 }
            if (r4 == 0) goto L_0x0a5a
            r21 = 9
            r7 = r92
            r4 = r97
            r1 = r106
            r43 = r2
            r2 = r5
            r5 = r14
            goto L_0x0efd
        L_0x09e2:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r47 = r106
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r14 = r3
            r15 = r6
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0a0c:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r47 = r106
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r15 = r6
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0a37:
            r4 = r100
            r7 = r113
            if (r4 == 0) goto L_0x0a66
            org.telegram.tgnet.TLRPC$TL_message r3 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0a0c }
            r3.<init>()     // Catch:{ Exception -> 0x0a0c }
            r3.media = r4     // Catch:{ Exception -> 0x09e2 }
            if (r5 == 0) goto L_0x0a5a
            boolean r18 = r5.containsKey(r10)     // Catch:{ Exception -> 0x09e2 }
            if (r18 == 0) goto L_0x0a5a
            r21 = 9
            r7 = r92
            r4 = r97
            r1 = r106
            r43 = r2
            r2 = r5
            r5 = r14
            goto L_0x0efd
        L_0x0a5a:
            r7 = r92
            r4 = r97
            r1 = r106
            r43 = r2
            r2 = r5
            r5 = r14
            goto L_0x0efd
        L_0x0a66:
            r3 = r96
            if (r3 == 0) goto L_0x0b8f
            if (r12 == 0) goto L_0x0aa1
            org.telegram.tgnet.TLRPC$TL_message_secret r43 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x0a76 }
            r43.<init>()     // Catch:{ Exception -> 0x0a76 }
            r18 = r43
            r4 = r18
            goto L_0x0aaa
        L_0x0a76:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r24 = r97
            r47 = r106
            r49 = r3
            r39 = r12
            r10 = r14
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r15 = r6
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0aa1:
            org.telegram.tgnet.TLRPC$TL_message r43 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0b63 }
            r43.<init>()     // Catch:{ Exception -> 0x0b63 }
            r18 = r43
            r4 = r18
        L_0x0aaa:
            org.telegram.tgnet.TLRPC$TL_messageMediaContact r9 = new org.telegram.tgnet.TLRPC$TL_messageMediaContact     // Catch:{ Exception -> 0x0b38 }
            r9.<init>()     // Catch:{ Exception -> 0x0b38 }
            r4.media = r9     // Catch:{ Exception -> 0x0b38 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r4.media     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r7 = r3.phone     // Catch:{ Exception -> 0x0b38 }
            r9.phone_number = r7     // Catch:{ Exception -> 0x0b38 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r9 = r3.first_name     // Catch:{ Exception -> 0x0b38 }
            r7.first_name = r9     // Catch:{ Exception -> 0x0b38 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r9 = r3.last_name     // Catch:{ Exception -> 0x0b38 }
            r7.last_name = r9     // Catch:{ Exception -> 0x0b38 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            long r14 = r3.id     // Catch:{ Exception -> 0x0b38 }
            r7.user_id = r14     // Catch:{ Exception -> 0x0b38 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r7 = r3.restriction_reason     // Catch:{ Exception -> 0x0b38 }
            boolean r7 = r7.isEmpty()     // Catch:{ Exception -> 0x0b38 }
            if (r7 != 0) goto L_0x0af4
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r7 = r3.restriction_reason     // Catch:{ Exception -> 0x0b38 }
            r9 = 0
            java.lang.Object r7 = r7.get(r9)     // Catch:{ Exception -> 0x0b38 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r7 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r7     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r7 = r7.text     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r9 = "BEGIN:VCARD"
            boolean r7 = r7.startsWith(r9)     // Catch:{ Exception -> 0x0b38 }
            if (r7 == 0) goto L_0x0af4
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r9 = r3.restriction_reason     // Catch:{ Exception -> 0x0b38 }
            r14 = 0
            java.lang.Object r9 = r9.get(r14)     // Catch:{ Exception -> 0x0b38 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r9 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r9     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r9 = r9.text     // Catch:{ Exception -> 0x0b38 }
            r7.vcard = r9     // Catch:{ Exception -> 0x0b38 }
            goto L_0x0af8
        L_0x0af4:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            r7.vcard = r11     // Catch:{ Exception -> 0x0b38 }
        L_0x0af8:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r7 = r7.first_name     // Catch:{ Exception -> 0x0b38 }
            if (r7 != 0) goto L_0x0b04
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            r7.first_name = r11     // Catch:{ Exception -> 0x0b38 }
            r3.first_name = r11     // Catch:{ Exception -> 0x0b38 }
        L_0x0b04:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            java.lang.String r7 = r7.last_name     // Catch:{ Exception -> 0x0b38 }
            if (r7 != 0) goto L_0x0b10
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r4.media     // Catch:{ Exception -> 0x0b38 }
            r7.last_name = r11     // Catch:{ Exception -> 0x0b38 }
            r3.last_name = r11     // Catch:{ Exception -> 0x0b38 }
        L_0x0b10:
            if (r5 == 0) goto L_0x0b28
            boolean r7 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0b38 }
            if (r7 == 0) goto L_0x0b28
            r21 = 9
            r7 = r92
            r1 = r106
            r43 = r2
            r3 = r4
            r2 = r5
            r4 = r97
            r5 = r101
            goto L_0x0efd
        L_0x0b28:
            r21 = 6
            r7 = r92
            r1 = r106
            r43 = r2
            r3 = r4
            r2 = r5
            r4 = r97
            r5 = r101
            goto L_0x0efd
        L_0x0b38:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r24 = r97
            r10 = r101
            r47 = r106
            r49 = r3
            r14 = r4
            r15 = r6
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0b63:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r24 = r97
            r10 = r101
            r47 = r106
            r49 = r3
            r15 = r6
            r39 = r12
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0b8f:
            r4 = r97
            if (r4 == 0) goto L_0x0ef1
            if (r12 == 0) goto L_0x0bc7
            org.telegram.tgnet.TLRPC$TL_message_secret r7 = new org.telegram.tgnet.TLRPC$TL_message_secret     // Catch:{ Exception -> 0x0b9b }
            r7.<init>()     // Catch:{ Exception -> 0x0b9b }
            goto L_0x0bcc
        L_0x0b9b:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r10 = r101
            r47 = r106
            r49 = r3
            r24 = r4
            r15 = r6
            r39 = r12
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0bc7:
            org.telegram.tgnet.TLRPC$TL_message r7 = new org.telegram.tgnet.TLRPC$TL_message     // Catch:{ Exception -> 0x0ec2 }
            r7.<init>()     // Catch:{ Exception -> 0x0ec2 }
        L_0x0bcc:
            boolean r9 = org.telegram.messenger.DialogObject.isChatDialog(r101)     // Catch:{ Exception -> 0x0e94 }
            if (r9 == 0) goto L_0x0c1d
            if (r2 != 0) goto L_0x0c1d
            r9 = 0
            java.util.ArrayList r14 = r4.attributes     // Catch:{ Exception -> 0x0bf2 }
            int r14 = r14.size()     // Catch:{ Exception -> 0x0bf2 }
        L_0x0bdb:
            if (r9 >= r14) goto L_0x0c1d
            java.util.ArrayList r15 = r4.attributes     // Catch:{ Exception -> 0x0bf2 }
            java.lang.Object r15 = r15.get(r9)     // Catch:{ Exception -> 0x0bf2 }
            boolean r15 = r15 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeAnimated     // Catch:{ Exception -> 0x0bf2 }
            if (r15 == 0) goto L_0x0bef
            java.util.ArrayList r15 = r4.attributes     // Catch:{ Exception -> 0x0bf2 }
            r15.remove(r9)     // Catch:{ Exception -> 0x0bf2 }
            r23 = 1
            goto L_0x0c1d
        L_0x0bef:
            int r9 = r9 + 1
            goto L_0x0bdb
        L_0x0bf2:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r10 = r101
            r47 = r106
            r49 = r3
            r24 = r4
            r15 = r6
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0c1d:
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r9 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0e94 }
            r9.<init>()     // Catch:{ Exception -> 0x0e94 }
            r7.media = r9     // Catch:{ Exception -> 0x0e94 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r7.media     // Catch:{ Exception -> 0x0e94 }
            int r14 = r9.flags     // Catch:{ Exception -> 0x0e94 }
            r15 = 3
            r14 = r14 | r15
            r9.flags = r14     // Catch:{ Exception -> 0x0e94 }
            if (r1 == 0) goto L_0x0c3c
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r7.media     // Catch:{ Exception -> 0x0bf2 }
            r9.ttl_seconds = r1     // Catch:{ Exception -> 0x0bf2 }
            r7.ttl = r1     // Catch:{ Exception -> 0x0bf2 }
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r7.media     // Catch:{ Exception -> 0x0bf2 }
            int r14 = r9.flags     // Catch:{ Exception -> 0x0bf2 }
            r15 = 4
            r14 = r14 | r15
            r9.flags = r14     // Catch:{ Exception -> 0x0bf2 }
        L_0x0c3c:
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r7.media     // Catch:{ Exception -> 0x0e94 }
            r9.document = r4     // Catch:{ Exception -> 0x0e94 }
            if (r5 == 0) goto L_0x0c4d
            boolean r9 = r5.containsKey(r10)     // Catch:{ Exception -> 0x0bf2 }
            if (r9 == 0) goto L_0x0c4d
            r9 = 9
            r21 = r9
            goto L_0x0CLASSNAME
        L_0x0c4d:
            boolean r9 = org.telegram.messenger.MessageObject.isVideoSticker(r97)     // Catch:{ Exception -> 0x0e94 }
            if (r9 != 0) goto L_0x0CLASSNAME
            boolean r9 = org.telegram.messenger.MessageObject.isVideoDocument(r97)     // Catch:{ Exception -> 0x0bf2 }
            if (r9 != 0) goto L_0x0CLASSNAME
            boolean r9 = org.telegram.messenger.MessageObject.isRoundVideoDocument(r97)     // Catch:{ Exception -> 0x0bf2 }
            if (r9 != 0) goto L_0x0CLASSNAME
            if (r95 == 0) goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r9 = 3
            r21 = r9
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            boolean r9 = org.telegram.messenger.MessageObject.isVoiceDocument(r97)     // Catch:{ Exception -> 0x0e94 }
            if (r9 == 0) goto L_0x0CLASSNAME
            r9 = 8
            r21 = r9
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r9 = 7
            r21 = r9
        L_0x0CLASSNAME:
            if (r95 == 0) goto L_0x0CLASSNAME
            java.lang.String r9 = r95.getString()     // Catch:{ Exception -> 0x0bf2 }
            if (r5 != 0) goto L_0x0CLASSNAME
            java.util.HashMap r14 = new java.util.HashMap     // Catch:{ Exception -> 0x0bf2 }
            r14.<init>()     // Catch:{ Exception -> 0x0bf2 }
            r5 = r14
        L_0x0CLASSNAME:
            java.lang.String r14 = "ve"
            r5.put(r14, r9)     // Catch:{ Exception -> 0x0caa }
        L_0x0CLASSNAME:
            if (r12 == 0) goto L_0x0cd5
            int r9 = r4.dc_id     // Catch:{ Exception -> 0x0caa }
            if (r9 <= 0) goto L_0x0cd5
            boolean r9 = org.telegram.messenger.MessageObject.isStickerDocument(r97)     // Catch:{ Exception -> 0x0caa }
            if (r9 != 0) goto L_0x0cd5
            r9 = 1
            boolean r14 = org.telegram.messenger.MessageObject.isAnimatedStickerDocument(r4, r9)     // Catch:{ Exception -> 0x0caa }
            if (r14 != 0) goto L_0x0cd5
            int r9 = r8.currentAccount     // Catch:{ Exception -> 0x0caa }
            org.telegram.messenger.FileLoader r9 = org.telegram.messenger.FileLoader.getInstance(r9)     // Catch:{ Exception -> 0x0caa }
            java.io.File r9 = r9.getPathToAttach(r4)     // Catch:{ Exception -> 0x0caa }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x0caa }
            r7.attachPath = r9     // Catch:{ Exception -> 0x0caa }
            goto L_0x0cd7
        L_0x0caa:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r10 = r101
            r47 = r106
            r49 = r3
            r24 = r4
            r15 = r6
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r1
            r1 = r0
            goto L_0x43f0
        L_0x0cd5:
            r7.attachPath = r13     // Catch:{ Exception -> 0x0e66 }
        L_0x0cd7:
            if (r12 == 0) goto L_0x0e57
            boolean r9 = org.telegram.messenger.MessageObject.isStickerDocument(r97)     // Catch:{ Exception -> 0x0e66 }
            if (r9 != 0) goto L_0x0cef
            r9 = 1
            boolean r14 = org.telegram.messenger.MessageObject.isAnimatedStickerDocument(r4, r9)     // Catch:{ Exception -> 0x0caa }
            if (r14 == 0) goto L_0x0ce7
            goto L_0x0cef
        L_0x0ce7:
            r43 = r2
            r111 = r5
            r5 = r101
            goto L_0x0e5d
        L_0x0cef:
            r9 = 0
        L_0x0cf0:
            java.util.ArrayList r14 = r4.attributes     // Catch:{ Exception -> 0x0e66 }
            int r14 = r14.size()     // Catch:{ Exception -> 0x0e66 }
            if (r9 >= r14) goto L_0x0e50
            java.util.ArrayList r14 = r4.attributes     // Catch:{ Exception -> 0x0e66 }
            java.lang.Object r14 = r14.get(r9)     // Catch:{ Exception -> 0x0e66 }
            org.telegram.tgnet.TLRPC$DocumentAttribute r14 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r14     // Catch:{ Exception -> 0x0e66 }
            boolean r15 = r14 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeSticker     // Catch:{ Exception -> 0x0e66 }
            if (r15 == 0) goto L_0x0e3e
            java.util.ArrayList r15 = r4.attributes     // Catch:{ Exception -> 0x0e66 }
            r15.remove(r9)     // Catch:{ Exception -> 0x0e66 }
            org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55 r15 = new org.telegram.tgnet.TLRPC$TL_documentAttributeSticker_layer55     // Catch:{ Exception -> 0x0e66 }
            r15.<init>()     // Catch:{ Exception -> 0x0e66 }
            java.util.ArrayList r1 = r4.attributes     // Catch:{ Exception -> 0x0e66 }
            r1.add(r15)     // Catch:{ Exception -> 0x0e66 }
            java.lang.String r1 = r14.alt     // Catch:{ Exception -> 0x0e66 }
            r15.alt = r1     // Catch:{ Exception -> 0x0e66 }
            org.telegram.tgnet.TLRPC$InputStickerSet r1 = r14.stickerset     // Catch:{ Exception -> 0x0e66 }
            if (r1 == 0) goto L_0x0e03
            org.telegram.tgnet.TLRPC$InputStickerSet r1 = r14.stickerset     // Catch:{ Exception -> 0x0e66 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName     // Catch:{ Exception -> 0x0e66 }
            if (r1 == 0) goto L_0x0d53
            org.telegram.tgnet.TLRPC$InputStickerSet r1 = r14.stickerset     // Catch:{ Exception -> 0x0d28 }
            java.lang.String r1 = r1.short_name     // Catch:{ Exception -> 0x0d28 }
            r43 = r2
            goto L_0x0d61
        L_0x0d28:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r10 = r101
            r47 = r106
            r1 = r0
            r49 = r3
            r24 = r4
            r15 = r6
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0d53:
            org.telegram.messenger.MediaDataController r1 = r90.getMediaDataController()     // Catch:{ Exception -> 0x0e66 }
            r43 = r2
            org.telegram.tgnet.TLRPC$InputStickerSet r2 = r14.stickerset     // Catch:{ Exception -> 0x0e66 }
            long r2 = r2.id     // Catch:{ Exception -> 0x0e66 }
            java.lang.String r1 = r1.getStickerSetName(r2)     // Catch:{ Exception -> 0x0e66 }
        L_0x0d61:
            boolean r2 = android.text.TextUtils.isEmpty(r1)     // Catch:{ Exception -> 0x0e66 }
            if (r2 != 0) goto L_0x0da3
            org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName r2 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetShortName     // Catch:{ Exception -> 0x0d78 }
            r2.<init>()     // Catch:{ Exception -> 0x0d78 }
            r15.stickerset = r2     // Catch:{ Exception -> 0x0d78 }
            org.telegram.tgnet.TLRPC$InputStickerSet r2 = r15.stickerset     // Catch:{ Exception -> 0x0d78 }
            r2.short_name = r1     // Catch:{ Exception -> 0x0d78 }
            r111 = r5
            r5 = r101
            goto L_0x0dfa
        L_0x0d78:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r10 = r101
            r47 = r106
            r1 = r0
            r24 = r4
            r15 = r6
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0da3:
            org.telegram.tgnet.TLRPC$InputStickerSet r2 = r14.stickerset     // Catch:{ Exception -> 0x0e66 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_inputStickerSetID     // Catch:{ Exception -> 0x0e66 }
            if (r2 == 0) goto L_0x0def
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r2 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x0e66 }
            r111 = r5
            r5 = r101
            r2.<init>(r5)     // Catch:{ Exception -> 0x0e11 }
            r2.encryptedChat = r12     // Catch:{ Exception -> 0x0dc0 }
            r2.locationParent = r15     // Catch:{ Exception -> 0x0dc0 }
            r3 = 5
            r2.type = r3     // Catch:{ Exception -> 0x0dc0 }
            org.telegram.tgnet.TLRPC$InputStickerSet r3 = r14.stickerset     // Catch:{ Exception -> 0x0dc0 }
            r2.parentObject = r3     // Catch:{ Exception -> 0x0dc0 }
            r20 = r2
            goto L_0x0df3
        L_0x0dc0:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r47 = r106
            r15 = r109
            r1 = r0
            r20 = r2
            r24 = r4
            r10 = r5
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r5 = r111
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0def:
            r111 = r5
            r5 = r101
        L_0x0df3:
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r2 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty     // Catch:{ Exception -> 0x0e11 }
            r2.<init>()     // Catch:{ Exception -> 0x0e11 }
            r15.stickerset = r2     // Catch:{ Exception -> 0x0e11 }
        L_0x0dfa:
            r1 = r106
            r2 = r111
            r3 = r7
            r7 = r92
            goto L_0x0efd
        L_0x0e03:
            r43 = r2
            r111 = r5
            r5 = r101
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r1 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty     // Catch:{ Exception -> 0x0e11 }
            r1.<init>()     // Catch:{ Exception -> 0x0e11 }
            r15.stickerset = r1     // Catch:{ Exception -> 0x0e11 }
            goto L_0x0e5d
        L_0x0e11:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r47 = r106
            r15 = r109
            r1 = r0
            r24 = r4
            r10 = r5
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r5 = r111
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0e3e:
            r43 = r2
            r111 = r5
            r5 = r101
            int r9 = r9 + 1
            r3 = r96
            r6 = r109
            r5 = r111
            r1 = r114
            goto L_0x0cf0
        L_0x0e50:
            r43 = r2
            r111 = r5
            r5 = r101
            goto L_0x0e5d
        L_0x0e57:
            r43 = r2
            r111 = r5
            r5 = r101
        L_0x0e5d:
            r1 = r106
            r2 = r111
            r3 = r7
            r7 = r92
            goto L_0x0efd
        L_0x0e66:
            r0 = move-exception
            r111 = r5
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r10 = r101
            r47 = r106
            r15 = r109
            r1 = r0
            r24 = r4
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0e94:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r10 = r101
            r47 = r106
            r15 = r109
            r5 = r111
            r1 = r0
            r24 = r4
            r14 = r7
            r39 = r12
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0ec2:
            r0 = move-exception
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r10 = r101
            r47 = r106
            r15 = r109
            r5 = r111
            r1 = r0
            r24 = r4
            r39 = r12
            r14 = r18
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            goto L_0x43f0
        L_0x0ef1:
            r5 = r101
            r43 = r2
            r7 = r92
            r1 = r106
            r2 = r111
            r3 = r18
        L_0x0efd:
            r14 = r5
            r5 = r109
            if (r5 == 0) goto L_0x0f3c
            boolean r6 = r109.isEmpty()     // Catch:{ Exception -> 0x0var_ }
            if (r6 != 0) goto L_0x0f3c
            r3.entities = r5     // Catch:{ Exception -> 0x0var_ }
            int r6 = r3.flags     // Catch:{ Exception -> 0x0var_ }
            r6 = r6 | 128(0x80, float:1.794E-43)
            r3.flags = r6     // Catch:{ Exception -> 0x0var_ }
            goto L_0x0f3c
        L_0x0var_:
            r0 = move-exception
            r77 = r91
            r29 = r93
            r50 = r94
            r49 = r96
            r47 = r1
            r24 = r4
            r48 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r1 = r0
            r14 = r3
            r15 = r5
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r33 = r114
            r5 = r2
            goto L_0x43f0
        L_0x0f3c:
            if (r7 == 0) goto L_0x0var_
            r3.message = r7     // Catch:{ Exception -> 0x0var_ }
            goto L_0x0var_
        L_0x0var_:
            java.lang.String r6 = r3.message     // Catch:{ Exception -> 0x4394 }
            if (r6 != 0) goto L_0x0var_
            r3.message = r11     // Catch:{ Exception -> 0x0var_ }
        L_0x0var_:
            java.lang.String r6 = r3.attachPath     // Catch:{ Exception -> 0x4394 }
            if (r6 != 0) goto L_0x0f4d
            r3.attachPath = r11     // Catch:{ Exception -> 0x0var_ }
        L_0x0f4d:
            org.telegram.messenger.UserConfig r6 = r90.getUserConfig()     // Catch:{ Exception -> 0x4394 }
            int r6 = r6.getNewMessageId()     // Catch:{ Exception -> 0x4394 }
            r3.id = r6     // Catch:{ Exception -> 0x4394 }
            r3.local_id = r6     // Catch:{ Exception -> 0x4394 }
            r6 = 1
            r3.out = r6     // Catch:{ Exception -> 0x4394 }
            if (r22 == 0) goto L_0x0fd7
            if (r35 == 0) goto L_0x0fd7
            org.telegram.tgnet.TLRPC$TL_peerChannel r6 = new org.telegram.tgnet.TLRPC$TL_peerChannel     // Catch:{ Exception -> 0x0fa7 }
            r6.<init>()     // Catch:{ Exception -> 0x0fa7 }
            r3.from_id = r6     // Catch:{ Exception -> 0x0fa7 }
            org.telegram.tgnet.TLRPC$Peer r6 = r3.from_id     // Catch:{ Exception -> 0x0fa7 }
            r92 = r1
            r106 = r2
            r9 = r35
            long r1 = r9.channel_id     // Catch:{ Exception -> 0x0f7b }
            r6.channel_id = r1     // Catch:{ Exception -> 0x0f7b }
            r2 = r30
            r4 = r32
            r6 = r38
            goto L_0x106b
        L_0x0f7b:
            r0 = move-exception
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r1 = r0
            r24 = r4
            r48 = r7
            r28 = r9
            r39 = r12
            r10 = r14
            r13 = r19
            r34 = r26
            r26 = r32
            r31 = r38
            r19 = r95
            r32 = r99
            r33 = r114
            r38 = r115
            r14 = r3
            r15 = r5
            r12 = r8
            r5 = r106
            goto L_0x43f0
        L_0x0fa7:
            r0 = move-exception
            r92 = r1
            r106 = r2
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r1 = r0
            r24 = r4
            r48 = r7
            r39 = r12
            r10 = r14
            r13 = r19
            r28 = r35
            r31 = r38
            r19 = r95
            r38 = r115
            r14 = r3
            r15 = r5
            r12 = r8
            r34 = r26
            r26 = r32
            r32 = r99
            r5 = r106
            r33 = r114
            goto L_0x43f0
        L_0x0fd7:
            r92 = r1
            r106 = r2
            r9 = r35
            if (r38 == 0) goto L_0x1054
            r6 = r38
            r3.from_id = r6     // Catch:{ Exception -> 0x1028 }
            if (r30 == 0) goto L_0x1023
            r2 = r30
            r3.post_author = r2     // Catch:{ Exception -> 0x0ff5 }
            int r1 = r3.flags     // Catch:{ Exception -> 0x0ff5 }
            r18 = 65536(0x10000, float:9.18355E-41)
            r1 = r1 | r18
            r3.flags = r1     // Catch:{ Exception -> 0x0ff5 }
            r4 = r32
            goto L_0x106b
        L_0x0ff5:
            r0 = move-exception
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r38 = r115
            r1 = r0
            r30 = r2
            r24 = r4
            r31 = r6
            r48 = r7
            r28 = r9
            r39 = r12
            r10 = r14
            r13 = r19
            r34 = r26
            r26 = r32
            r19 = r95
            r32 = r99
            r33 = r114
            r14 = r3
            r15 = r5
            r12 = r8
            r5 = r106
            goto L_0x43f0
        L_0x1023:
            r2 = r30
            r4 = r32
            goto L_0x106b
        L_0x1028:
            r0 = move-exception
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r38 = r115
            r1 = r0
            r24 = r4
            r31 = r6
            r48 = r7
            r28 = r9
            r39 = r12
            r10 = r14
            r13 = r19
            r34 = r26
            r26 = r32
            r19 = r95
            r32 = r99
            r33 = r114
            r14 = r3
            r15 = r5
            r12 = r8
            r5 = r106
            goto L_0x43f0
        L_0x1054:
            r2 = r30
            r6 = r38
            org.telegram.tgnet.TLRPC$TL_peerUser r1 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x4366 }
            r1.<init>()     // Catch:{ Exception -> 0x4366 }
            r3.from_id = r1     // Catch:{ Exception -> 0x4366 }
            org.telegram.tgnet.TLRPC$Peer r1 = r3.from_id     // Catch:{ Exception -> 0x4366 }
            r4 = r32
            r1.user_id = r4     // Catch:{ Exception -> 0x4337 }
            int r1 = r3.flags     // Catch:{ Exception -> 0x4337 }
            r1 = r1 | 256(0x100, float:3.59E-43)
            r3.flags = r1     // Catch:{ Exception -> 0x4337 }
        L_0x106b:
            org.telegram.messenger.UserConfig r1 = r90.getUserConfig()     // Catch:{ Exception -> 0x4337 }
            r30 = r2
            r2 = 0
            r1.saveConfig(r2)     // Catch:{ Exception -> 0x430a }
            r47 = r92
            r2 = r94
            r1 = r96
            r45 = r97
            r46 = r99
            r13 = r114
            r38 = r6
            r48 = r7
            r32 = r10
            r7 = r21
            r92 = r91
            r6 = r106
            r91 = r115
            r10 = r3
            r3 = r93
        L_0x1092:
            r93 = r7
            r7 = r112
            if (r7 == 0) goto L_0x1121
            r94 = r1
            int r1 = r8.currentAccount     // Catch:{ Exception -> 0x10f0 }
            android.content.SharedPreferences r1 = org.telegram.messenger.MessagesController.getNotificationsSettings(r1)     // Catch:{ Exception -> 0x10f0 }
            r96 = r2
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x10c1 }
            r2.<init>()     // Catch:{ Exception -> 0x10c1 }
            r97 = r3
            java.lang.String r3 = "silent_"
            r2.append(r3)     // Catch:{ Exception -> 0x1137 }
            r2.append(r14)     // Catch:{ Exception -> 0x1137 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x1137 }
            r3 = 0
            boolean r1 = r1.getBoolean(r2, r3)     // Catch:{ Exception -> 0x1137 }
            if (r1 == 0) goto L_0x10be
            goto L_0x1127
        L_0x10be:
            r1 = 0
            goto L_0x1128
        L_0x10c1:
            r0 = move-exception
            r97 = r3
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r5 = r6
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x10f0:
            r0 = move-exception
            r96 = r2
            r97 = r3
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r5 = r6
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1121:
            r94 = r1
            r96 = r2
            r97 = r3
        L_0x1127:
            r1 = 1
        L_0x1128:
            r10.silent = r1     // Catch:{ Exception -> 0x42d2 }
            long r1 = r10.random_id     // Catch:{ Exception -> 0x42d2 }
            int r3 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r3 != 0) goto L_0x1164
            long r1 = r90.getNextRandomId()     // Catch:{ Exception -> 0x1137 }
            r10.random_id = r1     // Catch:{ Exception -> 0x1137 }
            goto L_0x1164
        L_0x1137:
            r0 = move-exception
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r5 = r6
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1164:
            java.lang.String r3 = "bot"
            java.lang.String r2 = "bot_name"
            if (r6 == 0) goto L_0x11a0
            boolean r1 = r6.containsKey(r3)     // Catch:{ Exception -> 0x1137 }
            if (r1 == 0) goto L_0x11a0
            if (r12 == 0) goto L_0x1186
            java.lang.Object r1 = r6.get(r2)     // Catch:{ Exception -> 0x1137 }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x1137 }
            r10.via_bot_name = r1     // Catch:{ Exception -> 0x1137 }
            java.lang.String r1 = r10.via_bot_name     // Catch:{ Exception -> 0x1137 }
            if (r1 != 0) goto L_0x1183
            r10.via_bot_name = r11     // Catch:{ Exception -> 0x1137 }
            r99 = r2
            goto L_0x1199
        L_0x1183:
            r99 = r2
            goto L_0x1199
        L_0x1186:
            java.lang.Object r1 = r6.get(r3)     // Catch:{ Exception -> 0x1137 }
            java.lang.CharSequence r1 = (java.lang.CharSequence) r1     // Catch:{ Exception -> 0x1137 }
            java.lang.Integer r1 = org.telegram.messenger.Utilities.parseInt((java.lang.CharSequence) r1)     // Catch:{ Exception -> 0x1137 }
            int r1 = r1.intValue()     // Catch:{ Exception -> 0x1137 }
            r99 = r2
            long r1 = (long) r1     // Catch:{ Exception -> 0x1137 }
            r10.via_bot_id = r1     // Catch:{ Exception -> 0x1137 }
        L_0x1199:
            int r1 = r10.flags     // Catch:{ Exception -> 0x1137 }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r10.flags = r1     // Catch:{ Exception -> 0x1137 }
            goto L_0x11a2
        L_0x11a0:
            r99 = r2
        L_0x11a2:
            r10.params = r6     // Catch:{ Exception -> 0x42d2 }
            r1 = r108
            if (r1 == 0) goto L_0x11b0
            boolean r2 = r1.resendAsIs     // Catch:{ Exception -> 0x1137 }
            if (r2 != 0) goto L_0x11ad
            goto L_0x11b0
        L_0x11ad:
            r106 = r3
            goto L_0x1205
        L_0x11b0:
            r2 = r113
            if (r2 == 0) goto L_0x11b6
            r1 = r2
            goto L_0x11c0
        L_0x11b6:
            org.telegram.tgnet.ConnectionsManager r18 = r90.getConnectionsManager()     // Catch:{ Exception -> 0x42d2 }
            int r18 = r18.getCurrentTime()     // Catch:{ Exception -> 0x42d2 }
            r1 = r18
        L_0x11c0:
            r10.date = r1     // Catch:{ Exception -> 0x42d2 }
            boolean r1 = r9 instanceof org.telegram.tgnet.TLRPC.TL_inputPeerChannel     // Catch:{ Exception -> 0x42d2 }
            if (r1 == 0) goto L_0x1200
            if (r2 != 0) goto L_0x11d3
            if (r22 == 0) goto L_0x11d3
            r1 = 1
            r10.views = r1     // Catch:{ Exception -> 0x1137 }
            int r1 = r10.flags     // Catch:{ Exception -> 0x1137 }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r10.flags = r1     // Catch:{ Exception -> 0x1137 }
        L_0x11d3:
            org.telegram.messenger.MessagesController r1 = r90.getMessagesController()     // Catch:{ Exception -> 0x1137 }
            r106 = r3
            long r2 = r9.channel_id     // Catch:{ Exception -> 0x1137 }
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x1137 }
            org.telegram.tgnet.TLRPC$Chat r1 = r1.getChat(r2)     // Catch:{ Exception -> 0x1137 }
            if (r1 == 0) goto L_0x11ff
            boolean r2 = r1.megagroup     // Catch:{ Exception -> 0x1137 }
            if (r2 == 0) goto L_0x11ed
            r2 = 1
            r10.unread = r2     // Catch:{ Exception -> 0x1137 }
            goto L_0x11ff
        L_0x11ed:
            r2 = 1
            r10.post = r2     // Catch:{ Exception -> 0x1137 }
            boolean r2 = r1.signatures     // Catch:{ Exception -> 0x1137 }
            if (r2 == 0) goto L_0x11ff
            org.telegram.tgnet.TLRPC$TL_peerUser r2 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x1137 }
            r2.<init>()     // Catch:{ Exception -> 0x1137 }
            r10.from_id = r2     // Catch:{ Exception -> 0x1137 }
            org.telegram.tgnet.TLRPC$Peer r2 = r10.from_id     // Catch:{ Exception -> 0x1137 }
            r2.user_id = r4     // Catch:{ Exception -> 0x1137 }
        L_0x11ff:
            goto L_0x1205
        L_0x1200:
            r106 = r3
            r1 = 1
            r10.unread = r1     // Catch:{ Exception -> 0x42d2 }
        L_0x1205:
            int r1 = r10.flags     // Catch:{ Exception -> 0x42d2 }
            r1 = r1 | 512(0x200, float:7.175E-43)
            r10.flags = r1     // Catch:{ Exception -> 0x42d2 }
            r10.dialog_id = r14     // Catch:{ Exception -> 0x42d2 }
            r3 = r104
            r2 = r109
            if (r3 == 0) goto L_0x1300
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = new org.telegram.tgnet.TLRPC$TL_messageReplyHeader     // Catch:{ Exception -> 0x12cc }
            r1.<init>()     // Catch:{ Exception -> 0x12cc }
            r10.reply_to = r1     // Catch:{ Exception -> 0x12cc }
            if (r12 == 0) goto L_0x1269
            org.telegram.tgnet.TLRPC$Message r1 = r3.messageOwner     // Catch:{ Exception -> 0x1264 }
            long r1 = r1.random_id     // Catch:{ Exception -> 0x1264 }
            int r18 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r18 == 0) goto L_0x1269
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1264 }
            org.telegram.tgnet.TLRPC$Message r2 = r3.messageOwner     // Catch:{ Exception -> 0x1264 }
            r111 = r6
            long r6 = r2.random_id     // Catch:{ Exception -> 0x1236 }
            r1.reply_to_random_id = r6     // Catch:{ Exception -> 0x1236 }
            int r1 = r10.flags     // Catch:{ Exception -> 0x1236 }
            r2 = 8
            r1 = r1 | r2
            r10.flags = r1     // Catch:{ Exception -> 0x1236 }
            goto L_0x1272
        L_0x1236:
            r0 = move-exception
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r12 = r8
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1264:
            r0 = move-exception
            r111 = r6
            goto L_0x12d3
        L_0x1269:
            r111 = r6
            int r1 = r10.flags     // Catch:{ Exception -> 0x129a }
            r2 = 8
            r1 = r1 | r2
            r10.flags = r1     // Catch:{ Exception -> 0x129a }
        L_0x1272:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x129a }
            int r2 = r104.getId()     // Catch:{ Exception -> 0x129a }
            r1.reply_to_msg_id = r2     // Catch:{ Exception -> 0x129a }
            r7 = r105
            r6 = r108
            if (r7 == 0) goto L_0x1296
            if (r7 == r3) goto L_0x1296
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1236 }
            int r2 = r105.getId()     // Catch:{ Exception -> 0x1236 }
            r1.reply_to_top_id = r2     // Catch:{ Exception -> 0x1236 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1236 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1236 }
            r18 = 2
            r2 = r2 | 2
            r1.flags = r2     // Catch:{ Exception -> 0x1236 }
            goto L_0x1308
        L_0x1296:
            r18 = 2
            goto L_0x1308
        L_0x129a:
            r0 = move-exception
            r7 = r105
            r6 = r108
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r12 = r8
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x12cc:
            r0 = move-exception
            r7 = r105
            r111 = r6
            r6 = r108
        L_0x12d3:
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r12 = r8
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1300:
            r7 = r105
            r111 = r6
            r18 = 2
            r6 = r108
        L_0x1308:
            int r1 = (r26 > r16 ? 1 : (r26 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x135e
            org.telegram.tgnet.TLRPC$TL_messageReplies r1 = new org.telegram.tgnet.TLRPC$TL_messageReplies     // Catch:{ Exception -> 0x1330 }
            r1.<init>()     // Catch:{ Exception -> 0x1330 }
            r10.replies = r1     // Catch:{ Exception -> 0x1330 }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r10.replies     // Catch:{ Exception -> 0x1330 }
            r2 = 1
            r1.comments = r2     // Catch:{ Exception -> 0x1330 }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r10.replies     // Catch:{ Exception -> 0x1330 }
            r6 = r26
            r1.channel_id = r6     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r10.replies     // Catch:{ Exception -> 0x136f }
            int r2 = r1.flags     // Catch:{ Exception -> 0x136f }
            r21 = 1
            r2 = r2 | 1
            r1.flags = r2     // Catch:{ Exception -> 0x136f }
            int r1 = r10.flags     // Catch:{ Exception -> 0x136f }
            r2 = 8388608(0x800000, float:1.17549435E-38)
            r1 = r1 | r2
            r10.flags = r1     // Catch:{ Exception -> 0x136f }
            goto L_0x1360
        L_0x1330:
            r0 = move-exception
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r26 = r4
            r12 = r8
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x135e:
            r6 = r26
        L_0x1360:
            r2 = r110
            if (r2 == 0) goto L_0x139d
            if (r12 != 0) goto L_0x139d
            int r1 = r10.flags     // Catch:{ Exception -> 0x136f }
            r1 = r1 | 64
            r10.flags = r1     // Catch:{ Exception -> 0x136f }
            r10.reply_markup = r2     // Catch:{ Exception -> 0x136f }
            goto L_0x139d
        L_0x136f:
            r0 = move-exception
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r26 = r4
            r34 = r6
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r5 = r111
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x139d:
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r101)     // Catch:{ Exception -> 0x4299 }
            if (r1 != 0) goto L_0x13d5
            org.telegram.messenger.MessagesController r1 = r90.getMessagesController()     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$Peer r1 = r1.getPeer(r14)     // Catch:{ Exception -> 0x136f }
            r10.peer_id = r1     // Catch:{ Exception -> 0x136f }
            boolean r1 = org.telegram.messenger.DialogObject.isUserDialog(r101)     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x13d2
            org.telegram.messenger.MessagesController r1 = r90.getMessagesController()     // Catch:{ Exception -> 0x136f }
            java.lang.Long r2 = java.lang.Long.valueOf(r101)     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$User r1 = r1.getUser(r2)     // Catch:{ Exception -> 0x136f }
            if (r1 != 0) goto L_0x13c7
            int r2 = r10.id     // Catch:{ Exception -> 0x136f }
            r8.processSentMessage(r2)     // Catch:{ Exception -> 0x136f }
            return
        L_0x13c7:
            boolean r2 = r1.bot     // Catch:{ Exception -> 0x136f }
            if (r2 == 0) goto L_0x13cf
            r2 = 0
            r10.unread = r2     // Catch:{ Exception -> 0x136f }
            goto L_0x13d0
        L_0x13cf:
            r2 = 0
        L_0x13d0:
            goto L_0x1496
        L_0x13d2:
            r2 = 0
            goto L_0x1496
        L_0x13d5:
            r2 = 0
            org.telegram.tgnet.TLRPC$TL_peerUser r1 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x4299 }
            r1.<init>()     // Catch:{ Exception -> 0x4299 }
            r10.peer_id = r1     // Catch:{ Exception -> 0x4299 }
            long r2 = r12.participant_id     // Catch:{ Exception -> 0x4299 }
            int r1 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r1 != 0) goto L_0x13ea
            org.telegram.tgnet.TLRPC$Peer r1 = r10.peer_id     // Catch:{ Exception -> 0x136f }
            long r2 = r12.admin_id     // Catch:{ Exception -> 0x136f }
            r1.user_id = r2     // Catch:{ Exception -> 0x136f }
            goto L_0x13f0
        L_0x13ea:
            org.telegram.tgnet.TLRPC$Peer r1 = r10.peer_id     // Catch:{ Exception -> 0x4299 }
            long r2 = r12.participant_id     // Catch:{ Exception -> 0x4299 }
            r1.user_id = r2     // Catch:{ Exception -> 0x4299 }
        L_0x13f0:
            if (r13 == 0) goto L_0x13f5
            r10.ttl = r13     // Catch:{ Exception -> 0x136f }
            goto L_0x140f
        L_0x13f5:
            int r1 = r12.ttl     // Catch:{ Exception -> 0x4299 }
            r10.ttl = r1     // Catch:{ Exception -> 0x4299 }
            int r1 = r10.ttl     // Catch:{ Exception -> 0x4299 }
            if (r1 == 0) goto L_0x140f
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r10.media     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x140f
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r10.media     // Catch:{ Exception -> 0x136f }
            int r2 = r10.ttl     // Catch:{ Exception -> 0x136f }
            r1.ttl_seconds = r2     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r10.media     // Catch:{ Exception -> 0x136f }
            int r2 = r1.flags     // Catch:{ Exception -> 0x136f }
            r3 = 4
            r2 = r2 | r3
            r1.flags = r2     // Catch:{ Exception -> 0x136f }
        L_0x140f:
            int r1 = r10.ttl     // Catch:{ Exception -> 0x4299 }
            if (r1 == 0) goto L_0x1496
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r10.media     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x1496
            boolean r1 = org.telegram.messenger.MessageObject.isVoiceMessage(r10)     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x1454
            r1 = 0
            r2 = 0
        L_0x1421:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x136f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r3 = r3.attributes     // Catch:{ Exception -> 0x136f }
            int r3 = r3.size()     // Catch:{ Exception -> 0x136f }
            if (r2 >= r3) goto L_0x1447
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x136f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r3 = r3.attributes     // Catch:{ Exception -> 0x136f }
            java.lang.Object r3 = r3.get(r2)     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$DocumentAttribute r3 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r3     // Catch:{ Exception -> 0x136f }
            r114 = r1
            boolean r1 = r3 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeAudio     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x1442
            int r1 = r3.duration     // Catch:{ Exception -> 0x136f }
            goto L_0x1449
        L_0x1442:
            int r2 = r2 + 1
            r1 = r114
            goto L_0x1421
        L_0x1447:
            r114 = r1
        L_0x1449:
            int r2 = r10.ttl     // Catch:{ Exception -> 0x136f }
            int r3 = r1 + 1
            int r2 = java.lang.Math.max(r2, r3)     // Catch:{ Exception -> 0x136f }
            r10.ttl = r2     // Catch:{ Exception -> 0x136f }
            goto L_0x1461
        L_0x1454:
            boolean r1 = org.telegram.messenger.MessageObject.isVideoMessage(r10)     // Catch:{ Exception -> 0x136f }
            if (r1 != 0) goto L_0x1462
            boolean r1 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r10)     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x1461
            goto L_0x1462
        L_0x1461:
            goto L_0x1496
        L_0x1462:
            r1 = 0
            r2 = 0
        L_0x1464:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x136f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r3 = r3.attributes     // Catch:{ Exception -> 0x136f }
            int r3 = r3.size()     // Catch:{ Exception -> 0x136f }
            if (r2 >= r3) goto L_0x148a
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x136f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r3 = r3.attributes     // Catch:{ Exception -> 0x136f }
            java.lang.Object r3 = r3.get(r2)     // Catch:{ Exception -> 0x136f }
            org.telegram.tgnet.TLRPC$DocumentAttribute r3 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r3     // Catch:{ Exception -> 0x136f }
            r114 = r1
            boolean r1 = r3 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeVideo     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x1485
            int r1 = r3.duration     // Catch:{ Exception -> 0x136f }
            goto L_0x148c
        L_0x1485:
            int r2 = r2 + 1
            r1 = r114
            goto L_0x1464
        L_0x148a:
            r114 = r1
        L_0x148c:
            int r2 = r10.ttl     // Catch:{ Exception -> 0x136f }
            int r3 = r1 + 1
            int r2 = java.lang.Math.max(r2, r3)     // Catch:{ Exception -> 0x136f }
            r10.ttl = r2     // Catch:{ Exception -> 0x136f }
        L_0x1496:
            boolean r1 = org.telegram.messenger.MessageObject.isVoiceMessage(r10)     // Catch:{ Exception -> 0x4299 }
            if (r1 != 0) goto L_0x14a2
            boolean r1 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r10)     // Catch:{ Exception -> 0x136f }
            if (r1 == 0) goto L_0x14a5
        L_0x14a2:
            r1 = 1
            r10.media_unread = r1     // Catch:{ Exception -> 0x4299 }
        L_0x14a5:
            org.telegram.tgnet.TLRPC$Peer r1 = r10.from_id     // Catch:{ Exception -> 0x4299 }
            if (r1 != 0) goto L_0x14ad
            org.telegram.tgnet.TLRPC$Peer r1 = r10.peer_id     // Catch:{ Exception -> 0x136f }
            r10.from_id = r1     // Catch:{ Exception -> 0x136f }
        L_0x14ad:
            r3 = 1
            r10.send_state = r3     // Catch:{ Exception -> 0x4299 }
            r1 = 0
            r21 = 0
            if (r111 == 0) goto L_0x1540
            java.lang.String r3 = "groupId"
            r26 = r4
            r5 = r111
            java.lang.Object r3 = r5.get(r3)     // Catch:{ Exception -> 0x14e8 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x14e8 }
            if (r3 == 0) goto L_0x14d8
            java.lang.Long r4 = org.telegram.messenger.Utilities.parseLong(r3)     // Catch:{ Exception -> 0x14e8 }
            long r35 = r4.longValue()     // Catch:{ Exception -> 0x14e8 }
            r1 = r35
            r10.grouped_id = r1     // Catch:{ Exception -> 0x14e8 }
            int r4 = r10.flags     // Catch:{ Exception -> 0x14e8 }
            r33 = 131072(0x20000, float:1.83671E-40)
            r4 = r4 | r33
            r10.flags = r4     // Catch:{ Exception -> 0x14e8 }
        L_0x14d8:
            java.lang.String r4 = "final"
            java.lang.Object r4 = r5.get(r4)     // Catch:{ Exception -> 0x14e8 }
            if (r4 == 0) goto L_0x14e2
            r4 = 1
            goto L_0x14e3
        L_0x14e2:
            r4 = 0
        L_0x14e3:
            r21 = r4
            r3 = r1
            goto L_0x1545
        L_0x14e8:
            r0 = move-exception
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r34 = r6
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1512:
            r0 = move-exception
            r26 = r4
            r5 = r111
            r77 = r92
            r21 = r93
            r49 = r94
            r50 = r96
            r29 = r97
            r1 = r0
            r34 = r6
            r28 = r9
            r39 = r12
            r33 = r13
            r13 = r19
            r31 = r38
            r24 = r45
            r32 = r46
            r38 = r91
            r19 = r95
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1540:
            r26 = r4
            r5 = r111
            r3 = r1
        L_0x1545:
            org.telegram.messenger.MessageObject r33 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x4264 }
            int r2 = r8.currentAccount     // Catch:{ Exception -> 0x4264 }
            r35 = 1
            r36 = 1
            r49 = r94
            r1 = r33
            r50 = r96
            r51 = r99
            r34 = 0
            r54 = r106
            r52 = r3
            r55 = r40
            r4 = r97
            r3 = r10
            r56 = r4
            r57 = r41
            r4 = r104
            r18 = r5
            r5 = r35
            r34 = r6
            r94 = r13
            r7 = r18
            r31 = r38
            r13 = r108
            r6 = r36
            r1.<init>((int) r2, (org.telegram.tgnet.TLRPC.Message) r3, (org.telegram.messenger.MessageObject) r4, (boolean) r5, (boolean) r6)     // Catch:{ Exception -> 0x4236 }
            r6 = r33
            r5 = r116
            r6.sendAnimationData = r5     // Catch:{ Exception -> 0x4209 }
            r4 = 1
            r6.wasJustSent = r4     // Catch:{ Exception -> 0x4209 }
            r3 = r113
            if (r3 == 0) goto L_0x1588
            r1 = 1
            goto L_0x1589
        L_0x1588:
            r1 = 0
        L_0x1589:
            r6.scheduled = r1     // Catch:{ Exception -> 0x4209 }
            boolean r1 = r6.isForwarded()     // Catch:{ Exception -> 0x4209 }
            if (r1 != 0) goto L_0x15cc
            int r1 = r6.type     // Catch:{ Exception -> 0x15aa }
            r2 = 3
            if (r1 == r2) goto L_0x159e
            if (r95 != 0) goto L_0x159e
            int r1 = r6.type     // Catch:{ Exception -> 0x15aa }
            r2 = 2
            if (r1 != r2) goto L_0x15cd
            goto L_0x159f
        L_0x159e:
            r2 = 2
        L_0x159f:
            java.lang.String r1 = r10.attachPath     // Catch:{ Exception -> 0x15aa }
            boolean r1 = android.text.TextUtils.isEmpty(r1)     // Catch:{ Exception -> 0x15aa }
            if (r1 != 0) goto L_0x15cd
            r6.attachPathExists = r4     // Catch:{ Exception -> 0x15aa }
            goto L_0x15cd
        L_0x15aa:
            r0 = move-exception
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r95
            r1 = r0
            r13 = r6
            r5 = r7
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x15cc:
            r2 = 2
        L_0x15cd:
            org.telegram.messenger.VideoEditedInfo r1 = r6.videoEditedInfo     // Catch:{ Exception -> 0x4209 }
            if (r1 == 0) goto L_0x15d6
            if (r95 != 0) goto L_0x15d6
            org.telegram.messenger.VideoEditedInfo r1 = r6.videoEditedInfo     // Catch:{ Exception -> 0x15aa }
            goto L_0x15d8
        L_0x15d6:
            r1 = r95
        L_0x15d8:
            r4 = r52
            int r18 = (r4 > r16 ? 1 : (r4 == r16 ? 0 : -1))
            if (r18 != 0) goto L_0x1690
            java.util.ArrayList r18 = new java.util.ArrayList     // Catch:{ Exception -> 0x1669 }
            r18.<init>()     // Catch:{ Exception -> 0x1669 }
            r95 = r18
            r2 = r95
            r2.add(r6)     // Catch:{ Exception -> 0x1669 }
            java.util.ArrayList r18 = new java.util.ArrayList     // Catch:{ Exception -> 0x1669 }
            r18.<init>()     // Catch:{ Exception -> 0x1669 }
            r95 = r18
            r96 = r1
            r1 = r95
            r1.add(r10)     // Catch:{ Exception -> 0x1644 }
            r33 = r11
            int r11 = r8.currentAccount     // Catch:{ Exception -> 0x1644 }
            org.telegram.messenger.MessagesStorage r58 = org.telegram.messenger.MessagesStorage.getInstance(r11)     // Catch:{ Exception -> 0x1644 }
            r60 = 0
            r61 = 1
            r62 = 0
            r63 = 0
            if (r3 == 0) goto L_0x160d
            r64 = 1
            goto L_0x160f
        L_0x160d:
            r64 = 0
        L_0x160f:
            r59 = r1
            r58.putMessages((java.util.ArrayList<org.telegram.tgnet.TLRPC.Message>) r59, (boolean) r60, (boolean) r61, (boolean) r62, (int) r63, (boolean) r64)     // Catch:{ Exception -> 0x1644 }
            int r11 = r8.currentAccount     // Catch:{ Exception -> 0x1644 }
            org.telegram.messenger.MessagesController r11 = org.telegram.messenger.MessagesController.getInstance(r11)     // Catch:{ Exception -> 0x1644 }
            if (r3 == 0) goto L_0x1620
            r18 = r1
            r1 = 1
            goto L_0x1623
        L_0x1620:
            r18 = r1
            r1 = 0
        L_0x1623:
            r11.updateInterfaceWithMessages(r14, r2, r1)     // Catch:{ Exception -> 0x1644 }
            if (r3 != 0) goto L_0x163b
            int r1 = r8.currentAccount     // Catch:{ Exception -> 0x1644 }
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)     // Catch:{ Exception -> 0x1644 }
            int r11 = org.telegram.messenger.NotificationCenter.dialogsNeedReload     // Catch:{ Exception -> 0x1644 }
            r19 = r2
            r97 = r6
            r6 = 0
            java.lang.Object[] r2 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x16bb }
            r1.postNotificationName(r11, r2)     // Catch:{ Exception -> 0x16bb }
            goto L_0x1640
        L_0x163b:
            r19 = r2
            r97 = r6
            r6 = 0
        L_0x1640:
            r11 = r20
            goto L_0x1727
        L_0x1644:
            r0 = move-exception
            r97 = r6
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r1 = r0
            r5 = r7
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1669:
            r0 = move-exception
            r96 = r1
            r97 = r6
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r1 = r0
            r5 = r7
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1690:
            r96 = r1
            r97 = r6
            r33 = r11
            r6 = 0
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x41db }
            r1.<init>()     // Catch:{ Exception -> 0x41db }
            java.lang.String r2 = "group_"
            r1.append(r2)     // Catch:{ Exception -> 0x41db }
            r1.append(r4)     // Catch:{ Exception -> 0x41db }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x41db }
            java.util.HashMap<java.lang.String, java.util.ArrayList<org.telegram.messenger.SendMessagesHelper$DelayedMessage>> r2 = r8.delayedMessages     // Catch:{ Exception -> 0x41db }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x41db }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x41db }
            if (r2 == 0) goto L_0x16de
            java.lang.Object r11 = r2.get(r6)     // Catch:{ Exception -> 0x16bb }
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r11 = (org.telegram.messenger.SendMessagesHelper.DelayedMessage) r11     // Catch:{ Exception -> 0x16bb }
            r20 = r11
            goto L_0x16de
        L_0x16bb:
            r0 = move-exception
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r1 = r0
            r5 = r7
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x16de:
            if (r20 != 0) goto L_0x1715
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r11 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x16bb }
            r11.<init>(r14)     // Catch:{ Exception -> 0x16bb }
            r11.initForGroup(r4)     // Catch:{ Exception -> 0x16f0 }
            r11.encryptedChat = r12     // Catch:{ Exception -> 0x16f0 }
            if (r3 == 0) goto L_0x16ed
            r6 = 1
        L_0x16ed:
            r11.scheduled = r6     // Catch:{ Exception -> 0x16f0 }
            goto L_0x1717
        L_0x16f0:
            r0 = move-exception
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r1 = r0
            r5 = r7
            r28 = r9
            r20 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1715:
            r11 = r20
        L_0x1717:
            r6 = 0
            r11.performMediaUpload = r6     // Catch:{ Exception -> 0x41ab }
            r6 = 0
            r11.photoSize = r6     // Catch:{ Exception -> 0x41ab }
            r11.videoEditedInfo = r6     // Catch:{ Exception -> 0x41ab }
            r11.httpLocation = r6     // Catch:{ Exception -> 0x41ab }
            if (r21 == 0) goto L_0x1727
            int r6 = r10.id     // Catch:{ Exception -> 0x16f0 }
            r11.finalGroupMessage = r6     // Catch:{ Exception -> 0x16f0 }
        L_0x1727:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ Exception -> 0x4179 }
            if (r1 == 0) goto L_0x17bf
            if (r9 == 0) goto L_0x17b9
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1792 }
            r1.<init>()     // Catch:{ Exception -> 0x1792 }
            java.lang.String r2 = "send message user_id = "
            r1.append(r2)     // Catch:{ Exception -> 0x1792 }
            r52 = r4
            long r4 = r9.user_id     // Catch:{ Exception -> 0x1792 }
            r1.append(r4)     // Catch:{ Exception -> 0x1792 }
            java.lang.String r2 = " chat_id = "
            r1.append(r2)     // Catch:{ Exception -> 0x1792 }
            long r4 = r9.chat_id     // Catch:{ Exception -> 0x1792 }
            r1.append(r4)     // Catch:{ Exception -> 0x1792 }
            java.lang.String r2 = " channel_id = "
            r1.append(r2)     // Catch:{ Exception -> 0x1792 }
            long r4 = r9.channel_id     // Catch:{ Exception -> 0x1792 }
            r1.append(r4)     // Catch:{ Exception -> 0x1792 }
            java.lang.String r2 = " access_hash = "
            r1.append(r2)     // Catch:{ Exception -> 0x1792 }
            long r4 = r9.access_hash     // Catch:{ Exception -> 0x1792 }
            r1.append(r4)     // Catch:{ Exception -> 0x1792 }
            java.lang.String r2 = " notify = "
            r1.append(r2)     // Catch:{ Exception -> 0x1792 }
            r6 = r112
            r1.append(r6)     // Catch:{ Exception -> 0x16f0 }
            java.lang.String r2 = " silent = "
            r1.append(r2)     // Catch:{ Exception -> 0x16f0 }
            int r2 = r8.currentAccount     // Catch:{ Exception -> 0x16f0 }
            android.content.SharedPreferences r2 = org.telegram.messenger.MessagesController.getNotificationsSettings(r2)     // Catch:{ Exception -> 0x16f0 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x16f0 }
            r4.<init>()     // Catch:{ Exception -> 0x16f0 }
            java.lang.String r5 = "silent_"
            r4.append(r5)     // Catch:{ Exception -> 0x16f0 }
            r4.append(r14)     // Catch:{ Exception -> 0x16f0 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x16f0 }
            r5 = 0
            boolean r2 = r2.getBoolean(r4, r5)     // Catch:{ Exception -> 0x16f0 }
            r1.append(r2)     // Catch:{ Exception -> 0x16f0 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x16f0 }
            org.telegram.messenger.FileLog.d(r1)     // Catch:{ Exception -> 0x16f0 }
            goto L_0x17c4
        L_0x1792:
            r0 = move-exception
            r6 = r112
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r1 = r0
            r5 = r7
            r28 = r9
            r20 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x17b9:
            r6 = r112
            r52 = r4
            r5 = 0
            goto L_0x17c4
        L_0x17bf:
            r6 = r112
            r52 = r4
            r5 = 0
        L_0x17c4:
            r18 = 0
            if (r93 == 0) goto L_0x3eee
            r4 = r93
            r1 = 9
            if (r4 != r1) goto L_0x17fb
            if (r92 == 0) goto L_0x17fb
            if (r12 == 0) goto L_0x17fb
            r38 = r91
            r77 = r92
            r33 = r94
            r19 = r96
            r13 = r97
            r93 = r4
            r78 = r9
            r4 = r10
            r36 = r11
            r10 = r14
            r14 = r25
            r24 = r45
            r32 = r46
            r80 = r48
            r1 = r51
            r40 = r52
            r29 = r56
            r9 = r7
            r7 = r3
            r88 = r12
            r12 = r8
            r8 = r88
            goto L_0x3var_
        L_0x17fb:
            r1 = 1
            if (r4 < r1) goto L_0x1811
            r1 = 3
            if (r4 <= r1) goto L_0x1802
            goto L_0x1811
        L_0x1802:
            r67 = r92
            r68 = r96
            r96 = r97
            r111 = r7
            r93 = r11
            r65 = r52
            r11 = r4
            goto L_0x1baf
        L_0x1811:
            r1 = 5
            if (r4 < r1) goto L_0x1818
            r1 = 8
            if (r4 <= r1) goto L_0x1802
        L_0x1818:
            r1 = 9
            if (r4 != r1) goto L_0x181e
            if (r12 != 0) goto L_0x1802
        L_0x181e:
            r1 = 10
            if (r4 == r1) goto L_0x1ba2
            r1 = 11
            if (r4 != r1) goto L_0x1827
            goto L_0x1802
        L_0x1827:
            r1 = 4
            if (r4 != r1) goto L_0x1a24
            org.telegram.tgnet.TLRPC$TL_messages_forwardMessages r1 = new org.telegram.tgnet.TLRPC$TL_messages_forwardMessages     // Catch:{ Exception -> 0x19f2 }
            r1.<init>()     // Catch:{ Exception -> 0x19f2 }
            r2 = r1
            r2.to_peer = r9     // Catch:{ Exception -> 0x19f2 }
            org.telegram.tgnet.TLRPC$Message r1 = r13.messageOwner     // Catch:{ Exception -> 0x19f2 }
            boolean r1 = r1.with_my_score     // Catch:{ Exception -> 0x19f2 }
            r2.with_my_score = r1     // Catch:{ Exception -> 0x19f2 }
            if (r7 == 0) goto L_0x190c
            r1 = r57
            boolean r19 = r7.containsKey(r1)     // Catch:{ Exception -> 0x18e1 }
            if (r19 == 0) goto L_0x190c
            java.lang.Object r1 = r7.get(r1)     // Catch:{ Exception -> 0x18e1 }
            java.lang.CharSequence r1 = (java.lang.CharSequence) r1     // Catch:{ Exception -> 0x18e1 }
            java.lang.Integer r1 = org.telegram.messenger.Utilities.parseInt((java.lang.CharSequence) r1)     // Catch:{ Exception -> 0x18e1 }
            int r1 = r1.intValue()     // Catch:{ Exception -> 0x18e1 }
            r5 = 1
            r2.drop_author = r5     // Catch:{ Exception -> 0x18e1 }
            java.lang.String r5 = "fwd_peer"
            java.lang.Object r5 = r7.get(r5)     // Catch:{ Exception -> 0x18e1 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ Exception -> 0x18e1 }
            java.lang.Long r5 = org.telegram.messenger.Utilities.parseLong(r5)     // Catch:{ Exception -> 0x18e1 }
            long r19 = r5.longValue()     // Catch:{ Exception -> 0x18e1 }
            r114 = r19
            r93 = r4
            r4 = r114
            int r19 = (r4 > r16 ? 1 : (r4 == r16 ? 0 : -1))
            if (r19 >= 0) goto L_0x18cb
            org.telegram.messenger.MessagesController r6 = r90.getMessagesController()     // Catch:{ Exception -> 0x18a2 }
            r111 = r7
            long r7 = -r4
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x1926 }
            org.telegram.tgnet.TLRPC$Chat r6 = r6.getChat(r7)     // Catch:{ Exception -> 0x1926 }
            boolean r7 = org.telegram.messenger.ChatObject.isChannel(r6)     // Catch:{ Exception -> 0x1926 }
            if (r7 == 0) goto L_0x1898
            org.telegram.tgnet.TLRPC$TL_inputPeerChannel r7 = new org.telegram.tgnet.TLRPC$TL_inputPeerChannel     // Catch:{ Exception -> 0x1926 }
            r7.<init>()     // Catch:{ Exception -> 0x1926 }
            r2.from_peer = r7     // Catch:{ Exception -> 0x1926 }
            org.telegram.tgnet.TLRPC$InputPeer r7 = r2.from_peer     // Catch:{ Exception -> 0x1926 }
            r114 = r4
            long r4 = r6.id     // Catch:{ Exception -> 0x1926 }
            r7.channel_id = r4     // Catch:{ Exception -> 0x1926 }
            org.telegram.tgnet.TLRPC$InputPeer r4 = r2.from_peer     // Catch:{ Exception -> 0x1926 }
            long r7 = r6.access_hash     // Catch:{ Exception -> 0x1926 }
            r4.access_hash = r7     // Catch:{ Exception -> 0x1926 }
            goto L_0x18a1
        L_0x1898:
            r114 = r4
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r4 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty     // Catch:{ Exception -> 0x1926 }
            r4.<init>()     // Catch:{ Exception -> 0x1926 }
            r2.from_peer = r4     // Catch:{ Exception -> 0x1926 }
        L_0x18a1:
            goto L_0x18d6
        L_0x18a2:
            r0 = move-exception
            r111 = r7
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r5 = r111
            r1 = r0
            r28 = r9
            r20 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x18cb:
            r114 = r4
            r111 = r7
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r4 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty     // Catch:{ Exception -> 0x1926 }
            r4.<init>()     // Catch:{ Exception -> 0x1926 }
            r2.from_peer = r4     // Catch:{ Exception -> 0x1926 }
        L_0x18d6:
            java.util.ArrayList<java.lang.Integer> r4 = r2.id     // Catch:{ Exception -> 0x1926 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x1926 }
            r4.add(r5)     // Catch:{ Exception -> 0x1926 }
            goto L_0x1917
        L_0x18e1:
            r0 = move-exception
            r93 = r4
            r111 = r7
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r5 = r111
            r1 = r0
            r28 = r9
            r20 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x190c:
            r93 = r4
            r111 = r7
            org.telegram.tgnet.TLRPC$TL_inputPeerEmpty r1 = new org.telegram.tgnet.TLRPC$TL_inputPeerEmpty     // Catch:{ Exception -> 0x19bf }
            r1.<init>()     // Catch:{ Exception -> 0x19bf }
            r2.from_peer = r1     // Catch:{ Exception -> 0x19bf }
        L_0x1917:
            boolean r1 = r10.silent     // Catch:{ Exception -> 0x19bf }
            r2.silent = r1     // Catch:{ Exception -> 0x19bf }
            if (r3 == 0) goto L_0x194d
            r2.schedule_date = r3     // Catch:{ Exception -> 0x1926 }
            int r1 = r2.flags     // Catch:{ Exception -> 0x1926 }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r2.flags = r1     // Catch:{ Exception -> 0x1926 }
            goto L_0x194d
        L_0x1926:
            r0 = move-exception
            r38 = r91
            r77 = r92
            r21 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r5 = r111
            r1 = r0
            r28 = r9
            r20 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x194d:
            java.util.ArrayList<java.lang.Long> r1 = r2.random_id     // Catch:{ Exception -> 0x19bf }
            long r4 = r10.random_id     // Catch:{ Exception -> 0x19bf }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x19bf }
            r1.add(r4)     // Catch:{ Exception -> 0x19bf }
            int r1 = r108.getId()     // Catch:{ Exception -> 0x19bf }
            if (r1 < 0) goto L_0x196c
            java.util.ArrayList<java.lang.Integer> r1 = r2.id     // Catch:{ Exception -> 0x1926 }
            int r4 = r108.getId()     // Catch:{ Exception -> 0x1926 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x1926 }
            r1.add(r4)     // Catch:{ Exception -> 0x1926 }
            goto L_0x1995
        L_0x196c:
            org.telegram.tgnet.TLRPC$Message r1 = r13.messageOwner     // Catch:{ Exception -> 0x19bf }
            int r1 = r1.fwd_msg_id     // Catch:{ Exception -> 0x19bf }
            if (r1 == 0) goto L_0x1980
            java.util.ArrayList<java.lang.Integer> r1 = r2.id     // Catch:{ Exception -> 0x1926 }
            org.telegram.tgnet.TLRPC$Message r4 = r13.messageOwner     // Catch:{ Exception -> 0x1926 }
            int r4 = r4.fwd_msg_id     // Catch:{ Exception -> 0x1926 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x1926 }
            r1.add(r4)     // Catch:{ Exception -> 0x1926 }
            goto L_0x1995
        L_0x1980:
            org.telegram.tgnet.TLRPC$Message r1 = r13.messageOwner     // Catch:{ Exception -> 0x19bf }
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r1.fwd_from     // Catch:{ Exception -> 0x19bf }
            if (r1 == 0) goto L_0x1995
            java.util.ArrayList<java.lang.Integer> r1 = r2.id     // Catch:{ Exception -> 0x1926 }
            org.telegram.tgnet.TLRPC$Message r4 = r13.messageOwner     // Catch:{ Exception -> 0x1926 }
            org.telegram.tgnet.TLRPC$MessageFwdHeader r4 = r4.fwd_from     // Catch:{ Exception -> 0x1926 }
            int r4 = r4.channel_post     // Catch:{ Exception -> 0x1926 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x1926 }
            r1.add(r4)     // Catch:{ Exception -> 0x1926 }
        L_0x1995:
            r4 = 0
            r5 = 0
            if (r3 == 0) goto L_0x199b
            r8 = 1
            goto L_0x199c
        L_0x199b:
            r8 = 0
        L_0x199c:
            r7 = r96
            r1 = r90
            r16 = r2
            r6 = 2
            r3 = r97
            r43 = r93
            r93 = r11
            r65 = r52
            r11 = 1
            r17 = 0
            r96 = r97
            r6 = r91
            r67 = r92
            r68 = r7
            r11 = r43
            r7 = r111
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x1b50 }
            goto L_0x1b77
        L_0x19bf:
            r0 = move-exception
            r67 = r92
            r68 = r96
            r96 = r97
            r88 = r11
            r11 = r93
            r93 = r88
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r5 = r111
            r1 = r0
            r28 = r9
            r21 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r77 = r67
            r19 = r68
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x19f2:
            r0 = move-exception
            r67 = r92
            r68 = r96
            r96 = r97
            r111 = r7
            r93 = r11
            r11 = r4
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r5 = r111
            r1 = r0
            r28 = r9
            r21 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r77 = r67
            r19 = r68
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1a24:
            r67 = r92
            r68 = r96
            r96 = r97
            r111 = r7
            r93 = r11
            r65 = r52
            r11 = r4
            r1 = 9
            if (r11 != r1) goto L_0x1b77
            org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult r1 = new org.telegram.tgnet.TLRPC$TL_messages_sendInlineBotResult     // Catch:{ Exception -> 0x1b50 }
            r1.<init>()     // Catch:{ Exception -> 0x1b50 }
            r8 = r1
            r8.peer = r9     // Catch:{ Exception -> 0x1b50 }
            long r1 = r10.random_id     // Catch:{ Exception -> 0x1b50 }
            r8.random_id = r1     // Catch:{ Exception -> 0x1b50 }
            org.telegram.tgnet.TLRPC$Peer r1 = r10.from_id     // Catch:{ Exception -> 0x1b50 }
            if (r1 == 0) goto L_0x1a51
            org.telegram.messenger.MessagesController r1 = r90.getMessagesController()     // Catch:{ Exception -> 0x1b50 }
            org.telegram.tgnet.TLRPC$Peer r2 = r10.from_id     // Catch:{ Exception -> 0x1b50 }
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((org.telegram.tgnet.TLRPC.Peer) r2)     // Catch:{ Exception -> 0x1b50 }
            r8.send_as = r1     // Catch:{ Exception -> 0x1b50 }
        L_0x1a51:
            r7 = r111
            r1 = r54
            boolean r1 = r7.containsKey(r1)     // Catch:{ Exception -> 0x1b27 }
            if (r1 != 0) goto L_0x1a5d
            r3 = 1
            goto L_0x1a5e
        L_0x1a5d:
            r3 = 0
        L_0x1a5e:
            r8.hide_via = r3     // Catch:{ Exception -> 0x1b27 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1b27 }
            if (r1 == 0) goto L_0x1a9d
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1a77 }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x1a77 }
            if (r1 == 0) goto L_0x1a9d
            int r1 = r8.flags     // Catch:{ Exception -> 0x1a77 }
            r2 = 1
            r1 = r1 | r2
            r8.flags = r1     // Catch:{ Exception -> 0x1a77 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r10.reply_to     // Catch:{ Exception -> 0x1a77 }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x1a77 }
            r8.reply_to_msg_id = r1     // Catch:{ Exception -> 0x1a77 }
            goto L_0x1a9d
        L_0x1a77:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r1 = r0
            r5 = r7
            r28 = r9
            r21 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r77 = r67
            r19 = r68
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1a9d:
            boolean r1 = r10.silent     // Catch:{ Exception -> 0x1b27 }
            r8.silent = r1     // Catch:{ Exception -> 0x1b27 }
            r6 = r113
            if (r6 == 0) goto L_0x1aad
            r8.schedule_date = r6     // Catch:{ Exception -> 0x1a77 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x1a77 }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r8.flags = r1     // Catch:{ Exception -> 0x1a77 }
        L_0x1aad:
            r1 = r32
            java.lang.Object r1 = r7.get(r1)     // Catch:{ Exception -> 0x1b27 }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x1b27 }
            java.lang.Long r1 = org.telegram.messenger.Utilities.parseLong(r1)     // Catch:{ Exception -> 0x1b27 }
            long r1 = r1.longValue()     // Catch:{ Exception -> 0x1b27 }
            r8.query_id = r1     // Catch:{ Exception -> 0x1b27 }
            java.lang.String r1 = "id"
            java.lang.Object r1 = r7.get(r1)     // Catch:{ Exception -> 0x1b27 }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x1b27 }
            r8.id = r1     // Catch:{ Exception -> 0x1b27 }
            if (r13 != 0) goto L_0x1adf
            r1 = 1
            r8.clear_draft = r1     // Catch:{ Exception -> 0x1a77 }
            org.telegram.messenger.MediaDataController r1 = r90.getMediaDataController()     // Catch:{ Exception -> 0x1a77 }
            if (r105 == 0) goto L_0x1ad9
            int r3 = r105.getId()     // Catch:{ Exception -> 0x1a77 }
            goto L_0x1ada
        L_0x1ad9:
            r3 = 0
        L_0x1ada:
            r5 = 0
            r1.cleanDraft(r14, r3, r5)     // Catch:{ Exception -> 0x1a77 }
            goto L_0x1ae0
        L_0x1adf:
            r5 = 0
        L_0x1ae0:
            r4 = 0
            r16 = 0
            if (r6 == 0) goto L_0x1ae8
            r17 = 1
            goto L_0x1aea
        L_0x1ae8:
            r17 = 0
        L_0x1aea:
            r1 = r90
            r2 = r8
            r3 = r96
            r5 = r16
            r6 = r91
            r111 = r7
            r16 = r8
            r8 = r17
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x1b50 }
            r38 = r91
            r36 = r93
            r33 = r94
            r13 = r96
            r28 = r9
            r43 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r16 = r67
            r19 = r68
            r12 = r90
            r9 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x4111
        L_0x1b27:
            r0 = move-exception
            r111 = r7
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r5 = r111
            r1 = r0
            r28 = r9
            r21 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r77 = r67
            r19 = r68
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1b50:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r5 = r111
            r1 = r0
            r28 = r9
            r21 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r29 = r56
            r77 = r67
            r19 = r68
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1b77:
            r38 = r91
            r36 = r93
            r33 = r94
            r13 = r96
            r28 = r9
            r43 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r16 = r67
            r19 = r68
            r12 = r90
            r9 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x4111
        L_0x1ba2:
            r67 = r92
            r68 = r96
            r96 = r97
            r111 = r7
            r93 = r11
            r65 = r52
            r11 = r4
        L_0x1baf:
            if (r12 != 0) goto L_0x2var_
            r1 = 0
            r2 = 1
            if (r11 != r2) goto L_0x1CLASSNAME
            r7 = r56
            boolean r2 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaVenue     // Catch:{ Exception -> 0x1c4b }
            if (r2 == 0) goto L_0x1bd7
            org.telegram.tgnet.TLRPC$TL_inputMediaVenue r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaVenue     // Catch:{ Exception -> 0x1c4b }
            r2.<init>()     // Catch:{ Exception -> 0x1c4b }
            r1 = r2
            java.lang.String r2 = r7.address     // Catch:{ Exception -> 0x1c4b }
            r1.address = r2     // Catch:{ Exception -> 0x1c4b }
            java.lang.String r2 = r7.title     // Catch:{ Exception -> 0x1c4b }
            r1.title = r2     // Catch:{ Exception -> 0x1c4b }
            java.lang.String r2 = r7.provider     // Catch:{ Exception -> 0x1c4b }
            r1.provider = r2     // Catch:{ Exception -> 0x1c4b }
            java.lang.String r2 = r7.venue_id     // Catch:{ Exception -> 0x1c4b }
            r1.venue_id = r2     // Catch:{ Exception -> 0x1c4b }
            r2 = r33
            r1.venue_type = r2     // Catch:{ Exception -> 0x1c4b }
            r6 = 2
            goto L_0x1CLASSNAME
        L_0x1bd7:
            boolean r2 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGeoLive     // Catch:{ Exception -> 0x1c4b }
            if (r2 == 0) goto L_0x1CLASSNAME
            org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaGeoLive     // Catch:{ Exception -> 0x1c4b }
            r2.<init>()     // Catch:{ Exception -> 0x1c4b }
            r1 = r2
            int r2 = r7.period     // Catch:{ Exception -> 0x1c4b }
            r1.period = r2     // Catch:{ Exception -> 0x1c4b }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1c4b }
            r6 = 2
            r2 = r2 | r6
            r1.flags = r2     // Catch:{ Exception -> 0x1c4b }
            int r2 = r7.heading     // Catch:{ Exception -> 0x1c4b }
            if (r2 == 0) goto L_0x1bf9
            int r2 = r7.heading     // Catch:{ Exception -> 0x1c4b }
            r1.heading = r2     // Catch:{ Exception -> 0x1c4b }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1c4b }
            r3 = 4
            r2 = r2 | r3
            r1.flags = r2     // Catch:{ Exception -> 0x1c4b }
        L_0x1bf9:
            int r2 = r7.proximity_notification_radius     // Catch:{ Exception -> 0x1c4b }
            if (r2 == 0) goto L_0x1CLASSNAME
            int r2 = r7.proximity_notification_radius     // Catch:{ Exception -> 0x1c4b }
            r1.proximity_notification_radius = r2     // Catch:{ Exception -> 0x1c4b }
            int r2 = r1.flags     // Catch:{ Exception -> 0x1c4b }
            r3 = 8
            r2 = r2 | r3
            r1.flags = r2     // Catch:{ Exception -> 0x1c4b }
            goto L_0x1CLASSNAME
        L_0x1CLASSNAME:
            r6 = 2
            org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaGeoPoint     // Catch:{ Exception -> 0x1c4b }
            r2.<init>()     // Catch:{ Exception -> 0x1c4b }
            r1 = r2
        L_0x1CLASSNAME:
            org.telegram.tgnet.TLRPC$TL_inputGeoPoint r2 = new org.telegram.tgnet.TLRPC$TL_inputGeoPoint     // Catch:{ Exception -> 0x1c4b }
            r2.<init>()     // Catch:{ Exception -> 0x1c4b }
            r1.geo_point = r2     // Catch:{ Exception -> 0x1c4b }
            org.telegram.tgnet.TLRPC$InputGeoPoint r2 = r1.geo_point     // Catch:{ Exception -> 0x1c4b }
            org.telegram.tgnet.TLRPC$GeoPoint r3 = r7.geo     // Catch:{ Exception -> 0x1c4b }
            double r3 = r3.lat     // Catch:{ Exception -> 0x1c4b }
            r2.lat = r3     // Catch:{ Exception -> 0x1c4b }
            org.telegram.tgnet.TLRPC$InputGeoPoint r2 = r1.geo_point     // Catch:{ Exception -> 0x1c4b }
            org.telegram.tgnet.TLRPC$GeoPoint r3 = r7.geo     // Catch:{ Exception -> 0x1c4b }
            double r3 = r3._long     // Catch:{ Exception -> 0x1c4b }
            r2._long = r3     // Catch:{ Exception -> 0x1c4b }
            r19 = r91
            r99 = r94
            r13 = r96
            r8 = r103
            r3 = r113
            r97 = r7
            r32 = r9
            r7 = r10
            r43 = r11
            r29 = r12
            r9 = r25
            r24 = r45
            r20 = r46
            r5 = r50
            r96 = r68
            r12 = r90
            r10 = r93
            r11 = r1
            goto L_0x29da
        L_0x1c4b:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r5 = r111
            r1 = r0
            r29 = r7
            r28 = r9
            r21 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r77 = r67
            r19 = r68
            r12 = r90
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1CLASSNAME:
            r2 = r33
            r7 = r56
            r6 = 2
            if (r11 == r6) goto L_0x27a2
            r3 = 9
            if (r11 != r3) goto L_0x1ca3
            r5 = r50
            if (r5 == 0) goto L_0x1ca5
            r8 = r94
            r13 = r96
            r3 = r113
            r94 = r1
            r50 = r5
            r97 = r7
            r32 = r9
            r28 = r10
            r29 = r12
            r9 = r25
            r4 = r45
            r20 = r46
            r96 = r68
            r12 = r90
            r10 = r91
            r1 = r111
            goto L_0x27c0
        L_0x1ca3:
            r5 = r50
        L_0x1ca5:
            java.lang.String r3 = "query"
            r4 = 3
            if (r11 != r4) goto L_0x20dc
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x20a2 }
            r2.<init>()     // Catch:{ Exception -> 0x20a2 }
            r4 = r45
            java.lang.String r8 = r4.mime_type     // Catch:{ Exception -> 0x206a }
            r2.mime_type = r8     // Catch:{ Exception -> 0x206a }
            java.util.ArrayList r8 = r4.attributes     // Catch:{ Exception -> 0x206a }
            r2.attributes = r8     // Catch:{ Exception -> 0x206a }
            if (r23 != 0) goto L_0x1cfd
            boolean r8 = org.telegram.messenger.MessageObject.isRoundVideoDocument(r4)     // Catch:{ Exception -> 0x1cd2 }
            if (r8 != 0) goto L_0x1cce
            r8 = r68
            if (r8 == 0) goto L_0x1cff
            boolean r6 = r8.muted     // Catch:{ Exception -> 0x1d0c }
            if (r6 != 0) goto L_0x1d35
            boolean r6 = r8.roundVideo     // Catch:{ Exception -> 0x1d0c }
            if (r6 != 0) goto L_0x1d35
            goto L_0x1cff
        L_0x1cce:
            r8 = r68
            goto L_0x1d35
        L_0x1cd2:
            r0 = move-exception
            r8 = r68
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r1 = r0
            r24 = r4
            r50 = r5
            r29 = r7
            r19 = r8
            r28 = r9
            r21 = r11
            r39 = r12
            r32 = r46
            r77 = r67
            r12 = r90
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1cfd:
            r8 = r68
        L_0x1cff:
            r6 = 1
            r2.nosound_video = r6     // Catch:{ Exception -> 0x2034 }
            boolean r6 = org.telegram.messenger.BuildVars.DEBUG_VERSION     // Catch:{ Exception -> 0x2034 }
            if (r6 == 0) goto L_0x1d35
            java.lang.String r6 = "nosound_video = true"
            org.telegram.messenger.FileLog.d(r6)     // Catch:{ Exception -> 0x1d0c }
            goto L_0x1d35
        L_0x1d0c:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r33 = r94
            r13 = r96
            r1 = r0
            r24 = r4
            r50 = r5
            r29 = r7
            r19 = r8
            r28 = r9
            r21 = r11
            r39 = r12
            r32 = r46
            r77 = r67
            r12 = r90
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1d35:
            if (r94 == 0) goto L_0x1d71
            r6 = r94
            r2.ttl_seconds = r6     // Catch:{ Exception -> 0x1d48 }
            r10.ttl = r6     // Catch:{ Exception -> 0x1d48 }
            r94 = r1
            int r1 = r2.flags     // Catch:{ Exception -> 0x1d48 }
            r19 = 2
            r1 = r1 | 2
            r2.flags = r1     // Catch:{ Exception -> 0x1d48 }
            goto L_0x1d75
        L_0x1d48:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r13 = r96
            r1 = r0
            r24 = r4
            r50 = r5
            r33 = r6
            r29 = r7
            r19 = r8
            r28 = r9
            r21 = r11
            r39 = r12
            r32 = r46
            r77 = r67
            r12 = r90
            r5 = r111
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1d71:
            r6 = r94
            r94 = r1
        L_0x1d75:
            r1 = r111
            if (r1 == 0) goto L_0x1e51
            r97 = r7
            java.lang.String r7 = "masks"
            java.lang.Object r7 = r1.get(r7)     // Catch:{ Exception -> 0x1e29 }
            java.lang.String r7 = (java.lang.String) r7     // Catch:{ Exception -> 0x1e29 }
            if (r7 == 0) goto L_0x1e20
            org.telegram.tgnet.SerializedData r13 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x1e29 }
            r29 = r12
            byte[] r12 = org.telegram.messenger.Utilities.hexToBytes(r7)     // Catch:{ Exception -> 0x1df8 }
            r13.<init>((byte[]) r12)     // Catch:{ Exception -> 0x1df8 }
            r12 = r13
            r13 = 0
            int r19 = r12.readInt32(r13)     // Catch:{ Exception -> 0x1df8 }
            r95 = r19
            r19 = 0
            r13 = r19
        L_0x1d9c:
            r99 = r7
            r7 = r95
            if (r13 >= r7) goto L_0x1dc1
            r19 = r7
            java.util.ArrayList r7 = r2.stickers     // Catch:{ Exception -> 0x1df8 }
            r50 = r5
            r32 = r9
            r9 = 0
            int r5 = r12.readInt32(r9)     // Catch:{ Exception -> 0x1dd2 }
            org.telegram.tgnet.TLRPC$InputDocument r5 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r12, r5, r9)     // Catch:{ Exception -> 0x1dd2 }
            r7.add(r5)     // Catch:{ Exception -> 0x1dd2 }
            int r13 = r13 + 1
            r7 = r99
            r95 = r19
            r9 = r32
            r5 = r50
            goto L_0x1d9c
        L_0x1dc1:
            r50 = r5
            r19 = r7
            r32 = r9
            int r5 = r2.flags     // Catch:{ Exception -> 0x1dd2 }
            r7 = 1
            r5 = r5 | r7
            r2.flags = r5     // Catch:{ Exception -> 0x1dd2 }
            r12.cleanup()     // Catch:{ Exception -> 0x1dd2 }
            goto L_0x1e59
        L_0x1dd2:
            r0 = move-exception
            r12 = r90
            r38 = r91
            r20 = r93
            r13 = r96
            r5 = r1
            r24 = r4
            r33 = r6
            r19 = r8
            r21 = r11
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1df8:
            r0 = move-exception
            r50 = r5
            r12 = r90
            r38 = r91
            r20 = r93
            r13 = r96
            r5 = r1
            r24 = r4
            r33 = r6
            r19 = r8
            r28 = r9
            r21 = r11
            r39 = r29
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1e20:
            r50 = r5
            r99 = r7
            r32 = r9
            r29 = r12
            goto L_0x1e59
        L_0x1e29:
            r0 = move-exception
            r50 = r5
            r38 = r91
            r20 = r93
            r13 = r96
            r29 = r97
            r5 = r1
            r24 = r4
            r33 = r6
            r19 = r8
            r28 = r9
            r21 = r11
            r39 = r12
            r32 = r46
            r77 = r67
            r12 = r90
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1e51:
            r50 = r5
            r97 = r7
            r32 = r9
            r29 = r12
        L_0x1e59:
            long r12 = r4.access_hash     // Catch:{ Exception -> 0x200a }
            int r5 = (r12 > r16 ? 1 : (r12 == r16 ? 0 : -1))
            if (r5 != 0) goto L_0x1e65
            r3 = r2
            r18 = 1
            r5 = r18
            goto L_0x1ea9
        L_0x1e65:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r5 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x200a }
            r5.<init>()     // Catch:{ Exception -> 0x200a }
            org.telegram.tgnet.TLRPC$TL_inputDocument r7 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x200a }
            r7.<init>()     // Catch:{ Exception -> 0x200a }
            r5.id = r7     // Catch:{ Exception -> 0x200a }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r5.id     // Catch:{ Exception -> 0x200a }
            long r12 = r4.id     // Catch:{ Exception -> 0x200a }
            r7.id = r12     // Catch:{ Exception -> 0x200a }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r5.id     // Catch:{ Exception -> 0x200a }
            long r12 = r4.access_hash     // Catch:{ Exception -> 0x200a }
            r7.access_hash = r12     // Catch:{ Exception -> 0x200a }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r5.id     // Catch:{ Exception -> 0x200a }
            byte[] r9 = r4.file_reference     // Catch:{ Exception -> 0x200a }
            r7.file_reference = r9     // Catch:{ Exception -> 0x200a }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r5.id     // Catch:{ Exception -> 0x200a }
            byte[] r7 = r7.file_reference     // Catch:{ Exception -> 0x200a }
            if (r7 != 0) goto L_0x1e90
            org.telegram.tgnet.TLRPC$InputDocument r7 = r5.id     // Catch:{ Exception -> 0x1dd2 }
            r9 = 0
            byte[] r12 = new byte[r9]     // Catch:{ Exception -> 0x1dd2 }
            r7.file_reference = r12     // Catch:{ Exception -> 0x1dd2 }
        L_0x1e90:
            if (r1 == 0) goto L_0x1ea6
            boolean r7 = r1.containsKey(r3)     // Catch:{ Exception -> 0x1dd2 }
            if (r7 == 0) goto L_0x1ea6
            java.lang.Object r3 = r1.get(r3)     // Catch:{ Exception -> 0x1dd2 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x1dd2 }
            r5.query = r3     // Catch:{ Exception -> 0x1dd2 }
            int r3 = r5.flags     // Catch:{ Exception -> 0x1dd2 }
            r7 = 2
            r3 = r3 | r7
            r5.flags = r3     // Catch:{ Exception -> 0x1dd2 }
        L_0x1ea6:
            r3 = r5
            r5 = r18
        L_0x1ea9:
            if (r93 != 0) goto L_0x1var_
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x200a }
            r12 = r90
            r7.<init>(r14)     // Catch:{ Exception -> 0x1var_ }
            r9 = 1
            r7.type = r9     // Catch:{ Exception -> 0x1var_ }
            r13 = r96
            r7.obj = r13     // Catch:{ Exception -> 0x1var_ }
            r9 = r25
            r7.originalPath = r9     // Catch:{ Exception -> 0x1efa }
            r25 = r9
            r9 = r91
            r7.parentObject = r9     // Catch:{ Exception -> 0x1ed4 }
            r19 = r9
            r9 = r113
            if (r9 == 0) goto L_0x1ecd
            r91 = r3
            r3 = 1
            goto L_0x1ed0
        L_0x1ecd:
            r91 = r3
            r3 = 0
        L_0x1ed0:
            r7.scheduled = r3     // Catch:{ Exception -> 0x1fe8 }
            goto L_0x1fa4
        L_0x1ed4:
            r0 = move-exception
            r19 = r9
            r9 = r113
            r5 = r1
            r24 = r4
            r33 = r6
            r20 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1efa:
            r0 = move-exception
            r19 = r91
            r25 = r9
            r9 = r113
            r5 = r1
            r24 = r4
            r33 = r6
            r20 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1var_:
            r0 = move-exception
            r19 = r91
            r9 = r113
            r5 = r1
            r24 = r4
            r33 = r6
            r20 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1var_:
            r0 = move-exception
            r19 = r91
            r13 = r96
            r9 = r113
            r5 = r1
            r24 = r4
            r33 = r6
            r20 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1var_:
            r0 = move-exception
            r19 = r91
            r13 = r96
            r9 = r113
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x1var_:
            r12 = r90
            r19 = r91
            r13 = r96
            r9 = r113
            r91 = r3
            r7 = r93
        L_0x1fa4:
            r7.inputUploadMedia = r2     // Catch:{ Exception -> 0x1fe8 }
            r7.performMediaUpload = r5     // Catch:{ Exception -> 0x1fe8 }
            java.util.ArrayList r3 = r4.thumbs     // Catch:{ Exception -> 0x1fe8 }
            boolean r3 = r3.isEmpty()     // Catch:{ Exception -> 0x1fe8 }
            if (r3 != 0) goto L_0x1fc6
            java.util.ArrayList r3 = r4.thumbs     // Catch:{ Exception -> 0x1fe8 }
            r95 = r2
            r2 = 0
            java.lang.Object r3 = r3.get(r2)     // Catch:{ Exception -> 0x1fe8 }
            org.telegram.tgnet.TLRPC$PhotoSize r3 = (org.telegram.tgnet.TLRPC.PhotoSize) r3     // Catch:{ Exception -> 0x1fe8 }
            r2 = r3
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x1fe8 }
            if (r3 != 0) goto L_0x1fc8
            r7.photoSize = r2     // Catch:{ Exception -> 0x1fe8 }
            r7.locationParent = r4     // Catch:{ Exception -> 0x1fe8 }
            goto L_0x1fc8
        L_0x1fc6:
            r95 = r2
        L_0x1fc8:
            r7.videoEditedInfo = r8     // Catch:{ Exception -> 0x1fe8 }
            r111 = r1
            r24 = r4
            r18 = r5
            r99 = r6
            r96 = r8
            r3 = r9
            r43 = r11
            r9 = r25
            r20 = r46
            r5 = r50
            r11 = r91
            r8 = r103
            r88 = r10
            r10 = r7
            r7 = r88
            goto L_0x29da
        L_0x1fe8:
            r0 = move-exception
            r5 = r1
            r24 = r4
            r33 = r6
            r20 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x200a:
            r0 = move-exception
            r12 = r90
            r19 = r91
            r13 = r96
            r9 = r113
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2034:
            r0 = move-exception
            r19 = r91
            r6 = r94
            r13 = r96
            r1 = r111
            r50 = r5
            r97 = r7
            r32 = r9
            r29 = r12
            r12 = r90
            r9 = r113
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x206a:
            r0 = move-exception
            r19 = r91
            r6 = r94
            r13 = r96
            r1 = r111
            r50 = r5
            r97 = r7
            r32 = r9
            r29 = r12
            r8 = r68
            r12 = r90
            r9 = r113
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x20a2:
            r0 = move-exception
            r19 = r91
            r6 = r94
            r13 = r96
            r1 = r111
            r50 = r5
            r97 = r7
            r32 = r9
            r29 = r12
            r4 = r45
            r8 = r68
            r12 = r90
            r9 = r113
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r19 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x20dc:
            r19 = r91
            r6 = r94
            r13 = r96
            r94 = r1
            r50 = r5
            r97 = r7
            r32 = r9
            r29 = r12
            r4 = r45
            r8 = r68
            r12 = r90
            r1 = r111
            r9 = r113
            r5 = 6
            if (r11 != r5) goto L_0x21a0
            org.telegram.tgnet.TLRPC$TL_inputMediaContact r3 = new org.telegram.tgnet.TLRPC$TL_inputMediaContact     // Catch:{ Exception -> 0x217a }
            r3.<init>()     // Catch:{ Exception -> 0x217a }
            r7 = r49
            java.lang.String r5 = r7.phone     // Catch:{ Exception -> 0x2154 }
            r3.phone_number = r5     // Catch:{ Exception -> 0x2154 }
            java.lang.String r5 = r7.first_name     // Catch:{ Exception -> 0x2154 }
            r3.first_name = r5     // Catch:{ Exception -> 0x2154 }
            java.lang.String r5 = r7.last_name     // Catch:{ Exception -> 0x2154 }
            r3.last_name = r5     // Catch:{ Exception -> 0x2154 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r5 = r7.restriction_reason     // Catch:{ Exception -> 0x2154 }
            boolean r5 = r5.isEmpty()     // Catch:{ Exception -> 0x2154 }
            if (r5 != 0) goto L_0x2137
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r5 = r7.restriction_reason     // Catch:{ Exception -> 0x2154 }
            r96 = r8
            r8 = 0
            java.lang.Object r5 = r5.get(r8)     // Catch:{ Exception -> 0x21d3 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r5 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r5     // Catch:{ Exception -> 0x21d3 }
            java.lang.String r5 = r5.text     // Catch:{ Exception -> 0x21d3 }
            java.lang.String r8 = "BEGIN:VCARD"
            boolean r5 = r5.startsWith(r8)     // Catch:{ Exception -> 0x21d3 }
            if (r5 == 0) goto L_0x2139
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r2 = r7.restriction_reason     // Catch:{ Exception -> 0x21d3 }
            r5 = 0
            java.lang.Object r2 = r2.get(r5)     // Catch:{ Exception -> 0x21d3 }
            org.telegram.tgnet.TLRPC$TL_restrictionReason r2 = (org.telegram.tgnet.TLRPC.TL_restrictionReason) r2     // Catch:{ Exception -> 0x21d3 }
            java.lang.String r2 = r2.text     // Catch:{ Exception -> 0x21d3 }
            r3.vcard = r2     // Catch:{ Exception -> 0x21d3 }
            goto L_0x213b
        L_0x2137:
            r96 = r8
        L_0x2139:
            r3.vcard = r2     // Catch:{ Exception -> 0x21d3 }
        L_0x213b:
            r8 = r103
            r111 = r1
            r24 = r4
            r99 = r6
            r49 = r7
            r7 = r10
            r43 = r11
            r20 = r46
            r5 = r50
            r10 = r93
            r11 = r3
            r3 = r9
            r9 = r25
            goto L_0x29da
        L_0x2154:
            r0 = move-exception
            r96 = r8
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r49 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x217a:
            r0 = move-exception
            r96 = r8
            r7 = r49
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x21a0:
            r96 = r8
            r7 = r49
            r2 = 7
            if (r11 == r2) goto L_0x24ea
            r2 = 9
            if (r11 != r2) goto L_0x21b5
            r91 = r6
            r49 = r7
            r7 = r46
            r9 = r67
            goto L_0x24f2
        L_0x21b5:
            r2 = 8
            if (r11 != r2) goto L_0x2361
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x2339 }
            r2.<init>()     // Catch:{ Exception -> 0x2339 }
            java.lang.String r5 = r4.mime_type     // Catch:{ Exception -> 0x2339 }
            r2.mime_type = r5     // Catch:{ Exception -> 0x2339 }
            java.util.ArrayList r5 = r4.attributes     // Catch:{ Exception -> 0x2339 }
            r2.attributes = r5     // Catch:{ Exception -> 0x2339 }
            if (r6 == 0) goto L_0x21f7
            r2.ttl_seconds = r6     // Catch:{ Exception -> 0x21d3 }
            r10.ttl = r6     // Catch:{ Exception -> 0x21d3 }
            int r5 = r2.flags     // Catch:{ Exception -> 0x21d3 }
            r8 = 2
            r5 = r5 | r8
            r2.flags = r5     // Catch:{ Exception -> 0x21d3 }
            goto L_0x21f7
        L_0x21d3:
            r0 = move-exception
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r6
            r49 = r7
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x21f7:
            r8 = r6
            long r5 = r4.access_hash     // Catch:{ Exception -> 0x2311 }
            int r20 = (r5 > r16 ? 1 : (r5 == r16 ? 0 : -1))
            if (r20 != 0) goto L_0x2209
            r3 = r2
            r18 = 1
            r49 = r7
            r91 = r8
            r5 = r18
            goto L_0x2274
        L_0x2209:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r5 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x2311 }
            r5.<init>()     // Catch:{ Exception -> 0x2311 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r6 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x2311 }
            r6.<init>()     // Catch:{ Exception -> 0x2311 }
            r5.id = r6     // Catch:{ Exception -> 0x2311 }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r5.id     // Catch:{ Exception -> 0x2311 }
            r49 = r7
            r91 = r8
            long r7 = r4.id     // Catch:{ Exception -> 0x22ed }
            r6.id = r7     // Catch:{ Exception -> 0x22ed }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r5.id     // Catch:{ Exception -> 0x22ed }
            long r7 = r4.access_hash     // Catch:{ Exception -> 0x22ed }
            r6.access_hash = r7     // Catch:{ Exception -> 0x22ed }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r5.id     // Catch:{ Exception -> 0x22ed }
            byte[] r7 = r4.file_reference     // Catch:{ Exception -> 0x22ed }
            r6.file_reference = r7     // Catch:{ Exception -> 0x22ed }
            org.telegram.tgnet.TLRPC$InputDocument r6 = r5.id     // Catch:{ Exception -> 0x22ed }
            byte[] r6 = r6.file_reference     // Catch:{ Exception -> 0x22ed }
            if (r6 != 0) goto L_0x225b
            org.telegram.tgnet.TLRPC$InputDocument r6 = r5.id     // Catch:{ Exception -> 0x2239 }
            r7 = 0
            byte[] r8 = new byte[r7]     // Catch:{ Exception -> 0x2239 }
            r6.file_reference = r8     // Catch:{ Exception -> 0x2239 }
            goto L_0x225b
        L_0x2239:
            r0 = move-exception
            r33 = r91
            r20 = r93
            r5 = r1
            r24 = r4
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x225b:
            if (r1 == 0) goto L_0x2271
            boolean r6 = r1.containsKey(r3)     // Catch:{ Exception -> 0x2239 }
            if (r6 == 0) goto L_0x2271
            java.lang.Object r3 = r1.get(r3)     // Catch:{ Exception -> 0x2239 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x2239 }
            r5.query = r3     // Catch:{ Exception -> 0x2239 }
            int r3 = r5.flags     // Catch:{ Exception -> 0x2239 }
            r6 = 2
            r3 = r3 | r6
            r5.flags = r3     // Catch:{ Exception -> 0x2239 }
        L_0x2271:
            r3 = r5
            r5 = r18
        L_0x2274:
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r6 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x22ed }
            r6.<init>(r14)     // Catch:{ Exception -> 0x22ed }
            r7 = 3
            r6.type = r7     // Catch:{ Exception -> 0x22c9 }
            r6.obj = r13     // Catch:{ Exception -> 0x22c9 }
            r8 = r19
            r6.parentObject = r8     // Catch:{ Exception -> 0x22a7 }
            r6.inputUploadMedia = r2     // Catch:{ Exception -> 0x22a7 }
            r6.performMediaUpload = r5     // Catch:{ Exception -> 0x22a7 }
            if (r9 == 0) goto L_0x228a
            r7 = 1
            goto L_0x228b
        L_0x228a:
            r7 = 0
        L_0x228b:
            r6.scheduled = r7     // Catch:{ Exception -> 0x22a7 }
            r99 = r91
            r111 = r1
            r24 = r4
            r18 = r5
            r19 = r8
            r7 = r10
            r43 = r11
            r20 = r46
            r5 = r50
            r8 = r103
            r11 = r3
            r10 = r6
            r3 = r9
            r9 = r25
            goto L_0x29da
        L_0x22a7:
            r0 = move-exception
            r33 = r91
            r19 = r96
            r5 = r1
            r24 = r4
            r20 = r6
            r38 = r8
            r21 = r11
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x22c9:
            r0 = move-exception
            r8 = r19
            r33 = r91
            r19 = r96
            r5 = r1
            r24 = r4
            r20 = r6
            r38 = r8
            r21 = r11
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x22ed:
            r0 = move-exception
            r8 = r19
            r33 = r91
            r20 = r93
            r19 = r96
            r5 = r1
            r24 = r4
            r38 = r8
            r21 = r11
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2311:
            r0 = move-exception
            r49 = r7
            r91 = r8
            r8 = r19
            r33 = r91
            r20 = r93
            r19 = r96
            r5 = r1
            r24 = r4
            r38 = r8
            r21 = r11
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2339:
            r0 = move-exception
            r91 = r6
            r49 = r7
            r8 = r19
            r33 = r91
            r20 = r93
            r19 = r96
            r5 = r1
            r24 = r4
            r38 = r8
            r21 = r11
            r39 = r29
            r28 = r32
            r32 = r46
            r77 = r67
            r29 = r97
            r1 = r0
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2361:
            r91 = r6
            r49 = r7
            r8 = r19
            r2 = 10
            if (r11 != r2) goto L_0x245d
            org.telegram.tgnet.TLRPC$TL_inputMediaPoll r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaPoll     // Catch:{ Exception -> 0x2437 }
            r2.<init>()     // Catch:{ Exception -> 0x2437 }
            r7 = r46
            org.telegram.tgnet.TLRPC$Poll r3 = r7.poll     // Catch:{ Exception -> 0x2413 }
            r2.poll = r3     // Catch:{ Exception -> 0x2413 }
            if (r1 == 0) goto L_0x23b6
            java.lang.String r3 = "answers"
            boolean r3 = r1.containsKey(r3)     // Catch:{ Exception -> 0x2413 }
            if (r3 == 0) goto L_0x23b6
            java.lang.String r3 = "answers"
            java.lang.Object r3 = r1.get(r3)     // Catch:{ Exception -> 0x2413 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x2413 }
            byte[] r3 = org.telegram.messenger.Utilities.hexToBytes(r3)     // Catch:{ Exception -> 0x2413 }
            int r5 = r3.length     // Catch:{ Exception -> 0x2413 }
            if (r5 <= 0) goto L_0x23b3
            r5 = 0
        L_0x2390:
            int r6 = r3.length     // Catch:{ Exception -> 0x2413 }
            if (r5 >= r6) goto L_0x23aa
            java.util.ArrayList<byte[]> r6 = r2.correct_answers     // Catch:{ Exception -> 0x2413 }
            r19 = r8
            r9 = 1
            byte[] r8 = new byte[r9]     // Catch:{ Exception -> 0x23f1 }
            byte r9 = r3[r5]     // Catch:{ Exception -> 0x23f1 }
            r20 = 0
            r8[r20] = r9     // Catch:{ Exception -> 0x23f1 }
            r6.add(r8)     // Catch:{ Exception -> 0x23f1 }
            int r5 = r5 + 1
            r9 = r113
            r8 = r19
            goto L_0x2390
        L_0x23aa:
            r19 = r8
            int r5 = r2.flags     // Catch:{ Exception -> 0x23f1 }
            r6 = 1
            r5 = r5 | r6
            r2.flags = r5     // Catch:{ Exception -> 0x23f1 }
            goto L_0x23b8
        L_0x23b3:
            r19 = r8
            goto L_0x23b8
        L_0x23b6:
            r19 = r8
        L_0x23b8:
            org.telegram.tgnet.TLRPC$PollResults r3 = r7.results     // Catch:{ Exception -> 0x23f1 }
            if (r3 == 0) goto L_0x23d8
            org.telegram.tgnet.TLRPC$PollResults r3 = r7.results     // Catch:{ Exception -> 0x23f1 }
            java.lang.String r3 = r3.solution     // Catch:{ Exception -> 0x23f1 }
            boolean r3 = android.text.TextUtils.isEmpty(r3)     // Catch:{ Exception -> 0x23f1 }
            if (r3 != 0) goto L_0x23d8
            org.telegram.tgnet.TLRPC$PollResults r3 = r7.results     // Catch:{ Exception -> 0x23f1 }
            java.lang.String r3 = r3.solution     // Catch:{ Exception -> 0x23f1 }
            r2.solution = r3     // Catch:{ Exception -> 0x23f1 }
            org.telegram.tgnet.TLRPC$PollResults r3 = r7.results     // Catch:{ Exception -> 0x23f1 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r3 = r3.solution_entities     // Catch:{ Exception -> 0x23f1 }
            r2.solution_entities = r3     // Catch:{ Exception -> 0x23f1 }
            int r3 = r2.flags     // Catch:{ Exception -> 0x23f1 }
            r5 = 2
            r3 = r3 | r5
            r2.flags = r3     // Catch:{ Exception -> 0x23f1 }
        L_0x23d8:
            r99 = r91
            r8 = r103
            r3 = r113
            r111 = r1
            r24 = r4
            r20 = r7
            r7 = r10
            r43 = r11
            r9 = r25
            r5 = r50
            r10 = r93
            r11 = r2
            goto L_0x29da
        L_0x23f1:
            r0 = move-exception
            r33 = r91
            r20 = r93
            r5 = r1
            r24 = r4
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r7
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2413:
            r0 = move-exception
            r19 = r8
            r33 = r91
            r20 = r93
            r5 = r1
            r24 = r4
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r7
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2437:
            r0 = move-exception
            r19 = r8
            r7 = r46
            r33 = r91
            r20 = r93
            r5 = r1
            r24 = r4
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r77 = r67
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r7
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x245d:
            r19 = r8
            r7 = r46
            r2 = 11
            if (r11 != r2) goto L_0x24cf
            org.telegram.tgnet.TLRPC$TL_inputMediaDice r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaDice     // Catch:{ Exception -> 0x24ab }
            r2.<init>()     // Catch:{ Exception -> 0x24ab }
            r9 = r67
            r2.emoticon = r9     // Catch:{ Exception -> 0x2489 }
            r3 = r2
            r99 = r91
            r8 = r103
            r111 = r1
            r24 = r4
            r20 = r7
            r67 = r9
            r7 = r10
            r43 = r11
            r9 = r25
            r5 = r50
            r10 = r93
            r11 = r3
            r3 = r113
            goto L_0x29da
        L_0x2489:
            r0 = move-exception
            r33 = r91
            r20 = r93
            r5 = r1
            r24 = r4
            r77 = r9
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r7
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x24ab:
            r0 = move-exception
            r9 = r67
            r33 = r91
            r20 = r93
            r5 = r1
            r24 = r4
            r77 = r9
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r7
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x24cf:
            r9 = r67
            r99 = r91
            r8 = r103
            r3 = r113
            r111 = r1
            r24 = r4
            r20 = r7
            r7 = r10
            r43 = r11
            r9 = r25
            r5 = r50
            r10 = r93
            r11 = r94
            goto L_0x29da
        L_0x24ea:
            r91 = r6
            r49 = r7
            r7 = r46
            r9 = r67
        L_0x24f2:
            r2 = 0
            if (r25 != 0) goto L_0x2529
            r8 = r91
            r6 = r103
            if (r6 != 0) goto L_0x252b
            long r5 = r4.access_hash     // Catch:{ Exception -> 0x2507 }
            int r20 = (r5 > r16 ? 1 : (r5 == r16 ? 0 : -1))
            if (r20 != 0) goto L_0x2502
            goto L_0x252b
        L_0x2502:
            r5 = 0
            r20 = r7
            goto L_0x25c4
        L_0x2507:
            r0 = move-exception
            r20 = r93
            r5 = r1
            r24 = r4
            r33 = r8
            r77 = r9
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r7
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2529:
            r8 = r91
        L_0x252b:
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument r5 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x2778 }
            r5.<init>()     // Catch:{ Exception -> 0x2778 }
            if (r8 == 0) goto L_0x253e
            r5.ttl_seconds = r8     // Catch:{ Exception -> 0x2507 }
            r10.ttl = r8     // Catch:{ Exception -> 0x2507 }
            int r6 = r5.flags     // Catch:{ Exception -> 0x2507 }
            r20 = 2
            r6 = r6 | 2
            r5.flags = r6     // Catch:{ Exception -> 0x2507 }
        L_0x253e:
            if (r23 != 0) goto L_0x2586
            boolean r6 = android.text.TextUtils.isEmpty(r103)     // Catch:{ Exception -> 0x2562 }
            if (r6 != 0) goto L_0x255f
            java.lang.String r6 = r103.toLowerCase()     // Catch:{ Exception -> 0x2562 }
            r20 = r7
            java.lang.String r7 = "mp4"
            boolean r6 = r6.endsWith(r7)     // Catch:{ Exception -> 0x2597 }
            if (r6 == 0) goto L_0x258b
            if (r1 == 0) goto L_0x2588
            java.lang.String r6 = "forceDocument"
            boolean r6 = r1.containsKey(r6)     // Catch:{ Exception -> 0x2597 }
            if (r6 == 0) goto L_0x258b
            goto L_0x2588
        L_0x255f:
            r20 = r7
            goto L_0x258b
        L_0x2562:
            r0 = move-exception
            r20 = r7
            r5 = r1
            r24 = r4
            r33 = r8
            r77 = r9
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r20
            r20 = r93
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x2586:
            r20 = r7
        L_0x2588:
            r6 = 1
            r5.nosound_video = r6     // Catch:{ Exception -> 0x2750 }
        L_0x258b:
            if (r1 == 0) goto L_0x25b9
            java.lang.String r6 = "forceDocument"
            boolean r6 = r1.containsKey(r6)     // Catch:{ Exception -> 0x2597 }
            if (r6 == 0) goto L_0x25b9
            r6 = 1
            goto L_0x25ba
        L_0x2597:
            r0 = move-exception
            r5 = r1
            r24 = r4
            r33 = r8
            r77 = r9
            r21 = r11
            r38 = r19
            r39 = r29
            r28 = r32
            r19 = r96
            r29 = r97
            r1 = r0
            r32 = r20
            r20 = r93
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            goto L_0x43f0
        L_0x25b9:
            r6 = 0
        L_0x25ba:
            r5.force_file = r6     // Catch:{ Exception -> 0x2750 }
            java.lang.String r6 = r4.mime_type     // Catch:{ Exception -> 0x2750 }
            r5.mime_type = r6     // Catch:{ Exception -> 0x2750 }
            java.util.ArrayList r6 = r4.attributes     // Catch:{ Exception -> 0x2750 }
            r5.attributes = r6     // Catch:{ Exception -> 0x2750 }
        L_0x25c4:
            long r6 = r4.access_hash     // Catch:{ Exception -> 0x2750 }
            int r24 = (r6 > r16 ? 1 : (r6 == r16 ? 0 : -1))
            if (r24 != 0) goto L_0x25d5
            r3 = r5
            boolean r6 = r5 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument     // Catch:{ Exception -> 0x2597 }
            r18 = r6
            r67 = r9
            r28 = r10
            goto L_0x263e
        L_0x25d5:
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r6 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument     // Catch:{ Exception -> 0x2750 }
            r6.<init>()     // Catch:{ Exception -> 0x2750 }
            org.telegram.tgnet.TLRPC$TL_inputDocument r7 = new org.telegram.tgnet.TLRPC$TL_inputDocument     // Catch:{ Exception -> 0x2750 }
            r7.<init>()     // Catch:{ Exception -> 0x2750 }
            r6.id = r7     // Catch:{ Exception -> 0x2750 }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r6.id     // Catch:{ Exception -> 0x2750 }
            r67 = r9
            r28 = r10
            long r9 = r4.id     // Catch:{ Exception -> 0x26b6 }
            r7.id = r9     // Catch:{ Exception -> 0x26b6 }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r6.id     // Catch:{ Exception -> 0x26b6 }
            long r9 = r4.access_hash     // Catch:{ Exception -> 0x26b6 }
            r7.access_hash = r9     // Catch:{ Exception -> 0x26b6 }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r6.id     // Catch:{ Exception -> 0x26b6 }
            byte[] r9 = r4.file_reference     // Catch:{ Exception -> 0x26b6 }
            r7.file_reference = r9     // Catch:{ Exception -> 0x26b6 }
            org.telegram.tgnet.TLRPC$InputDocument r7 = r6.id     // Catch:{ Exception -> 0x26b6 }
            byte[] r7 = r7.file_reference     // Catch:{ Exception -> 0x26b6 }
            if (r7 != 0) goto L_0x2625
            org.telegram.tgnet.TLRPC$InputDocument r7 = r6.id     // Catch:{ Exception -> 0x2605 }
            r9 = 0
            byte[] r10 = new byte[r9]     // Catch:{ Exception -> 0x2605 }
            r7.file_reference = r10     // Catch:{ Exception -> 0x2605 }
            goto L_0x2625
        L_0x2605:
            r0 = move-exception
            r5 = r1
            r24 = r4
            r33 = r8
            r21 = r11
            r10 = r14
            r38 = r19
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r19 = r96
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x2625:
            if (r1 == 0) goto L_0x263b
            boolean r7 = r1.containsKey(r3)     // Catch:{ Exception -> 0x2605 }
            if (r7 == 0) goto L_0x263b
            java.lang.Object r3 = r1.get(r3)     // Catch:{ Exception -> 0x2605 }
            java.lang.String r3 = (java.lang.String) r3     // Catch:{ Exception -> 0x2605 }
            r6.query = r3     // Catch:{ Exception -> 0x2605 }
            int r3 = r6.flags     // Catch:{ Exception -> 0x2605 }
            r7 = 2
            r3 = r3 | r7
            r6.flags = r3     // Catch:{ Exception -> 0x2605 }
        L_0x263b:
            r3 = r6
            r6 = r18
        L_0x263e:
            if (r2 != 0) goto L_0x272b
            if (r5 == 0) goto L_0x272b
            if (r93 != 0) goto L_0x26da
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r7 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x26b6 }
            r7.<init>(r14)     // Catch:{ Exception -> 0x26b6 }
            r9 = 2
            r7.type = r9     // Catch:{ Exception -> 0x2692 }
            r7.obj = r13     // Catch:{ Exception -> 0x2692 }
            r9 = r25
            r7.originalPath = r9     // Catch:{ Exception -> 0x266c }
            r10 = r19
            r7.parentObject = r10     // Catch:{ Exception -> 0x2667 }
            r91 = r3
            r3 = r113
            if (r3 == 0) goto L_0x2660
            r95 = r2
            r2 = 1
            goto L_0x2663
        L_0x2660:
            r95 = r2
            r2 = 0
        L_0x2663:
            r7.scheduled = r2     // Catch:{ Exception -> 0x2709 }
            goto L_0x26e6
        L_0x2667:
            r0 = move-exception
            r3 = r113
            goto L_0x270a
        L_0x266c:
            r0 = move-exception
            r3 = r113
            r10 = r19
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r7
            goto L_0x43f0
        L_0x2692:
            r0 = move-exception
            r3 = r113
            r10 = r19
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r38 = r10
            r21 = r11
            r10 = r14
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r7
            goto L_0x43f0
        L_0x26b6:
            r0 = move-exception
            r3 = r113
            r10 = r19
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r38 = r10
            r21 = r11
            r10 = r14
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x26da:
            r95 = r2
            r91 = r3
            r10 = r19
            r9 = r25
            r3 = r113
            r7 = r93
        L_0x26e6:
            r7.inputUploadMedia = r5     // Catch:{ Exception -> 0x2709 }
            r7.performMediaUpload = r6     // Catch:{ Exception -> 0x2709 }
            java.util.ArrayList r2 = r4.thumbs     // Catch:{ Exception -> 0x2709 }
            boolean r2 = r2.isEmpty()     // Catch:{ Exception -> 0x2709 }
            if (r2 != 0) goto L_0x2706
            java.util.ArrayList r2 = r4.thumbs     // Catch:{ Exception -> 0x2709 }
            r99 = r5
            r5 = 0
            java.lang.Object r2 = r2.get(r5)     // Catch:{ Exception -> 0x2709 }
            org.telegram.tgnet.TLRPC$PhotoSize r2 = (org.telegram.tgnet.TLRPC.PhotoSize) r2     // Catch:{ Exception -> 0x2709 }
            boolean r5 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize     // Catch:{ Exception -> 0x2709 }
            if (r5 != 0) goto L_0x2739
            r7.photoSize = r2     // Catch:{ Exception -> 0x2709 }
            r7.locationParent = r4     // Catch:{ Exception -> 0x2709 }
            goto L_0x2739
        L_0x2706:
            r99 = r5
            goto L_0x2739
        L_0x2709:
            r0 = move-exception
        L_0x270a:
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r7
            goto L_0x43f0
        L_0x272b:
            r95 = r2
            r91 = r3
            r99 = r5
            r10 = r19
            r9 = r25
            r3 = r113
            r7 = r93
        L_0x2739:
            r111 = r1
            r24 = r4
            r18 = r6
            r99 = r8
            r19 = r10
            r43 = r11
            r5 = r50
            r11 = r91
            r8 = r103
            r10 = r7
            r7 = r28
            goto L_0x29da
        L_0x2750:
            r0 = move-exception
            r3 = r113
            r67 = r9
            r28 = r10
            r10 = r19
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r38 = r10
            r21 = r11
            r10 = r14
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x2778:
            r0 = move-exception
            r3 = r113
            r20 = r7
            r67 = r9
            r28 = r10
            r10 = r19
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r38 = r10
            r21 = r11
            r10 = r14
            r14 = r28
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x27a2:
            r8 = r94
            r13 = r96
            r3 = r113
            r94 = r1
            r97 = r7
            r32 = r9
            r28 = r10
            r29 = r12
            r9 = r25
            r4 = r45
            r20 = r46
            r96 = r68
            r12 = r90
            r10 = r91
            r1 = r111
        L_0x27c0:
            org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaUploadedPhoto     // Catch:{ Exception -> 0x2f3c }
            r2.<init>()     // Catch:{ Exception -> 0x2f3c }
            if (r8 == 0) goto L_0x2818
            r2.ttl_seconds = r8     // Catch:{ Exception -> 0x27f5 }
            r7 = r28
            r7.ttl = r8     // Catch:{ Exception -> 0x27d4 }
            int r5 = r2.flags     // Catch:{ Exception -> 0x27d4 }
            r6 = 2
            r5 = r5 | r6
            r2.flags = r5     // Catch:{ Exception -> 0x27d4 }
            goto L_0x281b
        L_0x27d4:
            r0 = move-exception
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x27f5:
            r0 = move-exception
            r7 = r28
            r19 = r96
            r5 = r1
            r24 = r4
            r33 = r8
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r1 = r0
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x2818:
            r7 = r28
            r6 = 2
        L_0x281b:
            if (r1 == 0) goto L_0x2905
            java.lang.String r5 = "masks"
            java.lang.Object r5 = r1.get(r5)     // Catch:{ Exception -> 0x28df }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ Exception -> 0x28df }
            if (r5 == 0) goto L_0x28d6
            org.telegram.tgnet.SerializedData r6 = new org.telegram.tgnet.SerializedData     // Catch:{ Exception -> 0x28df }
            r111 = r1
            byte[] r1 = org.telegram.messenger.Utilities.hexToBytes(r5)     // Catch:{ Exception -> 0x28b2 }
            r6.<init>((byte[]) r1)     // Catch:{ Exception -> 0x28b2 }
            r1 = r6
            r6 = 0
            int r19 = r1.readInt32(r6)     // Catch:{ Exception -> 0x28b2 }
            r6 = r19
            r19 = 0
            r24 = r4
            r4 = r19
        L_0x2840:
            if (r4 >= r6) goto L_0x2881
            r91 = r5
            java.util.ArrayList r5 = r2.stickers     // Catch:{ Exception -> 0x285f }
            r95 = r6
            r99 = r8
            r6 = 0
            int r8 = r1.readInt32(r6)     // Catch:{ Exception -> 0x2892 }
            org.telegram.tgnet.TLRPC$InputDocument r8 = org.telegram.tgnet.TLRPC.InputDocument.TLdeserialize(r1, r8, r6)     // Catch:{ Exception -> 0x2892 }
            r5.add(r8)     // Catch:{ Exception -> 0x2892 }
            int r4 = r4 + 1
            r5 = r91
            r6 = r95
            r8 = r99
            goto L_0x2840
        L_0x285f:
            r0 = move-exception
            r99 = r8
            r19 = r96
            r33 = r99
            r5 = r111
            r1 = r0
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x2881:
            r91 = r5
            r95 = r6
            r99 = r8
            int r4 = r2.flags     // Catch:{ Exception -> 0x2892 }
            r5 = 1
            r4 = r4 | r5
            r2.flags = r4     // Catch:{ Exception -> 0x2892 }
            r1.cleanup()     // Catch:{ Exception -> 0x2892 }
            goto L_0x290b
        L_0x2892:
            r0 = move-exception
            r19 = r96
            r33 = r99
            r5 = r111
            r1 = r0
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x28b2:
            r0 = move-exception
            r24 = r4
            r99 = r8
            r19 = r96
            r33 = r99
            r5 = r111
            r1 = r0
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x28d6:
            r111 = r1
            r24 = r4
            r91 = r5
            r99 = r8
            goto L_0x290b
        L_0x28df:
            r0 = move-exception
            r111 = r1
            r24 = r4
            r99 = r8
            r19 = r96
            r33 = r99
            r5 = r111
            r1 = r0
            r25 = r9
            r38 = r10
            r21 = r11
            r10 = r14
            r39 = r29
            r28 = r32
            r77 = r67
            r29 = r97
            r15 = r109
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x2905:
            r111 = r1
            r24 = r4
            r99 = r8
        L_0x290b:
            r19 = r10
            r43 = r11
            r5 = r50
            long r10 = r5.access_hash     // Catch:{ Exception -> 0x2var_ }
            int r1 = (r10 > r16 ? 1 : (r10 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x291d
            r1 = r2
            r18 = 1
            r4 = r18
            goto L_0x294b
        L_0x291d:
            org.telegram.tgnet.TLRPC$TL_inputMediaPhoto r1 = new org.telegram.tgnet.TLRPC$TL_inputMediaPhoto     // Catch:{ Exception -> 0x2var_ }
            r1.<init>()     // Catch:{ Exception -> 0x2var_ }
            org.telegram.tgnet.TLRPC$TL_inputPhoto r4 = new org.telegram.tgnet.TLRPC$TL_inputPhoto     // Catch:{ Exception -> 0x2var_ }
            r4.<init>()     // Catch:{ Exception -> 0x2var_ }
            r1.id = r4     // Catch:{ Exception -> 0x2var_ }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r1.id     // Catch:{ Exception -> 0x2var_ }
            long r10 = r5.id     // Catch:{ Exception -> 0x2var_ }
            r4.id = r10     // Catch:{ Exception -> 0x2var_ }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r1.id     // Catch:{ Exception -> 0x2var_ }
            long r10 = r5.access_hash     // Catch:{ Exception -> 0x2var_ }
            r4.access_hash = r10     // Catch:{ Exception -> 0x2var_ }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r1.id     // Catch:{ Exception -> 0x2var_ }
            byte[] r6 = r5.file_reference     // Catch:{ Exception -> 0x2var_ }
            r4.file_reference = r6     // Catch:{ Exception -> 0x2var_ }
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r1.id     // Catch:{ Exception -> 0x2var_ }
            byte[] r4 = r4.file_reference     // Catch:{ Exception -> 0x2var_ }
            if (r4 != 0) goto L_0x2948
            org.telegram.tgnet.TLRPC$InputPhoto r4 = r1.id     // Catch:{ Exception -> 0x2983 }
            r6 = 0
            byte[] r8 = new byte[r6]     // Catch:{ Exception -> 0x2983 }
            r4.file_reference = r8     // Catch:{ Exception -> 0x2983 }
        L_0x2948:
            r4 = r1
            r4 = r18
        L_0x294b:
            if (r93 != 0) goto L_0x29a5
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r6 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x2983 }
            r6.<init>(r14)     // Catch:{ Exception -> 0x2983 }
            r8 = 0
            r6.type = r8     // Catch:{ Exception -> 0x2961 }
            r6.obj = r13     // Catch:{ Exception -> 0x2961 }
            r6.originalPath = r9     // Catch:{ Exception -> 0x2961 }
            if (r3 == 0) goto L_0x295d
            r8 = 1
            goto L_0x295e
        L_0x295d:
            r8 = 0
        L_0x295e:
            r6.scheduled = r8     // Catch:{ Exception -> 0x2961 }
            goto L_0x29a7
        L_0x2961:
            r0 = move-exception
            r33 = r99
            r1 = r0
            r50 = r5
            r25 = r9
            r10 = r14
            r38 = r19
            r39 = r29
            r28 = r32
            r21 = r43
            r77 = r67
            r19 = r96
            r29 = r97
            r15 = r109
            r5 = r111
            r14 = r7
            r32 = r20
            r20 = r6
            goto L_0x43f0
        L_0x2983:
            r0 = move-exception
            r33 = r99
            r1 = r0
            r50 = r5
            r25 = r9
            r10 = r14
            r38 = r19
            r39 = r29
            r28 = r32
            r21 = r43
            r77 = r67
            r19 = r96
            r29 = r97
            r15 = r109
            r5 = r111
            r14 = r7
            r32 = r20
            r20 = r93
            goto L_0x43f0
        L_0x29a5:
            r6 = r93
        L_0x29a7:
            r6.inputUploadMedia = r2     // Catch:{ Exception -> 0x2ecc }
            r6.performMediaUpload = r4     // Catch:{ Exception -> 0x2ecc }
            r8 = r103
            if (r8 == 0) goto L_0x29c0
            int r10 = r103.length()     // Catch:{ Exception -> 0x2961 }
            if (r10 <= 0) goto L_0x29c0
            r10 = r55
            boolean r10 = r8.startsWith(r10)     // Catch:{ Exception -> 0x2961 }
            if (r10 == 0) goto L_0x29c0
            r6.httpLocation = r8     // Catch:{ Exception -> 0x2961 }
            goto L_0x29d6
        L_0x29c0:
            java.util.ArrayList r10 = r5.sizes     // Catch:{ Exception -> 0x2ecc }
            java.util.ArrayList r11 = r5.sizes     // Catch:{ Exception -> 0x2ecc }
            int r11 = r11.size()     // Catch:{ Exception -> 0x2ecc }
            r18 = 1
            int r11 = r11 + -1
            java.lang.Object r10 = r10.get(r11)     // Catch:{ Exception -> 0x2ecc }
            org.telegram.tgnet.TLRPC$PhotoSize r10 = (org.telegram.tgnet.TLRPC.PhotoSize) r10     // Catch:{ Exception -> 0x2ecc }
            r6.photoSize = r10     // Catch:{ Exception -> 0x2ecc }
            r6.locationParent = r5     // Catch:{ Exception -> 0x2ecc }
        L_0x29d6:
            r11 = r1
            r18 = r4
            r10 = r6
        L_0x29da:
            r1 = r65
            int r4 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x2b88
            org.telegram.tgnet.TLObject r4 = r10.sendRequest     // Catch:{ Exception -> 0x2b61 }
            if (r4 == 0) goto L_0x2a10
            org.telegram.tgnet.TLObject r4 = r10.sendRequest     // Catch:{ Exception -> 0x29ee }
            org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia r4 = (org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia) r4     // Catch:{ Exception -> 0x29ee }
            r50 = r5
            r6 = r32
            goto L_0x2a64
        L_0x29ee:
            r0 = move-exception
            r33 = r99
            r1 = r0
            r50 = r5
            r25 = r9
            r38 = r19
            r39 = r29
            r28 = r32
            r21 = r43
            r77 = r67
            r19 = r96
            r29 = r97
            r5 = r111
            r32 = r20
            r20 = r10
            r10 = r14
            r15 = r109
            r14 = r7
            goto L_0x43f0
        L_0x2a10:
            org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia r4 = new org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia     // Catch:{ Exception -> 0x2b61 }
            r4.<init>()     // Catch:{ Exception -> 0x2b61 }
            r6 = r32
            r4.peer = r6     // Catch:{ Exception -> 0x2b3a }
            r50 = r5
            boolean r5 = r7.silent     // Catch:{ Exception -> 0x2b15 }
            r4.silent = r5     // Catch:{ Exception -> 0x2b15 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r7.reply_to     // Catch:{ Exception -> 0x2b15 }
            if (r5 == 0) goto L_0x2a58
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r7.reply_to     // Catch:{ Exception -> 0x2a38 }
            int r5 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x2a38 }
            if (r5 == 0) goto L_0x2a58
            int r5 = r4.flags     // Catch:{ Exception -> 0x2a38 }
            r25 = 1
            r5 = r5 | 1
            r4.flags = r5     // Catch:{ Exception -> 0x2a38 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r7.reply_to     // Catch:{ Exception -> 0x2a38 }
            int r5 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x2a38 }
            r4.reply_to_msg_id = r5     // Catch:{ Exception -> 0x2a38 }
            goto L_0x2a58
        L_0x2a38:
            r0 = move-exception
            r33 = r99
            r5 = r111
            r1 = r0
            r28 = r6
            r25 = r9
            r38 = r19
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r19 = r96
            r29 = r97
            r20 = r10
            r10 = r14
            r15 = r109
            r14 = r7
            goto L_0x43f0
        L_0x2a58:
            if (r3 == 0) goto L_0x2a62
            r4.schedule_date = r3     // Catch:{ Exception -> 0x2a38 }
            int r5 = r4.flags     // Catch:{ Exception -> 0x2a38 }
            r5 = r5 | 1024(0x400, float:1.435E-42)
            r4.flags = r5     // Catch:{ Exception -> 0x2a38 }
        L_0x2a62:
            r10.sendRequest = r4     // Catch:{ Exception -> 0x2b15 }
        L_0x2a64:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r10.messageObjects     // Catch:{ Exception -> 0x2b15 }
            r5.add(r13)     // Catch:{ Exception -> 0x2b15 }
            java.util.ArrayList<java.lang.Object> r5 = r10.parentObjects     // Catch:{ Exception -> 0x2b15 }
            r8 = r19
            r5.add(r8)     // Catch:{ Exception -> 0x2af2 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r5 = r10.locations     // Catch:{ Exception -> 0x2af2 }
            org.telegram.tgnet.TLRPC$PhotoSize r14 = r10.photoSize     // Catch:{ Exception -> 0x2af2 }
            r5.add(r14)     // Catch:{ Exception -> 0x2af2 }
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo> r5 = r10.videoEditedInfos     // Catch:{ Exception -> 0x2af2 }
            org.telegram.messenger.VideoEditedInfo r14 = r10.videoEditedInfo     // Catch:{ Exception -> 0x2af2 }
            r5.add(r14)     // Catch:{ Exception -> 0x2af2 }
            java.util.ArrayList<java.lang.String> r5 = r10.httpLocations     // Catch:{ Exception -> 0x2af2 }
            java.lang.String r14 = r10.httpLocation     // Catch:{ Exception -> 0x2af2 }
            r5.add(r14)     // Catch:{ Exception -> 0x2af2 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputMedia> r5 = r10.inputMedias     // Catch:{ Exception -> 0x2af2 }
            org.telegram.tgnet.TLRPC$InputMedia r14 = r10.inputUploadMedia     // Catch:{ Exception -> 0x2af2 }
            r5.add(r14)     // Catch:{ Exception -> 0x2af2 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r5 = r10.messages     // Catch:{ Exception -> 0x2af2 }
            r5.add(r7)     // Catch:{ Exception -> 0x2af2 }
            java.util.ArrayList<java.lang.String> r5 = r10.originalPaths     // Catch:{ Exception -> 0x2af2 }
            r5.add(r9)     // Catch:{ Exception -> 0x2af2 }
            org.telegram.tgnet.TLRPC$TL_inputSingleMedia r5 = new org.telegram.tgnet.TLRPC$TL_inputSingleMedia     // Catch:{ Exception -> 0x2af2 }
            r5.<init>()     // Catch:{ Exception -> 0x2af2 }
            long r14 = r7.random_id     // Catch:{ Exception -> 0x2af2 }
            r5.random_id = r14     // Catch:{ Exception -> 0x2af2 }
            r5.media = r11     // Catch:{ Exception -> 0x2af2 }
            r14 = r48
            r5.message = r14     // Catch:{ Exception -> 0x2acf }
            r15 = r109
            if (r15 == 0) goto L_0x2ac2
            boolean r19 = r109.isEmpty()     // Catch:{ Exception -> 0x2abc }
            if (r19 != 0) goto L_0x2ac2
            r5.entities = r15     // Catch:{ Exception -> 0x2abc }
            r25 = r9
            int r9 = r5.flags     // Catch:{ Exception -> 0x2bb6 }
            r19 = 1
            r9 = r9 | 1
            r5.flags = r9     // Catch:{ Exception -> 0x2bb6 }
            goto L_0x2ac4
        L_0x2abc:
            r0 = move-exception
            r19 = r96
            r33 = r99
            goto L_0x2ad6
        L_0x2ac2:
            r25 = r9
        L_0x2ac4:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r9 = r4.multi_media     // Catch:{ Exception -> 0x2bb6 }
            r9.add(r5)     // Catch:{ Exception -> 0x2bb6 }
            r19 = r4
            r9 = r6
            goto L_0x2CLASSNAME
        L_0x2acf:
            r0 = move-exception
            r19 = r96
            r33 = r99
            r15 = r109
        L_0x2ad6:
            r5 = r111
            r1 = r0
            r28 = r6
            r38 = r8
            r25 = r9
            r48 = r14
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2af2:
            r0 = move-exception
            r14 = r48
            r19 = r96
            r33 = r99
            r15 = r109
            r5 = r111
            r1 = r0
            r28 = r6
            r38 = r8
            r25 = r9
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2b15:
            r0 = move-exception
            r8 = r19
            r14 = r48
            r19 = r96
            r33 = r99
            r15 = r109
            r5 = r111
            r1 = r0
            r28 = r6
            r38 = r8
            r25 = r9
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2b3a:
            r0 = move-exception
            r50 = r5
            r8 = r19
            r14 = r48
            r19 = r96
            r33 = r99
            r15 = r109
            r5 = r111
            r1 = r0
            r28 = r6
            r38 = r8
            r25 = r9
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2b61:
            r0 = move-exception
            r50 = r5
            r8 = r19
            r14 = r48
            r19 = r96
            r33 = r99
            r15 = r109
            r5 = r111
            r1 = r0
            r38 = r8
            r25 = r9
            r39 = r29
            r28 = r32
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r32 = r20
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2b88:
            r15 = r109
            r50 = r5
            r25 = r9
            r8 = r19
            r6 = r32
            r14 = r48
            org.telegram.tgnet.TLRPC$TL_messages_sendMedia r4 = new org.telegram.tgnet.TLRPC$TL_messages_sendMedia     // Catch:{ Exception -> 0x2e97 }
            r4.<init>()     // Catch:{ Exception -> 0x2e97 }
            r4.peer = r6     // Catch:{ Exception -> 0x2e97 }
            boolean r5 = r7.silent     // Catch:{ Exception -> 0x2e97 }
            r4.silent = r5     // Catch:{ Exception -> 0x2e97 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r7.reply_to     // Catch:{ Exception -> 0x2e97 }
            if (r5 == 0) goto L_0x2bd5
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r7.reply_to     // Catch:{ Exception -> 0x2bb6 }
            int r5 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x2bb6 }
            if (r5 == 0) goto L_0x2bd5
            int r5 = r4.flags     // Catch:{ Exception -> 0x2bb6 }
            r9 = 1
            r5 = r5 | r9
            r4.flags = r5     // Catch:{ Exception -> 0x2bb6 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r7.reply_to     // Catch:{ Exception -> 0x2bb6 }
            int r5 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x2bb6 }
            r4.reply_to_msg_id = r5     // Catch:{ Exception -> 0x2bb6 }
            goto L_0x2bd5
        L_0x2bb6:
            r0 = move-exception
            r19 = r96
            r33 = r99
            r5 = r111
            r1 = r0
            r28 = r6
            r38 = r8
            r48 = r14
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2bd5:
            r9 = r6
            long r5 = r7.random_id     // Catch:{ Exception -> 0x2e60 }
            r4.random_id = r5     // Catch:{ Exception -> 0x2e60 }
            org.telegram.tgnet.TLRPC$Peer r5 = r7.from_id     // Catch:{ Exception -> 0x2e60 }
            if (r5 == 0) goto L_0x2c0a
            org.telegram.messenger.MessagesController r5 = r90.getMessagesController()     // Catch:{ Exception -> 0x2beb }
            org.telegram.tgnet.TLRPC$Peer r6 = r7.from_id     // Catch:{ Exception -> 0x2beb }
            org.telegram.tgnet.TLRPC$InputPeer r5 = r5.getInputPeer((org.telegram.tgnet.TLRPC.Peer) r6)     // Catch:{ Exception -> 0x2beb }
            r4.send_as = r5     // Catch:{ Exception -> 0x2beb }
            goto L_0x2c0a
        L_0x2beb:
            r0 = move-exception
            r19 = r96
            r33 = r99
            r5 = r111
            r1 = r0
            r38 = r8
            r28 = r9
            r48 = r14
            r32 = r20
            r39 = r29
            r21 = r43
            r77 = r67
            r29 = r97
            r14 = r7
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2c0a:
            r4.media = r11     // Catch:{ Exception -> 0x2e60 }
            r4.message = r14     // Catch:{ Exception -> 0x2e60 }
            if (r15 == 0) goto L_0x2c1f
            boolean r5 = r109.isEmpty()     // Catch:{ Exception -> 0x2beb }
            if (r5 != 0) goto L_0x2c1f
            r4.entities = r15     // Catch:{ Exception -> 0x2beb }
            int r5 = r4.flags     // Catch:{ Exception -> 0x2beb }
            r6 = 8
            r5 = r5 | r6
            r4.flags = r5     // Catch:{ Exception -> 0x2beb }
        L_0x2c1f:
            if (r3 == 0) goto L_0x2CLASSNAME
            r4.schedule_date = r3     // Catch:{ Exception -> 0x2beb }
            int r5 = r4.flags     // Catch:{ Exception -> 0x2beb }
            r5 = r5 | 1024(0x400, float:1.435E-42)
            r4.flags = r5     // Catch:{ Exception -> 0x2beb }
        L_0x2CLASSNAME:
            if (r10 == 0) goto L_0x2c2d
            r10.sendRequest = r4     // Catch:{ Exception -> 0x2beb }
        L_0x2c2d:
            r5 = r4
            r19 = r5
        L_0x2CLASSNAME:
            int r4 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x2CLASSNAME
            r12.performSendDelayedMessage(r10)     // Catch:{ Exception -> 0x2beb }
            r75 = r96
            r73 = r97
            r33 = r99
            r69 = r1
            r91 = r8
            r78 = r9
            r11 = r10
            r32 = r20
            r37 = r24
            r36 = r25
            r9 = r43
            r74 = r49
            r71 = r50
            r77 = r67
            r10 = r3
            r25 = r14
            r14 = r7
            goto L_0x2e3f
        L_0x2CLASSNAME:
            r6 = r43
            r4 = 1
            if (r6 != r4) goto L_0x2cc4
            r4 = 0
            if (r3 == 0) goto L_0x2CLASSNAME
            r16 = 1
            goto L_0x2CLASSNAME
        L_0x2CLASSNAME:
            r16 = 0
        L_0x2CLASSNAME:
            r5 = r111
            r69 = r1
            r1 = r90
            r2 = r19
            r3 = r13
            r28 = r11
            r11 = r24
            r71 = r50
            r5 = r10
            r72 = r6
            r6 = r8
            r73 = r97
            r17 = r7
            r32 = r20
            r74 = r49
            r7 = r111
            r75 = r96
            r33 = r99
            r20 = r8
            r8 = r16
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2ca2 }
            r78 = r9
            r37 = r11
            r91 = r20
            r36 = r25
            r77 = r67
            r9 = r72
            r11 = r10
            r25 = r14
            r14 = r17
            r10 = r113
            goto L_0x2e3f
        L_0x2ca2:
            r0 = move-exception
            r5 = r111
            r1 = r0
            r28 = r9
            r24 = r11
            r48 = r14
            r14 = r17
            r38 = r20
            r39 = r29
            r77 = r67
            r50 = r71
            r21 = r72
            r29 = r73
            r49 = r74
            r19 = r75
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2cc4:
            r75 = r96
            r73 = r97
            r33 = r99
            r69 = r1
            r72 = r6
            r17 = r7
            r28 = r11
            r32 = r20
            r11 = r24
            r74 = r49
            r71 = r50
            r20 = r8
            r8 = r72
            r7 = 2
            if (r8 != r7) goto L_0x2d71
            if (r18 == 0) goto L_0x2d1c
            r12.performSendDelayedMessage(r10)     // Catch:{ Exception -> 0x2cfa }
            r78 = r9
            r37 = r11
            r91 = r20
            r36 = r25
            r77 = r67
            r9 = r8
            r11 = r10
            r25 = r14
            r14 = r17
            r10 = r113
            goto L_0x2e3f
        L_0x2cfa:
            r0 = move-exception
            r5 = r111
            r1 = r0
            r21 = r8
            r28 = r9
            r24 = r11
            r48 = r14
            r14 = r17
            r38 = r20
            r39 = r29
            r77 = r67
            r50 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r20 = r10
            r10 = r101
            goto L_0x43f0
        L_0x2d1c:
            r5 = 0
            r6 = 1
            if (r113 == 0) goto L_0x2d23
            r16 = 1
            goto L_0x2d25
        L_0x2d23:
            r16 = 0
        L_0x2d25:
            r1 = r90
            r2 = r19
            r3 = r13
            r4 = r25
            r7 = r10
            r76 = r8
            r8 = r20
            r91 = r20
            r24 = r25
            r77 = r67
            r20 = r9
            r9 = r111
            r37 = r11
            r25 = r14
            r14 = r17
            r78 = r20
            r36 = r24
            r11 = r10
            r10 = r16
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8, r9, r10)     // Catch:{ Exception -> 0x2d51 }
            r10 = r113
            r9 = r76
            goto L_0x2e3f
        L_0x2d51:
            r0 = move-exception
            r38 = r91
            r5 = r111
            r1 = r0
            r20 = r11
            r48 = r25
            r39 = r29
            r25 = r36
            r24 = r37
            r50 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r21 = r76
            r28 = r78
            r10 = r101
            goto L_0x43f0
        L_0x2d71:
            r76 = r8
            r78 = r9
            r37 = r11
            r91 = r20
            r36 = r25
            r77 = r67
            r11 = r10
            r25 = r14
            r14 = r17
            r9 = r76
            r1 = 3
            if (r9 != r1) goto L_0x2dc8
            if (r18 == 0) goto L_0x2db0
            r12.performSendDelayedMessage(r11)     // Catch:{ Exception -> 0x2d90 }
            r10 = r113
            goto L_0x2e3f
        L_0x2d90:
            r0 = move-exception
            r38 = r91
            r5 = r111
            r1 = r0
            r21 = r9
            r20 = r11
            r48 = r25
            r39 = r29
            r25 = r36
            r24 = r37
            r50 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r28 = r78
            r10 = r101
            goto L_0x43f0
        L_0x2db0:
            r10 = r113
            if (r10 == 0) goto L_0x2db6
            r8 = 1
            goto L_0x2db7
        L_0x2db6:
            r8 = 0
        L_0x2db7:
            r1 = r90
            r2 = r19
            r3 = r13
            r4 = r36
            r5 = r11
            r6 = r91
            r7 = r111
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2d90 }
            goto L_0x2e3f
        L_0x2dc8:
            r10 = r113
            r1 = 6
            if (r9 != r1) goto L_0x2de3
            if (r10 == 0) goto L_0x2dd1
            r8 = 1
            goto L_0x2dd2
        L_0x2dd1:
            r8 = 0
        L_0x2dd2:
            r1 = r90
            r2 = r19
            r3 = r13
            r4 = r36
            r5 = r11
            r6 = r91
            r7 = r111
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2d90 }
            goto L_0x2e3f
        L_0x2de3:
            r1 = 7
            if (r9 != r1) goto L_0x2e04
            if (r18 == 0) goto L_0x2def
            if (r11 == 0) goto L_0x2def
            r12.performSendDelayedMessage(r11)     // Catch:{ Exception -> 0x2d90 }
            goto L_0x2e3f
        L_0x2def:
            if (r10 == 0) goto L_0x2df3
            r8 = 1
            goto L_0x2df4
        L_0x2df3:
            r8 = 0
        L_0x2df4:
            r1 = r90
            r2 = r19
            r3 = r13
            r4 = r36
            r5 = r11
            r6 = r91
            r7 = r111
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2d90 }
            goto L_0x2e3f
        L_0x2e04:
            r1 = 8
            if (r9 != r1) goto L_0x2e23
            if (r18 == 0) goto L_0x2e0e
            r12.performSendDelayedMessage(r11)     // Catch:{ Exception -> 0x2d90 }
            goto L_0x2e3f
        L_0x2e0e:
            if (r10 == 0) goto L_0x2e12
            r8 = 1
            goto L_0x2e13
        L_0x2e12:
            r8 = 0
        L_0x2e13:
            r1 = r90
            r2 = r19
            r3 = r13
            r4 = r36
            r5 = r11
            r6 = r91
            r7 = r111
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2d90 }
            goto L_0x2e3f
        L_0x2e23:
            r1 = 10
            if (r9 == r1) goto L_0x2e2b
            r1 = 11
            if (r9 != r1) goto L_0x2e3f
        L_0x2e2b:
            if (r10 == 0) goto L_0x2e2f
            r8 = 1
            goto L_0x2e30
        L_0x2e2f:
            r8 = 0
        L_0x2e30:
            r1 = r90
            r2 = r19
            r3 = r13
            r4 = r36
            r5 = r11
            r6 = r91
            r7 = r111
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x2d90 }
        L_0x2e3f:
            r38 = r91
            r43 = r9
            r1 = r11
            r80 = r25
            r39 = r29
            r25 = r36
            r24 = r37
            r17 = r47
            r37 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r16 = r77
            r28 = r78
            r10 = r101
            r9 = r111
            goto L_0x4113
        L_0x2e60:
            r0 = move-exception
            r75 = r96
            r73 = r97
            r33 = r99
            r91 = r8
            r78 = r9
            r11 = r10
            r32 = r20
            r37 = r24
            r36 = r25
            r9 = r43
            r74 = r49
            r71 = r50
            r77 = r67
            r10 = r3
            r25 = r14
            r14 = r7
            r38 = r91
            r5 = r111
            r1 = r0
            r21 = r9
            r20 = r11
            r48 = r25
            r39 = r29
            r25 = r36
            r29 = r73
            r19 = r75
            r28 = r78
            r10 = r101
            goto L_0x43f0
        L_0x2e97:
            r0 = move-exception
            r75 = r96
            r73 = r97
            r33 = r99
            r91 = r8
            r11 = r10
            r32 = r20
            r37 = r24
            r36 = r25
            r9 = r43
            r74 = r49
            r71 = r50
            r77 = r67
            r10 = r3
            r25 = r14
            r14 = r7
            r38 = r91
            r5 = r111
            r1 = r0
            r28 = r6
            r21 = r9
            r20 = r11
            r48 = r25
            r39 = r29
            r25 = r36
            r29 = r73
            r19 = r75
            r10 = r101
            goto L_0x43f0
        L_0x2ecc:
            r0 = move-exception
            r75 = r96
            r73 = r97
            r33 = r99
            r10 = r3
            r71 = r5
            r14 = r7
            r36 = r9
            r91 = r19
            r37 = r24
            r78 = r32
            r9 = r43
            r25 = r48
            r74 = r49
            r77 = r67
            r32 = r20
            r38 = r91
            r10 = r101
            r15 = r109
            r5 = r111
            r1 = r0
            r20 = r6
            r21 = r9
            r39 = r29
            r25 = r36
            r50 = r71
            r29 = r73
            r19 = r75
            r28 = r78
            goto L_0x43f0
        L_0x2var_:
            r0 = move-exception
            r75 = r96
            r73 = r97
            r33 = r99
            r10 = r3
            r71 = r5
            r14 = r7
            r36 = r9
            r91 = r19
            r37 = r24
            r78 = r32
            r9 = r43
            r25 = r48
            r74 = r49
            r77 = r67
            r32 = r20
            r38 = r91
            r20 = r93
            r10 = r101
            r15 = r109
            r5 = r111
            r1 = r0
            r21 = r9
            r39 = r29
            r25 = r36
            r50 = r71
            r29 = r73
            r19 = r75
            r28 = r78
            goto L_0x43f0
        L_0x2f3c:
            r0 = move-exception
            r75 = r96
            r73 = r97
            r111 = r1
            r37 = r4
            r33 = r8
            r36 = r9
            r91 = r10
            r9 = r11
            r14 = r28
            r78 = r32
            r25 = r48
            r74 = r49
            r71 = r50
            r77 = r67
            r10 = r3
            r32 = r20
            r38 = r91
            r20 = r93
            r10 = r101
            r15 = r109
            r5 = r111
            r1 = r0
            r21 = r9
            r39 = r29
            r25 = r36
            r24 = r37
            r29 = r73
            r19 = r75
            r28 = r78
            goto L_0x43f0
        L_0x2var_:
            r13 = r96
            r15 = r109
            r78 = r9
            r14 = r10
            r9 = r11
            r29 = r12
            r36 = r25
            r2 = r33
            r37 = r45
            r32 = r46
            r25 = r48
            r74 = r49
            r71 = r50
            r10 = r55
            r73 = r56
            r69 = r65
            r77 = r67
            r75 = r68
            r12 = r90
            r33 = r94
            r11 = r113
            r8 = r29
            int r1 = r8.layer     // Catch:{ Exception -> 0x3ec0 }
            int r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1)     // Catch:{ Exception -> 0x3ec0 }
            r3 = 73
            if (r1 < r3) goto L_0x2fe0
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessage     // Catch:{ Exception -> 0x2fc0 }
            r1.<init>()     // Catch:{ Exception -> 0x2fc0 }
            r6 = r69
            int r3 = (r6 > r16 ? 1 : (r6 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x2fbe
            r1.grouped_id = r6     // Catch:{ Exception -> 0x2fc0 }
            int r3 = r1.flags     // Catch:{ Exception -> 0x2fc0 }
            r4 = 131072(0x20000, float:1.83671E-40)
            r3 = r3 | r4
            r1.flags = r3     // Catch:{ Exception -> 0x2fc0 }
        L_0x2fbe:
            r5 = r1
            goto L_0x2fe8
        L_0x2fc0:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r10 = r101
            r5 = r111
            r1 = r0
            r39 = r8
            r21 = r9
            r48 = r25
            r25 = r36
            r24 = r37
            r50 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r28 = r78
            goto L_0x43f0
        L_0x2fe0:
            r6 = r69
            org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45 r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessage_layer45     // Catch:{ Exception -> 0x3ec0 }
            r1.<init>()     // Catch:{ Exception -> 0x3ec0 }
            r5 = r1
        L_0x2fe8:
            int r1 = r14.ttl     // Catch:{ Exception -> 0x3ec0 }
            r5.ttl = r1     // Catch:{ Exception -> 0x3ec0 }
            if (r15 == 0) goto L_0x2ffc
            boolean r1 = r109.isEmpty()     // Catch:{ Exception -> 0x2fc0 }
            if (r1 != 0) goto L_0x2ffc
            r5.entities = r15     // Catch:{ Exception -> 0x2fc0 }
            int r1 = r5.flags     // Catch:{ Exception -> 0x2fc0 }
            r1 = r1 | 128(0x80, float:1.794E-43)
            r5.flags = r1     // Catch:{ Exception -> 0x2fc0 }
        L_0x2ffc:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r14.reply_to     // Catch:{ Exception -> 0x3ec0 }
            if (r1 == 0) goto L_0x3015
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r14.reply_to     // Catch:{ Exception -> 0x2fc0 }
            long r3 = r1.reply_to_random_id     // Catch:{ Exception -> 0x2fc0 }
            int r1 = (r3 > r16 ? 1 : (r3 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x3015
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r14.reply_to     // Catch:{ Exception -> 0x2fc0 }
            long r3 = r1.reply_to_random_id     // Catch:{ Exception -> 0x2fc0 }
            r5.reply_to_random_id = r3     // Catch:{ Exception -> 0x2fc0 }
            int r1 = r5.flags     // Catch:{ Exception -> 0x2fc0 }
            r3 = 8
            r1 = r1 | r3
            r5.flags = r1     // Catch:{ Exception -> 0x2fc0 }
        L_0x3015:
            boolean r1 = r14.silent     // Catch:{ Exception -> 0x3ec0 }
            r5.silent = r1     // Catch:{ Exception -> 0x3ec0 }
            int r1 = r5.flags     // Catch:{ Exception -> 0x3ec0 }
            r1 = r1 | 512(0x200, float:7.175E-43)
            r5.flags = r1     // Catch:{ Exception -> 0x3ec0 }
            r4 = r111
            if (r4 == 0) goto L_0x3059
            r1 = r51
            java.lang.Object r3 = r4.get(r1)     // Catch:{ Exception -> 0x303a }
            if (r3 == 0) goto L_0x3059
            java.lang.Object r1 = r4.get(r1)     // Catch:{ Exception -> 0x303a }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x303a }
            r5.via_bot_name = r1     // Catch:{ Exception -> 0x303a }
            int r1 = r5.flags     // Catch:{ Exception -> 0x303a }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r5.flags = r1     // Catch:{ Exception -> 0x303a }
            goto L_0x3059
        L_0x303a:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r10 = r101
            r1 = r0
            r5 = r4
            r39 = r8
            r21 = r9
            r48 = r25
            r25 = r36
            r24 = r37
            r50 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r28 = r78
            goto L_0x43f0
        L_0x3059:
            r111 = r4
            long r3 = r14.random_id     // Catch:{ Exception -> 0x3ec0 }
            r5.random_id = r3     // Catch:{ Exception -> 0x3ec0 }
            r5.message = r2     // Catch:{ Exception -> 0x3ec0 }
            r1 = 1
            if (r9 != r1) goto L_0x313c
            r10 = r73
            boolean r1 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaVenue     // Catch:{ Exception -> 0x3118 }
            if (r1 == 0) goto L_0x30aa
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVenue     // Catch:{ Exception -> 0x308a }
            r1.<init>()     // Catch:{ Exception -> 0x308a }
            r5.media = r1     // Catch:{ Exception -> 0x308a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r5.media     // Catch:{ Exception -> 0x308a }
            java.lang.String r2 = r10.address     // Catch:{ Exception -> 0x308a }
            r1.address = r2     // Catch:{ Exception -> 0x308a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r5.media     // Catch:{ Exception -> 0x308a }
            java.lang.String r2 = r10.title     // Catch:{ Exception -> 0x308a }
            r1.title = r2     // Catch:{ Exception -> 0x308a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r5.media     // Catch:{ Exception -> 0x308a }
            java.lang.String r2 = r10.provider     // Catch:{ Exception -> 0x308a }
            r1.provider = r2     // Catch:{ Exception -> 0x308a }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r5.media     // Catch:{ Exception -> 0x308a }
            java.lang.String r2 = r10.venue_id     // Catch:{ Exception -> 0x308a }
            r1.venue_id = r2     // Catch:{ Exception -> 0x308a }
            goto L_0x30b1
        L_0x308a:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r5 = r111
            r1 = r0
            r39 = r8
            r21 = r9
            r29 = r10
            r48 = r25
            r25 = r36
            r24 = r37
            r50 = r71
            r49 = r74
            r19 = r75
            r28 = r78
            r10 = r101
            goto L_0x43f0
        L_0x30aa:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaGeoPoint     // Catch:{ Exception -> 0x3118 }
            r1.<init>()     // Catch:{ Exception -> 0x3118 }
            r5.media = r1     // Catch:{ Exception -> 0x3118 }
        L_0x30b1:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r5.media     // Catch:{ Exception -> 0x3118 }
            org.telegram.tgnet.TLRPC$GeoPoint r2 = r10.geo     // Catch:{ Exception -> 0x3118 }
            double r2 = r2.lat     // Catch:{ Exception -> 0x3118 }
            r1.lat = r2     // Catch:{ Exception -> 0x3118 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r5.media     // Catch:{ Exception -> 0x3118 }
            org.telegram.tgnet.TLRPC$GeoPoint r2 = r10.geo     // Catch:{ Exception -> 0x3118 }
            double r2 = r2._long     // Catch:{ Exception -> 0x3118 }
            r1._long = r2     // Catch:{ Exception -> 0x3118 }
            org.telegram.messenger.SecretChatHelper r1 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x3118 }
            org.telegram.tgnet.TLRPC$Message r3 = r13.messageOwner     // Catch:{ Exception -> 0x3118 }
            r19 = 0
            r20 = 0
            r2 = r5
            r79 = r111
            r4 = r8
            r15 = r5
            r5 = r19
            r40 = r6
            r6 = r20
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x30f6 }
            r85 = r91
            r29 = r10
            r84 = r25
            r50 = r71
            r49 = r74
            r19 = r75
            r82 = r79
            r10 = r101
            r25 = r14
            r14 = r36
            r36 = r93
            r93 = r9
            r9 = r37
            goto L_0x37d1
        L_0x30f6:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r21 = r9
            r29 = r10
            r48 = r25
            r25 = r36
            r24 = r37
            r50 = r71
            r49 = r74
            r19 = r75
            r28 = r78
            r5 = r79
            r10 = r101
            goto L_0x43f0
        L_0x3118:
            r0 = move-exception
            r79 = r111
            r38 = r91
            r20 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r21 = r9
            r29 = r10
            r48 = r25
            r25 = r36
            r24 = r37
            r50 = r71
            r49 = r74
            r19 = r75
            r28 = r78
            r5 = r79
            r10 = r101
            goto L_0x43f0
        L_0x313c:
            r79 = r111
            r15 = r5
            r40 = r6
            r29 = r73
            r7 = 2
            if (r9 == r7) goto L_0x3ab7
            r1 = 9
            if (r9 != r1) goto L_0x3170
            r6 = r71
            if (r6 == 0) goto L_0x3172
            r4 = r103
            r50 = r6
            r1 = r10
            r5 = r11
            r24 = r37
            r2 = r42
            r49 = r74
            r19 = r75
            r7 = r79
            r6 = r91
            r10 = r101
            r88 = r36
            r36 = r93
            r93 = r9
            r9 = r25
            r25 = r14
            r14 = r88
            goto L_0x3ad7
        L_0x3170:
            r6 = r71
        L_0x3172:
            r1 = 3
            if (r9 != r1) goto L_0x349e
            r10 = r37
            java.util.ArrayList r1 = r10.thumbs     // Catch:{ Exception -> 0x3475 }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = r12.getThumbForSecretChat(r1)     // Catch:{ Exception -> 0x3475 }
            r5 = r1
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r5)     // Catch:{ Exception -> 0x3475 }
            boolean r1 = org.telegram.messenger.MessageObject.isNewGifDocument((org.telegram.tgnet.TLRPC.Document) r10)     // Catch:{ Exception -> 0x3475 }
            if (r1 != 0) goto L_0x31ce
            boolean r1 = org.telegram.messenger.MessageObject.isRoundVideoDocument(r10)     // Catch:{ Exception -> 0x31ae }
            if (r1 == 0) goto L_0x318e
            goto L_0x31ce
        L_0x318e:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo     // Catch:{ Exception -> 0x31ae }
            r1.<init>()     // Catch:{ Exception -> 0x31ae }
            r15.media = r1     // Catch:{ Exception -> 0x31ae }
            if (r5 == 0) goto L_0x31a4
            byte[] r1 = r5.bytes     // Catch:{ Exception -> 0x31ae }
            if (r1 == 0) goto L_0x31a4
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x31ae }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo) r1     // Catch:{ Exception -> 0x31ae }
            byte[] r2 = r5.bytes     // Catch:{ Exception -> 0x31ae }
            r1.thumb = r2     // Catch:{ Exception -> 0x31ae }
            goto L_0x31f3
        L_0x31a4:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x31ae }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaVideo r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaVideo) r1     // Catch:{ Exception -> 0x31ae }
            r2 = 0
            byte[] r3 = new byte[r2]     // Catch:{ Exception -> 0x31ae }
            r1.thumb = r3     // Catch:{ Exception -> 0x31ae }
            goto L_0x31f3
        L_0x31ae:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r15 = r109
            r1 = r0
            r50 = r6
            r39 = r8
            r21 = r9
            r24 = r10
            r48 = r25
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r5 = r79
            r10 = r101
            goto L_0x43f0
        L_0x31ce:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument     // Catch:{ Exception -> 0x3475 }
            r1.<init>()     // Catch:{ Exception -> 0x3475 }
            r15.media = r1     // Catch:{ Exception -> 0x3475 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3475 }
            java.util.ArrayList r2 = r10.attributes     // Catch:{ Exception -> 0x3475 }
            r1.attributes = r2     // Catch:{ Exception -> 0x3475 }
            if (r5 == 0) goto L_0x31ea
            byte[] r1 = r5.bytes     // Catch:{ Exception -> 0x31ae }
            if (r1 == 0) goto L_0x31ea
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x31ae }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r1     // Catch:{ Exception -> 0x31ae }
            byte[] r2 = r5.bytes     // Catch:{ Exception -> 0x31ae }
            r1.thumb = r2     // Catch:{ Exception -> 0x31ae }
            goto L_0x31f3
        L_0x31ea:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3475 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r1     // Catch:{ Exception -> 0x3475 }
            r2 = 0
            byte[] r3 = new byte[r2]     // Catch:{ Exception -> 0x3475 }
            r1.thumb = r3     // Catch:{ Exception -> 0x3475 }
        L_0x31f3:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3475 }
            r4 = r25
            r1.caption = r4     // Catch:{ Exception -> 0x344c }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x344c }
            java.lang.String r2 = "video/mp4"
            r1.mime_type = r2     // Catch:{ Exception -> 0x344c }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x344c }
            long r2 = r10.size     // Catch:{ Exception -> 0x344c }
            r1.size = r2     // Catch:{ Exception -> 0x344c }
            r1 = 0
        L_0x3206:
            java.util.ArrayList r2 = r10.attributes     // Catch:{ Exception -> 0x344c }
            int r2 = r2.size()     // Catch:{ Exception -> 0x344c }
            if (r1 >= r2) goto L_0x3251
            java.util.ArrayList r2 = r10.attributes     // Catch:{ Exception -> 0x3231 }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x3231 }
            org.telegram.tgnet.TLRPC$DocumentAttribute r2 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r2     // Catch:{ Exception -> 0x3231 }
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeVideo     // Catch:{ Exception -> 0x3231 }
            if (r3 == 0) goto L_0x322d
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3231 }
            int r7 = r2.w     // Catch:{ Exception -> 0x3231 }
            r3.w = r7     // Catch:{ Exception -> 0x3231 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3231 }
            int r7 = r2.h     // Catch:{ Exception -> 0x3231 }
            r3.h = r7     // Catch:{ Exception -> 0x3231 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3231 }
            int r7 = r2.duration     // Catch:{ Exception -> 0x3231 }
            r3.duration = r7     // Catch:{ Exception -> 0x3231 }
            goto L_0x3251
        L_0x322d:
            int r1 = r1 + 1
            r7 = 2
            goto L_0x3206
        L_0x3231:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r15 = r109
            r1 = r0
            r48 = r4
            r50 = r6
            r39 = r8
            r21 = r9
            r24 = r10
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r5 = r79
            r10 = r101
            goto L_0x43f0
        L_0x3251:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x344c }
            int r2 = r5.h     // Catch:{ Exception -> 0x344c }
            r1.thumb_h = r2     // Catch:{ Exception -> 0x344c }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x344c }
            int r2 = r5.w     // Catch:{ Exception -> 0x344c }
            r1.thumb_w = r2     // Catch:{ Exception -> 0x344c }
            byte[] r1 = r10.key     // Catch:{ Exception -> 0x344c }
            if (r1 == 0) goto L_0x32f9
            int r1 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x3270
            r80 = r4
            r20 = r5
            r50 = r6
            r25 = r14
            r14 = 2
            goto L_0x3302
        L_0x3270:
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r1 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x32d5 }
            r1.<init>()     // Catch:{ Exception -> 0x32d5 }
            r7 = r1
            long r1 = r10.id     // Catch:{ Exception -> 0x32d5 }
            r7.id = r1     // Catch:{ Exception -> 0x32d5 }
            long r1 = r10.access_hash     // Catch:{ Exception -> 0x32d5 }
            r7.access_hash = r1     // Catch:{ Exception -> 0x32d5 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x32d5 }
            byte[] r2 = r10.key     // Catch:{ Exception -> 0x32d5 }
            r1.key = r2     // Catch:{ Exception -> 0x32d5 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x32d5 }
            byte[] r2 = r10.iv     // Catch:{ Exception -> 0x32d5 }
            r1.iv = r2     // Catch:{ Exception -> 0x32d5 }
            org.telegram.messenger.SecretChatHelper r1 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x32d5 }
            org.telegram.tgnet.TLRPC$Message r3 = r13.messageOwner     // Catch:{ Exception -> 0x32d5 }
            r19 = 0
            r2 = r15
            r80 = r4
            r4 = r8
            r20 = r5
            r5 = r7
            r25 = r14
            r14 = r6
            r6 = r19
            r19 = r7
            r50 = r14
            r14 = 2
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x32b5 }
            r3 = r91
            r1 = r93
            r6 = r101
            r5 = r36
            r2 = r75
            r4 = r79
            goto L_0x3417
        L_0x32b5:
            r0 = move-exception
            r38 = r91
            r20 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r5 = r79
            r48 = r80
            r10 = r101
            goto L_0x43f0
        L_0x32d5:
            r0 = move-exception
            r80 = r4
            r50 = r6
            r25 = r14
            r38 = r91
            r20 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r21 = r9
            r24 = r10
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r5 = r79
            r48 = r80
            r10 = r101
            goto L_0x43f0
        L_0x32f9:
            r80 = r4
            r20 = r5
            r50 = r6
            r25 = r14
            r14 = 2
        L_0x3302:
            if (r93 != 0) goto L_0x3402
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r1 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x33df }
            r6 = r101
            r1.<init>(r6)     // Catch:{ Exception -> 0x33bd }
            r1.encryptedChat = r8     // Catch:{ Exception -> 0x339b }
            r2 = 1
            r1.type = r2     // Catch:{ Exception -> 0x339b }
            r1.sendEncryptedRequest = r15     // Catch:{ Exception -> 0x339b }
            r5 = r36
            r1.originalPath = r5     // Catch:{ Exception -> 0x3379 }
            r1.obj = r13     // Catch:{ Exception -> 0x3379 }
            r4 = r79
            if (r4 == 0) goto L_0x334b
            r2 = r42
            boolean r3 = r4.containsKey(r2)     // Catch:{ Exception -> 0x332d }
            if (r3 == 0) goto L_0x334b
            java.lang.Object r2 = r4.get(r2)     // Catch:{ Exception -> 0x332d }
            r1.parentObject = r2     // Catch:{ Exception -> 0x332d }
            r3 = r91
            goto L_0x334f
        L_0x332d:
            r0 = move-exception
            r38 = r91
            r15 = r109
            r20 = r1
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r49 = r74
            r19 = r75
            r28 = r78
            r48 = r80
            r1 = r0
            r25 = r5
            r10 = r6
            r5 = r4
            goto L_0x43f0
        L_0x334b:
            r3 = r91
            r1.parentObject = r3     // Catch:{ Exception -> 0x335b }
        L_0x334f:
            r2 = 1
            r1.performMediaUpload = r2     // Catch:{ Exception -> 0x335b }
            if (r11 == 0) goto L_0x3356
            r2 = 1
            goto L_0x3357
        L_0x3356:
            r2 = 0
        L_0x3357:
            r1.scheduled = r2     // Catch:{ Exception -> 0x335b }
            goto L_0x340c
        L_0x335b:
            r0 = move-exception
            r15 = r109
            r20 = r1
            r38 = r3
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r49 = r74
            r19 = r75
            r28 = r78
            r48 = r80
            r1 = r0
            r25 = r5
            r10 = r6
            r5 = r4
            goto L_0x43f0
        L_0x3379:
            r0 = move-exception
            r3 = r91
            r4 = r79
            r15 = r109
            r20 = r1
            r38 = r3
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r49 = r74
            r19 = r75
            r28 = r78
            r48 = r80
            r1 = r0
            r25 = r5
            r10 = r6
            r5 = r4
            goto L_0x43f0
        L_0x339b:
            r0 = move-exception
            r3 = r91
            r4 = r79
            r15 = r109
            r20 = r1
            r38 = r3
            r5 = r4
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r48 = r80
            r1 = r0
            r10 = r6
            goto L_0x43f0
        L_0x33bd:
            r0 = move-exception
            r3 = r91
            r4 = r79
            r20 = r93
            r15 = r109
            r1 = r0
            r38 = r3
            r5 = r4
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r48 = r80
            r10 = r6
            goto L_0x43f0
        L_0x33df:
            r0 = move-exception
            r3 = r91
            r4 = r79
            r20 = r93
            r15 = r109
            r1 = r0
            r38 = r3
            r5 = r4
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r25 = r36
            r49 = r74
            r19 = r75
            r28 = r78
            r48 = r80
            r10 = r101
            goto L_0x43f0
        L_0x3402:
            r3 = r91
            r6 = r101
            r5 = r36
            r4 = r79
            r1 = r93
        L_0x340c:
            r2 = r75
            r1.videoEditedInfo = r2     // Catch:{ Exception -> 0x342e }
            int r19 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r19 != 0) goto L_0x3417
            r12.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x342e }
        L_0x3417:
            r19 = r2
            r38 = r3
            r14 = r5
            r93 = r9
            r24 = r10
            r5 = r50
            r49 = r74
            r9 = r4
            r88 = r6
            r6 = r103
            r7 = r11
            r10 = r88
            goto L_0x3d39
        L_0x342e:
            r0 = move-exception
            r15 = r109
            r20 = r1
            r19 = r2
            r38 = r3
            r39 = r8
            r21 = r9
            r24 = r10
            r14 = r25
            r49 = r74
            r28 = r78
            r48 = r80
            r1 = r0
            r25 = r5
            r10 = r6
            r5 = r4
            goto L_0x43f0
        L_0x344c:
            r0 = move-exception
            r3 = r91
            r80 = r4
            r50 = r6
            r25 = r14
            r2 = r75
            r4 = r79
            r20 = r93
            r15 = r109
            r1 = r0
            r19 = r2
            r38 = r3
            r5 = r4
            r39 = r8
            r21 = r9
            r24 = r10
            r25 = r36
            r49 = r74
            r28 = r78
            r48 = r80
            r10 = r101
            goto L_0x43f0
        L_0x3475:
            r0 = move-exception
            r3 = r91
            r50 = r6
            r80 = r25
            r2 = r75
            r4 = r79
            r25 = r14
            r20 = r93
            r15 = r109
            r1 = r0
            r19 = r2
            r38 = r3
            r5 = r4
            r39 = r8
            r21 = r9
            r24 = r10
            r25 = r36
            r49 = r74
            r28 = r78
            r48 = r80
            r10 = r101
            goto L_0x43f0
        L_0x349e:
            r3 = r91
            r50 = r6
            r80 = r25
            r5 = r36
            r1 = r37
            r2 = r42
            r19 = r75
            r4 = r79
            r6 = r101
            r25 = r14
            r14 = 2
            r14 = 6
            if (r9 != r14) goto L_0x358a
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact r2 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaContact     // Catch:{ Exception -> 0x3567 }
            r2.<init>()     // Catch:{ Exception -> 0x3567 }
            r15.media = r2     // Catch:{ Exception -> 0x3567 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3567 }
            r14 = r74
            java.lang.String r10 = r14.phone     // Catch:{ Exception -> 0x3544 }
            r2.phone_number = r10     // Catch:{ Exception -> 0x3544 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3544 }
            java.lang.String r10 = r14.first_name     // Catch:{ Exception -> 0x3544 }
            r2.first_name = r10     // Catch:{ Exception -> 0x3544 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3544 }
            java.lang.String r10 = r14.last_name     // Catch:{ Exception -> 0x3544 }
            r2.last_name = r10     // Catch:{ Exception -> 0x3544 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3544 }
            r91 = r3
            r111 = r4
            long r3 = r14.id     // Catch:{ Exception -> 0x3521 }
            r2.user_id = r3     // Catch:{ Exception -> 0x3521 }
            org.telegram.messenger.SecretChatHelper r2 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x3521 }
            org.telegram.tgnet.TLRPC$Message r3 = r13.messageOwner     // Catch:{ Exception -> 0x3521 }
            r10 = 0
            r20 = 0
            r4 = r1
            r1 = r2
            r2 = r15
            r81 = r91
            r82 = r111
            r83 = r4
            r4 = r8
            r49 = r14
            r14 = r5
            r5 = r10
            r10 = r6
            r6 = r20
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x3505 }
            r36 = r93
            r93 = r9
            r84 = r80
            r85 = r81
            r9 = r83
            goto L_0x37d1
        L_0x3505:
            r0 = move-exception
            r20 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r38 = r81
            r5 = r82
            r24 = r83
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3521:
            r0 = move-exception
            r81 = r91
            r82 = r111
            r83 = r1
            r49 = r14
            r20 = r93
            r15 = r109
            r1 = r0
            r10 = r6
            r39 = r8
            r21 = r9
            r14 = r25
            r28 = r78
            r48 = r80
            r38 = r81
            r24 = r83
            r25 = r5
            r5 = r82
            goto L_0x43f0
        L_0x3544:
            r0 = move-exception
            r83 = r1
            r81 = r3
            r82 = r4
            r49 = r14
            r20 = r93
            r15 = r109
            r1 = r0
            r10 = r6
            r39 = r8
            r21 = r9
            r14 = r25
            r28 = r78
            r48 = r80
            r38 = r81
            r24 = r83
            r25 = r5
            r5 = r82
            goto L_0x43f0
        L_0x3567:
            r0 = move-exception
            r83 = r1
            r81 = r3
            r82 = r4
            r49 = r74
            r20 = r93
            r15 = r109
            r1 = r0
            r10 = r6
            r39 = r8
            r21 = r9
            r14 = r25
            r28 = r78
            r48 = r80
            r38 = r81
            r24 = r83
            r25 = r5
            r5 = r82
            goto L_0x43f0
        L_0x358a:
            r83 = r1
            r81 = r3
            r82 = r4
            r14 = r5
            r1 = r10
            r49 = r74
            r10 = r6
            r3 = 7
            if (r9 == r3) goto L_0x36dd
            r3 = 9
            if (r9 != r3) goto L_0x35a6
            r7 = r83
            if (r7 == 0) goto L_0x35a8
            r5 = r113
            r6 = r81
            goto L_0x36e3
        L_0x35a6:
            r7 = r83
        L_0x35a8:
            r1 = 8
            if (r9 != r1) goto L_0x36ce
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r1 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x36ae }
            r1.<init>(r10)     // Catch:{ Exception -> 0x36ae }
            r1.encryptedChat = r8     // Catch:{ Exception -> 0x368e }
            r1.sendEncryptedRequest = r15     // Catch:{ Exception -> 0x368e }
            r1.obj = r13     // Catch:{ Exception -> 0x368e }
            r2 = 3
            r1.type = r2     // Catch:{ Exception -> 0x368e }
            r6 = r81
            r1.parentObject = r6     // Catch:{ Exception -> 0x3670 }
            r2 = 1
            r1.performMediaUpload = r2     // Catch:{ Exception -> 0x3670 }
            r5 = r113
            if (r5 == 0) goto L_0x35c7
            r3 = 1
            goto L_0x35c8
        L_0x35c7:
            r3 = 0
        L_0x35c8:
            r1.scheduled = r3     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument     // Catch:{ Exception -> 0x3654 }
            r2.<init>()     // Catch:{ Exception -> 0x3654 }
            r15.media = r2     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3654 }
            java.util.ArrayList r3 = r7.attributes     // Catch:{ Exception -> 0x3654 }
            r2.attributes = r3     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3654 }
            r4 = r80
            r2.caption = r4     // Catch:{ Exception -> 0x3636 }
            java.util.ArrayList r2 = r7.thumbs     // Catch:{ Exception -> 0x3636 }
            org.telegram.tgnet.TLRPC$PhotoSize r2 = r12.getThumbForSecretChat(r2)     // Catch:{ Exception -> 0x3636 }
            if (r2 == 0) goto L_0x3601
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r2)     // Catch:{ Exception -> 0x3636 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3636 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x3636 }
            r80 = r4
            byte[] r4 = r2.bytes     // Catch:{ Exception -> 0x3654 }
            r3.thumb = r4     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3654 }
            int r4 = r2.h     // Catch:{ Exception -> 0x3654 }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3654 }
            int r4 = r2.w     // Catch:{ Exception -> 0x3654 }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x3654 }
            r91 = r2
            goto L_0x3616
        L_0x3601:
            r80 = r4
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x3654 }
            r91 = r2
            r4 = 0
            byte[] r2 = new byte[r4]     // Catch:{ Exception -> 0x3654 }
            r3.thumb = r2     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3654 }
            r2.thumb_h = r4     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3654 }
            r2.thumb_w = r4     // Catch:{ Exception -> 0x3654 }
        L_0x3616:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3654 }
            java.lang.String r3 = r7.mime_type     // Catch:{ Exception -> 0x3654 }
            r2.mime_type = r3     // Catch:{ Exception -> 0x3654 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r2 = r15.media     // Catch:{ Exception -> 0x3654 }
            long r3 = r7.size     // Catch:{ Exception -> 0x3654 }
            r2.size = r3     // Catch:{ Exception -> 0x3654 }
            r1.originalPath = r14     // Catch:{ Exception -> 0x3654 }
            r12.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x3654 }
            r38 = r6
            r24 = r7
            r93 = r9
            r9 = r82
            r6 = r103
            r7 = r5
            r5 = r50
            goto L_0x3d39
        L_0x3636:
            r0 = move-exception
            r80 = r4
            r15 = r109
            r20 = r1
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r1 = r0
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3654:
            r0 = move-exception
            r15 = r109
            r20 = r1
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r1 = r0
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3670:
            r0 = move-exception
            r5 = r113
            r15 = r109
            r20 = r1
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r1 = r0
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x368e:
            r0 = move-exception
            r5 = r113
            r6 = r81
            r15 = r109
            r20 = r1
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r1 = r0
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x36ae:
            r0 = move-exception
            r5 = r113
            r6 = r81
            r20 = r93
            r15 = r109
            r1 = r0
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x36ce:
            r5 = r113
            r6 = r81
            r36 = r93
            r85 = r6
            r93 = r9
            r84 = r80
            r9 = r7
            goto L_0x37d1
        L_0x36dd:
            r5 = r113
            r6 = r81
            r7 = r83
        L_0x36e3:
            long r3 = r7.access_hash     // Catch:{ Exception -> 0x3a92 }
            int r20 = (r3 > r16 ? 1 : (r3 == r16 ? 0 : -1))
            if (r20 == 0) goto L_0x3849
            boolean r3 = org.telegram.messenger.MessageObject.isStickerDocument(r7)     // Catch:{ Exception -> 0x3824 }
            if (r3 != 0) goto L_0x371e
            r3 = 1
            boolean r4 = org.telegram.messenger.MessageObject.isAnimatedStickerDocument(r7, r3)     // Catch:{ Exception -> 0x3702 }
            if (r4 == 0) goto L_0x36f7
            goto L_0x371e
        L_0x36f7:
            r36 = r93
            r85 = r6
            r93 = r9
            r84 = r80
            r9 = r7
            goto L_0x3852
        L_0x3702:
            r0 = move-exception
            r20 = r93
            r15 = r109
            r1 = r0
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x371e:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument     // Catch:{ Exception -> 0x3824 }
            r1.<init>()     // Catch:{ Exception -> 0x3824 }
            r15.media = r1     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            long r2 = r7.id     // Catch:{ Exception -> 0x3824 }
            r1.id = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            int r2 = r7.date     // Catch:{ Exception -> 0x3824 }
            r1.date = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            long r2 = r7.access_hash     // Catch:{ Exception -> 0x3824 }
            r1.access_hash = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            java.lang.String r2 = r7.mime_type     // Catch:{ Exception -> 0x3824 }
            r1.mime_type = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            long r2 = r7.size     // Catch:{ Exception -> 0x3824 }
            r1.size = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            int r2 = r7.dc_id     // Catch:{ Exception -> 0x3824 }
            r1.dc_id = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            java.util.ArrayList r2 = r7.attributes     // Catch:{ Exception -> 0x3824 }
            r1.attributes = r2     // Catch:{ Exception -> 0x3824 }
            java.util.ArrayList r1 = r7.thumbs     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = r12.getThumbForSecretChat(r1)     // Catch:{ Exception -> 0x3824 }
            r4 = r1
            if (r4 == 0) goto L_0x375f
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3702 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument) r1     // Catch:{ Exception -> 0x3702 }
            r1.thumb = r4     // Catch:{ Exception -> 0x3702 }
            goto L_0x3774
        L_0x375f:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument) r1     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$TL_photoSizeEmpty r2 = new org.telegram.tgnet.TLRPC$TL_photoSizeEmpty     // Catch:{ Exception -> 0x3824 }
            r2.<init>()     // Catch:{ Exception -> 0x3824 }
            r1.thumb = r2     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaExternalDocument r1 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaExternalDocument) r1     // Catch:{ Exception -> 0x3824 }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = r1.thumb     // Catch:{ Exception -> 0x3824 }
            java.lang.String r2 = "s"
            r1.type = r2     // Catch:{ Exception -> 0x3824 }
        L_0x3774:
            if (r93 == 0) goto L_0x37aa
            r3 = r93
            int r1 = r3.type     // Catch:{ Exception -> 0x378e }
            r2 = 5
            if (r1 != r2) goto L_0x37ac
            r3.sendEncryptedRequest = r15     // Catch:{ Exception -> 0x378e }
            r3.obj = r13     // Catch:{ Exception -> 0x378e }
            r12.performSendDelayedMessage(r3)     // Catch:{ Exception -> 0x378e }
            r36 = r3
            r85 = r6
            r93 = r9
            r84 = r80
            r9 = r7
            goto L_0x37d0
        L_0x378e:
            r0 = move-exception
            r15 = r109
            r1 = r0
            r20 = r3
            r38 = r6
            r24 = r7
            r39 = r8
            r21 = r9
            r28 = r78
            r48 = r80
            r5 = r82
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x37aa:
            r3 = r93
        L_0x37ac:
            org.telegram.messenger.SecretChatHelper r1 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x37ff }
            org.telegram.tgnet.TLRPC$Message r2 = r13.messageOwner     // Catch:{ Exception -> 0x37ff }
            r20 = 0
            r24 = 0
            r28 = r2
            r2 = r15
            r36 = r3
            r3 = r28
            r28 = r4
            r84 = r80
            r4 = r8
            r93 = r9
            r9 = r5
            r5 = r20
            r85 = r6
            r6 = r24
            r9 = r7
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x37e3 }
        L_0x37d0:
        L_0x37d1:
            r6 = r103
            r7 = r113
            r24 = r9
            r1 = r36
            r5 = r50
            r9 = r82
            r80 = r84
            r38 = r85
            goto L_0x3d39
        L_0x37e3:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r24 = r9
            r20 = r36
            r28 = r78
            r5 = r82
            r48 = r84
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x37ff:
            r0 = move-exception
            r36 = r3
            r85 = r6
            r93 = r9
            r84 = r80
            r9 = r7
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r24 = r9
            r20 = r36
            r28 = r78
            r5 = r82
            r48 = r84
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3824:
            r0 = move-exception
            r36 = r93
            r85 = r6
            r93 = r9
            r84 = r80
            r9 = r7
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r24 = r9
            r20 = r36
            r28 = r78
            r5 = r82
            r48 = r84
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3849:
            r36 = r93
            r85 = r6
            r93 = r9
            r84 = r80
            r9 = r7
        L_0x3852:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument     // Catch:{ Exception -> 0x3a6d }
            r3.<init>()     // Catch:{ Exception -> 0x3a6d }
            r15.media = r3     // Catch:{ Exception -> 0x3a6d }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a6d }
            java.util.ArrayList r4 = r9.attributes     // Catch:{ Exception -> 0x3a6d }
            r3.attributes = r4     // Catch:{ Exception -> 0x3a6d }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a6d }
            r7 = r84
            r3.caption = r7     // Catch:{ Exception -> 0x3a49 }
            java.util.ArrayList r3 = r9.thumbs     // Catch:{ Exception -> 0x3a49 }
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r12.getThumbForSecretChat(r3)     // Catch:{ Exception -> 0x3a49 }
            r6 = r3
            if (r6 == 0) goto L_0x38a2
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r6)     // Catch:{ Exception -> 0x3886 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3886 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x3886 }
            byte[] r4 = r6.bytes     // Catch:{ Exception -> 0x3886 }
            r3.thumb = r4     // Catch:{ Exception -> 0x3886 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3886 }
            int r4 = r6.h     // Catch:{ Exception -> 0x3886 }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x3886 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3886 }
            int r4 = r6.w     // Catch:{ Exception -> 0x3886 }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x3886 }
            goto L_0x38b3
        L_0x3886:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r48 = r7
            r39 = r8
            r24 = r9
            r20 = r36
            r28 = r78
            r5 = r82
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x38a2:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a49 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaDocument r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaDocument) r3     // Catch:{ Exception -> 0x3a49 }
            r4 = 0
            byte[] r5 = new byte[r4]     // Catch:{ Exception -> 0x3a49 }
            r3.thumb = r5     // Catch:{ Exception -> 0x3a49 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a49 }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x3a49 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a49 }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x3a49 }
        L_0x38b3:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a49 }
            long r4 = r9.size     // Catch:{ Exception -> 0x3a49 }
            r3.size = r4     // Catch:{ Exception -> 0x3a49 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3a49 }
            java.lang.String r4 = r9.mime_type     // Catch:{ Exception -> 0x3a49 }
            r3.mime_type = r4     // Catch:{ Exception -> 0x3a49 }
            byte[] r3 = r9.key     // Catch:{ Exception -> 0x3a49 }
            if (r3 == 0) goto L_0x3948
            int r3 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x38ce
            r28 = r6
            r37 = r9
            r9 = r7
            goto L_0x394d
        L_0x38ce:
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r1 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x3929 }
            r1.<init>()     // Catch:{ Exception -> 0x3929 }
            r5 = r1
            long r1 = r9.id     // Catch:{ Exception -> 0x3929 }
            r5.id = r1     // Catch:{ Exception -> 0x3929 }
            long r1 = r9.access_hash     // Catch:{ Exception -> 0x3929 }
            r5.access_hash = r1     // Catch:{ Exception -> 0x3929 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3929 }
            byte[] r2 = r9.key     // Catch:{ Exception -> 0x3929 }
            r1.key = r2     // Catch:{ Exception -> 0x3929 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3929 }
            byte[] r2 = r9.iv     // Catch:{ Exception -> 0x3929 }
            r1.iv = r2     // Catch:{ Exception -> 0x3929 }
            org.telegram.messenger.SecretChatHelper r1 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x3929 }
            org.telegram.tgnet.TLRPC$Message r3 = r13.messageOwner     // Catch:{ Exception -> 0x3929 }
            r20 = 0
            r2 = r15
            r4 = r8
            r24 = r5
            r28 = r6
            r6 = r20
            r37 = r9
            r9 = r7
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x390d }
            r4 = r103
            r5 = r113
            r3 = r36
            r24 = r37
            r7 = r82
            r6 = r85
            goto L_0x3a3d
        L_0x390d:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r48 = r9
            r20 = r36
            r24 = r37
            r28 = r78
            r5 = r82
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3929:
            r0 = move-exception
            r37 = r9
            r9 = r7
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r48 = r9
            r20 = r36
            r24 = r37
            r28 = r78
            r5 = r82
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3948:
            r28 = r6
            r37 = r9
            r9 = r7
        L_0x394d:
            if (r36 != 0) goto L_0x3a00
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x39df }
            r3.<init>(r10)     // Catch:{ Exception -> 0x39df }
            r3.encryptedChat = r8     // Catch:{ Exception -> 0x39be }
            r4 = 2
            r3.type = r4     // Catch:{ Exception -> 0x39be }
            r3.sendEncryptedRequest = r15     // Catch:{ Exception -> 0x39be }
            r3.originalPath = r14     // Catch:{ Exception -> 0x39be }
            r3.obj = r13     // Catch:{ Exception -> 0x39be }
            r7 = r82
            if (r7 == 0) goto L_0x398d
            boolean r4 = r7.containsKey(r2)     // Catch:{ Exception -> 0x3972 }
            if (r4 == 0) goto L_0x398d
            java.lang.Object r2 = r7.get(r2)     // Catch:{ Exception -> 0x3972 }
            r3.parentObject = r2     // Catch:{ Exception -> 0x3972 }
            r6 = r85
            goto L_0x3991
        L_0x3972:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r5 = r7
            r39 = r8
            r48 = r9
            r24 = r37
            r28 = r78
            r38 = r85
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x398d:
            r6 = r85
            r3.parentObject = r6     // Catch:{ Exception -> 0x39a1 }
        L_0x3991:
            r2 = 1
            r3.performMediaUpload = r2     // Catch:{ Exception -> 0x39a1 }
            r5 = r113
            r24 = r37
            if (r5 == 0) goto L_0x399c
            r2 = 1
            goto L_0x399d
        L_0x399c:
            r2 = 0
        L_0x399d:
            r3.scheduled = r2     // Catch:{ Exception -> 0x3a1d }
            goto L_0x3a0a
        L_0x39a1:
            r0 = move-exception
            r5 = r113
            r24 = r37
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x39be:
            r0 = move-exception
            r5 = r113
            r24 = r37
            r7 = r82
            r6 = r85
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x39df:
            r0 = move-exception
            r5 = r113
            r24 = r37
            r7 = r82
            r6 = r85
            r21 = r93
            r15 = r109
            r1 = r0
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r20 = r36
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3a00:
            r5 = r113
            r24 = r37
            r7 = r82
            r6 = r85
            r3 = r36
        L_0x3a0a:
            r4 = r103
            if (r4 == 0) goto L_0x3a36
            int r2 = r103.length()     // Catch:{ Exception -> 0x3a1d }
            if (r2 <= 0) goto L_0x3a36
            boolean r1 = r4.startsWith(r1)     // Catch:{ Exception -> 0x3a1d }
            if (r1 == 0) goto L_0x3a36
            r3.httpLocation = r4     // Catch:{ Exception -> 0x3a1d }
            goto L_0x3a36
        L_0x3a1d:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3a36:
            int r1 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x3a3d
            r12.performSendDelayedMessage(r3)     // Catch:{ Exception -> 0x3a1d }
        L_0x3a3d:
            r1 = r3
            r38 = r6
            r80 = r9
            r6 = r4
            r9 = r7
            r7 = r5
            r5 = r50
            goto L_0x3d39
        L_0x3a49:
            r0 = move-exception
            r4 = r103
            r5 = r113
            r24 = r9
            r6 = r85
            r9 = r7
            r7 = r82
            r21 = r93
            r15 = r109
            r1 = r0
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r20 = r36
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3a6d:
            r0 = move-exception
            r4 = r103
            r5 = r113
            r24 = r9
            r7 = r82
            r9 = r84
            r6 = r85
            r21 = r93
            r15 = r109
            r1 = r0
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r20 = r36
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3a92:
            r0 = move-exception
            r36 = r93
            r4 = r103
            r24 = r7
            r93 = r9
            r9 = r80
            r7 = r82
            r21 = r93
            r15 = r109
            r1 = r0
            r38 = r6
            r5 = r7
            r39 = r8
            r48 = r9
            r20 = r36
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3ab7:
            r6 = r91
            r4 = r103
            r1 = r10
            r5 = r11
            r24 = r37
            r2 = r42
            r50 = r71
            r49 = r74
            r19 = r75
            r7 = r79
            r10 = r101
            r88 = r36
            r36 = r93
            r93 = r9
            r9 = r25
            r25 = r14
            r14 = r88
        L_0x3ad7:
            r3 = r50
            java.util.ArrayList r4 = r3.sizes     // Catch:{ Exception -> 0x3ea2 }
            r5 = 0
            java.lang.Object r4 = r4.get(r5)     // Catch:{ Exception -> 0x3e95 }
            org.telegram.tgnet.TLRPC$PhotoSize r4 = (org.telegram.tgnet.TLRPC.PhotoSize) r4     // Catch:{ Exception -> 0x3e95 }
            r5 = r4
            java.util.ArrayList r4 = r3.sizes     // Catch:{ Exception -> 0x3e95 }
            r91 = r6
            java.util.ArrayList r6 = r3.sizes     // Catch:{ Exception -> 0x3e76 }
            int r6 = r6.size()     // Catch:{ Exception -> 0x3e76 }
            r20 = 1
            int r6 = r6 + -1
            java.lang.Object r4 = r4.get(r6)     // Catch:{ Exception -> 0x3e76 }
            org.telegram.tgnet.TLRPC$PhotoSize r4 = (org.telegram.tgnet.TLRPC.PhotoSize) r4     // Catch:{ Exception -> 0x3e76 }
            r6 = r4
            org.telegram.messenger.ImageLoader.fillPhotoSizeWithBytes(r5)     // Catch:{ Exception -> 0x3e76 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto r4 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto     // Catch:{ Exception -> 0x3e76 }
            r4.<init>()     // Catch:{ Exception -> 0x3e76 }
            r15.media = r4     // Catch:{ Exception -> 0x3e76 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r15.media     // Catch:{ Exception -> 0x3e76 }
            r4.caption = r9     // Catch:{ Exception -> 0x3e76 }
            byte[] r4 = r5.bytes     // Catch:{ Exception -> 0x3e76 }
            if (r4 == 0) goto L_0x3b4b
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r4 = r15.media     // Catch:{ Exception -> 0x3b30 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto r4 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto) r4     // Catch:{ Exception -> 0x3b30 }
            r50 = r3
            byte[] r3 = r5.bytes     // Catch:{ Exception -> 0x3b17 }
            r4.thumb = r3     // Catch:{ Exception -> 0x3b17 }
            r111 = r7
            goto L_0x3b58
        L_0x3b17:
            r0 = move-exception
            r38 = r91
            r21 = r93
            r15 = r109
            r1 = r0
            r5 = r7
            r39 = r8
            r48 = r9
            r20 = r36
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3b30:
            r0 = move-exception
            r50 = r3
            r38 = r91
            r21 = r93
            r15 = r109
            r1 = r0
            r5 = r7
            r39 = r8
            r48 = r9
            r20 = r36
            r28 = r78
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3b4b:
            r50 = r3
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3e59 }
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaPhoto r3 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageMediaPhoto) r3     // Catch:{ Exception -> 0x3e59 }
            r111 = r7
            r4 = 0
            byte[] r7 = new byte[r4]     // Catch:{ Exception -> 0x3e3b }
            r3.thumb = r7     // Catch:{ Exception -> 0x3e3b }
        L_0x3b58:
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3e3b }
            int r4 = r5.h     // Catch:{ Exception -> 0x3e3b }
            r3.thumb_h = r4     // Catch:{ Exception -> 0x3e3b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3e3b }
            int r4 = r5.w     // Catch:{ Exception -> 0x3e3b }
            r3.thumb_w = r4     // Catch:{ Exception -> 0x3e3b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3e3b }
            int r4 = r6.w     // Catch:{ Exception -> 0x3e3b }
            r3.w = r4     // Catch:{ Exception -> 0x3e3b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3e3b }
            int r4 = r6.h     // Catch:{ Exception -> 0x3e3b }
            r3.h = r4     // Catch:{ Exception -> 0x3e3b }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r3 = r15.media     // Catch:{ Exception -> 0x3e3b }
            int r4 = r6.size     // Catch:{ Exception -> 0x3e3b }
            r94 = r5
            long r4 = (long) r4     // Catch:{ Exception -> 0x3e3b }
            r3.size = r4     // Catch:{ Exception -> 0x3e3b }
            org.telegram.tgnet.TLRPC$FileLocation r3 = r6.location     // Catch:{ Exception -> 0x3e3b }
            byte[] r3 = r3.key     // Catch:{ Exception -> 0x3e3b }
            if (r3 == 0) goto L_0x3c1a
            int r3 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x3b8f
            r28 = r94
            r37 = r6
            r80 = r9
            r86 = r50
            r9 = r111
            goto L_0x3CLASSNAME
        L_0x3b8f:
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r1 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x3bfb }
            r1.<init>()     // Catch:{ Exception -> 0x3bfb }
            r7 = r1
            org.telegram.tgnet.TLRPC$FileLocation r1 = r6.location     // Catch:{ Exception -> 0x3bfb }
            long r1 = r1.volume_id     // Catch:{ Exception -> 0x3bfb }
            r7.id = r1     // Catch:{ Exception -> 0x3bfb }
            org.telegram.tgnet.TLRPC$FileLocation r1 = r6.location     // Catch:{ Exception -> 0x3bfb }
            long r1 = r1.secret     // Catch:{ Exception -> 0x3bfb }
            r7.access_hash = r1     // Catch:{ Exception -> 0x3bfb }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3bfb }
            org.telegram.tgnet.TLRPC$FileLocation r2 = r6.location     // Catch:{ Exception -> 0x3bfb }
            byte[] r2 = r2.key     // Catch:{ Exception -> 0x3bfb }
            r1.key = r2     // Catch:{ Exception -> 0x3bfb }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r15.media     // Catch:{ Exception -> 0x3bfb }
            org.telegram.tgnet.TLRPC$FileLocation r2 = r6.location     // Catch:{ Exception -> 0x3bfb }
            byte[] r2 = r2.iv     // Catch:{ Exception -> 0x3bfb }
            r1.iv = r2     // Catch:{ Exception -> 0x3bfb }
            org.telegram.messenger.SecretChatHelper r1 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x3bfb }
            org.telegram.tgnet.TLRPC$Message r3 = r13.messageOwner     // Catch:{ Exception -> 0x3bfb }
            r20 = 0
            r2 = r15
            r5 = r50
            r4 = r8
            r28 = r94
            r86 = r5
            r80 = r9
            r9 = r113
            r5 = r7
            r9 = r91
            r37 = r6
            r6 = r20
            r20 = r7
            r9 = r111
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x3be0 }
            r38 = r91
            r6 = r103
            r7 = r113
            r3 = r36
            r5 = r86
            goto L_0x3d38
        L_0x3be0:
            r0 = move-exception
            r38 = r91
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r20 = r36
            r28 = r78
            r48 = r80
            r50 = r86
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3bfb:
            r0 = move-exception
            r80 = r9
            r86 = r50
            r9 = r111
            r38 = r91
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r20 = r36
            r28 = r78
            r48 = r80
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3c1a:
            r28 = r94
            r37 = r6
            r80 = r9
            r86 = r50
            r9 = r111
        L_0x3CLASSNAME:
            if (r36 != 0) goto L_0x3ccd
            org.telegram.messenger.SendMessagesHelper$DelayedMessage r3 = new org.telegram.messenger.SendMessagesHelper$DelayedMessage     // Catch:{ Exception -> 0x3cb0 }
            r3.<init>(r10)     // Catch:{ Exception -> 0x3cb0 }
            r3.encryptedChat = r8     // Catch:{ Exception -> 0x3CLASSNAME }
            r4 = 0
            r3.type = r4     // Catch:{ Exception -> 0x3CLASSNAME }
            r3.originalPath = r14     // Catch:{ Exception -> 0x3CLASSNAME }
            r3.sendEncryptedRequest = r15     // Catch:{ Exception -> 0x3CLASSNAME }
            r3.obj = r13     // Catch:{ Exception -> 0x3CLASSNAME }
            if (r9 == 0) goto L_0x3CLASSNAME
            boolean r4 = r9.containsKey(r2)     // Catch:{ Exception -> 0x3CLASSNAME }
            if (r4 == 0) goto L_0x3CLASSNAME
            java.lang.Object r2 = r9.get(r2)     // Catch:{ Exception -> 0x3CLASSNAME }
            r3.parentObject = r2     // Catch:{ Exception -> 0x3CLASSNAME }
            r2 = r91
            goto L_0x3CLASSNAME
        L_0x3CLASSNAME:
            r0 = move-exception
            r38 = r91
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r39 = r8
            r5 = r9
            r28 = r78
            r48 = r80
            r50 = r86
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3CLASSNAME:
            r2 = r91
            r3.parentObject = r2     // Catch:{ Exception -> 0x3CLASSNAME }
        L_0x3CLASSNAME:
            r4 = 1
            r3.performMediaUpload = r4     // Catch:{ Exception -> 0x3CLASSNAME }
            r7 = r113
            r38 = r2
            if (r7 == 0) goto L_0x3CLASSNAME
            r2 = 1
            goto L_0x3CLASSNAME
        L_0x3CLASSNAME:
            r2 = 0
        L_0x3CLASSNAME:
            r3.scheduled = r2     // Catch:{ Exception -> 0x3ce6 }
            goto L_0x3cd3
        L_0x3CLASSNAME:
            r0 = move-exception
            r7 = r113
            r38 = r2
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r39 = r8
            r5 = r9
            r28 = r78
            r48 = r80
            r50 = r86
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3CLASSNAME:
            r0 = move-exception
            r38 = r91
            r7 = r113
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r39 = r8
            r5 = r9
            r28 = r78
            r48 = r80
            r50 = r86
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3cb0:
            r0 = move-exception
            r38 = r91
            r7 = r113
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r20 = r36
            r28 = r78
            r48 = r80
            r50 = r86
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3ccd:
            r38 = r91
            r7 = r113
            r3 = r36
        L_0x3cd3:
            boolean r2 = android.text.TextUtils.isEmpty(r103)     // Catch:{ Exception -> 0x3e23 }
            if (r2 != 0) goto L_0x3cff
            r6 = r103
            boolean r1 = r6.startsWith(r1)     // Catch:{ Exception -> 0x3ce6 }
            if (r1 == 0) goto L_0x3d01
            r3.httpLocation = r6     // Catch:{ Exception -> 0x3ce6 }
            r5 = r86
            goto L_0x3d17
        L_0x3ce6:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r39 = r8
            r5 = r9
            r28 = r78
            r48 = r80
            r50 = r86
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3cff:
            r6 = r103
        L_0x3d01:
            r5 = r86
            java.util.ArrayList r1 = r5.sizes     // Catch:{ Exception -> 0x3e0b }
            java.util.ArrayList r2 = r5.sizes     // Catch:{ Exception -> 0x3e0b }
            int r2 = r2.size()     // Catch:{ Exception -> 0x3e0b }
            r4 = 1
            int r2 = r2 - r4
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x3e0b }
            org.telegram.tgnet.TLRPC$PhotoSize r1 = (org.telegram.tgnet.TLRPC.PhotoSize) r1     // Catch:{ Exception -> 0x3e0b }
            r3.photoSize = r1     // Catch:{ Exception -> 0x3e0b }
            r3.locationParent = r5     // Catch:{ Exception -> 0x3e0b }
        L_0x3d17:
            int r1 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r1 != 0) goto L_0x3d38
            r12.performSendDelayedMessage(r3)     // Catch:{ Exception -> 0x3d1f }
            goto L_0x3d38
        L_0x3d1f:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r50 = r5
            r39 = r8
            r5 = r9
            r28 = r78
            r48 = r80
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3d38:
            r1 = r3
        L_0x3d39:
            int r2 = (r40 > r16 ? 1 : (r40 == r16 ? 0 : -1))
            if (r2 == 0) goto L_0x3dcd
            org.telegram.tgnet.TLObject r2 = r1.sendEncryptedRequest     // Catch:{ Exception -> 0x3db5 }
            if (r2 == 0) goto L_0x3d5f
            org.telegram.tgnet.TLObject r2 = r1.sendEncryptedRequest     // Catch:{ Exception -> 0x3d46 }
            org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia r2 = (org.telegram.tgnet.TLRPC.TL_messages_sendEncryptedMultiMedia) r2     // Catch:{ Exception -> 0x3d46 }
            goto L_0x3d66
        L_0x3d46:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r20 = r1
            r50 = r5
            r39 = r8
            r5 = r9
            r28 = r78
            r48 = r80
            r1 = r0
            r88 = r25
            r25 = r14
            r14 = r88
            goto L_0x43f0
        L_0x3d5f:
            org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia r2 = new org.telegram.tgnet.TLRPC$TL_messages_sendEncryptedMultiMedia     // Catch:{ Exception -> 0x3db5 }
            r2.<init>()     // Catch:{ Exception -> 0x3db5 }
            r1.sendEncryptedRequest = r2     // Catch:{ Exception -> 0x3db5 }
        L_0x3d66:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r1.messageObjects     // Catch:{ Exception -> 0x3db5 }
            r3.add(r13)     // Catch:{ Exception -> 0x3db5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r1.messages     // Catch:{ Exception -> 0x3db5 }
            r4 = r25
            r3.add(r4)     // Catch:{ Exception -> 0x3d9f }
            java.util.ArrayList<java.lang.String> r3 = r1.originalPaths     // Catch:{ Exception -> 0x3d9f }
            r3.add(r14)     // Catch:{ Exception -> 0x3d9f }
            r3 = 1
            r1.performMediaUpload = r3     // Catch:{ Exception -> 0x3d9f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_decryptedMessage> r3 = r2.messages     // Catch:{ Exception -> 0x3d9f }
            r3.add(r15)     // Catch:{ Exception -> 0x3d9f }
            org.telegram.tgnet.TLRPC$TL_inputEncryptedFile r3 = new org.telegram.tgnet.TLRPC$TL_inputEncryptedFile     // Catch:{ Exception -> 0x3d9f }
            r3.<init>()     // Catch:{ Exception -> 0x3d9f }
            r50 = r5
            r6 = 3
            r5 = r93
            if (r5 == r6) goto L_0x3d8e
            r6 = 7
            if (r5 != r6) goto L_0x3d90
        L_0x3d8e:
            r16 = 1
        L_0x3d90:
            r93 = r5
            r5 = r16
            r3.id = r5     // Catch:{ Exception -> 0x3de4 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputEncryptedFile> r5 = r2.files     // Catch:{ Exception -> 0x3de4 }
            r5.add(r3)     // Catch:{ Exception -> 0x3de4 }
            r12.performSendDelayedMessage(r1)     // Catch:{ Exception -> 0x3de4 }
            goto L_0x3dd1
        L_0x3d9f:
            r0 = move-exception
            r50 = r5
            r21 = r93
            r15 = r109
            r20 = r1
            r39 = r8
            r5 = r9
            r25 = r14
            r28 = r78
            r48 = r80
            r1 = r0
            r14 = r4
            goto L_0x43f0
        L_0x3db5:
            r0 = move-exception
            r50 = r5
            r4 = r25
            r21 = r93
            r15 = r109
            r20 = r1
            r39 = r8
            r5 = r9
            r25 = r14
            r28 = r78
            r48 = r80
            r1 = r0
            r14 = r4
            goto L_0x43f0
        L_0x3dcd:
            r50 = r5
            r4 = r25
        L_0x3dd1:
            if (r108 != 0) goto L_0x3df8
            org.telegram.messenger.MediaDataController r2 = r90.getMediaDataController()     // Catch:{ Exception -> 0x3de4 }
            if (r105 == 0) goto L_0x3dde
            int r3 = r105.getId()     // Catch:{ Exception -> 0x3de4 }
            goto L_0x3ddf
        L_0x3dde:
            r3 = 0
        L_0x3ddf:
            r5 = 0
            r2.cleanDraft(r10, r3, r5)     // Catch:{ Exception -> 0x3de4 }
            goto L_0x3df8
        L_0x3de4:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r20 = r1
            r39 = r8
            r5 = r9
            r25 = r14
            r28 = r78
            r48 = r80
            r1 = r0
            r14 = r4
            goto L_0x43f0
        L_0x3df8:
            r43 = r93
            r15 = r109
            r39 = r8
            r25 = r14
            r17 = r47
            r37 = r50
            r16 = r77
            r28 = r78
            r14 = r4
            goto L_0x4113
        L_0x3e0b:
            r0 = move-exception
            r50 = r5
            r4 = r25
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r39 = r8
            r5 = r9
            r25 = r14
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3e23:
            r0 = move-exception
            r4 = r25
            r50 = r86
            r21 = r93
            r15 = r109
            r1 = r0
            r20 = r3
            r39 = r8
            r5 = r9
            r25 = r14
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3e3b:
            r0 = move-exception
            r38 = r91
            r7 = r113
            r80 = r9
            r4 = r25
            r9 = r111
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3e59:
            r0 = move-exception
            r38 = r91
            r80 = r9
            r4 = r25
            r9 = r7
            r7 = r113
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3e76:
            r0 = move-exception
            r38 = r91
            r50 = r3
            r80 = r9
            r4 = r25
            r9 = r7
            r7 = r113
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3e95:
            r0 = move-exception
            r50 = r3
            r38 = r6
            r80 = r9
            r4 = r25
            r9 = r7
            r7 = r113
            goto L_0x3ead
        L_0x3ea2:
            r0 = move-exception
            r50 = r3
            r38 = r6
            r80 = r9
            r4 = r25
            r9 = r7
            r7 = r5
        L_0x3ead:
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3ec0:
            r0 = move-exception
            r38 = r91
            r7 = r11
            r4 = r14
            r80 = r25
            r14 = r36
            r24 = r37
            r50 = r71
            r29 = r73
            r49 = r74
            r19 = r75
            r36 = r93
            r10 = r101
            r93 = r9
            r9 = r111
            r21 = r93
            r15 = r109
            r1 = r0
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r28 = r78
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3eee:
            r38 = r91
            r77 = r92
            r33 = r94
            r19 = r96
            r13 = r97
            r78 = r9
            r4 = r10
            r36 = r11
            r10 = r14
            r14 = r25
            r24 = r45
            r32 = r46
            r80 = r48
            r1 = r51
            r40 = r52
            r29 = r56
            r9 = r7
            r7 = r3
            r88 = r12
            r12 = r8
            r8 = r88
        L_0x3var_:
            if (r8 != 0) goto L_0x4040
            org.telegram.tgnet.TLRPC$TL_messages_sendMessage r1 = new org.telegram.tgnet.TLRPC$TL_messages_sendMessage     // Catch:{ Exception -> 0x4026 }
            r1.<init>()     // Catch:{ Exception -> 0x4026 }
            r15 = r1
            r6 = r77
            r15.message = r6     // Catch:{ Exception -> 0x400a }
            if (r108 != 0) goto L_0x3var_
            r3 = 1
            goto L_0x3var_
        L_0x3var_:
            r3 = 0
        L_0x3var_:
            r15.clear_draft = r3     // Catch:{ Exception -> 0x400a }
            boolean r1 = r4.silent     // Catch:{ Exception -> 0x400a }
            r15.silent = r1     // Catch:{ Exception -> 0x400a }
            r5 = r78
            r15.peer = r5     // Catch:{ Exception -> 0x3fee }
            long r1 = r4.random_id     // Catch:{ Exception -> 0x3fee }
            r15.random_id = r1     // Catch:{ Exception -> 0x3fee }
            org.telegram.tgnet.TLRPC$Peer r1 = r4.from_id     // Catch:{ Exception -> 0x3fee }
            if (r1 == 0) goto L_0x3var_
            org.telegram.messenger.MessagesController r1 = r90.getMessagesController()     // Catch:{ Exception -> 0x3var_ }
            org.telegram.tgnet.TLRPC$Peer r2 = r4.from_id     // Catch:{ Exception -> 0x3var_ }
            org.telegram.tgnet.TLRPC$InputPeer r1 = r1.getInputPeer((org.telegram.tgnet.TLRPC.Peer) r2)     // Catch:{ Exception -> 0x3var_ }
            r15.send_as = r1     // Catch:{ Exception -> 0x3var_ }
            goto L_0x3var_
        L_0x3var_:
            r0 = move-exception
            r21 = r93
            r15 = r109
            r1 = r0
            r28 = r5
            r77 = r6
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3var_:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r4.reply_to     // Catch:{ Exception -> 0x3fee }
            if (r1 == 0) goto L_0x3f6f
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r4.reply_to     // Catch:{ Exception -> 0x3var_ }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x3var_ }
            if (r1 == 0) goto L_0x3f6f
            int r1 = r15.flags     // Catch:{ Exception -> 0x3var_ }
            r2 = 1
            r1 = r1 | r2
            r15.flags = r1     // Catch:{ Exception -> 0x3var_ }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r4.reply_to     // Catch:{ Exception -> 0x3var_ }
            int r1 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x3var_ }
            r15.reply_to_msg_id = r1     // Catch:{ Exception -> 0x3var_ }
        L_0x3f6f:
            if (r107 != 0) goto L_0x3var_
            r1 = 1
            r15.no_webpage = r1     // Catch:{ Exception -> 0x3var_ }
        L_0x3var_:
            r3 = r109
            if (r3 == 0) goto L_0x3f9d
            boolean r1 = r109.isEmpty()     // Catch:{ Exception -> 0x3var_ }
            if (r1 != 0) goto L_0x3f9d
            r15.entities = r3     // Catch:{ Exception -> 0x3var_ }
            int r1 = r15.flags     // Catch:{ Exception -> 0x3var_ }
            r2 = 8
            r1 = r1 | r2
            r15.flags = r1     // Catch:{ Exception -> 0x3var_ }
            goto L_0x3f9d
        L_0x3var_:
            r0 = move-exception
            r21 = r93
            r1 = r0
            r15 = r3
            r28 = r5
            r77 = r6
            r39 = r8
            r5 = r9
            r25 = r14
            r20 = r36
            r48 = r80
            r14 = r4
            goto L_0x43f0
        L_0x3f9d:
            if (r7 == 0) goto L_0x3fa7
            r15.schedule_date = r7     // Catch:{ Exception -> 0x3var_ }
            int r1 = r15.flags     // Catch:{ Exception -> 0x3var_ }
            r1 = r1 | 1024(0x400, float:1.435E-42)
            r15.flags = r1     // Catch:{ Exception -> 0x3var_ }
        L_0x3fa7:
            r16 = 0
            r17 = 0
            if (r7 == 0) goto L_0x3fb0
            r20 = 1
            goto L_0x3fb2
        L_0x3fb0:
            r20 = 0
        L_0x3fb2:
            r1 = r90
            r2 = r15
            r3 = r13
            r25 = r14
            r14 = r4
            r4 = r16
            r43 = r93
            r28 = r5
            r37 = r50
            r5 = r17
            r87 = r6
            r6 = r38
            r7 = r9
            r39 = r8
            r8 = r20
            r1.performSendMessageRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x3fe9 }
            if (r108 != 0) goto L_0x3fe1
            org.telegram.messenger.MediaDataController r1 = r90.getMediaDataController()     // Catch:{ Exception -> 0x3fe9 }
            if (r105 == 0) goto L_0x3fdc
            int r3 = r105.getId()     // Catch:{ Exception -> 0x3fe9 }
            goto L_0x3fdd
        L_0x3fdc:
            r3 = 0
        L_0x3fdd:
            r2 = 0
            r1.cleanDraft(r10, r3, r2)     // Catch:{ Exception -> 0x3fe9 }
        L_0x3fe1:
            r15 = r109
            r17 = r47
            r16 = r87
            goto L_0x4111
        L_0x3fe9:
            r0 = move-exception
            r15 = r109
            goto L_0x406b
        L_0x3fee:
            r0 = move-exception
            r43 = r93
            r28 = r5
            r87 = r6
            r39 = r8
            r25 = r14
            r37 = r50
            r14 = r4
            r15 = r109
            r1 = r0
            r5 = r9
            r20 = r36
            r21 = r43
            r48 = r80
            r77 = r87
            goto L_0x43f0
        L_0x400a:
            r0 = move-exception
            r43 = r93
            r87 = r6
            r39 = r8
            r25 = r14
            r37 = r50
            r28 = r78
            r14 = r4
            r15 = r109
            r1 = r0
            r5 = r9
            r20 = r36
            r21 = r43
            r48 = r80
            r77 = r87
            goto L_0x43f0
        L_0x4026:
            r0 = move-exception
            r43 = r93
            r39 = r8
            r25 = r14
            r37 = r50
            r87 = r77
            r28 = r78
            r14 = r4
            r15 = r109
            r1 = r0
            r5 = r9
            r20 = r36
            r21 = r43
            r48 = r80
            goto L_0x43f0
        L_0x4040:
            r43 = r93
            r39 = r8
            r25 = r14
            r37 = r50
            r87 = r77
            r28 = r78
            r14 = r4
            org.telegram.tgnet.TLRPC$TL_decryptedMessage r2 = new org.telegram.tgnet.TLRPC$TL_decryptedMessage     // Catch:{ Exception -> 0x4164 }
            r2.<init>()     // Catch:{ Exception -> 0x4164 }
            r8 = r2
            int r2 = r14.ttl     // Catch:{ Exception -> 0x4164 }
            r8.ttl = r2     // Catch:{ Exception -> 0x4164 }
            r15 = r109
            if (r15 == 0) goto L_0x4079
            boolean r2 = r109.isEmpty()     // Catch:{ Exception -> 0x406a }
            if (r2 != 0) goto L_0x4079
            r8.entities = r15     // Catch:{ Exception -> 0x406a }
            int r2 = r8.flags     // Catch:{ Exception -> 0x406a }
            r2 = r2 | 128(0x80, float:1.794E-43)
            r8.flags = r2     // Catch:{ Exception -> 0x406a }
            goto L_0x4079
        L_0x406a:
            r0 = move-exception
        L_0x406b:
            r1 = r0
            r5 = r9
            r20 = r36
            r50 = r37
            r21 = r43
            r48 = r80
            r77 = r87
            goto L_0x43f0
        L_0x4079:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r14.reply_to     // Catch:{ Exception -> 0x4162 }
            if (r2 == 0) goto L_0x4092
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r14.reply_to     // Catch:{ Exception -> 0x406a }
            long r2 = r2.reply_to_random_id     // Catch:{ Exception -> 0x406a }
            int r4 = (r2 > r16 ? 1 : (r2 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x4092
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r14.reply_to     // Catch:{ Exception -> 0x406a }
            long r2 = r2.reply_to_random_id     // Catch:{ Exception -> 0x406a }
            r8.reply_to_random_id = r2     // Catch:{ Exception -> 0x406a }
            int r2 = r8.flags     // Catch:{ Exception -> 0x406a }
            r3 = 8
            r2 = r2 | r3
            r8.flags = r2     // Catch:{ Exception -> 0x406a }
        L_0x4092:
            if (r9 == 0) goto L_0x40a8
            java.lang.Object r2 = r9.get(r1)     // Catch:{ Exception -> 0x406a }
            if (r2 == 0) goto L_0x40a8
            java.lang.Object r1 = r9.get(r1)     // Catch:{ Exception -> 0x406a }
            java.lang.String r1 = (java.lang.String) r1     // Catch:{ Exception -> 0x406a }
            r8.via_bot_name = r1     // Catch:{ Exception -> 0x406a }
            int r1 = r8.flags     // Catch:{ Exception -> 0x406a }
            r1 = r1 | 2048(0x800, float:2.87E-42)
            r8.flags = r1     // Catch:{ Exception -> 0x406a }
        L_0x40a8:
            boolean r1 = r14.silent     // Catch:{ Exception -> 0x4162 }
            r8.silent = r1     // Catch:{ Exception -> 0x4162 }
            long r1 = r14.random_id     // Catch:{ Exception -> 0x4162 }
            r8.random_id = r1     // Catch:{ Exception -> 0x4162 }
            r7 = r87
            r8.message = r7     // Catch:{ Exception -> 0x414f }
            r6 = r47
            if (r6 == 0) goto L_0x40e1
            java.lang.String r1 = r6.url     // Catch:{ Exception -> 0x40d0 }
            if (r1 == 0) goto L_0x40e1
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaWebPage     // Catch:{ Exception -> 0x40d0 }
            r1.<init>()     // Catch:{ Exception -> 0x40d0 }
            r8.media = r1     // Catch:{ Exception -> 0x40d0 }
            org.telegram.tgnet.TLRPC$DecryptedMessageMedia r1 = r8.media     // Catch:{ Exception -> 0x40d0 }
            java.lang.String r2 = r6.url     // Catch:{ Exception -> 0x40d0 }
            r1.url = r2     // Catch:{ Exception -> 0x40d0 }
            int r1 = r8.flags     // Catch:{ Exception -> 0x40d0 }
            r1 = r1 | 512(0x200, float:7.175E-43)
            r8.flags = r1     // Catch:{ Exception -> 0x40d0 }
            goto L_0x40e8
        L_0x40d0:
            r0 = move-exception
            r1 = r0
            r47 = r6
            r77 = r7
            r5 = r9
            r20 = r36
            r50 = r37
            r21 = r43
            r48 = r80
            goto L_0x43f0
        L_0x40e1:
            org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty r1 = new org.telegram.tgnet.TLRPC$TL_decryptedMessageMediaEmpty     // Catch:{ Exception -> 0x413a }
            r1.<init>()     // Catch:{ Exception -> 0x413a }
            r8.media = r1     // Catch:{ Exception -> 0x413a }
        L_0x40e8:
            org.telegram.messenger.SecretChatHelper r1 = r90.getSecretChatHelper()     // Catch:{ Exception -> 0x413a }
            org.telegram.tgnet.TLRPC$Message r3 = r13.messageOwner     // Catch:{ Exception -> 0x413a }
            r5 = 0
            r16 = 0
            r2 = r8
            r4 = r39
            r17 = r6
            r6 = r16
            r16 = r7
            r7 = r13
            r1.performSendEncryptedRequest(r2, r3, r4, r5, r6, r7)     // Catch:{ Exception -> 0x4129 }
            if (r108 != 0) goto L_0x4110
            org.telegram.messenger.MediaDataController r1 = r90.getMediaDataController()     // Catch:{ Exception -> 0x4129 }
            if (r105 == 0) goto L_0x410b
            int r3 = r105.getId()     // Catch:{ Exception -> 0x4129 }
            goto L_0x410c
        L_0x410b:
            r3 = 0
        L_0x410c:
            r2 = 0
            r1.cleanDraft(r10, r3, r2)     // Catch:{ Exception -> 0x4129 }
        L_0x4110:
        L_0x4111:
            r1 = r36
        L_0x4113:
            r5 = r9
            r6 = r13
            r77 = r16
            r47 = r17
            r45 = r24
            r3 = r29
            r46 = r32
            r13 = r33
            r2 = r37
            r7 = r43
            r48 = r80
            goto L_0x442f
        L_0x4129:
            r0 = move-exception
            r1 = r0
            r5 = r9
            r77 = r16
            r47 = r17
            r20 = r36
            r50 = r37
            r21 = r43
            r48 = r80
            goto L_0x43f0
        L_0x413a:
            r0 = move-exception
            r17 = r6
            r16 = r7
            r1 = r0
            r5 = r9
            r77 = r16
            r47 = r17
            r20 = r36
            r50 = r37
            r21 = r43
            r48 = r80
            goto L_0x43f0
        L_0x414f:
            r0 = move-exception
            r16 = r7
            r17 = r47
            r1 = r0
            r5 = r9
            r77 = r16
            r20 = r36
            r50 = r37
            r21 = r43
            r48 = r80
            goto L_0x43f0
        L_0x4162:
            r0 = move-exception
            goto L_0x4167
        L_0x4164:
            r0 = move-exception
            r15 = r109
        L_0x4167:
            r17 = r47
            r16 = r87
            r1 = r0
            r5 = r9
            r77 = r16
            r20 = r36
            r50 = r37
            r21 = r43
            r48 = r80
            goto L_0x43f0
        L_0x4179:
            r0 = move-exception
            r38 = r91
            r16 = r92
            r43 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r28 = r9
            r36 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r9 = r7
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r5 = r9
            r77 = r16
            r20 = r36
            r21 = r43
            goto L_0x43f0
        L_0x41ab:
            r0 = move-exception
            r38 = r91
            r16 = r92
            r43 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r28 = r9
            r20 = r11
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r9 = r7
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r5 = r9
            r77 = r16
            r21 = r43
            goto L_0x43f0
        L_0x41db:
            r0 = move-exception
            r38 = r91
            r16 = r92
            r43 = r93
            r33 = r94
            r19 = r96
            r13 = r97
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r9 = r7
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r5 = r9
            r77 = r16
            r21 = r43
            goto L_0x43f0
        L_0x4209:
            r0 = move-exception
            r38 = r91
            r16 = r92
            r43 = r93
            r33 = r94
            r13 = r6
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r9 = r7
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r19 = r95
            r1 = r0
            r5 = r9
            r77 = r16
            r21 = r43
            goto L_0x43f0
        L_0x4236:
            r0 = move-exception
            r38 = r91
            r16 = r92
            r43 = r93
            r33 = r94
            r28 = r9
            r39 = r12
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r37 = r50
            r29 = r56
            r9 = r7
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r5 = r9
            r77 = r16
            r13 = r19
            r21 = r43
            r19 = r95
            goto L_0x43f0
        L_0x4264:
            r0 = move-exception
            r16 = r92
            r43 = r93
            r49 = r94
            r37 = r96
            r29 = r97
            r34 = r6
            r28 = r9
            r39 = r12
            r33 = r13
            r31 = r38
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r38 = r91
            r9 = r5
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r77 = r16
            r13 = r19
            r50 = r37
            r21 = r43
            r19 = r95
            goto L_0x43f0
        L_0x4299:
            r0 = move-exception
            r16 = r92
            r43 = r93
            r49 = r94
            r37 = r96
            r29 = r97
            r26 = r4
            r34 = r6
            r28 = r9
            r39 = r12
            r33 = r13
            r31 = r38
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r38 = r91
            r9 = r111
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r5 = r9
            r77 = r16
            r13 = r19
            r50 = r37
            r21 = r43
            r19 = r95
            goto L_0x43f0
        L_0x42d2:
            r0 = move-exception
            r16 = r92
            r43 = r93
            r49 = r94
            r37 = r96
            r29 = r97
            r28 = r9
            r39 = r12
            r33 = r13
            r34 = r26
            r31 = r38
            r24 = r45
            r32 = r46
            r17 = r47
            r80 = r48
            r38 = r91
            r26 = r4
            r9 = r6
            r12 = r8
            r88 = r14
            r15 = r109
            r14 = r10
            r10 = r88
            r1 = r0
            r5 = r9
            r77 = r16
            r13 = r19
            r50 = r37
            r21 = r43
            r19 = r95
            goto L_0x43f0
        L_0x430a:
            r0 = move-exception
            r31 = r6
            r28 = r9
            r39 = r12
            r10 = r14
            r34 = r26
            r15 = r109
            r26 = r4
            r12 = r8
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r5 = r106
            r33 = r114
            r38 = r115
            r1 = r0
            r14 = r3
            r48 = r7
            r13 = r19
            r19 = r95
            goto L_0x43f0
        L_0x4337:
            r0 = move-exception
            r30 = r2
            r31 = r6
            r28 = r9
            r39 = r12
            r10 = r14
            r34 = r26
            r15 = r109
            r26 = r4
            r12 = r8
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r5 = r106
            r33 = r114
            r38 = r115
            r1 = r0
            r14 = r3
            r48 = r7
            r13 = r19
            r19 = r95
            goto L_0x43f0
        L_0x4366:
            r0 = move-exception
            r30 = r2
            r31 = r6
            r28 = r9
            r39 = r12
            r10 = r14
            r34 = r26
            r26 = r32
            r15 = r5
            r12 = r8
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r5 = r106
            r33 = r114
            r38 = r115
            r1 = r0
            r14 = r3
            r48 = r7
            r13 = r19
            r19 = r95
            goto L_0x43f0
        L_0x4394:
            r0 = move-exception
            r92 = r1
            r106 = r2
            r39 = r12
            r10 = r14
            r28 = r35
            r31 = r38
            r15 = r5
            r12 = r8
            r34 = r26
            r26 = r32
            r77 = r91
            r47 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r5 = r106
            r33 = r114
            r38 = r115
            r1 = r0
            r14 = r3
            r48 = r7
            r13 = r19
            r19 = r95
            goto L_0x43f0
        L_0x43c3:
            r0 = move-exception
            r39 = r12
            r10 = r14
            r28 = r35
            r31 = r38
            r12 = r90
            r15 = r109
            r34 = r26
            r26 = r32
            r77 = r91
            r48 = r92
            r29 = r93
            r50 = r94
            r49 = r96
            r24 = r97
            r32 = r99
            r47 = r106
            r5 = r111
            r33 = r114
            r38 = r115
            r1 = r0
            r14 = r18
            r13 = r19
            r19 = r95
        L_0x43f0:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)
            org.telegram.messenger.MessagesStorage r2 = r90.getMessagesStorage()
            if (r113 == 0) goto L_0x43fb
            r3 = 1
            goto L_0x43fc
        L_0x43fb:
            r3 = 0
        L_0x43fc:
            r2.markMessageAsSendError(r14, r3)
            if (r13 == 0) goto L_0x4406
            org.telegram.tgnet.TLRPC$Message r2 = r13.messageOwner
            r3 = 2
            r2.send_state = r3
        L_0x4406:
            org.telegram.messenger.NotificationCenter r2 = r90.getNotificationCenter()
            int r3 = org.telegram.messenger.NotificationCenter.messageSendError
            r4 = 1
            java.lang.Object[] r4 = new java.lang.Object[r4]
            int r6 = r14.id
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r7 = 0
            r4[r7] = r6
            r2.postNotificationName(r3, r4)
            int r2 = r14.id
            r12.processSentMessage(r2)
            r6 = r13
            r1 = r20
            r7 = r21
            r45 = r24
            r3 = r29
            r46 = r32
            r13 = r33
            r2 = r50
        L_0x442f:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.sendMessage(java.lang.String, java.lang.String, org.telegram.tgnet.TLRPC$MessageMedia, org.telegram.tgnet.TLRPC$TL_photo, org.telegram.messenger.VideoEditedInfo, org.telegram.tgnet.TLRPC$User, org.telegram.tgnet.TLRPC$TL_document, org.telegram.tgnet.TLRPC$TL_game, org.telegram.tgnet.TLRPC$TL_messageMediaPoll, org.telegram.tgnet.TLRPC$TL_messageMediaInvoice, long, java.lang.String, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$WebPage, boolean, org.telegram.messenger.MessageObject, java.util.ArrayList, org.telegram.tgnet.TLRPC$ReplyMarkup, java.util.HashMap, boolean, int, int, java.lang.Object, org.telegram.messenger.MessageObject$SendAnimationData):void");
    }

    private void performSendDelayedMessage(DelayedMessage message) {
        performSendDelayedMessage(message, -1);
    }

    private TLRPC.PhotoSize getThumbForSecretChat(ArrayList<TLRPC.PhotoSize> arrayList) {
        if (arrayList == null || arrayList.isEmpty()) {
            return null;
        }
        int a = 0;
        int N = arrayList.size();
        while (a < N) {
            TLRPC.PhotoSize size = arrayList.get(a);
            if (size == null || (size instanceof TLRPC.TL_photoStrippedSize) || (size instanceof TLRPC.TL_photoPathSize) || (size instanceof TLRPC.TL_photoSizeEmpty) || size.location == null) {
                a++;
            } else {
                TLRPC.TL_photoSize photoSize = new TLRPC.TL_photoSize_layer127();
                photoSize.type = size.type;
                photoSize.w = size.w;
                photoSize.h = size.h;
                photoSize.size = size.size;
                photoSize.bytes = size.bytes;
                if (photoSize.bytes == null) {
                    photoSize.bytes = new byte[0];
                }
                photoSize.location = new TLRPC.TL_fileLocation_layer82();
                photoSize.location.dc_id = size.location.dc_id;
                photoSize.location.volume_id = size.location.volume_id;
                photoSize.location.local_id = size.location.local_id;
                photoSize.location.secret = size.location.secret;
                return photoSize;
            }
        }
        return null;
    }

    private void performSendDelayedMessage(DelayedMessage message, int index) {
        int index2;
        TLObject inputMedia;
        MessageObject messageObject;
        TLRPC.InputMedia media;
        TLRPC.InputMedia media2;
        TLRPC.InputMedia media3;
        DelayedMessage delayedMessage = message;
        boolean z = false;
        boolean z2 = true;
        if (delayedMessage.type == 0) {
            if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                String location = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                putToDelayedMessages(location, delayedMessage);
                getFileLoader().uploadFile(location, false, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
            } else {
                String location2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                if (!(delayedMessage.sendEncryptedRequest == null || delayedMessage.photoSize.location.dc_id == 0)) {
                    File file = new File(location2);
                    if (!file.exists()) {
                        location2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize, true).toString();
                        file = new File(location2);
                    }
                    if (!file.exists()) {
                        putToDelayedMessages(FileLoader.getAttachFileName(delayedMessage.photoSize), delayedMessage);
                        getFileLoader().loadFile(ImageLocation.getForObject(delayedMessage.photoSize, delayedMessage.locationParent), delayedMessage.parentObject, "jpg", 2, 0);
                        return;
                    }
                }
                putToDelayedMessages(location2, delayedMessage);
                getFileLoader().uploadFile(location2, true, true, 16777216);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (delayedMessage.type == 1) {
            if (delayedMessage.videoEditedInfo == null || !delayedMessage.videoEditedInfo.needConvert()) {
                if (delayedMessage.videoEditedInfo != null) {
                    if (delayedMessage.videoEditedInfo.file != null) {
                        if (delayedMessage.sendRequest instanceof TLRPC.TL_messages_sendMedia) {
                            media3 = ((TLRPC.TL_messages_sendMedia) delayedMessage.sendRequest).media;
                        } else {
                            media3 = ((TLRPC.TL_messages_editMessage) delayedMessage.sendRequest).media;
                        }
                        media3.file = delayedMessage.videoEditedInfo.file;
                        delayedMessage.videoEditedInfo.file = null;
                    } else if (delayedMessage.videoEditedInfo.encryptedFile != null) {
                        TLRPC.TL_decryptedMessage decryptedMessage = (TLRPC.TL_decryptedMessage) delayedMessage.sendEncryptedRequest;
                        decryptedMessage.media.size = (long) ((int) delayedMessage.videoEditedInfo.estimatedSize);
                        decryptedMessage.media.key = delayedMessage.videoEditedInfo.key;
                        decryptedMessage.media.iv = delayedMessage.videoEditedInfo.iv;
                        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage, delayedMessage.obj.messageOwner, delayedMessage.encryptedChat, delayedMessage.videoEditedInfo.encryptedFile, delayedMessage.originalPath, delayedMessage.obj);
                        delayedMessage.videoEditedInfo.encryptedFile = null;
                        return;
                    }
                }
                if (delayedMessage.sendRequest != null) {
                    if (delayedMessage.sendRequest instanceof TLRPC.TL_messages_sendMedia) {
                        media2 = ((TLRPC.TL_messages_sendMedia) delayedMessage.sendRequest).media;
                    } else {
                        media2 = ((TLRPC.TL_messages_editMessage) delayedMessage.sendRequest).media;
                    }
                    if (media2.file == null) {
                        String location3 = delayedMessage.obj.messageOwner.attachPath;
                        TLRPC.Document document = delayedMessage.obj.getDocument();
                        if (location3 == null) {
                            location3 = FileLoader.getDirectory(4) + "/" + document.id + ".mp4";
                        }
                        putToDelayedMessages(location3, delayedMessage);
                        if (delayedMessage.obj.videoEditedInfo == null || !delayedMessage.obj.videoEditedInfo.needConvert()) {
                            getFileLoader().uploadFile(location3, false, false, 33554432);
                        } else {
                            getFileLoader().uploadFile(location3, false, false, document.size, 33554432, false);
                        }
                        putToUploadingMessages(delayedMessage.obj);
                    } else {
                        String location4 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                        putToDelayedMessages(location4, delayedMessage);
                        getFileLoader().uploadFile(location4, false, true, 16777216);
                        putToUploadingMessages(delayedMessage.obj);
                    }
                } else {
                    String location5 = delayedMessage.obj.messageOwner.attachPath;
                    TLRPC.Document document2 = delayedMessage.obj.getDocument();
                    if (location5 == null) {
                        location5 = FileLoader.getDirectory(4) + "/" + document2.id + ".mp4";
                    }
                    if (delayedMessage.sendEncryptedRequest == null || document2.dc_id == 0 || new File(location5).exists()) {
                        putToDelayedMessages(location5, delayedMessage);
                        if (delayedMessage.obj.videoEditedInfo == null || !delayedMessage.obj.videoEditedInfo.needConvert()) {
                            getFileLoader().uploadFile(location5, true, false, 33554432);
                        } else {
                            getFileLoader().uploadFile(location5, true, false, document2.size, 33554432, false);
                        }
                        putToUploadingMessages(delayedMessage.obj);
                    } else {
                        putToDelayedMessages(FileLoader.getAttachFileName(document2), delayedMessage);
                        getFileLoader().loadFile(document2, delayedMessage.parentObject, 2, 0);
                        return;
                    }
                }
            } else {
                String location6 = delayedMessage.obj.messageOwner.attachPath;
                TLRPC.Document document3 = delayedMessage.obj.getDocument();
                if (location6 == null) {
                    location6 = FileLoader.getDirectory(4) + "/" + document3.id + ".mp4";
                }
                putToDelayedMessages(location6, delayedMessage);
                MediaController.getInstance().scheduleVideoConvert(delayedMessage.obj);
                putToUploadingMessages(delayedMessage.obj);
            }
        } else if (delayedMessage.type == 2) {
            if (delayedMessage.httpLocation != null) {
                putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "gif", this.currentAccount);
            } else if (delayedMessage.sendRequest != null) {
                if (delayedMessage.sendRequest instanceof TLRPC.TL_messages_sendMedia) {
                    media = ((TLRPC.TL_messages_sendMedia) delayedMessage.sendRequest).media;
                } else {
                    media = ((TLRPC.TL_messages_editMessage) delayedMessage.sendRequest).media;
                }
                if (media.file == null) {
                    String location7 = delayedMessage.obj.messageOwner.attachPath;
                    putToDelayedMessages(location7, delayedMessage);
                    FileLoader fileLoader = getFileLoader();
                    if (delayedMessage.sendRequest != null) {
                        z2 = false;
                    }
                    fileLoader.uploadFile(location7, z2, false, 67108864);
                    putToUploadingMessages(delayedMessage.obj);
                } else if (media.thumb == null && delayedMessage.photoSize != null && !(delayedMessage.photoSize instanceof TLRPC.TL_photoStrippedSize)) {
                    String location8 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                    putToDelayedMessages(location8, delayedMessage);
                    getFileLoader().uploadFile(location8, false, true, 16777216);
                    putToUploadingMessages(delayedMessage.obj);
                }
            } else {
                String location9 = delayedMessage.obj.messageOwner.attachPath;
                TLRPC.Document document4 = delayedMessage.obj.getDocument();
                if (delayedMessage.sendEncryptedRequest == null || document4.dc_id == 0 || new File(location9).exists()) {
                    putToDelayedMessages(location9, delayedMessage);
                    getFileLoader().uploadFile(location9, true, false, 67108864);
                    putToUploadingMessages(delayedMessage.obj);
                } else {
                    putToDelayedMessages(FileLoader.getAttachFileName(document4), delayedMessage);
                    getFileLoader().loadFile(document4, delayedMessage.parentObject, 2, 0);
                    return;
                }
            }
        } else if (delayedMessage.type == 3) {
            String location10 = delayedMessage.obj.messageOwner.attachPath;
            putToDelayedMessages(location10, delayedMessage);
            FileLoader fileLoader2 = getFileLoader();
            if (delayedMessage.sendRequest == null) {
                z = true;
            }
            fileLoader2.uploadFile(location10, z, true, 50331648);
            putToUploadingMessages(delayedMessage.obj);
        } else if (delayedMessage.type == 4) {
            boolean add = index < 0;
            if (delayedMessage.performMediaUpload) {
                if (index < 0) {
                    index2 = delayedMessage.messageObjects.size() - 1;
                } else {
                    index2 = index;
                }
                MessageObject messageObject2 = delayedMessage.messageObjects.get(index2);
                if (messageObject2.getDocument() != null) {
                    if (delayedMessage.videoEditedInfo != null) {
                        String location11 = messageObject2.messageOwner.attachPath;
                        TLRPC.Document document5 = messageObject2.getDocument();
                        if (location11 == null) {
                            location11 = FileLoader.getDirectory(4) + "/" + document5.id + ".mp4";
                        }
                        putToDelayedMessages(location11, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject2, location11);
                        delayedMessage.extraHashMap.put(location11 + "_i", messageObject2);
                        if (!(delayedMessage.photoSize == null || delayedMessage.photoSize.location == null)) {
                            delayedMessage.extraHashMap.put(location11 + "_t", delayedMessage.photoSize);
                        }
                        MediaController.getInstance().scheduleVideoConvert(messageObject2);
                        delayedMessage.obj = messageObject2;
                        putToUploadingMessages(messageObject2);
                        MessageObject messageObject3 = messageObject2;
                    } else {
                        TLRPC.Document document6 = messageObject2.getDocument();
                        String documentLocation = messageObject2.messageOwner.attachPath;
                        if (documentLocation == null) {
                            StringBuilder sb = new StringBuilder();
                            sb.append(FileLoader.getDirectory(4));
                            sb.append("/");
                            messageObject = messageObject2;
                            sb.append(document6.id);
                            sb.append(".mp4");
                            documentLocation = sb.toString();
                        } else {
                            messageObject = messageObject2;
                        }
                        if (delayedMessage.sendRequest != null) {
                            TLRPC.InputMedia media4 = ((TLRPC.TL_messages_sendMultiMedia) delayedMessage.sendRequest).multi_media.get(index2).media;
                            if (media4.file == null) {
                                putToDelayedMessages(documentLocation, delayedMessage);
                                MessageObject messageObject4 = messageObject;
                                delayedMessage.extraHashMap.put(messageObject4, documentLocation);
                                delayedMessage.extraHashMap.put(documentLocation, media4);
                                delayedMessage.extraHashMap.put(documentLocation + "_i", messageObject4);
                                if (!(delayedMessage.photoSize == null || delayedMessage.photoSize.location == null)) {
                                    delayedMessage.extraHashMap.put(documentLocation + "_t", delayedMessage.photoSize);
                                }
                                if (messageObject4.videoEditedInfo == null || !messageObject4.videoEditedInfo.needConvert()) {
                                    getFileLoader().uploadFile(documentLocation, false, false, 33554432);
                                } else {
                                    getFileLoader().uploadFile(documentLocation, false, false, document6.size, 33554432, false);
                                }
                                putToUploadingMessages(messageObject4);
                            } else {
                                MessageObject messageObject5 = messageObject;
                                if (delayedMessage.photoSize != null) {
                                    String location12 = FileLoader.getDirectory(4) + "/" + delayedMessage.photoSize.location.volume_id + "_" + delayedMessage.photoSize.location.local_id + ".jpg";
                                    putToDelayedMessages(location12, delayedMessage);
                                    delayedMessage.extraHashMap.put(location12 + "_o", documentLocation);
                                    delayedMessage.extraHashMap.put(messageObject5, location12);
                                    delayedMessage.extraHashMap.put(location12, media4);
                                    getFileLoader().uploadFile(location12, false, true, 16777216);
                                    putToUploadingMessages(messageObject5);
                                }
                            }
                        } else {
                            MessageObject messageObject6 = messageObject;
                            putToDelayedMessages(documentLocation, delayedMessage);
                            delayedMessage.extraHashMap.put(messageObject6, documentLocation);
                            delayedMessage.extraHashMap.put(documentLocation, ((TLRPC.TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(index2));
                            delayedMessage.extraHashMap.put(documentLocation + "_i", messageObject6);
                            if (!(delayedMessage.photoSize == null || delayedMessage.photoSize.location == null)) {
                                delayedMessage.extraHashMap.put(documentLocation + "_t", delayedMessage.photoSize);
                            }
                            if (messageObject6.videoEditedInfo == null || !messageObject6.videoEditedInfo.needConvert()) {
                                getFileLoader().uploadFile(documentLocation, true, false, 33554432);
                            } else {
                                getFileLoader().uploadFile(documentLocation, true, false, document6.size, 33554432, false);
                            }
                            putToUploadingMessages(messageObject6);
                        }
                    }
                    delayedMessage.videoEditedInfo = null;
                    delayedMessage.photoSize = null;
                } else {
                    MessageObject messageObject7 = messageObject2;
                    if (delayedMessage.httpLocation != null) {
                        putToDelayedMessages(delayedMessage.httpLocation, delayedMessage);
                        delayedMessage.extraHashMap.put(messageObject7, delayedMessage.httpLocation);
                        delayedMessage.extraHashMap.put(delayedMessage.httpLocation, messageObject7);
                        ImageLoader.getInstance().loadHttpFile(delayedMessage.httpLocation, "file", this.currentAccount);
                        delayedMessage.httpLocation = null;
                    } else {
                        if (delayedMessage.sendRequest != null) {
                            inputMedia = ((TLRPC.TL_messages_sendMultiMedia) delayedMessage.sendRequest).multi_media.get(index2).media;
                        } else {
                            inputMedia = ((TLRPC.TL_messages_sendEncryptedMultiMedia) delayedMessage.sendEncryptedRequest).files.get(index2);
                        }
                        String location13 = FileLoader.getInstance(this.currentAccount).getPathToAttach(delayedMessage.photoSize).toString();
                        putToDelayedMessages(location13, delayedMessage);
                        delayedMessage.extraHashMap.put(location13, inputMedia);
                        delayedMessage.extraHashMap.put(messageObject7, location13);
                        getFileLoader().uploadFile(location13, delayedMessage.sendEncryptedRequest != null, true, 16777216);
                        putToUploadingMessages(messageObject7);
                        delayedMessage.photoSize = null;
                    }
                }
                delayedMessage.performMediaUpload = false;
            } else {
                if (!delayedMessage.messageObjects.isEmpty()) {
                    putToSendingMessages(delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1).messageOwner, delayedMessage.finalGroupMessage != 0);
                }
                int i = index;
            }
            sendReadyToSendGroup(delayedMessage, add, true);
            return;
        } else if (delayedMessage.type == 5) {
            String key = "stickerset_" + delayedMessage.obj.getId();
            TLRPC.TL_messages_getStickerSet req = new TLRPC.TL_messages_getStickerSet();
            req.stickerset = (TLRPC.InputStickerSet) delayedMessage.parentObject;
            getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda83(this, delayedMessage, key));
            putToDelayedMessages(key, delayedMessage);
        }
        int i2 = index;
    }

    /* renamed from: lambda$performSendDelayedMessage$33$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m447x4ece33ee(DelayedMessage message, String key, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda36(this, response, message, key));
    }

    /* renamed from: lambda$performSendDelayedMessage$32$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m446x698cCLASSNAMEd(TLObject response, DelayedMessage message, String key) {
        DelayedMessage delayedMessage = message;
        boolean found = false;
        if (response != null) {
            TLRPC.TL_messages_stickerSet set = (TLRPC.TL_messages_stickerSet) response;
            getMediaDataController().storeTempStickerSet(set);
            TLRPC.TL_documentAttributeSticker_layer55 attributeSticker = (TLRPC.TL_documentAttributeSticker_layer55) delayedMessage.locationParent;
            attributeSticker.stickerset = new TLRPC.TL_inputStickerSetShortName();
            attributeSticker.stickerset.short_name = set.set.short_name;
            found = true;
        }
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.remove(key);
        if (arrayList != null && !arrayList.isEmpty()) {
            if (found) {
                getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner, (ArrayList<TLRPC.User>) null, (ArrayList<TLRPC.Chat>) null, false);
            }
            getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage) delayedMessage.sendEncryptedRequest, delayedMessage.obj.messageOwner, delayedMessage.encryptedChat, (TLRPC.InputEncryptedFile) null, (String) null, delayedMessage.obj);
        }
    }

    private void uploadMultiMedia(DelayedMessage message, TLRPC.InputMedia inputMedia, TLRPC.InputEncryptedFile inputEncryptedFile, String key) {
        if (inputMedia != null) {
            TLRPC.TL_messages_sendMultiMedia multiMedia = (TLRPC.TL_messages_sendMultiMedia) message.sendRequest;
            int a = 0;
            while (true) {
                if (a >= multiMedia.multi_media.size()) {
                    break;
                } else if (multiMedia.multi_media.get(a).media == inputMedia) {
                    putToSendingMessages(message.messages.get(a), message.scheduled);
                    getNotificationCenter().postNotificationName(NotificationCenter.fileUploadProgressChanged, key, -1L, -1L, false);
                    break;
                } else {
                    a++;
                }
            }
            TLRPC.TL_messages_uploadMedia req = new TLRPC.TL_messages_uploadMedia();
            req.media = inputMedia;
            req.peer = ((TLRPC.TL_messages_sendMultiMedia) message.sendRequest).peer;
            getConnectionsManager().sendRequest(req, new SendMessagesHelper$$ExternalSyntheticLambda85(this, inputMedia, message));
        } else if (inputEncryptedFile != null) {
            TLRPC.TL_messages_sendEncryptedMultiMedia multiMedia2 = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
            int a2 = 0;
            while (true) {
                if (a2 >= multiMedia2.files.size()) {
                    break;
                } else if (multiMedia2.files.get(a2) == inputEncryptedFile) {
                    putToSendingMessages(message.messages.get(a2), message.scheduled);
                    getNotificationCenter().postNotificationName(NotificationCenter.fileUploadProgressChanged, key, -1L, -1L, false);
                    break;
                } else {
                    a2++;
                }
            }
            sendReadyToSendGroup(message, false, true);
        }
    }

    /* renamed from: lambda$uploadMultiMedia$35$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m505xbfCLASSNAMEb8(TLRPC.InputMedia inputMedia, DelayedMessage message, TLObject response, TLRPC.TL_error error) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda37(this, response, inputMedia, message));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v0, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v1, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v2, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaPhoto} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v3, resolved type: org.telegram.tgnet.TLRPC$TL_inputMediaDocument} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: lambda$uploadMultiMedia$34$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m504xda8697f7(org.telegram.tgnet.TLObject r7, org.telegram.tgnet.TLRPC.InputMedia r8, org.telegram.messenger.SendMessagesHelper.DelayedMessage r9) {
        /*
            r6 = this;
            r0 = 0
            if (r7 == 0) goto L_0x0073
            r1 = r7
            org.telegram.tgnet.TLRPC$MessageMedia r1 = (org.telegram.tgnet.TLRPC.MessageMedia) r1
            boolean r2 = r8 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedPhoto
            if (r2 == 0) goto L_0x003d
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto
            if (r2 == 0) goto L_0x003d
            org.telegram.tgnet.TLRPC$TL_inputMediaPhoto r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaPhoto
            r2.<init>()
            org.telegram.tgnet.TLRPC$TL_inputPhoto r3 = new org.telegram.tgnet.TLRPC$TL_inputPhoto
            r3.<init>()
            r2.id = r3
            org.telegram.tgnet.TLRPC$InputPhoto r3 = r2.id
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            long r4 = r4.id
            r3.id = r4
            org.telegram.tgnet.TLRPC$InputPhoto r3 = r2.id
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            long r4 = r4.access_hash
            r3.access_hash = r4
            org.telegram.tgnet.TLRPC$InputPhoto r3 = r2.id
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            byte[] r4 = r4.file_reference
            r3.file_reference = r4
            r0 = r2
            boolean r3 = org.telegram.messenger.BuildVars.DEBUG_VERSION
            if (r3 == 0) goto L_0x003c
            java.lang.String r3 = "set uploaded photo"
            org.telegram.messenger.FileLog.d(r3)
        L_0x003c:
            goto L_0x0073
        L_0x003d:
            boolean r2 = r8 instanceof org.telegram.tgnet.TLRPC.TL_inputMediaUploadedDocument
            if (r2 == 0) goto L_0x003c
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument
            if (r2 == 0) goto L_0x003c
            org.telegram.tgnet.TLRPC$TL_inputMediaDocument r2 = new org.telegram.tgnet.TLRPC$TL_inputMediaDocument
            r2.<init>()
            org.telegram.tgnet.TLRPC$TL_inputDocument r3 = new org.telegram.tgnet.TLRPC$TL_inputDocument
            r3.<init>()
            r2.id = r3
            org.telegram.tgnet.TLRPC$InputDocument r3 = r2.id
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            long r4 = r4.id
            r3.id = r4
            org.telegram.tgnet.TLRPC$InputDocument r3 = r2.id
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            long r4 = r4.access_hash
            r3.access_hash = r4
            org.telegram.tgnet.TLRPC$InputDocument r3 = r2.id
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            byte[] r4 = r4.file_reference
            r3.file_reference = r4
            r0 = r2
            boolean r3 = org.telegram.messenger.BuildVars.DEBUG_VERSION
            if (r3 == 0) goto L_0x0073
            java.lang.String r3 = "set uploaded document"
            org.telegram.messenger.FileLog.d(r3)
        L_0x0073:
            if (r0 == 0) goto L_0x00af
            int r1 = r8.ttl_seconds
            r2 = 1
            if (r1 == 0) goto L_0x0083
            int r1 = r8.ttl_seconds
            r0.ttl_seconds = r1
            int r1 = r0.flags
            r1 = r1 | r2
            r0.flags = r1
        L_0x0083:
            org.telegram.tgnet.TLObject r1 = r9.sendRequest
            org.telegram.tgnet.TLRPC$TL_messages_sendMultiMedia r1 = (org.telegram.tgnet.TLRPC.TL_messages_sendMultiMedia) r1
            r3 = 0
        L_0x0088:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r4 = r1.multi_media
            int r4 = r4.size()
            if (r3 >= r4) goto L_0x00aa
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r4 = r1.multi_media
            java.lang.Object r4 = r4.get(r3)
            org.telegram.tgnet.TLRPC$TL_inputSingleMedia r4 = (org.telegram.tgnet.TLRPC.TL_inputSingleMedia) r4
            org.telegram.tgnet.TLRPC$InputMedia r4 = r4.media
            if (r4 != r8) goto L_0x00a7
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_inputSingleMedia> r4 = r1.multi_media
            java.lang.Object r4 = r4.get(r3)
            org.telegram.tgnet.TLRPC$TL_inputSingleMedia r4 = (org.telegram.tgnet.TLRPC.TL_inputSingleMedia) r4
            r4.media = r0
            goto L_0x00aa
        L_0x00a7:
            int r3 = r3 + 1
            goto L_0x0088
        L_0x00aa:
            r3 = 0
            r6.sendReadyToSendGroup(r9, r3, r2)
            goto L_0x00b2
        L_0x00af:
            r9.markAsError()
        L_0x00b2:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.m504xda8697f7(org.telegram.tgnet.TLObject, org.telegram.tgnet.TLRPC$InputMedia, org.telegram.messenger.SendMessagesHelper$DelayedMessage):void");
    }

    private void sendReadyToSendGroup(DelayedMessage message, boolean add, boolean check) {
        DelayedMessage maxDelayedMessage;
        if (message.messageObjects.isEmpty()) {
            message.markAsError();
            return;
        }
        String key = "group_" + message.groupId;
        if (message.finalGroupMessage == message.messageObjects.get(message.messageObjects.size() - 1).getId()) {
            if (add) {
                this.delayedMessages.remove(key);
                getMessagesStorage().putMessages(message.messages, false, true, false, 0, message.scheduled);
                getMessagesController().updateInterfaceWithMessages(message.peer, message.messageObjects, message.scheduled);
                if (!message.scheduled) {
                    getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload, new Object[0]);
                }
                if (BuildVars.DEBUG_VERSION) {
                    FileLog.d("add message");
                }
            }
            if (message.sendRequest instanceof TLRPC.TL_messages_sendMultiMedia) {
                TLRPC.TL_messages_sendMultiMedia request = (TLRPC.TL_messages_sendMultiMedia) message.sendRequest;
                int a = 0;
                while (a < request.multi_media.size()) {
                    TLRPC.InputMedia inputMedia = request.multi_media.get(a).media;
                    if (!(inputMedia instanceof TLRPC.TL_inputMediaUploadedPhoto) && !(inputMedia instanceof TLRPC.TL_inputMediaUploadedDocument)) {
                        a++;
                    } else if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("multi media not ready");
                        return;
                    } else {
                        return;
                    }
                }
                if (check && (maxDelayedMessage = findMaxDelayedMessageForMessageId(message.finalGroupMessage, message.peer)) != null) {
                    maxDelayedMessage.addDelayedRequest(message.sendRequest, message.messageObjects, message.originalPaths, message.parentObjects, message, message.scheduled);
                    if (message.requests != null) {
                        maxDelayedMessage.requests.addAll(message.requests);
                    }
                    if (BuildVars.DEBUG_VERSION) {
                        FileLog.d("has maxDelayedMessage, delay");
                        return;
                    }
                    return;
                }
            } else {
                TLRPC.TL_messages_sendEncryptedMultiMedia request2 = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
                int a2 = 0;
                while (a2 < request2.files.size()) {
                    if (!(request2.files.get(a2) instanceof TLRPC.TL_inputEncryptedFile)) {
                        a2++;
                    } else {
                        return;
                    }
                }
            }
            if (message.sendRequest instanceof TLRPC.TL_messages_sendMultiMedia) {
                performSendMessageRequestMulti((TLRPC.TL_messages_sendMultiMedia) message.sendRequest, message.messageObjects, message.originalPaths, message.parentObjects, message, message.scheduled);
            } else {
                getSecretChatHelper().performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest, message);
            }
            message.sendDelayedRequests();
        } else if (add) {
            if (BuildVars.DEBUG_VERSION) {
                FileLog.d("final message not added, add");
            }
            putToDelayedMessages(key, message);
        } else if (BuildVars.DEBUG_VERSION) {
            FileLog.d("final message not added");
        }
    }

    /* renamed from: lambda$stopVideoService$36$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m502x610147a9(String path) {
        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, path, Integer.valueOf(this.currentAccount));
    }

    /* renamed from: lambda$stopVideoService$37$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m503x4642b66a(String path) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda19(this, path));
    }

    public void stopVideoService(String path) {
        getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda20(this, path));
    }

    /* access modifiers changed from: protected */
    public void putToSendingMessages(TLRPC.Message message, boolean scheduled) {
        if (Thread.currentThread() != ApplicationLoader.applicationHandler.getLooper().getThread()) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda49(this, message, scheduled));
        } else {
            putToSendingMessages(message, scheduled, true);
        }
    }

    /* renamed from: lambda$putToSendingMessages$38$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m478x5747eb0b(TLRPC.Message message, boolean scheduled) {
        putToSendingMessages(message, scheduled, true);
    }

    /* access modifiers changed from: protected */
    public void putToSendingMessages(TLRPC.Message message, boolean scheduled, boolean notify) {
        if (message != null) {
            if (message.id > 0) {
                this.editingMessages.put(message.id, message);
                return;
            }
            boolean contains = this.sendingMessages.indexOfKey(message.id) >= 0;
            removeFromUploadingMessages(message.id, scheduled);
            this.sendingMessages.put(message.id, message);
            if (!scheduled && !contains) {
                long did = MessageObject.getDialogId(message);
                LongSparseArray<Integer> longSparseArray = this.sendingMessagesIdDialogs;
                longSparseArray.put(did, Integer.valueOf(longSparseArray.get(did, 0).intValue() + 1));
                if (notify) {
                    getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
                }
            }
        }
    }

    /* access modifiers changed from: protected */
    public TLRPC.Message removeFromSendingMessages(int mid, boolean scheduled) {
        TLRPC.Message message;
        long did;
        Integer currentCount;
        if (mid > 0) {
            message = this.editingMessages.get(mid);
            if (message != null) {
                this.editingMessages.remove(mid);
            }
        } else {
            message = this.sendingMessages.get(mid);
            if (message != null) {
                this.sendingMessages.remove(mid);
                if (!scheduled && (currentCount = this.sendingMessagesIdDialogs.get(did)) != null) {
                    int count = currentCount.intValue() - 1;
                    if (count <= 0) {
                        this.sendingMessagesIdDialogs.remove(did);
                    } else {
                        this.sendingMessagesIdDialogs.put((did = MessageObject.getDialogId(message)), Integer.valueOf(count));
                    }
                    getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
                }
            }
        }
        return message;
    }

    public int getSendingMessageId(long did) {
        for (int a = 0; a < this.sendingMessages.size(); a++) {
            TLRPC.Message message = this.sendingMessages.valueAt(a);
            if (message.dialog_id == did) {
                return message.id;
            }
        }
        for (int a2 = 0; a2 < this.uploadMessages.size(); a2++) {
            TLRPC.Message message2 = this.uploadMessages.valueAt(a2);
            if (message2.dialog_id == did) {
                return message2.id;
            }
        }
        return 0;
    }

    /* access modifiers changed from: protected */
    public void putToUploadingMessages(MessageObject obj) {
        if (obj != null && obj.getId() <= 0 && !obj.scheduled) {
            TLRPC.Message message = obj.messageOwner;
            boolean contains = this.uploadMessages.indexOfKey(message.id) >= 0;
            this.uploadMessages.put(message.id, message);
            if (!contains) {
                long did = MessageObject.getDialogId(message);
                LongSparseArray<Integer> longSparseArray = this.uploadingMessagesIdDialogs;
                longSparseArray.put(did, Integer.valueOf(longSparseArray.get(did, 0).intValue() + 1));
                getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
    }

    /* access modifiers changed from: protected */
    public void removeFromUploadingMessages(int mid, boolean scheduled) {
        TLRPC.Message message;
        if (mid <= 0 && !scheduled && (message = this.uploadMessages.get(mid)) != null) {
            this.uploadMessages.remove(mid);
            long did = MessageObject.getDialogId(message);
            Integer currentCount = this.uploadingMessagesIdDialogs.get(did);
            if (currentCount != null) {
                int count = currentCount.intValue() - 1;
                if (count <= 0) {
                    this.uploadingMessagesIdDialogs.remove(did);
                } else {
                    this.uploadingMessagesIdDialogs.put(did, Integer.valueOf(count));
                }
                getNotificationCenter().postNotificationName(NotificationCenter.sendingMessagesChanged, new Object[0]);
            }
        }
    }

    public boolean isSendingMessage(int mid) {
        return this.sendingMessages.indexOfKey(mid) >= 0 || this.editingMessages.indexOfKey(mid) >= 0;
    }

    public boolean isSendingMessageIdDialog(long did) {
        return this.sendingMessagesIdDialogs.get(did, 0).intValue() > 0;
    }

    public boolean isUploadingMessageIdDialog(long did) {
        return this.uploadingMessagesIdDialogs.get(did, 0).intValue() > 0;
    }

    /* access modifiers changed from: protected */
    public void performSendMessageRequestMulti(TLRPC.TL_messages_sendMultiMedia req, ArrayList<MessageObject> msgObjs, ArrayList<String> originalPaths, ArrayList<Object> parentObjects, DelayedMessage delayedMessage, boolean scheduled) {
        int size = msgObjs.size();
        for (int a = 0; a < size; a++) {
            ArrayList<MessageObject> arrayList = msgObjs;
            putToSendingMessages(msgObjs.get(a).messageOwner, scheduled);
        }
        ArrayList<MessageObject> arrayList2 = msgObjs;
        boolean z = scheduled;
        TLRPC.TL_messages_sendMultiMedia tL_messages_sendMultiMedia = req;
        getConnectionsManager().sendRequest((TLObject) req, (RequestDelegate) new SendMessagesHelper$$ExternalSyntheticLambda81(this, parentObjects, req, msgObjs, originalPaths, delayedMessage, scheduled), (QuickAckDelegate) null, 68);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$46$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m471xCLASSNAMEdc(ArrayList parentObjects, TLRPC.TL_messages_sendMultiMedia req, ArrayList msgObjs, ArrayList originalPaths, DelayedMessage delayedMessage, boolean scheduled, TLObject response, TLRPC.TL_error error) {
        ArrayList arrayList = parentObjects;
        DelayedMessage delayedMessage2 = delayedMessage;
        TLRPC.TL_error tL_error = error;
        if (tL_error != null && FileRefController.isFileRefError(tL_error.text)) {
            if (arrayList != null) {
                ArrayList<Object> arrayList2 = new ArrayList<>(arrayList);
                getFileRefController().requestReference(arrayList2, req, msgObjs, originalPaths, arrayList2, delayedMessage2, Boolean.valueOf(scheduled));
                return;
            } else if (delayedMessage2 != null && !delayedMessage2.retriedToSend) {
                delayedMessage2.retriedToSend = true;
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda57(this, req, delayedMessage, msgObjs, scheduled));
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda51(this, error, response, msgObjs, originalPaths, scheduled, req));
    }

    /* renamed from: lambda$performSendMessageRequestMulti$39$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m464xb30048c0(TLRPC.TL_messages_sendMultiMedia req, DelayedMessage delayedMessage, ArrayList msgObjs, boolean scheduled) {
        boolean hasEmptyFile = false;
        int size = req.multi_media.size();
        for (int a = 0; a < size; a++) {
            if (delayedMessage.parentObjects.get(a) != null) {
                removeFromSendingMessages(((MessageObject) msgObjs.get(a)).getId(), scheduled);
                TLRPC.TL_inputSingleMedia request = req.multi_media.get(a);
                if (request.media instanceof TLRPC.TL_inputMediaPhoto) {
                    request.media = delayedMessage.inputMedias.get(a);
                } else if (request.media instanceof TLRPC.TL_inputMediaDocument) {
                    request.media = delayedMessage.inputMedias.get(a);
                }
                delayedMessage.videoEditedInfo = delayedMessage.videoEditedInfos.get(a);
                delayedMessage.httpLocation = delayedMessage.httpLocations.get(a);
                delayedMessage.photoSize = delayedMessage.locations.get(a);
                delayedMessage.performMediaUpload = true;
                if (request.media.file == null || delayedMessage.photoSize != null) {
                    hasEmptyFile = true;
                }
                performSendDelayedMessage(delayedMessage, a);
            }
        }
        if (!hasEmptyFile) {
            for (int i = 0; i < msgObjs.size(); i++) {
                TLRPC.Message newMsgObj = ((MessageObject) msgObjs.get(i)).messageOwner;
                getMessagesStorage().markMessageAsSendError(newMsgObj, scheduled);
                newMsgObj.send_state = 2;
                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(newMsgObj.id));
                processSentMessage(newMsgObj.id);
                removeFromSendingMessages(newMsgObj.id, scheduled);
            }
        }
    }

    /* renamed from: lambda$performSendMessageRequestMulti$45$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m470xe0e6var_b(TLRPC.TL_error error, TLObject response, ArrayList msgObjs, ArrayList originalPaths, boolean scheduled, TLRPC.TL_messages_sendMultiMedia req) {
        SendMessagesHelper sendMessagesHelper;
        int i;
        boolean oldId;
        TLRPC.Updates updates;
        TLRPC.Message newMsgObj;
        LongSparseArray<Integer> newIds;
        SparseArray<TLRPC.Message> newMessages;
        boolean isSentError;
        int i2;
        LongSparseArray<Integer> newIds2;
        SparseArray<TLRPC.Message> newMessages2;
        TLRPC.Updates updates2;
        SendMessagesHelper sendMessagesHelper2;
        TLRPC.MessageReplies messageReplies;
        SendMessagesHelper sendMessagesHelper3 = this;
        ArrayList arrayList = msgObjs;
        boolean z = scheduled;
        boolean isSentError2 = false;
        if (error == null) {
            SparseArray<TLRPC.Message> newMessages3 = new SparseArray<>();
            LongSparseArray<Integer> newIds3 = new LongSparseArray<>();
            TLRPC.Updates updates3 = (TLRPC.Updates) response;
            ArrayList<TLRPC.Update> updatesArr = ((TLRPC.Updates) response).updates;
            int a = 0;
            LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies = null;
            while (a < updatesArr.size()) {
                TLRPC.Update update = updatesArr.get(a);
                if (update instanceof TLRPC.TL_updateMessageID) {
                    TLRPC.TL_updateMessageID updateMessageID = (TLRPC.TL_updateMessageID) update;
                    newIds3.put(updateMessageID.random_id, Integer.valueOf(updateMessageID.id));
                    updatesArr.remove(a);
                    a--;
                    sendMessagesHelper2 = this;
                    updates2 = updates3;
                } else if (update instanceof TLRPC.TL_updateNewMessage) {
                    TLRPC.TL_updateNewMessage newMessage = (TLRPC.TL_updateNewMessage) update;
                    newMessages3.put(newMessage.message.id, newMessage.message);
                    sendMessagesHelper2 = this;
                    Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda62(sendMessagesHelper2, newMessage));
                    updatesArr.remove(a);
                    a--;
                    updates2 = updates3;
                } else {
                    sendMessagesHelper2 = this;
                    if (update instanceof TLRPC.TL_updateNewChannelMessage) {
                        TLRPC.TL_updateNewChannelMessage newMessage2 = (TLRPC.TL_updateNewChannelMessage) update;
                        long channelId = MessagesController.getUpdateChannelId(newMessage2);
                        updates2 = updates3;
                        TLRPC.Chat chat = getMessagesController().getChat(Long.valueOf(channelId));
                        if (chat == null || chat.megagroup) {
                            if (newMessage2.message.reply_to == null) {
                                long j = channelId;
                            } else if (!(newMessage2.message.reply_to.reply_to_top_id == 0 && newMessage2.message.reply_to.reply_to_msg_id == 0)) {
                                if (channelReplies == null) {
                                    channelReplies = new LongSparseArray<>();
                                }
                                long j2 = channelId;
                                long did = MessageObject.getDialogId(newMessage2.message);
                                SparseArray<TLRPC.MessageReplies> replies = channelReplies.get(did);
                                if (replies == null) {
                                    replies = new SparseArray<>();
                                    channelReplies.put(did, replies);
                                }
                                LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies2 = channelReplies;
                                int id = newMessage2.message.reply_to.reply_to_top_id != 0 ? newMessage2.message.reply_to.reply_to_top_id : newMessage2.message.reply_to.reply_to_msg_id;
                                TLRPC.MessageReplies messageReplies2 = replies.get(id);
                                if (messageReplies2 == null) {
                                    TLRPC.Chat chat2 = chat;
                                    messageReplies = new TLRPC.TL_messageReplies();
                                    replies.put(id, messageReplies);
                                } else {
                                    messageReplies = messageReplies2;
                                }
                                int i3 = id;
                                if (newMessage2.message.from_id != null) {
                                    long j3 = did;
                                    messageReplies.recent_repliers.add(0, newMessage2.message.from_id);
                                }
                                messageReplies.replies++;
                                channelReplies = channelReplies2;
                            }
                            newMessages3.put(newMessage2.message.id, newMessage2.message);
                            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda60(sendMessagesHelper2, newMessage2));
                            updatesArr.remove(a);
                            a--;
                        }
                        TLRPC.Chat chat3 = chat;
                        long j4 = channelId;
                        newMessages3.put(newMessage2.message.id, newMessage2.message);
                        Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda60(sendMessagesHelper2, newMessage2));
                        updatesArr.remove(a);
                        a--;
                    } else {
                        updates2 = updates3;
                        if (update instanceof TLRPC.TL_updateNewScheduledMessage) {
                            TLRPC.TL_updateNewScheduledMessage newMessage3 = (TLRPC.TL_updateNewScheduledMessage) update;
                            newMessages3.put(newMessage3.message.id, newMessage3.message);
                            updatesArr.remove(a);
                            a--;
                        }
                    }
                }
                a++;
                sendMessagesHelper3 = sendMessagesHelper2;
                updates3 = updates2;
            }
            TLRPC.Updates updates4 = updates3;
            sendMessagesHelper = sendMessagesHelper3;
            if (channelReplies != null) {
                getMessagesStorage().putChannelViews((LongSparseArray<SparseIntArray>) null, (LongSparseArray<SparseIntArray>) null, channelReplies, true);
                getNotificationCenter().postNotificationName(NotificationCenter.didUpdateMessagesViews, null, null, channelReplies, true);
            }
            int i4 = 0;
            while (true) {
                if (i4 >= msgObjs.size()) {
                    ArrayList<TLRPC.Update> arrayList2 = updatesArr;
                    SparseArray<TLRPC.Message> sparseArray = newMessages3;
                    LongSparseArray<Integer> longSparseArray = newIds3;
                    int i5 = i4;
                    boolean isSentError3 = isSentError2;
                    updates = updates4;
                    i = 1;
                    oldId = isSentError3;
                    break;
                }
                MessageObject msgObj = (MessageObject) arrayList.get(i4);
                String originalPath = (String) originalPaths.get(i4);
                TLRPC.Message newMsgObj2 = msgObj.messageOwner;
                int oldId2 = newMsgObj2.id;
                ArrayList<TLRPC.Message> sentMessages = new ArrayList<>();
                String attachPath = newMsgObj2.attachPath;
                Integer id2 = newIds3.get(newMsgObj2.random_id);
                if (id2 == null) {
                    ArrayList<TLRPC.Update> arrayList3 = updatesArr;
                    SparseArray<TLRPC.Message> sparseArray2 = newMessages3;
                    LongSparseArray<Integer> longSparseArray2 = newIds3;
                    int i6 = i4;
                    Integer num = id2;
                    boolean z2 = isSentError2;
                    String str = attachPath;
                    updates = updates4;
                    ArrayList<TLRPC.Message> arrayList4 = sentMessages;
                    i = 1;
                    int i7 = oldId2;
                    TLRPC.Message message = newMsgObj2;
                    MessageObject messageObject = msgObj;
                    oldId = true;
                    break;
                }
                TLRPC.Message message2 = newMessages3.get(id2.intValue());
                if (message2 == null) {
                    ArrayList<TLRPC.Update> arrayList5 = updatesArr;
                    SparseArray<TLRPC.Message> sparseArray3 = newMessages3;
                    LongSparseArray<Integer> longSparseArray3 = newIds3;
                    int i8 = i4;
                    Integer num2 = id2;
                    boolean z3 = isSentError2;
                    String str2 = attachPath;
                    updates = updates4;
                    ArrayList<TLRPC.Message> arrayList6 = sentMessages;
                    i = 1;
                    int i9 = oldId2;
                    TLRPC.Message message3 = newMsgObj2;
                    MessageObject messageObject2 = msgObj;
                    oldId = true;
                    break;
                }
                MessageObject.getDialogId(message2);
                Integer num3 = id2;
                ArrayList<TLRPC.Message> sentMessages2 = sentMessages;
                sentMessages2.add(message2);
                int oldId3 = oldId2;
                if ((message2.flags & 33554432) != 0) {
                    newMsgObj = newMsgObj2;
                    msgObj.messageOwner.ttl_period = message2.ttl_period;
                    msgObj.messageOwner.flags |= 33554432;
                } else {
                    newMsgObj = newMsgObj2;
                }
                String str3 = attachPath;
                TLRPC.Message newMsgObj3 = newMsgObj;
                LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies3 = channelReplies;
                ArrayList<TLRPC.Update> updatesArr2 = updatesArr;
                TLRPC.Updates updates5 = updates4;
                updateMediaPaths(msgObj, message2, message2.id, originalPath, false);
                int existFlags = msgObj.getMediaExistanceFlags();
                newMsgObj3.id = message2.id;
                long grouped_id = message2.grouped_id;
                if (!z) {
                    Integer value = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(message2.dialog_id));
                    if (value == null) {
                        newMessages = newMessages3;
                        newIds = newIds3;
                        value = Integer.valueOf(getMessagesStorage().getDialogReadMax(message2.out, message2.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(message2.dialog_id), value);
                    } else {
                        newMessages = newMessages3;
                        newIds = newIds3;
                    }
                    message2.unread = value.intValue() < message2.id;
                } else {
                    newMessages = newMessages3;
                    newIds = newIds3;
                }
                if (!isSentError2) {
                    getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                    newMsgObj3.send_state = 0;
                    getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId3), Integer.valueOf(newMsgObj3.id), newMsgObj3, Long.valueOf(newMsgObj3.dialog_id), Long.valueOf(grouped_id), Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
                    ArrayList<TLRPC.Message> arrayList7 = sentMessages2;
                    DispatchQueue storageQueue = getMessagesStorage().getStorageQueue();
                    ArrayList<TLRPC.Message> arrayList8 = sentMessages2;
                    newMessages2 = newMessages;
                    newIds2 = newIds;
                    SendMessagesHelper$$ExternalSyntheticLambda45 sendMessagesHelper$$ExternalSyntheticLambda45 = r0;
                    i2 = i4;
                    isSentError = isSentError2;
                    SendMessagesHelper$$ExternalSyntheticLambda45 sendMessagesHelper$$ExternalSyntheticLambda452 = new SendMessagesHelper$$ExternalSyntheticLambda45(this, newMsgObj3, oldId3, scheduled, arrayList7, grouped_id, existFlags);
                    storageQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda45);
                } else {
                    ArrayList<TLRPC.Message> arrayList9 = sentMessages2;
                    isSentError = isSentError2;
                    newMessages2 = newMessages;
                    newIds2 = newIds;
                    i2 = i4;
                }
                i4 = i2 + 1;
                TLRPC.TL_error tL_error = error;
                updates4 = updates5;
                newMessages3 = newMessages2;
                updatesArr = updatesArr2;
                channelReplies = channelReplies3;
                newIds3 = newIds2;
                isSentError2 = isSentError;
                arrayList = msgObjs;
            }
            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda65(sendMessagesHelper, updates));
            TLRPC.TL_error tL_error2 = error;
            TLRPC.TL_messages_sendMultiMedia tL_messages_sendMultiMedia = req;
        } else {
            sendMessagesHelper = sendMessagesHelper3;
            i = 1;
            AlertsCreator.processError(sendMessagesHelper.currentAccount, error, (BaseFragment) null, req, new Object[0]);
            oldId = true;
        }
        if (oldId) {
            for (int i10 = 0; i10 < msgObjs.size(); i10++) {
                TLRPC.Message newMsgObj4 = ((MessageObject) msgObjs.get(i10)).messageOwner;
                getMessagesStorage().markMessageAsSendError(newMsgObj4, z);
                newMsgObj4.send_state = 2;
                NotificationCenter notificationCenter = getNotificationCenter();
                int i11 = NotificationCenter.messageSendError;
                Object[] objArr = new Object[i];
                objArr[0] = Integer.valueOf(newMsgObj4.id);
                notificationCenter.postNotificationName(i11, objArr);
                sendMessagesHelper.processSentMessage(newMsgObj4.id);
                sendMessagesHelper.removeFromSendingMessages(newMsgObj4.id, z);
            }
            ArrayList arrayList10 = msgObjs;
            return;
        }
        ArrayList arrayList11 = msgObjs;
    }

    /* renamed from: lambda$performSendMessageRequestMulti$40$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m465x669fcd56(TLRPC.TL_updateNewMessage newMessage) {
        getMessagesController().processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$41$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m466x4be13CLASSNAME(TLRPC.TL_updateNewChannelMessage newMessage) {
        getMessagesController().processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.peer_id.channel_id);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$43$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m468x16641999(TLRPC.Message newMsgObj, int oldId, boolean scheduled, ArrayList sentMessages, long grouped_id, int existFlags) {
        TLRPC.Message message = newMsgObj;
        getMessagesStorage().updateMessageStateAndId(message.random_id, MessageObject.getPeerId(message.peer_id), Integer.valueOf(oldId), message.id, 0, false, scheduled ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, scheduled);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda42(this, newMsgObj, oldId, grouped_id, existFlags, scheduled));
    }

    /* renamed from: lambda$performSendMessageRequestMulti$42$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m467x3122aad8(TLRPC.Message newMsgObj, int oldId, long grouped_id, int existFlags, boolean scheduled) {
        getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(newMsgObj.id), newMsgObj, Long.valueOf(newMsgObj.dialog_id), Long.valueOf(grouped_id), Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
        processSentMessage(oldId);
        removeFromSendingMessages(oldId, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequestMulti$44$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m469xfba5885a(TLRPC.Updates updates) {
        getMessagesController().processUpdates(updates, false);
    }

    /* access modifiers changed from: private */
    public void performSendMessageRequest(TLObject req, MessageObject msgObj, String originalPath, DelayedMessage delayedMessage, Object parentObject, HashMap<String, String> params, boolean scheduled) {
        performSendMessageRequest(req, msgObj, originalPath, (DelayedMessage) null, false, delayedMessage, parentObject, params, scheduled);
    }

    private DelayedMessage findMaxDelayedMessageForMessageId(int messageId, long dialogId) {
        DelayedMessage maxDelayedMessage = null;
        int maxDalyedMessageId = Integer.MIN_VALUE;
        for (Map.Entry<String, ArrayList<DelayedMessage>> entry : this.delayedMessages.entrySet()) {
            ArrayList<DelayedMessage> messages = entry.getValue();
            int size = messages.size();
            for (int a = 0; a < size; a++) {
                DelayedMessage delayedMessage = messages.get(a);
                if ((delayedMessage.type == 4 || delayedMessage.type == 0) && delayedMessage.peer == dialogId) {
                    int mid = 0;
                    if (delayedMessage.obj != null) {
                        mid = delayedMessage.obj.getId();
                    } else if (delayedMessage.messageObjects != null && !delayedMessage.messageObjects.isEmpty()) {
                        mid = delayedMessage.messageObjects.get(delayedMessage.messageObjects.size() - 1).getId();
                    }
                    if (mid != 0 && mid > messageId && maxDelayedMessage == null && maxDalyedMessageId < mid) {
                        maxDelayedMessage = delayedMessage;
                        maxDalyedMessageId = mid;
                    }
                }
            }
        }
        return maxDelayedMessage;
    }

    /* access modifiers changed from: protected */
    public void performSendMessageRequest(TLObject req, MessageObject msgObj, String originalPath, DelayedMessage parentMessage, boolean check, DelayedMessage delayedMessage, Object parentObject, HashMap<String, String> hashMap, boolean scheduled) {
        DelayedMessage maxDelayedMessage;
        TLObject tLObject = req;
        DelayedMessage delayedMessage2 = parentMessage;
        if ((tLObject instanceof TLRPC.TL_messages_editMessage) || !check || (maxDelayedMessage = findMaxDelayedMessageForMessageId(msgObj.getId(), msgObj.getDialogId())) == null) {
            TLRPC.Message newMsgObj = msgObj.messageOwner;
            boolean z = scheduled;
            putToSendingMessages(newMsgObj, z);
            SendMessagesHelper$$ExternalSyntheticLambda84 sendMessagesHelper$$ExternalSyntheticLambda84 = r0;
            ConnectionsManager connectionsManager = getConnectionsManager();
            SendMessagesHelper$$ExternalSyntheticLambda84 sendMessagesHelper$$ExternalSyntheticLambda842 = new SendMessagesHelper$$ExternalSyntheticLambda84(this, req, parentObject, msgObj, originalPath, parentMessage, check, delayedMessage, z, newMsgObj);
            TLRPC.Message newMsgObj2 = newMsgObj;
            newMsgObj2.reqId = connectionsManager.sendRequest(tLObject, (RequestDelegate) sendMessagesHelper$$ExternalSyntheticLambda84, (QuickAckDelegate) new SendMessagesHelper$$ExternalSyntheticLambda74(this, newMsgObj2), (tLObject instanceof TLRPC.TL_messages_sendMessage ? 128 : 0) | 68);
            if (delayedMessage2 != null) {
                parentMessage.sendDelayedRequests();
                return;
            }
            return;
        }
        maxDelayedMessage.addDelayedRequest(req, msgObj, originalPath, parentObject, delayedMessage, delayedMessage2 != null ? delayedMessage2.scheduled : false);
        if (delayedMessage2 != null && delayedMessage2.requests != null) {
            maxDelayedMessage.requests.addAll(delayedMessage2.requests);
        }
    }

    /* renamed from: lambda$performSendMessageRequest$60$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m461xCLASSNAMEba465(TLObject req, Object parentObject, MessageObject msgObj, String originalPath, DelayedMessage parentMessage, boolean check, DelayedMessage delayedMessage, boolean scheduled, TLRPC.Message newMsgObj, TLObject response, TLRPC.TL_error error) {
        TLObject tLObject = req;
        Object obj = parentObject;
        TLRPC.TL_error tL_error = error;
        if (tL_error != null && (((tLObject instanceof TLRPC.TL_messages_sendMedia) || (tLObject instanceof TLRPC.TL_messages_editMessage)) && FileRefController.isFileRefError(tL_error.text))) {
            if (obj != null) {
                getFileRefController().requestReference(parentObject, tLObject, msgObj, originalPath, parentMessage, Boolean.valueOf(check), delayedMessage, Boolean.valueOf(scheduled));
                return;
            } else if (delayedMessage != null) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda50(this, newMsgObj, scheduled, req, delayedMessage));
                return;
            }
        }
        if (tLObject instanceof TLRPC.TL_messages_editMessage) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda53(this, error, newMsgObj, response, msgObj, originalPath, scheduled, req));
        } else {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda68(this, scheduled, error, newMsgObj, response, msgObj, originalPath, req));
        }
    }

    /* renamed from: lambda$performSendMessageRequest$47$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m448x836cd8ee(TLRPC.Message newMsgObj, boolean scheduled, TLObject req, DelayedMessage delayedMessage) {
        removeFromSendingMessages(newMsgObj.id, scheduled);
        if (req instanceof TLRPC.TL_messages_sendMedia) {
            TLRPC.TL_messages_sendMedia request = (TLRPC.TL_messages_sendMedia) req;
            if (request.media instanceof TLRPC.TL_inputMediaPhoto) {
                request.media = delayedMessage.inputUploadMedia;
            } else if (request.media instanceof TLRPC.TL_inputMediaDocument) {
                request.media = delayedMessage.inputUploadMedia;
            }
        } else if (req instanceof TLRPC.TL_messages_editMessage) {
            TLRPC.TL_messages_editMessage request2 = (TLRPC.TL_messages_editMessage) req;
            if (request2.media instanceof TLRPC.TL_inputMediaPhoto) {
                request2.media = delayedMessage.inputUploadMedia;
            } else if (request2.media instanceof TLRPC.TL_inputMediaDocument) {
                request2.media = delayedMessage.inputUploadMedia;
            }
        }
        delayedMessage.performMediaUpload = true;
        performSendDelayedMessage(delayedMessage);
    }

    /* renamed from: lambda$performSendMessageRequest$50$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m451x18f3b06(TLRPC.TL_error error, TLRPC.Message newMsgObj, TLObject response, MessageObject msgObj, String originalPath, boolean scheduled, TLObject req) {
        TLRPC.Message message;
        TLRPC.Message message2 = newMsgObj;
        boolean z = scheduled;
        if (error == null) {
            String attachPath = message2.attachPath;
            TLRPC.Updates updates = (TLRPC.Updates) response;
            ArrayList<TLRPC.Update> updatesArr = ((TLRPC.Updates) response).updates;
            int a = 0;
            while (true) {
                if (a >= updatesArr.size()) {
                    message = null;
                    break;
                }
                TLRPC.Update update = updatesArr.get(a);
                if (update instanceof TLRPC.TL_updateEditMessage) {
                    message = ((TLRPC.TL_updateEditMessage) update).message;
                    break;
                } else if (update instanceof TLRPC.TL_updateEditChannelMessage) {
                    message = ((TLRPC.TL_updateEditChannelMessage) update).message;
                    break;
                } else if (update instanceof TLRPC.TL_updateNewScheduledMessage) {
                    message = ((TLRPC.TL_updateNewScheduledMessage) update).message;
                    break;
                } else {
                    a++;
                }
            }
            if (message != null) {
                ImageLoader.saveMessageThumbs(message);
                updateMediaPaths(msgObj, message, message.id, originalPath, false);
            }
            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda67(this, updates, message2, z));
            if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
                stopVideoService(attachPath);
            }
            MessageObject messageObject = msgObj;
            TLObject tLObject = req;
            return;
        }
        AlertsCreator.processError(this.currentAccount, error, (BaseFragment) null, req, new Object[0]);
        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
            stopVideoService(message2.attachPath);
        }
        removeFromSendingMessages(message2.id, z);
        revertEditingMessageObject(msgObj);
    }

    /* renamed from: lambda$performSendMessageRequest$49$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m450x4defb670(TLRPC.Updates updates, TLRPC.Message newMsgObj, boolean scheduled) {
        getMessagesController().processUpdates(updates, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda48(this, newMsgObj, scheduled));
    }

    /* renamed from: lambda$performSendMessageRequest$48$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m449x68ae47af(TLRPC.Message newMsgObj, boolean scheduled) {
        processSentMessage(newMsgObj.id);
        removeFromSendingMessages(newMsgObj.id, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequest$59$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m460x10dc1fcf(boolean scheduled, TLRPC.TL_error error, TLRPC.Message newMsgObj, TLObject response, MessageObject msgObj, String originalPath, TLObject req) {
        boolean isSentError;
        boolean currentSchedule;
        String attachPath;
        int oldId;
        int existFlags;
        ArrayList<TLRPC.Message> sentMessages;
        LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies;
        TLRPC.Message message;
        ArrayList<TLRPC.Update> updatesArr;
        int existFlags2;
        SparseArray<TLRPC.MessageReplies> replies;
        TLRPC.MessageReplies messageReplies;
        boolean z = scheduled;
        TLRPC.TL_error tL_error = error;
        TLRPC.Message message2 = newMsgObj;
        TLObject tLObject = response;
        MessageObject messageObject = msgObj;
        boolean currentSchedule2 = scheduled;
        boolean isSentError2 = false;
        if (tL_error == null) {
            int oldId2 = message2.id;
            ArrayList<TLRPC.Message> sentMessages2 = new ArrayList<>();
            String attachPath2 = message2.attachPath;
            boolean scheduledOnline = message2.date == NUM;
            if (tLObject instanceof TLRPC.TL_updateShortSentMessage) {
                TLRPC.TL_updateShortSentMessage res = (TLRPC.TL_updateShortSentMessage) tLObject;
                attachPath = attachPath2;
                sentMessages = sentMessages2;
                oldId = oldId2;
                TLRPC.TL_updateShortSentMessage res2 = res;
                updateMediaPaths(msgObj, (TLRPC.Message) null, res.id, (String) null, false);
                int existFlags3 = msgObj.getMediaExistanceFlags();
                int i = res2.id;
                message2.id = i;
                message2.local_id = i;
                message2.date = res2.date;
                message2.entities = res2.entities;
                message2.out = res2.out;
                if ((res2.flags & 33554432) != 0) {
                    message2.ttl_period = res2.ttl_period;
                    message2.flags |= 33554432;
                }
                if (res2.media != null) {
                    message2.media = res2.media;
                    message2.flags |= 512;
                    ImageLoader.saveMessageThumbs(newMsgObj);
                }
                if (((res2.media instanceof TLRPC.TL_messageMediaGame) || (res2.media instanceof TLRPC.TL_messageMediaInvoice)) && !TextUtils.isEmpty(res2.message)) {
                    message2.message = res2.message;
                }
                if (!message2.entities.isEmpty()) {
                    message2.flags |= 128;
                }
                if (0 == 0) {
                    Integer value = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(message2.dialog_id));
                    if (value == null) {
                        value = Integer.valueOf(getMessagesStorage().getDialogReadMax(message2.out, message2.dialog_id));
                        getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(message2.dialog_id), value);
                    }
                    message2.unread = value.intValue() < message2.id;
                }
                Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda63(this, res2));
                sentMessages.add(message2);
                existFlags = existFlags3;
                currentSchedule = false;
                isSentError = false;
            } else {
                attachPath = attachPath2;
                sentMessages = sentMessages2;
                oldId = oldId2;
                if (tLObject instanceof TLRPC.Updates) {
                    TLRPC.Updates updates = (TLRPC.Updates) tLObject;
                    ArrayList<TLRPC.Update> updatesArr2 = ((TLRPC.Updates) tLObject).updates;
                    TLRPC.Message message3 = null;
                    LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies2 = null;
                    int a = 0;
                    while (true) {
                        if (a >= updatesArr2.size()) {
                            currentSchedule = currentSchedule2;
                            isSentError = isSentError2;
                            channelReplies = null;
                            message = message3;
                            break;
                        }
                        TLRPC.Update update = updatesArr2.get(a);
                        if (update instanceof TLRPC.TL_updateNewMessage) {
                            TLRPC.TL_updateNewMessage newMessage = (TLRPC.TL_updateNewMessage) update;
                            TLRPC.Message message4 = message3;
                            TLRPC.Message message5 = newMessage.message;
                            sentMessages.add(message5);
                            currentSchedule = currentSchedule2;
                            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda61(this, newMessage));
                            updatesArr2.remove(a);
                            isSentError = isSentError2;
                            message = message5;
                            channelReplies = null;
                            break;
                        }
                        TLRPC.Message message6 = message3;
                        currentSchedule = currentSchedule2;
                        if (update instanceof TLRPC.TL_updateNewChannelMessage) {
                            TLRPC.TL_updateNewChannelMessage newMessage2 = (TLRPC.TL_updateNewChannelMessage) update;
                            TLRPC.Chat chat = getMessagesController().getChat(Long.valueOf(MessagesController.getUpdateChannelId(newMessage2)));
                            if (chat == null || chat.megagroup) {
                                if (newMessage2.message.reply_to == null) {
                                    isSentError = isSentError2;
                                } else if (!(newMessage2.message.reply_to.reply_to_top_id == 0 && newMessage2.message.reply_to.reply_to_msg_id == 0)) {
                                    if (0 == 0) {
                                        channelReplies2 = new LongSparseArray<>();
                                    }
                                    isSentError = isSentError2;
                                    long did = MessageObject.getDialogId(newMessage2.message);
                                    SparseArray<TLRPC.MessageReplies> replies2 = channelReplies2.get(did);
                                    if (replies2 == null) {
                                        TLRPC.Chat chat2 = chat;
                                        replies = new SparseArray<>();
                                        channelReplies2.put(did, replies);
                                    } else {
                                        replies = replies2;
                                    }
                                    LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies3 = channelReplies2;
                                    int id = newMessage2.message.reply_to.reply_to_top_id != 0 ? newMessage2.message.reply_to.reply_to_top_id : newMessage2.message.reply_to.reply_to_msg_id;
                                    TLRPC.MessageReplies messageReplies2 = replies.get(id);
                                    if (messageReplies2 == null) {
                                        long j = did;
                                        messageReplies = new TLRPC.TL_messageReplies();
                                        replies.put(id, messageReplies);
                                    } else {
                                        messageReplies = messageReplies2;
                                    }
                                    if (newMessage2.message.from_id != null) {
                                        SparseArray<TLRPC.MessageReplies> sparseArray = replies;
                                        int i2 = id;
                                        messageReplies.recent_repliers.add(0, newMessage2.message.from_id);
                                    } else {
                                        int i3 = id;
                                    }
                                    messageReplies.replies++;
                                    channelReplies2 = channelReplies3;
                                }
                                TLRPC.Message message7 = newMessage2.message;
                                message = message7;
                                sentMessages.add(message7);
                                Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda59(this, newMessage2));
                                updatesArr2.remove(a);
                                channelReplies = channelReplies2;
                            }
                            TLRPC.Chat chat3 = chat;
                            isSentError = isSentError2;
                            TLRPC.Message message72 = newMessage2.message;
                            message = message72;
                            sentMessages.add(message72);
                            Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda59(this, newMessage2));
                            updatesArr2.remove(a);
                            channelReplies = channelReplies2;
                        } else {
                            isSentError = isSentError2;
                            if (update instanceof TLRPC.TL_updateNewScheduledMessage) {
                                TLRPC.Message message8 = ((TLRPC.TL_updateNewScheduledMessage) update).message;
                                message = message8;
                                sentMessages.add(message8);
                                updatesArr2.remove(a);
                                channelReplies = null;
                                break;
                            }
                            a++;
                            message3 = message6;
                            currentSchedule2 = currentSchedule;
                            isSentError2 = isSentError;
                        }
                    }
                    if (channelReplies != null) {
                        getMessagesStorage().putChannelViews((LongSparseArray<SparseIntArray>) null, (LongSparseArray<SparseIntArray>) null, channelReplies, true);
                        updatesArr = updatesArr2;
                        getNotificationCenter().postNotificationName(NotificationCenter.didUpdateMessagesViews, null, null, channelReplies, true);
                    } else {
                        updatesArr = updatesArr2;
                    }
                    if (message != null) {
                        MessageObject.getDialogId(message);
                        if (scheduledOnline && message.date != NUM) {
                            currentSchedule = false;
                        }
                        ImageLoader.saveMessageThumbs(message);
                        if (!currentSchedule) {
                            Integer value2 = getMessagesController().dialogs_read_outbox_max.get(Long.valueOf(message.dialog_id));
                            if (value2 == null) {
                                value2 = Integer.valueOf(getMessagesStorage().getDialogReadMax(message.out, message.dialog_id));
                                getMessagesController().dialogs_read_outbox_max.put(Long.valueOf(message.dialog_id), value2);
                            }
                            message.unread = value2.intValue() < message.id;
                        }
                        messageObject.messageOwner.post_author = message.post_author;
                        if ((message.flags & 33554432) != 0) {
                            messageObject.messageOwner.ttl_period = message.ttl_period;
                            messageObject.messageOwner.flags |= 33554432;
                        }
                        messageObject.messageOwner.entities = message.entities;
                        ArrayList<TLRPC.Update> arrayList = updatesArr;
                        updateMediaPaths(msgObj, message, message.id, originalPath, false);
                        existFlags2 = msgObj.getMediaExistanceFlags();
                        message2.id = message.id;
                    } else {
                        isSentError = true;
                        existFlags2 = 0;
                    }
                    Utilities.stageQueue.postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda64(this, updates));
                    existFlags = existFlags2;
                } else {
                    currentSchedule = currentSchedule2;
                    isSentError = false;
                    existFlags = 0;
                }
            }
            if (MessageObject.isLiveLocationMessage(newMsgObj) && message2.via_bot_id == 0 && TextUtils.isEmpty(message2.via_bot_name)) {
                getLocationController().addSharingLocation(message2);
            }
            if (!isSentError) {
                getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), 1, 1);
                message2.send_state = 0;
                if (!z || currentSchedule) {
                    getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(message2.id), message2, Long.valueOf(message2.dialog_id), 0L, Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
                    getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda43(this, newMsgObj, oldId, scheduled, sentMessages, existFlags, attachPath));
                } else {
                    ArrayList<Integer> messageIds = new ArrayList<>();
                    messageIds.add(Integer.valueOf(oldId));
                    getMessagesController().deleteMessages(messageIds, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, message2.dialog_id, false, true);
                    SendMessagesHelper$$ExternalSyntheticLambda28 sendMessagesHelper$$ExternalSyntheticLambda28 = r0;
                    DispatchQueue storageQueue = getMessagesStorage().getStorageQueue();
                    ArrayList<Integer> arrayList2 = messageIds;
                    SendMessagesHelper$$ExternalSyntheticLambda28 sendMessagesHelper$$ExternalSyntheticLambda282 = new SendMessagesHelper$$ExternalSyntheticLambda28(this, sentMessages, msgObj, newMsgObj, oldId, scheduled, attachPath);
                    storageQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda28);
                }
            }
            TLObject tLObject2 = req;
            boolean z2 = currentSchedule;
        } else {
            AlertsCreator.processError(this.currentAccount, tL_error, (BaseFragment) null, req, new Object[0]);
            isSentError = true;
        }
        if (isSentError) {
            boolean z3 = scheduled;
            getMessagesStorage().markMessageAsSendError(message2, z3);
            message2.send_state = 2;
            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, Integer.valueOf(message2.id));
            processSentMessage(message2.id);
            if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
                stopVideoService(message2.attachPath);
            }
            removeFromSendingMessages(message2.id, z3);
            return;
        }
        boolean z4 = scheduled;
    }

    /* renamed from: lambda$performSendMessageRequest$51$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m452xe6d0a9c7(TLRPC.TL_updateShortSentMessage res) {
        getMessagesController().processNewDifferenceParams(-1, res.pts, res.date, res.pts_count);
    }

    /* renamed from: lambda$performSendMessageRequest$52$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m453xcCLASSNAME(TLRPC.TL_updateNewMessage newMessage) {
        getMessagesController().processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count);
    }

    /* renamed from: lambda$performSendMessageRequest$53$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m454xb1538749(TLRPC.TL_updateNewChannelMessage newMessage) {
        getMessagesController().processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.peer_id.channel_id);
    }

    /* renamed from: lambda$performSendMessageRequest$54$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m455x9694var_a(TLRPC.Updates updates) {
        getMessagesController().processUpdates(updates, false);
    }

    /* renamed from: lambda$performSendMessageRequest$56$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m457x6117d38c(ArrayList sentMessages, MessageObject msgObj, TLRPC.Message newMsgObj, int oldId, boolean scheduled, String attachPath) {
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, false);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda31(this, msgObj, newMsgObj, oldId, scheduled));
        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
            stopVideoService(attachPath);
            return;
        }
        String str = attachPath;
    }

    /* renamed from: lambda$performSendMessageRequest$55$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m456x7bd664cb(MessageObject msgObj, TLRPC.Message newMsgObj, int oldId, boolean scheduled) {
        ArrayList<MessageObject> messageObjects = new ArrayList<>();
        messageObjects.add(new MessageObject(msgObj.currentAccount, msgObj.messageOwner, true, true));
        getMessagesController().updateInterfaceWithMessages(newMsgObj.dialog_id, messageObjects, false);
        getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
        processSentMessage(oldId);
        removeFromSendingMessages(oldId, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequest$58$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m459x2b9ab10e(TLRPC.Message newMsgObj, int oldId, boolean scheduled, ArrayList sentMessages, int existFlags, String attachPath) {
        TLRPC.Message message = newMsgObj;
        getMessagesStorage().updateMessageStateAndId(message.random_id, MessageObject.getPeerId(message.peer_id), Integer.valueOf(oldId), message.id, 0, false, scheduled ? 1 : 0);
        getMessagesStorage().putMessages((ArrayList<TLRPC.Message>) sentMessages, true, false, false, 0, scheduled);
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda41(this, newMsgObj, oldId, existFlags, scheduled));
        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
            stopVideoService(attachPath);
            return;
        }
        String str = attachPath;
    }

    /* renamed from: lambda$performSendMessageRequest$57$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m458x4659424d(TLRPC.Message newMsgObj, int oldId, int existFlags, boolean scheduled) {
        getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, Integer.valueOf(oldId), Integer.valueOf(newMsgObj.id), newMsgObj, Long.valueOf(newMsgObj.dialog_id), 0L, Integer.valueOf(existFlags), Boolean.valueOf(scheduled));
        processSentMessage(oldId);
        removeFromSendingMessages(oldId, scheduled);
    }

    /* renamed from: lambda$performSendMessageRequest$62$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m463x8efe81e7(TLRPC.Message newMsgObj) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda39(this, newMsgObj, newMsgObj.id));
    }

    /* renamed from: lambda$performSendMessageRequest$61$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m462xa9bd1326(TLRPC.Message newMsgObj, int msg_id) {
        newMsgObj.send_state = 0;
        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByAck, Integer.valueOf(msg_id));
    }

    private void updateMediaPaths(MessageObject newMsgObj, TLRPC.Message sentMessage, int newMsgId, String originalPath, boolean post) {
        TLRPC.PhotoSize strippedNew;
        MessageObject messageObject;
        byte[] oldWaveform;
        boolean save;
        int b;
        int b2;
        TLRPC.Message newMsg;
        TLRPC.PhotoSize strippedNew2;
        TLRPC.PhotoSize size;
        boolean found;
        File cacheFile2;
        String newKey;
        TLRPC.PhotoSize strippedNew3;
        TLRPC.PhotoSize strippedNew4;
        TLRPC.PhotoSize strippedNew5;
        MessageObject messageObject2 = newMsgObj;
        TLRPC.Message message = sentMessage;
        String str = originalPath;
        boolean z = post;
        TLRPC.Message newMsg2 = messageObject2.messageOwner;
        TLRPC.PhotoSize strippedNew6 = null;
        if (newMsg2.media != null) {
            TLRPC.PhotoSize strippedOld = null;
            TLObject photoObject = null;
            if (newMsgObj.isLiveLocation() && (message.media instanceof TLRPC.TL_messageMediaGeoLive)) {
                newMsg2.media.period = message.media.period;
            } else if (newMsgObj.isDice()) {
                ((TLRPC.TL_messageMediaDice) newMsg2.media).value = ((TLRPC.TL_messageMediaDice) message.media).value;
            } else if (newMsg2.media.photo != null) {
                strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.photo.sizes, 40);
                if (message == null || message.media == null || message.media.photo == null) {
                    strippedNew6 = strippedOld;
                } else {
                    strippedNew6 = FileLoader.getClosestPhotoSizeWithSize(message.media.photo.sizes, 40);
                }
                photoObject = newMsg2.media.photo;
            } else if (newMsg2.media.document != null) {
                strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.document.thumbs, 40);
                if (message == null || message.media == null || message.media.document == null) {
                    strippedNew5 = strippedOld;
                } else {
                    strippedNew5 = FileLoader.getClosestPhotoSizeWithSize(message.media.document.thumbs, 40);
                }
                photoObject = newMsg2.media.document;
            } else if (newMsg2.media.webpage != null) {
                if (newMsg2.media.webpage.photo != null) {
                    strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.webpage.photo.sizes, 40);
                    if (message == null || message.media == null || message.media.webpage == null || message.media.webpage.photo == null) {
                        strippedNew4 = strippedOld;
                    } else {
                        strippedNew4 = FileLoader.getClosestPhotoSizeWithSize(message.media.webpage.photo.sizes, 40);
                    }
                    photoObject = newMsg2.media.webpage.photo;
                } else if (newMsg2.media.webpage.document != null) {
                    strippedOld = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.webpage.document.thumbs, 40);
                    if (message == null || message.media == null || message.media.webpage == null || message.media.webpage.document == null) {
                        strippedNew3 = strippedOld;
                    } else {
                        strippedNew3 = FileLoader.getClosestPhotoSizeWithSize(message.media.webpage.document.thumbs, 40);
                    }
                    photoObject = newMsg2.media.webpage.document;
                }
            }
            if (!(strippedNew6 instanceof TLRPC.TL_photoStrippedSize) || !(strippedOld instanceof TLRPC.TL_photoStrippedSize)) {
                int i = newMsgId;
            } else {
                String oldKey = "stripped" + FileRefController.getKeyForParentObject(newMsgObj);
                if (message != null) {
                    newKey = "stripped" + FileRefController.getKeyForParentObject(sentMessage);
                    int i2 = newMsgId;
                } else {
                    newKey = "strippedmessage" + newMsgId + "_" + newMsgObj.getChannelId() + "_" + messageObject2.scheduled;
                }
                ImageLoader.getInstance().replaceImageInCache(oldKey, newKey, ImageLocation.getForObject(strippedNew6, photoObject), z);
            }
            strippedNew = strippedNew6;
        } else {
            int i3 = newMsgId;
            strippedNew = null;
        }
        if (message != null) {
            if ((message.media instanceof TLRPC.TL_messageMediaPhoto) && message.media.photo != null && (newMsg2.media instanceof TLRPC.TL_messageMediaPhoto) && newMsg2.media.photo != null) {
                if (message.media.ttl_seconds == 0 && !messageObject2.scheduled) {
                    getMessagesStorage().putSentFile(str, message.media.photo, 0, "sent_" + message.peer_id.channel_id + "_" + message.id);
                }
                if (newMsg2.media.photo.sizes.size() != 1 || !(newMsg2.media.photo.sizes.get(0).location instanceof TLRPC.TL_fileLocationUnavailable)) {
                    int b3 = 0;
                    while (b3 < newMsg2.media.photo.sizes.size()) {
                        TLRPC.PhotoSize size2 = newMsg2.media.photo.sizes.get(b3);
                        if (size2 == null || size2.location == null) {
                            b = b3;
                        } else if (size2.type == null) {
                            b = b3;
                        } else {
                            boolean found2 = false;
                            int a = 0;
                            while (true) {
                                if (a >= message.media.photo.sizes.size()) {
                                    b2 = b3;
                                    newMsg = newMsg2;
                                    strippedNew2 = strippedNew;
                                    break;
                                }
                                size = message.media.photo.sizes.get(a);
                                if (size == null || size.location == null || (size instanceof TLRPC.TL_photoSizeEmpty)) {
                                    b2 = b3;
                                } else if (size.type == null) {
                                    b2 = b3;
                                } else {
                                    b2 = b3;
                                    if ((size2.location.volume_id == -2147483648L && size.type.equals(size2.type)) || (size.w == size2.w && size.h == size2.h)) {
                                        StringBuilder sb = new StringBuilder();
                                        newMsg = newMsg2;
                                        strippedNew2 = strippedNew;
                                        sb.append(size2.location.volume_id);
                                        sb.append("_");
                                        sb.append(size2.location.local_id);
                                        String fileName = sb.toString();
                                        String fileName2 = size.location.volume_id + "_" + size.location.local_id;
                                    }
                                }
                                a++;
                                MessageObject messageObject3 = newMsgObj;
                                int i4 = newMsgId;
                                newMsg2 = newMsg2;
                                b3 = b2;
                                strippedNew = strippedNew;
                            }
                            StringBuilder sb2 = new StringBuilder();
                            newMsg = newMsg2;
                            strippedNew2 = strippedNew;
                            sb2.append(size2.location.volume_id);
                            sb2.append("_");
                            sb2.append(size2.location.local_id);
                            String fileName3 = sb2.toString();
                            String fileName22 = size.location.volume_id + "_" + size.location.local_id;
                            if (fileName3.equals(fileName22)) {
                                found = true;
                            } else {
                                found = true;
                                File cacheFile = new File(FileLoader.getDirectory(4), fileName3 + ".jpg");
                                if (message.media.ttl_seconds != 0 || (message.media.photo.sizes.size() != 1 && size.w <= 90 && size.h <= 90)) {
                                    cacheFile2 = new File(FileLoader.getDirectory(4), fileName22 + ".jpg");
                                } else {
                                    cacheFile2 = FileLoader.getInstance(this.currentAccount).getPathToAttach(size);
                                }
                                cacheFile.renameTo(cacheFile2);
                                ImageLoader.getInstance().replaceImageInCache(fileName3, fileName22, ImageLocation.getForPhoto(size, message.media.photo), z);
                                size2.location = size.location;
                                size2.size = size.size;
                            }
                            found2 = found;
                            if (!found2) {
                                String fileName4 = size2.location.volume_id + "_" + size2.location.local_id;
                                File cacheFile3 = new File(FileLoader.getDirectory(4), fileName4 + ".jpg");
                                cacheFile3.delete();
                                if (!"s".equals(size2.type) || strippedNew2 == null) {
                                    newMsg2 = newMsg;
                                    b = b2;
                                    strippedNew = strippedNew2;
                                    File file = cacheFile3;
                                } else {
                                    newMsg2 = newMsg;
                                    b = b2;
                                    strippedNew = strippedNew2;
                                    newMsg2.media.photo.sizes.set(b, strippedNew);
                                    ImageLocation location = ImageLocation.getForPhoto(strippedNew, message.media.photo);
                                    File file2 = cacheFile3;
                                    ImageLoader.getInstance().replaceImageInCache(fileName4, location.getKey(message, (Object) null, false), location, z);
                                }
                            } else {
                                newMsg2 = newMsg;
                                b = b2;
                                strippedNew = strippedNew2;
                            }
                        }
                        b3 = b + 1;
                        MessageObject messageObject4 = newMsgObj;
                        int b4 = newMsgId;
                    }
                    int i5 = b3;
                } else {
                    newMsg2.media.photo.sizes = message.media.photo.sizes;
                }
                newMsg2.message = message.message;
                message.attachPath = newMsg2.attachPath;
                newMsg2.media.photo.id = message.media.photo.id;
                newMsg2.media.photo.dc_id = message.media.photo.dc_id;
                newMsg2.media.photo.access_hash = message.media.photo.access_hash;
                MessageObject messageObject5 = newMsgObj;
            } else if (!(message.media instanceof TLRPC.TL_messageMediaDocument) || message.media.document == null || !(newMsg2.media instanceof TLRPC.TL_messageMediaDocument) || newMsg2.media.document == null) {
                MessageObject messageObject6 = newMsgObj;
                if ((message.media instanceof TLRPC.TL_messageMediaContact) && (newMsg2.media instanceof TLRPC.TL_messageMediaContact)) {
                    newMsg2.media = message.media;
                } else if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
                    newMsg2.media = message.media;
                } else if (message.media instanceof TLRPC.TL_messageMediaGeo) {
                    message.media.geo.lat = newMsg2.media.geo.lat;
                    message.media.geo._long = newMsg2.media.geo._long;
                } else if ((message.media instanceof TLRPC.TL_messageMediaGame) || (message.media instanceof TLRPC.TL_messageMediaInvoice)) {
                    newMsg2.media = message.media;
                    if (!TextUtils.isEmpty(message.message)) {
                        newMsg2.entities = message.entities;
                        newMsg2.message = message.message;
                    }
                    if (message.reply_markup != null) {
                        newMsg2.reply_markup = message.reply_markup;
                        newMsg2.flags |= 64;
                    }
                } else if (message.media instanceof TLRPC.TL_messageMediaPoll) {
                    newMsg2.media = message.media;
                }
            } else {
                if (message.media.ttl_seconds == 0) {
                    MessageObject messageObject7 = newMsgObj;
                    if (messageObject7.videoEditedInfo == null || (messageObject7.videoEditedInfo.mediaEntities == null && TextUtils.isEmpty(messageObject7.videoEditedInfo.paintPath) && messageObject7.videoEditedInfo.cropState == null)) {
                        boolean isVideo = MessageObject.isVideoMessage(sentMessage);
                        if ((isVideo || MessageObject.isGifMessage(sentMessage)) && MessageObject.isGifDocument(message.media.document) == MessageObject.isGifDocument(newMsg2.media.document)) {
                            if (!messageObject7.scheduled) {
                                getMessagesStorage().putSentFile(str, message.media.document, 2, "sent_" + message.peer_id.channel_id + "_" + message.id);
                            }
                            if (isVideo) {
                                message.attachPath = newMsg2.attachPath;
                                messageObject = newMsgObj;
                            } else {
                                messageObject = newMsgObj;
                            }
                        } else if (MessageObject.isVoiceMessage(sentMessage) || MessageObject.isRoundVideoMessage(sentMessage)) {
                            messageObject = newMsgObj;
                        } else {
                            messageObject = newMsgObj;
                            if (!messageObject.scheduled) {
                                getMessagesStorage().putSentFile(str, message.media.document, 1, "sent_" + message.peer_id.channel_id + "_" + message.id);
                            }
                        }
                    } else {
                        messageObject = messageObject7;
                    }
                } else {
                    messageObject = newMsgObj;
                }
                TLRPC.PhotoSize size22 = FileLoader.getClosestPhotoSizeWithSize(newMsg2.media.document.thumbs, 320);
                TLRPC.PhotoSize size3 = FileLoader.getClosestPhotoSizeWithSize(message.media.document.thumbs, 320);
                if (size22 != null && size22.location != null && size22.location.volume_id == -2147483648L && size3 != null && size3.location != null && !(size3 instanceof TLRPC.TL_photoSizeEmpty) && !(size22 instanceof TLRPC.TL_photoSizeEmpty)) {
                    String fileName5 = size22.location.volume_id + "_" + size22.location.local_id;
                    String fileName23 = size3.location.volume_id + "_" + size3.location.local_id;
                    if (!fileName5.equals(fileName23)) {
                        new File(FileLoader.getDirectory(4), fileName5 + ".jpg").renameTo(new File(FileLoader.getDirectory(4), fileName23 + ".jpg"));
                        ImageLoader.getInstance().replaceImageInCache(fileName5, fileName23, ImageLocation.getForDocument(size3, message.media.document), z);
                        size22.location = size3.location;
                        size22.size = size3.size;
                    }
                } else if (size3 != null && size22 != null && MessageObject.isStickerMessage(sentMessage) && size22.location != null) {
                    size3.location = size22.location;
                } else if (size22 == null || ((size22 != null && (size22.location instanceof TLRPC.TL_fileLocationUnavailable)) || (size22 instanceof TLRPC.TL_photoSizeEmpty))) {
                    newMsg2.media.document.thumbs = message.media.document.thumbs;
                }
                newMsg2.media.document.dc_id = message.media.document.dc_id;
                newMsg2.media.document.id = message.media.document.id;
                newMsg2.media.document.access_hash = message.media.document.access_hash;
                int a2 = 0;
                while (true) {
                    if (a2 >= newMsg2.media.document.attributes.size()) {
                        oldWaveform = null;
                        break;
                    }
                    TLRPC.DocumentAttribute attribute = newMsg2.media.document.attributes.get(a2);
                    if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
                        oldWaveform = attribute.waveform;
                        break;
                    }
                    a2++;
                }
                newMsg2.media.document.attributes = message.media.document.attributes;
                if (oldWaveform != null) {
                    for (int a3 = 0; a3 < newMsg2.media.document.attributes.size(); a3++) {
                        TLRPC.DocumentAttribute attribute2 = newMsg2.media.document.attributes.get(a3);
                        if (attribute2 instanceof TLRPC.TL_documentAttributeAudio) {
                            attribute2.waveform = oldWaveform;
                            attribute2.flags |= 4;
                        }
                    }
                }
                newMsg2.media.document.size = message.media.document.size;
                newMsg2.media.document.mime_type = message.media.document.mime_type;
                if ((message.flags & 4) == 0 && MessageObject.isOut(sentMessage)) {
                    if (MessageObject.isNewGifDocument(message.media.document)) {
                        if (MessageObject.isDocumentHasAttachedStickers(message.media.document)) {
                            save = getMessagesController().saveGifsWithStickers;
                        } else {
                            save = true;
                        }
                        if (save) {
                            getMediaDataController().addRecentGif(message.media.document, message.date, true);
                        }
                    } else if (MessageObject.isStickerDocument(message.media.document) || MessageObject.isAnimatedStickerDocument(message.media.document, true)) {
                        getMediaDataController().addRecentSticker(0, sentMessage, message.media.document, message.date, false);
                    }
                }
                if (newMsg2.attachPath == null || !newMsg2.attachPath.startsWith(FileLoader.getDirectory(4).getAbsolutePath())) {
                    message.attachPath = newMsg2.attachPath;
                    message.message = newMsg2.message;
                    return;
                }
                File cacheFile4 = new File(newMsg2.attachPath);
                File cacheFile22 = FileLoader.getInstance(this.currentAccount).getPathToAttach(message.media.document, message.media.ttl_seconds != 0);
                if (!cacheFile4.renameTo(cacheFile22)) {
                    if (cacheFile4.exists()) {
                        message.attachPath = newMsg2.attachPath;
                    } else {
                        messageObject.attachPathExists = false;
                    }
                    messageObject.mediaExists = cacheFile22.exists();
                    message.message = newMsg2.message;
                } else if (MessageObject.isVideoMessage(sentMessage)) {
                    messageObject.attachPathExists = true;
                } else {
                    messageObject.mediaExists = messageObject.attachPathExists;
                    messageObject.attachPathExists = false;
                    newMsg2.attachPath = "";
                    if (str != null && str.startsWith("http")) {
                        getMessagesStorage().addRecentLocalFile(str, cacheFile22.toString(), newMsg2.media.document);
                    }
                }
            }
        }
    }

    private void putToDelayedMessages(String location, DelayedMessage message) {
        ArrayList<DelayedMessage> arrayList = this.delayedMessages.get(location);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.delayedMessages.put(location, arrayList);
        }
        arrayList.add(message);
    }

    /* access modifiers changed from: protected */
    public ArrayList<DelayedMessage> getDelayedMessages(String location) {
        return this.delayedMessages.get(location);
    }

    /* access modifiers changed from: protected */
    public long getNextRandomId() {
        long val = 0;
        while (val == 0) {
            val = Utilities.random.nextLong();
        }
        return val;
    }

    public void checkUnsentMessages() {
        getMessagesStorage().getUnsentMessages(1000);
    }

    /* access modifiers changed from: protected */
    public void processUnsentMessages(ArrayList<TLRPC.Message> messages, ArrayList<TLRPC.Message> scheduledMessages, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, ArrayList<TLRPC.EncryptedChat> encryptedChats) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda26(this, users, chats, encryptedChats, messages, scheduledMessages));
    }

    /* renamed from: lambda$processUnsentMessages$63$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m477x625b480d(ArrayList users, ArrayList chats, ArrayList encryptedChats, ArrayList messages, ArrayList scheduledMessages) {
        getMessagesController().putUsers(users, true);
        getMessagesController().putChats(chats, true);
        getMessagesController().putEncryptedChats(encryptedChats, true);
        int N = messages.size();
        for (int a = 0; a < N; a++) {
            MessageObject messageObject = new MessageObject(this.currentAccount, (TLRPC.Message) messages.get(a), false, true);
            long groupId = messageObject.getGroupId();
            if (groupId != 0 && messageObject.messageOwner.params != null && !messageObject.messageOwner.params.containsKey("final") && (a == N - 1 || ((TLRPC.Message) messages.get(a + 1)).grouped_id != groupId)) {
                messageObject.messageOwner.params.put("final", "1");
            }
            retrySendMessage(messageObject, true);
        }
        if (scheduledMessages != null) {
            for (int a2 = 0; a2 < scheduledMessages.size(); a2++) {
                MessageObject messageObject2 = new MessageObject(this.currentAccount, (TLRPC.Message) scheduledMessages.get(a2), false, true);
                messageObject2.scheduled = true;
                retrySendMessage(messageObject2, true);
            }
        }
    }

    public ImportingStickers getImportingStickers(String shortName) {
        return this.importingStickersMap.get(shortName);
    }

    public ImportingHistory getImportingHistory(long dialogId) {
        return this.importingHistoryMap.get(dialogId);
    }

    public boolean isImportingStickers() {
        return this.importingStickersMap.size() != 0;
    }

    public boolean isImportingHistory() {
        return this.importingHistoryMap.size() != 0;
    }

    public void prepareImportHistory(long dialogId, Uri uri, ArrayList<Uri> mediaUris, MessagesStorage.LongCallback onStartImport) {
        TLRPC.Chat chat;
        if (this.importingHistoryMap.get(dialogId) != null) {
            onStartImport.run(0);
        } else if (!DialogObject.isChatDialog(dialogId) || (chat = getMessagesController().getChat(Long.valueOf(-dialogId))) == null || chat.megagroup) {
            new Thread(new SendMessagesHelper$$ExternalSyntheticLambda25(this, mediaUris, dialogId, uri, onStartImport)).start();
        } else {
            getMessagesController().convertToMegaGroup((Context) null, -dialogId, (BaseFragment) null, new SendMessagesHelper$$ExternalSyntheticLambda73(this, uri, mediaUris, onStartImport));
        }
    }

    /* renamed from: lambda$prepareImportHistory$64$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m472x12cad7b8(Uri uri, ArrayList mediaUris, MessagesStorage.LongCallback onStartImport, long chatId) {
        if (chatId != 0) {
            prepareImportHistory(-chatId, uri, mediaUris, onStartImport);
            return;
        }
        onStartImport.run(0);
    }

    /* renamed from: lambda$prepareImportHistory$69$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m474x8d12017d(ArrayList mediaUris, long dialogId, Uri uri, MessagesStorage.LongCallback onStartImport) {
        Uri mediaUri;
        long j = dialogId;
        MessagesStorage.LongCallback longCallback = onStartImport;
        ArrayList arrayList = mediaUris != null ? mediaUris : new ArrayList();
        ImportingHistory importingHistory = new ImportingHistory();
        importingHistory.mediaPaths = arrayList;
        importingHistory.dialogId = j;
        importingHistory.peer = getMessagesController().getInputPeer(j);
        HashMap<String, ImportingHistory> files = new HashMap<>();
        int N = arrayList.size();
        for (int a = 0; a < N + 1; a++) {
            if (a == 0) {
                mediaUri = uri;
            } else {
                mediaUri = (Uri) arrayList.get(a - 1);
            }
            if (mediaUri != null && !AndroidUtilities.isInternalUri(mediaUri)) {
                String path = MediaController.copyFileToCache(mediaUri, "txt");
                if (path == null) {
                    continue;
                } else {
                    File f = new File(path);
                    if (f.exists()) {
                        long length = f.length();
                        long size = length;
                        if (length != 0) {
                            importingHistory.totalSize += size;
                            if (a != 0) {
                                importingHistory.uploadMedia.add(path);
                            } else if (size > 33554432) {
                                f.delete();
                                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda10(longCallback));
                                return;
                            } else {
                                importingHistory.historyPath = path;
                            }
                            importingHistory.uploadSet.add(path);
                            files.put(path, importingHistory);
                        }
                    }
                    if (a == 0) {
                        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda9(longCallback));
                        return;
                    }
                }
            } else if (a == 0) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda8(longCallback));
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda29(this, files, dialogId, importingHistory, onStartImport));
    }

    static /* synthetic */ void lambda$prepareImportHistory$67(MessagesStorage.LongCallback onStartImport) {
        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("ImportFileTooLarge", NUM), 0).show();
        onStartImport.run(0);
    }

    /* renamed from: lambda$prepareImportHistory$68$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m473xa7d092bc(HashMap files, long dialogId, ImportingHistory importingHistory, MessagesStorage.LongCallback onStartImport) {
        this.importingHistoryFiles.putAll(files);
        this.importingHistoryMap.put(dialogId, importingHistory);
        getFileLoader().uploadFile(importingHistory.historyPath, false, true, 0, 67108864, true);
        getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, Long.valueOf(dialogId));
        onStartImport.run(dialogId);
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable e) {
            FileLog.e(e);
        }
    }

    public void prepareImportStickers(String title, String shortName, String sofrware, ArrayList<ImportingSticker> paths, MessagesStorage.StringCallback onStartImport) {
        if (this.importingStickersMap.get(shortName) != null) {
            onStartImport.run((String) null);
        } else {
            new Thread(new SendMessagesHelper$$ExternalSyntheticLambda23(this, title, shortName, sofrware, paths, onStartImport)).start();
        }
    }

    /* renamed from: lambda$prepareImportStickers$72$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m476xfa297655(String title, String shortName, String sofrware, ArrayList paths, MessagesStorage.StringCallback onStartImport) {
        ImportingStickers importingStickers = new ImportingStickers();
        importingStickers.title = title;
        importingStickers.shortName = shortName;
        importingStickers.software = sofrware;
        HashMap<String, ImportingStickers> files = new HashMap<>();
        int a = 0;
        int N = paths.size();
        while (a < N) {
            ImportingSticker sticker = (ImportingSticker) paths.get(a);
            File f = new File(sticker.path);
            if (f.exists()) {
                long length = f.length();
                long size = length;
                if (length != 0) {
                    importingStickers.totalSize += size;
                    importingStickers.uploadMedia.add(sticker);
                    importingStickers.uploadSet.put(sticker.path, sticker);
                    files.put(sticker.path, importingStickers);
                    MessagesStorage.StringCallback stringCallback = onStartImport;
                    a++;
                }
            }
            if (a == 0) {
                AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda12(onStartImport));
                return;
            } else {
                MessagesStorage.StringCallback stringCallback2 = onStartImport;
                a++;
            }
        }
        ArrayList arrayList = paths;
        MessagesStorage.StringCallback stringCallback3 = onStartImport;
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda35(this, importingStickers, files, shortName, onStartImport));
    }

    /* renamed from: lambda$prepareImportStickers$71$org-telegram-messenger-SendMessagesHelper  reason: not valid java name */
    public /* synthetic */ void m475x14e80794(ImportingStickers importingStickers, HashMap files, String shortName, MessagesStorage.StringCallback onStartImport) {
        if (importingStickers.uploadMedia.get(0).item != null) {
            importingStickers.startImport();
        } else {
            this.importingStickersFiles.putAll(files);
            this.importingStickersMap.put(shortName, importingStickers);
            importingStickers.initImport();
            getNotificationCenter().postNotificationName(NotificationCenter.historyImportProgressChanged, shortName);
            onStartImport.run(shortName);
        }
        try {
            ApplicationLoader.applicationContext.startService(new Intent(ApplicationLoader.applicationContext, ImportingService.class));
        } catch (Throwable e) {
            FileLog.e(e);
        }
    }

    public TLRPC.TL_photo generatePhotoSizes(String path, Uri imageUri) {
        return generatePhotoSizes((TLRPC.TL_photo) null, path, imageUri);
    }

    public TLRPC.TL_photo generatePhotoSizes(TLRPC.TL_photo photo, String path, Uri imageUri) {
        Bitmap bitmap = ImageLoader.loadBitmap(path, imageUri, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true);
        if (bitmap == null) {
            bitmap = ImageLoader.loadBitmap(path, imageUri, 800.0f, 800.0f, true);
        }
        ArrayList<TLRPC.PhotoSize> sizes = new ArrayList<>();
        TLRPC.PhotoSize size = ImageLoader.scaleAndSaveImage(bitmap, 90.0f, 90.0f, 55, true);
        if (size != null) {
            sizes.add(size);
        }
        TLRPC.PhotoSize size2 = ImageLoader.scaleAndSaveImage(bitmap, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true, 80, false, 101, 101);
        if (size2 != null) {
            sizes.add(size2);
        }
        if (bitmap != null) {
            bitmap.recycle();
        }
        if (sizes.isEmpty()) {
            return null;
        }
        getUserConfig().saveConfig(false);
        if (photo == null) {
            photo = new TLRPC.TL_photo();
        }
        photo.date = getConnectionsManager().getCurrentTime();
        photo.sizes = sizes;
        photo.file_reference = new byte[0];
        return photo;
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v74, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v76, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v28, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v79, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v81, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v32, resolved type: java.lang.String} */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Code restructure failed: missing block: B:225:0x0445, code lost:
        r0 = 65535;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:226:0x0446, code lost:
        switch(r0) {
            case 0: goto L_0x0477;
            case 1: goto L_0x0470;
            case 2: goto L_0x0469;
            case 3: goto L_0x0462;
            case 4: goto L_0x045b;
            case 5: goto L_0x0454;
            default: goto L_0x0449;
        };
     */
    /* JADX WARNING: Code restructure failed: missing block: B:227:0x0449, code lost:
        r13 = r25;
        r0 = r13.getMimeTypeFromExtension(r5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:228:0x044f, code lost:
        if (r0 == null) goto L_0x047c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:229:0x0451, code lost:
        r2.mime_type = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:230:0x0454, code lost:
        r2.mime_type = "audio/flac";
        r13 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:231:0x045b, code lost:
        r2.mime_type = "audio/ogg";
        r13 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:232:0x0462, code lost:
        r2.mime_type = "audio/m4a";
        r13 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:233:0x0469, code lost:
        r2.mime_type = "audio/mpeg";
        r13 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:234:0x0470, code lost:
        r2.mime_type = "audio/opus";
        r13 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:235:0x0477, code lost:
        r2.mime_type = "image/webp";
        r13 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:236:0x047c, code lost:
        r2.mime_type = "application/octet-stream";
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:119:0x01de A[SYNTHETIC, Splitter:B:119:0x01de] */
    /* JADX WARNING: Removed duplicated region for block: B:127:0x01fa A[SYNTHETIC, Splitter:B:127:0x01fa] */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x0246  */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x027a  */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x0281  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02d2  */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x02df A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:199:0x03c1  */
    /* JADX WARNING: Removed duplicated region for block: B:264:0x04ea A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:288:0x0540  */
    /* JADX WARNING: Removed duplicated region for block: B:289:0x0568  */
    /* JADX WARNING: Removed duplicated region for block: B:292:0x0573  */
    /* JADX WARNING: Removed duplicated region for block: B:294:0x0580  */
    /* JADX WARNING: Removed duplicated region for block: B:295:0x0586  */
    /* JADX WARNING: Removed duplicated region for block: B:298:0x0597  */
    /* JADX WARNING: Removed duplicated region for block: B:299:0x059f  */
    /* JADX WARNING: Removed duplicated region for block: B:305:0x05ae  */
    /* JADX WARNING: Removed duplicated region for block: B:308:0x05bb  */
    /* JADX WARNING: Removed duplicated region for block: B:327:0x061a  */
    /* JADX WARNING: Removed duplicated region for block: B:329:0x061d A[ADDED_TO_REGION] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static int prepareSendingDocumentInternal(org.telegram.messenger.AccountInstance r48, java.lang.String r49, java.lang.String r50, android.net.Uri r51, java.lang.String r52, long r53, org.telegram.messenger.MessageObject r55, org.telegram.messenger.MessageObject r56, java.lang.CharSequence r57, java.util.ArrayList<org.telegram.tgnet.TLRPC.MessageEntity> r58, org.telegram.messenger.MessageObject r59, long[] r60, boolean r61, boolean r62, boolean r63, int r64, java.lang.Integer[] r65) {
        /*
            r15 = r48
            r0 = r49
            r1 = r50
            r14 = r51
            r13 = r52
            r8 = 1
            if (r0 == 0) goto L_0x0013
            int r2 = r49.length()
            if (r2 != 0) goto L_0x0016
        L_0x0013:
            if (r14 != 0) goto L_0x0016
            return r8
        L_0x0016:
            if (r14 == 0) goto L_0x001f
            boolean r2 = org.telegram.messenger.AndroidUtilities.isInternalUri((android.net.Uri) r51)
            if (r2 == 0) goto L_0x001f
            return r8
        L_0x001f:
            if (r0 == 0) goto L_0x0031
            java.io.File r2 = new java.io.File
            r2.<init>(r0)
            android.net.Uri r2 = android.net.Uri.fromFile(r2)
            boolean r2 = org.telegram.messenger.AndroidUtilities.isInternalUri((android.net.Uri) r2)
            if (r2 == 0) goto L_0x0031
            return r8
        L_0x0031:
            android.webkit.MimeTypeMap r11 = android.webkit.MimeTypeMap.getSingleton()
            r2 = 0
            r3 = 0
            r9 = 2
            if (r14 == 0) goto L_0x0062
            if (r0 != 0) goto L_0x0062
            boolean r4 = checkFileSize(r15, r14)
            if (r4 == 0) goto L_0x0043
            return r9
        L_0x0043:
            r4 = 0
            if (r13 == 0) goto L_0x004a
            java.lang.String r3 = r11.getExtensionFromMimeType(r13)
        L_0x004a:
            if (r3 != 0) goto L_0x004f
            java.lang.String r3 = "txt"
            goto L_0x0050
        L_0x004f:
            r4 = 1
        L_0x0050:
            java.lang.String r0 = org.telegram.messenger.MediaController.copyFileToCache(r14, r3)
            if (r0 != 0) goto L_0x0057
            return r8
        L_0x0057:
            if (r4 != 0) goto L_0x005e
            r3 = 0
            r10 = r0
            r16 = r3
            goto L_0x0065
        L_0x005e:
            r10 = r0
            r16 = r3
            goto L_0x0065
        L_0x0062:
            r10 = r0
            r16 = r3
        L_0x0065:
            java.io.File r0 = new java.io.File
            r0.<init>(r10)
            r17 = r0
            boolean r0 = r17.exists()
            if (r0 == 0) goto L_0x06a6
            long r3 = r17.length()
            r6 = 0
            int r0 = (r3 > r6 ? 1 : (r3 == r6 ? 0 : -1))
            if (r0 != 0) goto L_0x0084
            r29 = r2
            r31 = r10
            r33 = r11
            goto L_0x06ac
        L_0x0084:
            int r0 = r48.getCurrentAccount()
            long r3 = r17.length()
            boolean r0 = org.telegram.messenger.FileLoader.checkUploadFileSize(r0, r3)
            if (r0 != 0) goto L_0x0093
            return r9
        L_0x0093:
            boolean r12 = org.telegram.messenger.DialogObject.isEncryptedDialog(r53)
            java.lang.String r5 = r17.getName()
            java.lang.String r0 = ""
            r4 = -1
            if (r16 == 0) goto L_0x00a5
            r0 = r16
            r18 = r0
            goto L_0x00b8
        L_0x00a5:
            r3 = 46
            int r3 = r10.lastIndexOf(r3)
            if (r3 == r4) goto L_0x00b6
            int r4 = r3 + 1
            java.lang.String r0 = r10.substring(r4)
            r18 = r0
            goto L_0x00b8
        L_0x00b6:
            r18 = r0
        L_0x00b8:
            java.lang.String r4 = r18.toLowerCase()
            r3 = 0
            r19 = 0
            r20 = 0
            r21 = 0
            r22 = r5
            java.lang.String r5 = "mp3"
            boolean r0 = r4.equals(r5)
            r23 = r5
            java.lang.String r5 = "flac"
            java.lang.String r6 = "opus"
            java.lang.String r7 = "m4a"
            java.lang.String r8 = "ogg"
            if (r0 != 0) goto L_0x0207
            boolean r0 = r4.equals(r7)
            if (r0 == 0) goto L_0x00e3
            r29 = r2
            r30 = r3
            goto L_0x020b
        L_0x00e3:
            boolean r0 = r4.equals(r6)
            if (r0 != 0) goto L_0x0105
            boolean r0 = r4.equals(r8)
            if (r0 != 0) goto L_0x0105
            boolean r0 = r4.equals(r5)
            if (r0 == 0) goto L_0x00f6
            goto L_0x0105
        L_0x00f6:
            r29 = r2
            r9 = r3
            r27 = r4
            r32 = r5
            r5 = r19
            r4 = r21
            r24 = 0
            goto L_0x0242
        L_0x0105:
            r27 = 0
            android.media.MediaMetadataRetriever r0 = new android.media.MediaMetadataRetriever     // Catch:{ Exception -> 0x01d4, all -> 0x01cd }
            r0.<init>()     // Catch:{ Exception -> 0x01d4, all -> 0x01cd }
            r27 = r0
            java.lang.String r0 = r17.getAbsolutePath()     // Catch:{ Exception -> 0x01c5, all -> 0x01bc }
            r9 = r27
            r9.setDataSource(r0)     // Catch:{ Exception -> 0x01b4, all -> 0x01ab }
            r0 = 9
            java.lang.String r0 = r9.extractMetadata(r0)     // Catch:{ Exception -> 0x01b4, all -> 0x01ab }
            if (r0 == 0) goto L_0x0164
            r29 = r2
            r30 = r3
            long r2 = java.lang.Long.parseLong(r0)     // Catch:{ Exception -> 0x015d, all -> 0x0155 }
            float r2 = (float) r2     // Catch:{ Exception -> 0x015d, all -> 0x0155 }
            r3 = 1148846080(0x447a0000, float:1000.0)
            float r2 = r2 / r3
            double r2 = (double) r2     // Catch:{ Exception -> 0x015d, all -> 0x0155 }
            double r2 = java.lang.Math.ceil(r2)     // Catch:{ Exception -> 0x015d, all -> 0x0155 }
            int r2 = (int) r2
            r3 = 7
            java.lang.String r3 = r9.extractMetadata(r3)     // Catch:{ Exception -> 0x014c, all -> 0x0142 }
            r19 = r3
            r3 = 2
            java.lang.String r21 = r9.extractMetadata(r3)     // Catch:{ Exception -> 0x014c, all -> 0x0142 }
            r3 = r21
            r21 = r2
            goto L_0x0168
        L_0x0142:
            r0 = move-exception
            r21 = r2
            r27 = r9
            r3 = r30
            r2 = r0
            goto L_0x01f8
        L_0x014c:
            r0 = move-exception
            r21 = r2
            r27 = r9
            r3 = r30
            goto L_0x01d9
        L_0x0155:
            r0 = move-exception
            r2 = r0
            r27 = r9
            r3 = r30
            goto L_0x01f8
        L_0x015d:
            r0 = move-exception
            r27 = r9
            r3 = r30
            goto L_0x01d9
        L_0x0164:
            r29 = r2
            r30 = r3
        L_0x0168:
            if (r59 != 0) goto L_0x018f
            boolean r2 = r4.equals(r8)     // Catch:{ Exception -> 0x0189, all -> 0x0181 }
            if (r2 == 0) goto L_0x018f
            java.lang.String r2 = r17.getAbsolutePath()     // Catch:{ Exception -> 0x0189, all -> 0x0181 }
            int r2 = org.telegram.messenger.MediaController.isOpusFile(r2)     // Catch:{ Exception -> 0x0189, all -> 0x0181 }
            r27 = r3
            r3 = 1
            if (r2 != r3) goto L_0x0191
            r2 = 1
            r20 = r2
            goto L_0x0191
        L_0x0181:
            r0 = move-exception
            r27 = r3
            r2 = r0
            r27 = r9
            goto L_0x01f8
        L_0x0189:
            r0 = move-exception
            r27 = r3
            r27 = r9
            goto L_0x01d9
        L_0x018f:
            r27 = r3
        L_0x0191:
            r9.release()     // Catch:{ Exception -> 0x0196 }
            goto L_0x019d
        L_0x0196:
            r0 = move-exception
            r2 = r0
            r0 = r2
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x019d:
            r32 = r5
            r5 = r19
            r9 = r27
            r24 = 0
            r27 = r4
            r4 = r21
            goto L_0x0242
        L_0x01ab:
            r0 = move-exception
            r29 = r2
            r30 = r3
            r2 = r0
            r27 = r9
            goto L_0x01f8
        L_0x01b4:
            r0 = move-exception
            r29 = r2
            r30 = r3
            r27 = r9
            goto L_0x01d9
        L_0x01bc:
            r0 = move-exception
            r29 = r2
            r30 = r3
            r9 = r27
            r2 = r0
            goto L_0x01f8
        L_0x01c5:
            r0 = move-exception
            r29 = r2
            r30 = r3
            r9 = r27
            goto L_0x01d9
        L_0x01cd:
            r0 = move-exception
            r29 = r2
            r30 = r3
            r2 = r0
            goto L_0x01f8
        L_0x01d4:
            r0 = move-exception
            r29 = r2
            r30 = r3
        L_0x01d9:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01f6 }
            if (r27 == 0) goto L_0x01e9
            r27.release()     // Catch:{ Exception -> 0x01e2 }
            goto L_0x01e9
        L_0x01e2:
            r0 = move-exception
            r2 = r0
            r0 = r2
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x01ea
        L_0x01e9:
        L_0x01ea:
            r9 = r3
            r27 = r4
            r32 = r5
            r5 = r19
            r4 = r21
            r24 = 0
            goto L_0x0242
        L_0x01f6:
            r0 = move-exception
            r2 = r0
        L_0x01f8:
            if (r27 == 0) goto L_0x0205
            r27.release()     // Catch:{ Exception -> 0x01fe }
            goto L_0x0205
        L_0x01fe:
            r0 = move-exception
            r5 = r0
            r0 = r5
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x0206
        L_0x0205:
        L_0x0206:
            throw r2
        L_0x0207:
            r29 = r2
            r30 = r3
        L_0x020b:
            org.telegram.messenger.audioinfo.AudioInfo r0 = org.telegram.messenger.audioinfo.AudioInfo.getAudioInfo(r17)
            if (r0 == 0) goto L_0x0235
            long r2 = r0.getDuration()
            r24 = 0
            int r9 = (r2 > r24 ? 1 : (r2 == r24 ? 0 : -1))
            if (r9 == 0) goto L_0x0230
            java.lang.String r9 = r0.getArtist()
            java.lang.String r19 = r0.getTitle()
            r30 = 1000(0x3e8, double:4.94E-321)
            r27 = r4
            r32 = r5
            long r4 = r2 / r30
            int r5 = (int) r4
            r21 = r5
            r3 = r9
            goto L_0x023d
        L_0x0230:
            r27 = r4
            r32 = r5
            goto L_0x023b
        L_0x0235:
            r27 = r4
            r32 = r5
            r24 = 0
        L_0x023b:
            r3 = r30
        L_0x023d:
            r9 = r3
            r5 = r19
            r4 = r21
        L_0x0242:
            java.lang.String r3 = ""
            if (r4 == 0) goto L_0x027a
            org.telegram.tgnet.TLRPC$TL_documentAttributeAudio r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAudio
            r0.<init>()
            r2 = r0
            r2.duration = r4
            r2.title = r5
            r2.performer = r9
            java.lang.String r0 = r2.title
            if (r0 != 0) goto L_0x0258
            r2.title = r3
        L_0x0258:
            int r0 = r2.flags
            r19 = 1
            r0 = r0 | 1
            r2.flags = r0
            java.lang.String r0 = r2.performer
            if (r0 != 0) goto L_0x0266
            r2.performer = r3
        L_0x0266:
            int r0 = r2.flags
            r19 = 2
            r0 = r0 | 2
            r2.flags = r0
            if (r20 == 0) goto L_0x0276
            r19 = r4
            r4 = 1
            r2.voice = r4
            goto L_0x0278
        L_0x0276:
            r19 = r4
        L_0x0278:
            r4 = r2
            goto L_0x027e
        L_0x027a:
            r19 = r4
            r4 = r29
        L_0x027e:
            r0 = 0
            if (r1 == 0) goto L_0x02d2
            java.lang.String r2 = "attheme"
            boolean r2 = r1.endsWith(r2)
            if (r2 == 0) goto L_0x0292
            r0 = 1
            r21 = r0
            r29 = r4
            r30 = r5
            r5 = r1
            goto L_0x02d9
        L_0x0292:
            if (r4 == 0) goto L_0x02b4
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r1)
            r21 = r0
            java.lang.String r0 = "audio"
            r2.append(r0)
            r29 = r4
            r30 = r5
            long r4 = r17.length()
            r2.append(r4)
            java.lang.String r0 = r2.toString()
            r5 = r0
            goto L_0x02d9
        L_0x02b4:
            r21 = r0
            r29 = r4
            r30 = r5
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r1)
            r0.append(r3)
            long r4 = r17.length()
            r0.append(r4)
            java.lang.String r0 = r0.toString()
            r5 = r0
            goto L_0x02d9
        L_0x02d2:
            r21 = r0
            r29 = r4
            r30 = r5
            r5 = r1
        L_0x02d9:
            r0 = 0
            r1 = 0
            r31 = 4
            if (r21 != 0) goto L_0x0395
            if (r12 != 0) goto L_0x0395
            org.telegram.messenger.MessagesStorage r2 = r48.getMessagesStorage()
            if (r12 != 0) goto L_0x02e9
            r4 = 1
            goto L_0x02ea
        L_0x02e9:
            r4 = 4
        L_0x02ea:
            java.lang.Object[] r2 = r2.getSentFile(r5, r4)
            if (r2 == 0) goto L_0x0305
            r33 = r0
            r4 = 0
            r0 = r2[r4]
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r0 == 0) goto L_0x0307
            r0 = r2[r4]
            org.telegram.tgnet.TLRPC$TL_document r0 = (org.telegram.tgnet.TLRPC.TL_document) r0
            r4 = 1
            r33 = r2[r4]
            r1 = r33
            java.lang.String r1 = (java.lang.String) r1
            goto L_0x0309
        L_0x0305:
            r33 = r0
        L_0x0307:
            r0 = r33
        L_0x0309:
            if (r0 != 0) goto L_0x0358
            boolean r4 = r10.equals(r5)
            if (r4 != 0) goto L_0x0358
            if (r12 != 0) goto L_0x0358
            org.telegram.messenger.MessagesStorage r4 = r48.getMessagesStorage()
            r33 = r0
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r10)
            r35 = r1
            r34 = r2
            long r1 = r17.length()
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            if (r12 != 0) goto L_0x0334
            r1 = 1
            goto L_0x0335
        L_0x0334:
            r1 = 4
        L_0x0335:
            java.lang.Object[] r2 = r4.getSentFile(r0, r1)
            if (r2 == 0) goto L_0x0352
            r4 = 0
            r0 = r2[r4]
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r0 == 0) goto L_0x0353
            r0 = r2[r4]
            org.telegram.tgnet.TLRPC$TL_document r0 = (org.telegram.tgnet.TLRPC.TL_document) r0
            r1 = 1
            r33 = r2[r1]
            r1 = r33
            java.lang.String r1 = (java.lang.String) r1
            r35 = r1
            r34 = r2
            goto L_0x0361
        L_0x0352:
            r4 = 0
        L_0x0353:
            r34 = r2
            r0 = r33
            goto L_0x0361
        L_0x0358:
            r33 = r0
            r35 = r1
            r34 = r2
            r4 = 0
            r0 = r33
        L_0x0361:
            r33 = 0
            r36 = 0
            r1 = r48
            r2 = r12
            r38 = r3
            r3 = r0
            r39 = r29
            r29 = r19
            r19 = -1
            r4 = r10
            r13 = r5
            r14 = r22
            r15 = r23
            r22 = r30
            r23 = r9
            r9 = r32
            r5 = r33
            r30 = r12
            r49 = r13
            r13 = r6
            r45 = r10
            r10 = r7
            r46 = r24
            r24 = r45
            r25 = r11
            r11 = r46
            r6 = r36
            ensureMediaThumbExists(r1, r2, r3, r4, r5, r6)
            goto L_0x03bd
        L_0x0395:
            r33 = r0
            r38 = r3
            r49 = r5
            r13 = r6
            r14 = r22
            r15 = r23
            r39 = r29
            r22 = r30
            r23 = r9
            r30 = r12
            r29 = r19
            r9 = r32
            r19 = -1
            r45 = r10
            r10 = r7
            r46 = r24
            r24 = r45
            r25 = r11
            r11 = r46
            r35 = r1
            r0 = r33
        L_0x03bd:
            java.lang.String r1 = "image/webp"
            if (r0 != 0) goto L_0x0573
            org.telegram.tgnet.TLRPC$TL_document r2 = new org.telegram.tgnet.TLRPC$TL_document
            r2.<init>()
            r2.id = r11
            org.telegram.tgnet.ConnectionsManager r0 = r48.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r2.date = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeFilename r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeFilename
            r0.<init>()
            r3 = r0
            r3.file_name = r14
            r7 = 0
            byte[] r0 = new byte[r7]
            r2.file_reference = r0
            java.util.ArrayList r0 = r2.attributes
            r0.add(r3)
            long r4 = r17.length()
            r2.size = r4
            r2.dc_id = r7
            r6 = r39
            if (r6 == 0) goto L_0x03f5
            java.util.ArrayList r0 = r2.attributes
            r0.add(r6)
        L_0x03f5:
            int r0 = r18.length()
            java.lang.String r4 = "application/octet-stream"
            if (r0 == 0) goto L_0x047f
            int r0 = r27.hashCode()
            switch(r0) {
                case 106458: goto L_0x043b;
                case 108272: goto L_0x0431;
                case 109967: goto L_0x0427;
                case 3145576: goto L_0x041d;
                case 3418175: goto L_0x0413;
                case 3645340: goto L_0x0407;
                default: goto L_0x0404;
            }
        L_0x0404:
            r5 = r27
            goto L_0x0445
        L_0x0407:
            java.lang.String r0 = "webp"
            r5 = r27
            boolean r0 = r5.equals(r0)
            if (r0 == 0) goto L_0x0445
            r0 = 0
            goto L_0x0446
        L_0x0413:
            r5 = r27
            boolean r0 = r5.equals(r13)
            if (r0 == 0) goto L_0x0445
            r0 = 1
            goto L_0x0446
        L_0x041d:
            r5 = r27
            boolean r0 = r5.equals(r9)
            if (r0 == 0) goto L_0x0445
            r0 = 5
            goto L_0x0446
        L_0x0427:
            r5 = r27
            boolean r0 = r5.equals(r8)
            if (r0 == 0) goto L_0x0445
            r0 = 4
            goto L_0x0446
        L_0x0431:
            r5 = r27
            boolean r0 = r5.equals(r15)
            if (r0 == 0) goto L_0x0445
            r0 = 2
            goto L_0x0446
        L_0x043b:
            r5 = r27
            boolean r0 = r5.equals(r10)
            if (r0 == 0) goto L_0x0445
            r0 = 3
            goto L_0x0446
        L_0x0445:
            r0 = -1
        L_0x0446:
            switch(r0) {
                case 0: goto L_0x0477;
                case 1: goto L_0x0470;
                case 2: goto L_0x0469;
                case 3: goto L_0x0462;
                case 4: goto L_0x045b;
                case 5: goto L_0x0454;
                default: goto L_0x0449;
            }
        L_0x0449:
            r13 = r25
            java.lang.String r0 = r13.getMimeTypeFromExtension(r5)
            if (r0 == 0) goto L_0x047c
            r2.mime_type = r0
            goto L_0x047e
        L_0x0454:
            java.lang.String r0 = "audio/flac"
            r2.mime_type = r0
            r13 = r25
            goto L_0x047e
        L_0x045b:
            java.lang.String r0 = "audio/ogg"
            r2.mime_type = r0
            r13 = r25
            goto L_0x047e
        L_0x0462:
            java.lang.String r0 = "audio/m4a"
            r2.mime_type = r0
            r13 = r25
            goto L_0x047e
        L_0x0469:
            java.lang.String r0 = "audio/mpeg"
            r2.mime_type = r0
            r13 = r25
            goto L_0x047e
        L_0x0470:
            java.lang.String r0 = "audio/opus"
            r2.mime_type = r0
            r13 = r25
            goto L_0x047e
        L_0x0477:
            r2.mime_type = r1
            r13 = r25
            goto L_0x047e
        L_0x047c:
            r2.mime_type = r4
        L_0x047e:
            goto L_0x0485
        L_0x047f:
            r13 = r25
            r5 = r27
            r2.mime_type = r4
        L_0x0485:
            r4 = 0
            if (r62 != 0) goto L_0x04e0
            java.lang.String r0 = r2.mime_type
            java.lang.String r8 = "image/gif"
            boolean r0 = r0.equals(r8)
            if (r0 == 0) goto L_0x04e0
            if (r59 == 0) goto L_0x04a0
            long r8 = r59.getGroupIdForUse()
            int r0 = (r8 > r11 ? 1 : (r8 == r11 ? 0 : -1))
            if (r0 != 0) goto L_0x049d
            goto L_0x04a0
        L_0x049d:
            r10 = r30
            goto L_0x04e2
        L_0x04a0:
            java.lang.String r0 = r17.getAbsolutePath()     // Catch:{ Exception -> 0x04d9 }
            r8 = 1119092736(0x42b40000, float:90.0)
            r9 = 1
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r4, r8, r8, r9)     // Catch:{ Exception -> 0x04d9 }
            if (r0 == 0) goto L_0x04d6
            java.lang.String r9 = "animation.gif"
            r3.file_name = r9     // Catch:{ Exception -> 0x04d9 }
            java.util.ArrayList r9 = r2.attributes     // Catch:{ Exception -> 0x04d9 }
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r10 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated     // Catch:{ Exception -> 0x04d9 }
            r10.<init>()     // Catch:{ Exception -> 0x04d9 }
            r9.add(r10)     // Catch:{ Exception -> 0x04d9 }
            r9 = 55
            r10 = r30
            org.telegram.tgnet.TLRPC$PhotoSize r8 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r0, r8, r8, r9, r10)     // Catch:{ Exception -> 0x04d4 }
            if (r8 == 0) goto L_0x04d0
            java.util.ArrayList r9 = r2.thumbs     // Catch:{ Exception -> 0x04d4 }
            r9.add(r8)     // Catch:{ Exception -> 0x04d4 }
            int r9 = r2.flags     // Catch:{ Exception -> 0x04d4 }
            r11 = 1
            r9 = r9 | r11
            r2.flags = r9     // Catch:{ Exception -> 0x04d4 }
        L_0x04d0:
            r0.recycle()     // Catch:{ Exception -> 0x04d4 }
            goto L_0x04d8
        L_0x04d4:
            r0 = move-exception
            goto L_0x04dc
        L_0x04d6:
            r10 = r30
        L_0x04d8:
            goto L_0x04e2
        L_0x04d9:
            r0 = move-exception
            r10 = r30
        L_0x04dc:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x04e2
        L_0x04e0:
            r10 = r30
        L_0x04e2:
            java.lang.String r0 = r2.mime_type
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L_0x056b
            if (r59 != 0) goto L_0x056b
            android.graphics.BitmapFactory$Options r0 = new android.graphics.BitmapFactory$Options
            r0.<init>()
            r8 = r0
            r9 = 1
            r8.inJustDecodeBounds = r9     // Catch:{ Exception -> 0x0526 }
            java.io.RandomAccessFile r0 = new java.io.RandomAccessFile     // Catch:{ Exception -> 0x0526 }
            java.lang.String r9 = "r"
            r11 = r24
            r0.<init>(r11, r9)     // Catch:{ Exception -> 0x0522 }
            java.nio.channels.FileChannel r39 = r0.getChannel()     // Catch:{ Exception -> 0x0522 }
            java.nio.channels.FileChannel$MapMode r40 = java.nio.channels.FileChannel.MapMode.READ_ONLY     // Catch:{ Exception -> 0x0522 }
            r41 = 0
            int r9 = r11.length()     // Catch:{ Exception -> 0x0522 }
            r27 = r5
            long r4 = (long) r9
            r43 = r4
            java.nio.MappedByteBuffer r4 = r39.map(r40, r41, r43)     // Catch:{ Exception -> 0x0520 }
            int r5 = r4.limit()     // Catch:{ Exception -> 0x0520 }
            r9 = 0
            r12 = 1
            org.telegram.messenger.Utilities.loadWebpImage(r9, r4, r5, r8, r12)     // Catch:{ Exception -> 0x0520 }
            r0.close()     // Catch:{ Exception -> 0x0520 }
            goto L_0x052e
        L_0x0520:
            r0 = move-exception
            goto L_0x052b
        L_0x0522:
            r0 = move-exception
            r27 = r5
            goto L_0x052b
        L_0x0526:
            r0 = move-exception
            r27 = r5
            r11 = r24
        L_0x052b:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x052e:
            int r0 = r8.outWidth
            if (r0 == 0) goto L_0x0568
            int r0 = r8.outHeight
            if (r0 == 0) goto L_0x0568
            int r0 = r8.outWidth
            r4 = 800(0x320, float:1.121E-42)
            if (r0 > r4) goto L_0x0568
            int r0 = r8.outHeight
            if (r0 > r4) goto L_0x0568
            org.telegram.tgnet.TLRPC$TL_documentAttributeSticker r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeSticker
            r0.<init>()
            r9 = r38
            r0.alt = r9
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r4 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty
            r4.<init>()
            r0.stickerset = r4
            java.util.ArrayList r4 = r2.attributes
            r4.add(r0)
            org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize r4 = new org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize
            r4.<init>()
            int r5 = r8.outWidth
            r4.w = r5
            int r5 = r8.outHeight
            r4.h = r5
            java.util.ArrayList r5 = r2.attributes
            r5.add(r4)
            goto L_0x0571
        L_0x0568:
            r9 = r38
            goto L_0x0571
        L_0x056b:
            r27 = r5
            r11 = r24
            r9 = r38
        L_0x0571:
            r0 = r2
            goto L_0x057e
        L_0x0573:
            r11 = r24
            r13 = r25
            r10 = r30
            r9 = r38
            r6 = r39
            r7 = 0
        L_0x057e:
            if (r57 == 0) goto L_0x0586
            java.lang.String r2 = r57.toString()
            r12 = r2
            goto L_0x0587
        L_0x0586:
            r12 = r9
        L_0x0587:
            r24 = r10
            r4 = r0
            r25 = r27
            r5 = r11
            r15 = r35
            java.util.HashMap r2 = new java.util.HashMap
            r2.<init>()
            r10 = r2
            if (r49 == 0) goto L_0x059f
            java.lang.String r2 = "originalPath"
            r8 = r49
            r10.put(r2, r8)
            goto L_0x05a1
        L_0x059f:
            r8 = r49
        L_0x05a1:
            java.lang.String r2 = "1"
            if (r62 == 0) goto L_0x05ac
            if (r6 != 0) goto L_0x05ac
            java.lang.String r3 = "forceDocument"
            r10.put(r3, r2)
        L_0x05ac:
            if (r15 == 0) goto L_0x05b3
            java.lang.String r3 = "parentObject"
            r10.put(r3, r15)
        L_0x05b3:
            java.lang.Integer r3 = java.lang.Integer.valueOf(r7)
            r27 = 0
            if (r65 == 0) goto L_0x061a
            r3 = r65[r7]
            java.lang.String r7 = r0.mime_type
            if (r7 == 0) goto L_0x05d8
            java.lang.String r7 = r0.mime_type
            java.lang.String r7 = r7.toLowerCase()
            boolean r1 = r7.startsWith(r1)
            if (r1 == 0) goto L_0x05d8
            java.lang.Integer r1 = java.lang.Integer.valueOf(r19)
            r7 = 0
            r65[r7] = r1
            r27 = 1
            r7 = r3
            goto L_0x061b
        L_0x05d8:
            java.lang.String r1 = r0.mime_type
            if (r1 == 0) goto L_0x05f8
            java.lang.String r1 = r0.mime_type
            java.lang.String r1 = r1.toLowerCase()
            java.lang.String r7 = "image/"
            boolean r1 = r1.startsWith(r7)
            if (r1 != 0) goto L_0x05fe
            java.lang.String r1 = r0.mime_type
            java.lang.String r1 = r1.toLowerCase()
            java.lang.String r7 = "video/mp4"
            boolean r1 = r1.startsWith(r7)
            if (r1 != 0) goto L_0x05fe
        L_0x05f8:
            boolean r1 = org.telegram.messenger.MessageObject.canPreviewDocument(r0)
            if (r1 == 0) goto L_0x0607
        L_0x05fe:
            r1 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r7 = 0
            r65[r7] = r1
            goto L_0x0618
        L_0x0607:
            r7 = 0
            if (r6 == 0) goto L_0x0612
            r1 = 2
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r65[r7] = r1
            goto L_0x0618
        L_0x0612:
            java.lang.Integer r1 = java.lang.Integer.valueOf(r7)
            r65[r7] = r1
        L_0x0618:
            r7 = r3
            goto L_0x061b
        L_0x061a:
            r7 = r3
        L_0x061b:
            if (r24 != 0) goto L_0x066f
            if (r60 == 0) goto L_0x066f
            if (r65 == 0) goto L_0x0640
            if (r7 == 0) goto L_0x0640
            r1 = 0
            r3 = r65[r1]
            if (r7 == r3) goto L_0x0640
            r39 = r6
            r49 = r7
            r6 = r60[r1]
            r3 = r48
            r1 = r64
            finishGroup(r3, r6, r1)
            java.security.SecureRandom r6 = org.telegram.messenger.Utilities.random
            long r6 = r6.nextLong()
            r19 = 0
            r60[r19] = r6
            goto L_0x0648
        L_0x0640:
            r3 = r48
            r1 = r64
            r39 = r6
            r49 = r7
        L_0x0648:
            if (r27 != 0) goto L_0x066b
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            r6.append(r9)
            r50 = r0
            r7 = 0
            r0 = r60[r7]
            r6.append(r0)
            java.lang.String r0 = r6.toString()
            java.lang.String r1 = "groupId"
            r10.put(r1, r0)
            if (r61 == 0) goto L_0x0678
            java.lang.String r0 = "final"
            r10.put(r0, r2)
            goto L_0x0678
        L_0x066b:
            r50 = r0
            r7 = 0
            goto L_0x0678
        L_0x066f:
            r3 = r48
            r50 = r0
            r39 = r6
            r49 = r7
            r7 = 0
        L_0x0678:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4 r0 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda4
            r1 = r0
            r2 = r59
            r3 = r48
            r19 = r39
            r6 = r10
            r26 = r49
            r28 = 0
            r7 = r15
            r30 = r8
            r8 = r53
            r32 = r10
            r31 = r11
            r10 = r55
            r33 = r13
            r11 = r56
            r13 = r58
            r34 = r14
            r14 = r63
            r36 = r15
            r15 = r64
            r1.<init>(r2, r3, r4, r5, r6, r7, r8, r10, r11, r12, r13, r14, r15)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            return r28
        L_0x06a6:
            r29 = r2
            r31 = r10
            r33 = r11
        L_0x06ac:
            r2 = 1
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.prepareSendingDocumentInternal(org.telegram.messenger.AccountInstance, java.lang.String, java.lang.String, android.net.Uri, java.lang.String, long, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, java.lang.CharSequence, java.util.ArrayList, org.telegram.messenger.MessageObject, long[], boolean, boolean, boolean, int, java.lang.Integer[]):int");
    }

    static /* synthetic */ void lambda$prepareSendingDocumentInternal$73(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_document documentFinal, String pathFinal, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, String captionFinal, ArrayList entities, boolean notify, int scheduleDate) {
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, documentFinal, pathFinal, params, false, parentFinal);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(documentFinal, (VideoEditedInfo) null, pathFinal, dialogId, replyToMsg, replyToTopMsg, captionFinal, entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentFinal, (MessageObject.SendAnimationData) null);
        }
    }

    private static boolean checkFileSize(AccountInstance accountInstance, Uri uri) {
        long len = 0;
        if (Build.VERSION.SDK_INT >= 19) {
            try {
                AssetFileDescriptor assetFileDescriptor = ApplicationLoader.applicationContext.getContentResolver().openAssetFileDescriptor(uri, "r", (CancellationSignal) null);
                if (assetFileDescriptor != null) {
                    long len2 = assetFileDescriptor.getLength();
                }
                Cursor cursor = ApplicationLoader.applicationContext.getContentResolver().query(uri, new String[]{"_size"}, (String) null, (String[]) null, (String) null);
                int sizeIndex = cursor.getColumnIndex("_size");
                cursor.moveToFirst();
                len = cursor.getLong(sizeIndex);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }
        return !FileLoader.checkUploadFileSize(accountInstance.getCurrentAccount(), len);
    }

    public static void prepareSendingDocument(AccountInstance accountInstance, String path, String originalPath, Uri uri, String caption, String mine, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, InputContentInfoCompat inputContent, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        ArrayList<Uri> uris;
        String str = path;
        String str2 = originalPath;
        Uri uri2 = uri;
        if ((str != null && str2 != null) || uri2 != null) {
            ArrayList<String> paths = new ArrayList<>();
            ArrayList<String> originalPaths = new ArrayList<>();
            if (uri2 != null) {
                ArrayList<Uri> uris2 = new ArrayList<>();
                uris2.add(uri2);
                uris = uris2;
            } else {
                uris = null;
            }
            if (str != null) {
                paths.add(str);
                originalPaths.add(str2);
            }
            ArrayList<String> arrayList = originalPaths;
            prepareSendingDocuments(accountInstance, paths, originalPaths, uris, caption, mine, dialogId, replyToMsg, replyToTopMsg, inputContent, editingMessageObject, notify, scheduleDate);
        }
    }

    public static void prepareSendingAudioDocuments(AccountInstance accountInstance, ArrayList<MessageObject> messageObjects, String caption, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        new Thread(new SendMessagesHelper$$ExternalSyntheticLambda1(messageObjects, dialogId, accountInstance, caption, editingMessageObject, replyToMsg, replyToTopMsg, notify, scheduleDate)).start();
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v17, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX WARNING: type inference failed for: r8v10, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0086  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0092  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0096  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x00af  */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x00b2  */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x00bd  */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x00c4  */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00e9  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00f0 A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingAudioDocuments$75(java.util.ArrayList r29, long r30, org.telegram.messenger.AccountInstance r32, java.lang.String r33, org.telegram.messenger.MessageObject r34, org.telegram.messenger.MessageObject r35, org.telegram.messenger.MessageObject r36, boolean r37, int r38) {
        /*
            int r0 = r29.size()
            r1 = 0
            r3 = 0
            r4 = 0
        L_0x0008:
            if (r4 >= r0) goto L_0x0115
            r5 = r29
            java.lang.Object r6 = r5.get(r4)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            org.telegram.tgnet.TLRPC$Message r7 = r6.messageOwner
            java.lang.String r7 = r7.attachPath
            java.io.File r8 = new java.io.File
            r8.<init>(r7)
            r21 = r8
            boolean r22 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)
            r8 = 1
            if (r22 != 0) goto L_0x0031
            if (r0 <= r8) goto L_0x0031
            int r9 = r3 % 10
            if (r9 != 0) goto L_0x0031
            java.security.SecureRandom r9 = org.telegram.messenger.Utilities.random
            long r1 = r9.nextLong()
            r3 = 0
        L_0x0031:
            if (r7 == 0) goto L_0x004d
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            r9.append(r7)
            java.lang.String r10 = "audio"
            r9.append(r10)
            long r10 = r21.length()
            r9.append(r10)
            java.lang.String r7 = r9.toString()
            r15 = r7
            goto L_0x004e
        L_0x004d:
            r15 = r7
        L_0x004e:
            r7 = 0
            r9 = 0
            if (r22 != 0) goto L_0x0082
            org.telegram.messenger.MessagesStorage r10 = r32.getMessagesStorage()
            if (r22 != 0) goto L_0x005a
            r11 = 1
            goto L_0x005b
        L_0x005a:
            r11 = 4
        L_0x005b:
            java.lang.Object[] r16 = r10.getSentFile(r15, r11)
            if (r16 == 0) goto L_0x0082
            r10 = 0
            r11 = r16[r10]
            boolean r11 = r11 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r11 == 0) goto L_0x0082
            r10 = r16[r10]
            r7 = r10
            org.telegram.tgnet.TLRPC$TL_document r7 = (org.telegram.tgnet.TLRPC.TL_document) r7
            r8 = r16[r8]
            r17 = r8
            java.lang.String r17 = (java.lang.String) r17
            r12 = 0
            r13 = 0
            r8 = r32
            r9 = r22
            r10 = r7
            r11 = r15
            ensureMediaThumbExists(r8, r9, r10, r11, r12, r13)
            r23 = r17
            goto L_0x0084
        L_0x0082:
            r23 = r9
        L_0x0084:
            if (r7 != 0) goto L_0x0092
            org.telegram.tgnet.TLRPC$Message r8 = r6.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r8.media
            org.telegram.tgnet.TLRPC$Document r8 = r8.document
            r7 = r8
            org.telegram.tgnet.TLRPC$TL_document r7 = (org.telegram.tgnet.TLRPC.TL_document) r7
            r24 = r7
            goto L_0x0094
        L_0x0092:
            r24 = r7
        L_0x0094:
            if (r22 == 0) goto L_0x00a9
            int r7 = org.telegram.messenger.DialogObject.getEncryptedChatId(r30)
            org.telegram.messenger.MessagesController r8 = r32.getMessagesController()
            java.lang.Integer r9 = java.lang.Integer.valueOf(r7)
            org.telegram.tgnet.TLRPC$EncryptedChat r8 = r8.getEncryptedChat(r9)
            if (r8 != 0) goto L_0x00a9
            return
        L_0x00a9:
            r10 = r24
            r14 = r23
            if (r4 != 0) goto L_0x00b2
            r18 = r33
            goto L_0x00b5
        L_0x00b2:
            r7 = 0
            r18 = r7
        L_0x00b5:
            java.util.HashMap r7 = new java.util.HashMap
            r7.<init>()
            r13 = r7
            if (r15 == 0) goto L_0x00c2
            java.lang.String r7 = "originalPath"
            r13.put(r7, r15)
        L_0x00c2:
            if (r14 == 0) goto L_0x00c9
            java.lang.String r7 = "parentObject"
            r13.put(r7, r14)
        L_0x00c9:
            int r3 = r3 + 1
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r8 = ""
            r7.append(r8)
            r7.append(r1)
            java.lang.String r7 = r7.toString()
            java.lang.String r8 = "groupId"
            r13.put(r8, r7)
            r7 = 10
            if (r3 == r7) goto L_0x00e9
            int r7 = r0 + -1
            if (r4 != r7) goto L_0x00f0
        L_0x00e9:
            java.lang.String r7 = "final"
            java.lang.String r8 = "1"
            r13.put(r7, r8)
        L_0x00f0:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6 r25 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda6
            r7 = r25
            r8 = r34
            r9 = r32
            r11 = r6
            r12 = r13
            r26 = r13
            r13 = r14
            r28 = r14
            r27 = r15
            r14 = r30
            r16 = r35
            r17 = r36
            r19 = r37
            r20 = r38
            r7.<init>(r8, r9, r10, r11, r12, r13, r14, r16, r17, r18, r19, r20)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r25)
            int r4 = r4 + 1
            goto L_0x0008
        L_0x0115:
            r5 = r29
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingAudioDocuments$75(java.util.ArrayList, long, org.telegram.messenger.AccountInstance, java.lang.String, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, boolean, int):void");
    }

    static /* synthetic */ void lambda$prepareSendingAudioDocuments$74(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_document documentFinal, MessageObject messageObject, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, String captionFinal, boolean notify, int scheduleDate) {
        MessageObject messageObject2 = messageObject;
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, documentFinal, messageObject2.messageOwner.attachPath, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(documentFinal, (VideoEditedInfo) null, messageObject2.messageOwner.attachPath, dialogId, replyToMsg, replyToTopMsg, captionFinal, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentFinal, (MessageObject.SendAnimationData) null);
    }

    private static void finishGroup(AccountInstance accountInstance, long groupId, int scheduleDate) {
        AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda3(accountInstance, groupId, scheduleDate));
    }

    static /* synthetic */ void lambda$finishGroup$76(AccountInstance accountInstance, long groupId, int scheduleDate) {
        SendMessagesHelper instance = accountInstance.getSendMessagesHelper();
        HashMap<String, ArrayList<DelayedMessage>> hashMap = instance.delayedMessages;
        ArrayList<DelayedMessage> arrayList = hashMap.get("group_" + groupId);
        if (arrayList != null && !arrayList.isEmpty()) {
            DelayedMessage message = arrayList.get(0);
            MessageObject prevMessage = message.messageObjects.get(message.messageObjects.size() - 1);
            message.finalGroupMessage = prevMessage.getId();
            prevMessage.messageOwner.params.put("final", "1");
            TLRPC.TL_messages_messages messagesRes = new TLRPC.TL_messages_messages();
            messagesRes.messages.add(prevMessage.messageOwner);
            accountInstance.getMessagesStorage().putMessages((TLRPC.messages_Messages) messagesRes, message.peer, -2, 0, false, scheduleDate != 0);
            instance.sendReadyToSendGroup(message, true, true);
        }
    }

    public static void prepareSendingDocuments(AccountInstance accountInstance, ArrayList<String> paths, ArrayList<String> originalPaths, ArrayList<Uri> uris, String caption, String mime, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, InputContentInfoCompat inputContent, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        if (paths != null || originalPaths != null || uris != null) {
            if (paths == null || originalPaths == null || paths.size() == originalPaths.size()) {
                DispatchQueue dispatchQueue = Utilities.globalQueue;
                SendMessagesHelper$$ExternalSyntheticLambda33 sendMessagesHelper$$ExternalSyntheticLambda33 = r0;
                SendMessagesHelper$$ExternalSyntheticLambda33 sendMessagesHelper$$ExternalSyntheticLambda332 = new SendMessagesHelper$$ExternalSyntheticLambda33(dialogId, paths, caption, accountInstance, scheduleDate, originalPaths, mime, replyToMsg, replyToTopMsg, editingMessageObject, inputContent, notify, uris);
                dispatchQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda33);
            }
        }
    }

    static /* synthetic */ void lambda$prepareSendingDocuments$77(long dialogId, ArrayList paths, String caption, AccountInstance accountInstance, int scheduleDate, ArrayList originalPaths, String mime, MessageObject replyToMsg, MessageObject replyToTopMsg, MessageObject editingMessageObject, InputContentInfoCompat inputContent, boolean notify, ArrayList uris) {
        long[] groupId;
        Integer[] docType;
        ArrayList arrayList = paths;
        AccountInstance accountInstance2 = accountInstance;
        int i = scheduleDate;
        ArrayList arrayList2 = uris;
        int error = 0;
        int i2 = 1;
        long[] groupId2 = new long[1];
        int mediaCount = 0;
        Integer[] docType2 = new Integer[1];
        boolean isEncrypted = DialogObject.isEncryptedDialog(dialogId);
        int i3 = 10;
        if (arrayList != null) {
            int count = paths.size();
            int error2 = 0;
            int a = 0;
            while (a < count) {
                String captionFinal = a == 0 ? caption : null;
                if (!isEncrypted && count > i2 && mediaCount % 10 == 0) {
                    if (groupId2[0] != 0) {
                        finishGroup(accountInstance2, groupId2[0], i);
                    }
                    groupId2[0] = Utilities.random.nextLong();
                    mediaCount = 0;
                }
                int mediaCount2 = mediaCount + 1;
                long prevGroupId = groupId2[0];
                int mediaCount3 = mediaCount2;
                int count2 = count;
                int a2 = a;
                Integer[] docType3 = docType2;
                long[] groupId3 = groupId2;
                error2 = prepareSendingDocumentInternal(accountInstance, (String) arrayList.get(a), (String) originalPaths.get(a), (Uri) null, mime, dialogId, replyToMsg, replyToTopMsg, captionFinal, (ArrayList<TLRPC.MessageEntity>) null, editingMessageObject, groupId3, mediaCount2 == i3 || a == count + -1, inputContent == null, notify, scheduleDate, docType3);
                if (prevGroupId != groupId3[0] || groupId3[0] == -1) {
                    mediaCount = 1;
                } else {
                    mediaCount = mediaCount3;
                }
                a = a2 + 1;
                accountInstance2 = accountInstance;
                i = scheduleDate;
                ArrayList arrayList3 = uris;
                count = count2;
                docType2 = docType3;
                groupId2 = groupId3;
                i3 = 10;
                i2 = 1;
            }
            int i4 = a;
            docType = docType2;
            groupId = groupId2;
            error = error2;
        } else {
            docType = docType2;
            groupId = groupId2;
        }
        ArrayList arrayList4 = uris;
        if (arrayList4 != null) {
            groupId[0] = 0;
            int mediaCount4 = 0;
            int count3 = uris.size();
            int error3 = error;
            int a3 = 0;
            while (a3 < uris.size()) {
                String captionFinal2 = (a3 == 0 && (arrayList == null || paths.size() == 0)) ? caption : null;
                if (isEncrypted) {
                    AccountInstance accountInstance3 = accountInstance;
                    int i5 = scheduleDate;
                } else if (count3 <= 1 || mediaCount4 % 10 != 0) {
                    AccountInstance accountInstance4 = accountInstance;
                    int i6 = scheduleDate;
                } else {
                    if (groupId[0] != 0) {
                        finishGroup(accountInstance, groupId[0], scheduleDate);
                    } else {
                        AccountInstance accountInstance5 = accountInstance;
                        int i7 = scheduleDate;
                    }
                    groupId[0] = Utilities.random.nextLong();
                    mediaCount4 = 0;
                }
                int mediaCount5 = mediaCount4 + 1;
                long prevGroupId2 = groupId[0];
                int mediaCount6 = mediaCount5;
                int a4 = a3;
                int count4 = count3;
                error3 = prepareSendingDocumentInternal(accountInstance, (String) null, (String) null, (Uri) arrayList4.get(a3), mime, dialogId, replyToMsg, replyToTopMsg, captionFinal2, (ArrayList<TLRPC.MessageEntity>) null, editingMessageObject, groupId, mediaCount5 == 10 || a3 == count3 + -1, inputContent == null, notify, scheduleDate, docType);
                if (prevGroupId2 != groupId[0] || groupId[0] == -1) {
                    mediaCount4 = 1;
                } else {
                    mediaCount4 = mediaCount6;
                }
                a3 = a4 + 1;
                arrayList4 = uris;
                count3 = count4;
            }
            int i8 = a3;
            int i9 = count3;
            error = error3;
        }
        if (inputContent != null) {
            inputContent.releasePermission();
        }
        handleError(error, accountInstance);
    }

    private static void handleError(int error, AccountInstance accountInstance) {
        if (error != 0) {
            AndroidUtilities.runOnUIThread(new SendMessagesHelper$$ExternalSyntheticLambda22(error, accountInstance));
        }
    }

    static /* synthetic */ void lambda$handleError$78(int finalError, AccountInstance accountInstance) {
        if (finalError == 1) {
            try {
                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.showBulletin, 1, LocaleController.getString("UnsupportedAttachment", NUM));
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else if (finalError == 2) {
            NotificationCenter.getInstance(accountInstance.getCurrentAccount()).postNotificationName(NotificationCenter.currentUserShowLimitReachedDialog, 6);
        }
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String imageFilePath, Uri imageUri, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, ArrayList<TLRPC.InputDocument> stickers, InputContentInfoCompat inputContent, int ttl, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        prepareSendingPhoto(accountInstance, imageFilePath, (String) null, imageUri, dialogId, replyToMsg, replyToTopMsg, caption, entities, stickers, inputContent, ttl, editingMessageObject, (VideoEditedInfo) null, notify, scheduleDate, false);
    }

    public static void prepareSendingPhoto(AccountInstance accountInstance, String imageFilePath, String thumbFilePath, Uri imageUri, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, ArrayList<TLRPC.InputDocument> stickers, InputContentInfoCompat inputContent, int ttl, MessageObject editingMessageObject, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate, boolean forceDocument) {
        ArrayList<TLRPC.InputDocument> arrayList = stickers;
        SendingMediaInfo info = new SendingMediaInfo();
        info.path = imageFilePath;
        info.thumbPath = thumbFilePath;
        info.uri = imageUri;
        if (caption != null) {
            info.caption = caption.toString();
        }
        info.entities = entities;
        info.ttl = ttl;
        if (arrayList != null) {
            info.masks = new ArrayList<>(arrayList);
        }
        info.videoEditedInfo = videoEditedInfo;
        ArrayList<SendingMediaInfo> infos = new ArrayList<>();
        infos.add(info);
        prepareSendingMedia(accountInstance, infos, dialogId, replyToMsg, replyToTopMsg, inputContent, forceDocument, false, editingMessageObject, notify, scheduleDate);
    }

    public static void prepareSendingBotContextResult(AccountInstance accountInstance, TLRPC.BotInlineResult result, HashMap<String, String> params, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate) {
        TLRPC.BotInlineResult botInlineResult = result;
        if (botInlineResult != null) {
            if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaAuto) {
                new Thread(new SendMessagesHelper$$ExternalSyntheticLambda44(dialogId, result, accountInstance, params, replyToMsg, replyToTopMsg, notify, scheduleDate)).run();
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageText) {
                TLRPC.WebPage webPage = null;
                if (DialogObject.isEncryptedDialog(dialogId)) {
                    int a = 0;
                    while (true) {
                        if (a >= botInlineResult.send_message.entities.size()) {
                            break;
                        }
                        TLRPC.MessageEntity entity = botInlineResult.send_message.entities.get(a);
                        if (entity instanceof TLRPC.TL_messageEntityUrl) {
                            webPage = new TLRPC.TL_webPagePending();
                            webPage.url = botInlineResult.send_message.message.substring(entity.offset, entity.offset + entity.length);
                            break;
                        }
                        a++;
                    }
                }
                accountInstance.getSendMessagesHelper().sendMessage(botInlineResult.send_message.message, dialogId, replyToMsg, replyToTopMsg, webPage, !botInlineResult.send_message.no_webpage, botInlineResult.send_message.entities, botInlineResult.send_message.reply_markup, params, notify, scheduleDate, (MessageObject.SendAnimationData) null);
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaVenue) {
                TLRPC.TL_messageMediaVenue venue = new TLRPC.TL_messageMediaVenue();
                venue.geo = botInlineResult.send_message.geo;
                venue.address = botInlineResult.send_message.address;
                venue.title = botInlineResult.send_message.title;
                venue.provider = botInlineResult.send_message.provider;
                venue.venue_id = botInlineResult.send_message.venue_id;
                String str = botInlineResult.send_message.venue_type;
                venue.venue_id = str;
                venue.venue_type = str;
                if (venue.venue_type == null) {
                    venue.venue_type = "";
                }
                accountInstance.getSendMessagesHelper().sendMessage((TLRPC.MessageMedia) venue, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaGeo) {
                if (botInlineResult.send_message.period == 0 && botInlineResult.send_message.proximity_notification_radius == 0) {
                    TLRPC.TL_messageMediaGeo location = new TLRPC.TL_messageMediaGeo();
                    location.geo = botInlineResult.send_message.geo;
                    location.heading = botInlineResult.send_message.heading;
                    accountInstance.getSendMessagesHelper().sendMessage((TLRPC.MessageMedia) location, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
                    return;
                }
                TLRPC.TL_messageMediaGeoLive location2 = new TLRPC.TL_messageMediaGeoLive();
                location2.period = botInlineResult.send_message.period != 0 ? botInlineResult.send_message.period : 900;
                location2.geo = botInlineResult.send_message.geo;
                location2.heading = botInlineResult.send_message.heading;
                location2.proximity_notification_radius = botInlineResult.send_message.proximity_notification_radius;
                accountInstance.getSendMessagesHelper().sendMessage((TLRPC.MessageMedia) location2, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            } else if (botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaContact) {
                TLRPC.TL_user tL_user = new TLRPC.TL_user();
                tL_user.phone = botInlineResult.send_message.phone_number;
                tL_user.first_name = botInlineResult.send_message.first_name;
                tL_user.last_name = botInlineResult.send_message.last_name;
                TLRPC.TL_restrictionReason reason = new TLRPC.TL_restrictionReason();
                reason.text = botInlineResult.send_message.vcard;
                reason.platform = "";
                reason.reason = "";
                tL_user.restriction_reason.add(reason);
                accountInstance.getSendMessagesHelper().sendMessage((TLRPC.User) tL_user, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            } else if ((botInlineResult.send_message instanceof TLRPC.TL_botInlineMessageMediaInvoice) && !DialogObject.isEncryptedDialog(dialogId)) {
                TLRPC.TL_botInlineMessageMediaInvoice invoice = (TLRPC.TL_botInlineMessageMediaInvoice) botInlineResult.send_message;
                TLRPC.TL_messageMediaInvoice messageMediaInvoice = new TLRPC.TL_messageMediaInvoice();
                messageMediaInvoice.shipping_address_requested = invoice.shipping_address_requested;
                messageMediaInvoice.test = invoice.test;
                messageMediaInvoice.title = invoice.title;
                messageMediaInvoice.description = invoice.description;
                if (invoice.photo != null) {
                    messageMediaInvoice.photo = invoice.photo;
                    messageMediaInvoice.flags |= 1;
                }
                messageMediaInvoice.currency = invoice.currency;
                messageMediaInvoice.total_amount = invoice.total_amount;
                messageMediaInvoice.start_param = "";
                accountInstance.getSendMessagesHelper().sendMessage(messageMediaInvoice, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.reply_markup, params, notify, scheduleDate);
            }
        }
    }

    /* JADX WARNING: type inference failed for: r4v21, types: [org.telegram.tgnet.TLRPC$Photo] */
    /* JADX WARNING: type inference failed for: r4v24, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: Can't fix incorrect switch cases order */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:166:0x0492  */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x0498  */
    /* JADX WARNING: Removed duplicated region for block: B:172:0x04a4  */
    /* JADX WARNING: Removed duplicated region for block: B:183:0x04f8  */
    /* JADX WARNING: Removed duplicated region for block: B:187:0x053b  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingBotContextResult$80(long r28, org.telegram.tgnet.TLRPC.BotInlineResult r30, org.telegram.messenger.AccountInstance r31, java.util.HashMap r32, org.telegram.messenger.MessageObject r33, org.telegram.messenger.MessageObject r34, boolean r35, int r36) {
        /*
            r14 = r30
            r13 = r32
            boolean r24 = org.telegram.messenger.DialogObject.isEncryptedDialog(r28)
            r0 = 0
            r1 = 0
            r2 = 0
            r3 = 0
            java.lang.String r4 = r14.type
            java.lang.String r5 = "game"
            boolean r4 = r5.equals(r4)
            r8 = 1
            if (r4 == 0) goto L_0x0051
            if (r24 == 0) goto L_0x001a
            return
        L_0x001a:
            org.telegram.tgnet.TLRPC$TL_game r4 = new org.telegram.tgnet.TLRPC$TL_game
            r4.<init>()
            r3 = r4
            java.lang.String r4 = r14.title
            r3.title = r4
            java.lang.String r4 = r14.description
            r3.description = r4
            java.lang.String r4 = r14.id
            r3.short_name = r4
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            r3.photo = r4
            org.telegram.tgnet.TLRPC$Photo r4 = r3.photo
            if (r4 != 0) goto L_0x003b
            org.telegram.tgnet.TLRPC$TL_photoEmpty r4 = new org.telegram.tgnet.TLRPC$TL_photoEmpty
            r4.<init>()
            r3.photo = r4
        L_0x003b:
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r4 == 0) goto L_0x004a
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            r3.document = r4
            int r4 = r3.flags
            r4 = r4 | r8
            r3.flags = r4
        L_0x004a:
            r12 = r1
            r26 = r2
            r25 = r3
            goto L_0x04d8
        L_0x0051:
            boolean r4 = r14 instanceof org.telegram.tgnet.TLRPC.TL_botInlineMediaResult
            if (r4 == 0) goto L_0x0099
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            if (r4 == 0) goto L_0x0073
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r4 == 0) goto L_0x006b
            org.telegram.tgnet.TLRPC$Document r4 = r14.document
            r1 = r4
            org.telegram.tgnet.TLRPC$TL_document r1 = (org.telegram.tgnet.TLRPC.TL_document) r1
            r12 = r1
            r26 = r2
            r25 = r3
            goto L_0x04d8
        L_0x006b:
            r22 = r1
            r26 = r2
            r25 = r3
            goto L_0x04d6
        L_0x0073:
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            if (r4 == 0) goto L_0x0091
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r4 == 0) goto L_0x0089
            org.telegram.tgnet.TLRPC$Photo r4 = r14.photo
            r2 = r4
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            r12 = r1
            r26 = r2
            r25 = r3
            goto L_0x04d8
        L_0x0089:
            r22 = r1
            r26 = r2
            r25 = r3
            goto L_0x04d6
        L_0x0091:
            r22 = r1
            r26 = r2
            r25 = r3
            goto L_0x04d6
        L_0x0099:
            org.telegram.tgnet.TLRPC$WebDocument r4 = r14.content
            if (r4 == 0) goto L_0x04d0
            org.telegram.tgnet.TLRPC$WebDocument r4 = r14.content
            java.lang.String r4 = r4.url
            r6 = 0
            java.lang.String r4 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r4, r6)
            boolean r9 = android.text.TextUtils.isEmpty(r4)
            java.lang.String r10 = "."
            if (r9 == 0) goto L_0x00b7
            org.telegram.tgnet.TLRPC$WebDocument r9 = r14.content
            java.lang.String r9 = r9.mime_type
            java.lang.String r4 = org.telegram.messenger.FileLoader.getExtensionByMimeType(r9)
            goto L_0x00c6
        L_0x00b7:
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            r9.append(r10)
            r9.append(r4)
            java.lang.String r4 = r9.toString()
        L_0x00c6:
            java.io.File r9 = new java.io.File
            r11 = 4
            java.io.File r12 = org.telegram.messenger.FileLoader.getDirectory(r11)
            java.lang.StringBuilder r15 = new java.lang.StringBuilder
            r15.<init>()
            org.telegram.tgnet.TLRPC$WebDocument r5 = r14.content
            java.lang.String r5 = r5.url
            java.lang.String r5 = org.telegram.messenger.Utilities.MD5(r5)
            r15.append(r5)
            r15.append(r4)
            java.lang.String r5 = r15.toString()
            r9.<init>(r12, r5)
            r5 = r9
            boolean r9 = r5.exists()
            if (r9 == 0) goto L_0x00f4
            java.lang.String r0 = r5.getAbsolutePath()
            r9 = r0
            goto L_0x00f9
        L_0x00f4:
            org.telegram.tgnet.TLRPC$WebDocument r9 = r14.content
            java.lang.String r0 = r9.url
            r9 = r0
        L_0x00f9:
            java.lang.String r0 = r14.type
            int r12 = r0.hashCode()
            r16 = 5
            java.lang.String r15 = "voice"
            java.lang.String r11 = "video"
            java.lang.String r8 = "audio"
            java.lang.String r7 = "gif"
            java.lang.String r6 = "sticker"
            r21 = 2
            r22 = r1
            java.lang.String r1 = "file"
            switch(r12) {
                case -1890252483: goto L_0x0147;
                case 102340: goto L_0x013f;
                case 3143036: goto L_0x0137;
                case 93166550: goto L_0x012f;
                case 106642994: goto L_0x0125;
                case 112202875: goto L_0x011d;
                case 112386354: goto L_0x0115;
                default: goto L_0x0114;
            }
        L_0x0114:
            goto L_0x014f
        L_0x0115:
            boolean r0 = r0.equals(r15)
            if (r0 == 0) goto L_0x0114
            r0 = 1
            goto L_0x0150
        L_0x011d:
            boolean r0 = r0.equals(r11)
            if (r0 == 0) goto L_0x0114
            r0 = 3
            goto L_0x0150
        L_0x0125:
            java.lang.String r12 = "photo"
            boolean r0 = r0.equals(r12)
            if (r0 == 0) goto L_0x0114
            r0 = 6
            goto L_0x0150
        L_0x012f:
            boolean r0 = r0.equals(r8)
            if (r0 == 0) goto L_0x0114
            r0 = 0
            goto L_0x0150
        L_0x0137:
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L_0x0114
            r0 = 2
            goto L_0x0150
        L_0x013f:
            boolean r0 = r0.equals(r7)
            if (r0 == 0) goto L_0x0114
            r0 = 5
            goto L_0x0150
        L_0x0147:
            boolean r0 = r0.equals(r6)
            if (r0 == 0) goto L_0x0114
            r0 = 4
            goto L_0x0150
        L_0x014f:
            r0 = -1
        L_0x0150:
            java.lang.String r12 = "x"
            switch(r0) {
                case 0: goto L_0x01ba;
                case 1: goto L_0x01ba;
                case 2: goto L_0x01ba;
                case 3: goto L_0x01ba;
                case 4: goto L_0x01ba;
                case 5: goto L_0x01ba;
                case 6: goto L_0x0160;
                default: goto L_0x0155;
            }
        L_0x0155:
            r26 = r2
            r25 = r3
            r27 = r4
            r0 = r9
            r12 = r22
            goto L_0x04d8
        L_0x0160:
            boolean r0 = r5.exists()
            if (r0 == 0) goto L_0x016f
            org.telegram.messenger.SendMessagesHelper r0 = r31.getSendMessagesHelper()
            r1 = 0
            org.telegram.tgnet.TLRPC$TL_photo r2 = r0.generatePhotoSizes(r9, r1)
        L_0x016f:
            if (r2 != 0) goto L_0x01b1
            org.telegram.tgnet.TLRPC$TL_photo r0 = new org.telegram.tgnet.TLRPC$TL_photo
            r0.<init>()
            r2 = r0
            org.telegram.tgnet.ConnectionsManager r0 = r31.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r2.date = r0
            r1 = 0
            byte[] r0 = new byte[r1]
            r2.file_reference = r0
            org.telegram.tgnet.TLRPC$TL_photoSize r0 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r0.<init>()
            int[] r6 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r30)
            r7 = r6[r1]
            r0.w = r7
            r1 = 1
            r7 = r6[r1]
            r0.h = r7
            r0.size = r1
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r1 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r1.<init>()
            r0.location = r1
            r0.type = r12
            java.util.ArrayList r1 = r2.sizes
            r1.add(r0)
            r26 = r2
            r25 = r3
            r0 = r9
            r12 = r22
            goto L_0x04d8
        L_0x01b1:
            r26 = r2
            r25 = r3
            r0 = r9
            r12 = r22
            goto L_0x04d8
        L_0x01ba:
            org.telegram.tgnet.TLRPC$TL_document r0 = new org.telegram.tgnet.TLRPC$TL_document
            r0.<init>()
            r22 = r0
            r26 = r2
            r25 = r3
            r2 = 0
            r27 = r4
            r4 = r22
            r4.id = r2
            r4.size = r2
            r2 = 0
            r4.dc_id = r2
            org.telegram.tgnet.TLRPC$WebDocument r0 = r14.content
            java.lang.String r0 = r0.mime_type
            r4.mime_type = r0
            byte[] r0 = new byte[r2]
            r4.file_reference = r0
            org.telegram.tgnet.ConnectionsManager r0 = r31.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r4.date = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeFilename r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeFilename
            r0.<init>()
            r2 = r0
            java.util.ArrayList r0 = r4.attributes
            r0.add(r2)
            java.lang.String r0 = r14.type
            int r3 = r0.hashCode()
            switch(r3) {
                case -1890252483: goto L_0x0223;
                case 102340: goto L_0x021b;
                case 3143036: goto L_0x0213;
                case 93166550: goto L_0x020b;
                case 112202875: goto L_0x0203;
                case 112386354: goto L_0x01fb;
                default: goto L_0x01fa;
            }
        L_0x01fa:
            goto L_0x022b
        L_0x01fb:
            boolean r0 = r0.equals(r15)
            if (r0 == 0) goto L_0x01fa
            r15 = 1
            goto L_0x022c
        L_0x0203:
            boolean r0 = r0.equals(r11)
            if (r0 == 0) goto L_0x01fa
            r15 = 4
            goto L_0x022c
        L_0x020b:
            boolean r0 = r0.equals(r8)
            if (r0 == 0) goto L_0x01fa
            r15 = 2
            goto L_0x022c
        L_0x0213:
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L_0x01fa
            r15 = 3
            goto L_0x022c
        L_0x021b:
            boolean r0 = r0.equals(r7)
            if (r0 == 0) goto L_0x01fa
            r15 = 0
            goto L_0x022c
        L_0x0223:
            boolean r0 = r0.equals(r6)
            if (r0 == 0) goto L_0x01fa
            r15 = 5
            goto L_0x022c
        L_0x022b:
            r15 = -1
        L_0x022c:
            switch(r15) {
                case 0: goto L_0x03bc;
                case 1: goto L_0x03a3;
                case 2: goto L_0x0375;
                case 3: goto L_0x0345;
                case 4: goto L_0x02c1;
                case 5: goto L_0x0231;
                default: goto L_0x022f;
            }
        L_0x022f:
            goto L_0x048e
        L_0x0231:
            org.telegram.tgnet.TLRPC$TL_documentAttributeSticker r6 = new org.telegram.tgnet.TLRPC$TL_documentAttributeSticker
            r6.<init>()
            java.lang.String r7 = ""
            r6.alt = r7
            org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty r7 = new org.telegram.tgnet.TLRPC$TL_inputStickerSetEmpty
            r7.<init>()
            r6.stickerset = r7
            java.util.ArrayList r7 = r4.attributes
            r7.add(r6)
            org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize r7 = new org.telegram.tgnet.TLRPC$TL_documentAttributeImageSize
            r7.<init>()
            int[] r8 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r30)
            r11 = 0
            r15 = r8[r11]
            r7.w = r15
            r11 = 1
            r15 = r8[r11]
            r7.h = r15
            java.util.ArrayList r11 = r4.attributes
            r11.add(r7)
            java.lang.String r11 = "sticker.webp"
            r2.file_name = r11
            org.telegram.tgnet.TLRPC$WebDocument r11 = r14.thumb     // Catch:{ all -> 0x02bb }
            if (r11 == 0) goto L_0x02b9
            java.io.File r11 = new java.io.File     // Catch:{ all -> 0x02bb }
            r15 = 4
            java.io.File r15 = org.telegram.messenger.FileLoader.getDirectory(r15)     // Catch:{ all -> 0x02bb }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ all -> 0x02bb }
            r0.<init>()     // Catch:{ all -> 0x02bb }
            org.telegram.tgnet.TLRPC$WebDocument r3 = r14.thumb     // Catch:{ all -> 0x02bb }
            java.lang.String r3 = r3.url     // Catch:{ all -> 0x02bb }
            java.lang.String r3 = org.telegram.messenger.Utilities.MD5(r3)     // Catch:{ all -> 0x02bb }
            r0.append(r3)     // Catch:{ all -> 0x02bb }
            r0.append(r10)     // Catch:{ all -> 0x02bb }
            org.telegram.tgnet.TLRPC$WebDocument r3 = r14.thumb     // Catch:{ all -> 0x02bb }
            java.lang.String r3 = r3.url     // Catch:{ all -> 0x02bb }
            java.lang.String r10 = "webp"
            java.lang.String r3 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r3, r10)     // Catch:{ all -> 0x02bb }
            r0.append(r3)     // Catch:{ all -> 0x02bb }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x02bb }
            r11.<init>(r15, r0)     // Catch:{ all -> 0x02bb }
            java.lang.String r0 = r11.getAbsolutePath()     // Catch:{ all -> 0x02bb }
            r3 = 0
            r10 = 1119092736(0x42b40000, float:90.0)
            r11 = 1
            android.graphics.Bitmap r3 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r3, r10, r10, r11)     // Catch:{ all -> 0x02bb }
            if (r3 == 0) goto L_0x02b9
            r11 = 55
            r15 = 0
            org.telegram.tgnet.TLRPC$PhotoSize r10 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r3, r10, r10, r11, r15)     // Catch:{ all -> 0x02bb }
            if (r10 == 0) goto L_0x02b6
            java.util.ArrayList r11 = r4.thumbs     // Catch:{ all -> 0x02bb }
            r11.add(r10)     // Catch:{ all -> 0x02bb }
            int r11 = r4.flags     // Catch:{ all -> 0x02bb }
            r15 = 1
            r11 = r11 | r15
            r4.flags = r11     // Catch:{ all -> 0x02bb }
        L_0x02b6:
            r3.recycle()     // Catch:{ all -> 0x02bb }
        L_0x02b9:
            goto L_0x048e
        L_0x02bb:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x048e
        L_0x02c1:
            java.lang.String r0 = "video.mp4"
            r2.file_name = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r0.<init>()
            r3 = r0
            int[] r6 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r30)
            r7 = 0
            r0 = r6[r7]
            r3.w = r0
            r7 = 1
            r0 = r6[r7]
            r3.h = r0
            int r0 = org.telegram.messenger.MessageObject.getInlineResultDuration(r30)
            r3.duration = r0
            r3.supports_streaming = r7
            java.util.ArrayList r0 = r4.attributes
            r0.add(r3)
            org.telegram.tgnet.TLRPC$WebDocument r0 = r14.thumb     // Catch:{ all -> 0x033f }
            if (r0 == 0) goto L_0x033d
            java.io.File r0 = new java.io.File     // Catch:{ all -> 0x033f }
            r7 = 4
            java.io.File r7 = org.telegram.messenger.FileLoader.getDirectory(r7)     // Catch:{ all -> 0x033f }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ all -> 0x033f }
            r8.<init>()     // Catch:{ all -> 0x033f }
            org.telegram.tgnet.TLRPC$WebDocument r11 = r14.thumb     // Catch:{ all -> 0x033f }
            java.lang.String r11 = r11.url     // Catch:{ all -> 0x033f }
            java.lang.String r11 = org.telegram.messenger.Utilities.MD5(r11)     // Catch:{ all -> 0x033f }
            r8.append(r11)     // Catch:{ all -> 0x033f }
            r8.append(r10)     // Catch:{ all -> 0x033f }
            org.telegram.tgnet.TLRPC$WebDocument r10 = r14.thumb     // Catch:{ all -> 0x033f }
            java.lang.String r10 = r10.url     // Catch:{ all -> 0x033f }
            java.lang.String r11 = "jpg"
            java.lang.String r10 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r10, r11)     // Catch:{ all -> 0x033f }
            r8.append(r10)     // Catch:{ all -> 0x033f }
            java.lang.String r8 = r8.toString()     // Catch:{ all -> 0x033f }
            r0.<init>(r7, r8)     // Catch:{ all -> 0x033f }
            java.lang.String r0 = r0.getAbsolutePath()     // Catch:{ all -> 0x033f }
            r7 = 0
            r8 = 1119092736(0x42b40000, float:90.0)
            r10 = 1
            android.graphics.Bitmap r7 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r7, r8, r8, r10)     // Catch:{ all -> 0x033f }
            if (r7 == 0) goto L_0x033d
            r10 = 0
            r11 = 55
            org.telegram.tgnet.TLRPC$PhotoSize r8 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r7, r8, r8, r11, r10)     // Catch:{ all -> 0x033f }
            if (r8 == 0) goto L_0x033a
            java.util.ArrayList r10 = r4.thumbs     // Catch:{ all -> 0x033f }
            r10.add(r8)     // Catch:{ all -> 0x033f }
            int r10 = r4.flags     // Catch:{ all -> 0x033f }
            r11 = 1
            r10 = r10 | r11
            r4.flags = r10     // Catch:{ all -> 0x033f }
        L_0x033a:
            r7.recycle()     // Catch:{ all -> 0x033f }
        L_0x033d:
            goto L_0x048e
        L_0x033f:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x048e
        L_0x0345:
            org.telegram.tgnet.TLRPC$WebDocument r0 = r14.content
            java.lang.String r0 = r0.mime_type
            r3 = 47
            int r0 = r0.lastIndexOf(r3)
            r3 = -1
            if (r0 == r3) goto L_0x0371
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.String r6 = "file."
            r3.append(r6)
            org.telegram.tgnet.TLRPC$WebDocument r6 = r14.content
            java.lang.String r6 = r6.mime_type
            int r7 = r0 + 1
            java.lang.String r6 = r6.substring(r7)
            r3.append(r6)
            java.lang.String r3 = r3.toString()
            r2.file_name = r3
            goto L_0x048e
        L_0x0371:
            r2.file_name = r1
            goto L_0x048e
        L_0x0375:
            org.telegram.tgnet.TLRPC$TL_documentAttributeAudio r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAudio
            r0.<init>()
            int r3 = org.telegram.messenger.MessageObject.getInlineResultDuration(r30)
            r0.duration = r3
            java.lang.String r3 = r14.title
            r0.title = r3
            int r3 = r0.flags
            r6 = 1
            r3 = r3 | r6
            r0.flags = r3
            java.lang.String r3 = r14.description
            if (r3 == 0) goto L_0x0398
            java.lang.String r3 = r14.description
            r0.performer = r3
            int r3 = r0.flags
            r3 = r3 | 2
            r0.flags = r3
        L_0x0398:
            java.lang.String r3 = "audio.mp3"
            r2.file_name = r3
            java.util.ArrayList r3 = r4.attributes
            r3.add(r0)
            goto L_0x048e
        L_0x03a3:
            org.telegram.tgnet.TLRPC$TL_documentAttributeAudio r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAudio
            r0.<init>()
            int r3 = org.telegram.messenger.MessageObject.getInlineResultDuration(r30)
            r0.duration = r3
            r3 = 1
            r0.voice = r3
            java.lang.String r3 = "audio.ogg"
            r2.file_name = r3
            java.util.ArrayList r3 = r4.attributes
            r3.add(r0)
            goto L_0x048e
        L_0x03bc:
            r11 = 55
            java.lang.String r0 = "animation.gif"
            r2.file_name = r0
            java.lang.String r0 = "mp4"
            boolean r3 = r9.endsWith(r0)
            java.lang.String r6 = "video/mp4"
            if (r3 == 0) goto L_0x03d9
            r4.mime_type = r6
            java.util.ArrayList r3 = r4.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r7 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r7.<init>()
            r3.add(r7)
            goto L_0x03dd
        L_0x03d9:
            java.lang.String r3 = "image/gif"
            r4.mime_type = r3
        L_0x03dd:
            if (r24 == 0) goto L_0x03e2
            r3 = 90
            goto L_0x03e4
        L_0x03e2:
            r3 = 320(0x140, float:4.48E-43)
        L_0x03e4:
            boolean r0 = r9.endsWith(r0)     // Catch:{ all -> 0x0486 }
            if (r0 == 0) goto L_0x045b
            r7 = 1
            android.graphics.Bitmap r0 = createVideoThumbnail(r9, r7)     // Catch:{ all -> 0x0486 }
            if (r0 != 0) goto L_0x0463
            org.telegram.tgnet.TLRPC$WebDocument r7 = r14.thumb     // Catch:{ all -> 0x0486 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_webDocument     // Catch:{ all -> 0x0486 }
            if (r7 == 0) goto L_0x0463
            org.telegram.tgnet.TLRPC$WebDocument r7 = r14.thumb     // Catch:{ all -> 0x0486 }
            java.lang.String r7 = r7.mime_type     // Catch:{ all -> 0x0486 }
            boolean r6 = r6.equals(r7)     // Catch:{ all -> 0x0486 }
            if (r6 == 0) goto L_0x0463
            org.telegram.tgnet.TLRPC$WebDocument r6 = r14.thumb     // Catch:{ all -> 0x0486 }
            java.lang.String r6 = r6.url     // Catch:{ all -> 0x0486 }
            r7 = 0
            java.lang.String r6 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r6, r7)     // Catch:{ all -> 0x0486 }
            boolean r7 = android.text.TextUtils.isEmpty(r6)     // Catch:{ all -> 0x0459 }
            if (r7 == 0) goto L_0x041a
            org.telegram.tgnet.TLRPC$WebDocument r7 = r14.thumb     // Catch:{ all -> 0x0459 }
            java.lang.String r7 = r7.mime_type     // Catch:{ all -> 0x0459 }
            java.lang.String r7 = org.telegram.messenger.FileLoader.getExtensionByMimeType(r7)     // Catch:{ all -> 0x0459 }
            r6 = r7
            goto L_0x042a
        L_0x041a:
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ all -> 0x0459 }
            r7.<init>()     // Catch:{ all -> 0x0459 }
            r7.append(r10)     // Catch:{ all -> 0x0459 }
            r7.append(r6)     // Catch:{ all -> 0x0459 }
            java.lang.String r7 = r7.toString()     // Catch:{ all -> 0x0459 }
            r6 = r7
        L_0x042a:
            java.io.File r7 = new java.io.File     // Catch:{ all -> 0x0459 }
            r8 = 4
            java.io.File r8 = org.telegram.messenger.FileLoader.getDirectory(r8)     // Catch:{ all -> 0x0459 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ all -> 0x0459 }
            r10.<init>()     // Catch:{ all -> 0x0459 }
            org.telegram.tgnet.TLRPC$WebDocument r15 = r14.thumb     // Catch:{ all -> 0x0459 }
            java.lang.String r15 = r15.url     // Catch:{ all -> 0x0459 }
            java.lang.String r15 = org.telegram.messenger.Utilities.MD5(r15)     // Catch:{ all -> 0x0459 }
            r10.append(r15)     // Catch:{ all -> 0x0459 }
            r10.append(r6)     // Catch:{ all -> 0x0459 }
            java.lang.String r10 = r10.toString()     // Catch:{ all -> 0x0459 }
            r7.<init>(r8, r10)     // Catch:{ all -> 0x0459 }
            r5 = r7
            java.lang.String r7 = r5.getAbsolutePath()     // Catch:{ all -> 0x0459 }
            r8 = 1
            android.graphics.Bitmap r7 = createVideoThumbnail(r7, r8)     // Catch:{ all -> 0x0459 }
            r0 = r7
            r27 = r6
            goto L_0x0463
        L_0x0459:
            r0 = move-exception
            goto L_0x0489
        L_0x045b:
            float r0 = (float) r3
            float r6 = (float) r3
            r7 = 0
            r8 = 1
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r9, r7, r0, r6, r8)     // Catch:{ all -> 0x0486 }
        L_0x0463:
            if (r0 == 0) goto L_0x0485
            float r6 = (float) r3     // Catch:{ all -> 0x0486 }
            float r7 = (float) r3     // Catch:{ all -> 0x0486 }
            r8 = 90
            if (r3 <= r8) goto L_0x046e
            r8 = 80
            goto L_0x0470
        L_0x046e:
            r8 = 55
        L_0x0470:
            r10 = 0
            org.telegram.tgnet.TLRPC$PhotoSize r6 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r0, r6, r7, r8, r10)     // Catch:{ all -> 0x0486 }
            if (r6 == 0) goto L_0x0482
            java.util.ArrayList r7 = r4.thumbs     // Catch:{ all -> 0x0486 }
            r7.add(r6)     // Catch:{ all -> 0x0486 }
            int r7 = r4.flags     // Catch:{ all -> 0x0486 }
            r8 = 1
            r7 = r7 | r8
            r4.flags = r7     // Catch:{ all -> 0x0486 }
        L_0x0482:
            r0.recycle()     // Catch:{ all -> 0x0486 }
        L_0x0485:
            goto L_0x048e
        L_0x0486:
            r0 = move-exception
            r6 = r27
        L_0x0489:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r27 = r6
        L_0x048e:
            java.lang.String r0 = r2.file_name
            if (r0 != 0) goto L_0x0494
            r2.file_name = r1
        L_0x0494:
            java.lang.String r0 = r4.mime_type
            if (r0 != 0) goto L_0x049c
            java.lang.String r0 = "application/octet-stream"
            r4.mime_type = r0
        L_0x049c:
            java.util.ArrayList r0 = r4.thumbs
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x04cd
            org.telegram.tgnet.TLRPC$TL_photoSize r0 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r0.<init>()
            int[] r1 = org.telegram.messenger.MessageObject.getInlineResultWidthAndHeight(r30)
            r3 = 0
            r6 = r1[r3]
            r0.w = r6
            r6 = 1
            r7 = r1[r6]
            r0.h = r7
            r0.size = r3
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r3 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r3.<init>()
            r0.location = r3
            r0.type = r12
            java.util.ArrayList r3 = r4.thumbs
            r3.add(r0)
            int r3 = r4.flags
            r6 = 1
            r3 = r3 | r6
            r4.flags = r3
        L_0x04cd:
            r12 = r4
            r0 = r9
            goto L_0x04d8
        L_0x04d0:
            r22 = r1
            r26 = r2
            r25 = r3
        L_0x04d6:
            r12 = r22
        L_0x04d8:
            r6 = r0
            r2 = r12
            r15 = r26
            r16 = r25
            if (r13 == 0) goto L_0x04ed
            org.telegram.tgnet.TLRPC$WebDocument r1 = r14.content
            if (r1 == 0) goto L_0x04ed
            org.telegram.tgnet.TLRPC$WebDocument r1 = r14.content
            java.lang.String r1 = r1.url
            java.lang.String r3 = "originalPath"
            r13.put(r3, r1)
        L_0x04ed:
            r1 = 1
            android.graphics.Bitmap[] r11 = new android.graphics.Bitmap[r1]
            java.lang.String[] r10 = new java.lang.String[r1]
            boolean r1 = org.telegram.messenger.MessageObject.isGifDocument((org.telegram.tgnet.TLRPC.Document) r12)
            if (r1 == 0) goto L_0x053b
            java.util.ArrayList r1 = r12.thumbs
            r3 = 320(0x140, float:4.48E-43)
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r3)
            int r3 = r31.getCurrentAccount()
            org.telegram.messenger.FileLoader r3 = org.telegram.messenger.FileLoader.getInstance(r3)
            java.io.File r3 = r3.getPathToAttach(r12)
            boolean r4 = r3.exists()
            if (r4 != 0) goto L_0x051f
            int r4 = r31.getCurrentAccount()
            org.telegram.messenger.FileLoader r4 = org.telegram.messenger.FileLoader.getInstance(r4)
            r5 = 1
            java.io.File r3 = r4.getPathToAttach(r12, r5)
        L_0x051f:
            java.lang.String r20 = r3.getAbsolutePath()
            r21 = 0
            r22 = 0
            r17 = r31
            r18 = r24
            r19 = r12
            ensureMediaThumbExists(r17, r18, r19, r20, r21, r22)
            r9 = r31
            r4 = 1
            java.lang.String r4 = getKeyForPhotoSize(r9, r1, r11, r4, r4)
            r5 = 0
            r10[r5] = r4
            goto L_0x053d
        L_0x053b:
            r9 = r31
        L_0x053d:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71 r17 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda71
            r1 = r17
            r3 = r11
            r4 = r10
            r5 = r31
            r7 = r28
            r9 = r33
            r18 = r10
            r10 = r34
            r19 = r11
            r11 = r30
            r22 = r12
            r12 = r32
            r13 = r35
            r14 = r36
            r1.<init>(r2, r3, r4, r5, r6, r7, r9, r10, r11, r12, r13, r14, r15, r16)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r17)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingBotContextResult$80(long, org.telegram.tgnet.TLRPC$BotInlineResult, org.telegram.messenger.AccountInstance, java.util.HashMap, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, boolean, int):void");
    }

    static /* synthetic */ void lambda$prepareSendingBotContextResult$79(TLRPC.TL_document finalDocument, Bitmap[] precahcedThumb, String[] precachedKey, AccountInstance accountInstance, String finalPathFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, TLRPC.BotInlineResult result, HashMap params, boolean notify, int scheduleDate, TLRPC.TL_photo finalPhoto, TLRPC.TL_game finalGame) {
        TLRPC.BotInlineResult botInlineResult = result;
        if (finalDocument != null) {
            if (!(precahcedThumb[0] == null || precachedKey[0] == null)) {
                ImageLoader.getInstance().putImageToCache(new BitmapDrawable(precahcedThumb[0]), precachedKey[0], false);
            }
            accountInstance.getSendMessagesHelper().sendMessage(finalDocument, (VideoEditedInfo) null, finalPathFinal, dialogId, replyToMsg, replyToTopMsg, botInlineResult.send_message.message, botInlineResult.send_message.entities, botInlineResult.send_message.reply_markup, params, notify, scheduleDate, 0, result, (MessageObject.SendAnimationData) null);
        } else if (finalPhoto != null) {
            TLRPC.BotInlineResult botInlineResult2 = result;
            accountInstance.getSendMessagesHelper().sendMessage(finalPhoto, botInlineResult2.content != null ? botInlineResult2.content.url : null, dialogId, replyToMsg, replyToTopMsg, botInlineResult2.send_message.message, botInlineResult2.send_message.entities, botInlineResult2.send_message.reply_markup, params, notify, scheduleDate, 0, result);
        } else {
            TLRPC.BotInlineResult botInlineResult3 = result;
            if (finalGame != null) {
                accountInstance.getSendMessagesHelper().sendMessage(finalGame, dialogId, botInlineResult3.send_message.reply_markup, (HashMap<String, String>) params, notify, scheduleDate);
            }
        }
    }

    private static String getTrimmedString(String src) {
        String result = src.trim();
        if (result.length() == 0) {
            return result;
        }
        while (src.startsWith("\n")) {
            src = src.substring(1);
        }
        while (src.endsWith("\n")) {
            src = src.substring(0, src.length() - 1);
        }
        return src;
    }

    public static void prepareSendingText(AccountInstance accountInstance, String text, long dialogId, boolean notify, int scheduleDate) {
        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(new SendMessagesHelper$$ExternalSyntheticLambda91(text, accountInstance, dialogId, notify, scheduleDate));
    }

    static /* synthetic */ void lambda$prepareSendingText$81(String text, AccountInstance accountInstance, long dialogId, boolean notify, int scheduleDate) {
        String textFinal = getTrimmedString(text);
        if (textFinal.length() != 0) {
            int count = (int) Math.ceil((double) (((float) textFinal.length()) / 4096.0f));
            for (int a = 0; a < count; a++) {
                accountInstance.getSendMessagesHelper().sendMessage(textFinal.substring(a * 4096, Math.min((a + 1) * 4096, textFinal.length())), dialogId, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, notify, scheduleDate, (MessageObject.SendAnimationData) null);
            }
        }
    }

    public static void ensureMediaThumbExists(AccountInstance accountInstance, boolean isEncrypted, TLObject object, String path, Uri uri, long startTime) {
        Bitmap thumb;
        boolean smallExists;
        Bitmap bitmap;
        TLRPC.PhotoSize size;
        TLObject tLObject = object;
        String str = path;
        Uri uri2 = uri;
        if (tLObject instanceof TLRPC.TL_photo) {
            TLRPC.TL_photo photo = (TLRPC.TL_photo) tLObject;
            TLRPC.PhotoSize smallSize = FileLoader.getClosestPhotoSizeWithSize(photo.sizes, 90);
            if ((smallSize instanceof TLRPC.TL_photoStrippedSize) || (smallSize instanceof TLRPC.TL_photoPathSize)) {
                smallExists = true;
            } else {
                smallExists = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(smallSize, true).exists();
            }
            TLRPC.PhotoSize bigSize = FileLoader.getClosestPhotoSizeWithSize(photo.sizes, AndroidUtilities.getPhotoSize());
            boolean bigExists = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(bigSize, false).exists();
            if (!smallExists || !bigExists) {
                Bitmap bitmap2 = ImageLoader.loadBitmap(str, uri2, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), true);
                if (bitmap2 == null) {
                    bitmap = ImageLoader.loadBitmap(str, uri2, 800.0f, 800.0f, true);
                } else {
                    bitmap = bitmap2;
                }
                if (!bigExists && (size = ImageLoader.scaleAndSaveImage(bigSize, bitmap, Bitmap.CompressFormat.JPEG, true, (float) AndroidUtilities.getPhotoSize(), (float) AndroidUtilities.getPhotoSize(), 80, false, 101, 101, false)) != bigSize) {
                    photo.sizes.add(0, size);
                }
                if (!smallExists) {
                    TLRPC.PhotoSize photoSize = bigSize;
                    TLRPC.PhotoSize size2 = ImageLoader.scaleAndSaveImage(smallSize, bitmap, 90.0f, 90.0f, 55, true, false);
                    if (size2 != smallSize) {
                        photo.sizes.add(0, size2);
                    }
                }
                if (bitmap != null) {
                    bitmap.recycle();
                }
            }
        } else if (tLObject instanceof TLRPC.TL_document) {
            TLRPC.TL_document document = (TLRPC.TL_document) tLObject;
            if ((MessageObject.isVideoDocument(document) || MessageObject.isNewGifDocument((TLRPC.Document) document)) && MessageObject.isDocumentHasThumb(document)) {
                int side = 320;
                TLRPC.PhotoSize photoSize2 = FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 320);
                if (!(photoSize2 instanceof TLRPC.TL_photoStrippedSize) && !(photoSize2 instanceof TLRPC.TL_photoPathSize) && !FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(photoSize2, true).exists()) {
                    Bitmap thumb2 = createVideoThumbnailAtTime(str, startTime);
                    if (thumb2 == null) {
                        thumb = createVideoThumbnail(str, 1);
                    } else {
                        thumb = thumb2;
                    }
                    if (isEncrypted) {
                        side = 90;
                    }
                    document.thumbs.set(0, ImageLoader.scaleAndSaveImage(photoSize2, thumb, (float) side, (float) side, side > 90 ? 80 : 55, false, true));
                }
            }
        }
    }

    public static String getKeyForPhotoSize(AccountInstance accountInstance, TLRPC.PhotoSize photoSize, Bitmap[] bitmap, boolean blur, boolean forceCache) {
        TLRPC.PhotoSize photoSize2 = photoSize;
        if (photoSize2 == null) {
            boolean z = forceCache;
        } else if (photoSize2.location == null) {
            boolean z2 = forceCache;
        } else {
            Point point = ChatMessageCell.getMessageSize(photoSize2.w, photoSize2.h);
            if (bitmap != null) {
                try {
                    BitmapFactory.Options opts = new BitmapFactory.Options();
                    opts.inJustDecodeBounds = true;
                    try {
                        File file = FileLoader.getInstance(accountInstance.getCurrentAccount()).getPathToAttach(photoSize, forceCache);
                        FileInputStream is = new FileInputStream(file);
                        BitmapFactory.decodeStream(is, (Rect) null, opts);
                        is.close();
                        float scaleFactor = Math.max(((float) opts.outWidth) / point.x, ((float) opts.outHeight) / point.y);
                        if (scaleFactor < 1.0f) {
                            scaleFactor = 1.0f;
                        }
                        opts.inJustDecodeBounds = false;
                        opts.inSampleSize = (int) scaleFactor;
                        opts.inPreferredConfig = Bitmap.Config.RGB_565;
                        if (Build.VERSION.SDK_INT >= 21) {
                            FileInputStream is2 = new FileInputStream(file);
                            bitmap[0] = BitmapFactory.decodeStream(is2, (Rect) null, opts);
                            is2.close();
                        }
                    } catch (Throwable th) {
                    }
                } catch (Throwable th2) {
                    boolean z3 = forceCache;
                }
            } else {
                boolean z4 = forceCache;
            }
            return String.format(Locale.US, blur ? "%d_%d@%d_%d_b" : "%d_%d@%d_%d", new Object[]{Long.valueOf(photoSize2.location.volume_id), Integer.valueOf(photoSize2.location.local_id), Integer.valueOf((int) (point.x / AndroidUtilities.density)), Integer.valueOf((int) (point.y / AndroidUtilities.density))});
        }
        return null;
    }

    public static boolean shouldSendWebPAsSticker(String path, Uri uri) {
        InputStream inputStream;
        BitmapFactory.Options bmOptions = new BitmapFactory.Options();
        bmOptions.inJustDecodeBounds = true;
        if (path != null) {
            try {
                RandomAccessFile file = new RandomAccessFile(path, "r");
                ByteBuffer buffer = file.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, (long) path.length());
                Utilities.loadWebpImage((Bitmap) null, buffer, buffer.limit(), bmOptions, true);
                file.close();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            try {
                inputStream = ApplicationLoader.applicationContext.getContentResolver().openInputStream(uri);
                BitmapFactory.decodeStream(inputStream, (Rect) null, bmOptions);
                if (inputStream != null) {
                    inputStream.close();
                }
            } catch (Exception e2) {
            } catch (Throwable th) {
            }
        }
        if (bmOptions.outWidth >= 800 || bmOptions.outHeight >= 800) {
            return false;
        }
        return true;
        throw th;
    }

    public static void prepareSendingMedia(AccountInstance accountInstance, ArrayList<SendingMediaInfo> media, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, InputContentInfoCompat inputContent, boolean forceDocument, boolean groupMedia, MessageObject editingMessageObject, boolean notify, int scheduleDate) {
        boolean groupMedia2;
        if (!media.isEmpty()) {
            int a = 0;
            int N = media.size();
            while (true) {
                if (a >= N) {
                    ArrayList<SendingMediaInfo> arrayList = media;
                    groupMedia2 = groupMedia;
                    break;
                } else if (media.get(a).ttl > 0) {
                    groupMedia2 = false;
                    break;
                } else {
                    a++;
                }
            }
            DispatchQueue dispatchQueue = mediaSendQueue;
            boolean z = groupMedia2;
            SendMessagesHelper$$ExternalSyntheticLambda2 sendMessagesHelper$$ExternalSyntheticLambda2 = r2;
            SendMessagesHelper$$ExternalSyntheticLambda2 sendMessagesHelper$$ExternalSyntheticLambda22 = new SendMessagesHelper$$ExternalSyntheticLambda2(media, dialogId, forceDocument, groupMedia2, accountInstance, editingMessageObject, replyToMsg, replyToTopMsg, notify, scheduleDate, inputContent);
            dispatchQueue.postRunnable(sendMessagesHelper$$ExternalSyntheticLambda2);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v7, resolved type: org.telegram.tgnet.TLRPC$TL_document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v13, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v80, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v72, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v173, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v175, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v129, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v65, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v179, resolved type: org.telegram.tgnet.TLRPC$TL_photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v131, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v93, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v94, resolved type: java.lang.Object} */
    /* JADX WARNING: type inference failed for: r8v0 */
    /* JADX WARNING: type inference failed for: r7v22 */
    /* JADX WARNING: type inference failed for: r7v23 */
    /* JADX WARNING: type inference failed for: r6v72, types: [org.telegram.tgnet.TLRPC$Photo] */
    /* JADX WARNING: type inference failed for: r6v85, types: [org.telegram.tgnet.TLRPC$Document] */
    /* JADX WARNING: type inference failed for: r8v58, types: [boolean] */
    /* JADX WARNING: type inference failed for: r8v59 */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x0065, code lost:
        if (r7 != false) goto L_0x0067;
     */
    /* JADX WARNING: Incorrect type for immutable var: ssa=int, code=?, for r7v15, types: [int, boolean] */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x036e A[SYNTHETIC, Splitter:B:143:0x036e] */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x0379 A[SYNTHETIC, Splitter:B:146:0x0379] */
    /* JADX WARNING: Removed duplicated region for block: B:152:0x0387  */
    /* JADX WARNING: Removed duplicated region for block: B:163:0x03ab  */
    /* JADX WARNING: Removed duplicated region for block: B:172:0x03c5  */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x03f0  */
    /* JADX WARNING: Removed duplicated region for block: B:178:0x040c  */
    /* JADX WARNING: Removed duplicated region for block: B:179:0x0411  */
    /* JADX WARNING: Removed duplicated region for block: B:182:0x041e  */
    /* JADX WARNING: Removed duplicated region for block: B:184:0x0427  */
    /* JADX WARNING: Removed duplicated region for block: B:286:0x0775 A[SYNTHETIC, Splitter:B:286:0x0775] */
    /* JADX WARNING: Removed duplicated region for block: B:290:0x077e A[SYNTHETIC, Splitter:B:290:0x077e] */
    /* JADX WARNING: Removed duplicated region for block: B:307:0x07ab  */
    /* JADX WARNING: Removed duplicated region for block: B:337:0x0832  */
    /* JADX WARNING: Removed duplicated region for block: B:340:0x0837  */
    /* JADX WARNING: Removed duplicated region for block: B:341:0x0841  */
    /* JADX WARNING: Removed duplicated region for block: B:344:0x084b  */
    /* JADX WARNING: Removed duplicated region for block: B:349:0x08a3  */
    /* JADX WARNING: Removed duplicated region for block: B:445:0x0a84  */
    /* JADX WARNING: Removed duplicated region for block: B:452:0x0ab6  */
    /* JADX WARNING: Removed duplicated region for block: B:526:0x0d63  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00e2  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x010a  */
    /* JADX WARNING: Removed duplicated region for block: B:584:0x0e84  */
    /* JADX WARNING: Removed duplicated region for block: B:590:0x0ea3  */
    /* JADX WARNING: Removed duplicated region for block: B:595:0x0eb4  */
    /* JADX WARNING: Removed duplicated region for block: B:604:0x0var_  */
    /* JADX WARNING: Removed duplicated region for block: B:606:0x0var_  */
    /* JADX WARNING: Removed duplicated region for block: B:608:0x0f1a A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0118  */
    /* JADX WARNING: Removed duplicated region for block: B:625:0x0var_ A[LOOP:4: B:623:0x0f8d->B:625:0x0var_, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:684:0x0eb2 A[EDGE_INSN: B:684:0x0eb2->B:594:0x0eb2 ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x019c  */
    /* JADX WARNING: Removed duplicated region for block: B:89:0x01af  */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x01b4  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingMedia$89(java.util.ArrayList r75, long r76, boolean r78, boolean r79, org.telegram.messenger.AccountInstance r80, org.telegram.messenger.MessageObject r81, org.telegram.messenger.MessageObject r82, org.telegram.messenger.MessageObject r83, boolean r84, int r85, androidx.core.view.inputmethod.InputContentInfoCompat r86) {
        /*
            r1 = r75
            r15 = r80
            long r20 = java.lang.System.currentTimeMillis()
            int r14 = r75.size()
            boolean r13 = org.telegram.messenger.DialogObject.isEncryptedDialog(r76)
            java.lang.String r12 = ".webp"
            java.lang.String r11 = ".gif"
            r19 = 3
            java.lang.String r9 = "_"
            r10 = 0
            r8 = 1
            if (r78 != 0) goto L_0x01e1
            if (r79 == 0) goto L_0x01e1
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r2 = 0
            r6 = r2
        L_0x0025:
            if (r6 >= r14) goto L_0x01d8
            java.lang.Object r2 = r1.get(r6)
            r5 = r2
            org.telegram.messenger.SendMessagesHelper$SendingMediaInfo r5 = (org.telegram.messenger.SendMessagesHelper.SendingMediaInfo) r5
            org.telegram.messenger.MediaController$SearchImage r2 = r5.searchImage
            if (r2 != 0) goto L_0x01c6
            boolean r2 = r5.isVideo
            if (r2 != 0) goto L_0x01c6
            org.telegram.messenger.VideoEditedInfo r2 = r5.videoEditedInfo
            if (r2 != 0) goto L_0x01c6
            java.lang.String r2 = r5.path
            java.lang.String r3 = r5.path
            if (r3 != 0) goto L_0x0052
            android.net.Uri r4 = r5.uri
            if (r4 == 0) goto L_0x0052
            android.net.Uri r4 = r5.uri
            java.lang.String r3 = org.telegram.messenger.AndroidUtilities.getPath(r4)
            android.net.Uri r4 = r5.uri
            java.lang.String r2 = r4.toString()
            r4 = r3
            goto L_0x0053
        L_0x0052:
            r4 = r3
        L_0x0053:
            r3 = 0
            if (r4 == 0) goto L_0x008b
            int r7 = r5.ttl
            if (r7 > 0) goto L_0x008b
            boolean r7 = r4.endsWith(r11)
            if (r7 != 0) goto L_0x0067
            boolean r7 = r4.endsWith(r12)
            r3 = r7
            if (r7 == 0) goto L_0x008b
        L_0x0067:
            int r7 = r75.size()
            if (r7 > r8) goto L_0x0087
            if (r3 == 0) goto L_0x007e
            boolean r7 = shouldSendWebPAsSticker(r4, r10)
            if (r7 == 0) goto L_0x0087
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            goto L_0x01ce
        L_0x007e:
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            goto L_0x01ce
        L_0x0087:
            r5.forceImage = r8
            r10 = r3
            goto L_0x00e0
        L_0x008b:
            java.lang.String r7 = r5.path
            android.net.Uri r10 = r5.uri
            boolean r7 = org.telegram.messenger.ImageLoader.shouldSendImageAsDocument(r7, r10)
            if (r7 == 0) goto L_0x009e
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            goto L_0x01ce
        L_0x009e:
            if (r4 != 0) goto L_0x00df
            android.net.Uri r7 = r5.uri
            if (r7 == 0) goto L_0x00df
            android.net.Uri r7 = r5.uri
            boolean r7 = org.telegram.messenger.MediaController.isGif(r7)
            if (r7 != 0) goto L_0x00b8
            android.net.Uri r7 = r5.uri
            boolean r7 = org.telegram.messenger.MediaController.isWebp(r7)
            r3 = r7
            if (r7 == 0) goto L_0x00b6
            goto L_0x00b8
        L_0x00b6:
            r10 = r3
            goto L_0x00e0
        L_0x00b8:
            int r7 = r75.size()
            if (r7 > r8) goto L_0x00db
            if (r3 == 0) goto L_0x00d2
            android.net.Uri r7 = r5.uri
            r10 = 0
            boolean r7 = shouldSendWebPAsSticker(r10, r7)
            if (r7 == 0) goto L_0x00db
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            goto L_0x01ce
        L_0x00d2:
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            goto L_0x01ce
        L_0x00db:
            r5.forceImage = r8
            r10 = r3
            goto L_0x00e0
        L_0x00df:
            r10 = r3
        L_0x00e0:
            if (r4 == 0) goto L_0x010a
            java.io.File r3 = new java.io.File
            r3.<init>(r4)
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            r7.append(r2)
            r22 = r10
            r18 = r11
            long r10 = r3.length()
            r7.append(r10)
            r7.append(r9)
            long r10 = r3.lastModified()
            r7.append(r10)
            java.lang.String r2 = r7.toString()
            r10 = r2
            goto L_0x0110
        L_0x010a:
            r22 = r10
            r18 = r11
            r2 = 0
            r10 = r2
        L_0x0110:
            r2 = 0
            r3 = 0
            if (r13 != 0) goto L_0x019c
            int r7 = r5.ttl
            if (r7 != 0) goto L_0x019c
            org.telegram.messenger.MessagesStorage r7 = r80.getMessagesStorage()
            if (r13 != 0) goto L_0x0120
            r11 = 0
            goto L_0x0121
        L_0x0120:
            r11 = 3
        L_0x0121:
            java.lang.Object[] r7 = r7.getSentFile(r10, r11)
            if (r7 == 0) goto L_0x0139
            r11 = 0
            r8 = r7[r11]
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r8 == 0) goto L_0x0139
            r8 = r7[r11]
            r2 = r8
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            r8 = 1
            r11 = r7[r8]
            r3 = r11
            java.lang.String r3 = (java.lang.String) r3
        L_0x0139:
            if (r2 != 0) goto L_0x0172
            android.net.Uri r8 = r5.uri
            if (r8 == 0) goto L_0x0172
            org.telegram.messenger.MessagesStorage r8 = r80.getMessagesStorage()
            android.net.Uri r11 = r5.uri
            java.lang.String r11 = org.telegram.messenger.AndroidUtilities.getPath(r11)
            r24 = r2
            if (r13 != 0) goto L_0x014f
            r2 = 0
            goto L_0x0150
        L_0x014f:
            r2 = 3
        L_0x0150:
            java.lang.Object[] r7 = r8.getSentFile(r11, r2)
            if (r7 == 0) goto L_0x016f
            r8 = 0
            r2 = r7[r8]
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r2 == 0) goto L_0x0170
            r2 = r7[r8]
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            r11 = 1
            r16 = r7[r11]
            r3 = r16
            java.lang.String r3 = (java.lang.String) r3
            r24 = r2
            r16 = r3
            r23 = r7
            goto L_0x017a
        L_0x016f:
            r8 = 0
        L_0x0170:
            r11 = 1
            goto L_0x0176
        L_0x0172:
            r24 = r2
            r8 = 0
            r11 = 1
        L_0x0176:
            r16 = r3
            r23 = r7
        L_0x017a:
            java.lang.String r7 = r5.path
            android.net.Uri r3 = r5.uri
            r25 = 0
            r2 = r80
            r27 = r3
            r3 = r13
            r28 = r4
            r4 = r24
            r11 = r5
            r5 = r7
            r30 = r6
            r6 = r27
            r27 = r12
            r12 = 1
            r7 = r25
            ensureMediaThumbExists(r2, r3, r4, r5, r6, r7)
            r3 = r16
            r2 = r24
            goto L_0x01a4
        L_0x019c:
            r28 = r4
            r11 = r5
            r30 = r6
            r27 = r12
            r12 = 1
        L_0x01a4:
            org.telegram.messenger.SendMessagesHelper$MediaSendPrepareWorker r4 = new org.telegram.messenger.SendMessagesHelper$MediaSendPrepareWorker
            r5 = 0
            r4.<init>()
            r0.put(r11, r4)
            if (r2 == 0) goto L_0x01b4
            r4.parentObject = r3
            r4.photo = r2
            goto L_0x01ce
        L_0x01b4:
            java.util.concurrent.CountDownLatch r5 = new java.util.concurrent.CountDownLatch
            r5.<init>(r12)
            r4.sync = r5
            java.util.concurrent.ThreadPoolExecutor r5 = mediaSendThreadPool
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13 r6 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda13
            r6.<init>(r4, r15, r11, r13)
            r5.execute(r6)
            goto L_0x01ce
        L_0x01c6:
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            r11 = r5
        L_0x01ce:
            int r6 = r30 + 1
            r11 = r18
            r12 = r27
            r8 = 1
            r10 = 0
            goto L_0x0025
        L_0x01d8:
            r30 = r6
            r18 = r11
            r27 = r12
            r12 = 1
            r11 = r0
            goto L_0x01e8
        L_0x01e1:
            r18 = r11
            r27 = r12
            r12 = 1
            r0 = 0
            r11 = r0
        L_0x01e8:
            r2 = 0
            r4 = 0
            r0 = 0
            r6 = 0
            r7 = 0
            r8 = 0
            r10 = 0
            r16 = 0
            r22 = 0
            r23 = 0
            r24 = r16
            r72 = r10
            r10 = r0
            r0 = r22
            r73 = r4
            r4 = r6
            r6 = r72
            r5 = r23
            r22 = r2
            r3 = r7
            r2 = r8
            r7 = r73
        L_0x020b:
            r16 = r13
            r30 = r7
            if (r5 >= r14) goto L_0x1074
            java.lang.Object r8 = r1.get(r5)
            org.telegram.messenger.SendMessagesHelper$SendingMediaInfo r8 = (org.telegram.messenger.SendMessagesHelper.SendingMediaInfo) r8
            if (r79 == 0) goto L_0x0230
            r7 = 1
            if (r14 <= r7) goto L_0x0230
            int r7 = r0 % 10
            if (r7 != 0) goto L_0x0230
            java.security.SecureRandom r7 = org.telegram.messenger.Utilities.random
            long r32 = r7.nextLong()
            r22 = r32
            r30 = r32
            r0 = 0
            r34 = r22
            r22 = r0
            goto L_0x0234
        L_0x0230:
            r34 = r22
            r22 = r0
        L_0x0234:
            org.telegram.messenger.MediaController$SearchImage r0 = r8.searchImage
            java.lang.String r7 = "video/mp4"
            java.lang.String r12 = "1"
            java.lang.String r13 = "final"
            java.lang.String r1 = "groupId"
            r28 = r2
            java.lang.String r2 = "mp4"
            r36 = r10
            java.lang.String r10 = "parentObject"
            r37 = r11
            java.lang.String r11 = "originalPath"
            r38 = r6
            java.lang.String r6 = ""
            r39 = r3
            java.lang.String r3 = "jpg"
            r40 = r4
            java.lang.String r4 = "."
            r41 = 4
            if (r0 == 0) goto L_0x0655
            org.telegram.messenger.VideoEditedInfo r0 = r8.videoEditedInfo
            if (r0 != 0) goto L_0x0655
            org.telegram.messenger.MediaController$SearchImage r0 = r8.searchImage
            int r0 = r0.type
            r42 = r5
            java.lang.String r5 = "x"
            r43 = r6
            r6 = 1
            if (r0 != r6) goto L_0x0490
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r1 = r0
            r0 = 0
            r26 = 0
            org.telegram.messenger.MediaController$SearchImage r6 = r8.searchImage
            org.telegram.tgnet.TLRPC$Document r6 = r6.document
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r6 == 0) goto L_0x0291
            org.telegram.messenger.MediaController$SearchImage r6 = r8.searchImage
            org.telegram.tgnet.TLRPC$Document r6 = r6.document
            r0 = r6
            org.telegram.tgnet.TLRPC$TL_document r0 = (org.telegram.tgnet.TLRPC.TL_document) r0
            int r6 = r80.getCurrentAccount()
            org.telegram.messenger.FileLoader r6 = org.telegram.messenger.FileLoader.getInstance(r6)
            r12 = 1
            java.io.File r6 = r6.getPathToAttach(r0, r12)
            goto L_0x02bd
        L_0x0291:
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            org.telegram.messenger.MediaController$SearchImage r12 = r8.searchImage
            java.lang.String r12 = r12.imageUrl
            java.lang.String r12 = org.telegram.messenger.Utilities.MD5(r12)
            r6.append(r12)
            r6.append(r4)
            org.telegram.messenger.MediaController$SearchImage r12 = r8.searchImage
            java.lang.String r12 = r12.imageUrl
            java.lang.String r12 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r12, r3)
            r6.append(r12)
            java.lang.String r6 = r6.toString()
            java.io.File r12 = new java.io.File
            java.io.File r13 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r12.<init>(r13, r6)
            r6 = r12
        L_0x02bd:
            if (r0 != 0) goto L_0x03f7
            r12 = 0
            org.telegram.tgnet.TLRPC$TL_document r13 = new org.telegram.tgnet.TLRPC$TL_document
            r13.<init>()
            r44 = r14
            r14 = 0
            r13.id = r14
            r14 = 0
            byte[] r0 = new byte[r14]
            r13.file_reference = r0
            org.telegram.tgnet.ConnectionsManager r0 = r80.getConnectionsManager()
            int r0 = r0.getCurrentTime()
            r13.date = r0
            org.telegram.tgnet.TLRPC$TL_documentAttributeFilename r0 = new org.telegram.tgnet.TLRPC$TL_documentAttributeFilename
            r0.<init>()
            r14 = r0
            java.lang.String r0 = "animation.gif"
            r14.file_name = r0
            java.util.ArrayList r0 = r13.attributes
            r0.add(r14)
            org.telegram.messenger.MediaController$SearchImage r0 = r8.searchImage
            int r0 = r0.size
            r32 = r14
            long r14 = (long) r0
            r13.size = r14
            r14 = 0
            r13.dc_id = r14
            if (r78 != 0) goto L_0x030e
            java.lang.String r0 = r6.toString()
            boolean r0 = r0.endsWith(r2)
            if (r0 == 0) goto L_0x030e
            r13.mime_type = r7
            java.util.ArrayList r0 = r13.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r7 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r7.<init>()
            r0.add(r7)
            goto L_0x0312
        L_0x030e:
            java.lang.String r0 = "image/gif"
            r13.mime_type = r0
        L_0x0312:
            boolean r0 = r6.exists()
            if (r0 == 0) goto L_0x031a
            r12 = r6
            goto L_0x031c
        L_0x031a:
            r0 = 0
            r6 = r0
        L_0x031c:
            if (r12 != 0) goto L_0x0351
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            org.telegram.messenger.MediaController$SearchImage r7 = r8.searchImage
            java.lang.String r7 = r7.thumbUrl
            java.lang.String r7 = org.telegram.messenger.Utilities.MD5(r7)
            r0.append(r7)
            r0.append(r4)
            org.telegram.messenger.MediaController$SearchImage r4 = r8.searchImage
            java.lang.String r4 = r4.thumbUrl
            java.lang.String r3 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r4, r3)
            r0.append(r3)
            java.lang.String r0 = r0.toString()
            java.io.File r3 = new java.io.File
            java.io.File r4 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r3.<init>(r4, r0)
            r12 = r3
            boolean r3 = r12.exists()
            if (r3 != 0) goto L_0x0351
            r12 = 0
        L_0x0351:
            if (r12 == 0) goto L_0x03ba
            if (r16 != 0) goto L_0x0362
            int r0 = r8.ttl     // Catch:{ Exception -> 0x035d }
            if (r0 == 0) goto L_0x035a
            goto L_0x0362
        L_0x035a:
            r0 = 320(0x140, float:4.48E-43)
            goto L_0x0364
        L_0x035d:
            r0 = move-exception
            r15 = r16
            r14 = 0
            goto L_0x03b6
        L_0x0362:
            r0 = 90
        L_0x0364:
            java.lang.String r3 = r12.getAbsolutePath()     // Catch:{ Exception -> 0x03b2 }
            boolean r2 = r3.endsWith(r2)     // Catch:{ Exception -> 0x03b2 }
            if (r2 == 0) goto L_0x0379
            java.lang.String r2 = r12.getAbsolutePath()     // Catch:{ Exception -> 0x035d }
            r3 = 1
            android.graphics.Bitmap r2 = createVideoThumbnail(r2, r3)     // Catch:{ Exception -> 0x035d }
            r14 = 0
            goto L_0x0385
        L_0x0379:
            java.lang.String r2 = r12.getAbsolutePath()     // Catch:{ Exception -> 0x03b2 }
            float r3 = (float) r0
            float r4 = (float) r0
            r7 = 1
            r14 = 0
            android.graphics.Bitmap r2 = org.telegram.messenger.ImageLoader.loadBitmap(r2, r14, r3, r4, r7)     // Catch:{ Exception -> 0x03ae }
        L_0x0385:
            if (r2 == 0) goto L_0x03ab
            float r3 = (float) r0
            float r4 = (float) r0
            r15 = 90
            if (r0 <= r15) goto L_0x0390
            r7 = 80
            goto L_0x0392
        L_0x0390:
            r7 = 55
        L_0x0392:
            r15 = r16
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r2, r3, r4, r7, r15)     // Catch:{ Exception -> 0x03a9 }
            if (r3 == 0) goto L_0x03a5
            java.util.ArrayList r4 = r13.thumbs     // Catch:{ Exception -> 0x03a9 }
            r4.add(r3)     // Catch:{ Exception -> 0x03a9 }
            int r4 = r13.flags     // Catch:{ Exception -> 0x03a9 }
            r7 = 1
            r4 = r4 | r7
            r13.flags = r4     // Catch:{ Exception -> 0x03a9 }
        L_0x03a5:
            r2.recycle()     // Catch:{ Exception -> 0x03a9 }
            goto L_0x03ad
        L_0x03a9:
            r0 = move-exception
            goto L_0x03b6
        L_0x03ab:
            r15 = r16
        L_0x03ad:
            goto L_0x03bd
        L_0x03ae:
            r0 = move-exception
            r15 = r16
            goto L_0x03b6
        L_0x03b2:
            r0 = move-exception
            r15 = r16
            r14 = 0
        L_0x03b6:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            goto L_0x03bd
        L_0x03ba:
            r15 = r16
            r14 = 0
        L_0x03bd:
            java.util.ArrayList r0 = r13.thumbs
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L_0x03f0
            org.telegram.tgnet.TLRPC$TL_photoSize r0 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r0.<init>()
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            int r2 = r2.width
            r0.w = r2
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            int r2 = r2.height
            r0.h = r2
            r7 = 0
            r0.size = r7
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r2 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r2.<init>()
            r0.location = r2
            r0.type = r5
            java.util.ArrayList r2 = r13.thumbs
            r2.add(r0)
            int r2 = r13.flags
            r16 = 1
            r2 = r2 | 1
            r13.flags = r2
            goto L_0x03f3
        L_0x03f0:
            r7 = 0
            r16 = 1
        L_0x03f3:
            r17 = r6
            r0 = r13
            goto L_0x0401
        L_0x03f7:
            r44 = r14
            r15 = r16
            r7 = 0
            r14 = 0
            r16 = 1
            r17 = r6
        L_0x0401:
            r13 = r42
            r5 = r0
            r12 = r26
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            java.lang.String r4 = r2.imageUrl
            if (r17 != 0) goto L_0x0411
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            java.lang.String r2 = r2.imageUrl
            goto L_0x0415
        L_0x0411:
            java.lang.String r2 = r17.toString()
        L_0x0415:
            r6 = r2
            r3 = r38
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            java.lang.String r2 = r2.imageUrl
            if (r2 == 0) goto L_0x0425
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            java.lang.String r2 = r2.imageUrl
            r1.put(r11, r2)
        L_0x0425:
            if (r12 == 0) goto L_0x042a
            r1.put(r10, r12)
        L_0x042a:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5 r23 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda5
            r11 = r28
            r2 = r23
            r45 = r3
            r10 = r39
            r3 = r81
            r25 = r4
            r46 = r40
            r4 = r80
            r28 = 0
            r7 = r1
            r29 = r8
            r8 = r12
            r32 = r1
            r48 = r9
            r47 = r10
            r1 = r14
            r14 = r36
            r9 = r76
            r49 = r11
            r51 = r18
            r50 = r37
            r11 = r82
            r16 = r12
            r52 = r27
            r12 = r83
            r54 = r13
            r13 = r29
            r56 = r14
            r55 = r44
            r14 = r84
            r1 = r15
            r15 = r85
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r11, r12, r13, r14, r15)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r23)
            r36 = r1
            r0 = r22
            r7 = r30
            r38 = r34
            r6 = r45
            r4 = r46
            r3 = r47
            r2 = r49
            r25 = r50
            r37 = r51
            r29 = r52
            r53 = r54
            r70 = r55
            r10 = r56
            r43 = 0
            r52 = 0
            goto L_0x105d
        L_0x0490:
            r29 = r8
            r48 = r9
            r55 = r14
            r51 = r18
            r52 = r27
            r49 = r28
            r56 = r36
            r50 = r37
            r45 = r38
            r47 = r39
            r46 = r40
            r54 = r42
            r14 = r1
            r1 = r16
            r0 = 1
            r2 = 0
            r16 = 0
            r15 = r29
            org.telegram.messenger.MediaController$SearchImage r6 = r15.searchImage
            org.telegram.tgnet.TLRPC$Photo r6 = r6.photo
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r6 == 0) goto L_0x04c1
            org.telegram.messenger.MediaController$SearchImage r6 = r15.searchImage
            org.telegram.tgnet.TLRPC$Photo r6 = r6.photo
            r2 = r6
            org.telegram.tgnet.TLRPC$TL_photo r2 = (org.telegram.tgnet.TLRPC.TL_photo) r2
            goto L_0x04c5
        L_0x04c1:
            if (r1 != 0) goto L_0x04c5
            int r6 = r15.ttl
        L_0x04c5:
            if (r2 != 0) goto L_0x059f
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            org.telegram.messenger.MediaController$SearchImage r7 = r15.searchImage
            java.lang.String r7 = r7.imageUrl
            java.lang.String r7 = org.telegram.messenger.Utilities.MD5(r7)
            r6.append(r7)
            r6.append(r4)
            org.telegram.messenger.MediaController$SearchImage r7 = r15.searchImage
            java.lang.String r7 = r7.imageUrl
            java.lang.String r7 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r7, r3)
            r6.append(r7)
            java.lang.String r6 = r6.toString()
            java.io.File r7 = new java.io.File
            java.io.File r8 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r7.<init>(r8, r6)
            boolean r8 = r7.exists()
            if (r8 == 0) goto L_0x0518
            long r8 = r7.length()
            r17 = 0
            int r23 = (r8 > r17 ? 1 : (r8 == r17 ? 0 : -1))
            if (r23 == 0) goto L_0x0518
            org.telegram.messenger.SendMessagesHelper r8 = r80.getSendMessagesHelper()
            java.lang.String r9 = r7.toString()
            r17 = r2
            r2 = 0
            org.telegram.tgnet.TLRPC$TL_photo r8 = r8.generatePhotoSizes(r9, r2)
            if (r8 == 0) goto L_0x0516
            r0 = 0
            r2 = r8
            goto L_0x051c
        L_0x0516:
            r2 = r8
            goto L_0x051c
        L_0x0518:
            r17 = r2
            r2 = r17
        L_0x051c:
            if (r2 != 0) goto L_0x059b
            java.lang.StringBuilder r8 = new java.lang.StringBuilder
            r8.<init>()
            org.telegram.messenger.MediaController$SearchImage r9 = r15.searchImage
            java.lang.String r9 = r9.thumbUrl
            java.lang.String r9 = org.telegram.messenger.Utilities.MD5(r9)
            r8.append(r9)
            r8.append(r4)
            org.telegram.messenger.MediaController$SearchImage r4 = r15.searchImage
            java.lang.String r4 = r4.thumbUrl
            java.lang.String r3 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r4, r3)
            r8.append(r3)
            java.lang.String r3 = r8.toString()
            java.io.File r4 = new java.io.File
            java.io.File r6 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r4.<init>(r6, r3)
            boolean r6 = r4.exists()
            if (r6 == 0) goto L_0x055c
            org.telegram.messenger.SendMessagesHelper r6 = r80.getSendMessagesHelper()
            java.lang.String r7 = r4.toString()
            r8 = 0
            org.telegram.tgnet.TLRPC$TL_photo r2 = r6.generatePhotoSizes(r7, r8)
        L_0x055c:
            if (r2 != 0) goto L_0x0597
            org.telegram.tgnet.TLRPC$TL_photo r6 = new org.telegram.tgnet.TLRPC$TL_photo
            r6.<init>()
            r2 = r6
            org.telegram.tgnet.ConnectionsManager r6 = r80.getConnectionsManager()
            int r6 = r6.getCurrentTime()
            r2.date = r6
            r9 = 0
            byte[] r6 = new byte[r9]
            r2.file_reference = r6
            org.telegram.tgnet.TLRPC$TL_photoSize r6 = new org.telegram.tgnet.TLRPC$TL_photoSize
            r6.<init>()
            org.telegram.messenger.MediaController$SearchImage r7 = r15.searchImage
            int r7 = r7.width
            r6.w = r7
            org.telegram.messenger.MediaController$SearchImage r7 = r15.searchImage
            int r7 = r7.height
            r6.h = r7
            r6.size = r9
            org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable r7 = new org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            r7.<init>()
            r6.location = r7
            r6.type = r5
            java.util.ArrayList r5 = r2.sizes
            r5.add(r6)
            r17 = r2
            goto L_0x05a2
        L_0x0597:
            r9 = 0
            r17 = r2
            goto L_0x05a2
        L_0x059b:
            r9 = 0
            r17 = r2
            goto L_0x05a2
        L_0x059f:
            r17 = r2
            r9 = 0
        L_0x05a2:
            if (r17 == 0) goto L_0x062a
            r5 = r17
            r8 = r16
            r2 = r43
            r6 = r0
            java.util.HashMap r3 = new java.util.HashMap
            r3.<init>()
            r7 = r3
            org.telegram.messenger.MediaController$SearchImage r3 = r15.searchImage
            java.lang.String r3 = r3.imageUrl
            if (r3 == 0) goto L_0x05be
            org.telegram.messenger.MediaController$SearchImage r3 = r15.searchImage
            java.lang.String r3 = r3.imageUrl
            r7.put(r11, r3)
        L_0x05be:
            if (r8 == 0) goto L_0x05c3
            r7.put(r10, r8)
        L_0x05c3:
            if (r79 == 0) goto L_0x05f7
            int r3 = r22 + 1
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            r4.append(r2)
            r10 = r34
            r4.append(r10)
            java.lang.String r2 = r4.toString()
            r7.put(r14, r2)
            r2 = 10
            if (r3 == r2) goto L_0x05eb
            r14 = r55
            int r2 = r14 + -1
            r4 = r54
            if (r4 != r2) goto L_0x05e8
            goto L_0x05ef
        L_0x05e8:
            r22 = r3
            goto L_0x05fd
        L_0x05eb:
            r4 = r54
            r14 = r55
        L_0x05ef:
            r7.put(r13, r12)
            r30 = 0
            r22 = r3
            goto L_0x05fd
        L_0x05f7:
            r10 = r34
            r4 = r54
            r14 = r55
        L_0x05fd:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7 r18 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda7
            r2 = r18
            r3 = r81
            r13 = r4
            r4 = r80
            r23 = r7
            r7 = r15
            r25 = r8
            r8 = r23
            r12 = 0
            r9 = r25
            r57 = r10
            r10 = r76
            r12 = r82
            r59 = r13
            r13 = r83
            r60 = r14
            r14 = r84
            r26 = r1
            r1 = r15
            r15 = r85
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r18)
            goto L_0x0633
        L_0x062a:
            r26 = r1
            r1 = r15
            r57 = r34
            r59 = r54
            r60 = r55
        L_0x0633:
            r0 = r22
            r36 = r26
            r7 = r30
            r6 = r45
            r4 = r46
            r3 = r47
            r2 = r49
            r25 = r50
            r37 = r51
            r29 = r52
            r10 = r56
            r38 = r57
            r53 = r59
            r70 = r60
            r43 = 0
            r52 = 0
            goto L_0x105d
        L_0x0655:
            r59 = r5
            r48 = r9
            r60 = r14
            r26 = r16
            r51 = r18
            r52 = r27
            r49 = r28
            r57 = r34
            r56 = r36
            r50 = r37
            r45 = r38
            r47 = r39
            r46 = r40
            r15 = 90
            r14 = r1
            r9 = r6
            r1 = r8
            r8 = 10
            boolean r0 = r1.isVideo
            if (r0 != 0) goto L_0x0b78
            org.telegram.messenger.VideoEditedInfo r0 = r1.videoEditedInfo
            if (r0 == 0) goto L_0x0693
            r8 = r1
            r62 = r48
            r25 = r50
            r37 = r51
            r29 = r52
            r15 = r56
            r65 = r57
            r67 = r59
            r68 = r60
            r0 = 90
            goto L_0x0b8b
        L_0x0693:
            java.lang.String r0 = r1.path
            java.lang.String r2 = r1.path
            if (r2 != 0) goto L_0x06c2
            android.net.Uri r3 = r1.uri
            if (r3 == 0) goto L_0x06c2
            int r3 = android.os.Build.VERSION.SDK_INT
            r4 = 30
            if (r3 < r4) goto L_0x06b3
            android.net.Uri r3 = r1.uri
            java.lang.String r3 = r3.getScheme()
            java.lang.String r4 = "content"
            boolean r3 = r4.equals(r3)
            if (r3 == 0) goto L_0x06b3
            r2 = 0
            goto L_0x06b9
        L_0x06b3:
            android.net.Uri r3 = r1.uri
            java.lang.String r2 = org.telegram.messenger.AndroidUtilities.getPath(r3)
        L_0x06b9:
            android.net.Uri r3 = r1.uri
            java.lang.String r0 = r3.toString()
            r3 = r2
            r2 = r0
            goto L_0x06c4
        L_0x06c2:
            r3 = r2
            r2 = r0
        L_0x06c4:
            r4 = 0
            if (r86 == 0) goto L_0x07a3
            android.net.Uri r0 = r1.uri
            if (r0 == 0) goto L_0x07a3
            android.content.ClipDescription r5 = r86.getDescription()
            java.lang.String r0 = "image/png"
            boolean r0 = r5.hasMimeType(r0)
            if (r0 == 0) goto L_0x079a
            r6 = 0
            r7 = 0
            android.graphics.BitmapFactory$Options r0 = new android.graphics.BitmapFactory$Options     // Catch:{ all -> 0x0765 }
            r0.<init>()     // Catch:{ all -> 0x0765 }
            android.content.Context r15 = org.telegram.messenger.ApplicationLoader.applicationContext     // Catch:{ all -> 0x0765 }
            android.content.ContentResolver r15 = r15.getContentResolver()     // Catch:{ all -> 0x0765 }
            android.net.Uri r8 = r1.uri     // Catch:{ all -> 0x0765 }
            java.io.InputStream r8 = r15.openInputStream(r8)     // Catch:{ all -> 0x0765 }
            r6 = r8
            r8 = 0
            android.graphics.Bitmap r15 = android.graphics.BitmapFactory.decodeStream(r6, r8, r0)     // Catch:{ all -> 0x0765 }
            r8 = r15
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ all -> 0x0765 }
            r15.<init>()     // Catch:{ all -> 0x0765 }
            r17 = r0
            java.lang.String r0 = "-2147483648_"
            r15.append(r0)     // Catch:{ all -> 0x0765 }
            int r0 = org.telegram.messenger.SharedConfig.getLastLocalId()     // Catch:{ all -> 0x0765 }
            r15.append(r0)     // Catch:{ all -> 0x0765 }
            r18 = r7
            r7 = r52
            r15.append(r7)     // Catch:{ all -> 0x075d }
            java.lang.String r0 = r15.toString()     // Catch:{ all -> 0x075d }
            java.io.File r15 = org.telegram.messenger.FileLoader.getDirectory(r41)     // Catch:{ all -> 0x075d }
            r23 = r2
            java.io.File r2 = new java.io.File     // Catch:{ all -> 0x0757 }
            r2.<init>(r15, r0)     // Catch:{ all -> 0x0757 }
            r25 = r0
            java.io.FileOutputStream r0 = new java.io.FileOutputStream     // Catch:{ all -> 0x0757 }
            r0.<init>(r2)     // Catch:{ all -> 0x0757 }
            r18 = r0
            android.graphics.Bitmap$CompressFormat r0 = android.graphics.Bitmap.CompressFormat.WEBP     // Catch:{ all -> 0x074f }
            r28 = r4
            r4 = 100
            r29 = r5
            r5 = r18
            r8.compress(r0, r4, r5)     // Catch:{ all -> 0x074b }
            org.telegram.messenger.SharedConfig.saveConfig()     // Catch:{ all -> 0x074b }
            android.net.Uri r0 = android.net.Uri.fromFile(r2)     // Catch:{ all -> 0x074b }
            r1.uri = r0     // Catch:{ all -> 0x074b }
            if (r6 == 0) goto L_0x0741
            r6.close()     // Catch:{ Exception -> 0x073f }
            goto L_0x0741
        L_0x073f:
            r0 = move-exception
            goto L_0x0742
        L_0x0741:
        L_0x0742:
            r5.close()     // Catch:{ Exception -> 0x0748 }
            goto L_0x07a9
        L_0x0748:
            r0 = move-exception
            goto L_0x07a9
        L_0x074b:
            r0 = move-exception
            r18 = r5
            goto L_0x0770
        L_0x074f:
            r0 = move-exception
            r28 = r4
            r29 = r5
            r5 = r18
            goto L_0x0770
        L_0x0757:
            r0 = move-exception
            r28 = r4
            r29 = r5
            goto L_0x0770
        L_0x075d:
            r0 = move-exception
            r23 = r2
            r28 = r4
            r29 = r5
            goto L_0x0770
        L_0x0765:
            r0 = move-exception
            r23 = r2
            r28 = r4
            r29 = r5
            r18 = r7
            r7 = r52
        L_0x0770:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0785 }
            if (r6 == 0) goto L_0x077b
            r6.close()     // Catch:{ Exception -> 0x0779 }
            goto L_0x077b
        L_0x0779:
            r0 = move-exception
            goto L_0x077c
        L_0x077b:
        L_0x077c:
            if (r18 == 0) goto L_0x0784
            r18.close()     // Catch:{ Exception -> 0x0782 }
            goto L_0x0784
        L_0x0782:
            r0 = move-exception
            goto L_0x07a9
        L_0x0784:
            goto L_0x07a9
        L_0x0785:
            r0 = move-exception
            r2 = r0
            if (r6 == 0) goto L_0x078f
            r6.close()     // Catch:{ Exception -> 0x078d }
            goto L_0x078f
        L_0x078d:
            r0 = move-exception
            goto L_0x0790
        L_0x078f:
        L_0x0790:
            if (r18 == 0) goto L_0x0798
            r18.close()     // Catch:{ Exception -> 0x0796 }
            goto L_0x0798
        L_0x0796:
            r0 = move-exception
            goto L_0x0799
        L_0x0798:
        L_0x0799:
            throw r2
        L_0x079a:
            r23 = r2
            r28 = r4
            r29 = r5
            r7 = r52
            goto L_0x07a9
        L_0x07a3:
            r23 = r2
            r28 = r4
            r7 = r52
        L_0x07a9:
            if (r78 != 0) goto L_0x0832
            java.lang.String r0 = r1.path
            android.net.Uri r2 = r1.uri
            boolean r0 = org.telegram.messenger.ImageLoader.shouldSendImageAsDocument(r0, r2)
            if (r0 == 0) goto L_0x07b9
            r15 = r51
            goto L_0x0834
        L_0x07b9:
            boolean r0 = r1.forceImage
            if (r0 != 0) goto L_0x07e8
            if (r3 == 0) goto L_0x07e8
            r15 = r51
            boolean r0 = r3.endsWith(r15)
            if (r0 != 0) goto L_0x07cd
            boolean r0 = r3.endsWith(r7)
            if (r0 == 0) goto L_0x07ea
        L_0x07cd:
            int r0 = r1.ttl
            if (r0 > 0) goto L_0x07ea
            boolean r0 = r3.endsWith(r15)
            if (r0 == 0) goto L_0x07dc
            java.lang.String r0 = "gif"
            r24 = r0
            goto L_0x07e0
        L_0x07dc:
            java.lang.String r0 = "webp"
            r24 = r0
        L_0x07e0:
            r4 = 1
            r8 = r3
            r28 = r4
            r2 = r23
            goto L_0x0849
        L_0x07e8:
            r15 = r51
        L_0x07ea:
            boolean r0 = r1.forceImage
            if (r0 != 0) goto L_0x082e
            if (r3 != 0) goto L_0x082e
            android.net.Uri r0 = r1.uri
            if (r0 == 0) goto L_0x082e
            android.net.Uri r0 = r1.uri
            boolean r0 = org.telegram.messenger.MediaController.isGif(r0)
            if (r0 == 0) goto L_0x0811
            r4 = 1
            android.net.Uri r0 = r1.uri
            java.lang.String r2 = r0.toString()
            android.net.Uri r0 = r1.uri
            java.lang.String r5 = "gif"
            java.lang.String r3 = org.telegram.messenger.MediaController.copyFileToCache(r0, r5)
            java.lang.String r24 = "gif"
            r8 = r3
            r28 = r4
            goto L_0x0849
        L_0x0811:
            android.net.Uri r0 = r1.uri
            boolean r0 = org.telegram.messenger.MediaController.isWebp(r0)
            if (r0 == 0) goto L_0x082e
            r4 = 1
            android.net.Uri r0 = r1.uri
            java.lang.String r2 = r0.toString()
            android.net.Uri r0 = r1.uri
            java.lang.String r5 = "webp"
            java.lang.String r3 = org.telegram.messenger.MediaController.copyFileToCache(r0, r5)
            java.lang.String r24 = "webp"
            r8 = r3
            r28 = r4
            goto L_0x0849
        L_0x082e:
            r8 = r3
            r2 = r23
            goto L_0x0849
        L_0x0832:
            r15 = r51
        L_0x0834:
            r4 = 1
            if (r3 == 0) goto L_0x0841
            java.io.File r0 = new java.io.File
            r0.<init>(r3)
            java.lang.String r6 = org.telegram.messenger.FileLoader.getFileExtension(r0)
            goto L_0x0842
        L_0x0841:
            r6 = r9
        L_0x0842:
            r24 = r6
            r8 = r3
            r28 = r4
            r2 = r23
        L_0x0849:
            if (r28 == 0) goto L_0x08a3
            r6 = r56
            if (r6 != 0) goto L_0x086c
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r10 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r4 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            r6 = r3
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            goto L_0x0875
        L_0x086c:
            r10 = r6
            r6 = r45
            r4 = r46
            r3 = r47
            r0 = r49
        L_0x0875:
            r10.add(r8)
            r4.add(r2)
            android.net.Uri r5 = r1.uri
            r3.add(r5)
            java.lang.String r5 = r1.caption
            r0.add(r5)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r5 = r1.entities
            r6.add(r5)
            r2 = r0
            r29 = r7
            r37 = r15
            r0 = r22
            r36 = r26
            r7 = r30
            r25 = r50
            r38 = r57
            r53 = r59
            r70 = r60
            r43 = 0
            r52 = 0
            goto L_0x105d
        L_0x08a3:
            r6 = r56
            if (r8 == 0) goto L_0x08cd
            java.io.File r0 = new java.io.File
            r0.<init>(r8)
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r2)
            long r4 = r0.length()
            r3.append(r4)
            r5 = r48
            r3.append(r5)
            long r4 = r0.lastModified()
            r3.append(r4)
            java.lang.String r0 = r3.toString()
            r5 = r0
            goto L_0x08cf
        L_0x08cd:
            r0 = 0
            r5 = r0
        L_0x08cf:
            r0 = 0
            r2 = 0
            r4 = r50
            if (r4 == 0) goto L_0x0908
            java.lang.Object r3 = r4.get(r1)
            org.telegram.messenger.SendMessagesHelper$MediaSendPrepareWorker r3 = (org.telegram.messenger.SendMessagesHelper.MediaSendPrepareWorker) r3
            r17 = r2
            org.telegram.tgnet.TLRPC$TL_photo r2 = r3.photo
            r50 = r4
            java.lang.String r4 = r3.parentObject
            if (r2 != 0) goto L_0x08f3
            java.util.concurrent.CountDownLatch r0 = r3.sync     // Catch:{ Exception -> 0x08eb }
            r0.await()     // Catch:{ Exception -> 0x08eb }
            goto L_0x08ef
        L_0x08eb:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x08ef:
            org.telegram.tgnet.TLRPC$TL_photo r2 = r3.photo
            java.lang.String r4 = r3.parentObject
        L_0x08f3:
            r17 = r4
            r61 = r5
            r63 = r6
            r29 = r7
            r64 = r8
            r51 = r15
            r62 = r48
            r25 = r50
            r15 = 10
            r8 = r2
            goto L_0x09de
        L_0x0908:
            r17 = r2
            r50 = r4
            if (r26 != 0) goto L_0x09a7
            int r2 = r1.ttl
            if (r2 != 0) goto L_0x09a7
            org.telegram.messenger.MessagesStorage r2 = r80.getMessagesStorage()
            if (r26 != 0) goto L_0x091a
            r3 = 0
            goto L_0x091b
        L_0x091a:
            r3 = 3
        L_0x091b:
            java.lang.Object[] r2 = r2.getSentFile(r5, r3)
            if (r2 == 0) goto L_0x0937
            r4 = 0
            r3 = r2[r4]
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r3 == 0) goto L_0x0935
            r3 = r2[r4]
            r0 = r3
            org.telegram.tgnet.TLRPC$TL_photo r0 = (org.telegram.tgnet.TLRPC.TL_photo) r0
            r3 = 1
            r18 = r2[r3]
            r17 = r18
            java.lang.String r17 = (java.lang.String) r17
            goto L_0x0939
        L_0x0935:
            r3 = 1
            goto L_0x0939
        L_0x0937:
            r3 = 1
            r4 = 0
        L_0x0939:
            if (r0 != 0) goto L_0x0976
            android.net.Uri r3 = r1.uri
            if (r3 == 0) goto L_0x0972
            org.telegram.messenger.MessagesStorage r3 = r80.getMessagesStorage()
            android.net.Uri r4 = r1.uri
            java.lang.String r4 = org.telegram.messenger.AndroidUtilities.getPath(r4)
            r18 = r0
            if (r26 != 0) goto L_0x094f
            r0 = 0
            goto L_0x0950
        L_0x094f:
            r0 = 3
        L_0x0950:
            java.lang.Object[] r2 = r3.getSentFile(r4, r0)
            if (r2 == 0) goto L_0x096f
            r4 = 0
            r0 = r2[r4]
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r0 == 0) goto L_0x096d
            r0 = r2[r4]
            org.telegram.tgnet.TLRPC$TL_photo r0 = (org.telegram.tgnet.TLRPC.TL_photo) r0
            r3 = 1
            r18 = r2[r3]
            r17 = r18
            java.lang.String r17 = (java.lang.String) r17
            r18 = r17
            r17 = r2
            goto L_0x097e
        L_0x096d:
            r3 = 1
            goto L_0x0978
        L_0x096f:
            r3 = 1
            r4 = 0
            goto L_0x0978
        L_0x0972:
            r18 = r0
            r3 = 1
            goto L_0x0978
        L_0x0976:
            r18 = r0
        L_0x0978:
            r0 = r18
            r18 = r17
            r17 = r2
        L_0x097e:
            java.lang.String r2 = r1.path
            r36 = r6
            android.net.Uri r6 = r1.uri
            r32 = 0
            r23 = r2
            r2 = r80
            r3 = r26
            r25 = r50
            r4 = r0
            r61 = r5
            r62 = r48
            r5 = r23
            r63 = r36
            r29 = r7
            r64 = r8
            r51 = r15
            r15 = 10
            r7 = r32
            ensureMediaThumbExists(r2, r3, r4, r5, r6, r7)
            r2 = r18
            goto L_0x09b9
        L_0x09a7:
            r61 = r5
            r63 = r6
            r29 = r7
            r64 = r8
            r51 = r15
            r62 = r48
            r25 = r50
            r15 = 10
            r2 = r17
        L_0x09b9:
            if (r0 != 0) goto L_0x09db
            org.telegram.messenger.SendMessagesHelper r3 = r80.getSendMessagesHelper()
            java.lang.String r4 = r1.path
            android.net.Uri r5 = r1.uri
            org.telegram.tgnet.TLRPC$TL_photo r0 = r3.generatePhotoSizes(r4, r5)
            if (r26 == 0) goto L_0x09d7
            boolean r3 = r1.canDeleteAfter
            if (r3 == 0) goto L_0x09d7
            java.io.File r3 = new java.io.File
            java.lang.String r4 = r1.path
            r3.<init>(r4)
            r3.delete()
        L_0x09d7:
            r8 = r0
            r17 = r2
            goto L_0x09de
        L_0x09db:
            r8 = r0
            r17 = r2
        L_0x09de:
            if (r8 == 0) goto L_0x0b11
            r7 = r8
            r6 = r17
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r5 = r0
            r4 = 1
            android.graphics.Bitmap[] r3 = new android.graphics.Bitmap[r4]
            java.lang.String[] r2 = new java.lang.String[r4]
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r0 = r1.masks
            if (r0 == 0) goto L_0x09fc
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r0 = r1.masks
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x09fc
            r0 = 1
            goto L_0x09fd
        L_0x09fc:
            r0 = 0
        L_0x09fd:
            r8.has_stickers = r0
            if (r0 == 0) goto L_0x0a41
            org.telegram.tgnet.SerializedData r0 = new org.telegram.tgnet.SerializedData
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r15 = r1.masks
            int r15 = r15.size()
            int r15 = r15 * 20
            int r15 = r15 + 4
            r0.<init>((int) r15)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r15 = r1.masks
            int r15 = r15.size()
            r0.writeInt32(r15)
            r15 = 0
        L_0x0a1a:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r4 = r1.masks
            int r4 = r4.size()
            if (r15 >= r4) goto L_0x0a31
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r4 = r1.masks
            java.lang.Object r4 = r4.get(r15)
            org.telegram.tgnet.TLRPC$InputDocument r4 = (org.telegram.tgnet.TLRPC.InputDocument) r4
            r4.serializeToStream(r0)
            int r15 = r15 + 1
            r4 = 1
            goto L_0x0a1a
        L_0x0a31:
            byte[] r4 = r0.toByteArray()
            java.lang.String r4 = org.telegram.messenger.Utilities.bytesToHex(r4)
            java.lang.String r15 = "masks"
            r5.put(r15, r4)
            r0.cleanup()
        L_0x0a41:
            r15 = r61
            if (r15 == 0) goto L_0x0a48
            r5.put(r11, r15)
        L_0x0a48:
            if (r6 == 0) goto L_0x0a4d
            r5.put(r10, r6)
        L_0x0a4d:
            if (r79 == 0) goto L_0x0a5e
            int r0 = r75.size()     // Catch:{ Exception -> 0x0a5b }
            r4 = 1
            if (r0 != r4) goto L_0x0a57
            goto L_0x0a5f
        L_0x0a57:
            r10 = r80
            r11 = 0
            goto L_0x0a7a
        L_0x0a5b:
            r0 = move-exception
            r4 = 1
            goto L_0x0a7c
        L_0x0a5e:
            r4 = 1
        L_0x0a5f:
            java.util.ArrayList r0 = r7.sizes     // Catch:{ Exception -> 0x0a7b }
            int r10 = org.telegram.messenger.AndroidUtilities.getPhotoSize()     // Catch:{ Exception -> 0x0a7b }
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r0, r10)     // Catch:{ Exception -> 0x0a7b }
            if (r0 == 0) goto L_0x0a77
            r10 = r80
            r11 = 0
            java.lang.String r18 = getKeyForPhotoSize(r10, r0, r3, r11, r11)     // Catch:{ Exception -> 0x0a75 }
            r2[r11] = r18     // Catch:{ Exception -> 0x0a75 }
            goto L_0x0a7a
        L_0x0a75:
            r0 = move-exception
            goto L_0x0a7f
        L_0x0a77:
            r10 = r80
            r11 = 0
        L_0x0a7a:
            goto L_0x0a82
        L_0x0a7b:
            r0 = move-exception
        L_0x0a7c:
            r10 = r80
            r11 = 0
        L_0x0a7f:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0a82:
            if (r79 == 0) goto L_0x0ab6
            int r0 = r22 + 1
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            r4.append(r9)
            r10 = r57
            r4.append(r10)
            java.lang.String r4 = r4.toString()
            r5.put(r14, r4)
            r4 = 10
            if (r0 == r4) goto L_0x0aaa
            r14 = r60
            int r4 = r14 + -1
            r9 = r59
            if (r9 != r4) goto L_0x0aa7
            goto L_0x0aae
        L_0x0aa7:
            r22 = r0
            goto L_0x0abc
        L_0x0aaa:
            r9 = r59
            r14 = r60
        L_0x0aae:
            r5.put(r13, r12)
            r30 = 0
            r22 = r0
            goto L_0x0abc
        L_0x0ab6:
            r10 = r57
            r9 = r59
            r14 = r60
        L_0x0abc:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda72 r0 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda72
            r18 = r2
            r2 = r0
            r32 = r3
            r13 = 1
            r4 = r18
            r23 = r5
            r5 = r81
            r33 = r6
            r6 = r80
            r34 = r7
            r35 = r8
            r8 = r23
            r12 = r9
            r9 = r33
            r65 = r10
            r10 = r76
            r67 = r12
            r12 = r82
            r13 = r83
            r68 = r14
            r14 = r1
            r36 = r1
            r1 = r15
            r37 = r51
            r15 = r84
            r16 = r85
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15, r16)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            r0 = r22
            r36 = r26
            r7 = r30
            r6 = r45
            r4 = r46
            r3 = r47
            r2 = r49
            r48 = r62
            r10 = r63
            r38 = r65
            r53 = r67
            r70 = r68
            r43 = 0
            r52 = 0
            goto L_0x105d
        L_0x0b11:
            r36 = r1
            r35 = r8
            r37 = r51
            r65 = r57
            r67 = r59
            r68 = r60
            r1 = r61
            r15 = r63
            if (r15 != 0) goto L_0x0b42
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r10 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r4 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r2 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r6 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r3 = r0
            goto L_0x0b4b
        L_0x0b42:
            r10 = r15
            r6 = r45
            r4 = r46
            r3 = r47
            r2 = r49
        L_0x0b4b:
            r5 = r64
            r10.add(r5)
            r4.add(r1)
            r8 = r36
            android.net.Uri r0 = r8.uri
            r3.add(r0)
            java.lang.String r0 = r8.caption
            r2.add(r0)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r8.entities
            r6.add(r0)
            r0 = r22
            r36 = r26
            r7 = r30
            r48 = r62
            r38 = r65
            r53 = r67
            r70 = r68
            r43 = 0
            r52 = 0
            goto L_0x105d
        L_0x0b78:
            r8 = r1
            r62 = r48
            r25 = r50
            r37 = r51
            r29 = r52
            r15 = r56
            r65 = r57
            r67 = r59
            r68 = r60
            r0 = 90
        L_0x0b8b:
            r1 = 0
            r17 = 0
            if (r78 == 0) goto L_0x0b93
            r5 = 0
            r6 = r5
            goto L_0x0ba1
        L_0x0b93:
            org.telegram.messenger.VideoEditedInfo r5 = r8.videoEditedInfo
            if (r5 == 0) goto L_0x0b9a
            org.telegram.messenger.VideoEditedInfo r5 = r8.videoEditedInfo
            goto L_0x0ba0
        L_0x0b9a:
            java.lang.String r5 = r8.path
            org.telegram.messenger.VideoEditedInfo r5 = createCompressionSettings(r5)
        L_0x0ba0:
            r6 = r5
        L_0x0ba1:
            if (r78 != 0) goto L_0x0fff
            if (r6 != 0) goto L_0x0bc5
            java.lang.String r5 = r8.path
            boolean r2 = r5.endsWith(r2)
            if (r2 == 0) goto L_0x0bae
            goto L_0x0bc5
        L_0x0bae:
            r34 = r1
            r23 = r6
            r1 = r8
            r71 = r15
            r36 = r26
            r48 = r62
            r38 = r65
            r53 = r67
            r70 = r68
            r43 = 0
            r52 = 0
            goto L_0x1014
        L_0x0bc5:
            java.lang.String r2 = r8.path
            if (r2 != 0) goto L_0x0CLASSNAME
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            if (r2 == 0) goto L_0x0CLASSNAME
            org.telegram.messenger.MediaController$SearchImage r2 = r8.searchImage
            org.telegram.tgnet.TLRPC$Photo r2 = r2.photo
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photo
            if (r2 == 0) goto L_0x0bed
            int r2 = r80.getCurrentAccount()
            org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
            org.telegram.messenger.MediaController$SearchImage r3 = r8.searchImage
            org.telegram.tgnet.TLRPC$Photo r3 = r3.photo
            r5 = 1
            java.io.File r2 = r2.getPathToAttach(r3, r5)
            java.lang.String r2 = r2.getAbsolutePath()
            r8.path = r2
            goto L_0x0CLASSNAME
        L_0x0bed:
            r5 = 1
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            org.telegram.messenger.MediaController$SearchImage r0 = r8.searchImage
            java.lang.String r0 = r0.imageUrl
            java.lang.String r0 = org.telegram.messenger.Utilities.MD5(r0)
            r2.append(r0)
            r2.append(r4)
            org.telegram.messenger.MediaController$SearchImage r0 = r8.searchImage
            java.lang.String r0 = r0.imageUrl
            java.lang.String r0 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r0, r3)
            r2.append(r0)
            java.lang.String r0 = r2.toString()
            java.io.File r2 = new java.io.File
            java.io.File r3 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r2.<init>(r3, r0)
            java.lang.String r2 = r2.getAbsolutePath()
            r8.path = r2
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r5 = 1
        L_0x0CLASSNAME:
            java.lang.String r0 = r8.path
            java.lang.String r2 = r8.path
            java.io.File r3 = new java.io.File
            r3.<init>(r2)
            r28 = r3
            r3 = 0
            r18 = 0
            java.lang.StringBuilder r5 = new java.lang.StringBuilder
            r5.<init>()
            r5.append(r2)
            r35 = r0
            r34 = r1
            long r0 = r28.length()
            r5.append(r0)
            r1 = r62
            r5.append(r1)
            r0 = r2
            r38 = r3
            long r2 = r28.lastModified()
            r5.append(r2)
            java.lang.String r0 = r5.toString()
            if (r6 == 0) goto L_0x0cb5
            boolean r2 = r6.muted
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            long r4 = r6.estimatedDuration
            r3.append(r4)
            r3.append(r1)
            long r4 = r6.startTime
            r3.append(r4)
            r3.append(r1)
            long r4 = r6.endTime
            r3.append(r4)
            boolean r4 = r6.muted
            if (r4 == 0) goto L_0x0c7e
            java.lang.String r4 = "_m"
            goto L_0x0c7f
        L_0x0c7e:
            r4 = r9
        L_0x0c7f:
            r3.append(r4)
            java.lang.String r0 = r3.toString()
            int r3 = r6.resultWidth
            int r4 = r6.originalWidth
            if (r3 == r4) goto L_0x0ca0
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            r3.append(r1)
            int r4 = r6.resultWidth
            r3.append(r4)
            java.lang.String r0 = r3.toString()
        L_0x0ca0:
            long r3 = r6.startTime
            r32 = 0
            int r5 = (r3 > r32 ? 1 : (r3 == r32 ? 0 : -1))
            if (r5 < 0) goto L_0x0cad
            long r3 = r6.startTime
            r32 = r3
            goto L_0x0caf
        L_0x0cad:
            r32 = 0
        L_0x0caf:
            r3 = r32
            r32 = r2
            r4 = r3
            goto L_0x0cb9
        L_0x0cb5:
            r32 = r18
            r4 = r38
        L_0x0cb9:
            r2 = 0
            r3 = 0
            if (r26 != 0) goto L_0x0d4f
            r48 = r1
            int r1 = r8.ttl
            if (r1 != 0) goto L_0x0d51
            if (r6 == 0) goto L_0x0ce4
            org.telegram.messenger.MediaController$SavedFilterState r1 = r6.filterState
            if (r1 != 0) goto L_0x0cd6
            java.lang.String r1 = r6.paintPath
            if (r1 != 0) goto L_0x0cd6
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r6.mediaEntities
            if (r1 != 0) goto L_0x0cd6
            org.telegram.messenger.MediaController$CropState r1 = r6.cropState
            if (r1 != 0) goto L_0x0cd6
            goto L_0x0ce4
        L_0x0cd6:
            r33 = r2
            r18 = r3
            r42 = r4
            r69 = r6
            r1 = r8
            r23 = r9
            r9 = r7
            goto L_0x0d5d
        L_0x0ce4:
            org.telegram.messenger.MessagesStorage r1 = r80.getMessagesStorage()
            if (r26 != 0) goto L_0x0cf0
            r18 = 2
            r33 = r2
            r2 = 2
            goto L_0x0cf5
        L_0x0cf0:
            r18 = 5
            r33 = r2
            r2 = 5
        L_0x0cf5:
            java.lang.Object[] r1 = r1.getSentFile(r0, r2)
            if (r1 == 0) goto L_0x0d42
            r18 = r3
            r2 = 0
            r3 = r1[r2]
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r3 == 0) goto L_0x0d37
            r3 = r1[r2]
            r33 = r3
            org.telegram.tgnet.TLRPC$TL_document r33 = (org.telegram.tgnet.TLRPC.TL_document) r33
            r36 = 1
            r3 = r1[r36]
            r18 = r3
            java.lang.String r18 = (java.lang.String) r18
            java.lang.String r3 = r8.path
            r38 = 0
            r2 = r80
            r39 = r3
            r3 = r26
            r42 = r4
            r4 = r33
            r40 = r1
            r1 = 1
            r5 = r39
            r69 = r6
            r6 = r38
            r1 = r8
            r23 = r9
            r9 = r7
            r7 = r42
            ensureMediaThumbExists(r2, r3, r4, r5, r6, r7)
            r2 = r33
            r33 = r18
            goto L_0x0d61
        L_0x0d37:
            r40 = r1
            r42 = r4
            r69 = r6
            r1 = r8
            r23 = r9
            r9 = r7
            goto L_0x0d5d
        L_0x0d42:
            r40 = r1
            r18 = r3
            r42 = r4
            r69 = r6
            r1 = r8
            r23 = r9
            r9 = r7
            goto L_0x0d5d
        L_0x0d4f:
            r48 = r1
        L_0x0d51:
            r33 = r2
            r18 = r3
            r42 = r4
            r69 = r6
            r1 = r8
            r23 = r9
            r9 = r7
        L_0x0d5d:
            r2 = r33
            r33 = r18
        L_0x0d61:
            if (r2 != 0) goto L_0x0e84
            java.lang.String r3 = r1.thumbPath
            if (r3 == 0) goto L_0x0d6f
            java.lang.String r3 = r1.thumbPath
            android.graphics.Bitmap r3 = android.graphics.BitmapFactory.decodeFile(r3)
            r34 = r3
        L_0x0d6f:
            if (r34 != 0) goto L_0x0d83
            java.lang.String r3 = r1.path
            r6 = r42
            android.graphics.Bitmap r3 = createVideoThumbnailAtTime(r3, r6)
            if (r3 != 0) goto L_0x0d87
            java.lang.String r4 = r1.path
            r5 = 1
            android.graphics.Bitmap r3 = createVideoThumbnail(r4, r5)
            goto L_0x0d87
        L_0x0d83:
            r6 = r42
            r3 = r34
        L_0x0d87:
            r4 = 0
            if (r3 == 0) goto L_0x0dc7
            if (r26 != 0) goto L_0x0d9e
            int r5 = r1.ttl
            if (r5 == 0) goto L_0x0d91
            goto L_0x0d9e
        L_0x0d91:
            int r5 = r3.getWidth()
            int r8 = r3.getHeight()
            int r5 = java.lang.Math.max(r5, r8)
            goto L_0x0da0
        L_0x0d9e:
            r5 = 90
        L_0x0da0:
            float r8 = (float) r5
            r18 = r2
            float r2 = (float) r5
            r34 = r4
            r4 = 90
            if (r5 <= r4) goto L_0x0daf
            r36 = 80
            r4 = 80
            goto L_0x0db3
        L_0x0daf:
            r36 = 55
            r4 = 55
        L_0x0db3:
            r36 = r15
            r15 = r26
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r3, r8, r2, r4, r15)
            r2 = r80
            r42 = r6
            r6 = 1
            r7 = 0
            r8 = 0
            java.lang.String r17 = getKeyForPhotoSize(r2, r4, r8, r6, r7)
            goto L_0x0dd4
        L_0x0dc7:
            r18 = r2
            r34 = r4
            r42 = r6
            r36 = r15
            r15 = r26
            r7 = 0
            r2 = r80
        L_0x0dd4:
            org.telegram.tgnet.TLRPC$TL_document r5 = new org.telegram.tgnet.TLRPC$TL_document
            r5.<init>()
            byte[] r6 = new byte[r7]
            r5.file_reference = r6
            if (r4 == 0) goto L_0x0dea
            java.util.ArrayList r6 = r5.thumbs
            r6.add(r4)
            int r6 = r5.flags
            r8 = 1
            r6 = r6 | r8
            r5.flags = r6
        L_0x0dea:
            r5.mime_type = r9
            org.telegram.messenger.UserConfig r6 = r80.getUserConfig()
            r6.saveConfig(r7)
            if (r15 == 0) goto L_0x0dfb
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r6 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r6.<init>()
            goto L_0x0e03
        L_0x0dfb:
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r6 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r6.<init>()
            r8 = 1
            r6.supports_streaming = r8
        L_0x0e03:
            java.util.ArrayList r8 = r5.attributes
            r8.add(r6)
            r9 = r69
            if (r9 == 0) goto L_0x0e6a
            boolean r8 = r9.needConvert()
            if (r8 != 0) goto L_0x0e1a
            boolean r8 = r1.isVideo
            if (r8 != 0) goto L_0x0e17
            goto L_0x0e1a
        L_0x0e17:
            r26 = r3
            goto L_0x0e6c
        L_0x0e1a:
            boolean r8 = r1.isVideo
            if (r8 == 0) goto L_0x0e30
            boolean r8 = r9.muted
            if (r8 == 0) goto L_0x0e30
            java.lang.String r8 = r1.path
            fillVideoAttribute(r8, r6, r9)
            int r8 = r6.w
            r9.originalWidth = r8
            int r8 = r6.h
            r9.originalHeight = r8
            goto L_0x0e39
        L_0x0e30:
            long r7 = r9.estimatedDuration
            r38 = 1000(0x3e8, double:4.94E-321)
            long r7 = r7 / r38
            int r8 = (int) r7
            r6.duration = r8
        L_0x0e39:
            int r7 = r9.rotationValue
            org.telegram.messenger.MediaController$CropState r8 = r9.cropState
            if (r8 == 0) goto L_0x0e48
            org.telegram.messenger.MediaController$CropState r8 = r9.cropState
            int r8 = r8.transformWidth
            org.telegram.messenger.MediaController$CropState r2 = r9.cropState
            int r2 = r2.transformHeight
            goto L_0x0e4c
        L_0x0e48:
            int r8 = r9.resultWidth
            int r2 = r9.resultHeight
        L_0x0e4c:
            r26 = r3
            r3 = 90
            if (r7 == r3) goto L_0x0e5c
            r3 = 270(0x10e, float:3.78E-43)
            if (r7 != r3) goto L_0x0e57
            goto L_0x0e5c
        L_0x0e57:
            r6.w = r8
            r6.h = r2
            goto L_0x0e60
        L_0x0e5c:
            r6.w = r2
            r6.h = r8
        L_0x0e60:
            r18 = r2
            long r2 = r9.estimatedSize
            int r3 = (int) r2
            long r2 = (long) r3
            r5.size = r2
            r7 = 0
            goto L_0x0e80
        L_0x0e6a:
            r26 = r3
        L_0x0e6c:
            boolean r2 = r28.exists()
            if (r2 == 0) goto L_0x0e7a
            long r2 = r28.length()
            int r3 = (int) r2
            long r2 = (long) r3
            r5.size = r2
        L_0x0e7a:
            java.lang.String r2 = r1.path
            r7 = 0
            fillVideoAttribute(r2, r6, r7)
        L_0x0e80:
            r6 = r5
            r27 = r17
            goto L_0x0e93
        L_0x0e84:
            r18 = r2
            r36 = r15
            r15 = r26
            r9 = r69
            r7 = 0
            r27 = r17
            r6 = r18
            r26 = r34
        L_0x0e93:
            if (r9 == 0) goto L_0x0ebe
            boolean r2 = r9.muted
            if (r2 == 0) goto L_0x0ebe
            r2 = 0
            r3 = 0
            java.util.ArrayList r4 = r6.attributes
            int r4 = r4.size()
        L_0x0ea1:
            if (r3 >= r4) goto L_0x0eb2
            java.util.ArrayList r5 = r6.attributes
            java.lang.Object r5 = r5.get(r3)
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeAnimated
            if (r5 == 0) goto L_0x0eaf
            r2 = 1
            goto L_0x0eb2
        L_0x0eaf:
            int r3 = r3 + 1
            goto L_0x0ea1
        L_0x0eb2:
            if (r2 != 0) goto L_0x0ebe
            java.util.ArrayList r3 = r6.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r4 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r4.<init>()
            r3.add(r4)
        L_0x0ebe:
            if (r9 == 0) goto L_0x0ef6
            boolean r2 = r9.needConvert()
            if (r2 != 0) goto L_0x0eca
            boolean r2 = r1.isVideo
            if (r2 != 0) goto L_0x0ef6
        L_0x0eca:
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            java.lang.String r3 = "-2147483648_"
            r2.append(r3)
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            java.lang.String r3 = ".mp4"
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            java.io.File r3 = new java.io.File
            java.io.File r4 = org.telegram.messenger.FileLoader.getDirectory(r41)
            r3.<init>(r4, r2)
            org.telegram.messenger.SharedConfig.saveConfig()
            java.lang.String r4 = r3.getAbsolutePath()
            r35 = r4
        L_0x0ef6:
            r8 = r6
            r5 = r33
            r34 = r0
            r2 = r23
            r23 = r9
            r9 = r35
            java.util.HashMap r3 = new java.util.HashMap
            r3.<init>()
            r4 = r3
            r3 = r26
            r38 = r3
            r3 = r4
            r4 = r27
            if (r0 == 0) goto L_0x0var_
            r3.put(r11, r0)
        L_0x0var_:
            if (r5 == 0) goto L_0x0var_
            r3.put(r10, r5)
        L_0x0var_:
            if (r32 != 0) goto L_0x0var_
            if (r79 == 0) goto L_0x0var_
            int r10 = r22 + 1
            java.lang.StringBuilder r11 = new java.lang.StringBuilder
            r11.<init>()
            r11.append(r2)
            r39 = r8
            r40 = r9
            r8 = r65
            r11.append(r8)
            java.lang.String r2 = r11.toString()
            r3.put(r14, r2)
            r2 = 10
            if (r10 == r2) goto L_0x0var_
            r14 = r68
            int r2 = r14 + -1
            r11 = r67
            if (r11 != r2) goto L_0x0var_
            goto L_0x0f4a
        L_0x0var_:
            r22 = r10
            goto L_0x0f5c
        L_0x0var_:
            r11 = r67
            r14 = r68
        L_0x0f4a:
            r3.put(r13, r12)
            r30 = 0
            r22 = r10
            goto L_0x0f5c
        L_0x0var_:
            r39 = r8
            r40 = r9
            r8 = r65
            r11 = r67
            r14 = r68
        L_0x0f5c:
            if (r15 != 0) goto L_0x0fb3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r2 = r1.masks
            if (r2 == 0) goto L_0x0fb3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r2 = r1.masks
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x0fb3
            java.util.ArrayList r2 = r6.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers r10 = new org.telegram.tgnet.TLRPC$TL_documentAttributeHasStickers
            r10.<init>()
            r2.add(r10)
            org.telegram.tgnet.SerializedData r2 = new org.telegram.tgnet.SerializedData
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r10 = r1.masks
            int r10 = r10.size()
            int r10 = r10 * 20
            int r10 = r10 + 4
            r2.<init>((int) r10)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r10 = r1.masks
            int r10 = r10.size()
            r2.writeInt32(r10)
            r10 = 0
        L_0x0f8d:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r12 = r1.masks
            int r12 = r12.size()
            if (r10 >= r12) goto L_0x0fa3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputDocument> r12 = r1.masks
            java.lang.Object r12 = r12.get(r10)
            org.telegram.tgnet.TLRPC$InputDocument r12 = (org.telegram.tgnet.TLRPC.InputDocument) r12
            r12.serializeToStream(r2)
            int r10 = r10 + 1
            goto L_0x0f8d
        L_0x0fa3:
            byte[] r10 = r2.toByteArray()
            java.lang.String r10 = org.telegram.messenger.Utilities.bytesToHex(r10)
            java.lang.String r12 = "masks"
            r3.put(r12, r10)
            r2.cleanup()
        L_0x0fb3:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda66 r41 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda66
            r12 = r80
            r2 = r41
            r44 = r5
            r5 = r81
            r50 = r42
            r42 = r6
            r6 = r80
            r43 = r7
            r52 = 0
            r7 = r23
            r10 = r3
            r53 = r11
            r11 = r44
            r12 = r76
            r70 = r14
            r14 = r82
            r71 = r36
            r36 = r15
            r15 = r83
            r16 = r1
            r17 = r84
            r18 = r85
            r72 = r40
            r40 = r3
            r3 = r38
            r73 = r8
            r8 = r39
            r38 = r73
            r9 = r72
            r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r14, r15, r16, r17, r18)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r41)
            r6 = r45
            r4 = r46
            r3 = r47
            r2 = r49
            r10 = r71
            goto L_0x1059
        L_0x0fff:
            r34 = r1
            r23 = r6
            r1 = r8
            r71 = r15
            r36 = r26
            r48 = r62
            r38 = r65
            r53 = r67
            r70 = r68
            r43 = 0
            r52 = 0
        L_0x1014:
            r15 = r71
            if (r15 != 0) goto L_0x1037
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r10 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r4 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r2 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r6 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r3 = r0
            goto L_0x1040
        L_0x1037:
            r10 = r15
            r6 = r45
            r4 = r46
            r3 = r47
            r2 = r49
        L_0x1040:
            java.lang.String r0 = r1.path
            r10.add(r0)
            java.lang.String r0 = r1.path
            r4.add(r0)
            android.net.Uri r0 = r1.uri
            r3.add(r0)
            java.lang.String r0 = r1.caption
            r2.add(r0)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$MessageEntity> r0 = r1.entities
            r6.add(r0)
        L_0x1059:
            r0 = r22
            r7 = r30
        L_0x105d:
            int r5 = r53 + 1
            r1 = r75
            r15 = r80
            r11 = r25
            r27 = r29
            r13 = r36
            r18 = r37
            r22 = r38
            r9 = r48
            r14 = r70
            r12 = 1
            goto L_0x020b
        L_0x1074:
            r49 = r2
            r47 = r3
            r46 = r4
            r53 = r5
            r45 = r6
            r15 = r10
            r25 = r11
            r70 = r14
            r36 = r16
            r52 = 0
            r1 = 0
            int r3 = (r30 > r1 ? 1 : (r30 == r1 ? 0 : -1))
            if (r3 == 0) goto L_0x1097
            r1 = r80
            r14 = r85
            r7 = r30
            finishGroup(r1, r7, r14)
            goto L_0x109d
        L_0x1097:
            r1 = r80
            r14 = r85
            r7 = r30
        L_0x109d:
            if (r86 == 0) goto L_0x10a2
            r86.releasePermission()
        L_0x10a2:
            if (r15 == 0) goto L_0x1170
            boolean r2 = r15.isEmpty()
            if (r2 != 0) goto L_0x1170
            r2 = 1
            long[] r13 = new long[r2]
            int r12 = r15.size()
            r2 = 0
            r11 = r2
        L_0x10b3:
            if (r11 >= r12) goto L_0x115a
            if (r78 == 0) goto L_0x10cc
            if (r36 != 0) goto L_0x10cc
            r10 = r70
            r2 = 1
            if (r10 <= r2) goto L_0x10ce
            int r2 = r0 % 10
            if (r2 != 0) goto L_0x10ce
            java.security.SecureRandom r2 = org.telegram.messenger.Utilities.random
            long r2 = r2.nextLong()
            r13[r52] = r2
            r0 = 0
            goto L_0x10ce
        L_0x10cc:
            r10 = r70
        L_0x10ce:
            r26 = 1
            int r0 = r0 + 1
            java.lang.Object r2 = r15.get(r11)
            r3 = r2
            java.lang.String r3 = (java.lang.String) r3
            r9 = r46
            java.lang.Object r2 = r9.get(r11)
            r4 = r2
            java.lang.String r4 = (java.lang.String) r4
            r6 = r47
            java.lang.Object r2 = r6.get(r11)
            r5 = r2
            android.net.Uri r5 = (android.net.Uri) r5
            r2 = r49
            java.lang.Object r17 = r2.get(r11)
            java.lang.CharSequence r17 = (java.lang.CharSequence) r17
            r1 = r45
            java.lang.Object r18 = r1.get(r11)
            java.util.ArrayList r18 = (java.util.ArrayList) r18
            r38 = r1
            r1 = 10
            if (r0 == r1) goto L_0x1108
            int r1 = r12 + -1
            if (r11 != r1) goto L_0x1106
            goto L_0x1108
        L_0x1106:
            r1 = 0
            goto L_0x1109
        L_0x1108:
            r1 = 1
        L_0x1109:
            r19 = 0
            r27 = r2
            r2 = r80
            r28 = r6
            r6 = r24
            r29 = r7
            r7 = r76
            r31 = r9
            r9 = r82
            r32 = r10
            r10 = r83
            r33 = r11
            r11 = r17
            r34 = r12
            r12 = r18
            r35 = r13
            r13 = r81
            r14 = r35
            r37 = r15
            r39 = 10
            r15 = r1
            r16 = r78
            r17 = r84
            r18 = r85
            int r1 = prepareSendingDocumentInternal(r2, r3, r4, r5, r6, r7, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19)
            r6 = r38
            handleError(r1, r2)
            int r11 = r33 + 1
            r14 = r85
            r1 = r2
            r45 = r6
            r49 = r27
            r47 = r28
            r7 = r29
            r46 = r31
            r70 = r32
            r12 = r34
            r13 = r35
            r15 = r37
            goto L_0x10b3
        L_0x115a:
            r2 = r1
            r29 = r7
            r33 = r11
            r34 = r12
            r35 = r13
            r37 = r15
            r6 = r45
            r31 = r46
            r28 = r47
            r27 = r49
            r32 = r70
            goto L_0x117f
        L_0x1170:
            r2 = r1
            r29 = r7
            r37 = r15
            r6 = r45
            r31 = r46
            r28 = r47
            r27 = r49
            r32 = r70
        L_0x117f:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x119d
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r3 = "total send time = "
            r1.append(r3)
            long r3 = java.lang.System.currentTimeMillis()
            long r3 = r3 - r20
            r1.append(r3)
            java.lang.String r1 = r1.toString()
            org.telegram.messenger.FileLog.d(r1)
        L_0x119d:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingMedia$89(java.util.ArrayList, long, boolean, boolean, org.telegram.messenger.AccountInstance, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, boolean, int, androidx.core.view.inputmethod.InputContentInfoCompat):void");
    }

    static /* synthetic */ void lambda$prepareSendingMedia$84(MediaSendPrepareWorker worker, AccountInstance accountInstance, SendingMediaInfo info, boolean isEncrypted) {
        worker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(info.path, info.uri);
        if (isEncrypted && info.canDeleteAfter) {
            new File(info.path).delete();
        }
        worker.sync.countDown();
    }

    static /* synthetic */ void lambda$prepareSendingMedia$85(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_document documentFinal, String pathFinal, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, SendingMediaInfo info, boolean notify, int scheduleDate) {
        SendingMediaInfo sendingMediaInfo = info;
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, (VideoEditedInfo) null, documentFinal, pathFinal, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(documentFinal, (VideoEditedInfo) null, pathFinal, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, 0, parentFinal, (MessageObject.SendAnimationData) null);
    }

    static /* synthetic */ void lambda$prepareSendingMedia$86(MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_photo photoFinal, boolean needDownloadHttpFinal, SendingMediaInfo info, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, boolean notify, int scheduleDate) {
        SendingMediaInfo sendingMediaInfo = info;
        String str = null;
        if (editingMessageObject != null) {
            SendMessagesHelper sendMessagesHelper = accountInstance.getSendMessagesHelper();
            if (needDownloadHttpFinal) {
                str = sendingMediaInfo.searchImage.imageUrl;
            }
            sendMessagesHelper.editMessage(editingMessageObject, photoFinal, (VideoEditedInfo) null, (TLRPC.TL_document) null, str, params, false, parentFinal);
            return;
        }
        SendMessagesHelper sendMessagesHelper2 = accountInstance.getSendMessagesHelper();
        if (needDownloadHttpFinal) {
            str = sendingMediaInfo.searchImage.imageUrl;
        }
        sendMessagesHelper2.sendMessage(photoFinal, str, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, sendingMediaInfo.ttl, parentFinal);
    }

    static /* synthetic */ void lambda$prepareSendingMedia$87(Bitmap thumbFinal, String thumbKeyFinal, MessageObject editingMessageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC.TL_document videoFinal, String finalPath, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, SendingMediaInfo info, boolean notify, int scheduleDate) {
        Bitmap bitmap = thumbFinal;
        String str = thumbKeyFinal;
        SendingMediaInfo sendingMediaInfo = info;
        if (!(bitmap == null || str == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(videoFinal, videoEditedInfo, finalPath, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, sendingMediaInfo.ttl, parentFinal, (MessageObject.SendAnimationData) null);
    }

    static /* synthetic */ void lambda$prepareSendingMedia$88(Bitmap[] bitmapFinal, String[] keyFinal, MessageObject editingMessageObject, AccountInstance accountInstance, TLRPC.TL_photo photoFinal, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, SendingMediaInfo info, boolean notify, int scheduleDate) {
        SendingMediaInfo sendingMediaInfo = info;
        if (!(bitmapFinal[0] == null || keyFinal[0] == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapFinal[0]), keyFinal[0], false);
        }
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, photoFinal, (VideoEditedInfo) null, (TLRPC.TL_document) null, (String) null, params, false, parentFinal);
            return;
        }
        accountInstance.getSendMessagesHelper().sendMessage(photoFinal, (String) null, dialogId, replyToMsg, replyToTopMsg, sendingMediaInfo.caption, sendingMediaInfo.entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, sendingMediaInfo.ttl, parentFinal);
    }

    private static void fillVideoAttribute(String videoPath, TLRPC.TL_documentAttributeVideo attributeVideo, VideoEditedInfo videoEditedInfo) {
        String rotation;
        boolean infoObtained = false;
        MediaMetadataRetriever mediaMetadataRetriever = null;
        try {
            MediaMetadataRetriever mediaMetadataRetriever2 = new MediaMetadataRetriever();
            mediaMetadataRetriever2.setDataSource(videoPath);
            String width = mediaMetadataRetriever2.extractMetadata(18);
            if (width != null) {
                attributeVideo.w = Integer.parseInt(width);
            }
            String height = mediaMetadataRetriever2.extractMetadata(19);
            if (height != null) {
                attributeVideo.h = Integer.parseInt(height);
            }
            String duration = mediaMetadataRetriever2.extractMetadata(9);
            if (duration != null) {
                attributeVideo.duration = (int) Math.ceil((double) (((float) Long.parseLong(duration)) / 1000.0f));
            }
            if (Build.VERSION.SDK_INT >= 17 && (rotation = mediaMetadataRetriever2.extractMetadata(24)) != null) {
                int val = Utilities.parseInt((CharSequence) rotation).intValue();
                if (videoEditedInfo != null) {
                    videoEditedInfo.rotationValue = val;
                } else if (val == 90 || val == 270) {
                    int temp = attributeVideo.w;
                    attributeVideo.w = attributeVideo.h;
                    attributeVideo.h = temp;
                }
            }
            infoObtained = true;
            try {
                mediaMetadataRetriever2.release();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
            if (mediaMetadataRetriever != null) {
                mediaMetadataRetriever.release();
            }
        } catch (Throwable th) {
            if (mediaMetadataRetriever != null) {
                try {
                    mediaMetadataRetriever.release();
                } catch (Exception e3) {
                    FileLog.e((Throwable) e3);
                }
            }
            throw th;
        }
        if (!infoObtained) {
            try {
                MediaPlayer mp = MediaPlayer.create(ApplicationLoader.applicationContext, Uri.fromFile(new File(videoPath)));
                if (mp != null) {
                    attributeVideo.duration = (int) Math.ceil((double) (((float) mp.getDuration()) / 1000.0f));
                    attributeVideo.w = mp.getVideoWidth();
                    attributeVideo.h = mp.getVideoHeight();
                    mp.release();
                }
            } catch (Exception e4) {
                FileLog.e((Throwable) e4);
            }
        }
    }

    public static Bitmap createVideoThumbnail(String filePath, int kind) {
        float size;
        if (kind == 2) {
            size = 1920.0f;
        } else if (kind == 3) {
            size = 96.0f;
        } else {
            size = 512.0f;
        }
        Bitmap bitmap = createVideoThumbnailAtTime(filePath, 0);
        if (bitmap == null) {
            return bitmap;
        }
        int w = bitmap.getWidth();
        int h = bitmap.getHeight();
        if (((float) w) <= size && ((float) h) <= size) {
            return bitmap;
        }
        float scale = ((float) Math.max(w, h)) / size;
        return Bitmap.createScaledBitmap(bitmap, (int) (((float) w) / scale), (int) (((float) h) / scale), true);
    }

    public static Bitmap createVideoThumbnailAtTime(String filePath, long time) {
        return createVideoThumbnailAtTime(filePath, time, (int[]) null, false);
    }

    public static Bitmap createVideoThumbnailAtTime(String filePath, long time, int[] orientation, boolean precise) {
        String str = filePath;
        long j = time;
        int[] iArr = orientation;
        boolean z = precise;
        Bitmap bitmap = null;
        if (z) {
            AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(str), true, 0, (TLRPC.Document) null, (ImageLocation) null, (Object) null, 0, 0, true);
            bitmap = animatedFileDrawable.getFrameAtTime(j, z);
            if (iArr != null) {
                iArr[0] = animatedFileDrawable.getOrientation();
            }
            animatedFileDrawable.recycle();
            if (bitmap == null) {
                return createVideoThumbnailAtTime(str, j, iArr, false);
            }
        } else {
            MediaMetadataRetriever retriever = new MediaMetadataRetriever();
            try {
                retriever.setDataSource(str);
                bitmap = retriever.getFrameAtTime(j, 1);
                if (bitmap == null) {
                    bitmap = retriever.getFrameAtTime(j, 3);
                }
                try {
                    retriever.release();
                } catch (RuntimeException e) {
                }
            } catch (Exception e2) {
                retriever.release();
            } catch (Throwable th) {
                Throwable th2 = th;
                try {
                    retriever.release();
                } catch (RuntimeException e3) {
                }
                throw th2;
            }
        }
        return bitmap;
    }

    private static VideoEditedInfo createCompressionSettings(String videoPath) {
        int compressionsCount;
        float maxSize;
        String str = videoPath;
        int[] params = new int[11];
        AnimatedFileDrawable.getVideoInfo(str, params);
        if (params[0] == 0) {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("video hasn't avc1 atom");
            }
            return null;
        }
        int originalBitrate = MediaController.getVideoBitrate(videoPath);
        if (originalBitrate == -1) {
            originalBitrate = params[3];
        }
        int bitrate = originalBitrate;
        float videoDuration = (float) params[4];
        long j = (long) params[6];
        long audioFramesSize = (long) params[5];
        int videoFramerate = params[7];
        if (Build.VERSION.SDK_INT < 18) {
            try {
                MediaCodecInfo codecInfo = MediaController.selectCodec("video/avc");
                if (codecInfo == null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("no codec info for video/avc");
                    }
                    return null;
                }
                String name = codecInfo.getName();
                if (!name.equals("OMX.google.h264.encoder") && !name.equals("OMX.ST.VFM.H264Enc") && !name.equals("OMX.Exynos.avc.enc") && !name.equals("OMX.MARVELL.VIDEO.HW.CODA7542ENCODER") && !name.equals("OMX.MARVELL.VIDEO.H264ENCODER") && !name.equals("OMX.k3.video.encoder.avc")) {
                    if (!name.equals("OMX.TI.DUCATI1.VIDEO.H264E")) {
                        if (MediaController.selectColorFormat(codecInfo, "video/avc") == 0) {
                            if (BuildVars.LOGS_ENABLED) {
                                FileLog.d("no color format for video/avc");
                            }
                            return null;
                        }
                    }
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("unsupported encoder = " + name);
                }
                return null;
            } catch (Exception e) {
                return null;
            }
        }
        VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
        videoEditedInfo.startTime = -1;
        videoEditedInfo.endTime = -1;
        videoEditedInfo.bitrate = bitrate;
        videoEditedInfo.originalPath = str;
        videoEditedInfo.framerate = videoFramerate;
        videoEditedInfo.estimatedDuration = (long) Math.ceil((double) videoDuration);
        int i = params[1];
        videoEditedInfo.originalWidth = i;
        videoEditedInfo.resultWidth = i;
        int i2 = params[2];
        videoEditedInfo.originalHeight = i2;
        videoEditedInfo.resultHeight = i2;
        videoEditedInfo.rotationValue = params[8];
        videoEditedInfo.originalDuration = (long) (videoDuration * 1000.0f);
        float maxSize2 = (float) Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight);
        if (maxSize2 > 1280.0f) {
            compressionsCount = 4;
        } else if (maxSize2 > 854.0f) {
            compressionsCount = 3;
        } else if (maxSize2 > 640.0f) {
            compressionsCount = 2;
        } else {
            compressionsCount = 1;
        }
        int selectedCompression = Math.round(((float) DownloadController.getInstance(UserConfig.selectedAccount).getMaxVideoBitrate()) / (100.0f / ((float) compressionsCount)));
        if (selectedCompression > compressionsCount) {
            selectedCompression = compressionsCount;
        }
        boolean needCompress = false;
        if (selectedCompression != compressionsCount || Math.max(videoEditedInfo.originalWidth, videoEditedInfo.originalHeight) > 1280) {
            needCompress = true;
            switch (selectedCompression) {
                case 1:
                    maxSize = 432.0f;
                    break;
                case 2:
                    maxSize = 640.0f;
                    break;
                case 3:
                    maxSize = 848.0f;
                    break;
                default:
                    maxSize = 1280.0f;
                    break;
            }
            float scale = maxSize / ((float) (videoEditedInfo.originalWidth > videoEditedInfo.originalHeight ? videoEditedInfo.originalWidth : videoEditedInfo.originalHeight));
            videoEditedInfo.resultWidth = Math.round((((float) videoEditedInfo.originalWidth) * scale) / 2.0f) * 2;
            videoEditedInfo.resultHeight = Math.round((((float) videoEditedInfo.originalHeight) * scale) / 2.0f) * 2;
        }
        int[] iArr = params;
        int i3 = bitrate;
        int bitrate2 = MediaController.makeVideoBitrate(videoEditedInfo.originalHeight, videoEditedInfo.originalWidth, originalBitrate, videoEditedInfo.resultHeight, videoEditedInfo.resultWidth);
        if (!needCompress) {
            videoEditedInfo.resultWidth = videoEditedInfo.originalWidth;
            videoEditedInfo.resultHeight = videoEditedInfo.originalHeight;
            videoEditedInfo.bitrate = bitrate2;
        } else {
            videoEditedInfo.bitrate = bitrate2;
        }
        videoEditedInfo.estimatedSize = (long) ((int) (((float) audioFramesSize) + (((videoDuration / 1000.0f) * ((float) bitrate2)) / 8.0f)));
        if (videoEditedInfo.estimatedSize == 0) {
            videoEditedInfo.estimatedSize = 1;
        }
        return videoEditedInfo;
    }

    public static void prepareSendingVideo(AccountInstance accountInstance, String videoPath, VideoEditedInfo info, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, int ttl, MessageObject editingMessageObject, boolean notify, int scheduleDate, boolean forceDocument) {
        if (videoPath != null && videoPath.length() != 0) {
            SendMessagesHelper$$ExternalSyntheticLambda70 sendMessagesHelper$$ExternalSyntheticLambda70 = r0;
            SendMessagesHelper$$ExternalSyntheticLambda70 sendMessagesHelper$$ExternalSyntheticLambda702 = new SendMessagesHelper$$ExternalSyntheticLambda70(info, videoPath, dialogId, ttl, accountInstance, caption, editingMessageObject, replyToMsg, replyToTopMsg, entities, notify, scheduleDate, forceDocument);
            new Thread(sendMessagesHelper$$ExternalSyntheticLambda70).start();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:131:0x036e  */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x037e  */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x03ac  */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x03c4  */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x03ca  */
    /* JADX WARNING: Removed duplicated region for block: B:142:0x03cd  */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x03d4  */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0154  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    static /* synthetic */ void lambda$prepareSendingVideo$91(org.telegram.messenger.VideoEditedInfo r35, java.lang.String r36, long r37, int r39, org.telegram.messenger.AccountInstance r40, java.lang.CharSequence r41, org.telegram.messenger.MessageObject r42, org.telegram.messenger.MessageObject r43, org.telegram.messenger.MessageObject r44, java.util.ArrayList r45, boolean r46, int r47, boolean r48) {
        /*
            r15 = r36
            if (r35 == 0) goto L_0x0007
            r0 = r35
            goto L_0x000b
        L_0x0007:
            org.telegram.messenger.VideoEditedInfo r0 = createCompressionSettings(r36)
        L_0x000b:
            r14 = r0
            boolean r11 = org.telegram.messenger.DialogObject.isEncryptedDialog(r37)
            r7 = 0
            r8 = 1
            if (r14 == 0) goto L_0x001a
            boolean r0 = r14.roundVideo
            if (r0 == 0) goto L_0x001a
            r0 = 1
            goto L_0x001b
        L_0x001a:
            r0 = 0
        L_0x001b:
            r10 = r0
            r18 = 0
            r19 = 0
            if (r14 != 0) goto L_0x0062
            java.lang.String r0 = "mp4"
            boolean r0 = r15.endsWith(r0)
            if (r0 != 0) goto L_0x0062
            if (r10 == 0) goto L_0x0033
            r20 = r10
            r21 = r11
            r22 = r14
            goto L_0x0068
        L_0x0033:
            r3 = 0
            r4 = 0
            r12 = 0
            r13 = 0
            r17 = 0
            r0 = r40
            r1 = r36
            r2 = r36
            r5 = r37
            r7 = r43
            r8 = r44
            r9 = r41
            r20 = r10
            r10 = r45
            r21 = r11
            r11 = r42
            r22 = r14
            r14 = r48
            r15 = r46
            r16 = r47
            prepareSendingDocumentInternal(r0, r1, r2, r3, r4, r5, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17)
            r33 = r20
            r27 = r21
            r34 = r22
            goto L_0x0406
        L_0x0062:
            r20 = r10
            r21 = r11
            r22 = r14
        L_0x0068:
            r9 = r36
            r0 = r36
            java.io.File r1 = new java.io.File
            r1.<init>(r0)
            r23 = r1
            r1 = 0
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            long r4 = r23.length()
            r3.append(r4)
            java.lang.String r10 = "_"
            r3.append(r10)
            long r4 = r23.lastModified()
            r3.append(r4)
            java.lang.String r0 = r3.toString()
            java.lang.String r11 = ""
            r15 = r22
            if (r15 == 0) goto L_0x00f1
            r13 = r20
            if (r13 != 0) goto L_0x00e4
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            long r4 = r15.estimatedDuration
            r3.append(r4)
            r3.append(r10)
            long r4 = r15.startTime
            r3.append(r4)
            r3.append(r10)
            long r4 = r15.endTime
            r3.append(r4)
            boolean r4 = r15.muted
            if (r4 == 0) goto L_0x00c2
            java.lang.String r4 = "_m"
            goto L_0x00c3
        L_0x00c2:
            r4 = r11
        L_0x00c3:
            r3.append(r4)
            java.lang.String r0 = r3.toString()
            int r3 = r15.resultWidth
            int r4 = r15.originalWidth
            if (r3 == r4) goto L_0x00e4
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            r3.append(r0)
            r3.append(r10)
            int r4 = r15.resultWidth
            r3.append(r4)
            java.lang.String r0 = r3.toString()
        L_0x00e4:
            long r3 = r15.startTime
            r5 = 0
            int r12 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r12 < 0) goto L_0x00ee
            long r5 = r15.startTime
        L_0x00ee:
            r1 = r5
            r12 = r0
            goto L_0x00f5
        L_0x00f1:
            r13 = r20
            r12 = r0
            r5 = r1
        L_0x00f5:
            r0 = 0
            r1 = 0
            r4 = r21
            if (r4 != 0) goto L_0x014d
            if (r39 != 0) goto L_0x014d
            if (r15 == 0) goto L_0x0114
            org.telegram.messenger.MediaController$SavedFilterState r2 = r15.filterState
            if (r2 != 0) goto L_0x0110
            java.lang.String r2 = r15.paintPath
            if (r2 != 0) goto L_0x0110
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r2 = r15.mediaEntities
            if (r2 != 0) goto L_0x0110
            org.telegram.messenger.MediaController$CropState r2 = r15.cropState
            if (r2 != 0) goto L_0x0110
            goto L_0x0114
        L_0x0110:
            r7 = r4
            r24 = r5
            goto L_0x0150
        L_0x0114:
            org.telegram.messenger.MessagesStorage r2 = r40.getMessagesStorage()
            if (r4 != 0) goto L_0x011c
            r3 = 2
            goto L_0x011d
        L_0x011c:
            r3 = 5
        L_0x011d:
            java.lang.Object[] r16 = r2.getSentFile(r12, r3)
            if (r16 == 0) goto L_0x0149
            r2 = r16[r7]
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_document
            if (r2 == 0) goto L_0x0149
            r2 = r16[r7]
            r17 = r2
            org.telegram.tgnet.TLRPC$TL_document r17 = (org.telegram.tgnet.TLRPC.TL_document) r17
            r0 = r16[r8]
            r20 = r0
            java.lang.String r20 = (java.lang.String) r20
            r21 = 0
            r0 = r40
            r1 = r4
            r2 = r17
            r3 = r36
            r7 = r4
            r4 = r21
            r24 = r5
            ensureMediaThumbExists(r0, r1, r2, r3, r4, r5)
            r0 = r17
            goto L_0x0152
        L_0x0149:
            r7 = r4
            r24 = r5
            goto L_0x0150
        L_0x014d:
            r7 = r4
            r24 = r5
        L_0x0150:
            r20 = r1
        L_0x0152:
            if (r0 != 0) goto L_0x036e
            r5 = r36
            r3 = r24
            android.graphics.Bitmap r1 = createVideoThumbnailAtTime(r5, r3)
            if (r1 != 0) goto L_0x0162
            android.graphics.Bitmap r1 = createVideoThumbnail(r5, r8)
        L_0x0162:
            r2 = 90
            if (r7 != 0) goto L_0x016c
            if (r39 == 0) goto L_0x0169
            goto L_0x016c
        L_0x0169:
            r6 = 320(0x140, float:4.48E-43)
            goto L_0x016e
        L_0x016c:
            r6 = 90
        L_0x016e:
            float r14 = (float) r6
            float r8 = (float) r6
            if (r6 <= r2) goto L_0x0177
            r18 = 80
            r2 = 80
            goto L_0x017b
        L_0x0177:
            r18 = 55
            r2 = 55
        L_0x017b:
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.ImageLoader.scaleAndSaveImage(r1, r14, r8, r2, r7)
            if (r1 == 0) goto L_0x029f
            if (r2 == 0) goto L_0x029f
            if (r13 == 0) goto L_0x0299
            if (r7 == 0) goto L_0x0234
            r8 = 1
            r14 = 90
            android.graphics.Bitmap r1 = android.graphics.Bitmap.createScaledBitmap(r1, r14, r14, r8)
            r25 = 7
            int r8 = android.os.Build.VERSION.SDK_INT
            r14 = 21
            if (r8 >= r14) goto L_0x0199
            r26 = 0
            goto L_0x019b
        L_0x0199:
            r26 = 1
        L_0x019b:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            r25 = 7
            int r8 = android.os.Build.VERSION.SDK_INT
            r14 = 21
            if (r8 >= r14) goto L_0x01b7
            r26 = 0
            goto L_0x01b9
        L_0x01b7:
            r26 = 1
        L_0x01b9:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            r25 = 7
            int r8 = android.os.Build.VERSION.SDK_INT
            r14 = 21
            if (r8 >= r14) goto L_0x01d5
            r26 = 0
            goto L_0x01d7
        L_0x01d5:
            r26 = 1
        L_0x01d7:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            java.lang.StringBuilder r8 = new java.lang.StringBuilder
            r8.<init>()
            org.telegram.tgnet.TLRPC$FileLocation r14 = r2.location
            r30 = r0
            r18 = r1
            long r0 = r14.volume_id
            r8.append(r0)
            r8.append(r10)
            org.telegram.tgnet.TLRPC$FileLocation r0 = r2.location
            int r0 = r0.local_id
            r8.append(r0)
            java.lang.String r0 = "@%d_%d_b2"
            r8.append(r0)
            java.lang.String r0 = r8.toString()
            r1 = 2
            java.lang.Object[] r1 = new java.lang.Object[r1]
            int r8 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r8 = (float) r8
            float r10 = org.telegram.messenger.AndroidUtilities.density
            float r8 = r8 / r10
            int r8 = (int) r8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r10 = 0
            r1[r10] = r8
            int r8 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r8 = (float) r8
            float r10 = org.telegram.messenger.AndroidUtilities.density
            float r8 = r8 / r10
            int r8 = (int) r8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r10 = 1
            r1[r10] = r8
            java.lang.String r19 = java.lang.String.format(r0, r1)
            r24 = r3
            r1 = r18
            goto L_0x02a3
        L_0x0234:
            r30 = r0
            r25 = 3
            int r0 = android.os.Build.VERSION.SDK_INT
            r8 = 21
            if (r0 >= r8) goto L_0x0241
            r26 = 0
            goto L_0x0243
        L_0x0241:
            r26 = 1
        L_0x0243:
            int r27 = r1.getWidth()
            int r28 = r1.getHeight()
            int r29 = r1.getRowBytes()
            r24 = r1
            org.telegram.messenger.Utilities.blurBitmap(r24, r25, r26, r27, r28, r29)
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            org.telegram.tgnet.TLRPC$FileLocation r8 = r2.location
            r24 = r3
            long r3 = r8.volume_id
            r0.append(r3)
            r0.append(r10)
            org.telegram.tgnet.TLRPC$FileLocation r3 = r2.location
            int r3 = r3.local_id
            r0.append(r3)
            java.lang.String r3 = "@%d_%d_b"
            r0.append(r3)
            java.lang.String r0 = r0.toString()
            r3 = 2
            java.lang.Object[] r3 = new java.lang.Object[r3]
            int r4 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r4 = (float) r4
            float r8 = org.telegram.messenger.AndroidUtilities.density
            float r4 = r4 / r8
            int r4 = (int) r4
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r8 = 0
            r3[r8] = r4
            int r4 = org.telegram.messenger.AndroidUtilities.roundMessageSize
            float r4 = (float) r4
            float r8 = org.telegram.messenger.AndroidUtilities.density
            float r4 = r4 / r8
            int r4 = (int) r4
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r8 = 1
            r3[r8] = r4
            java.lang.String r19 = java.lang.String.format(r0, r3)
            goto L_0x02a3
        L_0x0299:
            r30 = r0
            r24 = r3
            r1 = 0
            goto L_0x02a3
        L_0x029f:
            r30 = r0
            r24 = r3
        L_0x02a3:
            org.telegram.tgnet.TLRPC$TL_document r0 = new org.telegram.tgnet.TLRPC$TL_document
            r0.<init>()
            if (r2 == 0) goto L_0x02b5
            java.util.ArrayList r3 = r0.thumbs
            r3.add(r2)
            int r3 = r0.flags
            r4 = 1
            r3 = r3 | r4
            r0.flags = r3
        L_0x02b5:
            r3 = 0
            byte[] r4 = new byte[r3]
            r0.file_reference = r4
            java.lang.String r4 = "video/mp4"
            r0.mime_type = r4
            org.telegram.messenger.UserConfig r4 = r40.getUserConfig()
            r4.saveConfig(r3)
            if (r7 == 0) goto L_0x02e1
            int r3 = org.telegram.messenger.DialogObject.getEncryptedChatId(r37)
            org.telegram.messenger.MessagesController r4 = r40.getMessagesController()
            java.lang.Integer r8 = java.lang.Integer.valueOf(r3)
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = r4.getEncryptedChat(r8)
            if (r4 != 0) goto L_0x02da
            return
        L_0x02da:
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r8 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r8.<init>()
            r3 = r8
            goto L_0x02e9
        L_0x02e1:
            org.telegram.tgnet.TLRPC$TL_documentAttributeVideo r3 = new org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            r3.<init>()
            r4 = 1
            r3.supports_streaming = r4
        L_0x02e9:
            r3.round_message = r13
            java.util.ArrayList r4 = r0.attributes
            r4.add(r3)
            if (r15 == 0) goto L_0x0353
            boolean r4 = r15.needConvert()
            if (r4 == 0) goto L_0x0353
            boolean r4 = r15.muted
            if (r4 == 0) goto L_0x0314
            java.util.ArrayList r4 = r0.attributes
            org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated r8 = new org.telegram.tgnet.TLRPC$TL_documentAttributeAnimated
            r8.<init>()
            r4.add(r8)
            fillVideoAttribute(r5, r3, r15)
            int r4 = r3.w
            r15.originalWidth = r4
            int r4 = r3.h
            r15.originalHeight = r4
            r8 = r1
            r4 = r2
            goto L_0x031f
        L_0x0314:
            r8 = r1
            r4 = r2
            long r1 = r15.estimatedDuration
            r16 = 1000(0x3e8, double:4.94E-321)
            long r1 = r1 / r16
            int r2 = (int) r1
            r3.duration = r2
        L_0x031f:
            int r1 = r15.rotationValue
            org.telegram.messenger.MediaController$CropState r2 = r15.cropState
            if (r2 == 0) goto L_0x0333
            org.telegram.messenger.MediaController$CropState r2 = r15.cropState
            int r2 = r2.transformWidth
            org.telegram.messenger.MediaController$CropState r10 = r15.cropState
            int r10 = r10.transformHeight
            org.telegram.messenger.MediaController$CropState r14 = r15.cropState
            int r14 = r14.transformRotation
            int r1 = r1 + r14
            goto L_0x0337
        L_0x0333:
            int r2 = r15.resultWidth
            int r10 = r15.resultHeight
        L_0x0337:
            r14 = 90
            if (r1 == r14) goto L_0x0345
            r14 = 270(0x10e, float:3.78E-43)
            if (r1 != r14) goto L_0x0340
            goto L_0x0345
        L_0x0340:
            r3.w = r2
            r3.h = r10
            goto L_0x0349
        L_0x0345:
            r3.w = r10
            r3.h = r2
        L_0x0349:
            r14 = r1
            r16 = r2
            long r1 = r15.estimatedSize
            int r2 = (int) r1
            long r1 = (long) r2
            r0.size = r1
            goto L_0x0367
        L_0x0353:
            r8 = r1
            r4 = r2
            boolean r1 = r23.exists()
            if (r1 == 0) goto L_0x0363
            long r1 = r23.length()
            int r2 = (int) r1
            long r1 = (long) r2
            r0.size = r1
        L_0x0363:
            r1 = 0
            fillVideoAttribute(r5, r3, r1)
        L_0x0367:
            r30 = r0
            r21 = r19
            r19 = r8
            goto L_0x0376
        L_0x036e:
            r5 = r36
            r30 = r0
            r21 = r19
            r19 = r18
        L_0x0376:
            if (r15 == 0) goto L_0x03ac
            boolean r0 = r15.needConvert()
            if (r0 == 0) goto L_0x03ac
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = "-2147483648_"
            r0.append(r1)
            int r1 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r0.append(r1)
            java.lang.String r1 = ".mp4"
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            java.io.File r1 = new java.io.File
            r2 = 4
            java.io.File r2 = org.telegram.messenger.FileLoader.getDirectory(r2)
            r1.<init>(r2, r0)
            org.telegram.messenger.SharedConfig.saveConfig()
            java.lang.String r9 = r1.getAbsolutePath()
            r22 = r9
            goto L_0x03ae
        L_0x03ac:
            r22 = r9
        L_0x03ae:
            r6 = r30
            r10 = r20
            r26 = r12
            r27 = r7
            r7 = r22
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r9 = r0
            r1 = r19
            r2 = r21
            if (r41 == 0) goto L_0x03ca
            java.lang.String r0 = r41.toString()
            r14 = r0
            goto L_0x03cb
        L_0x03ca:
            r14 = r11
        L_0x03cb:
            if (r12 == 0) goto L_0x03d2
            java.lang.String r0 = "originalPath"
            r9.put(r0, r12)
        L_0x03d2:
            if (r10 == 0) goto L_0x03d9
            java.lang.String r0 = "parentObject"
            r9.put(r0, r10)
        L_0x03d9:
            org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55 r28 = new org.telegram.messenger.SendMessagesHelper$$ExternalSyntheticLambda55
            r0 = r28
            r3 = r42
            r4 = r40
            r5 = r15
            r8 = r9
            r29 = r9
            r9 = r10
            r31 = r10
            r10 = r37
            r32 = r12
            r12 = r43
            r33 = r13
            r13 = r44
            r34 = r15
            r15 = r45
            r16 = r46
            r17 = r47
            r18 = r39
            r0.<init>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15, r16, r17, r18)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r28)
            r18 = r19
            r19 = r21
        L_0x0406:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.SendMessagesHelper.lambda$prepareSendingVideo$91(org.telegram.messenger.VideoEditedInfo, java.lang.String, long, int, org.telegram.messenger.AccountInstance, java.lang.CharSequence, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, org.telegram.messenger.MessageObject, java.util.ArrayList, boolean, int, boolean):void");
    }

    static /* synthetic */ void lambda$prepareSendingVideo$90(Bitmap thumbFinal, String thumbKeyFinal, MessageObject editingMessageObject, AccountInstance accountInstance, VideoEditedInfo videoEditedInfo, TLRPC.TL_document videoFinal, String finalPath, HashMap params, String parentFinal, long dialogId, MessageObject replyToMsg, MessageObject replyToTopMsg, String captionFinal, ArrayList entities, boolean notify, int scheduleDate, int ttl) {
        Bitmap bitmap = thumbFinal;
        String str = thumbKeyFinal;
        if (!(bitmap == null || str == null)) {
            ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmap), str, false);
        }
        if (editingMessageObject != null) {
            accountInstance.getSendMessagesHelper().editMessage(editingMessageObject, (TLRPC.TL_photo) null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
        } else {
            accountInstance.getSendMessagesHelper().sendMessage(videoFinal, videoEditedInfo, finalPath, dialogId, replyToMsg, replyToTopMsg, captionFinal, entities, (TLRPC.ReplyMarkup) null, params, notify, scheduleDate, ttl, parentFinal, (MessageObject.SendAnimationData) null);
        }
    }
}
