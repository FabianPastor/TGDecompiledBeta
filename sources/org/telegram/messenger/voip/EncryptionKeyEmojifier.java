package org.telegram.messenger.voip;

public class EncryptionKeyEmojifier {
    private static final String[] emojis = new String[]{"\ud83d\ude09", "\ud83d\ude0d", "\ud83d\ude1b", "\ud83d\ude2d", "\ud83d\ude31", "\ud83d\ude21", "\ud83d\ude0e", "\ud83d\ude34", "\ud83d\ude35", "\ud83d\ude08", "\ud83d\ude2c", "\ud83d\ude07", "\ud83d\ude0f", "\ud83d\udc6e", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\ude3b", "\ud83d\ude3d", "\ud83d\ude40", "\ud83d\udc7a", "\ud83d\ude48", "\ud83d\ude49", "\ud83d\ude4a", "\ud83d\udCLASSNAME", "\ud83d\udc7d", "\ud83d\udca9", "\ud83d\udd25", "\ud83d\udca5", "\ud83d\udca4", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udc4d", "\ud83d\udc4e", "\ud83d\udc4c", "\ud83d\udc4a", "\u270c", "\u270b", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\ude4f", "\ud83d\udc4f", "\ud83d\udcaa", "\ud83d\udeb6", "\ud83c\udfc3", "\ud83d\udCLASSNAME", "\ud83d\udc6b", "\ud83d\udc6a", "\ud83d\udc6c", "\ud83d\udc6d", "\ud83d\udCLASSNAME", "\ud83c\udfa9", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udc5f", "\ud83d\udc5e", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udc5c", "\ud83d\udCLASSNAME", "\ud83c\udvar_", "\ud83d\udCLASSNAME", "\ud83d\udc9b", "\ud83d\udCLASSNAME", "\ud83d\udc9c", "\ud83d\udc9a", "\ud83d\udc8d", "\ud83d\udc8e", "\ud83d\udCLASSNAME", "\ud83d\udc3a", "\ud83d\udCLASSNAME", "\ud83d\udc2d", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udc2f", "\ud83d\udCLASSNAME", "\ud83d\udc3b", "\ud83d\udCLASSNAME", "\ud83d\udc2e", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udc3c", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udCLASSNAME", "\ud83d\udc0d", "\ud83d\udCLASSNAME", "\ud83d\udc1b", "\ud83d\udc1d", "\ud83d\udc1c", "\ud83d\udc1e", "\ud83d\udc0c", "\ud83d\udCLASSNAME", "\ud83d\udc1a", "\ud83d\udc1f", "\ud83d\udc2c", "\ud83d\udc0b", "\ud83d\udCLASSNAME", "\ud83d\udc0a", "\ud83d\udc2b", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf3b", "\ud83c\udvar_", "\ud83c\udf3e", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf1e", "\ud83c\udf1a", "\ud83c\udvar_", "\ud83c\udf0e", "\ud83c\udf0b", "\u26a1", "\u2614", "\u2744", "\u26c4", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf0a", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83d\udc7b", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83d\udd2e", "\ud83c\udfa5", "\ud83d\udcf7", "\ud83d\udcbf", "\ud83d\udcbb", "\u260e", "\ud83d\udce1", "\ud83d\udcfa", "\ud83d\udcfb", "\ud83d\udd09", "\ud83d\udd14", "\u23f3", "\u23f0", "\u231a", "\ud83d\udd12", "\ud83d\udd11", "\ud83d\udd0e", "\ud83d\udca1", "\ud83d\udd26", "\ud83d\udd0c", "\ud83d\udd0b", "\ud83d\udebf", "\ud83d\udebd", "\ud83d\udd27", "\ud83d\udd28", "\ud83d\udeaa", "\ud83d\udeac", "\ud83d\udca3", "\ud83d\udd2b", "\ud83d\udd2a", "\ud83d\udc8a", "\ud83d\udCLASSNAME", "\ud83d\udcb0", "\ud83d\udcb5", "\ud83d\udcb3", "\u2709", "\ud83d\udceb", "\ud83d\udce6", "\ud83d\udcc5", "\ud83d\udcc1", "\u2702", "\ud83d\udccc", "\ud83d\udcce", "\u2712", "\u270f", "\ud83d\udcd0", "\ud83d\udcda", "\ud83d\udd2c", "\ud83d\udd2d", "\ud83c\udfa8", "\ud83c\udfac", "\ud83c\udfa4", "\ud83c\udfa7", "\ud83c\udfb5", "\ud83c\udfb9", "\ud83c\udfbb", "\ud83c\udfba", "\ud83c\udfb8", "\ud83d\udc7e", "\ud83c\udfae", "\ud83c\udccf", "\ud83c\udfb2", "\ud83c\udfaf", "\ud83c\udfc8", "\ud83c\udfc0", "\u26bd", "\u26be", "\ud83c\udfbe", "\ud83c\udfb1", "\ud83c\udfc9", "\ud83c\udfb3", "\ud83c\udfc1", "\ud83c\udfc7", "\ud83c\udfc6", "\ud83c\udfca", "\ud83c\udfc4", "\u2615", "\ud83c\udf7c", "\ud83c\udf7a", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf5f", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf5a", "\ud83c\udf5c", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf5e", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf6a", "\ud83c\udf6b", "\ud83c\udf6d", "\ud83c\udf6f", "\ud83c\udf4e", "\ud83c\udf4f", "\ud83c\udf4a", "\ud83c\udf4b", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf4c", "\ud83c\udvar_", "\ud83c\udf4d", "\ud83c\udvar_", "\ud83c\udvar_", "\ud83c\udf3d", "\ud83c\udfe1", "\ud83c\udfe5", "\ud83c\udfe6", "\u26ea", "\ud83c\udff0", "\u26fa", "\ud83c\udfed", "\ud83d\uddfb", "\ud83d\uddfd", "\ud83c\udfa0", "\ud83c\udfa1", "\u26f2", "\ud83c\udfa2", "\ud83d\udea2", "\ud83d\udea4", "\u2693", "\ud83d\ude80", "\u2708", "\ud83d\ude81", "\ud83d\ude82", "\ud83d\ude8b", "\ud83d\ude8e", "\ud83d\ude8c", "\ud83d\ude99", "\ud83d\ude97", "\ud83d\ude95", "\ud83d\ude9b", "\ud83d\udea8", "\ud83d\ude94", "\ud83d\ude92", "\ud83d\ude91", "\ud83d\udeb2", "\ud83d\udea0", "\ud83d\ude9c", "\ud83d\udea6", "\u26a0", "\ud83d\udea7", "\u26fd", "\ud83c\udfb0", "\ud83d\uddff", "\ud83c\udfaa", "\ud83c\udfad", "\ud83c\uddef\ud83c\uddf5", "\ud83c\uddf0\ud83c\uddf7", "\ud83c\udde9\ud83c\uddea", "\ud83c\udde8\ud83c\uddf3", "\ud83c\uddfa\ud83c\uddf8", "\ud83c\uddeb\ud83c\uddf7", "\ud83c\uddea\ud83c\uddf8", "\ud83c\uddee\ud83c\uddf9", "\ud83c\uddf7\ud83c\uddfa", "\ud83c\uddec\ud83c\udde7", "1\u20e3", "2\u20e3", "3\u20e3", "4\u20e3", "5\u20e3", "6\u20e3", "7\u20e3", "8\u20e3", "9\u20e3", "0\u20e3", "\ud83d\udd1f", "\u2757", "\u2753", "\u2665", "\u2666", "\ud83d\udcaf", "\ud83d\udd17", "\ud83d\udd31", "\ud83d\udd34", "\ud83d\udd35", "\ud83d\udd36", "\ud83d\udd37"};
    private static final int[] offsets = new int[]{0, 4, 8, 12, 16};

    private static int bytesToInt(byte[] arr, int offset) {
        return ((((arr[offset] & 127) << 24) | ((arr[offset + 1] & 255) << 16)) | ((arr[offset + 2] & 255) << 8)) | (arr[offset + 3] & 255);
    }

    private static long bytesToLong(byte[] arr, int offset) {
        return ((((((((((long) arr[offset]) & 127) << 56) | ((((long) arr[offset + 1]) & 255) << 48)) | ((((long) arr[offset + 2]) & 255) << 40)) | ((((long) arr[offset + 3]) & 255) << 32)) | ((((long) arr[offset + 4]) & 255) << 24)) | ((((long) arr[offset + 5]) & 255) << 16)) | ((((long) arr[offset + 6]) & 255) << 8)) | (((long) arr[offset + 7]) & 255);
    }

    public static String[] emojify(byte[] sha256) {
        if (sha256.length != 32) {
            throw new IllegalArgumentException("sha256 needs to be exactly 32 bytes");
        }
        String[] result = new String[5];
        for (int i = 0; i < 5; i++) {
            result[i] = emojis[bytesToInt(sha256, offsets[i]) % emojis.length];
        }
        return result;
    }

    public static String[] emojifyForCall(byte[] sha256) {
        String[] result = new String[4];
        for (int i = 0; i < 4; i++) {
            result[i] = emojis[(int) (bytesToLong(sha256, i * 8) % ((long) emojis.length))];
        }
        return result;
    }
}
