package org.telegram.messenger;

import android.appwidget.AppWidgetManager;
import android.text.TextUtils;
import android.util.LongSparseArray;
import android.util.Pair;
import android.util.SparseArray;
import android.util.SparseIntArray;
import j$.util.Comparator;
import j$.util.function.Function;
import j$.util.function.ToDoubleFunction;
import j$.util.function.ToIntFunction;
import j$.util.function.ToLongFunction;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicLong;
import org.telegram.SQLite.SQLiteCursor;
import org.telegram.SQLite.SQLiteDatabase;
import org.telegram.SQLite.SQLitePreparedStatement;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$ChannelParticipant;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$ChatParticipant;
import org.telegram.tgnet.TLRPC$ChatParticipants;
import org.telegram.tgnet.TLRPC$Dialog;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$InputChannel;
import org.telegram.tgnet.TLRPC$InputDialogPeer;
import org.telegram.tgnet.TLRPC$InputMedia;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$Poll;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_channelFull;
import org.telegram.tgnet.TLRPC$TL_channels_deleteMessages;
import org.telegram.tgnet.TLRPC$TL_chatAdminRights;
import org.telegram.tgnet.TLRPC$TL_chatBannedRights;
import org.telegram.tgnet.TLRPC$TL_chatFull;
import org.telegram.tgnet.TLRPC$TL_chatParticipant;
import org.telegram.tgnet.TLRPC$TL_chatParticipantAdmin;
import org.telegram.tgnet.TLRPC$TL_contact;
import org.telegram.tgnet.TLRPC$TL_dialog;
import org.telegram.tgnet.TLRPC$TL_folderPeer;
import org.telegram.tgnet.TLRPC$TL_inputFolderPeer;
import org.telegram.tgnet.TLRPC$TL_inputMediaGame;
import org.telegram.tgnet.TLRPC$TL_inputMessageEntityMentionName;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionChatAddUser;
import org.telegram.tgnet.TLRPC$TL_messageActionGameScore;
import org.telegram.tgnet.TLRPC$TL_messageActionGeoProximityReached;
import org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent;
import org.telegram.tgnet.TLRPC$TL_messageActionPinMessage;
import org.telegram.tgnet.TLRPC$TL_messageEntityMentionName;
import org.telegram.tgnet.TLRPC$TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaUnsupported;
import org.telegram.tgnet.TLRPC$TL_messageMediaUnsupported_old;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageReactions;
import org.telegram.tgnet.TLRPC$TL_messageReplies;
import org.telegram.tgnet.TLRPC$TL_messageReplyHeader;
import org.telegram.tgnet.TLRPC$TL_message_secret;
import org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer;
import org.telegram.tgnet.TLRPC$TL_messages_botResults;
import org.telegram.tgnet.TLRPC$TL_messages_deleteMessages;
import org.telegram.tgnet.TLRPC$TL_messages_deleteScheduledMessages;
import org.telegram.tgnet.TLRPC$TL_messages_dialogs;
import org.telegram.tgnet.TLRPC$TL_messages_messages;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerChat;
import org.telegram.tgnet.TLRPC$TL_peerNotifySettings;
import org.telegram.tgnet.TLRPC$TL_peerNotifySettingsEmpty_layer77;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_photos_photos;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_updates;
import org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong;
import org.telegram.tgnet.TLRPC$TL_userStatusLastMonth;
import org.telegram.tgnet.TLRPC$TL_userStatusLastWeek;
import org.telegram.tgnet.TLRPC$TL_userStatusRecently;
import org.telegram.tgnet.TLRPC$TL_wallPaper;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$UserProfilePhoto;
import org.telegram.tgnet.TLRPC$UserStatus;
import org.telegram.tgnet.TLRPC$Vector;
import org.telegram.tgnet.TLRPC$WallPaper;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$messages_Dialogs;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.tgnet.TLRPC$photos_Photos;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Adapters.DialogsSearchAdapter;

public class MessagesStorage extends BaseController {
    private static volatile MessagesStorage[] Instance = new MessagesStorage[3];
    private static final int LAST_DB_VERSION = 78;
    private int archiveUnreadCount;
    private int[][] bots = {new int[2], new int[2]};
    private File cacheFile;
    private int[][] channels = {new int[2], new int[2]};
    private int[][] contacts = {new int[2], new int[2]};
    private SQLiteDatabase database;
    private ArrayList<MessagesController.DialogFilter> dialogFilters = new ArrayList<>();
    private SparseArray<MessagesController.DialogFilter> dialogFiltersMap = new SparseArray<>();
    private LongSparseArray<Integer> dialogsWithMentions = new LongSparseArray<>();
    private LongSparseArray<Integer> dialogsWithUnread = new LongSparseArray<>();
    private int[][] groups = {new int[2], new int[2]};
    private int lastDateValue = 0;
    private int lastPtsValue = 0;
    private int lastQtsValue = 0;
    private int lastSavedDate = 0;
    private int lastSavedPts = 0;
    private int lastSavedQts = 0;
    private int lastSavedSeq = 0;
    private int lastSecretVersion = 0;
    private int lastSeqValue = 0;
    private AtomicLong lastTaskId = new AtomicLong(System.currentTimeMillis());
    private int mainUnreadCount;
    private int[] mentionChannels = new int[2];
    private int[] mentionGroups = new int[2];
    private int[][] nonContacts = {new int[2], new int[2]};
    private CountDownLatch openSync = new CountDownLatch(1);
    private volatile int pendingArchiveUnreadCount;
    private volatile int pendingMainUnreadCount;
    private int secretG = 0;
    private byte[] secretPBytes = null;
    private File shmCacheFile;
    private DispatchQueue storageQueue = new DispatchQueue("storageQueue");
    private SparseArray<ArrayList<Runnable>> tasks = new SparseArray<>();
    private LongSparseArray<Boolean> unknownDialogsIds = new LongSparseArray<>();
    private File walCacheFile;

    public interface BooleanCallback {
        void run(boolean z);
    }

    public interface IntCallback {
        void run(int i);
    }

    public static MessagesStorage getInstance(int i) {
        MessagesStorage messagesStorage = Instance[i];
        if (messagesStorage == null) {
            synchronized (MessagesStorage.class) {
                messagesStorage = Instance[i];
                if (messagesStorage == null) {
                    MessagesStorage[] messagesStorageArr = Instance;
                    MessagesStorage messagesStorage2 = new MessagesStorage(i);
                    messagesStorageArr[i] = messagesStorage2;
                    messagesStorage = messagesStorage2;
                }
            }
        }
        return messagesStorage;
    }

    private void ensureOpened() {
        try {
            this.openSync.await();
        } catch (Throwable unused) {
        }
    }

    public int getLastDateValue() {
        ensureOpened();
        return this.lastDateValue;
    }

    public void setLastDateValue(int i) {
        ensureOpened();
        this.lastDateValue = i;
    }

    public int getLastPtsValue() {
        ensureOpened();
        return this.lastPtsValue;
    }

    public int getMainUnreadCount() {
        return this.mainUnreadCount;
    }

    public int getArchiveUnreadCount() {
        return this.archiveUnreadCount;
    }

    public void setLastPtsValue(int i) {
        ensureOpened();
        this.lastPtsValue = i;
    }

    public int getLastQtsValue() {
        ensureOpened();
        return this.lastQtsValue;
    }

    public void setLastQtsValue(int i) {
        ensureOpened();
        this.lastQtsValue = i;
    }

    public int getLastSeqValue() {
        ensureOpened();
        return this.lastSeqValue;
    }

    public void setLastSeqValue(int i) {
        ensureOpened();
        this.lastSeqValue = i;
    }

    public int getLastSecretVersion() {
        ensureOpened();
        return this.lastSecretVersion;
    }

    public void setLastSecretVersion(int i) {
        ensureOpened();
        this.lastSecretVersion = i;
    }

    public byte[] getSecretPBytes() {
        ensureOpened();
        return this.secretPBytes;
    }

    public void setSecretPBytes(byte[] bArr) {
        ensureOpened();
        this.secretPBytes = bArr;
    }

    public int getSecretG() {
        ensureOpened();
        return this.secretG;
    }

    public void setSecretG(int i) {
        ensureOpened();
        this.secretG = i;
    }

    public MessagesStorage(int i) {
        super(i);
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$new$0$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$new$0 */
    public /* synthetic */ void lambda$new$0$MessagesStorage() {
        openDatabase(1);
    }

    public SQLiteDatabase getDatabase() {
        return this.database;
    }

    public DispatchQueue getStorageQueue() {
        return this.storageQueue;
    }

    public void bindTaskToGuid(Runnable runnable, int i) {
        ArrayList arrayList = this.tasks.get(i);
        if (arrayList == null) {
            arrayList = new ArrayList();
            this.tasks.put(i, arrayList);
        }
        arrayList.add(runnable);
    }

    public void cancelTasksForGuid(int i) {
        ArrayList arrayList = this.tasks.get(i);
        if (arrayList != null) {
            int size = arrayList.size();
            for (int i2 = 0; i2 < size; i2++) {
                this.storageQueue.cancelRunnable((Runnable) arrayList.get(i2));
            }
            this.tasks.remove(i);
        }
    }

    public void completeTaskForGuid(Runnable runnable, int i) {
        ArrayList arrayList = this.tasks.get(i);
        if (arrayList != null) {
            arrayList.remove(runnable);
            if (arrayList.isEmpty()) {
                this.tasks.remove(i);
            }
        }
    }

    public long getDatabaseSize() {
        File file = this.cacheFile;
        long j = 0;
        if (file != null) {
            j = 0 + file.length();
        }
        File file2 = this.shmCacheFile;
        return file2 != null ? j + file2.length() : j;
    }

    public void openDatabase(int i) {
        int i2 = i;
        File filesDirFixed = ApplicationLoader.getFilesDirFixed();
        if (this.currentAccount != 0) {
            File file = new File(filesDirFixed, "account" + this.currentAccount + "/");
            file.mkdirs();
            filesDirFixed = file;
        }
        this.cacheFile = new File(filesDirFixed, "cache4.db");
        this.walCacheFile = new File(filesDirFixed, "cache4.db-wal");
        this.shmCacheFile = new File(filesDirFixed, "cache4.db-shm");
        boolean z = !this.cacheFile.exists();
        int i3 = 3;
        try {
            SQLiteDatabase sQLiteDatabase = new SQLiteDatabase(this.cacheFile.getPath());
            this.database = sQLiteDatabase;
            sQLiteDatabase.executeFast("PRAGMA secure_delete = ON").stepThis().dispose();
            this.database.executeFast("PRAGMA temp_store = MEMORY").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_mode = WAL").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_size_limit = 10485760").stepThis().dispose();
            if (z) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("create new database");
                }
                this.database.executeFast("CREATE TABLE messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE scheduled_messages(mid INTEGER PRIMARY KEY, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages ON scheduled_messages(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages ON scheduled_messages(uid, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages(mid INTEGER PRIMARY KEY, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, mention INTEGER, forwards INTEGER, replies_data BLOB, thread_reply_id INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_read_out_idx_messages ON messages(uid, mid, read_state, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages2 ON messages(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages ON messages(uid, mention, read_state);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, pinned INTEGER, flags INTEGER, folder_id INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS flags_idx_dialogs ON dialogs(flags);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter(id INTEGER PRIMARY KEY, ord INTEGER, unread_count INTEGER, flags INTEGER, title TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter_ep(id INTEGER, peer INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter_pin_v2(id INTEGER, peer INTEGER, pin INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE randoms(random_id INTEGER, mid INTEGER, PRIMARY KEY (random_id, mid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms ON randoms(mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_tasks_v2(mid INTEGER PRIMARY KEY, date INTEGER, media INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v2 ON enc_tasks_v2(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_v2(mid INTEGER PRIMARY KEY, uid INTEGER, date INTEGER, type INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media ON media_v2(uid, mid, type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid ON bot_keyboard(mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER, online INTEGER, inviter INTEGER, links INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned_v2(uid INTEGER, mid INTEGER, data BLOB, PRIMARY KEY (uid, mid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned_count(uid INTEGER PRIMARY KEY, count INTEGER, end INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users(uid INTEGER PRIMARY KEY, name TEXT, status INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chats(uid INTEGER PRIMARY KEY, name TEXT, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_chats(uid INTEGER PRIMARY KEY, user INTEGER, name TEXT, data BLOB, g BLOB, authkey BLOB, ttl INTEGER, layer INTEGER, seq_in INTEGER, seq_out INTEGER, use_count INTEGER, exchange_id INTEGER, key_date INTEGER, fprint INTEGER, fauthkey BLOB, khash BLOB, in_seq_no INTEGER, admin_id INTEGER, mtproto_seq INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_admins_v3(did INTEGER, uid INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE contacts(uid INTEGER PRIMARY KEY, mutual INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, document BLOB, PRIMARY KEY (id, type));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_dice(emoji TEXT PRIMARY KEY, data BLOB, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE webpage_pending(id INTEGER, mid INTEGER, PRIMARY KEY (id, mid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sent_files_v2(uid TEXT, type INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, old INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_info(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB, proximity INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE shortcut_widget(id INTEGER, did INTEGER, ord INTEGER, PRIMARY KEY (id, did));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS shortcut_widget_did ON shortcut_widget(did);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE polls(mid INTEGER PRIMARY KEY, id INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id ON polls(id);").stepThis().dispose();
                this.database.executeFast("PRAGMA user_version = 78").stepThis().dispose();
                loadDialogFilters();
                loadUnreadMessages();
                loadPendingTasks();
                try {
                    this.openSync.countDown();
                } catch (Throwable unused) {
                }
            } else {
                int intValue = this.database.executeInt("PRAGMA user_version", new Object[0]).intValue();
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("current db version = " + intValue);
                }
                if (intValue != 0) {
                    try {
                        SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1", new Object[0]);
                        if (queryFinalized.next()) {
                            this.lastSeqValue = queryFinalized.intValue(0);
                            this.lastPtsValue = queryFinalized.intValue(1);
                            this.lastDateValue = queryFinalized.intValue(2);
                            this.lastQtsValue = queryFinalized.intValue(3);
                            this.lastSecretVersion = queryFinalized.intValue(4);
                            this.secretG = queryFinalized.intValue(5);
                            if (queryFinalized.isNull(6)) {
                                this.secretPBytes = null;
                            } else {
                                byte[] byteArrayValue = queryFinalized.byteArrayValue(6);
                                this.secretPBytes = byteArrayValue;
                                if (byteArrayValue != null && byteArrayValue.length == 1) {
                                    this.secretPBytes = null;
                                }
                            }
                        }
                        queryFinalized.dispose();
                    } catch (Exception e) {
                        FileLog.e((Throwable) e);
                        try {
                            this.database.executeFast("CREATE TABLE IF NOT EXISTS params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                            this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
                        } catch (Exception e2) {
                            FileLog.e((Throwable) e2);
                        }
                    }
                    if (intValue < 78) {
                        updateDbToLastVersion(intValue);
                    }
                    loadDialogFilters();
                    loadUnreadMessages();
                    loadPendingTasks();
                    this.openSync.countDown();
                }
                throw new Exception("malformed");
            }
        } catch (Exception e3) {
            Exception exc = e3;
            FileLog.e((Throwable) exc);
            if (i2 < 3 && exc.getMessage().contains("malformed")) {
                if (i2 == 2) {
                    cleanupInternal(true);
                    for (int i4 = 0; i4 < 2; i4++) {
                        getUserConfig().setDialogsLoadOffset(i4, 0, 0, 0, 0, 0, 0);
                        getUserConfig().setTotalDialogsCount(i4, 0);
                    }
                    getUserConfig().saveConfig(false);
                } else {
                    cleanupInternal(false);
                }
                if (i2 == 1) {
                    i3 = 2;
                }
                openDatabase(i3);
            }
        }
    }

    private void updateDbToLastVersion(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateDbToLastVersion$1$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateDbToLastVersion$1 */
    public /* synthetic */ void lambda$updateDbToLastVersion$1$MessagesStorage(int i) {
        if (i < 4) {
            try {
                this.database.executeFast("CREATE TABLE IF NOT EXISTS user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                this.database.executeFast("DROP INDEX IF EXISTS read_state_out_idx_messages;").stepThis().dispose();
                this.database.executeFast("DROP INDEX IF EXISTS ttl_idx_messages;").stepThis().dispose();
                this.database.executeFast("DROP INDEX IF EXISTS date_idx_messages;").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v6(uid INTEGER PRIMARY KEY, fname TEXT, sname TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v6(uid INTEGER, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (uid, phone))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v6(sphone, deleted);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms ON randoms(mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS sent_files_v2(uid TEXT, type INTEGER, data BLOB, PRIMARY KEY (uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, PRIMARY KEY (uid, type));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
                this.database.executeFast("UPDATE messages SET send_state = 2 WHERE mid < 0 AND send_state = 1").stepThis().dispose();
                fixNotificationSettings();
                this.database.executeFast("PRAGMA user_version = 4").stepThis().dispose();
                i = 4;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        if (i == 4) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v2(mid INTEGER PRIMARY KEY, date INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v2 ON enc_tasks_v2(date);").stepThis().dispose();
            this.database.beginTransaction();
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT date, data FROM enc_tasks WHERE 1", new Object[0]);
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?)");
            if (queryFinalized.next()) {
                int intValue = queryFinalized.intValue(0);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    int limit = byteBufferValue.limit();
                    for (int i2 = 0; i2 < limit / 4; i2++) {
                        executeFast.requery();
                        executeFast.bindInteger(1, byteBufferValue.readInt32(false));
                        executeFast.bindInteger(2, intValue);
                        executeFast.step();
                    }
                    byteBufferValue.reuse();
                }
            }
            executeFast.dispose();
            queryFinalized.dispose();
            this.database.commitTransaction();
            this.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS enc_tasks;").stepThis().dispose();
            this.database.executeFast("ALTER TABLE messages ADD COLUMN media INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 6").stepThis().dispose();
            i = 6;
        }
        if (i == 6) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN layer INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_in INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_out INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 7").stepThis().dispose();
            i = 7;
        }
        if (i == 7 || i == 8 || i == 9) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN use_count INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN exchange_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN key_date INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fprint INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fauthkey BLOB default NULL").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN khash BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 10").stepThis().dispose();
            i = 10;
        }
        if (i == 10) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, PRIMARY KEY (id, type));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 11").stepThis().dispose();
            i = 11;
        }
        if (i == 11 || i == 12) {
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media_counts;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_v2(mid INTEGER PRIMARY KEY, uid INTEGER, date INTEGER, type INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media ON media_v2(uid, mid, type, date);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 13").stepThis().dispose();
            i = 13;
        }
        if (i == 13) {
            this.database.executeFast("ALTER TABLE messages ADD COLUMN replydata BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 14").stepThis().dispose();
            i = 14;
        }
        if (i == 14) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 15").stepThis().dispose();
            i = 15;
        }
        if (i == 15) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS webpage_pending(id INTEGER, mid INTEGER, PRIMARY KEY (id, mid));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 16").stepThis().dispose();
            i = 16;
        }
        if (i == 16) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN inbox_max INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN outbox_max INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 17").stepThis().dispose();
            i = 17;
        }
        if (i == 17) {
            this.database.executeFast("CREATE TABLE bot_info(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 18").stepThis().dispose();
            i = 18;
        }
        if (i == 18) {
            this.database.executeFast("DROP TABLE IF EXISTS stickers;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 19").stepThis().dispose();
            i = 19;
        }
        if (i == 19) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid ON bot_keyboard(mid);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 20").stepThis().dispose();
            i = 20;
        }
        if (i == 20) {
            this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 21").stepThis().dispose();
            i = 21;
        }
        if (i == 21) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
            SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT uid, participants FROM chat_settings WHERE uid < 0", new Object[0]);
            SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?)");
            while (queryFinalized2.next()) {
                int intValue2 = queryFinalized2.intValue(0);
                NativeByteBuffer byteBufferValue2 = queryFinalized2.byteBufferValue(1);
                if (byteBufferValue2 != null) {
                    TLRPC$ChatParticipants TLdeserialize = TLRPC$ChatParticipants.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(false), false);
                    byteBufferValue2.reuse();
                    if (TLdeserialize != null) {
                        TLRPC$TL_chatFull tLRPC$TL_chatFull = new TLRPC$TL_chatFull();
                        tLRPC$TL_chatFull.id = intValue2;
                        tLRPC$TL_chatFull.chat_photo = new TLRPC$TL_photoEmpty();
                        tLRPC$TL_chatFull.notify_settings = new TLRPC$TL_peerNotifySettingsEmpty_layer77();
                        tLRPC$TL_chatFull.exported_invite = null;
                        tLRPC$TL_chatFull.participants = TLdeserialize;
                        NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$TL_chatFull.getObjectSize());
                        tLRPC$TL_chatFull.serializeToStream(nativeByteBuffer);
                        executeFast2.requery();
                        executeFast2.bindInteger(1, intValue2);
                        executeFast2.bindByteBuffer(2, nativeByteBuffer);
                        executeFast2.step();
                        nativeByteBuffer.reuse();
                    }
                }
            }
            executeFast2.dispose();
            queryFinalized2.dispose();
            this.database.executeFast("DROP TABLE IF EXISTS chat_settings;").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN last_mid_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN unread_count_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN pts INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN date_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE messages ADD COLUMN imp INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 22").stepThis().dispose();
            i = 22;
        }
        if (i == 22) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 23").stepThis().dispose();
            i = 23;
        }
        if (i == 23 || i == 24) {
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid != 0 AND type >= 0 AND start IN (0, 1)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 25").stepThis().dispose();
            i = 25;
        }
        if (i == 25 || i == 26) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 27").stepThis().dispose();
            i = 27;
        }
        if (i == 27) {
            this.database.executeFast("ALTER TABLE web_recent_v3 ADD COLUMN document BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 28").stepThis().dispose();
            i = 28;
        }
        if (i == 28 || i == 29) {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 30").stepThis().dispose();
            i = 30;
        }
        if (i == 30) {
            this.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 31").stepThis().dispose();
            i = 31;
        }
        if (i == 31) {
            this.database.executeFast("DROP TABLE IF EXISTS bot_recent;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 32").stepThis().dispose();
            i = 32;
        }
        if (i == 32) {
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_imp_messages;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_imp_idx_messages;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 33").stepThis().dispose();
            i = 33;
        }
        if (i == 33) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 34").stepThis().dispose();
            i = 34;
        }
        if (i == 34) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 35").stepThis().dispose();
            i = 35;
        }
        if (i == 35) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 36").stepThis().dispose();
            i = 36;
        }
        if (i == 36) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN in_seq_no INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 37").stepThis().dispose();
            i = 37;
        }
        if (i == 37) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
            i = 38;
        }
        if (i == 38) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 39").stepThis().dispose();
            i = 39;
        }
        if (i == 39) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN admin_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 40").stepThis().dispose();
            i = 40;
        }
        if (i == 40) {
            fixNotificationSettings();
            this.database.executeFast("PRAGMA user_version = 41").stepThis().dispose();
            i = 41;
        }
        if (i == 41) {
            this.database.executeFast("ALTER TABLE messages ADD COLUMN mention INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE user_contacts_v6 ADD COLUMN imported INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages ON messages(uid, mention, read_state);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 42").stepThis().dispose();
            i = 42;
        }
        if (i == 42) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 43").stepThis().dispose();
            i = 43;
        }
        if (i == 43) {
            this.database.executeFast("PRAGMA user_version = 44").stepThis().dispose();
            i = 44;
        }
        if (i == 44) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 45").stepThis().dispose();
            i = 45;
        }
        if (i == 45) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN mtproto_seq INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 46").stepThis().dispose();
            i = 46;
        }
        if (i == 46) {
            this.database.executeFast("DELETE FROM botcache WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 47").stepThis().dispose();
            i = 47;
        }
        if (i == 47) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN flags INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 48").stepThis().dispose();
            i = 48;
        }
        if (i == 48) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 49").stepThis().dispose();
            i = 49;
        }
        if (i == 49) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 50").stepThis().dispose();
            i = 50;
        }
        if (i == 50) {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("ALTER TABLE sent_files_v2 ADD COLUMN parent TEXT").stepThis().dispose();
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("ALTER TABLE download_queue ADD COLUMN parent TEXT").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 51").stepThis().dispose();
            i = 51;
        }
        if (i == 51) {
            this.database.executeFast("ALTER TABLE media_counts_v2 ADD COLUMN old INTEGER").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 52").stepThis().dispose();
            i = 52;
        }
        if (i == 52) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS polls(mid INTEGER PRIMARY KEY, id INTEGER);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id ON polls(id);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 53").stepThis().dispose();
            i = 53;
        }
        if (i == 53) {
            this.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN online INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 54").stepThis().dispose();
            i = 54;
        }
        if (i == 54) {
            this.database.executeFast("DROP TABLE IF EXISTS wallpapers;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 55").stepThis().dispose();
            i = 55;
        }
        if (i == 55) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 56").stepThis().dispose();
            i = 56;
        }
        if (i == 56 || i == 57) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 58").stepThis().dispose();
            i = 58;
        }
        if (i == 58) {
            this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE emoji_keywords_info_v2 ADD COLUMN date INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 59").stepThis().dispose();
            i = 59;
        }
        if (i == 59) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN folder_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN data BLOB default NULL").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 60").stepThis().dispose();
            i = 60;
        }
        if (i == 60) {
            this.database.executeFast("DROP TABLE IF EXISTS channel_admins;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS blocked_users;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 61").stepThis().dispose();
            i = 61;
        }
        if (i == 61) {
            this.database.executeFast("DROP INDEX IF EXISTS send_state_idx_messages;").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages2 ON messages(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 62").stepThis().dispose();
            i = 62;
        }
        if (i == 62) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS scheduled_messages(mid INTEGER PRIMARY KEY, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages ON scheduled_messages(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages ON scheduled_messages(uid, date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 63").stepThis().dispose();
            i = 63;
        }
        if (i == 63) {
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 64").stepThis().dispose();
            i = 64;
        }
        if (i == 64) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_filter(id INTEGER PRIMARY KEY, ord INTEGER, unread_count INTEGER, flags INTEGER, title TEXT)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_filter_ep(id INTEGER, peer INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 65").stepThis().dispose();
            i = 65;
        }
        if (i == 65) {
            this.database.executeFast("CREATE INDEX IF NOT EXISTS flags_idx_dialogs ON dialogs(flags);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 66").stepThis().dispose();
            i = 66;
        }
        if (i == 66) {
            this.database.executeFast("CREATE TABLE dialog_filter_pin_v2(id INTEGER, peer INTEGER, pin INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 67").stepThis().dispose();
            i = 67;
        }
        if (i == 67) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_dice(emoji TEXT PRIMARY KEY, data BLOB, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 68").stepThis().dispose();
            i = 68;
        }
        if (i == 68) {
            executeNoException("ALTER TABLE messages ADD COLUMN forwards INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 69").stepThis().dispose();
            i = 69;
        }
        if (i == 69) {
            executeNoException("ALTER TABLE messages ADD COLUMN replies_data BLOB default NULL");
            executeNoException("ALTER TABLE messages ADD COLUMN thread_reply_id INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 70").stepThis().dispose();
            i = 70;
        }
        if (i == 70) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned_v2(uid INTEGER, mid INTEGER, data BLOB, PRIMARY KEY (uid, mid));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 71").stepThis().dispose();
            i = 71;
        }
        if (i == 71) {
            executeNoException("ALTER TABLE sharing_locations ADD COLUMN proximity INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 72").stepThis().dispose();
            i = 72;
        }
        if (i == 72) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned_count(uid INTEGER PRIMARY KEY, count INTEGER, end INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 73").stepThis().dispose();
            i = 73;
        }
        if (i == 73) {
            executeNoException("ALTER TABLE chat_settings_v2 ADD COLUMN inviter INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 74").stepThis().dispose();
            i = 74;
        }
        if (i == 74) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS shortcut_widget(id INTEGER, did INTEGER, ord INTEGER, PRIMARY KEY (id, did));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS shortcut_widget_did ON shortcut_widget(did);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 75").stepThis().dispose();
            i = 75;
        }
        if (i == 75) {
            executeNoException("ALTER TABLE chat_settings_v2 ADD COLUMN links INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 76").stepThis().dispose();
            i = 76;
        }
        if (i == 76) {
            executeNoException("ALTER TABLE enc_tasks_v2 ADD COLUMN media INTEGER default -1");
            this.database.executeFast("PRAGMA user_version = 77").stepThis().dispose();
            i = 77;
        }
        if (i == 77) {
            this.database.executeFast("DROP TABLE IF EXISTS channel_admins_v2;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS channel_admins_v3(did INTEGER, uid INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 78").stepThis().dispose();
        }
    }

    private void executeNoException(String str) {
        try {
            this.database.executeFast(str).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void cleanupInternal(boolean z) {
        this.lastDateValue = 0;
        this.lastSeqValue = 0;
        this.lastPtsValue = 0;
        this.lastQtsValue = 0;
        this.lastSecretVersion = 0;
        this.mainUnreadCount = 0;
        this.archiveUnreadCount = 0;
        this.pendingMainUnreadCount = 0;
        this.pendingArchiveUnreadCount = 0;
        this.dialogFilters.clear();
        this.dialogFiltersMap.clear();
        this.unknownDialogsIds.clear();
        this.lastSavedSeq = 0;
        this.lastSavedPts = 0;
        this.lastSavedDate = 0;
        this.lastSavedQts = 0;
        this.secretPBytes = null;
        this.secretG = 0;
        SQLiteDatabase sQLiteDatabase = this.database;
        if (sQLiteDatabase != null) {
            sQLiteDatabase.close();
            this.database = null;
        }
        if (z) {
            File file = this.cacheFile;
            if (file != null) {
                file.delete();
                this.cacheFile = null;
            }
            File file2 = this.walCacheFile;
            if (file2 != null) {
                file2.delete();
                this.walCacheFile = null;
            }
            File file3 = this.shmCacheFile;
            if (file3 != null) {
                file3.delete();
                this.shmCacheFile = null;
            }
        }
    }

    public void cleanup(boolean z) {
        this.storageQueue.postRunnable(new Runnable(z) {
            public final /* synthetic */ boolean f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$cleanup$3$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$cleanup$3 */
    public /* synthetic */ void lambda$cleanup$3$MessagesStorage(boolean z) {
        cleanupInternal(true);
        openDatabase(1);
        if (z) {
            Utilities.stageQueue.postRunnable(new Runnable() {
                public final void run() {
                    MessagesStorage.this.lambda$null$2$MessagesStorage();
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$2 */
    public /* synthetic */ void lambda$null$2$MessagesStorage() {
        getMessagesController().getDifference();
    }

    public void saveSecretParams(int i, int i2, byte[] bArr) {
        this.storageQueue.postRunnable(new Runnable(i, i2, bArr) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ byte[] f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveSecretParams$4$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$saveSecretParams$4 */
    public /* synthetic */ void lambda$saveSecretParams$4$MessagesStorage(int i, int i2, byte[] bArr) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE params SET lsv = ?, sg = ?, pbytes = ? WHERE id = 1");
            int i3 = 1;
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            if (bArr != null) {
                i3 = bArr.length;
            }
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(i3);
            if (bArr != null) {
                nativeByteBuffer.writeBytes(bArr);
            }
            executeFast.bindByteBuffer(3, nativeByteBuffer);
            executeFast.step();
            executeFast.dispose();
            nativeByteBuffer.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void fixNotificationSettings() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$fixNotificationSettings$5$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$fixNotificationSettings$5 */
    public /* synthetic */ void lambda$fixNotificationSettings$5$MessagesStorage() {
        try {
            LongSparseArray longSparseArray = new LongSparseArray();
            Map<String, ?> all = MessagesController.getNotificationsSettings(this.currentAccount).getAll();
            for (Map.Entry next : all.entrySet()) {
                String str = (String) next.getKey();
                if (str.startsWith("notify2_")) {
                    Integer num = (Integer) next.getValue();
                    if (num.intValue() == 2 || num.intValue() == 3) {
                        String replace = str.replace("notify2_", "");
                        long j = 1;
                        if (num.intValue() != 2) {
                            Integer num2 = (Integer) all.get("notifyuntil_" + replace);
                            if (num2 != null) {
                                j = 1 | (((long) num2.intValue()) << 32);
                            }
                        }
                        longSparseArray.put(Long.parseLong(replace), Long.valueOf(j));
                    }
                }
            }
            try {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
                for (int i = 0; i < longSparseArray.size(); i++) {
                    executeFast.requery();
                    executeFast.bindLong(1, longSparseArray.keyAt(i));
                    executeFast.bindLong(2, ((Long) longSparseArray.valueAt(i)).longValue());
                    executeFast.step();
                }
                executeFast.dispose();
                this.database.commitTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public long createPendingTask(NativeByteBuffer nativeByteBuffer) {
        if (nativeByteBuffer == null) {
            return 0;
        }
        long andAdd = this.lastTaskId.getAndAdd(1);
        this.storageQueue.postRunnable(new Runnable(andAdd, nativeByteBuffer) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ NativeByteBuffer f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$createPendingTask$6$MessagesStorage(this.f$1, this.f$2);
            }
        });
        return andAdd;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createPendingTask$6 */
    public /* synthetic */ void lambda$createPendingTask$6$MessagesStorage(long j, NativeByteBuffer nativeByteBuffer) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO pending_tasks VALUES(?, ?)");
            executeFast.bindLong(1, j);
            executeFast.bindByteBuffer(2, nativeByteBuffer);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            nativeByteBuffer.reuse();
            throw th;
        }
        nativeByteBuffer.reuse();
    }

    public void removePendingTask(long j) {
        this.storageQueue.postRunnable(new Runnable(j) {
            public final /* synthetic */ long f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$removePendingTask$7$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$removePendingTask$7 */
    public /* synthetic */ void lambda$removePendingTask$7$MessagesStorage(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM pending_tasks WHERE id = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void loadPendingTasks() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$loadPendingTasks$23$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$loadPendingTasks$23 */
    public /* synthetic */ void lambda$loadPendingTasks$23$MessagesStorage() {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT id, data FROM pending_tasks WHERE 1", new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    int readInt32 = byteBufferValue.readInt32(false);
                    switch (readInt32) {
                        case 0:
                            TLRPC$Chat TLdeserialize = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            if (TLdeserialize != null) {
                                Utilities.stageQueue.postRunnable(new Runnable(TLdeserialize, longValue) {
                                    public final /* synthetic */ TLRPC$Chat f$1;
                                    public final /* synthetic */ long f$2;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r3;
                                    }

                                    public final void run() {
                                        MessagesStorage.this.lambda$null$8$MessagesStorage(this.f$1, this.f$2);
                                    }
                                });
                                break;
                            }
                            break;
                        case 1:
                            Utilities.stageQueue.postRunnable(new Runnable(byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), longValue) {
                                public final /* synthetic */ int f$1;
                                public final /* synthetic */ int f$2;
                                public final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$9$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 2:
                        case 5:
                        case 8:
                        case 10:
                        case 14:
                            TLRPC$TL_dialog tLRPC$TL_dialog = new TLRPC$TL_dialog();
                            tLRPC$TL_dialog.id = byteBufferValue.readInt64(false);
                            tLRPC$TL_dialog.top_message = byteBufferValue.readInt32(false);
                            tLRPC$TL_dialog.read_inbox_max_id = byteBufferValue.readInt32(false);
                            tLRPC$TL_dialog.read_outbox_max_id = byteBufferValue.readInt32(false);
                            tLRPC$TL_dialog.unread_count = byteBufferValue.readInt32(false);
                            tLRPC$TL_dialog.last_message_date = byteBufferValue.readInt32(false);
                            tLRPC$TL_dialog.pts = byteBufferValue.readInt32(false);
                            tLRPC$TL_dialog.flags = byteBufferValue.readInt32(false);
                            if (readInt32 >= 5) {
                                tLRPC$TL_dialog.pinned = byteBufferValue.readBool(false);
                                tLRPC$TL_dialog.pinnedNum = byteBufferValue.readInt32(false);
                            }
                            if (readInt32 >= 8) {
                                tLRPC$TL_dialog.unread_mentions_count = byteBufferValue.readInt32(false);
                            }
                            if (readInt32 >= 10) {
                                tLRPC$TL_dialog.unread_mark = byteBufferValue.readBool(false);
                            }
                            if (readInt32 >= 14) {
                                tLRPC$TL_dialog.folder_id = byteBufferValue.readInt32(false);
                            }
                            AndroidUtilities.runOnUIThread(new Runnable(tLRPC$TL_dialog, TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                public final /* synthetic */ TLRPC$Dialog f$1;
                                public final /* synthetic */ TLRPC$InputPeer f$2;
                                public final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$10$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 3:
                            getSendMessagesHelper().sendGame(TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), (TLRPC$TL_inputMediaGame) TLRPC$InputMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), byteBufferValue.readInt64(false), longValue);
                            break;
                        case 4:
                            AndroidUtilities.runOnUIThread(new Runnable(byteBufferValue.readInt64(false), byteBufferValue.readBool(false), TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                public final /* synthetic */ long f$1;
                                public final /* synthetic */ boolean f$2;
                                public final /* synthetic */ TLRPC$InputPeer f$3;
                                public final /* synthetic */ long f$4;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r4;
                                    this.f$3 = r5;
                                    this.f$4 = r6;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$11$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                                }
                            });
                            break;
                        case 6:
                            Utilities.stageQueue.postRunnable(new Runnable(byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), longValue, TLRPC$InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false)) {
                                public final /* synthetic */ int f$1;
                                public final /* synthetic */ int f$2;
                                public final /* synthetic */ long f$3;
                                public final /* synthetic */ TLRPC$InputChannel f$4;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                    this.f$4 = r6;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$12$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                                }
                            });
                            break;
                        case 7:
                            int readInt322 = byteBufferValue.readInt32(false);
                            int readInt323 = byteBufferValue.readInt32(false);
                            TLObject TLdeserialize2 = TLRPC$TL_messages_deleteMessages.TLdeserialize(byteBufferValue, readInt323, false);
                            TLObject TLdeserialize3 = TLdeserialize2 == null ? TLRPC$TL_channels_deleteMessages.TLdeserialize(byteBufferValue, readInt323, false) : TLdeserialize2;
                            if (TLdeserialize3 != null) {
                                AndroidUtilities.runOnUIThread(new Runnable(readInt322, longValue, TLdeserialize3) {
                                    public final /* synthetic */ int f$1;
                                    public final /* synthetic */ long f$2;
                                    public final /* synthetic */ TLObject f$3;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r3;
                                        this.f$3 = r5;
                                    }

                                    public final void run() {
                                        MessagesStorage.this.lambda$null$13$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                    }
                                });
                                break;
                            } else {
                                removePendingTask(longValue);
                                break;
                            }
                        case 9:
                            AndroidUtilities.runOnUIThread(new Runnable(byteBufferValue.readInt64(false), TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                public final /* synthetic */ long f$1;
                                public final /* synthetic */ TLRPC$InputPeer f$2;
                                public final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r4;
                                    this.f$3 = r5;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$14$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 11:
                            int readInt324 = byteBufferValue.readInt32(false);
                            int readInt325 = byteBufferValue.readInt32(false);
                            AndroidUtilities.runOnUIThread(new Runnable(readInt324, readInt325, readInt325 != 0 ? TLRPC$InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false) : null, byteBufferValue.readInt32(false), longValue) {
                                public final /* synthetic */ int f$1;
                                public final /* synthetic */ int f$2;
                                public final /* synthetic */ TLRPC$InputChannel f$3;
                                public final /* synthetic */ int f$4;
                                public final /* synthetic */ long f$5;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                    this.f$4 = r5;
                                    this.f$5 = r6;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$15$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
                                }
                            });
                            break;
                        case 12:
                        case 19:
                        case 20:
                            removePendingTask(longValue);
                            break;
                        case 13:
                            AndroidUtilities.runOnUIThread(new Runnable(byteBufferValue.readInt64(false), byteBufferValue.readBool(false), byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), byteBufferValue.readBool(false), TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                public final /* synthetic */ long f$1;
                                public final /* synthetic */ boolean f$2;
                                public final /* synthetic */ int f$3;
                                public final /* synthetic */ int f$4;
                                public final /* synthetic */ boolean f$5;
                                public final /* synthetic */ TLRPC$InputPeer f$6;
                                public final /* synthetic */ long f$7;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r4;
                                    this.f$3 = r5;
                                    this.f$4 = r6;
                                    this.f$5 = r7;
                                    this.f$6 = r8;
                                    this.f$7 = r9;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$17$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7);
                                }
                            });
                            break;
                        case 15:
                            Utilities.stageQueue.postRunnable(new Runnable(TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                public final /* synthetic */ TLRPC$InputPeer f$1;
                                public final /* synthetic */ long f$2;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$18$MessagesStorage(this.f$1, this.f$2);
                                }
                            });
                            break;
                        case 16:
                            int readInt326 = byteBufferValue.readInt32(false);
                            int readInt327 = byteBufferValue.readInt32(false);
                            ArrayList arrayList = new ArrayList();
                            for (int i = 0; i < readInt327; i++) {
                                arrayList.add(TLRPC$InputDialogPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                            }
                            AndroidUtilities.runOnUIThread(new Runnable(readInt326, arrayList, longValue) {
                                public final /* synthetic */ int f$1;
                                public final /* synthetic */ ArrayList f$2;
                                public final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$19$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 17:
                            int readInt328 = byteBufferValue.readInt32(false);
                            int readInt329 = byteBufferValue.readInt32(false);
                            ArrayList arrayList2 = new ArrayList();
                            for (int i2 = 0; i2 < readInt329; i2++) {
                                arrayList2.add(TLRPC$TL_inputFolderPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                            }
                            AndroidUtilities.runOnUIThread(new Runnable(readInt328, arrayList2, longValue) {
                                public final /* synthetic */ int f$1;
                                public final /* synthetic */ ArrayList f$2;
                                public final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$20$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 18:
                            long readInt64 = byteBufferValue.readInt64(false);
                            int readInt3210 = byteBufferValue.readInt32(false);
                            TLRPC$TL_messages_deleteScheduledMessages TLdeserialize4 = TLRPC$TL_messages_deleteScheduledMessages.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            if (TLdeserialize4 != null) {
                                AndroidUtilities.runOnUIThread(new Runnable(readInt64, readInt3210, longValue, TLdeserialize4) {
                                    public final /* synthetic */ long f$1;
                                    public final /* synthetic */ int f$2;
                                    public final /* synthetic */ long f$3;
                                    public final /* synthetic */ TLObject f$4;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r4;
                                        this.f$3 = r5;
                                        this.f$4 = r7;
                                    }

                                    public final void run() {
                                        MessagesStorage.this.lambda$null$21$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                                    }
                                });
                                break;
                            } else {
                                removePendingTask(longValue);
                                break;
                            }
                        case 21:
                            Theme.OverrideWallpaperInfo overrideWallpaperInfo = new Theme.OverrideWallpaperInfo();
                            byteBufferValue.readInt64(false);
                            overrideWallpaperInfo.isBlurred = byteBufferValue.readBool(false);
                            overrideWallpaperInfo.isMotion = byteBufferValue.readBool(false);
                            overrideWallpaperInfo.color = byteBufferValue.readInt32(false);
                            overrideWallpaperInfo.gradientColor = byteBufferValue.readInt32(false);
                            overrideWallpaperInfo.rotation = byteBufferValue.readInt32(false);
                            overrideWallpaperInfo.intensity = (float) byteBufferValue.readDouble(false);
                            boolean readBool = byteBufferValue.readBool(false);
                            overrideWallpaperInfo.slug = byteBufferValue.readString(false);
                            overrideWallpaperInfo.originalFileName = byteBufferValue.readString(false);
                            AndroidUtilities.runOnUIThread(new Runnable(overrideWallpaperInfo, readBool, longValue) {
                                public final /* synthetic */ Theme.OverrideWallpaperInfo f$1;
                                public final /* synthetic */ boolean f$2;
                                public final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$16$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 22:
                            AndroidUtilities.runOnUIThread(new Runnable(TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                public final /* synthetic */ TLRPC$InputPeer f$1;
                                public final /* synthetic */ long f$2;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$22$MessagesStorage(this.f$1, this.f$2);
                                }
                            });
                            break;
                    }
                    byteBufferValue.reuse();
                }
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$8 */
    public /* synthetic */ void lambda$null$8$MessagesStorage(TLRPC$Chat tLRPC$Chat, long j) {
        getMessagesController().loadUnknownChannel(tLRPC$Chat, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$9 */
    public /* synthetic */ void lambda$null$9$MessagesStorage(int i, int i2, long j) {
        getMessagesController().getChannelDifference(i, i2, j, (TLRPC$InputChannel) null);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$10 */
    public /* synthetic */ void lambda$null$10$MessagesStorage(TLRPC$Dialog tLRPC$Dialog, TLRPC$InputPeer tLRPC$InputPeer, long j) {
        getMessagesController().checkLastDialogMessage(tLRPC$Dialog, tLRPC$InputPeer, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$11 */
    public /* synthetic */ void lambda$null$11$MessagesStorage(long j, boolean z, TLRPC$InputPeer tLRPC$InputPeer, long j2) {
        getMessagesController().pinDialog(j, z, tLRPC$InputPeer, j2);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$12 */
    public /* synthetic */ void lambda$null$12$MessagesStorage(int i, int i2, long j, TLRPC$InputChannel tLRPC$InputChannel) {
        getMessagesController().getChannelDifference(i, i2, j, tLRPC$InputChannel);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$13 */
    public /* synthetic */ void lambda$null$13$MessagesStorage(int i, long j, TLObject tLObject) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC$EncryptedChat) null, 0, i, true, false, false, j, tLObject);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$14 */
    public /* synthetic */ void lambda$null$14$MessagesStorage(long j, TLRPC$InputPeer tLRPC$InputPeer, long j2) {
        getMessagesController().markDialogAsUnread(j, tLRPC$InputPeer, j2);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$15 */
    public /* synthetic */ void lambda$null$15$MessagesStorage(int i, int i2, TLRPC$InputChannel tLRPC$InputChannel, int i3, long j) {
        getMessagesController().markMessageAsRead(i, i2, tLRPC$InputChannel, i3, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$16 */
    public /* synthetic */ void lambda$null$16$MessagesStorage(Theme.OverrideWallpaperInfo overrideWallpaperInfo, boolean z, long j) {
        getMessagesController().saveWallpaperToServer((File) null, overrideWallpaperInfo, z, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$17 */
    public /* synthetic */ void lambda$null$17$MessagesStorage(long j, boolean z, int i, int i2, boolean z2, TLRPC$InputPeer tLRPC$InputPeer, long j2) {
        getMessagesController().deleteDialog(j, z ? 1 : 0, i, i2, z2, tLRPC$InputPeer, j2);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$18 */
    public /* synthetic */ void lambda$null$18$MessagesStorage(TLRPC$InputPeer tLRPC$InputPeer, long j) {
        getMessagesController().loadUnknownDialog(tLRPC$InputPeer, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$19 */
    public /* synthetic */ void lambda$null$19$MessagesStorage(int i, ArrayList arrayList, long j) {
        getMessagesController().reorderPinnedDialogs(i, arrayList, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$20 */
    public /* synthetic */ void lambda$null$20$MessagesStorage(int i, ArrayList arrayList, long j) {
        getMessagesController().addDialogToFolder((ArrayList<Long>) null, i, -1, arrayList, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$21 */
    public /* synthetic */ void lambda$null$21$MessagesStorage(long j, int i, long j2, TLObject tLObject) {
        MessagesController.getInstance(this.currentAccount).deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC$EncryptedChat) null, j, i, true, true, false, j2, tLObject);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$22 */
    public /* synthetic */ void lambda$null$22$MessagesStorage(TLRPC$InputPeer tLRPC$InputPeer, long j) {
        getMessagesController().reloadMentionsCountForChannel(tLRPC$InputPeer, j);
    }

    public void saveChannelPts(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i2, i) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveChannelPts$24$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$saveChannelPts$24 */
    public /* synthetic */ void lambda$saveChannelPts$24$MessagesStorage(int i, int i2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pts = ? WHERE did = ?");
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, -i2);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: saveDiffParamsInternal */
    public void lambda$saveDiffParams$25(int i, int i2, int i3, int i4) {
        try {
            if (this.lastSavedSeq != i || this.lastSavedPts != i2 || this.lastSavedDate != i3 || this.lastQtsValue != i4) {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE params SET seq = ?, pts = ?, date = ?, qts = ? WHERE id = 1");
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, i2);
                executeFast.bindInteger(3, i3);
                executeFast.bindInteger(4, i4);
                executeFast.step();
                executeFast.dispose();
                this.lastSavedSeq = i;
                this.lastSavedPts = i2;
                this.lastSavedDate = i3;
                this.lastSavedQts = i4;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveDiffParams(int i, int i2, int i3, int i4) {
        this.storageQueue.postRunnable(new Runnable(i, i2, i3, i4) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveDiffParams$25$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateMutedDialogsFiltersCounters$26 */
    public /* synthetic */ void lambda$updateMutedDialogsFiltersCounters$26$MessagesStorage() {
        resetAllUnreadCounters(true);
    }

    public void updateMutedDialogsFiltersCounters() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$updateMutedDialogsFiltersCounters$26$MessagesStorage();
            }
        });
    }

    public void setDialogFlags(long j, long j2) {
        this.storageQueue.postRunnable(new Runnable(j, j2) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogFlags$27$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$setDialogFlags$27 */
    public /* synthetic */ void lambda$setDialogFlags$27$MessagesStorage(long j, long j2) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT flags FROM dialog_settings WHERE did = " + j, new Object[0]);
            int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : 0;
            queryFinalized.dispose();
            if (j2 != ((long) intValue)) {
                this.database.executeFast(String.format(Locale.US, "REPLACE INTO dialog_settings VALUES(%d, %d)", new Object[]{Long.valueOf(j), Long.valueOf(j2)})).stepThis().dispose();
                resetAllUnreadCounters(true);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putPushMessage(MessageObject messageObject) {
        this.storageQueue.postRunnable(new Runnable(messageObject) {
            public final /* synthetic */ MessageObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$putPushMessage$28$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putPushMessage$28 */
    public /* synthetic */ void lambda$putPushMessage$28$MessagesStorage(MessageObject messageObject) {
        try {
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(messageObject.messageOwner.getObjectSize());
            messageObject.messageOwner.serializeToStream(nativeByteBuffer);
            long id = (long) messageObject.getId();
            int i = messageObject.messageOwner.peer_id.channel_id;
            if (i != 0) {
                id |= ((long) i) << 32;
            }
            int i2 = 0;
            if (messageObject.localType == 2) {
                i2 = 1;
            }
            if (messageObject.localChannel) {
                i2 |= 2;
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO unread_push_messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)");
            executeFast.requery();
            executeFast.bindLong(1, messageObject.getDialogId());
            executeFast.bindLong(2, id);
            executeFast.bindLong(3, messageObject.messageOwner.random_id);
            executeFast.bindInteger(4, messageObject.messageOwner.date);
            executeFast.bindByteBuffer(5, nativeByteBuffer);
            CharSequence charSequence = messageObject.messageText;
            if (charSequence == null) {
                executeFast.bindNull(6);
            } else {
                executeFast.bindString(6, charSequence.toString());
            }
            String str = messageObject.localName;
            if (str == null) {
                executeFast.bindNull(7);
            } else {
                executeFast.bindString(7, str);
            }
            String str2 = messageObject.localUserName;
            if (str2 == null) {
                executeFast.bindNull(8);
            } else {
                executeFast.bindString(8, str2);
            }
            executeFast.bindInteger(9, i2);
            executeFast.step();
            nativeByteBuffer.reuse();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private static class ReadDialog {
        public int date;
        public int lastMid;
        public int unreadCount;

        private ReadDialog() {
        }
    }

    public void readAllDialogs(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$readAllDialogs$30$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$readAllDialogs$30 */
    public /* synthetic */ void lambda$readAllDialogs$30$MessagesStorage(int i) {
        SQLiteCursor sQLiteCursor;
        try {
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            LongSparseArray longSparseArray = new LongSparseArray();
            if (i >= 0) {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count > 0 AND folder_id = %1$d", new Object[]{Integer.valueOf(i)}), new Object[0]);
            } else {
                sQLiteCursor = this.database.queryFinalized("SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count > 0", new Object[0]);
            }
            while (sQLiteCursor.next()) {
                long longValue = sQLiteCursor.longValue(0);
                if (!DialogObject.isFolderDialogId(longValue)) {
                    ReadDialog readDialog = new ReadDialog();
                    readDialog.lastMid = sQLiteCursor.intValue(1);
                    readDialog.unreadCount = sQLiteCursor.intValue(2);
                    readDialog.date = sQLiteCursor.intValue(3);
                    longSparseArray.put(longValue, readDialog);
                    int i2 = (int) longValue;
                    int i3 = (int) (longValue >> 32);
                    if (i2 != 0) {
                        if (i2 < 0) {
                            int i4 = -i2;
                            if (!arrayList2.contains(Integer.valueOf(i4))) {
                                arrayList2.add(Integer.valueOf(i4));
                            }
                        } else if (!arrayList.contains(Integer.valueOf(i2))) {
                            arrayList.add(Integer.valueOf(i2));
                        }
                    } else if (!arrayList3.contains(Integer.valueOf(i3))) {
                        arrayList3.add(Integer.valueOf(i3));
                    }
                }
            }
            sQLiteCursor.dispose();
            ArrayList arrayList4 = new ArrayList();
            ArrayList arrayList5 = new ArrayList();
            ArrayList arrayList6 = new ArrayList();
            if (!arrayList3.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList3), arrayList6, arrayList);
            }
            if (!arrayList.isEmpty()) {
                getUsersInternal(TextUtils.join(",", arrayList), arrayList4);
            }
            if (!arrayList2.isEmpty()) {
                getChatsInternal(TextUtils.join(",", arrayList2), arrayList5);
            }
            AndroidUtilities.runOnUIThread(new Runnable(arrayList4, arrayList5, arrayList6, longSparseArray) {
                public final /* synthetic */ ArrayList f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ ArrayList f$3;
                public final /* synthetic */ LongSparseArray f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$29$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$29 */
    public /* synthetic */ void lambda$null$29$MessagesStorage(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, LongSparseArray longSparseArray) {
        LongSparseArray longSparseArray2 = longSparseArray;
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        for (int i = 0; i < longSparseArray.size(); i++) {
            long keyAt = longSparseArray2.keyAt(i);
            ReadDialog readDialog = (ReadDialog) longSparseArray2.valueAt(i);
            MessagesController messagesController = getMessagesController();
            int i2 = readDialog.lastMid;
            messagesController.markDialogAsRead(keyAt, i2, i2, readDialog.date, false, 0, readDialog.unreadCount, true, 0);
        }
    }

    private TLRPC$messages_Dialogs loadDialogsByIds(String str, ArrayList<Integer> arrayList, ArrayList<Integer> arrayList2, ArrayList<Integer> arrayList3) throws Exception {
        TLRPC$Message tLRPC$Message;
        NativeByteBuffer byteBufferValue;
        ArrayList<Integer> arrayList4 = arrayList;
        ArrayList<Integer> arrayList5 = arrayList2;
        ArrayList<Integer> arrayList6 = arrayList3;
        TLRPC$TL_messages_dialogs tLRPC$TL_messages_dialogs = new TLRPC$TL_messages_dialogs();
        ArrayList arrayList7 = new ArrayList();
        LongSparseArray longSparseArray = new LongSparseArray();
        int i = 1;
        SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.did IN (%s) ORDER BY d.pinned DESC, d.date DESC", new Object[]{str}), new Object[0]);
        while (queryFinalized.next()) {
            long longValue = queryFinalized.longValue(0);
            TLRPC$TL_dialog tLRPC$TL_dialog = new TLRPC$TL_dialog();
            tLRPC$TL_dialog.id = longValue;
            tLRPC$TL_dialog.top_message = queryFinalized.intValue(i);
            tLRPC$TL_dialog.unread_count = queryFinalized.intValue(2);
            tLRPC$TL_dialog.last_message_date = queryFinalized.intValue(3);
            int intValue = queryFinalized.intValue(10);
            tLRPC$TL_dialog.pts = intValue;
            tLRPC$TL_dialog.flags = (intValue == 0 || ((int) tLRPC$TL_dialog.id) > 0) ? 0 : 1;
            tLRPC$TL_dialog.read_inbox_max_id = queryFinalized.intValue(11);
            tLRPC$TL_dialog.read_outbox_max_id = queryFinalized.intValue(12);
            int intValue2 = queryFinalized.intValue(14);
            tLRPC$TL_dialog.pinnedNum = intValue2;
            tLRPC$TL_dialog.pinned = intValue2 != 0;
            tLRPC$TL_dialog.unread_mentions_count = queryFinalized.intValue(15);
            tLRPC$TL_dialog.unread_mark = (queryFinalized.intValue(16) & i) != 0;
            long longValue2 = queryFinalized.longValue(8);
            TLRPC$TL_peerNotifySettings tLRPC$TL_peerNotifySettings = new TLRPC$TL_peerNotifySettings();
            tLRPC$TL_dialog.notify_settings = tLRPC$TL_peerNotifySettings;
            if ((((int) longValue2) & i) != 0) {
                int i2 = (int) (longValue2 >> 32);
                tLRPC$TL_peerNotifySettings.mute_until = i2;
                if (i2 == 0) {
                    tLRPC$TL_peerNotifySettings.mute_until = Integer.MAX_VALUE;
                }
            }
            tLRPC$TL_dialog.folder_id = queryFinalized.intValue(17);
            tLRPC$TL_messages_dialogs.dialogs.add(tLRPC$TL_dialog);
            NativeByteBuffer byteBufferValue2 = queryFinalized.byteBufferValue(4);
            if (byteBufferValue2 != null) {
                TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(false), false);
                if (TLdeserialize != null) {
                    TLdeserialize.readAttachPath(byteBufferValue2, getUserConfig().clientUserId);
                    byteBufferValue2.reuse();
                    MessageObject.setUnreadFlags(TLdeserialize, queryFinalized.intValue(5));
                    TLdeserialize.id = queryFinalized.intValue(6);
                    int intValue3 = queryFinalized.intValue(9);
                    if (intValue3 != 0) {
                        tLRPC$TL_dialog.last_message_date = intValue3;
                    }
                    TLdeserialize.send_state = queryFinalized.intValue(7);
                    TLdeserialize.dialog_id = tLRPC$TL_dialog.id;
                    tLRPC$TL_messages_dialogs.messages.add(TLdeserialize);
                    addUsersAndChatsFromMessage(TLdeserialize, arrayList4, arrayList5);
                    try {
                        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = TLdeserialize.reply_to;
                        if (!(tLRPC$TL_messageReplyHeader == null || tLRPC$TL_messageReplyHeader.reply_to_msg_id == 0)) {
                            TLRPC$MessageAction tLRPC$MessageAction = TLdeserialize.action;
                            if ((tLRPC$MessageAction instanceof TLRPC$TL_messageActionPinMessage) || (tLRPC$MessageAction instanceof TLRPC$TL_messageActionPaymentSent) || (tLRPC$MessageAction instanceof TLRPC$TL_messageActionGameScore)) {
                                if (!queryFinalized.isNull(13) && (byteBufferValue = queryFinalized.byteBufferValue(13)) != null) {
                                    TLRPC$Message TLdeserialize2 = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                    TLdeserialize.replyMessage = TLdeserialize2;
                                    TLdeserialize2.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                                    byteBufferValue.reuse();
                                    TLRPC$Message tLRPC$Message2 = TLdeserialize.replyMessage;
                                    if (tLRPC$Message2 != null) {
                                        addUsersAndChatsFromMessage(tLRPC$Message2, arrayList4, arrayList5);
                                    }
                                }
                                if (TLdeserialize.replyMessage == null) {
                                    TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader2 = TLdeserialize.reply_to;
                                    long j = (long) tLRPC$TL_messageReplyHeader2.reply_to_msg_id;
                                    TLRPC$Peer tLRPC$Peer = tLRPC$TL_messageReplyHeader2.reply_to_peer_id;
                                    if (tLRPC$Peer != null) {
                                        int i3 = tLRPC$Peer.channel_id;
                                        if (i3 != 0) {
                                            j |= ((long) i3) << 32;
                                            tLRPC$Message = TLdeserialize;
                                        } else {
                                            tLRPC$Message = TLdeserialize;
                                        }
                                    } else {
                                        tLRPC$Message = TLdeserialize;
                                        int i4 = tLRPC$Message.peer_id.channel_id;
                                        if (i4 != 0) {
                                            j |= ((long) i4) << 32;
                                        }
                                    }
                                    if (!arrayList7.contains(Long.valueOf(j))) {
                                        arrayList7.add(Long.valueOf(j));
                                    }
                                    longSparseArray.put(tLRPC$TL_dialog.id, tLRPC$Message);
                                }
                            }
                        }
                    } catch (Exception e) {
                        FileLog.e((Throwable) e);
                    }
                } else {
                    byteBufferValue2.reuse();
                }
            }
            long j2 = tLRPC$TL_dialog.id;
            int i5 = (int) j2;
            int i6 = (int) (j2 >> 32);
            if (i5 != 0) {
                if (i5 <= 0) {
                    int i7 = -i5;
                    if (!arrayList5.contains(Integer.valueOf(i7))) {
                        arrayList5.add(Integer.valueOf(i7));
                    }
                } else if (!arrayList4.contains(Integer.valueOf(i5))) {
                    arrayList4.add(Integer.valueOf(i5));
                }
            } else if (!arrayList6.contains(Integer.valueOf(i6))) {
                arrayList6.add(Integer.valueOf(i6));
            }
            i = 1;
        }
        queryFinalized.dispose();
        if (!arrayList7.isEmpty()) {
            SQLiteCursor queryFinalized2 = this.database.queryFinalized(String.format(Locale.US, "SELECT data, mid, date, uid FROM messages WHERE mid IN(%s)", new Object[]{TextUtils.join(",", arrayList7)}), new Object[0]);
            while (queryFinalized2.next()) {
                NativeByteBuffer byteBufferValue3 = queryFinalized2.byteBufferValue(0);
                if (byteBufferValue3 != null) {
                    TLRPC$Message TLdeserialize3 = TLRPC$Message.TLdeserialize(byteBufferValue3, byteBufferValue3.readInt32(false), false);
                    TLdeserialize3.readAttachPath(byteBufferValue3, getUserConfig().clientUserId);
                    byteBufferValue3.reuse();
                    TLdeserialize3.id = queryFinalized2.intValue(1);
                    TLdeserialize3.date = queryFinalized2.intValue(2);
                    TLdeserialize3.dialog_id = queryFinalized2.longValue(3);
                    addUsersAndChatsFromMessage(TLdeserialize3, arrayList4, arrayList5);
                    TLRPC$Message tLRPC$Message3 = (TLRPC$Message) longSparseArray.get(TLdeserialize3.dialog_id);
                    if (tLRPC$Message3 != null) {
                        tLRPC$Message3.replyMessage = TLdeserialize3;
                        TLdeserialize3.dialog_id = tLRPC$Message3.dialog_id;
                    }
                }
            }
            queryFinalized2.dispose();
        }
        return tLRPC$TL_messages_dialogs;
    }

    private void loadDialogFilters() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$loadDialogFilters$32$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$loadDialogFilters$32 */
    public /* synthetic */ void lambda$loadDialogFilters$32$MessagesStorage() {
        TLRPC$messages_Dialogs tLRPC$messages_Dialogs;
        SQLiteCursor sQLiteCursor;
        try {
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            ArrayList arrayList4 = new ArrayList();
            SparseArray sparseArray = new SparseArray();
            arrayList.add(Integer.valueOf(getUserConfig().getClientUserId()));
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT id, ord, unread_count, flags, title FROM dialog_filter WHERE 1", new Object[0]);
            boolean z = false;
            while (queryFinalized.next()) {
                MessagesController.DialogFilter dialogFilter = new MessagesController.DialogFilter();
                dialogFilter.id = queryFinalized.intValue(i);
                dialogFilter.order = queryFinalized.intValue(1);
                dialogFilter.unreadCount = -1;
                dialogFilter.pendingUnreadCount = -1;
                dialogFilter.flags = queryFinalized.intValue(3);
                dialogFilter.name = queryFinalized.stringValue(4);
                this.dialogFilters.add(dialogFilter);
                this.dialogFiltersMap.put(dialogFilter.id, dialogFilter);
                sparseArray.put(dialogFilter.id, dialogFilter);
                if (dialogFilter.pendingUnreadCount < 0) {
                    z = true;
                }
                int i2 = 0;
                while (i2 < 2) {
                    if (i2 == 0) {
                        SQLiteDatabase sQLiteDatabase = this.database;
                        sQLiteCursor = sQLiteDatabase.queryFinalized("SELECT peer, pin FROM dialog_filter_pin_v2 WHERE id = " + dialogFilter.id, new Object[i]);
                    } else {
                        SQLiteDatabase sQLiteDatabase2 = this.database;
                        sQLiteCursor = sQLiteDatabase2.queryFinalized("SELECT peer FROM dialog_filter_ep WHERE id = " + dialogFilter.id, new Object[i]);
                    }
                    while (sQLiteCursor.next()) {
                        long longValue = sQLiteCursor.longValue(i);
                        int i3 = (int) longValue;
                        if (i2 == 0) {
                            if (i3 != 0) {
                                dialogFilter.alwaysShow.add(Integer.valueOf(i3));
                            }
                            int intValue = sQLiteCursor.intValue(1);
                            if (intValue != Integer.MIN_VALUE) {
                                dialogFilter.pinnedDialogs.put(longValue, Integer.valueOf(intValue));
                                if (!arrayList4.contains(Long.valueOf(longValue))) {
                                    arrayList4.add(Long.valueOf(longValue));
                                }
                            }
                        } else if (i3 != 0) {
                            dialogFilter.neverShow.add(Integer.valueOf(i3));
                        }
                        if (i3 < 0) {
                            int i4 = -i3;
                            if (!arrayList2.contains(Integer.valueOf(i4))) {
                                arrayList2.add(Integer.valueOf(i4));
                            }
                        } else if (i3 <= 0) {
                            int i5 = (int) (longValue >> 32);
                            if (!arrayList3.contains(Integer.valueOf(i5))) {
                                arrayList3.add(Integer.valueOf(i5));
                            }
                        } else if (!arrayList.contains(Integer.valueOf(i3))) {
                            arrayList.add(Integer.valueOf(i3));
                        }
                        i = 0;
                    }
                    sQLiteCursor.dispose();
                    i2++;
                    i = 0;
                }
            }
            queryFinalized.dispose();
            Collections.sort(this.dialogFilters, $$Lambda$MessagesStorage$sG5cldKBccA1xsx9iWGtss79tzs.INSTANCE);
            if (z) {
                calcUnreadCounters(true);
            }
            if (!arrayList4.isEmpty()) {
                tLRPC$messages_Dialogs = loadDialogsByIds(TextUtils.join(",", arrayList4), arrayList, arrayList2, arrayList3);
            } else {
                tLRPC$messages_Dialogs = new TLRPC$TL_messages_dialogs();
            }
            TLRPC$messages_Dialogs tLRPC$messages_Dialogs2 = tLRPC$messages_Dialogs;
            ArrayList arrayList5 = new ArrayList();
            ArrayList arrayList6 = new ArrayList();
            ArrayList arrayList7 = new ArrayList();
            if (!arrayList3.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList3), arrayList7, arrayList);
            }
            if (!arrayList.isEmpty()) {
                getUsersInternal(TextUtils.join(",", arrayList), arrayList5);
            }
            if (!arrayList2.isEmpty()) {
                getChatsInternal(TextUtils.join(",", arrayList2), arrayList6);
            }
            getMessagesController().processLoadedDialogFilters(new ArrayList(this.dialogFilters), tLRPC$messages_Dialogs2, (TLRPC$messages_Dialogs) null, arrayList5, arrayList6, arrayList7, 0);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    static /* synthetic */ int lambda$null$31(MessagesController.DialogFilter dialogFilter, MessagesController.DialogFilter dialogFilter2) {
        int i = dialogFilter.order;
        int i2 = dialogFilter2.order;
        if (i > i2) {
            return 1;
        }
        return i < i2 ? -1 : 0;
    }

    /* JADX WARNING: Removed duplicated region for block: B:114:0x032a A[Catch:{ Exception -> 0x065b }] */
    /* JADX WARNING: Removed duplicated region for block: B:192:0x046d A[Catch:{ Exception -> 0x065b }] */
    /* JADX WARNING: Removed duplicated region for block: B:325:0x063a A[Catch:{ Exception -> 0x065b }] */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x027b A[Catch:{ Exception -> 0x065b }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void calcUnreadCounters(boolean r26) {
        /*
            r25 = this;
            r1 = r25
            r0 = 0
            r2 = 0
        L_0x0004:
            r3 = 2
            if (r2 >= r3) goto L_0x002e
            r4 = 0
        L_0x0008:
            if (r4 >= r3) goto L_0x002b
            int[][] r5 = r1.contacts     // Catch:{ Exception -> 0x065b }
            r5 = r5[r2]     // Catch:{ Exception -> 0x065b }
            int[][] r6 = r1.nonContacts     // Catch:{ Exception -> 0x065b }
            r6 = r6[r2]     // Catch:{ Exception -> 0x065b }
            int[][] r7 = r1.bots     // Catch:{ Exception -> 0x065b }
            r7 = r7[r2]     // Catch:{ Exception -> 0x065b }
            int[][] r8 = r1.channels     // Catch:{ Exception -> 0x065b }
            r8 = r8[r2]     // Catch:{ Exception -> 0x065b }
            int[][] r9 = r1.groups     // Catch:{ Exception -> 0x065b }
            r9 = r9[r2]     // Catch:{ Exception -> 0x065b }
            r9[r4] = r0     // Catch:{ Exception -> 0x065b }
            r8[r4] = r0     // Catch:{ Exception -> 0x065b }
            r7[r4] = r0     // Catch:{ Exception -> 0x065b }
            r6[r4] = r0     // Catch:{ Exception -> 0x065b }
            r5[r4] = r0     // Catch:{ Exception -> 0x065b }
            int r4 = r4 + 1
            goto L_0x0008
        L_0x002b:
            int r2 = r2 + 1
            goto L_0x0004
        L_0x002e:
            android.util.LongSparseArray<java.lang.Integer> r2 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x065b }
            r2.clear()     // Catch:{ Exception -> 0x065b }
            android.util.LongSparseArray<java.lang.Integer> r2 = r1.dialogsWithUnread     // Catch:{ Exception -> 0x065b }
            r2.clear()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r2.<init>()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r4.<init>()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r5.<init>()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r6.<init>()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r7.<init>()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r8.<init>()     // Catch:{ Exception -> 0x065b }
            android.util.LongSparseArray r9 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x065b }
            r9.<init>()     // Catch:{ Exception -> 0x065b }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x065b }
            java.lang.String r11 = "SELECT did, folder_id, unread_count, unread_count_i FROM dialogs WHERE unread_count > 0 OR flags > 0 UNION ALL SELECT did, folder_id, unread_count, unread_count_i FROM dialogs WHERE unread_count_i > 0"
            java.lang.Object[] r12 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x065b }
            org.telegram.SQLite.SQLiteCursor r10 = r10.queryFinalized(r11, r12)     // Catch:{ Exception -> 0x065b }
        L_0x0065:
            boolean r11 = r10.next()     // Catch:{ Exception -> 0x065b }
            r12 = 32
            r13 = 1
            if (r11 == 0) goto L_0x00dd
            int r11 = r10.intValue(r13)     // Catch:{ Exception -> 0x065b }
            long r13 = r10.longValue(r0)     // Catch:{ Exception -> 0x065b }
            int r15 = r10.intValue(r3)     // Catch:{ Exception -> 0x065b }
            r3 = 3
            int r3 = r10.intValue(r3)     // Catch:{ Exception -> 0x065b }
            if (r15 <= 0) goto L_0x008a
            android.util.LongSparseArray<java.lang.Integer> r0 = r1.dialogsWithUnread     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x065b }
            r0.put(r13, r15)     // Catch:{ Exception -> 0x065b }
        L_0x008a:
            if (r3 <= 0) goto L_0x0095
            android.util.LongSparseArray<java.lang.Integer> r0 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x065b }
            r0.put(r13, r3)     // Catch:{ Exception -> 0x065b }
        L_0x0095:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x065b }
            r9.put(r13, r0)     // Catch:{ Exception -> 0x065b }
            int r0 = (int) r13     // Catch:{ Exception -> 0x065b }
            long r11 = r13 >> r12
            int r3 = (int) r11     // Catch:{ Exception -> 0x065b }
            if (r0 == 0) goto L_0x00c9
            if (r0 >= 0) goto L_0x00b7
            int r0 = -r0
            java.lang.Integer r3 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x065b }
            boolean r3 = r7.contains(r3)     // Catch:{ Exception -> 0x065b }
            if (r3 != 0) goto L_0x00da
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x065b }
            r7.add(r0)     // Catch:{ Exception -> 0x065b }
            goto L_0x00da
        L_0x00b7:
            java.lang.Integer r3 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x065b }
            boolean r3 = r6.contains(r3)     // Catch:{ Exception -> 0x065b }
            if (r3 != 0) goto L_0x00da
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x065b }
            r6.add(r0)     // Catch:{ Exception -> 0x065b }
            goto L_0x00da
        L_0x00c9:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x065b }
            boolean r0 = r8.contains(r0)     // Catch:{ Exception -> 0x065b }
            if (r0 != 0) goto L_0x00da
            java.lang.Integer r0 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x065b }
            r8.add(r0)     // Catch:{ Exception -> 0x065b }
        L_0x00da:
            r0 = 0
            r3 = 2
            goto L_0x0065
        L_0x00dd:
            r10.dispose()     // Catch:{ Exception -> 0x065b }
            android.util.SparseArray r0 = new android.util.SparseArray     // Catch:{ Exception -> 0x065b }
            r0.<init>()     // Catch:{ Exception -> 0x065b }
            android.util.SparseArray r3 = new android.util.SparseArray     // Catch:{ Exception -> 0x065b }
            r3.<init>()     // Catch:{ Exception -> 0x065b }
            android.util.SparseArray r10 = new android.util.SparseArray     // Catch:{ Exception -> 0x065b }
            r10.<init>()     // Catch:{ Exception -> 0x065b }
            android.util.SparseArray r11 = new android.util.SparseArray     // Catch:{ Exception -> 0x065b }
            r11.<init>()     // Catch:{ Exception -> 0x065b }
            android.util.SparseArray r14 = new android.util.SparseArray     // Catch:{ Exception -> 0x065b }
            r14.<init>()     // Catch:{ Exception -> 0x065b }
            android.util.SparseArray r15 = new android.util.SparseArray     // Catch:{ Exception -> 0x065b }
            r15.<init>()     // Catch:{ Exception -> 0x065b }
            boolean r18 = r6.isEmpty()     // Catch:{ Exception -> 0x065b }
            java.lang.String r12 = ","
            if (r18 != 0) goto L_0x0190
            java.lang.String r6 = android.text.TextUtils.join(r12, r6)     // Catch:{ Exception -> 0x065b }
            r1.getUsersInternal(r6, r2)     // Catch:{ Exception -> 0x065b }
            int r6 = r2.size()     // Catch:{ Exception -> 0x065b }
            r13 = 0
        L_0x0112:
            if (r13 >= r6) goto L_0x0190
            java.lang.Object r20 = r2.get(r13)     // Catch:{ Exception -> 0x065b }
            r21 = r2
            r2 = r20
            org.telegram.tgnet.TLRPC$User r2 = (org.telegram.tgnet.TLRPC$User) r2     // Catch:{ Exception -> 0x065b }
            r20 = r6
            org.telegram.messenger.MessagesController r6 = r25.getMessagesController()     // Catch:{ Exception -> 0x065b }
            r22 = r3
            int r3 = r2.id     // Catch:{ Exception -> 0x065b }
            r23 = r10
            r24 = r11
            long r10 = (long) r3     // Catch:{ Exception -> 0x065b }
            boolean r3 = r6.isDialogMuted(r10)     // Catch:{ Exception -> 0x065b }
            int r6 = r2.id     // Catch:{ Exception -> 0x065b }
            long r10 = (long) r6     // Catch:{ Exception -> 0x065b }
            java.lang.Object r6 = r9.get(r10)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r6 = (java.lang.Integer) r6     // Catch:{ Exception -> 0x065b }
            int r6 = r6.intValue()     // Catch:{ Exception -> 0x065b }
            if (r3 == 0) goto L_0x0147
            int r10 = r2.id     // Catch:{ Exception -> 0x065b }
            java.lang.Boolean r11 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x065b }
            r14.put(r10, r11)     // Catch:{ Exception -> 0x065b }
        L_0x0147:
            r10 = 1
            if (r6 != r10) goto L_0x0151
            int r10 = r2.id     // Catch:{ Exception -> 0x065b }
            java.lang.Boolean r11 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x065b }
            r15.put(r10, r11)     // Catch:{ Exception -> 0x065b }
        L_0x0151:
            boolean r10 = r2.bot     // Catch:{ Exception -> 0x065b }
            if (r10 == 0) goto L_0x0160
            int[][] r10 = r1.bots     // Catch:{ Exception -> 0x065b }
            r6 = r10[r6]     // Catch:{ Exception -> 0x065b }
            r10 = r6[r3]     // Catch:{ Exception -> 0x065b }
            r11 = 1
            int r10 = r10 + r11
            r6[r3] = r10     // Catch:{ Exception -> 0x065b }
            goto L_0x017e
        L_0x0160:
            boolean r10 = r2.self     // Catch:{ Exception -> 0x065b }
            if (r10 != 0) goto L_0x0174
            boolean r10 = r2.contact     // Catch:{ Exception -> 0x065b }
            if (r10 == 0) goto L_0x0169
            goto L_0x0174
        L_0x0169:
            int[][] r10 = r1.nonContacts     // Catch:{ Exception -> 0x065b }
            r6 = r10[r6]     // Catch:{ Exception -> 0x065b }
            r10 = r6[r3]     // Catch:{ Exception -> 0x065b }
            r11 = 1
            int r10 = r10 + r11
            r6[r3] = r10     // Catch:{ Exception -> 0x065b }
            goto L_0x017e
        L_0x0174:
            int[][] r10 = r1.contacts     // Catch:{ Exception -> 0x065b }
            r6 = r10[r6]     // Catch:{ Exception -> 0x065b }
            r10 = r6[r3]     // Catch:{ Exception -> 0x065b }
            r11 = 1
            int r10 = r10 + r11
            r6[r3] = r10     // Catch:{ Exception -> 0x065b }
        L_0x017e:
            int r3 = r2.id     // Catch:{ Exception -> 0x065b }
            r0.put(r3, r2)     // Catch:{ Exception -> 0x065b }
            int r13 = r13 + 1
            r6 = r20
            r2 = r21
            r3 = r22
            r10 = r23
            r11 = r24
            goto L_0x0112
        L_0x0190:
            r22 = r3
            r23 = r10
            r24 = r11
            boolean r2 = r8.isEmpty()     // Catch:{ Exception -> 0x065b }
            if (r2 != 0) goto L_0x026f
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r2.<init>()     // Catch:{ Exception -> 0x065b }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x065b }
            r3.<init>()     // Catch:{ Exception -> 0x065b }
            java.lang.String r6 = android.text.TextUtils.join(r12, r8)     // Catch:{ Exception -> 0x065b }
            r1.getEncryptedChatsInternal(r6, r3, r2)     // Catch:{ Exception -> 0x065b }
            boolean r6 = r2.isEmpty()     // Catch:{ Exception -> 0x065b }
            if (r6 != 0) goto L_0x026f
            java.lang.String r2 = android.text.TextUtils.join(r12, r2)     // Catch:{ Exception -> 0x065b }
            r1.getUsersInternal(r2, r4)     // Catch:{ Exception -> 0x065b }
            int r2 = r4.size()     // Catch:{ Exception -> 0x065b }
            r6 = 0
        L_0x01bf:
            if (r6 >= r2) goto L_0x01d3
            java.lang.Object r8 = r4.get(r6)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$User r8 = (org.telegram.tgnet.TLRPC$User) r8     // Catch:{ Exception -> 0x065b }
            int r10 = r8.id     // Catch:{ Exception -> 0x065b }
            r11 = r23
            r11.put(r10, r8)     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + 1
            r23 = r11
            goto L_0x01bf
        L_0x01d3:
            r11 = r23
            int r2 = r3.size()     // Catch:{ Exception -> 0x065b }
            r4 = 0
        L_0x01da:
            if (r4 >= r2) goto L_0x026c
            java.lang.Object r6 = r3.get(r4)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = (org.telegram.tgnet.TLRPC$EncryptedChat) r6     // Catch:{ Exception -> 0x065b }
            int r8 = r6.user_id     // Catch:{ Exception -> 0x065b }
            java.lang.Object r8 = r11.get(r8)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$User r8 = (org.telegram.tgnet.TLRPC$User) r8     // Catch:{ Exception -> 0x065b }
            if (r8 != 0) goto L_0x01f4
            r20 = r0
            r13 = r2
            r10 = r3
            r2 = r24
            goto L_0x0262
        L_0x01f4:
            int r6 = r6.id     // Catch:{ Exception -> 0x065b }
            r13 = r2
            r10 = r3
            long r2 = (long) r6     // Catch:{ Exception -> 0x065b }
            r6 = 32
            long r2 = r2 << r6
            org.telegram.messenger.MessagesController r6 = r25.getMessagesController()     // Catch:{ Exception -> 0x065b }
            boolean r6 = r6.isDialogMuted(r2)     // Catch:{ Exception -> 0x065b }
            java.lang.Object r2 = r9.get(r2)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ Exception -> 0x065b }
            int r2 = r2.intValue()     // Catch:{ Exception -> 0x065b }
            if (r6 == 0) goto L_0x021a
            int r3 = r8.id     // Catch:{ Exception -> 0x065b }
            r20 = r0
            java.lang.Boolean r0 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x065b }
            r14.put(r3, r0)     // Catch:{ Exception -> 0x065b }
            goto L_0x021c
        L_0x021a:
            r20 = r0
        L_0x021c:
            r0 = 1
            if (r2 != r0) goto L_0x0226
            int r0 = r8.id     // Catch:{ Exception -> 0x065b }
            java.lang.Boolean r3 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x065b }
            r15.put(r0, r3)     // Catch:{ Exception -> 0x065b }
        L_0x0226:
            boolean r0 = r8.self     // Catch:{ Exception -> 0x065b }
            if (r0 != 0) goto L_0x023a
            boolean r0 = r8.contact     // Catch:{ Exception -> 0x065b }
            if (r0 == 0) goto L_0x022f
            goto L_0x023a
        L_0x022f:
            int[][] r0 = r1.nonContacts     // Catch:{ Exception -> 0x065b }
            r0 = r0[r2]     // Catch:{ Exception -> 0x065b }
            r2 = r0[r6]     // Catch:{ Exception -> 0x065b }
            r3 = 1
            int r2 = r2 + r3
            r0[r6] = r2     // Catch:{ Exception -> 0x065b }
            goto L_0x0244
        L_0x023a:
            int[][] r0 = r1.contacts     // Catch:{ Exception -> 0x065b }
            r0 = r0[r2]     // Catch:{ Exception -> 0x065b }
            r2 = r0[r6]     // Catch:{ Exception -> 0x065b }
            r3 = 1
            int r2 = r2 + r3
            r0[r6] = r2     // Catch:{ Exception -> 0x065b }
        L_0x0244:
            int r0 = r8.id     // Catch:{ Exception -> 0x065b }
            r2 = 0
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x065b }
            r2 = r24
            java.lang.Object r0 = r2.get(r0, r3)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r0 = (java.lang.Integer) r0     // Catch:{ Exception -> 0x065b }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x065b }
            int r3 = r8.id     // Catch:{ Exception -> 0x065b }
            r6 = 1
            int r0 = r0 + r6
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x065b }
            r2.put(r3, r0)     // Catch:{ Exception -> 0x065b }
        L_0x0262:
            int r4 = r4 + 1
            r24 = r2
            r3 = r10
            r2 = r13
            r0 = r20
            goto L_0x01da
        L_0x026c:
            r20 = r0
            goto L_0x0273
        L_0x026f:
            r20 = r0
            r11 = r23
        L_0x0273:
            r2 = r24
            boolean r0 = r7.isEmpty()     // Catch:{ Exception -> 0x065b }
            if (r0 != 0) goto L_0x031d
            java.lang.String r0 = android.text.TextUtils.join(r12, r7)     // Catch:{ Exception -> 0x065b }
            r1.getChatsInternal(r0, r5)     // Catch:{ Exception -> 0x065b }
            int r0 = r5.size()     // Catch:{ Exception -> 0x065b }
            r3 = 0
        L_0x0287:
            if (r3 >= r0) goto L_0x031d
            java.lang.Object r4 = r5.get(r3)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$Chat r4 = (org.telegram.tgnet.TLRPC$Chat) r4     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$InputChannel r6 = r4.migrated_to     // Catch:{ Exception -> 0x065b }
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_inputChannel     // Catch:{ Exception -> 0x065b }
            if (r6 != 0) goto L_0x0303
            boolean r6 = org.telegram.messenger.ChatObject.isNotInChat(r4)     // Catch:{ Exception -> 0x065b }
            if (r6 == 0) goto L_0x029c
            goto L_0x0303
        L_0x029c:
            org.telegram.messenger.MessagesController r6 = r25.getMessagesController()     // Catch:{ Exception -> 0x065b }
            int r7 = r4.id     // Catch:{ Exception -> 0x065b }
            int r7 = -r7
            long r7 = (long) r7     // Catch:{ Exception -> 0x065b }
            boolean r6 = r6.isDialogMuted(r7, r4)     // Catch:{ Exception -> 0x065b }
            int r7 = r4.id     // Catch:{ Exception -> 0x065b }
            int r7 = -r7
            long r7 = (long) r7     // Catch:{ Exception -> 0x065b }
            java.lang.Object r7 = r9.get(r7)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x065b }
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x065b }
            if (r6 == 0) goto L_0x02c6
            android.util.LongSparseArray<java.lang.Integer> r8 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x065b }
            int r10 = r4.id     // Catch:{ Exception -> 0x065b }
            int r10 = -r10
            long r12 = (long) r10     // Catch:{ Exception -> 0x065b }
            int r8 = r8.indexOfKey(r12)     // Catch:{ Exception -> 0x065b }
            if (r8 >= 0) goto L_0x02c6
            r8 = 1
            goto L_0x02c7
        L_0x02c6:
            r8 = 0
        L_0x02c7:
            if (r6 == 0) goto L_0x02d1
            int r6 = r4.id     // Catch:{ Exception -> 0x065b }
            int r6 = -r6
            java.lang.Boolean r10 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x065b }
            r14.put(r6, r10)     // Catch:{ Exception -> 0x065b }
        L_0x02d1:
            r6 = 1
            if (r7 != r6) goto L_0x02dc
            int r6 = r4.id     // Catch:{ Exception -> 0x065b }
            int r6 = -r6
            java.lang.Boolean r10 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x065b }
            r15.put(r6, r10)     // Catch:{ Exception -> 0x065b }
        L_0x02dc:
            boolean r6 = org.telegram.messenger.ChatObject.isChannel(r4)     // Catch:{ Exception -> 0x065b }
            if (r6 == 0) goto L_0x02f1
            boolean r6 = r4.megagroup     // Catch:{ Exception -> 0x065b }
            if (r6 != 0) goto L_0x02f1
            int[][] r6 = r1.channels     // Catch:{ Exception -> 0x065b }
            r6 = r6[r7]     // Catch:{ Exception -> 0x065b }
            r7 = r6[r8]     // Catch:{ Exception -> 0x065b }
            r10 = 1
            int r7 = r7 + r10
            r6[r8] = r7     // Catch:{ Exception -> 0x065b }
            goto L_0x02fb
        L_0x02f1:
            int[][] r6 = r1.groups     // Catch:{ Exception -> 0x065b }
            r6 = r6[r7]     // Catch:{ Exception -> 0x065b }
            r7 = r6[r8]     // Catch:{ Exception -> 0x065b }
            r10 = 1
            int r7 = r7 + r10
            r6[r8] = r7     // Catch:{ Exception -> 0x065b }
        L_0x02fb:
            int r6 = r4.id     // Catch:{ Exception -> 0x065b }
            r7 = r22
            r7.put(r6, r4)     // Catch:{ Exception -> 0x065b }
            goto L_0x0317
        L_0x0303:
            r7 = r22
            android.util.LongSparseArray<java.lang.Integer> r6 = r1.dialogsWithUnread     // Catch:{ Exception -> 0x065b }
            int r8 = r4.id     // Catch:{ Exception -> 0x065b }
            int r8 = -r8
            long r12 = (long) r8     // Catch:{ Exception -> 0x065b }
            r6.remove(r12)     // Catch:{ Exception -> 0x065b }
            android.util.LongSparseArray<java.lang.Integer> r6 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x065b }
            int r4 = r4.id     // Catch:{ Exception -> 0x065b }
            int r4 = -r4
            long r12 = (long) r4     // Catch:{ Exception -> 0x065b }
            r6.remove(r12)     // Catch:{ Exception -> 0x065b }
        L_0x0317:
            int r3 = r3 + 1
            r22 = r7
            goto L_0x0287
        L_0x031d:
            r7 = r22
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r0 = r1.dialogFilters     // Catch:{ Exception -> 0x065b }
            int r0 = r0.size()     // Catch:{ Exception -> 0x065b }
            r3 = 0
        L_0x0326:
            int r4 = r0 + 2
            if (r3 >= r4) goto L_0x065f
            if (r3 >= r0) goto L_0x0343
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r4 = r1.dialogFilters     // Catch:{ Exception -> 0x065b }
            java.lang.Object r4 = r4.get(r3)     // Catch:{ Exception -> 0x065b }
            org.telegram.messenger.MessagesController$DialogFilter r4 = (org.telegram.messenger.MessagesController.DialogFilter) r4     // Catch:{ Exception -> 0x065b }
            int r5 = r4.pendingUnreadCount     // Catch:{ Exception -> 0x065b }
            if (r5 < 0) goto L_0x0340
            r24 = r2
            r23 = r11
            r16 = 0
            goto L_0x0653
        L_0x0340:
            int r5 = r4.flags     // Catch:{ Exception -> 0x065b }
            goto L_0x035a
        L_0x0343:
            r4 = 0
            int r5 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ALL_CHATS     // Catch:{ Exception -> 0x065b }
            if (r3 != r0) goto L_0x0357
            org.telegram.messenger.NotificationsController r6 = r25.getNotificationsController()     // Catch:{ Exception -> 0x065b }
            boolean r6 = r6.showBadgeMuted     // Catch:{ Exception -> 0x065b }
            if (r6 != 0) goto L_0x0353
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r5 = r5 | r6
        L_0x0353:
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
        L_0x0355:
            r5 = r5 | r6
            goto L_0x035a
        L_0x0357:
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x065b }
            goto L_0x0355
        L_0x035a:
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x065b }
            r6 = r6 & r5
            if (r6 == 0) goto L_0x0394
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r6 = r6 & r5
            if (r6 != 0) goto L_0x037a
            int[][] r6 = r1.contacts     // Catch:{ Exception -> 0x065b }
            r8 = 0
            r9 = r6[r8]     // Catch:{ Exception -> 0x065b }
            r9 = r9[r8]     // Catch:{ Exception -> 0x065b }
            int r9 = r9 + r8
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x0378
            r6 = r6[r8]     // Catch:{ Exception -> 0x065b }
            r8 = 1
            r6 = r6[r8]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r9
            goto L_0x037b
        L_0x0378:
            r6 = r9
            goto L_0x037b
        L_0x037a:
            r6 = 0
        L_0x037b:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x0395
            int[][] r8 = r1.contacts     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r12 = 0
            r10 = r10[r12]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x0395
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
            goto L_0x0395
        L_0x0394:
            r6 = 0
        L_0x0395:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 == 0) goto L_0x03ca
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x03b2
            int[][] r8 = r1.nonContacts     // Catch:{ Exception -> 0x065b }
            r9 = 0
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r10 = r10[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x03b2
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x03b2:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x03ca
            int[][] r8 = r1.nonContacts     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r12 = 0
            r10 = r10[r12]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x03ca
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x03ca:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 == 0) goto L_0x03ff
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x03e7
            int[][] r8 = r1.groups     // Catch:{ Exception -> 0x065b }
            r9 = 0
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r10 = r10[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x03e7
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x03e7:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x03ff
            int[][] r8 = r1.groups     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r12 = 0
            r10 = r10[r12]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x03ff
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x03ff:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 == 0) goto L_0x0434
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x041c
            int[][] r8 = r1.channels     // Catch:{ Exception -> 0x065b }
            r9 = 0
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r10 = r10[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x041c
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x041c:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x0434
            int[][] r8 = r1.channels     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r12 = 0
            r10 = r10[r12]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x0434
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x0434:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 == 0) goto L_0x046a
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x0451
            int[][] r8 = r1.bots     // Catch:{ Exception -> 0x065b }
            r9 = 0
            r10 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r10 = r10[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 != 0) goto L_0x0451
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            r9 = 1
            r8 = r8[r9]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
        L_0x0451:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r8 = r8 & r5
            if (r8 != 0) goto L_0x046a
            int[][] r8 = r1.bots     // Catch:{ Exception -> 0x065b }
            r10 = 1
            r9 = r8[r10]     // Catch:{ Exception -> 0x065b }
            r12 = 0
            r9 = r9[r12]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r9
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r9 = r9 & r5
            if (r9 != 0) goto L_0x046b
            r8 = r8[r10]     // Catch:{ Exception -> 0x065b }
            r8 = r8[r10]     // Catch:{ Exception -> 0x065b }
            int r6 = r6 + r8
            goto L_0x046b
        L_0x046a:
            r10 = 1
        L_0x046b:
            if (r4 == 0) goto L_0x063a
            java.util.ArrayList<java.lang.Integer> r8 = r4.alwaysShow     // Catch:{ Exception -> 0x065b }
            int r8 = r8.size()     // Catch:{ Exception -> 0x065b }
            r9 = r6
            r6 = 0
        L_0x0475:
            if (r6 >= r8) goto L_0x0553
            java.util.ArrayList<java.lang.Integer> r12 = r4.alwaysShow     // Catch:{ Exception -> 0x065b }
            java.lang.Object r12 = r12.get(r6)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r12 = (java.lang.Integer) r12     // Catch:{ Exception -> 0x065b }
            int r12 = r12.intValue()     // Catch:{ Exception -> 0x065b }
            if (r12 <= 0) goto L_0x04fe
            r13 = r9
            r9 = 0
        L_0x0487:
            r10 = 2
            if (r9 >= r10) goto L_0x04f8
            if (r9 != 0) goto L_0x048f
            r10 = r20
            goto L_0x0490
        L_0x048f:
            r10 = r11
        L_0x0490:
            java.lang.Object r10 = r10.get(r12)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$User r10 = (org.telegram.tgnet.TLRPC$User) r10     // Catch:{ Exception -> 0x065b }
            if (r10 == 0) goto L_0x04ed
            if (r9 != 0) goto L_0x04a0
            r19 = r8
            r23 = r11
            r8 = 1
            goto L_0x04b7
        L_0x04a0:
            r19 = r8
            r17 = 0
            java.lang.Integer r8 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x065b }
            java.lang.Object r8 = r2.get(r12, r8)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r8 = (java.lang.Integer) r8     // Catch:{ Exception -> 0x065b }
            int r8 = r8.intValue()     // Catch:{ Exception -> 0x065b }
            r23 = r11
            if (r8 != 0) goto L_0x04b7
            goto L_0x04f1
        L_0x04b7:
            boolean r11 = r10.bot     // Catch:{ Exception -> 0x065b }
            if (r11 == 0) goto L_0x04be
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x065b }
            goto L_0x04cc
        L_0x04be:
            boolean r11 = r10.self     // Catch:{ Exception -> 0x065b }
            if (r11 != 0) goto L_0x04ca
            boolean r11 = r10.contact     // Catch:{ Exception -> 0x065b }
            if (r11 == 0) goto L_0x04c7
            goto L_0x04ca
        L_0x04c7:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x065b }
            goto L_0x04cc
        L_0x04ca:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x065b }
        L_0x04cc:
            r11 = r11 & r5
            if (r11 != 0) goto L_0x04d1
        L_0x04cf:
            int r13 = r13 + r8
            goto L_0x04f1
        L_0x04d1:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r11 = r11 & r5
            if (r11 == 0) goto L_0x04df
            int r11 = r10.id     // Catch:{ Exception -> 0x065b }
            int r11 = r14.indexOfKey(r11)     // Catch:{ Exception -> 0x065b }
            if (r11 < 0) goto L_0x04df
            goto L_0x04cf
        L_0x04df:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r11 = r11 & r5
            if (r11 == 0) goto L_0x04f1
            int r10 = r10.id     // Catch:{ Exception -> 0x065b }
            int r10 = r15.indexOfKey(r10)     // Catch:{ Exception -> 0x065b }
            if (r10 < 0) goto L_0x04f1
            goto L_0x04cf
        L_0x04ed:
            r19 = r8
            r23 = r11
        L_0x04f1:
            int r9 = r9 + 1
            r8 = r19
            r11 = r23
            goto L_0x0487
        L_0x04f8:
            r19 = r8
            r23 = r11
            r9 = r13
            goto L_0x054a
        L_0x04fe:
            r19 = r8
            r23 = r11
            int r8 = -r12
            java.lang.Object r8 = r7.get(r8)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$Chat r8 = (org.telegram.tgnet.TLRPC$Chat) r8     // Catch:{ Exception -> 0x065b }
            if (r8 == 0) goto L_0x054a
            boolean r10 = org.telegram.messenger.ChatObject.isChannel(r8)     // Catch:{ Exception -> 0x065b }
            if (r10 == 0) goto L_0x0518
            boolean r10 = r8.megagroup     // Catch:{ Exception -> 0x065b }
            if (r10 != 0) goto L_0x0518
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x065b }
            goto L_0x051a
        L_0x0518:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x065b }
        L_0x051a:
            r10 = r10 & r5
            if (r10 != 0) goto L_0x0520
        L_0x051d:
            int r9 = r9 + 1
            goto L_0x054a
        L_0x0520:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 == 0) goto L_0x053b
            int r10 = r8.id     // Catch:{ Exception -> 0x065b }
            int r10 = -r10
            int r10 = r14.indexOfKey(r10)     // Catch:{ Exception -> 0x065b }
            if (r10 < 0) goto L_0x053b
            android.util.LongSparseArray<java.lang.Integer> r10 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x065b }
            int r11 = r8.id     // Catch:{ Exception -> 0x065b }
            int r11 = -r11
            long r11 = (long) r11     // Catch:{ Exception -> 0x065b }
            int r10 = r10.indexOfKey(r11)     // Catch:{ Exception -> 0x065b }
            if (r10 >= 0) goto L_0x053b
            goto L_0x051d
        L_0x053b:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 == 0) goto L_0x054a
            int r8 = r8.id     // Catch:{ Exception -> 0x065b }
            int r8 = -r8
            int r8 = r15.indexOfKey(r8)     // Catch:{ Exception -> 0x065b }
            if (r8 < 0) goto L_0x054a
            goto L_0x051d
        L_0x054a:
            int r6 = r6 + 1
            r8 = r19
            r11 = r23
            r10 = 1
            goto L_0x0475
        L_0x0553:
            r23 = r11
            java.util.ArrayList<java.lang.Integer> r6 = r4.neverShow     // Catch:{ Exception -> 0x065b }
            int r6 = r6.size()     // Catch:{ Exception -> 0x065b }
            r8 = 0
        L_0x055c:
            if (r8 >= r6) goto L_0x062f
            java.util.ArrayList<java.lang.Integer> r10 = r4.neverShow     // Catch:{ Exception -> 0x065b }
            java.lang.Object r10 = r10.get(r8)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ Exception -> 0x065b }
            int r10 = r10.intValue()     // Catch:{ Exception -> 0x065b }
            if (r10 <= 0) goto L_0x05e0
            r11 = r9
            r9 = 0
        L_0x056e:
            r12 = 2
            if (r9 >= r12) goto L_0x05da
            if (r9 != 0) goto L_0x0576
            r13 = r20
            goto L_0x0578
        L_0x0576:
            r13 = r23
        L_0x0578:
            java.lang.Object r13 = r13.get(r10)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$User r13 = (org.telegram.tgnet.TLRPC$User) r13     // Catch:{ Exception -> 0x065b }
            if (r13 == 0) goto L_0x05d1
            if (r9 != 0) goto L_0x0588
            r24 = r2
            r12 = 1
            r16 = 0
            goto L_0x059d
        L_0x0588:
            r16 = 0
            java.lang.Integer r12 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x065b }
            java.lang.Object r12 = r2.get(r10, r12)     // Catch:{ Exception -> 0x065b }
            java.lang.Integer r12 = (java.lang.Integer) r12     // Catch:{ Exception -> 0x065b }
            int r12 = r12.intValue()     // Catch:{ Exception -> 0x065b }
            r24 = r2
            if (r12 != 0) goto L_0x059d
            goto L_0x05d5
        L_0x059d:
            boolean r2 = r13.bot     // Catch:{ Exception -> 0x065b }
            if (r2 == 0) goto L_0x05a4
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x065b }
            goto L_0x05b2
        L_0x05a4:
            boolean r2 = r13.self     // Catch:{ Exception -> 0x065b }
            if (r2 != 0) goto L_0x05b0
            boolean r2 = r13.contact     // Catch:{ Exception -> 0x065b }
            if (r2 == 0) goto L_0x05ad
            goto L_0x05b0
        L_0x05ad:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x065b }
            goto L_0x05b2
        L_0x05b0:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x065b }
        L_0x05b2:
            r2 = r2 & r5
            if (r2 == 0) goto L_0x05d5
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r2 = r2 & r5
            if (r2 == 0) goto L_0x05c2
            int r2 = r13.id     // Catch:{ Exception -> 0x065b }
            int r2 = r15.indexOfKey(r2)     // Catch:{ Exception -> 0x065b }
            if (r2 >= 0) goto L_0x05d5
        L_0x05c2:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r2 = r2 & r5
            if (r2 == 0) goto L_0x05cf
            int r2 = r13.id     // Catch:{ Exception -> 0x065b }
            int r2 = r14.indexOfKey(r2)     // Catch:{ Exception -> 0x065b }
            if (r2 >= 0) goto L_0x05d5
        L_0x05cf:
            int r11 = r11 - r12
            goto L_0x05d5
        L_0x05d1:
            r24 = r2
            r16 = 0
        L_0x05d5:
            int r9 = r9 + 1
            r2 = r24
            goto L_0x056e
        L_0x05da:
            r24 = r2
            r16 = 0
            r9 = r11
            goto L_0x0629
        L_0x05e0:
            r24 = r2
            r16 = 0
            int r2 = -r10
            java.lang.Object r2 = r7.get(r2)     // Catch:{ Exception -> 0x065b }
            org.telegram.tgnet.TLRPC$Chat r2 = (org.telegram.tgnet.TLRPC$Chat) r2     // Catch:{ Exception -> 0x065b }
            if (r2 == 0) goto L_0x0629
            boolean r10 = org.telegram.messenger.ChatObject.isChannel(r2)     // Catch:{ Exception -> 0x065b }
            if (r10 == 0) goto L_0x05fa
            boolean r10 = r2.megagroup     // Catch:{ Exception -> 0x065b }
            if (r10 != 0) goto L_0x05fa
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x065b }
            goto L_0x05fc
        L_0x05fa:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x065b }
        L_0x05fc:
            r10 = r10 & r5
            if (r10 == 0) goto L_0x0629
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 == 0) goto L_0x060d
            int r10 = r2.id     // Catch:{ Exception -> 0x065b }
            int r10 = -r10
            int r10 = r15.indexOfKey(r10)     // Catch:{ Exception -> 0x065b }
            if (r10 >= 0) goto L_0x0629
        L_0x060d:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x065b }
            r10 = r10 & r5
            if (r10 == 0) goto L_0x0627
            int r10 = r2.id     // Catch:{ Exception -> 0x065b }
            int r10 = -r10
            int r10 = r14.indexOfKey(r10)     // Catch:{ Exception -> 0x065b }
            if (r10 < 0) goto L_0x0627
            android.util.LongSparseArray<java.lang.Integer> r10 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x065b }
            int r2 = r2.id     // Catch:{ Exception -> 0x065b }
            int r2 = -r2
            long r11 = (long) r2     // Catch:{ Exception -> 0x065b }
            int r2 = r10.indexOfKey(r11)     // Catch:{ Exception -> 0x065b }
            if (r2 < 0) goto L_0x0629
        L_0x0627:
            int r9 = r9 + -1
        L_0x0629:
            int r8 = r8 + 1
            r2 = r24
            goto L_0x055c
        L_0x062f:
            r24 = r2
            r16 = 0
            r4.pendingUnreadCount = r9     // Catch:{ Exception -> 0x065b }
            if (r26 == 0) goto L_0x0653
            r4.unreadCount = r9     // Catch:{ Exception -> 0x065b }
            goto L_0x0653
        L_0x063a:
            r24 = r2
            r23 = r11
            r16 = 0
            if (r3 != r0) goto L_0x0649
            r1.pendingMainUnreadCount = r6     // Catch:{ Exception -> 0x065b }
            if (r26 == 0) goto L_0x0653
            r1.mainUnreadCount = r6     // Catch:{ Exception -> 0x065b }
            goto L_0x0653
        L_0x0649:
            int r2 = r0 + 1
            if (r3 != r2) goto L_0x0653
            r1.pendingArchiveUnreadCount = r6     // Catch:{ Exception -> 0x065b }
            if (r26 == 0) goto L_0x0653
            r1.archiveUnreadCount = r6     // Catch:{ Exception -> 0x065b }
        L_0x0653:
            int r3 = r3 + 1
            r11 = r23
            r2 = r24
            goto L_0x0326
        L_0x065b:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x065f:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.calcUnreadCounters(boolean):void");
    }

    private void saveDialogFilterInternal(MessagesController.DialogFilter dialogFilter, boolean z, boolean z2) {
        try {
            if (!this.dialogFilters.contains(dialogFilter)) {
                if (z) {
                    this.dialogFilters.add(0, dialogFilter);
                } else {
                    this.dialogFilters.add(dialogFilter);
                }
                this.dialogFiltersMap.put(dialogFilter.id, dialogFilter);
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO dialog_filter VALUES(?, ?, ?, ?, ?)");
            executeFast.bindInteger(1, dialogFilter.id);
            executeFast.bindInteger(2, dialogFilter.order);
            executeFast.bindInteger(3, dialogFilter.unreadCount);
            executeFast.bindInteger(4, dialogFilter.flags);
            executeFast.bindString(5, dialogFilter.name);
            executeFast.step();
            executeFast.dispose();
            if (z2) {
                SQLiteDatabase sQLiteDatabase = this.database;
                sQLiteDatabase.executeFast("DELETE FROM dialog_filter_ep WHERE id = " + dialogFilter.id).stepThis().dispose();
                SQLiteDatabase sQLiteDatabase2 = this.database;
                sQLiteDatabase2.executeFast("DELETE FROM dialog_filter_pin_v2 WHERE id = " + dialogFilter.id).stepThis().dispose();
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO dialog_filter_pin_v2 VALUES(?, ?, ?)");
                int size = dialogFilter.alwaysShow.size();
                for (int i = 0; i < size; i++) {
                    long intValue = (long) dialogFilter.alwaysShow.get(i).intValue();
                    executeFast2.requery();
                    executeFast2.bindInteger(1, dialogFilter.id);
                    executeFast2.bindLong(2, intValue);
                    executeFast2.bindInteger(3, dialogFilter.pinnedDialogs.get(intValue, Integer.MIN_VALUE).intValue());
                    executeFast2.step();
                }
                int size2 = dialogFilter.pinnedDialogs.size();
                for (int i2 = 0; i2 < size2; i2++) {
                    long keyAt = dialogFilter.pinnedDialogs.keyAt(i2);
                    if (((int) keyAt) == 0) {
                        executeFast2.requery();
                        executeFast2.bindInteger(1, dialogFilter.id);
                        executeFast2.bindLong(2, keyAt);
                        executeFast2.bindInteger(3, dialogFilter.pinnedDialogs.valueAt(i2).intValue());
                        executeFast2.step();
                    }
                }
                executeFast2.dispose();
                SQLitePreparedStatement executeFast3 = this.database.executeFast("REPLACE INTO dialog_filter_ep VALUES(?, ?)");
                int size3 = dialogFilter.neverShow.size();
                for (int i3 = 0; i3 < size3; i3++) {
                    executeFast3.requery();
                    executeFast3.bindInteger(1, dialogFilter.id);
                    executeFast3.bindLong(2, (long) dialogFilter.neverShow.get(i3).intValue());
                    executeFast3.step();
                }
                executeFast3.dispose();
                this.database.commitTransaction();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void checkLoadedRemoteFilters(TLRPC$Vector tLRPC$Vector) {
        this.storageQueue.postRunnable(new Runnable(tLRPC$Vector) {
            public final /* synthetic */ TLRPC$Vector f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkLoadedRemoteFilters$34$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:172:0x0366 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x0375 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:176:0x037d A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:177:0x0389 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:179:0x038f A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:180:0x0395 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:182:0x0399 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:183:0x03a5 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x0197 A[Catch:{ Exception -> 0x05bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:99:0x01b8 A[Catch:{ Exception -> 0x05bf }] */
    /* renamed from: lambda$checkLoadedRemoteFilters$34 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkLoadedRemoteFilters$34$MessagesStorage(org.telegram.tgnet.TLRPC$Vector r38) {
        /*
            r37 = this;
            r12 = r37
            r0 = r38
            android.util.SparseArray r7 = new android.util.SparseArray     // Catch:{ Exception -> 0x05c3 }
            r7.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r1 = r12.dialogFilters     // Catch:{ Exception -> 0x05c3 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
        L_0x0010:
            if (r3 >= r1) goto L_0x0022
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r4 = r12.dialogFilters     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object r4 = r4.get(r3)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.messenger.MessagesController$DialogFilter r4 = (org.telegram.messenger.MessagesController.DialogFilter) r4     // Catch:{ Exception -> 0x05c3 }
            int r5 = r4.id     // Catch:{ Exception -> 0x05c3 }
            r7.put(r5, r4)     // Catch:{ Exception -> 0x05c3 }
            int r3 = r3 + 1
            goto L_0x0010
        L_0x0022:
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r8.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r1.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.HashMap r15 = new java.util.HashMap     // Catch:{ Exception -> 0x05c3 }
            r15.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r3.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.HashMap r4 = new java.util.HashMap     // Catch:{ Exception -> 0x05c3 }
            r4.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r5.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.HashMap r14 = new java.util.HashMap     // Catch:{ Exception -> 0x05c3 }
            r14.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r6.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.HashMap r10 = new java.util.HashMap     // Catch:{ Exception -> 0x05c3 }
            r10.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.HashMap r9 = new java.util.HashMap     // Catch:{ Exception -> 0x05c3 }
            r9.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.HashSet r11 = new java.util.HashSet     // Catch:{ Exception -> 0x05c3 }
            r11.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList<java.lang.Object> r13 = r0.objects     // Catch:{ Exception -> 0x05c3 }
            int r13 = r13.size()     // Catch:{ Exception -> 0x05c3 }
            r2 = 0
        L_0x0060:
            if (r2 >= r13) goto L_0x04db
            r17 = r13
            java.util.ArrayList<java.lang.Object> r13 = r0.objects     // Catch:{ Exception -> 0x05bf }
            java.lang.Object r13 = r13.get(r2)     // Catch:{ Exception -> 0x05bf }
            org.telegram.tgnet.TLRPC$TL_dialogFilter r13 = (org.telegram.tgnet.TLRPC$TL_dialogFilter) r13     // Catch:{ Exception -> 0x05bf }
            int r0 = r13.id     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x05bf }
            r8.add(r0)     // Catch:{ Exception -> 0x05bf }
            boolean r0 = r13.contacts     // Catch:{ Exception -> 0x05bf }
            if (r0 == 0) goto L_0x0082
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x05c3 }
            r16 = 0
            r0 = r0 | 0
            r23 = r8
            goto L_0x0087
        L_0x0082:
            r16 = 0
            r23 = r8
            r0 = 0
        L_0x0087:
            boolean r8 = r13.non_contacts     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x008e
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x008e:
            boolean r8 = r13.groups     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x0095
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x0095:
            boolean r8 = r13.broadcasts     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x009c
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x009c:
            boolean r8 = r13.bots     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x00a3
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x00a3:
            boolean r8 = r13.exclude_muted     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x00aa
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x00aa:
            boolean r8 = r13.exclude_read     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x00b1
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_READ     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x00b1:
            boolean r8 = r13.exclude_archived     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x00b8
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x05c3 }
            r0 = r0 | r8
        L_0x00b8:
            android.util.SparseArray<org.telegram.messenger.MessagesController$DialogFilter> r8 = r12.dialogFiltersMap     // Catch:{ Exception -> 0x05bf }
            int r12 = r13.id     // Catch:{ Exception -> 0x05bf }
            java.lang.Object r8 = r8.get(r12)     // Catch:{ Exception -> 0x05bf }
            org.telegram.messenger.MessagesController$DialogFilter r8 = (org.telegram.messenger.MessagesController.DialogFilter) r8     // Catch:{ Exception -> 0x05bf }
            r18 = 1
            if (r8 == 0) goto L_0x03b0
            int r12 = r13.id     // Catch:{ Exception -> 0x05bf }
            r7.remove(r12)     // Catch:{ Exception -> 0x05bf }
            java.lang.String r12 = r8.name     // Catch:{ Exception -> 0x05bf }
            r22 = r7
            java.lang.String r7 = r13.title     // Catch:{ Exception -> 0x05bf }
            boolean r7 = android.text.TextUtils.equals(r12, r7)     // Catch:{ Exception -> 0x05bf }
            if (r7 != 0) goto L_0x00dd
            java.lang.String r7 = r13.title     // Catch:{ Exception -> 0x05bf }
            r8.name = r7     // Catch:{ Exception -> 0x05bf }
            r7 = 1
            goto L_0x00de
        L_0x00dd:
            r7 = 0
        L_0x00de:
            int r12 = r8.flags     // Catch:{ Exception -> 0x05bf }
            if (r12 == r0) goto L_0x00e7
            r8.flags = r0     // Catch:{ Exception -> 0x05bf }
            r0 = 1
            r7 = 1
            goto L_0x00e8
        L_0x00e7:
            r0 = 0
        L_0x00e8:
            java.util.HashSet r12 = new java.util.HashSet     // Catch:{ Exception -> 0x05bf }
            r20 = r0
            java.util.ArrayList<java.lang.Integer> r0 = r8.alwaysShow     // Catch:{ Exception -> 0x05bf }
            r12.<init>(r0)     // Catch:{ Exception -> 0x05bf }
            java.util.ArrayList<java.lang.Integer> r0 = r8.neverShow     // Catch:{ Exception -> 0x05bf }
            r12.addAll(r0)     // Catch:{ Exception -> 0x05bf }
            java.util.HashSet r0 = new java.util.HashSet     // Catch:{ Exception -> 0x05bf }
            r0.<init>()     // Catch:{ Exception -> 0x05bf }
            r21 = 0
            r24 = r7
            android.util.LongSparseArray<java.lang.Integer> r7 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r7 = r7.size()     // Catch:{ Exception -> 0x05bf }
            if (r7 == 0) goto L_0x0182
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x05bf }
            r7.<init>()     // Catch:{ Exception -> 0x05bf }
            r25 = r2
            android.util.LongSparseArray<java.lang.Integer> r2 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r2 = r2.size()     // Catch:{ Exception -> 0x05bf }
            r26 = r11
            r11 = 0
            r27 = 0
        L_0x0119:
            if (r11 >= r2) goto L_0x013c
            r28 = r2
            android.util.LongSparseArray<java.lang.Integer> r2 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            r30 = r9
            r29 = r10
            long r9 = r2.keyAt(r11)     // Catch:{ Exception -> 0x05bf }
            int r2 = (int) r9     // Catch:{ Exception -> 0x05bf }
            if (r2 != 0) goto L_0x012c
            r27 = 1
        L_0x012c:
            java.lang.Long r2 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x05bf }
            r7.add(r2)     // Catch:{ Exception -> 0x05bf }
            int r11 = r11 + 1
            r2 = r28
            r10 = r29
            r9 = r30
            goto L_0x0119
        L_0x013c:
            r30 = r9
            r29 = r10
            if (r27 == 0) goto L_0x017f
            java.util.LinkedHashMap r2 = new java.util.LinkedHashMap     // Catch:{ Exception -> 0x05bf }
            r2.<init>()     // Catch:{ Exception -> 0x05bf }
            android.util.LongSparseArray<java.lang.Integer> r9 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            org.telegram.messenger.-$$Lambda$MessagesStorage$6rn4gVgC7Dsqzp2fDY65HA7KwD0 r10 = new org.telegram.messenger.-$$Lambda$MessagesStorage$6rn4gVgC7Dsqzp2fDY65HA7KwD0     // Catch:{ Exception -> 0x05bf }
            r10.<init>(r9)     // Catch:{ Exception -> 0x05bf }
            java.util.Collections.sort(r7, r10)     // Catch:{ Exception -> 0x05bf }
            int r9 = r7.size()     // Catch:{ Exception -> 0x05bf }
            r10 = 0
        L_0x0156:
            if (r10 >= r9) goto L_0x017c
            java.lang.Object r11 = r7.get(r10)     // Catch:{ Exception -> 0x05bf }
            java.lang.Long r11 = (java.lang.Long) r11     // Catch:{ Exception -> 0x05bf }
            r27 = r6
            r28 = r7
            long r6 = r11.longValue()     // Catch:{ Exception -> 0x05bf }
            int r11 = (int) r6     // Catch:{ Exception -> 0x05bf }
            if (r11 == 0) goto L_0x016a
            goto L_0x0175
        L_0x016a:
            java.lang.Integer r11 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x05bf }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x05bf }
            r2.put(r11, r6)     // Catch:{ Exception -> 0x05bf }
        L_0x0175:
            int r10 = r10 + 1
            r6 = r27
            r7 = r28
            goto L_0x0156
        L_0x017c:
            r27 = r6
            goto L_0x018e
        L_0x017f:
            r27 = r6
            goto L_0x018c
        L_0x0182:
            r25 = r2
            r27 = r6
            r30 = r9
            r29 = r10
            r26 = r11
        L_0x018c:
            r2 = r21
        L_0x018e:
            android.util.LongSparseArray<java.lang.Integer> r6 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r6 = r6.size()     // Catch:{ Exception -> 0x05bf }
            r7 = 0
        L_0x0195:
            if (r7 >= r6) goto L_0x01b2
            android.util.LongSparseArray<java.lang.Integer> r9 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            long r9 = r9.keyAt(r7)     // Catch:{ Exception -> 0x05bf }
            int r10 = (int) r9     // Catch:{ Exception -> 0x05bf }
            if (r10 != 0) goto L_0x01a1
            goto L_0x01af
        L_0x01a1:
            java.lang.Integer r9 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x05bf }
            r0.add(r9)     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x05bf }
            r12.remove(r9)     // Catch:{ Exception -> 0x05bf }
        L_0x01af:
            int r7 = r7 + 1
            goto L_0x0195
        L_0x01b2:
            r7 = r24
            r6 = 0
            r9 = 2
        L_0x01b6:
            if (r6 >= r9) goto L_0x035e
            if (r6 != 0) goto L_0x01bd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r9 = r13.include_peers     // Catch:{ Exception -> 0x05bf }
            goto L_0x01bf
        L_0x01bd:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r9 = r13.exclude_peers     // Catch:{ Exception -> 0x05bf }
        L_0x01bf:
            if (r6 != 0) goto L_0x01c4
            java.util.ArrayList<java.lang.Integer> r10 = r8.alwaysShow     // Catch:{ Exception -> 0x05bf }
            goto L_0x01c6
        L_0x01c4:
            java.util.ArrayList<java.lang.Integer> r10 = r8.neverShow     // Catch:{ Exception -> 0x05bf }
        L_0x01c6:
            if (r6 != 0) goto L_0x02b7
            android.util.LongSparseArray<java.lang.Integer> r11 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            r11.clear()     // Catch:{ Exception -> 0x05bf }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r11 = r13.pinned_peers     // Catch:{ Exception -> 0x05bf }
            int r11 = r11.size()     // Catch:{ Exception -> 0x05bf }
            r21 = r7
            r7 = 0
        L_0x01d6:
            if (r7 >= r11) goto L_0x0278
            r24 = r11
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r11 = r13.pinned_peers     // Catch:{ Exception -> 0x05bf }
            java.lang.Object r11 = r11.get(r7)     // Catch:{ Exception -> 0x05bf }
            org.telegram.tgnet.TLRPC$InputPeer r11 = (org.telegram.tgnet.TLRPC$InputPeer) r11     // Catch:{ Exception -> 0x05bf }
            r28 = r13
            int r13 = r11.user_id     // Catch:{ Exception -> 0x05bf }
            if (r13 == 0) goto L_0x01ef
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x05bf }
        L_0x01ec:
            r31 = r6
            goto L_0x01fc
        L_0x01ef:
            int r13 = r11.chat_id     // Catch:{ Exception -> 0x05bf }
            if (r13 == 0) goto L_0x01f4
            goto L_0x01f6
        L_0x01f4:
            int r13 = r11.channel_id     // Catch:{ Exception -> 0x05bf }
        L_0x01f6:
            int r13 = -r13
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x05bf }
            goto L_0x01ec
        L_0x01fc:
            java.util.ArrayList<java.lang.Integer> r6 = r8.alwaysShow     // Catch:{ Exception -> 0x05bf }
            boolean r6 = r6.contains(r13)     // Catch:{ Exception -> 0x05bf }
            if (r6 != 0) goto L_0x0209
            java.util.ArrayList<java.lang.Integer> r6 = r8.alwaysShow     // Catch:{ Exception -> 0x05bf }
            r6.add(r13)     // Catch:{ Exception -> 0x05bf }
        L_0x0209:
            android.util.LongSparseArray<java.lang.Integer> r6 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r6 = r6.size()     // Catch:{ Exception -> 0x05bf }
            r32 = r3
            if (r2 == 0) goto L_0x023b
        L_0x0213:
            java.lang.Integer r3 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x05bf }
            java.lang.Object r3 = r2.remove(r3)     // Catch:{ Exception -> 0x05bf }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ Exception -> 0x05bf }
            if (r3 == 0) goto L_0x023b
            r33 = r4
            android.util.LongSparseArray<java.lang.Integer> r4 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            r34 = r9
            r35 = r10
            long r9 = r3.longValue()     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x05bf }
            r4.put(r9, r3)     // Catch:{ Exception -> 0x05bf }
            int r6 = r6 + 1
            r4 = r33
            r9 = r34
            r10 = r35
            goto L_0x0213
        L_0x023b:
            r33 = r4
            r34 = r9
            r35 = r10
            android.util.LongSparseArray<java.lang.Integer> r3 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r4 = r13.intValue()     // Catch:{ Exception -> 0x05bf }
            long r9 = (long) r4     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x05bf }
            r3.put(r9, r4)     // Catch:{ Exception -> 0x05bf }
            r12.remove(r13)     // Catch:{ Exception -> 0x05bf }
            boolean r3 = r0.remove(r13)     // Catch:{ Exception -> 0x05bf }
            if (r3 != 0) goto L_0x0266
            boolean r3 = r14.containsKey(r13)     // Catch:{ Exception -> 0x05bf }
            if (r3 != 0) goto L_0x0264
            r5.add(r13)     // Catch:{ Exception -> 0x05bf }
            r14.put(r13, r11)     // Catch:{ Exception -> 0x05bf }
        L_0x0264:
            r21 = 1
        L_0x0266:
            int r7 = r7 + 1
            r11 = r24
            r13 = r28
            r6 = r31
            r3 = r32
            r4 = r33
            r9 = r34
            r10 = r35
            goto L_0x01d6
        L_0x0278:
            r32 = r3
            r33 = r4
            r31 = r6
            r34 = r9
            r35 = r10
            r28 = r13
            if (r2 == 0) goto L_0x02b4
            java.util.Set r3 = r2.entrySet()     // Catch:{ Exception -> 0x05bf }
            java.util.Iterator r3 = r3.iterator()     // Catch:{ Exception -> 0x05bf }
        L_0x028e:
            boolean r4 = r3.hasNext()     // Catch:{ Exception -> 0x05bf }
            if (r4 == 0) goto L_0x02b4
            java.lang.Object r4 = r3.next()     // Catch:{ Exception -> 0x05bf }
            java.util.Map$Entry r4 = (java.util.Map.Entry) r4     // Catch:{ Exception -> 0x05bf }
            android.util.LongSparseArray<java.lang.Integer> r6 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            java.lang.Object r4 = r4.getValue()     // Catch:{ Exception -> 0x05bf }
            java.lang.Long r4 = (java.lang.Long) r4     // Catch:{ Exception -> 0x05bf }
            long r9 = r4.longValue()     // Catch:{ Exception -> 0x05bf }
            android.util.LongSparseArray<java.lang.Integer> r4 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r4 = r4.size()     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x05bf }
            r6.put(r9, r4)     // Catch:{ Exception -> 0x05bf }
            goto L_0x028e
        L_0x02b4:
            r7 = r21
            goto L_0x02c3
        L_0x02b7:
            r32 = r3
            r33 = r4
            r31 = r6
            r34 = r9
            r35 = r10
            r28 = r13
        L_0x02c3:
            int r3 = r34.size()     // Catch:{ Exception -> 0x05bf }
            r4 = 0
        L_0x02c8:
            if (r4 >= r3) goto L_0x034d
            r9 = r34
            java.lang.Object r6 = r9.get(r4)     // Catch:{ Exception -> 0x05bf }
            org.telegram.tgnet.TLRPC$InputPeer r6 = (org.telegram.tgnet.TLRPC$InputPeer) r6     // Catch:{ Exception -> 0x05bf }
            int r10 = r6.user_id     // Catch:{ Exception -> 0x05bf }
            if (r10 == 0) goto L_0x0304
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x05bf }
            boolean r11 = r12.remove(r10)     // Catch:{ Exception -> 0x05bf }
            if (r11 != 0) goto L_0x02fd
            r11 = r35
            boolean r7 = r11.contains(r10)     // Catch:{ Exception -> 0x05bf }
            if (r7 != 0) goto L_0x02eb
            r11.add(r10)     // Catch:{ Exception -> 0x05bf }
        L_0x02eb:
            boolean r7 = r15.containsKey(r10)     // Catch:{ Exception -> 0x05bf }
            if (r7 != 0) goto L_0x02fb
            r1.add(r10)     // Catch:{ Exception -> 0x05bf }
            r15.put(r10, r6)     // Catch:{ Exception -> 0x05bf }
            r7 = 1
            r20 = 1
            goto L_0x02ff
        L_0x02fb:
            r7 = 1
            goto L_0x02ff
        L_0x02fd:
            r11 = r35
        L_0x02ff:
            r6 = r32
            r13 = r33
            goto L_0x0341
        L_0x0304:
            r11 = r35
            int r10 = r6.chat_id     // Catch:{ Exception -> 0x05bf }
            if (r10 == 0) goto L_0x030b
            goto L_0x030d
        L_0x030b:
            int r10 = r6.channel_id     // Catch:{ Exception -> 0x05bf }
        L_0x030d:
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x05bf }
            int r13 = r10.intValue()     // Catch:{ Exception -> 0x05bf }
            int r13 = -r13
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x05bf }
            boolean r21 = r12.remove(r13)     // Catch:{ Exception -> 0x05bf }
            if (r21 != 0) goto L_0x02ff
            boolean r7 = r11.contains(r13)     // Catch:{ Exception -> 0x05bf }
            if (r7 != 0) goto L_0x0329
            r11.add(r13)     // Catch:{ Exception -> 0x05bf }
        L_0x0329:
            r13 = r33
            boolean r7 = r13.containsKey(r10)     // Catch:{ Exception -> 0x05bf }
            if (r7 != 0) goto L_0x033e
            r7 = r32
            r7.add(r10)     // Catch:{ Exception -> 0x05bf }
            r13.put(r10, r6)     // Catch:{ Exception -> 0x05bf }
            r6 = r7
            r7 = 1
            r20 = 1
            goto L_0x0341
        L_0x033e:
            r6 = r32
            r7 = 1
        L_0x0341:
            int r4 = r4 + 1
            r32 = r6
            r34 = r9
            r35 = r11
            r33 = r13
            goto L_0x02c8
        L_0x034d:
            r6 = r32
            r13 = r33
            int r3 = r31 + 1
            r4 = r13
            r13 = r28
            r9 = 2
            r36 = r6
            r6 = r3
            r3 = r36
            goto L_0x01b6
        L_0x035e:
            r6 = r3
            r13 = r4
            boolean r2 = r12.isEmpty()     // Catch:{ Exception -> 0x05bf }
            if (r2 != 0) goto L_0x0375
            int r2 = r8.id     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x05bf }
            r10 = r29
            r10.put(r2, r12)     // Catch:{ Exception -> 0x05bf }
            r7 = 1
            r20 = 1
            goto L_0x0377
        L_0x0375:
            r10 = r29
        L_0x0377:
            boolean r2 = r0.isEmpty()     // Catch:{ Exception -> 0x05bf }
            if (r2 != 0) goto L_0x0389
            int r2 = r8.id     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x05bf }
            r9 = r30
            r9.put(r2, r0)     // Catch:{ Exception -> 0x05bf }
            goto L_0x038d
        L_0x0389:
            r9 = r30
            r18 = r7
        L_0x038d:
            if (r18 == 0) goto L_0x0395
            r7 = r27
            r7.add(r8)     // Catch:{ Exception -> 0x05bf }
            goto L_0x0397
        L_0x0395:
            r7 = r27
        L_0x0397:
            if (r20 == 0) goto L_0x03a5
            int r0 = r8.id     // Catch:{ Exception -> 0x05bf }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x05bf }
            r11 = r26
            r11.add(r0)     // Catch:{ Exception -> 0x05bf }
            goto L_0x03a7
        L_0x03a5:
            r11 = r26
        L_0x03a7:
            r0 = r7
            r30 = r9
            r29 = r10
            r26 = r11
            goto L_0x04c4
        L_0x03b0:
            r25 = r2
            r22 = r7
            r28 = r13
            r13 = r4
            r7 = r6
            r6 = r3
            org.telegram.messenger.MessagesController$DialogFilter r2 = new org.telegram.messenger.MessagesController$DialogFilter     // Catch:{ Exception -> 0x05bf }
            r2.<init>()     // Catch:{ Exception -> 0x05bf }
            r3 = r28
            int r4 = r3.id     // Catch:{ Exception -> 0x05bf }
            r2.id = r4     // Catch:{ Exception -> 0x05bf }
            r2.flags = r0     // Catch:{ Exception -> 0x05bf }
            java.lang.String r0 = r3.title     // Catch:{ Exception -> 0x05bf }
            r2.name = r0     // Catch:{ Exception -> 0x05bf }
            r0 = -1
            r2.pendingUnreadCount = r0     // Catch:{ Exception -> 0x05bf }
            r0 = 0
        L_0x03ce:
            r4 = 2
            if (r0 >= r4) goto L_0x04ba
            if (r0 != 0) goto L_0x0441
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r8 = r3.pinned_peers     // Catch:{ Exception -> 0x05bf }
            int r8 = r8.size()     // Catch:{ Exception -> 0x05bf }
            r12 = 0
        L_0x03da:
            if (r12 >= r8) goto L_0x0441
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r4 = r3.pinned_peers     // Catch:{ Exception -> 0x05bf }
            java.lang.Object r4 = r4.get(r12)     // Catch:{ Exception -> 0x05bf }
            org.telegram.tgnet.TLRPC$InputPeer r4 = (org.telegram.tgnet.TLRPC$InputPeer) r4     // Catch:{ Exception -> 0x05bf }
            r20 = r8
            int r8 = r4.user_id     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x03f1
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x05bf }
        L_0x03ee:
            r26 = r11
            goto L_0x03fe
        L_0x03f1:
            int r8 = r4.chat_id     // Catch:{ Exception -> 0x05bf }
            if (r8 == 0) goto L_0x03f6
            goto L_0x03f8
        L_0x03f6:
            int r8 = r4.channel_id     // Catch:{ Exception -> 0x05bf }
        L_0x03f8:
            int r8 = -r8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x05bf }
            goto L_0x03ee
        L_0x03fe:
            java.util.ArrayList<java.lang.Integer> r11 = r2.alwaysShow     // Catch:{ Exception -> 0x05bf }
            boolean r11 = r11.contains(r8)     // Catch:{ Exception -> 0x05bf }
            if (r11 != 0) goto L_0x040b
            java.util.ArrayList<java.lang.Integer> r11 = r2.alwaysShow     // Catch:{ Exception -> 0x05bf }
            r11.add(r8)     // Catch:{ Exception -> 0x05bf }
        L_0x040b:
            android.util.LongSparseArray<java.lang.Integer> r11 = r2.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            r29 = r10
            int r10 = r8.intValue()     // Catch:{ Exception -> 0x05bf }
            r30 = r9
            long r9 = (long) r10     // Catch:{ Exception -> 0x05bf }
            r27 = r7
            android.util.LongSparseArray<java.lang.Integer> r7 = r2.pinnedDialogs     // Catch:{ Exception -> 0x05bf }
            int r7 = r7.size()     // Catch:{ Exception -> 0x05bf }
            int r7 = r7 + 1
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x05bf }
            r11.put(r9, r7)     // Catch:{ Exception -> 0x05bf }
            boolean r7 = r14.containsKey(r8)     // Catch:{ Exception -> 0x05bf }
            if (r7 != 0) goto L_0x0433
            r5.add(r8)     // Catch:{ Exception -> 0x05bf }
            r14.put(r8, r4)     // Catch:{ Exception -> 0x05bf }
        L_0x0433:
            int r12 = r12 + 1
            r8 = r20
            r11 = r26
            r7 = r27
            r10 = r29
            r9 = r30
            r4 = 2
            goto L_0x03da
        L_0x0441:
            r27 = r7
            r30 = r9
            r29 = r10
            r26 = r11
            if (r0 != 0) goto L_0x044e
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r4 = r3.include_peers     // Catch:{ Exception -> 0x05bf }
            goto L_0x0450
        L_0x044e:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r4 = r3.exclude_peers     // Catch:{ Exception -> 0x05bf }
        L_0x0450:
            if (r0 != 0) goto L_0x0455
            java.util.ArrayList<java.lang.Integer> r7 = r2.alwaysShow     // Catch:{ Exception -> 0x05bf }
            goto L_0x0457
        L_0x0455:
            java.util.ArrayList<java.lang.Integer> r7 = r2.neverShow     // Catch:{ Exception -> 0x05bf }
        L_0x0457:
            int r8 = r4.size()     // Catch:{ Exception -> 0x05bf }
            r9 = 0
        L_0x045c:
            if (r9 >= r8) goto L_0x04ae
            java.lang.Object r10 = r4.get(r9)     // Catch:{ Exception -> 0x05bf }
            org.telegram.tgnet.TLRPC$InputPeer r10 = (org.telegram.tgnet.TLRPC$InputPeer) r10     // Catch:{ Exception -> 0x05bf }
            int r11 = r10.user_id     // Catch:{ Exception -> 0x05bf }
            if (r11 == 0) goto L_0x0482
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x05bf }
            boolean r12 = r7.contains(r11)     // Catch:{ Exception -> 0x05bf }
            if (r12 != 0) goto L_0x0475
            r7.add(r11)     // Catch:{ Exception -> 0x05bf }
        L_0x0475:
            boolean r12 = r15.containsKey(r11)     // Catch:{ Exception -> 0x05bf }
            if (r12 != 0) goto L_0x04ab
            r1.add(r11)     // Catch:{ Exception -> 0x05bf }
            r15.put(r11, r10)     // Catch:{ Exception -> 0x05bf }
            goto L_0x04ab
        L_0x0482:
            int r11 = r10.chat_id     // Catch:{ Exception -> 0x05bf }
            if (r11 == 0) goto L_0x0487
            goto L_0x0489
        L_0x0487:
            int r11 = r10.channel_id     // Catch:{ Exception -> 0x05bf }
        L_0x0489:
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x05bf }
            int r12 = r11.intValue()     // Catch:{ Exception -> 0x05bf }
            int r12 = -r12
            java.lang.Integer r12 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x05bf }
            boolean r20 = r7.contains(r12)     // Catch:{ Exception -> 0x05bf }
            if (r20 != 0) goto L_0x049f
            r7.add(r12)     // Catch:{ Exception -> 0x05bf }
        L_0x049f:
            boolean r12 = r13.containsKey(r11)     // Catch:{ Exception -> 0x05bf }
            if (r12 != 0) goto L_0x04ab
            r6.add(r11)     // Catch:{ Exception -> 0x05bf }
            r13.put(r11, r10)     // Catch:{ Exception -> 0x05bf }
        L_0x04ab:
            int r9 = r9 + 1
            goto L_0x045c
        L_0x04ae:
            int r0 = r0 + 1
            r11 = r26
            r7 = r27
            r10 = r29
            r9 = r30
            goto L_0x03ce
        L_0x04ba:
            r0 = r7
            r30 = r9
            r29 = r10
            r26 = r11
            r0.add(r2)     // Catch:{ Exception -> 0x05bf }
        L_0x04c4:
            int r2 = r25 + 1
            r12 = r37
            r3 = r6
            r4 = r13
            r13 = r17
            r7 = r22
            r8 = r23
            r11 = r26
            r10 = r29
            r9 = r30
            r6 = r0
            r0 = r38
            goto L_0x0060
        L_0x04db:
            r13 = r4
            r0 = r6
            r22 = r7
            r23 = r8
            r30 = r9
            r29 = r10
            r26 = r11
            r16 = 0
            r6 = r3
            boolean r2 = r5.isEmpty()     // Catch:{ Exception -> 0x05bf }
            java.lang.String r3 = ","
            if (r2 != 0) goto L_0x051f
            java.lang.String r2 = android.text.TextUtils.join(r3, r5)     // Catch:{ Exception -> 0x05bf }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x05bf }
            r4.<init>()     // Catch:{ Exception -> 0x05bf }
            r12 = r37
            org.telegram.tgnet.TLRPC$messages_Dialogs r2 = r12.loadDialogsByIds(r2, r1, r6, r4)     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r4 = r2.dialogs     // Catch:{ Exception -> 0x05c3 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x05c3 }
            r5 = 0
        L_0x0508:
            if (r5 >= r4) goto L_0x0526
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r7 = r2.dialogs     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object r7 = r7.get(r5)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.tgnet.TLRPC$Dialog r7 = (org.telegram.tgnet.TLRPC$Dialog) r7     // Catch:{ Exception -> 0x05c3 }
            long r7 = r7.id     // Catch:{ Exception -> 0x05c3 }
            int r8 = (int) r7     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x05c3 }
            r14.remove(r7)     // Catch:{ Exception -> 0x05c3 }
            int r5 = r5 + 1
            goto L_0x0508
        L_0x051f:
            r12 = r37
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r2 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x05c3 }
            r2.<init>()     // Catch:{ Exception -> 0x05c3 }
        L_0x0526:
            r17 = r2
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r4.<init>()     // Catch:{ Exception -> 0x05c3 }
            boolean r2 = r1.isEmpty()     // Catch:{ Exception -> 0x05c3 }
            if (r2 != 0) goto L_0x0553
            java.lang.String r1 = android.text.TextUtils.join(r3, r1)     // Catch:{ Exception -> 0x05c3 }
            r12.getUsersInternal(r1, r4)     // Catch:{ Exception -> 0x05c3 }
            int r1 = r4.size()     // Catch:{ Exception -> 0x05c3 }
            r2 = 0
        L_0x053f:
            if (r2 >= r1) goto L_0x0553
            java.lang.Object r5 = r4.get(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.tgnet.TLRPC$User r5 = (org.telegram.tgnet.TLRPC$User) r5     // Catch:{ Exception -> 0x05c3 }
            int r5 = r5.id     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x05c3 }
            r15.remove(r5)     // Catch:{ Exception -> 0x05c3 }
            int r2 = r2 + 1
            goto L_0x053f
        L_0x0553:
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r5.<init>()     // Catch:{ Exception -> 0x05c3 }
            boolean r1 = r6.isEmpty()     // Catch:{ Exception -> 0x05c3 }
            if (r1 != 0) goto L_0x057e
            java.lang.String r1 = android.text.TextUtils.join(r3, r6)     // Catch:{ Exception -> 0x05c3 }
            r12.getChatsInternal(r1, r5)     // Catch:{ Exception -> 0x05c3 }
            int r1 = r5.size()     // Catch:{ Exception -> 0x05c3 }
            r2 = 0
        L_0x056a:
            if (r2 >= r1) goto L_0x057e
            java.lang.Object r3 = r5.get(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3     // Catch:{ Exception -> 0x05c3 }
            int r3 = r3.id     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
            r13.remove(r3)     // Catch:{ Exception -> 0x05c3 }
            int r2 = r2 + 1
            goto L_0x056a
        L_0x057e:
            boolean r1 = r15.isEmpty()     // Catch:{ Exception -> 0x05c3 }
            if (r1 == 0) goto L_0x05a4
            boolean r1 = r13.isEmpty()     // Catch:{ Exception -> 0x05c3 }
            if (r1 == 0) goto L_0x05a4
            boolean r1 = r14.isEmpty()     // Catch:{ Exception -> 0x05c3 }
            if (r1 == 0) goto L_0x05a4
            r3 = 0
            r1 = r37
            r2 = r17
            r6 = r0
            r7 = r22
            r8 = r23
            r9 = r30
            r10 = r29
            r11 = r26
            r1.lambda$processLoadedFilterPeers$36(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11)     // Catch:{ Exception -> 0x05c3 }
            goto L_0x05c7
        L_0x05a4:
            org.telegram.messenger.MessagesController r1 = r37.getMessagesController()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r18 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x05c3 }
            r18.<init>()     // Catch:{ Exception -> 0x05c3 }
            r2 = r13
            r13 = r1
            r16 = r2
            r19 = r4
            r20 = r5
            r21 = r0
            r24 = r30
            r25 = r29
            r13.loadFilterPeers(r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26)     // Catch:{ Exception -> 0x05c3 }
            goto L_0x05c7
        L_0x05bf:
            r0 = move-exception
            r12 = r37
            goto L_0x05c4
        L_0x05c3:
            r0 = move-exception
        L_0x05c4:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x05c7:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkLoadedRemoteFilters$34$MessagesStorage(org.telegram.tgnet.TLRPC$Vector):void");
    }

    static /* synthetic */ int lambda$null$33(LongSparseArray longSparseArray, Long l, Long l2) {
        int intValue = ((Integer) longSparseArray.get(l.longValue())).intValue();
        int intValue2 = ((Integer) longSparseArray.get(l2.longValue())).intValue();
        if (intValue > intValue2) {
            return 1;
        }
        return intValue < intValue2 ? -1 : 0;
    }

    /* access modifiers changed from: private */
    /* renamed from: processLoadedFilterPeersInternal */
    public void lambda$processLoadedFilterPeers$36(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, TLRPC$messages_Dialogs tLRPC$messages_Dialogs2, ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, ArrayList<MessagesController.DialogFilter> arrayList3, SparseArray<MessagesController.DialogFilter> sparseArray, ArrayList<Integer> arrayList4, HashMap<Integer, HashSet<Integer>> hashMap, HashMap<Integer, HashSet<Integer>> hashMap2, HashSet<Integer> hashSet) {
        ArrayList<TLRPC$User> arrayList5 = arrayList;
        putUsersAndChats(arrayList, arrayList2, true, false);
        int size = sparseArray.size();
        int i = 0;
        boolean z = false;
        while (i < size) {
            lambda$deleteDialogFilter$37(sparseArray.valueAt(i));
            i++;
            z = true;
        }
        Iterator<Integer> it = hashSet.iterator();
        while (it.hasNext()) {
            MessagesController.DialogFilter dialogFilter = this.dialogFiltersMap.get(it.next().intValue());
            if (dialogFilter != null) {
                dialogFilter.pendingUnreadCount = -1;
            }
        }
        for (Map.Entry next : hashMap2.entrySet()) {
            MessagesController.DialogFilter dialogFilter2 = this.dialogFiltersMap.get(((Integer) next.getKey()).intValue());
            if (dialogFilter2 != null) {
                HashSet hashSet2 = (HashSet) next.getValue();
                dialogFilter2.alwaysShow.removeAll(hashSet2);
                dialogFilter2.neverShow.removeAll(hashSet2);
                z = true;
            }
        }
        for (Map.Entry next2 : hashMap.entrySet()) {
            MessagesController.DialogFilter dialogFilter3 = this.dialogFiltersMap.get(((Integer) next2.getKey()).intValue());
            if (dialogFilter3 != null) {
                Iterator it2 = ((HashSet) next2.getValue()).iterator();
                while (it2.hasNext()) {
                    dialogFilter3.pinnedDialogs.remove((long) ((Integer) it2.next()).intValue());
                }
                z = true;
            }
        }
        int size2 = arrayList3.size();
        int i2 = 0;
        while (i2 < size2) {
            saveDialogFilterInternal(arrayList3.get(i2), false, true);
            i2++;
            z = true;
        }
        int size3 = this.dialogFilters.size();
        boolean z2 = false;
        for (int i3 = 0; i3 < size3; i3++) {
            MessagesController.DialogFilter dialogFilter4 = this.dialogFilters.get(i3);
            int indexOf = arrayList4.indexOf(Integer.valueOf(dialogFilter4.id));
            if (dialogFilter4.order != indexOf) {
                dialogFilter4.order = indexOf;
                z2 = true;
                z = true;
            }
        }
        if (z2) {
            Collections.sort(this.dialogFilters, $$Lambda$MessagesStorage$cG3TyunyBiD_51dSWm6ViHN_C0.INSTANCE);
            saveDialogFiltersOrderInternal();
        }
        int i4 = z ? 1 : 2;
        calcUnreadCounters(true);
        getMessagesController().processLoadedDialogFilters(new ArrayList(this.dialogFilters), tLRPC$messages_Dialogs, tLRPC$messages_Dialogs2, arrayList, arrayList2, (ArrayList<TLRPC$EncryptedChat>) null, i4);
    }

    static /* synthetic */ int lambda$processLoadedFilterPeersInternal$35(MessagesController.DialogFilter dialogFilter, MessagesController.DialogFilter dialogFilter2) {
        int i = dialogFilter.order;
        int i2 = dialogFilter2.order;
        if (i > i2) {
            return 1;
        }
        return i < i2 ? -1 : 0;
    }

    /* access modifiers changed from: protected */
    public void processLoadedFilterPeers(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, TLRPC$messages_Dialogs tLRPC$messages_Dialogs2, ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, ArrayList<MessagesController.DialogFilter> arrayList3, SparseArray<MessagesController.DialogFilter> sparseArray, ArrayList<Integer> arrayList4, HashMap<Integer, HashSet<Integer>> hashMap, HashMap<Integer, HashSet<Integer>> hashMap2, HashSet<Integer> hashSet) {
        this.storageQueue.postRunnable(new Runnable(tLRPC$messages_Dialogs, tLRPC$messages_Dialogs2, arrayList, arrayList2, arrayList3, sparseArray, arrayList4, hashMap, hashMap2, hashSet) {
            public final /* synthetic */ TLRPC$messages_Dialogs f$1;
            public final /* synthetic */ HashSet f$10;
            public final /* synthetic */ TLRPC$messages_Dialogs f$2;
            public final /* synthetic */ ArrayList f$3;
            public final /* synthetic */ ArrayList f$4;
            public final /* synthetic */ ArrayList f$5;
            public final /* synthetic */ SparseArray f$6;
            public final /* synthetic */ ArrayList f$7;
            public final /* synthetic */ HashMap f$8;
            public final /* synthetic */ HashMap f$9;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
                this.f$9 = r10;
                this.f$10 = r11;
            }

            public final void run() {
                MessagesStorage.this.lambda$processLoadedFilterPeers$36$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: deleteDialogFilterInternal */
    public void lambda$deleteDialogFilter$37(MessagesController.DialogFilter dialogFilter) {
        try {
            this.dialogFilters.remove(dialogFilter);
            this.dialogFiltersMap.remove(dialogFilter.id);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM dialog_filter WHERE id = " + dialogFilter.id).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase2 = this.database;
            sQLiteDatabase2.executeFast("DELETE FROM dialog_filter_ep WHERE id = " + dialogFilter.id).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase3 = this.database;
            sQLiteDatabase3.executeFast("DELETE FROM dialog_filter_pin_v2 WHERE id = " + dialogFilter.id).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void deleteDialogFilter(MessagesController.DialogFilter dialogFilter) {
        this.storageQueue.postRunnable(new Runnable(dialogFilter) {
            public final /* synthetic */ MessagesController.DialogFilter f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$deleteDialogFilter$37$MessagesStorage(this.f$1);
            }
        });
    }

    public void saveDialogFilter(MessagesController.DialogFilter dialogFilter, boolean z, boolean z2) {
        this.storageQueue.postRunnable(new Runnable(dialogFilter, z, z2) {
            public final /* synthetic */ MessagesController.DialogFilter f$1;
            public final /* synthetic */ boolean f$2;
            public final /* synthetic */ boolean f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveDialogFilter$39$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$saveDialogFilter$39 */
    public /* synthetic */ void lambda$saveDialogFilter$39$MessagesStorage(MessagesController.DialogFilter dialogFilter, boolean z, boolean z2) {
        saveDialogFilterInternal(dialogFilter, z, z2);
        calcUnreadCounters(false);
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$null$38$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$38 */
    public /* synthetic */ void lambda$null$38$MessagesStorage() {
        ArrayList<MessagesController.DialogFilter> arrayList = getMessagesController().dialogFilters;
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            arrayList.get(i).unreadCount = arrayList.get(i).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
        getNotificationCenter().postNotificationName(NotificationCenter.updateInterfaces, 256);
    }

    public void saveDialogFiltersOrderInternal() {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialog_filter SET ord = ?, flags = ? WHERE id = ?");
            int size = this.dialogFilters.size();
            for (int i = 0; i < size; i++) {
                MessagesController.DialogFilter dialogFilter = this.dialogFilters.get(i);
                executeFast.requery();
                executeFast.bindInteger(1, dialogFilter.order);
                executeFast.bindInteger(2, dialogFilter.flags);
                executeFast.bindInteger(3, dialogFilter.id);
                executeFast.step();
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveDialogFiltersOrder() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.saveDialogFiltersOrderInternal();
            }
        });
    }

    public void loadUnreadMessages() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$loadUnreadMessages$41$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x0204 A[Catch:{ Exception -> 0x0227 }] */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x0217 A[Catch:{ Exception -> 0x0227 }] */
    /* renamed from: lambda$loadUnreadMessages$41 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$loadUnreadMessages$41$MessagesStorage() {
        /*
            r35 = this;
            r9 = r35
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r1.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r2.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r3.<init>()     // Catch:{ Exception -> 0x04d4 }
            android.util.LongSparseArray r4 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x04d4 }
            r4.<init>()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r5 = "SELECT d.did, d.unread_count, s.flags FROM dialogs as d LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.unread_count > 0"
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x04d4 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x04d4 }
            r5.<init>()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.ConnectionsManager r7 = r35.getConnectionsManager()     // Catch:{ Exception -> 0x04d4 }
            int r7 = r7.getCurrentTime()     // Catch:{ Exception -> 0x04d4 }
        L_0x002e:
            boolean r8 = r0.next()     // Catch:{ Exception -> 0x04d4 }
            r10 = 32
            java.lang.String r11 = ","
            r12 = 2
            r13 = 1
            if (r8 == 0) goto L_0x00bb
            long r14 = r0.longValue(r12)     // Catch:{ Exception -> 0x04d4 }
            r16 = 1
            long r16 = r14 & r16
            r18 = 0
            int r8 = (r16 > r18 ? 1 : (r16 == r18 ? 0 : -1))
            if (r8 == 0) goto L_0x004a
            r8 = 1
            goto L_0x004b
        L_0x004a:
            r8 = 0
        L_0x004b:
            long r14 = r14 >> r10
            int r15 = (int) r14     // Catch:{ Exception -> 0x04d4 }
            boolean r12 = r0.isNull(r12)     // Catch:{ Exception -> 0x04d4 }
            if (r12 != 0) goto L_0x0059
            if (r8 == 0) goto L_0x0059
            if (r15 == 0) goto L_0x002e
            if (r15 >= r7) goto L_0x002e
        L_0x0059:
            long r14 = r0.longValue(r6)     // Catch:{ Exception -> 0x04d4 }
            boolean r8 = org.telegram.messenger.DialogObject.isFolderDialogId(r14)     // Catch:{ Exception -> 0x04d4 }
            if (r8 == 0) goto L_0x0064
            goto L_0x002e
        L_0x0064:
            int r8 = r0.intValue(r13)     // Catch:{ Exception -> 0x04d4 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04d4 }
            r4.put(r14, r8)     // Catch:{ Exception -> 0x04d4 }
            int r8 = r5.length()     // Catch:{ Exception -> 0x04d4 }
            if (r8 == 0) goto L_0x0078
            r5.append(r11)     // Catch:{ Exception -> 0x04d4 }
        L_0x0078:
            r5.append(r14)     // Catch:{ Exception -> 0x04d4 }
            int r8 = (int) r14     // Catch:{ Exception -> 0x04d4 }
            long r10 = r14 >> r10
            int r11 = (int) r10     // Catch:{ Exception -> 0x04d4 }
            if (r8 == 0) goto L_0x00a8
            if (r8 >= 0) goto L_0x0096
            int r8 = -r8
            java.lang.Integer r10 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04d4 }
            boolean r10 = r2.contains(r10)     // Catch:{ Exception -> 0x04d4 }
            if (r10 != 0) goto L_0x002e
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04d4 }
            r2.add(r8)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x002e
        L_0x0096:
            java.lang.Integer r10 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04d4 }
            boolean r10 = r1.contains(r10)     // Catch:{ Exception -> 0x04d4 }
            if (r10 != 0) goto L_0x002e
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04d4 }
            r1.add(r8)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x002e
        L_0x00a8:
            java.lang.Integer r8 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x04d4 }
            boolean r8 = r3.contains(r8)     // Catch:{ Exception -> 0x04d4 }
            if (r8 != 0) goto L_0x002e
            java.lang.Integer r8 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x04d4 }
            r3.add(r8)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x002e
        L_0x00bb:
            r0.dispose()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r7.<init>()     // Catch:{ Exception -> 0x04d4 }
            android.util.SparseArray r8 = new android.util.SparseArray     // Catch:{ Exception -> 0x04d4 }
            r8.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r14.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r15.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r10.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r12.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x04d4 }
            r13.<init>()     // Catch:{ Exception -> 0x04d4 }
            int r0 = r5.length()     // Catch:{ Exception -> 0x04d4 }
            if (r0 <= 0) goto L_0x04bd
            org.telegram.SQLite.SQLiteDatabase r0 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x04d4 }
            r6.<init>()     // Catch:{ Exception -> 0x04d4 }
            r20 = r4
            java.lang.String r4 = "SELECT read_state, data, send_state, mid, date, uid, replydata FROM messages WHERE uid IN ("
            r6.append(r4)     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = r5.toString()     // Catch:{ Exception -> 0x04d4 }
            r6.append(r4)     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = ") AND out = 0 AND read_state IN(0,2) ORDER BY date DESC LIMIT 50"
            r6.append(r4)     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = r6.toString()     // Catch:{ Exception -> 0x04d4 }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteCursor r4 = r0.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x04d4 }
            r0 = 0
        L_0x010d:
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x04d4 }
            if (r5 == 0) goto L_0x0254
            r5 = 1
            org.telegram.tgnet.NativeByteBuffer r6 = r4.byteBufferValue(r5)     // Catch:{ Exception -> 0x04d4 }
            if (r6 == 0) goto L_0x023e
            r21 = r12
            r5 = 0
            int r12 = r6.readInt32(r5)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r6, r12, r5)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.messenger.UserConfig r5 = r35.getUserConfig()     // Catch:{ Exception -> 0x04d4 }
            int r5 = r5.clientUserId     // Catch:{ Exception -> 0x04d4 }
            r12.readAttachPath(r6, r5)     // Catch:{ Exception -> 0x04d4 }
            r6.reuse()     // Catch:{ Exception -> 0x04d4 }
            r5 = 0
            int r6 = r4.intValue(r5)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r12, r6)     // Catch:{ Exception -> 0x04d4 }
            r5 = 3
            int r5 = r4.intValue(r5)     // Catch:{ Exception -> 0x04d4 }
            r12.id = r5     // Catch:{ Exception -> 0x04d4 }
            r5 = 4
            int r5 = r4.intValue(r5)     // Catch:{ Exception -> 0x04d4 }
            r12.date = r5     // Catch:{ Exception -> 0x04d4 }
            r22 = r10
            r6 = r11
            r5 = 5
            long r10 = r4.longValue(r5)     // Catch:{ Exception -> 0x04d4 }
            r12.dialog_id = r10     // Catch:{ Exception -> 0x04d4 }
            r14.add(r12)     // Catch:{ Exception -> 0x04d4 }
            int r5 = r12.date     // Catch:{ Exception -> 0x04d4 }
            int r5 = java.lang.Math.max(r0, r5)     // Catch:{ Exception -> 0x04d4 }
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x04d4 }
            int r0 = (int) r10     // Catch:{ Exception -> 0x04d4 }
            addUsersAndChatsFromMessage(r12, r1, r2)     // Catch:{ Exception -> 0x04d4 }
            r10 = 2
            int r11 = r4.intValue(r10)     // Catch:{ Exception -> 0x04d4 }
            r12.send_state = r11     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Peer r10 = r12.peer_id     // Catch:{ Exception -> 0x04d4 }
            int r10 = r10.channel_id     // Catch:{ Exception -> 0x04d4 }
            if (r10 != 0) goto L_0x0175
            boolean r10 = org.telegram.messenger.MessageObject.isUnread(r12)     // Catch:{ Exception -> 0x04d4 }
            if (r10 != 0) goto L_0x0175
            if (r0 != 0) goto L_0x0179
        L_0x0175:
            int r10 = r12.id     // Catch:{ Exception -> 0x04d4 }
            if (r10 <= 0) goto L_0x017c
        L_0x0179:
            r10 = 0
            r12.send_state = r10     // Catch:{ Exception -> 0x04d4 }
        L_0x017c:
            if (r0 != 0) goto L_0x018b
            r0 = 5
            boolean r10 = r4.isNull(r0)     // Catch:{ Exception -> 0x04d4 }
            if (r10 != 0) goto L_0x018b
            long r10 = r4.longValue(r0)     // Catch:{ Exception -> 0x04d4 }
            r12.random_id = r10     // Catch:{ Exception -> 0x04d4 }
        L_0x018b:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r12.reply_to     // Catch:{ Exception -> 0x0232 }
            if (r0 == 0) goto L_0x022b
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0232 }
            if (r0 == 0) goto L_0x022b
            org.telegram.tgnet.TLRPC$MessageAction r0 = r12.action     // Catch:{ Exception -> 0x0232 }
            boolean r10 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage     // Catch:{ Exception -> 0x0232 }
            if (r10 != 0) goto L_0x01a1
            boolean r10 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent     // Catch:{ Exception -> 0x0232 }
            if (r10 != 0) goto L_0x01a1
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGameScore     // Catch:{ Exception -> 0x0232 }
            if (r0 == 0) goto L_0x022b
        L_0x01a1:
            r0 = 6
            boolean r10 = r4.isNull(r0)     // Catch:{ Exception -> 0x0232 }
            if (r10 != 0) goto L_0x01cc
            org.telegram.tgnet.NativeByteBuffer r0 = r4.byteBufferValue(r0)     // Catch:{ Exception -> 0x0232 }
            if (r0 == 0) goto L_0x01cc
            r10 = 0
            int r11 = r0.readInt32(r10)     // Catch:{ Exception -> 0x0232 }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r11, r10)     // Catch:{ Exception -> 0x0232 }
            r12.replyMessage = r11     // Catch:{ Exception -> 0x0232 }
            org.telegram.messenger.UserConfig r10 = r35.getUserConfig()     // Catch:{ Exception -> 0x0232 }
            int r10 = r10.clientUserId     // Catch:{ Exception -> 0x0232 }
            r11.readAttachPath(r0, r10)     // Catch:{ Exception -> 0x0232 }
            r0.reuse()     // Catch:{ Exception -> 0x0232 }
            org.telegram.tgnet.TLRPC$Message r0 = r12.replyMessage     // Catch:{ Exception -> 0x0232 }
            if (r0 == 0) goto L_0x01cc
            addUsersAndChatsFromMessage(r0, r1, r2)     // Catch:{ Exception -> 0x0232 }
        L_0x01cc:
            org.telegram.tgnet.TLRPC$Message r0 = r12.replyMessage     // Catch:{ Exception -> 0x0232 }
            if (r0 != 0) goto L_0x022b
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r12.reply_to     // Catch:{ Exception -> 0x0232 }
            int r10 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0232 }
            long r10 = (long) r10     // Catch:{ Exception -> 0x0232 }
            org.telegram.tgnet.TLRPC$Peer r0 = r0.reply_to_peer_id     // Catch:{ Exception -> 0x0232 }
            if (r0 == 0) goto L_0x01ea
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0232 }
            r24 = r13
            r23 = r14
            if (r0 == 0) goto L_0x01e7
            long r13 = (long) r0
            r16 = 32
            long r13 = r13 << r16
            long r10 = r10 | r13
        L_0x01e7:
            r16 = 32
            goto L_0x01fa
        L_0x01ea:
            r24 = r13
            r23 = r14
            org.telegram.tgnet.TLRPC$Peer r0 = r12.peer_id     // Catch:{ Exception -> 0x0229 }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0229 }
            if (r0 == 0) goto L_0x01e7
            long r13 = (long) r0
            r16 = 32
            long r13 = r13 << r16
            long r10 = r10 | r13
        L_0x01fa:
            java.lang.Long r0 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0227 }
            boolean r0 = r7.contains(r0)     // Catch:{ Exception -> 0x0227 }
            if (r0 != 0) goto L_0x020b
            java.lang.Long r0 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0227 }
            r7.add(r0)     // Catch:{ Exception -> 0x0227 }
        L_0x020b:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r12.reply_to     // Catch:{ Exception -> 0x0227 }
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0227 }
            java.lang.Object r0 = r8.get(r0)     // Catch:{ Exception -> 0x0227 }
            java.util.ArrayList r0 = (java.util.ArrayList) r0     // Catch:{ Exception -> 0x0227 }
            if (r0 != 0) goto L_0x0223
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0227 }
            r0.<init>()     // Catch:{ Exception -> 0x0227 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r10 = r12.reply_to     // Catch:{ Exception -> 0x0227 }
            int r10 = r10.reply_to_msg_id     // Catch:{ Exception -> 0x0227 }
            r8.put(r10, r0)     // Catch:{ Exception -> 0x0227 }
        L_0x0223:
            r0.add(r12)     // Catch:{ Exception -> 0x0227 }
            goto L_0x023c
        L_0x0227:
            r0 = move-exception
            goto L_0x0239
        L_0x0229:
            r0 = move-exception
            goto L_0x0237
        L_0x022b:
            r24 = r13
            r23 = r14
            r16 = 32
            goto L_0x023c
        L_0x0232:
            r0 = move-exception
            r24 = r13
            r23 = r14
        L_0x0237:
            r16 = 32
        L_0x0239:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x04d4 }
        L_0x023c:
            r0 = r5
            goto L_0x0249
        L_0x023e:
            r22 = r10
            r6 = r11
            r21 = r12
            r24 = r13
            r23 = r14
            r16 = 32
        L_0x0249:
            r11 = r6
            r12 = r21
            r10 = r22
            r14 = r23
            r13 = r24
            goto L_0x010d
        L_0x0254:
            r22 = r10
            r6 = r11
            r21 = r12
            r24 = r13
            r23 = r14
            r4.dispose()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteDatabase r4 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x04d4 }
            r5.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r10 = "DELETE FROM unread_push_messages WHERE date <= "
            r5.append(r10)     // Catch:{ Exception -> 0x04d4 }
            r5.append(r0)     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r0 = r5.toString()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r4.executeFast(r0)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x04d4 }
            r0.dispose()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = "SELECT data, mid, date, uid, random, fm, name, uname, flags FROM unread_push_messages WHERE 1 ORDER BY date DESC LIMIT 50"
            r5 = 0
            java.lang.Object[] r10 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r4, r10)     // Catch:{ Exception -> 0x04d4 }
        L_0x0289:
            boolean r4 = r0.next()     // Catch:{ Exception -> 0x04d4 }
            if (r4 == 0) goto L_0x036b
            org.telegram.tgnet.NativeByteBuffer r4 = r0.byteBufferValue(r5)     // Catch:{ Exception -> 0x04d4 }
            if (r4 == 0) goto L_0x0365
            int r10 = r4.readInt32(r5)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Message r10 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r4, r10, r5)     // Catch:{ Exception -> 0x04d4 }
            r4.reuse()     // Catch:{ Exception -> 0x04d4 }
            r4 = 1
            int r5 = r0.intValue(r4)     // Catch:{ Exception -> 0x04d4 }
            r10.id = r5     // Catch:{ Exception -> 0x04d4 }
            r4 = 2
            int r5 = r0.intValue(r4)     // Catch:{ Exception -> 0x04d4 }
            r10.date = r5     // Catch:{ Exception -> 0x04d4 }
            r4 = 3
            long r11 = r0.longValue(r4)     // Catch:{ Exception -> 0x04d4 }
            r10.dialog_id = r11     // Catch:{ Exception -> 0x04d4 }
            r4 = 4
            long r11 = r0.longValue(r4)     // Catch:{ Exception -> 0x04d4 }
            r10.random_id = r11     // Catch:{ Exception -> 0x04d4 }
            r5 = 5
            boolean r11 = r0.isNull(r5)     // Catch:{ Exception -> 0x04d4 }
            r12 = 0
            if (r11 == 0) goto L_0x02c7
            r28 = r12
            goto L_0x02cd
        L_0x02c7:
            java.lang.String r11 = r0.stringValue(r5)     // Catch:{ Exception -> 0x04d4 }
            r28 = r11
        L_0x02cd:
            r11 = 6
            boolean r13 = r0.isNull(r11)     // Catch:{ Exception -> 0x04d4 }
            if (r13 == 0) goto L_0x02d7
            r29 = r12
            goto L_0x02dd
        L_0x02d7:
            java.lang.String r13 = r0.stringValue(r11)     // Catch:{ Exception -> 0x04d4 }
            r29 = r13
        L_0x02dd:
            r13 = 7
            boolean r14 = r0.isNull(r13)     // Catch:{ Exception -> 0x04d4 }
            if (r14 == 0) goto L_0x02e5
            goto L_0x02e9
        L_0x02e5:
            java.lang.String r12 = r0.stringValue(r13)     // Catch:{ Exception -> 0x04d4 }
        L_0x02e9:
            r30 = r12
            r12 = 8
            int r12 = r0.intValue(r12)     // Catch:{ Exception -> 0x04d4 }
            int r13 = org.telegram.messenger.MessageObject.getFromChatId(r10)     // Catch:{ Exception -> 0x04d4 }
            if (r13 != 0) goto L_0x0305
            long r13 = r10.dialog_id     // Catch:{ Exception -> 0x04d4 }
            int r14 = (int) r13     // Catch:{ Exception -> 0x04d4 }
            if (r14 <= 0) goto L_0x0305
            org.telegram.tgnet.TLRPC$TL_peerUser r13 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x04d4 }
            r13.<init>()     // Catch:{ Exception -> 0x04d4 }
            r10.from_id = r13     // Catch:{ Exception -> 0x04d4 }
            r13.user_id = r14     // Catch:{ Exception -> 0x04d4 }
        L_0x0305:
            long r13 = r10.dialog_id     // Catch:{ Exception -> 0x04d4 }
            int r14 = (int) r13     // Catch:{ Exception -> 0x04d4 }
            if (r14 <= 0) goto L_0x031c
            java.lang.Integer r13 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x04d4 }
            boolean r13 = r1.contains(r13)     // Catch:{ Exception -> 0x04d4 }
            if (r13 != 0) goto L_0x0330
            java.lang.Integer r13 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x04d4 }
            r1.add(r13)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x0330
        L_0x031c:
            if (r14 >= 0) goto L_0x0330
            int r13 = -r14
            java.lang.Integer r14 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x04d4 }
            boolean r14 = r2.contains(r14)     // Catch:{ Exception -> 0x04d4 }
            if (r14 != 0) goto L_0x0330
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x04d4 }
            r2.add(r13)     // Catch:{ Exception -> 0x04d4 }
        L_0x0330:
            org.telegram.messenger.MessageObject r13 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x04d4 }
            int r14 = r9.currentAccount     // Catch:{ Exception -> 0x04d4 }
            r16 = r12 & 1
            if (r16 == 0) goto L_0x033b
            r31 = 1
            goto L_0x033d
        L_0x033b:
            r31 = 0
        L_0x033d:
            r12 = r12 & 2
            if (r12 == 0) goto L_0x0344
            r32 = 1
            goto L_0x0346
        L_0x0344:
            r32 = 0
        L_0x0346:
            int r12 = r10.flags     // Catch:{ Exception -> 0x04d4 }
            r16 = -2147483648(0xfffffffvar_, float:-0.0)
            r12 = r12 & r16
            if (r12 == 0) goto L_0x0351
            r33 = 1
            goto L_0x0353
        L_0x0351:
            r33 = 0
        L_0x0353:
            r34 = 0
            r25 = r13
            r26 = r14
            r27 = r10
            r25.<init>(r26, r27, r28, r29, r30, r31, r32, r33, r34)     // Catch:{ Exception -> 0x04d4 }
            r15.add(r13)     // Catch:{ Exception -> 0x04d4 }
            addUsersAndChatsFromMessage(r10, r1, r2)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x0368
        L_0x0365:
            r4 = 4
            r5 = 5
            r11 = 6
        L_0x0368:
            r5 = 0
            goto L_0x0289
        L_0x036b:
            r0.dispose()     // Catch:{ Exception -> 0x04d4 }
            boolean r0 = r7.isEmpty()     // Catch:{ Exception -> 0x04d4 }
            if (r0 != 0) goto L_0x03e9
            org.telegram.SQLite.SQLiteDatabase r0 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r5 = "SELECT data, mid, date, uid FROM messages WHERE mid IN(%s)"
            r10 = 1
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r7 = android.text.TextUtils.join(r6, r7)     // Catch:{ Exception -> 0x04d4 }
            r10 = 0
            r11[r10] = r7     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r11)     // Catch:{ Exception -> 0x04d4 }
            java.lang.Object[] r5 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x04d4 }
        L_0x038e:
            boolean r4 = r0.next()     // Catch:{ Exception -> 0x04d4 }
            if (r4 == 0) goto L_0x03e6
            org.telegram.tgnet.NativeByteBuffer r4 = r0.byteBufferValue(r10)     // Catch:{ Exception -> 0x04d4 }
            if (r4 == 0) goto L_0x03e2
            int r5 = r4.readInt32(r10)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Message r5 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r4, r5, r10)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.messenger.UserConfig r7 = r35.getUserConfig()     // Catch:{ Exception -> 0x04d4 }
            int r7 = r7.clientUserId     // Catch:{ Exception -> 0x04d4 }
            r5.readAttachPath(r4, r7)     // Catch:{ Exception -> 0x04d4 }
            r4.reuse()     // Catch:{ Exception -> 0x04d4 }
            r4 = 1
            int r7 = r0.intValue(r4)     // Catch:{ Exception -> 0x04d4 }
            r5.id = r7     // Catch:{ Exception -> 0x04d4 }
            r4 = 2
            int r7 = r0.intValue(r4)     // Catch:{ Exception -> 0x04d4 }
            r5.date = r7     // Catch:{ Exception -> 0x04d4 }
            r7 = 3
            long r10 = r0.longValue(r7)     // Catch:{ Exception -> 0x04d4 }
            r5.dialog_id = r10     // Catch:{ Exception -> 0x04d4 }
            addUsersAndChatsFromMessage(r5, r1, r2)     // Catch:{ Exception -> 0x04d4 }
            int r10 = r5.id     // Catch:{ Exception -> 0x04d4 }
            java.lang.Object r10 = r8.get(r10)     // Catch:{ Exception -> 0x04d4 }
            java.util.ArrayList r10 = (java.util.ArrayList) r10     // Catch:{ Exception -> 0x04d4 }
            if (r10 == 0) goto L_0x03e4
            r11 = 0
        L_0x03d1:
            int r12 = r10.size()     // Catch:{ Exception -> 0x04d4 }
            if (r11 >= r12) goto L_0x03e4
            java.lang.Object r12 = r10.get(r11)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Message r12 = (org.telegram.tgnet.TLRPC$Message) r12     // Catch:{ Exception -> 0x04d4 }
            r12.replyMessage = r5     // Catch:{ Exception -> 0x04d4 }
            int r11 = r11 + 1
            goto L_0x03d1
        L_0x03e2:
            r4 = 2
            r7 = 3
        L_0x03e4:
            r10 = 0
            goto L_0x038e
        L_0x03e6:
            r0.dispose()     // Catch:{ Exception -> 0x04d4 }
        L_0x03e9:
            boolean r0 = r3.isEmpty()     // Catch:{ Exception -> 0x04d4 }
            if (r0 != 0) goto L_0x03f9
            java.lang.String r0 = android.text.TextUtils.join(r6, r3)     // Catch:{ Exception -> 0x04d4 }
            r8 = r24
            r9.getEncryptedChatsInternal(r0, r8, r1)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x03fb
        L_0x03f9:
            r8 = r24
        L_0x03fb:
            boolean r0 = r1.isEmpty()     // Catch:{ Exception -> 0x04d4 }
            if (r0 != 0) goto L_0x040b
            java.lang.String r0 = android.text.TextUtils.join(r6, r1)     // Catch:{ Exception -> 0x04d4 }
            r7 = r22
            r9.getUsersInternal(r0, r7)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x040d
        L_0x040b:
            r7 = r22
        L_0x040d:
            boolean r0 = r2.isEmpty()     // Catch:{ Exception -> 0x04d4 }
            if (r0 != 0) goto L_0x04b6
            java.lang.String r0 = android.text.TextUtils.join(r6, r2)     // Catch:{ Exception -> 0x04d4 }
            r10 = r21
            r9.getChatsInternal(r0, r10)     // Catch:{ Exception -> 0x04d4 }
            r5 = 0
        L_0x041d:
            int r0 = r10.size()     // Catch:{ Exception -> 0x04d4 }
            if (r5 >= r0) goto L_0x04b3
            java.lang.Object r0 = r10.get(r5)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Chat r0 = (org.telegram.tgnet.TLRPC$Chat) r0     // Catch:{ Exception -> 0x04d4 }
            if (r0 == 0) goto L_0x04a6
            boolean r1 = org.telegram.messenger.ChatObject.isNotInChat(r0)     // Catch:{ Exception -> 0x04d4 }
            if (r1 != 0) goto L_0x0439
            boolean r1 = r0.min     // Catch:{ Exception -> 0x04d4 }
            if (r1 != 0) goto L_0x0439
            org.telegram.tgnet.TLRPC$InputChannel r1 = r0.migrated_to     // Catch:{ Exception -> 0x04d4 }
            if (r1 == 0) goto L_0x04a6
        L_0x0439:
            int r0 = r0.id     // Catch:{ Exception -> 0x04d4 }
            int r0 = -r0
            long r0 = (long) r0     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x04d4 }
            r3.<init>()     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = "UPDATE dialogs SET unread_count = 0 WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x04d4 }
            r3.append(r0)     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x04d4 }
            r2.dispose()     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x04d4 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r4 = "UPDATE messages SET read_state = 3 WHERE uid = %d AND mid > 0 AND read_state IN(0,2) AND out = 0"
            r6 = 1
            java.lang.Object[] r11 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x04d4 }
            java.lang.Long r6 = java.lang.Long.valueOf(r0)     // Catch:{ Exception -> 0x04d4 }
            r12 = 0
            r11[r12] = r6     // Catch:{ Exception -> 0x04d4 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r11)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x04d4 }
            r2.dispose()     // Catch:{ Exception -> 0x04d4 }
            r10.remove(r5)     // Catch:{ Exception -> 0x04d4 }
            int r5 = r5 + -1
            r3 = r20
            r3.remove(r0)     // Catch:{ Exception -> 0x04d4 }
            r2 = 0
        L_0x0485:
            int r4 = r23.size()     // Catch:{ Exception -> 0x04d4 }
            if (r2 >= r4) goto L_0x04a3
            r4 = r23
            java.lang.Object r6 = r4.get(r2)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6     // Catch:{ Exception -> 0x04d4 }
            long r13 = r6.dialog_id     // Catch:{ Exception -> 0x04d4 }
            int r6 = (r13 > r0 ? 1 : (r13 == r0 ? 0 : -1))
            if (r6 != 0) goto L_0x049e
            r4.remove(r2)     // Catch:{ Exception -> 0x04d4 }
            int r2 = r2 + -1
        L_0x049e:
            r6 = 1
            int r2 = r2 + r6
            r23 = r4
            goto L_0x0485
        L_0x04a3:
            r4 = r23
            goto L_0x04ab
        L_0x04a6:
            r3 = r20
            r4 = r23
            r12 = 0
        L_0x04ab:
            r1 = 1
            int r5 = r5 + r1
            r20 = r3
            r23 = r4
            goto L_0x041d
        L_0x04b3:
            r3 = r20
            goto L_0x04ba
        L_0x04b6:
            r3 = r20
            r10 = r21
        L_0x04ba:
            r4 = r23
            goto L_0x04c2
        L_0x04bd:
            r3 = r4
            r7 = r10
            r10 = r12
            r8 = r13
            r4 = r14
        L_0x04c2:
            java.util.Collections.reverse(r4)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$lyXVaKZC1HxIr9AUx-9HElDbNgE r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$lyXVaKZC1HxIr9AUx-9HElDbNgE     // Catch:{ Exception -> 0x04d4 }
            r1 = r0
            r2 = r35
            r5 = r15
            r6 = r7
            r7 = r10
            r1.<init>(r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x04d4 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x04d4 }
            goto L_0x04d8
        L_0x04d4:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x04d8:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$loadUnreadMessages$41$MessagesStorage():void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$40 */
    public /* synthetic */ void lambda$null$40$MessagesStorage(LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        getNotificationsController().processLoadedUnreadMessages(longSparseArray, arrayList, arrayList2, arrayList3, arrayList4, arrayList5);
    }

    public void putWallpapers(ArrayList<TLRPC$WallPaper> arrayList, int i) {
        this.storageQueue.postRunnable(new Runnable(i, arrayList) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ ArrayList f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$putWallpapers$42$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putWallpapers$42 */
    public /* synthetic */ void lambda$putWallpapers$42$MessagesStorage(int i, ArrayList arrayList) {
        SQLitePreparedStatement sQLitePreparedStatement;
        if (i == 1) {
            try {
                this.database.executeFast("DELETE FROM wallpapers2 WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.beginTransaction();
        if (i != 0) {
            sQLitePreparedStatement = this.database.executeFast("REPLACE INTO wallpapers2 VALUES(?, ?, ?)");
        } else {
            sQLitePreparedStatement = this.database.executeFast("UPDATE wallpapers2 SET data = ? WHERE uid = ?");
        }
        int size = arrayList.size();
        for (int i2 = 0; i2 < size; i2++) {
            TLRPC$TL_wallPaper tLRPC$TL_wallPaper = (TLRPC$TL_wallPaper) arrayList.get(i2);
            sQLitePreparedStatement.requery();
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$TL_wallPaper.getObjectSize());
            tLRPC$TL_wallPaper.serializeToStream(nativeByteBuffer);
            if (i != 0) {
                sQLitePreparedStatement.bindLong(1, tLRPC$TL_wallPaper.id);
                sQLitePreparedStatement.bindByteBuffer(2, nativeByteBuffer);
                sQLitePreparedStatement.bindInteger(3, i == 2 ? -1 : i2);
            } else {
                sQLitePreparedStatement.bindByteBuffer(1, nativeByteBuffer);
                sQLitePreparedStatement.bindLong(2, tLRPC$TL_wallPaper.id);
            }
            sQLitePreparedStatement.step();
            nativeByteBuffer.reuse();
        }
        sQLitePreparedStatement.dispose();
        this.database.commitTransaction();
    }

    public void getWallpapers() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$getWallpapers$44$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getWallpapers$44 */
    public /* synthetic */ void lambda$getWallpapers$44$MessagesStorage() {
        SQLiteCursor sQLiteCursor = null;
        try {
            sQLiteCursor = this.database.queryFinalized("SELECT data FROM wallpapers2 WHERE 1 ORDER BY num ASC", new Object[0]);
            ArrayList arrayList = new ArrayList();
            while (sQLiteCursor.next()) {
                NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(0);
                if (byteBufferValue != null) {
                    TLRPC$TL_wallPaper tLRPC$TL_wallPaper = (TLRPC$TL_wallPaper) TLRPC$WallPaper.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (tLRPC$TL_wallPaper != null) {
                        arrayList.add(tLRPC$TL_wallPaper);
                    }
                }
            }
            AndroidUtilities.runOnUIThread(new Runnable(arrayList) {
                public final /* synthetic */ ArrayList f$0;

                {
                    this.f$0 = r1;
                }

                public final void run() {
                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.wallpapersDidLoad, this.f$0);
                }
            });
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    public void addRecentLocalFile(String str, String str2, TLRPC$Document tLRPC$Document) {
        if (str != null && str.length() != 0) {
            if ((str2 != null && str2.length() != 0) || tLRPC$Document != null) {
                this.storageQueue.postRunnable(new Runnable(tLRPC$Document, str, str2) {
                    public final /* synthetic */ TLRPC$Document f$1;
                    public final /* synthetic */ String f$2;
                    public final /* synthetic */ String f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$addRecentLocalFile$45$MessagesStorage(this.f$1, this.f$2, this.f$3);
                    }
                });
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$addRecentLocalFile$45 */
    public /* synthetic */ void lambda$addRecentLocalFile$45$MessagesStorage(TLRPC$Document tLRPC$Document, String str, String str2) {
        if (tLRPC$Document != null) {
            try {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE web_recent_v3 SET document = ? WHERE image_url = ?");
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$Document.getObjectSize());
                tLRPC$Document.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(1, nativeByteBuffer);
                executeFast.bindString(2, str);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE web_recent_v3 SET local_url = ? WHERE image_url = ?");
            executeFast2.requery();
            executeFast2.bindString(1, str2);
            executeFast2.bindString(2, str);
            executeFast2.step();
            executeFast2.dispose();
        }
    }

    public void deleteUserChatHistory(long j, int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(j, i2, i) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$deleteUserChatHistory$48$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x00c9 A[Catch:{ Exception -> 0x00d2 }] */
    /* JADX WARNING: Removed duplicated region for block: B:42:? A[RETURN, SYNTHETIC] */
    /* renamed from: lambda$deleteUserChatHistory$48 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$deleteUserChatHistory$48$MessagesStorage(long r19, int r21, int r22) {
        /*
            r18 = this;
            r7 = r18
            r0 = r21
            r8 = r22
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x00d2 }
            r9.<init>()     // Catch:{ Exception -> 0x00d2 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x00d2 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00d2 }
            r2.<init>()     // Catch:{ Exception -> 0x00d2 }
            java.lang.String r3 = "SELECT data FROM messages WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x00d2 }
            r10 = r19
            r2.append(r10)     // Catch:{ Exception -> 0x00d2 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x00d2 }
            r12 = 0
            java.lang.Object[] r3 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x00d2 }
            org.telegram.SQLite.SQLiteCursor r13 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x00d2 }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x00d2 }
            r14.<init>()     // Catch:{ Exception -> 0x00d2 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x00d2 }
            r15.<init>()     // Catch:{ Exception -> 0x00d2 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x00d2 }
            r6.<init>()     // Catch:{ Exception -> 0x00d2 }
        L_0x0036:
            r5 = 1
            boolean r1 = r13.next()     // Catch:{ Exception -> 0x0099 }
            if (r1 == 0) goto L_0x0097
            org.telegram.tgnet.NativeByteBuffer r4 = r13.byteBufferValue(r12)     // Catch:{ Exception -> 0x0099 }
            if (r4 == 0) goto L_0x0093
            int r1 = r4.readInt32(r12)     // Catch:{ Exception -> 0x0099 }
            org.telegram.tgnet.TLRPC$Message r2 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r4, r1, r12)     // Catch:{ Exception -> 0x0099 }
            if (r2 == 0) goto L_0x008a
            org.telegram.messenger.UserConfig r1 = r18.getUserConfig()     // Catch:{ Exception -> 0x0099 }
            int r1 = r1.clientUserId     // Catch:{ Exception -> 0x0099 }
            r2.readAttachPath(r4, r1)     // Catch:{ Exception -> 0x0099 }
            boolean r1 = org.telegram.messenger.UserObject.isReplyUser((long) r19)     // Catch:{ Exception -> 0x0099 }
            if (r1 == 0) goto L_0x0066
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r2.fwd_from     // Catch:{ Exception -> 0x0099 }
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id     // Catch:{ Exception -> 0x0099 }
            int r1 = org.telegram.messenger.MessageObject.getPeerId(r1)     // Catch:{ Exception -> 0x0099 }
            if (r1 == r0) goto L_0x0070
        L_0x0066:
            int r1 = org.telegram.messenger.MessageObject.getFromChatId(r2)     // Catch:{ Exception -> 0x0099 }
            if (r1 != r0) goto L_0x008a
            int r1 = r2.id     // Catch:{ Exception -> 0x0099 }
            if (r1 == r5) goto L_0x008a
        L_0x0070:
            int r1 = r2.id     // Catch:{ Exception -> 0x0099 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0099 }
            r9.add(r1)     // Catch:{ Exception -> 0x0099 }
            r16 = 0
            r1 = r18
            r3 = r14
            r17 = r4
            r4 = r6
            r12 = 1
            r5 = r15
            r12 = r6
            r6 = r16
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x0091 }
            goto L_0x008d
        L_0x008a:
            r17 = r4
            r12 = r6
        L_0x008d:
            r17.reuse()     // Catch:{ Exception -> 0x0091 }
            goto L_0x0094
        L_0x0091:
            r0 = move-exception
            goto L_0x009b
        L_0x0093:
            r12 = r6
        L_0x0094:
            r6 = r12
            r12 = 0
            goto L_0x0036
        L_0x0097:
            r12 = r6
            goto L_0x009e
        L_0x0099:
            r0 = move-exception
            r12 = r6
        L_0x009b:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x00d2 }
        L_0x009e:
            r13.dispose()     // Catch:{ Exception -> 0x00d2 }
            r1 = 1
            r7.deleteFromDownloadQueue(r12, r1)     // Catch:{ Exception -> 0x00d2 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$KkevTCaPxtvOXtcC_OnPUAiLqLU r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$KkevTCaPxtvOXtcC_OnPUAiLqLU     // Catch:{ Exception -> 0x00d2 }
            r1 = r0
            r2 = r18
            r3 = r15
            r4 = r9
            r5 = r19
            r1.<init>(r3, r4, r5)     // Catch:{ Exception -> 0x00d2 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x00d2 }
            r1 = 0
            r7.lambda$markMessagesAsDeleted$157(r9, r8, r1, r1)     // Catch:{ Exception -> 0x00d2 }
            r0 = 0
            r7.lambda$updateDialogsWithDeletedMessages$156(r9, r0, r8)     // Catch:{ Exception -> 0x00d2 }
            org.telegram.messenger.FileLoader r0 = r18.getFileLoader()     // Catch:{ Exception -> 0x00d2 }
            r0.deleteFiles(r14, r1)     // Catch:{ Exception -> 0x00d2 }
            boolean r0 = r9.isEmpty()     // Catch:{ Exception -> 0x00d2 }
            if (r0 != 0) goto L_0x00d6
            org.telegram.messenger.-$$Lambda$MessagesStorage$0eH5iJh0zxX9vQLhowH-OtmyRZo r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$0eH5iJh0zxX9vQLhowH-OtmyRZo     // Catch:{ Exception -> 0x00d2 }
            r0.<init>(r9, r8)     // Catch:{ Exception -> 0x00d2 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x00d2 }
            goto L_0x00d6
        L_0x00d2:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x00d6:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$deleteUserChatHistory$48$MessagesStorage(long, int, int):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$46 */
    public /* synthetic */ void lambda$null$46$MessagesStorage(ArrayList arrayList, ArrayList arrayList2, long j) {
        getFileLoader().cancelLoadFiles(arrayList);
        getMessagesController().markDialogMessageAsDeleted(arrayList2, j);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$47 */
    public /* synthetic */ void lambda$null$47$MessagesStorage(ArrayList arrayList, int i) {
        getNotificationCenter().postNotificationName(NotificationCenter.messagesDeleted, arrayList, Integer.valueOf(i), Boolean.FALSE);
    }

    private boolean addFilesToDelete(TLRPC$Message tLRPC$Message, ArrayList<File> arrayList, ArrayList<Pair<Long, Integer>> arrayList2, ArrayList<String> arrayList3, boolean z) {
        int i;
        long j;
        int i2 = 0;
        if (tLRPC$Message == null) {
            return false;
        }
        TLRPC$Document document = MessageObject.getDocument(tLRPC$Message);
        TLRPC$Photo photo = MessageObject.getPhoto(tLRPC$Message);
        if (MessageObject.isVoiceMessage(tLRPC$Message)) {
            j = document.id;
            i = 2;
        } else {
            if (MessageObject.isStickerMessage(tLRPC$Message) || MessageObject.isAnimatedStickerMessage(tLRPC$Message)) {
                j = document.id;
            } else if (MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message) || MessageObject.isGifMessage(tLRPC$Message)) {
                j = document.id;
                i = 4;
            } else if (document != null) {
                j = document.id;
                i = 8;
            } else if (photo == null || FileLoader.getClosestPhotoSizeWithSize(photo.sizes, AndroidUtilities.getPhotoSize()) == null) {
                j = 0;
                i = 0;
            } else {
                j = photo.id;
            }
            i = 1;
        }
        if (j != 0) {
            arrayList2.add(new Pair(Long.valueOf(j), Integer.valueOf(i)));
        }
        if (photo != null) {
            int size = photo.sizes.size();
            while (i2 < size) {
                TLRPC$PhotoSize tLRPC$PhotoSize = photo.sizes.get(i2);
                String attachFileName = FileLoader.getAttachFileName(tLRPC$PhotoSize);
                if (!TextUtils.isEmpty(attachFileName)) {
                    arrayList3.add(attachFileName);
                }
                File pathToAttach = FileLoader.getPathToAttach(tLRPC$PhotoSize, z);
                if (pathToAttach.toString().length() > 0) {
                    arrayList.add(pathToAttach);
                }
                i2++;
            }
            return true;
        } else if (document == null) {
            return false;
        } else {
            String attachFileName2 = FileLoader.getAttachFileName(document);
            if (!TextUtils.isEmpty(attachFileName2)) {
                arrayList3.add(attachFileName2);
            }
            File pathToAttach2 = FileLoader.getPathToAttach(document, z);
            if (pathToAttach2.toString().length() > 0) {
                arrayList.add(pathToAttach2);
            }
            int size2 = document.thumbs.size();
            while (i2 < size2) {
                File pathToAttach3 = FileLoader.getPathToAttach(document.thumbs.get(i2));
                if (pathToAttach3.toString().length() > 0) {
                    arrayList.add(pathToAttach3);
                }
                i2++;
            }
            return true;
        }
    }

    public void deleteDialog(long j, int i) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$deleteDialog$51$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x0270 A[Catch:{ Exception -> 0x0037 }] */
    /* JADX WARNING: Removed duplicated region for block: B:77:0x032c A[Catch:{ Exception -> 0x0037 }] */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x034e A[Catch:{ Exception -> 0x0037 }] */
    /* renamed from: lambda$deleteDialog$51 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$deleteDialog$51$MessagesStorage(int r23, long r24) {
        /*
            r22 = this;
            r7 = r22
            r8 = r23
            r9 = r24
            java.lang.String r11 = " AND mid != "
            r12 = 3
            r14 = 0
            if (r8 != r12) goto L_0x003a
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = "SELECT last_mid FROM dialogs WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            java.lang.Object[] r2 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0037 }
            boolean r1 = r0.next()     // Catch:{ Exception -> 0x0037 }
            if (r1 == 0) goto L_0x0030
            int r1 = r0.intValue(r14)     // Catch:{ Exception -> 0x0037 }
            goto L_0x0031
        L_0x0030:
            r1 = -1
        L_0x0031:
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            if (r1 == 0) goto L_0x003a
            return
        L_0x0037:
            r0 = move-exception
            goto L_0x044a
        L_0x003a:
            int r15 = (int) r9
            java.lang.String r5 = "SELECT data FROM messages WHERE uid = "
            r4 = 2
            if (r15 == 0) goto L_0x0048
            if (r8 != r4) goto L_0x0043
            goto L_0x0048
        L_0x0043:
            r20 = r5
            r14 = 1
            goto L_0x00eb
        L_0x0048:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r5)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            java.lang.Object[] r2 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0037 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0037 }
            r13.<init>()     // Catch:{ Exception -> 0x0037 }
        L_0x006e:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x00c5 }
            if (r0 == 0) goto L_0x00bb
            org.telegram.tgnet.NativeByteBuffer r0 = r3.byteBufferValue(r14)     // Catch:{ Exception -> 0x00c5 }
            if (r0 == 0) goto L_0x00a7
            int r4 = r0.readInt32(r14)     // Catch:{ Exception -> 0x00c5 }
            org.telegram.tgnet.TLRPC$Message r4 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r4, r14)     // Catch:{ Exception -> 0x00c5 }
            org.telegram.messenger.UserConfig r6 = r22.getUserConfig()     // Catch:{ Exception -> 0x00c5 }
            int r6 = r6.clientUserId     // Catch:{ Exception -> 0x00c5 }
            r4.readAttachPath(r0, r6)     // Catch:{ Exception -> 0x00c5 }
            r0.reuse()     // Catch:{ Exception -> 0x00c5 }
            r6 = 0
            r17 = r1
            r1 = r22
            r18 = r2
            r2 = r4
            r19 = r3
            r3 = r18
            r14 = 2
            r4 = r13
            r20 = r5
            r5 = r17
            r14 = 1
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x00a5 }
            goto L_0x00b0
        L_0x00a5:
            r0 = move-exception
            goto L_0x00cf
        L_0x00a7:
            r17 = r1
            r18 = r2
            r19 = r3
            r20 = r5
            r14 = 1
        L_0x00b0:
            r1 = r17
            r2 = r18
            r3 = r19
            r5 = r20
            r4 = 2
            r14 = 0
            goto L_0x006e
        L_0x00bb:
            r17 = r1
            r18 = r2
            r19 = r3
            r20 = r5
            r14 = 1
            goto L_0x00d2
        L_0x00c5:
            r0 = move-exception
            r17 = r1
            r18 = r2
            r19 = r3
            r20 = r5
            r14 = 1
        L_0x00cf:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0037 }
        L_0x00d2:
            r19.dispose()     // Catch:{ Exception -> 0x0037 }
            r7.deleteFromDownloadQueue(r13, r14)     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$yeMFmop7pMu55PPIq6bATx_mnOs r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$yeMFmop7pMu55PPIq6bATx_mnOs     // Catch:{ Exception -> 0x0037 }
            r1 = r17
            r0.<init>(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.FileLoader r0 = r22.getFileLoader()     // Catch:{ Exception -> 0x0037 }
            r1 = r18
            r0.deleteFiles(r1, r8)     // Catch:{ Exception -> 0x0037 }
        L_0x00eb:
            java.lang.String r2 = "DELETE FROM media_holes_v2 WHERE uid = "
            java.lang.String r3 = "DELETE FROM messages_holes WHERE uid = "
            java.lang.String r4 = "DELETE FROM media_v2 WHERE uid = "
            java.lang.String r5 = "DELETE FROM media_counts_v2 WHERE uid = "
            java.lang.String r6 = "DELETE FROM bot_keyboard WHERE uid = "
            java.lang.String r13 = "DELETE FROM messages WHERE uid = "
            if (r8 == 0) goto L_0x028a
            if (r8 != r12) goto L_0x00fd
            goto L_0x028a
        L_0x00fd:
            r12 = 2
            if (r8 != r12) goto L_0x0283
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r8.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r12 = "SELECT last_mid_i, last_mid FROM dialogs WHERE did = "
            r8.append(r12)     // Catch:{ Exception -> 0x0037 }
            r8.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x0037 }
            r12 = 0
            java.lang.Object[] r15 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r15)     // Catch:{ Exception -> 0x0037 }
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x0037 }
            if (r0 == 0) goto L_0x027d
            r16 = r2
            long r1 = r8.longValue(r12)     // Catch:{ Exception -> 0x0037 }
            long r14 = r8.longValue(r14)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r12.<init>()     // Catch:{ Exception -> 0x0037 }
            r23 = r8
            r8 = r20
            r12.append(r8)     // Catch:{ Exception -> 0x0037 }
            r12.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = " AND mid IN ("
            r12.append(r8)     // Catch:{ Exception -> 0x0037 }
            r12.append(r1)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = ","
            r12.append(r8)     // Catch:{ Exception -> 0x0037 }
            r12.append(r14)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = ")"
            r12.append(r8)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = r12.toString()     // Catch:{ Exception -> 0x0037 }
            r17 = r4
            r12 = 0
            java.lang.Object[] r4 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r4 = r0.queryFinalized(r8, r4)     // Catch:{ Exception -> 0x0037 }
            r8 = -1
        L_0x015e:
            boolean r0 = r4.next()     // Catch:{ Exception -> 0x0192 }
            if (r0 == 0) goto L_0x018f
            org.telegram.tgnet.NativeByteBuffer r0 = r4.byteBufferValue(r12)     // Catch:{ Exception -> 0x0192 }
            if (r0 == 0) goto L_0x0189
            r18 = r8
            int r8 = r0.readInt32(r12)     // Catch:{ Exception -> 0x0187 }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r8, r12)     // Catch:{ Exception -> 0x0187 }
            if (r8 == 0) goto L_0x017f
            org.telegram.messenger.UserConfig r12 = r22.getUserConfig()     // Catch:{ Exception -> 0x0187 }
            int r12 = r12.clientUserId     // Catch:{ Exception -> 0x0187 }
            r8.readAttachPath(r0, r12)     // Catch:{ Exception -> 0x0187 }
        L_0x017f:
            r0.reuse()     // Catch:{ Exception -> 0x0187 }
            if (r8 == 0) goto L_0x018b
            int r8 = r8.id     // Catch:{ Exception -> 0x0187 }
            goto L_0x018d
        L_0x0187:
            r0 = move-exception
            goto L_0x0195
        L_0x0189:
            r18 = r8
        L_0x018b:
            r8 = r18
        L_0x018d:
            r12 = 0
            goto L_0x015e
        L_0x018f:
            r18 = r8
            goto L_0x0198
        L_0x0192:
            r0 = move-exception
            r18 = r8
        L_0x0195:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0037 }
        L_0x0198:
            r4.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r4.<init>()     // Catch:{ Exception -> 0x0037 }
            r4.append(r13)     // Catch:{ Exception -> 0x0037 }
            r4.append(r9)     // Catch:{ Exception -> 0x0037 }
            r4.append(r11)     // Catch:{ Exception -> 0x0037 }
            r4.append(r1)     // Catch:{ Exception -> 0x0037 }
            r4.append(r11)     // Catch:{ Exception -> 0x0037 }
            r4.append(r14)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r4.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r3)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r6)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r5)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r2 = r17
            r1.append(r2)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r4 = r16
            r1.append(r4)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.MediaDataController r0 = r22.getMediaDataController()     // Catch:{ Exception -> 0x0037 }
            r1 = 0
            r0.clearBotKeyboard(r9, r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            r8 = r18
            r2 = -1
            if (r8 == r2) goto L_0x0273
            createFirstHoles(r9, r0, r1, r8)     // Catch:{ Exception -> 0x0037 }
        L_0x0273:
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            r1.dispose()     // Catch:{ Exception -> 0x0037 }
            r7.updateWidgets((long) r9)     // Catch:{ Exception -> 0x0037 }
            goto L_0x027f
        L_0x027d:
            r23 = r8
        L_0x027f:
            r23.dispose()     // Catch:{ Exception -> 0x0037 }
            return
        L_0x0283:
            r21 = r4
            r4 = r2
            r2 = r21
            goto L_0x036c
        L_0x028a:
            r21 = r4
            r4 = r2
            r2 = r21
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "DELETE FROM dialogs WHERE did = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "DELETE FROM chat_pinned_v2 WHERE uid = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "DELETE FROM chat_pinned_count WHERE uid = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "DELETE FROM channel_users_v2 WHERE did = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "DELETE FROM search_recent WHERE did = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            r0 = 32
            long r0 = r9 >> r0
            int r1 = (int) r0     // Catch:{ Exception -> 0x0037 }
            if (r15 == 0) goto L_0x034e
            if (r15 >= 0) goto L_0x036c
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "DELETE FROM chat_settings_v2 WHERE uid = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            int r8 = -r15
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            goto L_0x036c
        L_0x034e:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r8.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r11 = "DELETE FROM enc_chats WHERE uid = "
            r8.append(r11)     // Catch:{ Exception -> 0x0037 }
            r8.append(r1)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r8.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
        L_0x036c:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = "UPDATE dialogs SET unread_count = 0, unread_count_i = 0 WHERE did = "
            r1.append(r8)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r13)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r6)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r5)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r2)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r3)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r1.<init>()     // Catch:{ Exception -> 0x0037 }
            r1.append(r4)     // Catch:{ Exception -> 0x0037 }
            r1.append(r9)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.MediaDataController r0 = r22.getMediaDataController()     // Catch:{ Exception -> 0x0037 }
            r1 = 0
            r0.clearBotKeyboard(r9, r1)     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$U-T4-IPxbY-uaZ_YpDJkE7VFFJ0 r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$U-T4-IPxbY-uaZ_YpDJkE7VFFJ0     // Catch:{ Exception -> 0x0037 }
            r0.<init>()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0037 }
            r1 = 0
            r7.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x0037 }
            r7.updateWidgets((long) r9)     // Catch:{ Exception -> 0x0037 }
            goto L_0x044d
        L_0x044a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x044d:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$deleteDialog$51$MessagesStorage(int, long):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$49 */
    public /* synthetic */ void lambda$null$49$MessagesStorage(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$50 */
    public /* synthetic */ void lambda$null$50$MessagesStorage() {
        getNotificationCenter().postNotificationName(NotificationCenter.needReloadRecentDialogsSearch, new Object[0]);
    }

    public void onDeleteQueryComplete(long j) {
        this.storageQueue.postRunnable(new Runnable(j) {
            public final /* synthetic */ long f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$onDeleteQueryComplete$52$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$onDeleteQueryComplete$52 */
    public /* synthetic */ void lambda$onDeleteQueryComplete$52$MessagesStorage(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM media_counts_v2 WHERE uid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogPhotos(int i, int i2, long j, int i3) {
        this.storageQueue.postRunnable(new Runnable(j, i, i2, i3) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
                this.f$4 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogPhotos$54$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getDialogPhotos$54 */
    public /* synthetic */ void lambda$getDialogPhotos$54$MessagesStorage(long j, int i, int i2, int i3) {
        SQLiteCursor sQLiteCursor;
        if (j != 0) {
            try {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM user_photos WHERE uid = %d AND id < %d ORDER BY rowid ASC LIMIT %d", new Object[]{Integer.valueOf(i), Long.valueOf(j), Integer.valueOf(i2)}), new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        } else {
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM user_photos WHERE uid = %d ORDER BY rowid ASC LIMIT %d", new Object[]{Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
        }
        TLRPC$TL_photos_photos tLRPC$TL_photos_photos = new TLRPC$TL_photos_photos();
        ArrayList arrayList = new ArrayList();
        while (sQLiteCursor.next()) {
            NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(0);
            if (byteBufferValue != null) {
                TLRPC$Photo TLdeserialize = TLRPC$Photo.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                if (byteBufferValue.remaining() > 0) {
                    arrayList.add(TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                } else {
                    arrayList.add((Object) null);
                }
                byteBufferValue.reuse();
                tLRPC$TL_photos_photos.photos.add(TLdeserialize);
            }
        }
        sQLiteCursor.dispose();
        Utilities.stageQueue.postRunnable(new Runnable(tLRPC$TL_photos_photos, arrayList, i, i2, j, i3) {
            public final /* synthetic */ TLRPC$photos_Photos f$1;
            public final /* synthetic */ ArrayList f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ long f$5;
            public final /* synthetic */ int f$6;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r8;
            }

            public final void run() {
                MessagesStorage.this.lambda$null$53$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$53 */
    public /* synthetic */ void lambda$null$53$MessagesStorage(TLRPC$photos_Photos tLRPC$photos_Photos, ArrayList arrayList, int i, int i2, long j, int i3) {
        getMessagesController().processLoadedUserPhotos(tLRPC$photos_Photos, arrayList, i, i2, j, true, i3);
    }

    public void clearUserPhotos(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearUserPhotos$55$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$clearUserPhotos$55 */
    public /* synthetic */ void lambda$clearUserPhotos$55$MessagesStorage(int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + i).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearUserPhoto(int i, long j) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearUserPhoto$56$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$clearUserPhoto$56 */
    public /* synthetic */ void lambda$clearUserPhoto$56$MessagesStorage(int i, long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + i + " AND id = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetDialogs(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i, int i2, int i3, int i4, int i5, LongSparseArray<TLRPC$Dialog> longSparseArray, LongSparseArray<MessageObject> longSparseArray2, TLRPC$Message tLRPC$Message, int i6) {
        this.storageQueue.postRunnable(new Runnable(tLRPC$messages_Dialogs, i6, i2, i3, i4, i5, tLRPC$Message, i, longSparseArray, longSparseArray2) {
            public final /* synthetic */ TLRPC$messages_Dialogs f$1;
            public final /* synthetic */ LongSparseArray f$10;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;
            public final /* synthetic */ int f$6;
            public final /* synthetic */ TLRPC$Message f$7;
            public final /* synthetic */ int f$8;
            public final /* synthetic */ LongSparseArray f$9;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
                this.f$9 = r10;
                this.f$10 = r11;
            }

            public final void run() {
                MessagesStorage.this.lambda$resetDialogs$58$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$resetDialogs$58 */
    public /* synthetic */ void lambda$resetDialogs$58$MessagesStorage(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i, int i2, int i3, int i4, int i5, TLRPC$Message tLRPC$Message, int i6, LongSparseArray longSparseArray, LongSparseArray longSparseArray2) {
        long j;
        int i7;
        int i8;
        int i9;
        long j2;
        long j3;
        TLRPC$messages_Dialogs tLRPC$messages_Dialogs2 = tLRPC$messages_Dialogs;
        TLRPC$Message tLRPC$Message2 = tLRPC$Message;
        try {
            ArrayList arrayList = new ArrayList();
            int size = tLRPC$messages_Dialogs2.dialogs.size() - i;
            LongSparseArray longSparseArray3 = new LongSparseArray();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            for (int i10 = i; i10 < tLRPC$messages_Dialogs2.dialogs.size(); i10++) {
                arrayList3.add(Long.valueOf(tLRPC$messages_Dialogs2.dialogs.get(i10).id));
            }
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT did, pinned FROM dialogs WHERE 1", new Object[0]);
            int i11 = 0;
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                int intValue = queryFinalized.intValue(1);
                int i12 = (int) longValue;
                if (i12 != 0) {
                    arrayList.add(Integer.valueOf(i12));
                    if (intValue > 0) {
                        i11 = Math.max(intValue, i11);
                        longSparseArray3.put(longValue, Integer.valueOf(intValue));
                        arrayList2.add(Long.valueOf(longValue));
                    }
                }
            }
            Collections.sort(arrayList2, new Object(longSparseArray3) {
                public final /* synthetic */ LongSparseArray f$0;

                {
                    this.f$0 = r1;
                }

                public final int compare(Object obj, Object obj2) {
                    return MessagesStorage.lambda$null$57(this.f$0, (Long) obj, (Long) obj2);
                }

                public /* synthetic */ Comparator reversed() {
                    return Comparator.CC.$default$reversed(this);
                }

                public /* synthetic */ java.util.Comparator thenComparing(Function function) {
                    return Comparator.CC.$default$thenComparing((java.util.Comparator) this, function);
                }

                public /* synthetic */ java.util.Comparator thenComparing(Function function, java.util.Comparator comparator) {
                    return Comparator.CC.$default$thenComparing(this, function, comparator);
                }

                public /* synthetic */ java.util.Comparator thenComparing(java.util.Comparator comparator) {
                    return Comparator.CC.$default$thenComparing((java.util.Comparator) this, comparator);
                }

                public /* synthetic */ java.util.Comparator thenComparingDouble(ToDoubleFunction toDoubleFunction) {
                    return Comparator.CC.$default$thenComparingDouble(this, toDoubleFunction);
                }

                public /* synthetic */ java.util.Comparator thenComparingInt(ToIntFunction toIntFunction) {
                    return Comparator.CC.$default$thenComparingInt(this, toIntFunction);
                }

                public /* synthetic */ java.util.Comparator thenComparingLong(ToLongFunction toLongFunction) {
                    return Comparator.CC.$default$thenComparingLong(this, toLongFunction);
                }
            });
            while (arrayList2.size() < size) {
                arrayList2.add(0, 0L);
            }
            queryFinalized.dispose();
            String str = "(" + TextUtils.join(",", arrayList) + ")";
            this.database.beginTransaction();
            this.database.executeFast("DELETE FROM chat_pinned_count WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM chat_pinned_v2 WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM dialogs WHERE did IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM polls WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM bot_keyboard WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_v2 WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages_holes WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid IN " + str).stepThis().dispose();
            this.database.commitTransaction();
            for (int i13 = 0; i13 < size; i13++) {
                TLRPC$Dialog tLRPC$Dialog = tLRPC$messages_Dialogs2.dialogs.get(i + i13);
                if (!(tLRPC$Dialog instanceof TLRPC$TL_dialog) || tLRPC$Dialog.pinned) {
                    int indexOf = arrayList2.indexOf(Long.valueOf(tLRPC$Dialog.id));
                    int indexOf2 = arrayList3.indexOf(Long.valueOf(tLRPC$Dialog.id));
                    if (!(indexOf == -1 || indexOf2 == -1)) {
                        if (indexOf == indexOf2) {
                            Integer num = (Integer) longSparseArray3.get(tLRPC$Dialog.id);
                            if (num != null) {
                                tLRPC$Dialog.pinnedNum = num.intValue();
                            }
                        } else {
                            Integer num2 = (Integer) longSparseArray3.get(((Long) arrayList2.get(indexOf2)).longValue());
                            if (num2 != null) {
                                tLRPC$Dialog.pinnedNum = num2.intValue();
                            }
                        }
                    }
                    if (tLRPC$Dialog.pinnedNum == 0) {
                        tLRPC$Dialog.pinnedNum = (size - i13) + i11;
                    }
                }
            }
            putDialogsInternal(tLRPC$messages_Dialogs2, 0);
            lambda$saveDiffParams$25(i2, i3, i4, i5);
            int totalDialogsCount = getUserConfig().getTotalDialogsCount(0);
            getUserConfig().getDialogLoadOffsets(0);
            int size2 = totalDialogsCount + tLRPC$messages_Dialogs2.dialogs.size();
            int i14 = tLRPC$Message2.id;
            int i15 = tLRPC$Message2.date;
            TLRPC$Peer tLRPC$Peer = tLRPC$Message2.peer_id;
            int i16 = tLRPC$Peer.channel_id;
            if (i16 == 0) {
                i8 = tLRPC$Peer.chat_id;
                if (i8 != 0) {
                    int i17 = 0;
                    while (true) {
                        if (i17 >= tLRPC$messages_Dialogs2.chats.size()) {
                            j2 = 0;
                            break;
                        }
                        TLRPC$Chat tLRPC$Chat = tLRPC$messages_Dialogs2.chats.get(i17);
                        if (tLRPC$Chat.id == i8) {
                            j2 = tLRPC$Chat.access_hash;
                            break;
                        }
                        i17++;
                    }
                    j = j2;
                    i9 = 0;
                } else {
                    i9 = tLRPC$Peer.user_id;
                    if (i9 != 0) {
                        int i18 = 0;
                        while (i18 < tLRPC$messages_Dialogs2.users.size()) {
                            TLRPC$User tLRPC$User = tLRPC$messages_Dialogs2.users.get(i18);
                            if (tLRPC$User.id == i9) {
                                j = tLRPC$User.access_hash;
                                i8 = 0;
                            } else {
                                i18++;
                            }
                        }
                    } else {
                        i9 = 0;
                    }
                    i8 = 0;
                    i7 = 0;
                    j = 0;
                }
                i7 = 0;
                break;
            }
            int i19 = 0;
            while (true) {
                if (i19 >= tLRPC$messages_Dialogs2.chats.size()) {
                    j3 = 0;
                    break;
                }
                TLRPC$Chat tLRPC$Chat2 = tLRPC$messages_Dialogs2.chats.get(i19);
                if (tLRPC$Chat2.id == i16) {
                    j3 = tLRPC$Chat2.access_hash;
                    break;
                }
                i19++;
            }
            j = j3;
            i7 = i16;
            i9 = 0;
            i8 = 0;
            int i20 = 0;
            while (i20 < 2) {
                getUserConfig().setDialogsLoadOffset(i20, i14, i15, i9, i8, i7, j);
                int i21 = i20;
                getUserConfig().setTotalDialogsCount(i21, size2);
                i20 = i21 + 1;
            }
            getUserConfig().draftsLoaded = false;
            getUserConfig().saveConfig(false);
            getMessagesController().completeDialogsReset(tLRPC$messages_Dialogs, i6, i2, i3, i4, i5, longSparseArray, longSparseArray2, tLRPC$Message);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    static /* synthetic */ int lambda$null$57(LongSparseArray longSparseArray, Long l, Long l2) {
        Integer num = (Integer) longSparseArray.get(l.longValue());
        Integer num2 = (Integer) longSparseArray.get(l2.longValue());
        if (num.intValue() < num2.intValue()) {
            return 1;
        }
        return num.intValue() > num2.intValue() ? -1 : 0;
    }

    public void putDialogPhotos(int i, TLRPC$photos_Photos tLRPC$photos_Photos, ArrayList<TLRPC$Message> arrayList) {
        if (tLRPC$photos_Photos != null) {
            this.storageQueue.postRunnable(new Runnable(i, tLRPC$photos_Photos, arrayList) {
                public final /* synthetic */ int f$1;
                public final /* synthetic */ TLRPC$photos_Photos f$2;
                public final /* synthetic */ ArrayList f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putDialogPhotos$59$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putDialogPhotos$59 */
    public /* synthetic */ void lambda$putDialogPhotos$59$MessagesStorage(int i, TLRPC$photos_Photos tLRPC$photos_Photos, ArrayList arrayList) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + i).stepThis().dispose();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_photos VALUES(?, ?, ?)");
            int size = tLRPC$photos_Photos.photos.size();
            for (int i2 = 0; i2 < size; i2++) {
                TLRPC$Photo tLRPC$Photo = tLRPC$photos_Photos.photos.get(i2);
                if (!(tLRPC$Photo instanceof TLRPC$TL_photoEmpty)) {
                    executeFast.requery();
                    int objectSize = tLRPC$Photo.getObjectSize();
                    if (arrayList != null) {
                        objectSize += ((TLRPC$Message) arrayList.get(i2)).getObjectSize();
                    }
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(objectSize);
                    tLRPC$Photo.serializeToStream(nativeByteBuffer);
                    if (arrayList != null) {
                        ((TLRPC$Message) arrayList.get(i2)).serializeToStream(nativeByteBuffer);
                    }
                    executeFast.bindInteger(1, i);
                    executeFast.bindLong(2, tLRPC$Photo.id);
                    executeFast.bindByteBuffer(3, nativeByteBuffer);
                    executeFast.step();
                    nativeByteBuffer.reuse();
                }
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void emptyMessagesMedia(ArrayList<Integer> arrayList) {
        this.storageQueue.postRunnable(new Runnable(arrayList) {
            public final /* synthetic */ ArrayList f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$emptyMessagesMedia$62$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x0117 A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x011d A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x0128 A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x012a A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x013a A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x013c A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x014e A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:49:0x0162 A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x016b A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:57:0x0176 A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0182 A[Catch:{ Exception -> 0x01a5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x0185 A[SYNTHETIC] */
    /* renamed from: lambda$emptyMessagesMedia$62 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$emptyMessagesMedia$62$MessagesStorage(java.util.ArrayList r18) {
        /*
            r17 = this;
            r7 = r17
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x01a5 }
            r0.<init>()     // Catch:{ Exception -> 0x01a5 }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x01a5 }
            r8.<init>()     // Catch:{ Exception -> 0x01a5 }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x01a5 }
            r9.<init>()     // Catch:{ Exception -> 0x01a5 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x01a5 }
            r10.<init>()     // Catch:{ Exception -> 0x01a5 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x01a5 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x01a5 }
            java.lang.String r3 = "SELECT data, mid, date, uid FROM messages WHERE mid IN (%s)"
            r11 = 1
            java.lang.Object[] r4 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x01a5 }
            java.lang.String r5 = ","
            r6 = r18
            java.lang.String r5 = android.text.TextUtils.join(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            r12 = 0
            r4[r12] = r5     // Catch:{ Exception -> 0x01a5 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x01a5 }
            java.lang.Object[] r3 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x01a5 }
            org.telegram.SQLite.SQLiteCursor r13 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x01a5 }
        L_0x0034:
            boolean r1 = r13.next()     // Catch:{ Exception -> 0x01a5 }
            r14 = 3
            r15 = 2
            if (r1 == 0) goto L_0x00a4
            org.telegram.tgnet.NativeByteBuffer r1 = r13.byteBufferValue(r12)     // Catch:{ Exception -> 0x01a5 }
            if (r1 == 0) goto L_0x00a2
            int r2 = r1.readInt32(r12)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r1, r2, r12)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.messenger.UserConfig r2 = r17.getUserConfig()     // Catch:{ Exception -> 0x01a5 }
            int r2 = r2.clientUserId     // Catch:{ Exception -> 0x01a5 }
            r6.readAttachPath(r1, r2)     // Catch:{ Exception -> 0x01a5 }
            r1.reuse()     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r6.media     // Catch:{ Exception -> 0x01a5 }
            if (r1 == 0) goto L_0x00a2
            r16 = 1
            r1 = r17
            r2 = r6
            r3 = r0
            r4 = r9
            r5 = r8
            r12 = r6
            r6 = r16
            boolean r1 = r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x01a5 }
            if (r1 != 0) goto L_0x006c
            goto L_0x00a2
        L_0x006c:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r12.media     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.TLRPC$Document r2 = r1.document     // Catch:{ Exception -> 0x01a5 }
            if (r2 == 0) goto L_0x007a
            org.telegram.tgnet.TLRPC$TL_documentEmpty r2 = new org.telegram.tgnet.TLRPC$TL_documentEmpty     // Catch:{ Exception -> 0x01a5 }
            r2.<init>()     // Catch:{ Exception -> 0x01a5 }
            r1.document = r2     // Catch:{ Exception -> 0x01a5 }
            goto L_0x0085
        L_0x007a:
            org.telegram.tgnet.TLRPC$Photo r2 = r1.photo     // Catch:{ Exception -> 0x01a5 }
            if (r2 == 0) goto L_0x0085
            org.telegram.tgnet.TLRPC$TL_photoEmpty r2 = new org.telegram.tgnet.TLRPC$TL_photoEmpty     // Catch:{ Exception -> 0x01a5 }
            r2.<init>()     // Catch:{ Exception -> 0x01a5 }
            r1.photo = r2     // Catch:{ Exception -> 0x01a5 }
        L_0x0085:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r12.media     // Catch:{ Exception -> 0x01a5 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x01a5 }
            r2 = r2 & -2
            r1.flags = r2     // Catch:{ Exception -> 0x01a5 }
            int r1 = r13.intValue(r11)     // Catch:{ Exception -> 0x01a5 }
            r12.id = r1     // Catch:{ Exception -> 0x01a5 }
            int r1 = r13.intValue(r15)     // Catch:{ Exception -> 0x01a5 }
            r12.date = r1     // Catch:{ Exception -> 0x01a5 }
            long r1 = r13.longValue(r14)     // Catch:{ Exception -> 0x01a5 }
            r12.dialog_id = r1     // Catch:{ Exception -> 0x01a5 }
            r10.add(r12)     // Catch:{ Exception -> 0x01a5 }
        L_0x00a2:
            r12 = 0
            goto L_0x0034
        L_0x00a4:
            r13.dispose()     // Catch:{ Exception -> 0x01a5 }
            r7.deleteFromDownloadQueue(r9, r11)     // Catch:{ Exception -> 0x01a5 }
            boolean r1 = r10.isEmpty()     // Catch:{ Exception -> 0x01a5 }
            if (r1 != 0) goto L_0x0194
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x01a5 }
            java.lang.String r2 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x01a5 }
            r2 = 0
        L_0x00b9:
            int r3 = r10.size()     // Catch:{ Exception -> 0x01a5 }
            if (r2 >= r3) goto L_0x0189
            java.lang.Object r3 = r10.get(r2)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC$Message) r3     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.NativeByteBuffer r4 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01a5 }
            int r5 = r3.getObjectSize()     // Catch:{ Exception -> 0x01a5 }
            r4.<init>((int) r5)     // Catch:{ Exception -> 0x01a5 }
            r3.serializeToStream(r4)     // Catch:{ Exception -> 0x01a5 }
            r1.requery()     // Catch:{ Exception -> 0x01a5 }
            int r5 = r3.id     // Catch:{ Exception -> 0x01a5 }
            long r5 = (long) r5     // Catch:{ Exception -> 0x01a5 }
            r1.bindLong(r11, r5)     // Catch:{ Exception -> 0x01a5 }
            long r5 = r3.dialog_id     // Catch:{ Exception -> 0x01a5 }
            r1.bindLong(r15, r5)     // Catch:{ Exception -> 0x01a5 }
            int r5 = org.telegram.messenger.MessageObject.getUnreadFlags(r3)     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r14, r5)     // Catch:{ Exception -> 0x01a5 }
            r5 = 4
            int r6 = r3.send_state     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            r5 = 5
            int r6 = r3.date     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            r5 = 6
            r1.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x01a5 }
            r5 = 7
            boolean r6 = org.telegram.messenger.MessageObject.isOut(r3)     // Catch:{ Exception -> 0x01a5 }
            if (r6 != 0) goto L_0x0104
            boolean r6 = r3.from_scheduled     // Catch:{ Exception -> 0x01a5 }
            if (r6 == 0) goto L_0x0102
            goto L_0x0104
        L_0x0102:
            r6 = 0
            goto L_0x0105
        L_0x0104:
            r6 = 1
        L_0x0105:
            r1.bindInteger(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            r5 = 8
            int r6 = r3.ttl     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            int r5 = r3.flags     // Catch:{ Exception -> 0x01a5 }
            r5 = r5 & 1024(0x400, float:1.435E-42)
            r6 = 9
            if (r5 == 0) goto L_0x011d
            int r5 = r3.views     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r6, r5)     // Catch:{ Exception -> 0x01a5 }
            goto L_0x0124
        L_0x011d:
            int r5 = r7.getMessageMediaType(r3)     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r6, r5)     // Catch:{ Exception -> 0x01a5 }
        L_0x0124:
            int r5 = r3.stickerVerified     // Catch:{ Exception -> 0x01a5 }
            if (r5 != 0) goto L_0x012a
            r5 = 1
            goto L_0x012f
        L_0x012a:
            if (r5 != r15) goto L_0x012e
            r5 = 2
            goto L_0x012f
        L_0x012e:
            r5 = 0
        L_0x012f:
            r6 = 10
            r1.bindInteger(r6, r5)     // Catch:{ Exception -> 0x01a5 }
            r5 = 11
            boolean r6 = r3.mentioned     // Catch:{ Exception -> 0x01a5 }
            if (r6 == 0) goto L_0x013c
            r6 = 1
            goto L_0x013d
        L_0x013c:
            r6 = 0
        L_0x013d:
            r1.bindInteger(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            r5 = 12
            int r6 = r3.forwards     // Catch:{ Exception -> 0x01a5 }
            r1.bindInteger(r5, r6)     // Catch:{ Exception -> 0x01a5 }
            r5 = 0
            org.telegram.tgnet.TLRPC$TL_messageReplies r6 = r3.replies     // Catch:{ Exception -> 0x01a5 }
            r9 = 13
            if (r6 == 0) goto L_0x0162
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r6 = r3.replies     // Catch:{ Exception -> 0x01a5 }
            int r6 = r6.getObjectSize()     // Catch:{ Exception -> 0x01a5 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r6 = r3.replies     // Catch:{ Exception -> 0x01a5 }
            r6.serializeToStream(r5)     // Catch:{ Exception -> 0x01a5 }
            r1.bindByteBuffer((int) r9, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x01a5 }
            goto L_0x0165
        L_0x0162:
            r1.bindNull(r9)     // Catch:{ Exception -> 0x01a5 }
        L_0x0165:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r3.reply_to     // Catch:{ Exception -> 0x01a5 }
            r6 = 14
            if (r3 == 0) goto L_0x0176
            int r9 = r3.reply_to_top_id     // Catch:{ Exception -> 0x01a5 }
            if (r9 == 0) goto L_0x0170
            goto L_0x0172
        L_0x0170:
            int r9 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01a5 }
        L_0x0172:
            r1.bindInteger(r6, r9)     // Catch:{ Exception -> 0x01a5 }
            goto L_0x017a
        L_0x0176:
            r3 = 0
            r1.bindInteger(r6, r3)     // Catch:{ Exception -> 0x01a5 }
        L_0x017a:
            r1.step()     // Catch:{ Exception -> 0x01a5 }
            r4.reuse()     // Catch:{ Exception -> 0x01a5 }
            if (r5 == 0) goto L_0x0185
            r5.reuse()     // Catch:{ Exception -> 0x01a5 }
        L_0x0185:
            int r2 = r2 + 1
            goto L_0x00b9
        L_0x0189:
            r1.dispose()     // Catch:{ Exception -> 0x01a5 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$djERWteksiEhGND45elbvj7dXuw r1 = new org.telegram.messenger.-$$Lambda$MessagesStorage$djERWteksiEhGND45elbvj7dXuw     // Catch:{ Exception -> 0x01a5 }
            r1.<init>(r10)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01a5 }
        L_0x0194:
            org.telegram.messenger.-$$Lambda$MessagesStorage$LhRc9MvIKuc2TkFmdHT9c6_hb38 r1 = new org.telegram.messenger.-$$Lambda$MessagesStorage$LhRc9MvIKuc2TkFmdHT9c6_hb38     // Catch:{ Exception -> 0x01a5 }
            r1.<init>(r8)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01a5 }
            org.telegram.messenger.FileLoader r1 = r17.getFileLoader()     // Catch:{ Exception -> 0x01a5 }
            r2 = 0
            r1.deleteFiles(r0, r2)     // Catch:{ Exception -> 0x01a5 }
            goto L_0x01a9
        L_0x01a5:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x01a9:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$emptyMessagesMedia$62$MessagesStorage(java.util.ArrayList):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$60 */
    public /* synthetic */ void lambda$null$60$MessagesStorage(ArrayList arrayList) {
        for (int i = 0; i < arrayList.size(); i++) {
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, arrayList.get(i));
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$61 */
    public /* synthetic */ void lambda$null$61$MessagesStorage(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    public void updateMessagePollResults(long j, TLRPC$Poll tLRPC$Poll, TLRPC$PollResults tLRPC$PollResults) {
        this.storageQueue.postRunnable(new Runnable(j, tLRPC$Poll, tLRPC$PollResults) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ TLRPC$Poll f$2;
            public final /* synthetic */ TLRPC$PollResults f$3;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateMessagePollResults$63$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateMessagePollResults$63 */
    public /* synthetic */ void lambda$updateMessagePollResults$63$MessagesStorage(long j, TLRPC$Poll tLRPC$Poll, TLRPC$PollResults tLRPC$PollResults) {
        ArrayList arrayList = null;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM polls WHERE id = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            while (queryFinalized.next()) {
                if (arrayList == null) {
                    arrayList = new ArrayList();
                }
                arrayList.add(Long.valueOf(queryFinalized.longValue(0)));
            }
            queryFinalized.dispose();
            if (arrayList != null) {
                this.database.beginTransaction();
                int size = arrayList.size();
                for (int i = 0; i < size; i++) {
                    Long l = (Long) arrayList.get(i);
                    SQLiteDatabase sQLiteDatabase = this.database;
                    Locale locale = Locale.US;
                    SQLiteCursor queryFinalized2 = sQLiteDatabase.queryFinalized(String.format(locale, "SELECT data FROM messages WHERE mid = %d", new Object[]{l}), new Object[0]);
                    if (queryFinalized2.next()) {
                        NativeByteBuffer byteBufferValue = queryFinalized2.byteBufferValue(0);
                        if (byteBufferValue != null) {
                            TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                            byteBufferValue.reuse();
                            TLRPC$MessageMedia tLRPC$MessageMedia = TLdeserialize.media;
                            if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPoll) {
                                TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll = (TLRPC$TL_messageMediaPoll) tLRPC$MessageMedia;
                                if (tLRPC$Poll != null) {
                                    tLRPC$TL_messageMediaPoll.poll = tLRPC$Poll;
                                }
                                if (tLRPC$PollResults != null) {
                                    MessageObject.updatePollResults(tLRPC$TL_messageMediaPoll, tLRPC$PollResults);
                                }
                                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET data = ? WHERE mid = ?");
                                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(TLdeserialize.getObjectSize());
                                TLdeserialize.serializeToStream(nativeByteBuffer);
                                executeFast.requery();
                                executeFast.bindByteBuffer(1, nativeByteBuffer);
                                executeFast.bindLong(2, l.longValue());
                                executeFast.step();
                                nativeByteBuffer.reuse();
                                executeFast.dispose();
                            }
                        }
                    } else {
                        this.database.executeFast(String.format(locale, "DELETE FROM polls WHERE mid = %d", new Object[]{l})).stepThis().dispose();
                    }
                    queryFinalized2.dispose();
                }
                this.database.commitTransaction();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateMessageReactions(long j, int i, int i2, TLRPC$TL_messageReactions tLRPC$TL_messageReactions) {
        this.storageQueue.postRunnable(new Runnable(i, i2, tLRPC$TL_messageReactions) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ TLRPC$TL_messageReactions f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateMessageReactions$64$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateMessageReactions$64 */
    public /* synthetic */ void lambda$updateMessageReactions$64$MessagesStorage(int i, int i2, TLRPC$TL_messageReactions tLRPC$TL_messageReactions) {
        NativeByteBuffer byteBufferValue;
        try {
            this.database.beginTransaction();
            long j = (long) i;
            if (i2 != 0) {
                j |= ((long) i2) << 32;
            }
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM messages WHERE mid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                if (TLdeserialize != null) {
                    TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                    byteBufferValue.reuse();
                    MessageObject.updateReactions(TLdeserialize, tLRPC$TL_messageReactions);
                    SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET data = ? WHERE mid = ?");
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(TLdeserialize.getObjectSize());
                    TLdeserialize.serializeToStream(nativeByteBuffer);
                    executeFast.requery();
                    executeFast.bindByteBuffer(1, nativeByteBuffer);
                    executeFast.bindLong(2, j);
                    executeFast.step();
                    nativeByteBuffer.reuse();
                    executeFast.dispose();
                } else {
                    byteBufferValue.reuse();
                }
            }
            queryFinalized.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getNewTask(ArrayList<Integer> arrayList, int i) {
        this.storageQueue.postRunnable(new Runnable(arrayList, i) {
            public final /* synthetic */ ArrayList f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$getNewTask$65$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:29:0x0093, code lost:
        if (r5 != 0) goto L_0x0095;
     */
    /* renamed from: lambda$getNewTask$65 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getNewTask$65$MessagesStorage(java.util.ArrayList r12, int r13) {
        /*
            r11 = this;
            r0 = 32
            r1 = 1
            r2 = 0
            if (r12 == 0) goto L_0x0055
            java.lang.String r3 = ","
            if (r13 == 0) goto L_0x0038
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00a6 }
            r4.<init>()     // Catch:{ Exception -> 0x00a6 }
            int r5 = r12.size()     // Catch:{ Exception -> 0x00a6 }
            r6 = 0
        L_0x0014:
            if (r6 >= r5) goto L_0x0033
            java.lang.Object r7 = r12.get(r6)     // Catch:{ Exception -> 0x00a6 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x00a6 }
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x00a6 }
            long r7 = (long) r7     // Catch:{ Exception -> 0x00a6 }
            long r9 = (long) r13     // Catch:{ Exception -> 0x00a6 }
            long r9 = r9 << r0
            long r7 = r7 | r9
            int r9 = r4.length()     // Catch:{ Exception -> 0x00a6 }
            if (r9 <= 0) goto L_0x002d
            r4.append(r3)     // Catch:{ Exception -> 0x00a6 }
        L_0x002d:
            r4.append(r7)     // Catch:{ Exception -> 0x00a6 }
            int r6 = r6 + 1
            goto L_0x0014
        L_0x0033:
            java.lang.String r12 = r4.toString()     // Catch:{ Exception -> 0x00a6 }
            goto L_0x003c
        L_0x0038:
            java.lang.String r12 = android.text.TextUtils.join(r3, r12)     // Catch:{ Exception -> 0x00a6 }
        L_0x003c:
            org.telegram.SQLite.SQLiteDatabase r13 = r11.database     // Catch:{ Exception -> 0x00a6 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r4 = "DELETE FROM enc_tasks_v2 WHERE mid IN(%s)"
            java.lang.Object[] r5 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x00a6 }
            r5[r2] = r12     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r12 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r13.executeFast(r12)     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.stepThis()     // Catch:{ Exception -> 0x00a6 }
            r12.dispose()     // Catch:{ Exception -> 0x00a6 }
        L_0x0055:
            r12 = 0
            org.telegram.SQLite.SQLiteDatabase r13 = r11.database     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r3 = "SELECT mid, date, media FROM enc_tasks_v2 WHERE date = (SELECT min(date) FROM enc_tasks_v2)"
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLiteCursor r13 = r13.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x00a6 }
            r3 = -1
            r4 = -1
            r5 = 0
            r6 = 0
        L_0x0064:
            boolean r7 = r13.next()     // Catch:{ Exception -> 0x00a6 }
            if (r7 == 0) goto L_0x009b
            long r5 = r13.longValue(r2)     // Catch:{ Exception -> 0x00a6 }
            if (r4 != r3) goto L_0x0076
            long r7 = r5 >> r0
            int r4 = (int) r7     // Catch:{ Exception -> 0x00a6 }
            if (r4 >= 0) goto L_0x0076
            r4 = 0
        L_0x0076:
            int r7 = r13.intValue(r1)     // Catch:{ Exception -> 0x00a6 }
            if (r12 != 0) goto L_0x0081
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x00a6 }
            r12.<init>()     // Catch:{ Exception -> 0x00a6 }
        L_0x0081:
            int r6 = (int) r5     // Catch:{ Exception -> 0x00a6 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x00a6 }
            r12.add(r5)     // Catch:{ Exception -> 0x00a6 }
            r5 = 2
            int r5 = r13.intValue(r5)     // Catch:{ Exception -> 0x00a6 }
            if (r5 != r3) goto L_0x0093
            if (r6 <= 0) goto L_0x0097
            goto L_0x0095
        L_0x0093:
            if (r5 == 0) goto L_0x0097
        L_0x0095:
            r5 = 1
            goto L_0x0098
        L_0x0097:
            r5 = 0
        L_0x0098:
            r6 = r5
            r5 = r7
            goto L_0x0064
        L_0x009b:
            r13.dispose()     // Catch:{ Exception -> 0x00a6 }
            org.telegram.messenger.MessagesController r13 = r11.getMessagesController()     // Catch:{ Exception -> 0x00a6 }
            r13.processLoadedDeleteTask(r5, r12, r6, r4)     // Catch:{ Exception -> 0x00a6 }
            goto L_0x00aa
        L_0x00a6:
            r12 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r12)
        L_0x00aa:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getNewTask$65$MessagesStorage(java.util.ArrayList, int):void");
    }

    public void markMentionMessageAsRead(int i, int i2, long j) {
        this.storageQueue.postRunnable(new Runnable(i, i2, j) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ long f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMentionMessageAsRead$66$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMentionMessageAsRead$66 */
    public /* synthetic */ void lambda$markMentionMessageAsRead$66$MessagesStorage(int i, int i2, long j) {
        long j2 = (long) i;
        if (i2 != 0) {
            j2 |= ((long) i2) << 32;
        }
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            sQLiteDatabase.executeFast(String.format(locale, "UPDATE messages SET read_state = read_state | 2 WHERE mid = %d", new Object[]{Long.valueOf(j2)})).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase2 = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase2.queryFinalized("SELECT unread_count_i FROM dialogs WHERE did = " + j, new Object[0]);
            int max = queryFinalized.next() ? Math.max(0, queryFinalized.intValue(0) - 1) : 0;
            queryFinalized.dispose();
            this.database.executeFast(String.format(locale, "UPDATE dialogs SET unread_count_i = %d WHERE did = %d", new Object[]{Integer.valueOf(max), Long.valueOf(j)})).stepThis().dispose();
            LongSparseArray longSparseArray = new LongSparseArray(1);
            longSparseArray.put(j, Integer.valueOf(max));
            if (max == 0) {
                updateFiltersReadCounter((LongSparseArray<Integer>) null, longSparseArray, true);
            }
            getMessagesController().processDialogsUpdateRead((LongSparseArray<Integer>) null, longSparseArray);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessageAsMention(long j) {
        this.storageQueue.postRunnable(new Runnable(j) {
            public final /* synthetic */ long f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessageAsMention$67$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMessageAsMention$67 */
    public /* synthetic */ void lambda$markMessageAsMention$67$MessagesStorage(long j) {
        try {
            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET mention = 1, read_state = read_state & ~2 WHERE mid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetMentionsCount(long j, int i) {
        this.storageQueue.postRunnable(new Runnable(j, i) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$resetMentionsCount$68$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$resetMentionsCount$68 */
    public /* synthetic */ void lambda$resetMentionsCount$68$MessagesStorage(long j, int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT unread_count_i FROM dialogs WHERE did = " + j, new Object[0]);
            int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : 0;
            queryFinalized.dispose();
            if (intValue != 0 || i != 0) {
                if (i == 0) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(j)})).stepThis().dispose();
                }
                this.database.executeFast(String.format(Locale.US, "UPDATE dialogs SET unread_count_i = %d WHERE did = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j)})).stepThis().dispose();
                LongSparseArray longSparseArray = new LongSparseArray(1);
                longSparseArray.put(j, Integer.valueOf(i));
                getMessagesController().processDialogsUpdateRead((LongSparseArray<Integer>) null, longSparseArray);
                if (i == 0) {
                    updateFiltersReadCounter((LongSparseArray<Integer>) null, longSparseArray, true);
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void createTaskForMid(int i, int i2, int i3, int i4, int i5, boolean z) {
        this.storageQueue.postRunnable(new Runnable(i3, i4, i5, i, i2, z) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;
            public final /* synthetic */ boolean f$6;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
            }

            public final void run() {
                MessagesStorage.this.lambda$createTaskForMid$70$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createTaskForMid$70 */
    public /* synthetic */ void lambda$createTaskForMid$70$MessagesStorage(int i, int i2, int i3, int i4, int i5, boolean z) {
        try {
            int max = Math.max(i, i2) + i3;
            SparseArray sparseArray = new SparseArray();
            ArrayList arrayList = new ArrayList();
            long j = (long) i4;
            if (i5 != 0) {
                j |= ((long) i5) << 32;
            }
            arrayList.add(Long.valueOf(j));
            sparseArray.put(max, arrayList);
            AndroidUtilities.runOnUIThread(new Runnable(z, arrayList) {
                public final /* synthetic */ boolean f$1;
                public final /* synthetic */ ArrayList f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$69$MessagesStorage(this.f$1, this.f$2);
                }
            });
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?, ?)");
            for (int i6 = 0; i6 < sparseArray.size(); i6++) {
                int keyAt = sparseArray.keyAt(i6);
                ArrayList arrayList2 = (ArrayList) sparseArray.get(keyAt);
                for (int i7 = 0; i7 < arrayList2.size(); i7++) {
                    executeFast.requery();
                    executeFast.bindLong(1, ((Long) arrayList2.get(i7)).longValue());
                    executeFast.bindInteger(2, keyAt);
                    executeFast.bindInteger(3, 1);
                    executeFast.step();
                }
            }
            executeFast.dispose();
            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET ttl = 0 WHERE mid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            getMessagesController().didAddedNewTask(max, sparseArray);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$69 */
    public /* synthetic */ void lambda$null$69$MessagesStorage(boolean z, ArrayList arrayList) {
        if (!z) {
            markMessagesContentAsRead(arrayList, 0);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, arrayList);
    }

    public void createTaskForSecretChat(int i, int i2, int i3, int i4, ArrayList<Long> arrayList) {
        this.storageQueue.postRunnable(new Runnable(arrayList, i, i4, i2, i3) {
            public final /* synthetic */ ArrayList f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$createTaskForSecretChat$72$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$createTaskForSecretChat$72 */
    public /* synthetic */ void lambda$createTaskForSecretChat$72$MessagesStorage(ArrayList arrayList, int i, int i2, int i3, int i4) {
        SparseArray sparseArray;
        SQLiteCursor sQLiteCursor;
        ArrayList arrayList2 = arrayList;
        try {
            SparseArray sparseArray2 = new SparseArray();
            ArrayList arrayList3 = new ArrayList();
            StringBuilder sb = new StringBuilder();
            if (arrayList2 == null) {
                sparseArray = sparseArray2;
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, ttl FROM messages WHERE uid = %d AND out = %d AND read_state > 0 AND ttl > 0 AND date <= %d AND send_state = 0 AND media != 1", new Object[]{Long.valueOf(((long) i) << 32), Integer.valueOf(i2), Integer.valueOf(i3)}), new Object[0]);
            } else {
                sparseArray = sparseArray2;
                String join = TextUtils.join(",", arrayList2);
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT m.mid, m.ttl FROM messages as m INNER JOIN randoms as r ON m.mid = r.mid WHERE r.random_id IN (%s)", new Object[]{join}), new Object[0]);
            }
            int i5 = Integer.MAX_VALUE;
            while (sQLiteCursor.next()) {
                int intValue = sQLiteCursor.intValue(1);
                long intValue2 = (long) sQLiteCursor.intValue(0);
                if (arrayList2 != null) {
                    arrayList3.add(Long.valueOf(intValue2));
                }
                if (intValue > 0) {
                    int max = Math.max(i3, i4) + intValue;
                    i5 = Math.min(i5, max);
                    SparseArray sparseArray3 = sparseArray;
                    ArrayList arrayList4 = (ArrayList) sparseArray3.get(max);
                    if (arrayList4 == null) {
                        arrayList4 = new ArrayList();
                        sparseArray3.put(max, arrayList4);
                    }
                    if (sb.length() != 0) {
                        sb.append(",");
                    }
                    sb.append(intValue2);
                    arrayList4.add(Long.valueOf(intValue2));
                    sparseArray = sparseArray3;
                }
            }
            SparseArray sparseArray4 = sparseArray;
            sQLiteCursor.dispose();
            if (arrayList2 != null) {
                AndroidUtilities.runOnUIThread(new Runnable(arrayList3) {
                    public final /* synthetic */ ArrayList f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$71$MessagesStorage(this.f$1);
                    }
                });
            }
            if (sparseArray4.size() != 0) {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?, ?)");
                for (int i6 = 0; i6 < sparseArray4.size(); i6++) {
                    int keyAt = sparseArray4.keyAt(i6);
                    ArrayList arrayList5 = (ArrayList) sparseArray4.get(keyAt);
                    for (int i7 = 0; i7 < arrayList5.size(); i7++) {
                        executeFast.requery();
                        executeFast.bindLong(1, ((Long) arrayList5.get(i7)).longValue());
                        executeFast.bindInteger(2, keyAt);
                        executeFast.bindInteger(3, 0);
                        executeFast.step();
                    }
                }
                executeFast.dispose();
                this.database.commitTransaction();
                this.database.executeFast(String.format(Locale.US, "UPDATE messages SET ttl = 0 WHERE mid IN(%s)", new Object[]{sb.toString()})).stepThis().dispose();
                getMessagesController().didAddedNewTask(i5, sparseArray4);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$71 */
    public /* synthetic */ void lambda$null$71$MessagesStorage(ArrayList arrayList) {
        markMessagesContentAsRead(arrayList, 0);
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, arrayList);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v31, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v117, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v17, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v38, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v19, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v101, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v45, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v105, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v107, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v112, resolved type: int} */
    /* JADX WARNING: Code restructure failed: missing block: B:156:0x03c3, code lost:
        if (r5.indexOfKey((long) (-r3.id)) >= 0) goto L_0x03c5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:316:0x0650, code lost:
        if (r0.dialogsWithMentions.indexOfKey((long) (-r1.id)) < 0) goto L_0x0662;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:118:0x0308  */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x041e  */
    /* JADX WARNING: Removed duplicated region for block: B:195:0x0481  */
    /* JADX WARNING: Removed duplicated region for block: B:209:0x04b7  */
    /* JADX WARNING: Removed duplicated region for block: B:257:0x056d  */
    /* JADX WARNING: Removed duplicated region for block: B:406:0x079a  */
    /* JADX WARNING: Removed duplicated region for block: B:420:0x07d0  */
    /* JADX WARNING: Removed duplicated region for block: B:468:0x0886  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateFiltersReadCounter(android.util.LongSparseArray<java.lang.Integer> r27, android.util.LongSparseArray<java.lang.Integer> r28, boolean r29) throws java.lang.Exception {
        /*
            r26 = this;
            r0 = r26
            r1 = r28
            if (r27 == 0) goto L_0x000c
            int r2 = r27.size()
            if (r2 != 0) goto L_0x0016
        L_0x000c:
            if (r1 == 0) goto L_0x0a55
            int r2 = r28.size()
            if (r2 != 0) goto L_0x0016
            goto L_0x0a55
        L_0x0016:
            r2 = 0
            r3 = 0
        L_0x0018:
            r4 = 2
            if (r3 >= r4) goto L_0x004a
            r5 = 0
        L_0x001c:
            if (r5 >= r4) goto L_0x003f
            int[][] r6 = r0.contacts
            r6 = r6[r3]
            int[][] r7 = r0.nonContacts
            r7 = r7[r3]
            int[][] r8 = r0.bots
            r8 = r8[r3]
            int[][] r9 = r0.channels
            r9 = r9[r3]
            int[][] r10 = r0.groups
            r10 = r10[r3]
            r10[r5] = r2
            r9[r5] = r2
            r8[r5] = r2
            r7[r5] = r2
            r6[r5] = r2
            int r5 = r5 + 1
            goto L_0x001c
        L_0x003f:
            int[] r4 = r0.mentionChannels
            int[] r5 = r0.mentionGroups
            r5[r3] = r2
            r4[r3] = r2
            int r3 = r3 + 1
            goto L_0x0018
        L_0x004a:
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>()
            java.util.ArrayList r8 = new java.util.ArrayList
            r8.<init>()
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>()
            android.util.LongSparseArray r10 = new android.util.LongSparseArray
            r10.<init>()
            android.util.LongSparseArray r11 = new android.util.LongSparseArray
            r11.<init>()
            r12 = 0
        L_0x0073:
            if (r12 >= r4) goto L_0x0173
            if (r12 != 0) goto L_0x007a
            r14 = r27
            goto L_0x007b
        L_0x007a:
            r14 = r1
        L_0x007b:
            if (r14 != 0) goto L_0x0083
        L_0x007d:
            r18 = r3
            r21 = r11
            goto L_0x0169
        L_0x0083:
            r15 = 0
        L_0x0084:
            int r4 = r14.size()
            if (r15 >= r4) goto L_0x007d
            java.lang.Object r4 = r14.valueAt(r15)
            java.lang.Integer r4 = (java.lang.Integer) r4
            if (r29 == 0) goto L_0x00a1
            int r17 = r4.intValue()
            if (r17 != 0) goto L_0x0099
            goto L_0x00a1
        L_0x0099:
            r18 = r3
            r21 = r11
            r20 = r14
            goto L_0x015e
        L_0x00a1:
            if (r29 != 0) goto L_0x00aa
            int r17 = r4.intValue()
            if (r17 != 0) goto L_0x00aa
            goto L_0x0099
        L_0x00aa:
            r18 = r3
            long r2 = r14.keyAt(r15)
            if (r29 == 0) goto L_0x00c0
            if (r12 != 0) goto L_0x00ba
            android.util.LongSparseArray<java.lang.Integer> r4 = r0.dialogsWithUnread
            r4.remove(r2)
            goto L_0x00e0
        L_0x00ba:
            android.util.LongSparseArray<java.lang.Integer> r4 = r0.dialogsWithMentions
            r4.remove(r2)
            goto L_0x00e0
        L_0x00c0:
            android.util.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithMentions
            int r13 = r13.indexOfKey(r2)
            if (r13 >= 0) goto L_0x00d3
            android.util.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithUnread
            int r13 = r13.indexOfKey(r2)
            if (r13 >= 0) goto L_0x00d3
            r11.put(r2, r4)
        L_0x00d3:
            if (r12 != 0) goto L_0x00db
            android.util.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithUnread
            r13.put(r2, r4)
            goto L_0x00e0
        L_0x00db:
            android.util.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithMentions
            r13.put(r2, r4)
        L_0x00e0:
            int r4 = r10.indexOfKey(r2)
            if (r4 >= 0) goto L_0x011b
            org.telegram.SQLite.SQLiteDatabase r4 = r0.database
            java.lang.StringBuilder r13 = new java.lang.StringBuilder
            r13.<init>()
            r20 = r14
            java.lang.String r14 = "SELECT folder_id FROM dialogs WHERE did = "
            r13.append(r14)
            r13.append(r2)
            java.lang.String r13 = r13.toString()
            r21 = r11
            r14 = 0
            java.lang.Object[] r11 = new java.lang.Object[r14]
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r13, r11)
            boolean r11 = r4.next()
            if (r11 == 0) goto L_0x010f
            int r11 = r4.intValue(r14)
            goto L_0x0110
        L_0x010f:
            r11 = 0
        L_0x0110:
            r4.dispose()
            java.lang.Integer r4 = java.lang.Integer.valueOf(r11)
            r10.put(r2, r4)
            goto L_0x011f
        L_0x011b:
            r21 = r11
            r20 = r14
        L_0x011f:
            int r4 = (int) r2
            r11 = 32
            long r2 = r2 >> r11
            int r3 = (int) r2
            if (r4 == 0) goto L_0x014d
            if (r4 >= 0) goto L_0x013b
            int r2 = -r4
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)
            boolean r3 = r8.contains(r3)
            if (r3 != 0) goto L_0x015e
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r8.add(r2)
            goto L_0x015e
        L_0x013b:
            java.lang.Integer r2 = java.lang.Integer.valueOf(r4)
            boolean r2 = r7.contains(r2)
            if (r2 != 0) goto L_0x015e
            java.lang.Integer r2 = java.lang.Integer.valueOf(r4)
            r7.add(r2)
            goto L_0x015e
        L_0x014d:
            java.lang.Integer r2 = java.lang.Integer.valueOf(r3)
            boolean r2 = r9.contains(r2)
            if (r2 != 0) goto L_0x015e
            java.lang.Integer r2 = java.lang.Integer.valueOf(r3)
            r9.add(r2)
        L_0x015e:
            int r15 = r15 + 1
            r3 = r18
            r14 = r20
            r11 = r21
            r2 = 0
            goto L_0x0084
        L_0x0169:
            int r12 = r12 + 1
            r3 = r18
            r11 = r21
            r2 = 0
            r4 = 2
            goto L_0x0073
        L_0x0173:
            r18 = r3
            r21 = r11
            android.util.SparseArray r2 = new android.util.SparseArray
            r2.<init>()
            android.util.SparseArray r3 = new android.util.SparseArray
            r3.<init>()
            android.util.SparseArray r4 = new android.util.SparseArray
            r4.<init>()
            android.util.SparseArray r11 = new android.util.SparseArray
            r11.<init>()
            android.util.SparseArray r12 = new android.util.SparseArray
            r12.<init>()
            android.util.SparseArray r13 = new android.util.SparseArray
            r13.<init>()
            boolean r14 = r7.isEmpty()
            java.lang.String r15 = ","
            r27 = r3
            if (r14 != 0) goto L_0x0228
            java.lang.String r7 = android.text.TextUtils.join(r15, r7)
            r14 = r18
            r0.getUsersInternal(r7, r14)
            int r7 = r14.size()
            r3 = 0
        L_0x01ad:
            if (r3 >= r7) goto L_0x0228
            java.lang.Object r20 = r14.get(r3)
            r22 = r7
            r7 = r20
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            r20 = r14
            org.telegram.messenger.MessagesController r14 = r26.getMessagesController()
            int r1 = r7.id
            r24 = r4
            r23 = r5
            long r4 = (long) r1
            boolean r1 = r14.isDialogMuted(r4)
            int r4 = r7.id
            long r4 = (long) r4
            java.lang.Object r4 = r10.get(r4)
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r4 = r4.intValue()
            if (r1 == 0) goto L_0x01e0
            int r5 = r7.id
            java.lang.Boolean r14 = java.lang.Boolean.TRUE
            r12.put(r5, r14)
        L_0x01e0:
            r5 = 1
            if (r4 != r5) goto L_0x01ea
            int r14 = r7.id
            java.lang.Boolean r5 = java.lang.Boolean.TRUE
            r13.put(r14, r5)
        L_0x01ea:
            boolean r5 = r7.bot
            if (r5 == 0) goto L_0x01f9
            int[][] r5 = r0.bots
            r4 = r5[r4]
            r5 = r4[r1]
            r14 = 1
            int r5 = r5 + r14
            r4[r1] = r5
            goto L_0x0216
        L_0x01f9:
            r14 = 1
            boolean r5 = r7.self
            if (r5 != 0) goto L_0x020d
            boolean r5 = r7.contact
            if (r5 == 0) goto L_0x0203
            goto L_0x020d
        L_0x0203:
            int[][] r5 = r0.nonContacts
            r4 = r5[r4]
            r5 = r4[r1]
            int r5 = r5 + r14
            r4[r1] = r5
            goto L_0x0216
        L_0x020d:
            int[][] r5 = r0.contacts
            r4 = r5[r4]
            r5 = r4[r1]
            int r5 = r5 + r14
            r4[r1] = r5
        L_0x0216:
            int r1 = r7.id
            r2.put(r1, r7)
            int r3 = r3 + 1
            r1 = r28
            r14 = r20
            r7 = r22
            r5 = r23
            r4 = r24
            goto L_0x01ad
        L_0x0228:
            r24 = r4
            r23 = r5
            boolean r1 = r9.isEmpty()
            if (r1 != 0) goto L_0x02ff
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            java.lang.String r4 = android.text.TextUtils.join(r15, r9)
            r0.getEncryptedChatsInternal(r4, r3, r1)
            boolean r4 = r1.isEmpty()
            if (r4 != 0) goto L_0x02ff
            java.lang.String r1 = android.text.TextUtils.join(r15, r1)
            r4 = r23
            r0.getUsersInternal(r1, r4)
            int r1 = r4.size()
            r5 = 0
        L_0x0257:
            if (r5 >= r1) goto L_0x0269
            java.lang.Object r7 = r4.get(r5)
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            int r9 = r7.id
            r14 = r24
            r14.put(r9, r7)
            int r5 = r5 + 1
            goto L_0x0257
        L_0x0269:
            r14 = r24
            int r1 = r3.size()
            r4 = 0
        L_0x0270:
            if (r4 >= r1) goto L_0x02fd
            java.lang.Object r5 = r3.get(r4)
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = (org.telegram.tgnet.TLRPC$EncryptedChat) r5
            int r7 = r5.user_id
            java.lang.Object r7 = r14.get(r7)
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            if (r7 != 0) goto L_0x0288
            r20 = r1
            r9 = r2
            r22 = r3
            goto L_0x02f4
        L_0x0288:
            int r5 = r5.id
            r20 = r1
            r9 = r2
            long r1 = (long) r5
            r5 = 32
            long r1 = r1 << r5
            org.telegram.messenger.MessagesController r5 = r26.getMessagesController()
            boolean r5 = r5.isDialogMuted(r1)
            java.lang.Object r1 = r10.get(r1)
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            if (r5 == 0) goto L_0x02af
            int r2 = r7.id
            r22 = r3
            java.lang.Boolean r3 = java.lang.Boolean.TRUE
            r12.put(r2, r3)
            goto L_0x02b1
        L_0x02af:
            r22 = r3
        L_0x02b1:
            r2 = 1
            if (r1 != r2) goto L_0x02bb
            int r2 = r7.id
            java.lang.Boolean r3 = java.lang.Boolean.TRUE
            r13.put(r2, r3)
        L_0x02bb:
            boolean r2 = r7.self
            if (r2 != 0) goto L_0x02cf
            boolean r2 = r7.contact
            if (r2 == 0) goto L_0x02c4
            goto L_0x02cf
        L_0x02c4:
            int[][] r2 = r0.nonContacts
            r1 = r2[r1]
            r2 = r1[r5]
            r3 = 1
            int r2 = r2 + r3
            r1[r5] = r2
            goto L_0x02d9
        L_0x02cf:
            r3 = 1
            int[][] r2 = r0.contacts
            r1 = r2[r1]
            r2 = r1[r5]
            int r2 = r2 + r3
            r1[r5] = r2
        L_0x02d9:
            int r1 = r7.id
            r2 = 0
            java.lang.Integer r5 = java.lang.Integer.valueOf(r2)
            java.lang.Object r1 = r11.get(r1, r5)
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            int r2 = r7.id
            int r1 = r1 + r3
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r11.put(r2, r1)
        L_0x02f4:
            int r4 = r4 + 1
            r2 = r9
            r1 = r20
            r3 = r22
            goto L_0x0270
        L_0x02fd:
            r9 = r2
            goto L_0x0302
        L_0x02ff:
            r9 = r2
            r14 = r24
        L_0x0302:
            boolean r1 = r8.isEmpty()
            if (r1 != 0) goto L_0x0409
            java.lang.String r1 = android.text.TextUtils.join(r15, r8)
            r0.getChatsInternal(r1, r6)
            int r1 = r6.size()
            r2 = 0
        L_0x0314:
            if (r2 >= r1) goto L_0x0409
            java.lang.Object r3 = r6.get(r2)
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3
            org.telegram.tgnet.TLRPC$InputChannel r4 = r3.migrated_to
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC$TL_inputChannel
            if (r4 != 0) goto L_0x03ef
            boolean r4 = org.telegram.messenger.ChatObject.isNotInChat(r3)
            if (r4 == 0) goto L_0x032a
            goto L_0x03ef
        L_0x032a:
            org.telegram.messenger.MessagesController r4 = r26.getMessagesController()
            int r5 = r3.id
            int r5 = -r5
            long r7 = (long) r5
            boolean r4 = r4.isDialogMuted(r7, r3)
            android.util.LongSparseArray<java.lang.Integer> r5 = r0.dialogsWithUnread
            int r7 = r3.id
            int r7 = -r7
            long r7 = (long) r7
            int r5 = r5.indexOfKey(r7)
            if (r5 < 0) goto L_0x0344
            r5 = 1
            goto L_0x0345
        L_0x0344:
            r5 = 0
        L_0x0345:
            android.util.LongSparseArray<java.lang.Integer> r7 = r0.dialogsWithMentions
            int r8 = r3.id
            int r8 = -r8
            r24 = r14
            long r14 = (long) r8
            int r7 = r7.indexOfKey(r14)
            if (r7 < 0) goto L_0x0355
            r7 = 1
            goto L_0x0356
        L_0x0355:
            r7 = 0
        L_0x0356:
            int r8 = r3.id
            int r8 = -r8
            long r14 = (long) r8
            java.lang.Object r8 = r10.get(r14)
            java.lang.Integer r8 = (java.lang.Integer) r8
            int r8 = r8.intValue()
            if (r4 == 0) goto L_0x036e
            int r14 = r3.id
            int r14 = -r14
            java.lang.Boolean r15 = java.lang.Boolean.TRUE
            r12.put(r14, r15)
        L_0x036e:
            r14 = 1
            if (r8 != r14) goto L_0x0379
            int r14 = r3.id
            int r14 = -r14
            java.lang.Boolean r15 = java.lang.Boolean.TRUE
            r13.put(r14, r15)
        L_0x0379:
            r14 = r28
            if (r4 == 0) goto L_0x03a9
            if (r14 == 0) goto L_0x03a9
            int r15 = r3.id
            int r15 = -r15
            r20 = r9
            r19 = r10
            long r9 = (long) r15
            int r9 = r14.indexOfKey(r9)
            if (r9 < 0) goto L_0x03ad
            boolean r9 = org.telegram.messenger.ChatObject.isChannel(r3)
            if (r9 == 0) goto L_0x03a0
            boolean r9 = r3.megagroup
            if (r9 != 0) goto L_0x03a0
            int[] r9 = r0.mentionChannels
            r10 = r9[r8]
            r15 = 1
            int r10 = r10 + r15
            r9[r8] = r10
            goto L_0x03ad
        L_0x03a0:
            r15 = 1
            int[] r9 = r0.mentionGroups
            r10 = r9[r8]
            int r10 = r10 + r15
            r9[r8] = r10
            goto L_0x03ad
        L_0x03a9:
            r20 = r9
            r19 = r10
        L_0x03ad:
            if (r29 == 0) goto L_0x03b7
            if (r5 != 0) goto L_0x03b7
            if (r7 == 0) goto L_0x03b4
            goto L_0x03b7
        L_0x03b4:
            r5 = r21
            goto L_0x03c5
        L_0x03b7:
            if (r29 != 0) goto L_0x03e5
            int r5 = r3.id
            int r5 = -r5
            long r9 = (long) r5
            r5 = r21
            int r7 = r5.indexOfKey(r9)
            if (r7 < 0) goto L_0x03e7
        L_0x03c5:
            boolean r7 = org.telegram.messenger.ChatObject.isChannel(r3)
            if (r7 == 0) goto L_0x03da
            boolean r7 = r3.megagroup
            if (r7 != 0) goto L_0x03da
            int[][] r7 = r0.channels
            r7 = r7[r8]
            r8 = r7[r4]
            r9 = 1
            int r8 = r8 + r9
            r7[r4] = r8
            goto L_0x03e7
        L_0x03da:
            r9 = 1
            int[][] r7 = r0.groups
            r7 = r7[r8]
            r8 = r7[r4]
            int r8 = r8 + r9
            r7[r4] = r8
            goto L_0x03e7
        L_0x03e5:
            r5 = r21
        L_0x03e7:
            int r4 = r3.id
            r7 = r27
            r7.put(r4, r3)
            goto L_0x03fb
        L_0x03ef:
            r7 = r27
            r20 = r9
            r19 = r10
            r24 = r14
            r5 = r21
            r14 = r28
        L_0x03fb:
            int r2 = r2 + 1
            r21 = r5
            r27 = r7
            r10 = r19
            r9 = r20
            r14 = r24
            goto L_0x0314
        L_0x0409:
            r7 = r27
            r20 = r9
            r24 = r14
            r5 = r21
            r14 = r28
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r1 = r0.dialogFilters
            int r1 = r1.size()
            r2 = 0
        L_0x041a:
            int r3 = r1 + 2
            if (r2 >= r3) goto L_0x0a4d
            if (r2 >= r1) goto L_0x043b
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r3 = r0.dialogFilters
            java.lang.Object r3 = r3.get(r2)
            org.telegram.messenger.MessagesController$DialogFilter r3 = (org.telegram.messenger.MessagesController.DialogFilter) r3
            int r4 = r3.pendingUnreadCount
            if (r4 >= 0) goto L_0x0436
            r10 = r7
            r27 = r13
            r9 = r20
            r13 = r24
            r6 = 0
            goto L_0x0a40
        L_0x0436:
            int r4 = r3.pendingUnreadCount
            int r6 = r3.flags
            goto L_0x045a
        L_0x043b:
            r3 = 0
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ALL_CHATS
            if (r2 != r1) goto L_0x0450
            int r6 = r0.pendingMainUnreadCount
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r4 = r4 | r8
            org.telegram.messenger.NotificationsController r8 = r26.getNotificationsController()
            boolean r8 = r8.showBadgeMuted
            if (r8 != 0) goto L_0x0455
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            goto L_0x0454
        L_0x0450:
            int r6 = r0.pendingArchiveUnreadCount
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
        L_0x0454:
            r4 = r4 | r8
        L_0x0455:
            r25 = r6
            r6 = r4
            r4 = r25
        L_0x045a:
            if (r29 == 0) goto L_0x0770
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r8 = r8 & r6
            if (r8 == 0) goto L_0x0492
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x047a
            int[][] r8 = r0.contacts
            r9 = 0
            r10 = r8[r9]
            r10 = r10[r9]
            int r4 = r4 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r6
            if (r10 != 0) goto L_0x047b
            r8 = r8[r9]
            r10 = 1
            r8 = r8[r10]
            int r4 = r4 - r8
            goto L_0x047c
        L_0x047a:
            r9 = 0
        L_0x047b:
            r10 = 1
        L_0x047c:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x0492
            int[][] r8 = r0.contacts
            r15 = r8[r10]
            r15 = r15[r9]
            int r4 = r4 - r15
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r9 = r9 & r6
            if (r9 != 0) goto L_0x0492
            r8 = r8[r10]
            r8 = r8[r10]
            int r4 = r4 - r8
        L_0x0492:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r8 = r8 & r6
            if (r8 == 0) goto L_0x04c8
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x04b0
            int[][] r8 = r0.nonContacts
            r9 = 0
            r10 = r8[r9]
            r10 = r10[r9]
            int r4 = r4 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r6
            if (r10 != 0) goto L_0x04b1
            r8 = r8[r9]
            r10 = 1
            r8 = r8[r10]
            int r4 = r4 - r8
            goto L_0x04b2
        L_0x04b0:
            r9 = 0
        L_0x04b1:
            r10 = 1
        L_0x04b2:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x04c8
            int[][] r8 = r0.nonContacts
            r15 = r8[r10]
            r15 = r15[r9]
            int r4 = r4 - r15
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r9 = r9 & r6
            if (r9 != 0) goto L_0x04c8
            r8 = r8[r10]
            r8 = r8[r10]
            int r4 = r4 - r8
        L_0x04c8:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r8 = r8 & r6
            if (r8 == 0) goto L_0x0508
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x04eb
            int[][] r8 = r0.groups
            r9 = 0
            r10 = r8[r9]
            r10 = r10[r9]
            int r4 = r4 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r6
            if (r10 != 0) goto L_0x04e5
            r8 = r8[r9]
            r10 = 1
            r8 = r8[r10]
            goto L_0x04e9
        L_0x04e5:
            int[] r8 = r0.mentionGroups
            r8 = r8[r9]
        L_0x04e9:
            int r4 = r4 - r8
            goto L_0x04ec
        L_0x04eb:
            r9 = 0
        L_0x04ec:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x0508
            int[][] r8 = r0.groups
            r10 = 1
            r15 = r8[r10]
            r15 = r15[r9]
            int r4 = r4 - r15
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r9 = r9 & r6
            if (r9 != 0) goto L_0x0503
            r8 = r8[r10]
            r8 = r8[r10]
            goto L_0x0507
        L_0x0503:
            int[] r8 = r0.mentionGroups
            r8 = r8[r10]
        L_0x0507:
            int r4 = r4 - r8
        L_0x0508:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r8 = r8 & r6
            if (r8 == 0) goto L_0x0548
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x052b
            int[][] r8 = r0.channels
            r9 = 0
            r10 = r8[r9]
            r10 = r10[r9]
            int r4 = r4 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r6
            if (r10 != 0) goto L_0x0525
            r8 = r8[r9]
            r10 = 1
            r8 = r8[r10]
            goto L_0x0529
        L_0x0525:
            int[] r8 = r0.mentionChannels
            r8 = r8[r9]
        L_0x0529:
            int r4 = r4 - r8
            goto L_0x052c
        L_0x052b:
            r9 = 0
        L_0x052c:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x0548
            int[][] r8 = r0.channels
            r10 = 1
            r15 = r8[r10]
            r15 = r15[r9]
            int r4 = r4 - r15
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r9 = r9 & r6
            if (r9 != 0) goto L_0x0543
            r8 = r8[r10]
            r8 = r8[r10]
            goto L_0x0547
        L_0x0543:
            int[] r8 = r0.mentionChannels
            r8 = r8[r10]
        L_0x0547:
            int r4 = r4 - r8
        L_0x0548:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r8 = r8 & r6
            if (r8 == 0) goto L_0x057e
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x0566
            int[][] r8 = r0.bots
            r9 = 0
            r10 = r8[r9]
            r10 = r10[r9]
            int r4 = r4 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r6
            if (r10 != 0) goto L_0x0567
            r8 = r8[r9]
            r10 = 1
            r8 = r8[r10]
            int r4 = r4 - r8
            goto L_0x0568
        L_0x0566:
            r9 = 0
        L_0x0567:
            r10 = 1
        L_0x0568:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r8 = r8 & r6
            if (r8 != 0) goto L_0x057e
            int[][] r8 = r0.bots
            r15 = r8[r10]
            r15 = r15[r9]
            int r4 = r4 - r15
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r9 = r9 & r6
            if (r9 != 0) goto L_0x057e
            r8 = r8[r10]
            r8 = r8[r10]
            int r4 = r4 - r8
        L_0x057e:
            if (r3 == 0) goto L_0x0755
            java.util.ArrayList<java.lang.Integer> r8 = r3.alwaysShow
            int r8 = r8.size()
            r9 = 0
        L_0x0587:
            if (r9 >= r8) goto L_0x066f
            java.util.ArrayList<java.lang.Integer> r10 = r3.alwaysShow
            java.lang.Object r10 = r10.get(r9)
            java.lang.Integer r10 = (java.lang.Integer) r10
            int r10 = r10.intValue()
            if (r10 <= 0) goto L_0x0613
            r27 = r8
            r8 = 2
            r15 = 0
        L_0x059b:
            if (r15 >= r8) goto L_0x060d
            if (r15 != 0) goto L_0x05a2
            r8 = r20
            goto L_0x05a4
        L_0x05a2:
            r8 = r24
        L_0x05a4:
            java.lang.Object r8 = r8.get(r10)
            org.telegram.tgnet.TLRPC$User r8 = (org.telegram.tgnet.TLRPC$User) r8
            if (r8 == 0) goto L_0x0601
            if (r15 != 0) goto L_0x05b4
            r19 = r1
            r21 = r2
            r1 = 1
            goto L_0x05cb
        L_0x05b4:
            r19 = r1
            r17 = 0
            java.lang.Integer r1 = java.lang.Integer.valueOf(r17)
            java.lang.Object r1 = r11.get(r10, r1)
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r21 = r2
            if (r1 != 0) goto L_0x05cb
            goto L_0x0605
        L_0x05cb:
            boolean r2 = r8.bot
            if (r2 == 0) goto L_0x05d2
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            goto L_0x05e0
        L_0x05d2:
            boolean r2 = r8.self
            if (r2 != 0) goto L_0x05de
            boolean r2 = r8.contact
            if (r2 == 0) goto L_0x05db
            goto L_0x05de
        L_0x05db:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            goto L_0x05e0
        L_0x05de:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
        L_0x05e0:
            r2 = r2 & r6
            if (r2 != 0) goto L_0x05e5
        L_0x05e3:
            int r4 = r4 - r1
            goto L_0x0605
        L_0x05e5:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 == 0) goto L_0x05f3
            int r2 = r8.id
            int r2 = r12.indexOfKey(r2)
            if (r2 < 0) goto L_0x05f3
            goto L_0x05e3
        L_0x05f3:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r6
            if (r2 == 0) goto L_0x0605
            int r2 = r8.id
            int r2 = r13.indexOfKey(r2)
            if (r2 < 0) goto L_0x0605
            goto L_0x05e3
        L_0x0601:
            r19 = r1
            r21 = r2
        L_0x0605:
            int r15 = r15 + 1
            r1 = r19
            r2 = r21
            r8 = 2
            goto L_0x059b
        L_0x060d:
            r19 = r1
            r21 = r2
        L_0x0611:
            r10 = r7
            goto L_0x0664
        L_0x0613:
            r19 = r1
            r21 = r2
            r27 = r8
            int r1 = -r10
            java.lang.Object r1 = r7.get(r1)
            org.telegram.tgnet.TLRPC$Chat r1 = (org.telegram.tgnet.TLRPC$Chat) r1
            if (r1 == 0) goto L_0x0611
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r2 == 0) goto L_0x062f
            boolean r2 = r1.megagroup
            if (r2 != 0) goto L_0x062f
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            goto L_0x0631
        L_0x062f:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
        L_0x0631:
            r2 = r2 & r6
            if (r2 != 0) goto L_0x0637
            int r4 = r4 + -1
            goto L_0x0611
        L_0x0637:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 == 0) goto L_0x0653
            int r2 = r1.id
            int r2 = -r2
            int r2 = r12.indexOfKey(r2)
            if (r2 < 0) goto L_0x0653
            android.util.LongSparseArray<java.lang.Integer> r2 = r0.dialogsWithMentions
            int r8 = r1.id
            int r8 = -r8
            r10 = r7
            long r7 = (long) r8
            int r2 = r2.indexOfKey(r7)
            if (r2 >= 0) goto L_0x0654
            goto L_0x0662
        L_0x0653:
            r10 = r7
        L_0x0654:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r6
            if (r2 == 0) goto L_0x0664
            int r1 = r1.id
            int r1 = -r1
            int r1 = r13.indexOfKey(r1)
            if (r1 < 0) goto L_0x0664
        L_0x0662:
            int r4 = r4 + -1
        L_0x0664:
            int r9 = r9 + 1
            r8 = r27
            r7 = r10
            r1 = r19
            r2 = r21
            goto L_0x0587
        L_0x066f:
            r19 = r1
            r21 = r2
            r10 = r7
            java.util.ArrayList<java.lang.Integer> r1 = r3.neverShow
            int r1 = r1.size()
            r2 = 0
        L_0x067b:
            if (r2 >= r1) goto L_0x075a
            java.util.ArrayList<java.lang.Integer> r7 = r3.neverShow
            java.lang.Object r7 = r7.get(r2)
            java.lang.Integer r7 = (java.lang.Integer) r7
            int r7 = r7.intValue()
            if (r14 == 0) goto L_0x069a
            long r8 = (long) r7
            int r8 = r14.indexOfKey(r8)
            if (r8 < 0) goto L_0x069a
            int r8 = r12.indexOfKey(r7)
            if (r8 >= 0) goto L_0x069a
            goto L_0x0705
        L_0x069a:
            if (r7 <= 0) goto L_0x0708
            r8 = 0
        L_0x069d:
            r9 = 2
            if (r8 >= r9) goto L_0x0705
            if (r8 != 0) goto L_0x06a5
            r15 = r20
            goto L_0x06a7
        L_0x06a5:
            r15 = r24
        L_0x06a7:
            java.lang.Object r15 = r15.get(r7)
            org.telegram.tgnet.TLRPC$User r15 = (org.telegram.tgnet.TLRPC$User) r15
            if (r15 == 0) goto L_0x06fe
            if (r8 != 0) goto L_0x06b5
            r27 = r1
            r9 = 1
            goto L_0x06ca
        L_0x06b5:
            r16 = 0
            java.lang.Integer r9 = java.lang.Integer.valueOf(r16)
            java.lang.Object r9 = r11.get(r7, r9)
            java.lang.Integer r9 = (java.lang.Integer) r9
            int r9 = r9.intValue()
            if (r9 != 0) goto L_0x06c8
            goto L_0x06fe
        L_0x06c8:
            r27 = r1
        L_0x06ca:
            boolean r1 = r15.bot
            if (r1 == 0) goto L_0x06d1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            goto L_0x06df
        L_0x06d1:
            boolean r1 = r15.self
            if (r1 != 0) goto L_0x06dd
            boolean r1 = r15.contact
            if (r1 == 0) goto L_0x06da
            goto L_0x06dd
        L_0x06da:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            goto L_0x06df
        L_0x06dd:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
        L_0x06df:
            r1 = r1 & r6
            if (r1 == 0) goto L_0x0700
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r6
            if (r1 == 0) goto L_0x06ef
            int r1 = r15.id
            int r1 = r13.indexOfKey(r1)
            if (r1 >= 0) goto L_0x0700
        L_0x06ef:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r6
            if (r1 == 0) goto L_0x06fc
            int r1 = r15.id
            int r1 = r12.indexOfKey(r1)
            if (r1 >= 0) goto L_0x0700
        L_0x06fc:
            int r4 = r4 + r9
            goto L_0x0700
        L_0x06fe:
            r27 = r1
        L_0x0700:
            int r8 = r8 + 1
            r1 = r27
            goto L_0x069d
        L_0x0705:
            r27 = r1
            goto L_0x074f
        L_0x0708:
            r27 = r1
            int r1 = -r7
            java.lang.Object r1 = r10.get(r1)
            org.telegram.tgnet.TLRPC$Chat r1 = (org.telegram.tgnet.TLRPC$Chat) r1
            if (r1 == 0) goto L_0x074f
            boolean r7 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r7 == 0) goto L_0x0720
            boolean r7 = r1.megagroup
            if (r7 != 0) goto L_0x0720
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            goto L_0x0722
        L_0x0720:
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
        L_0x0722:
            r7 = r7 & r6
            if (r7 == 0) goto L_0x074f
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r7 = r7 & r6
            if (r7 == 0) goto L_0x0733
            int r7 = r1.id
            int r7 = -r7
            int r7 = r13.indexOfKey(r7)
            if (r7 >= 0) goto L_0x074f
        L_0x0733:
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 & r6
            if (r7 == 0) goto L_0x074d
            int r7 = r1.id
            int r7 = -r7
            int r7 = r12.indexOfKey(r7)
            if (r7 < 0) goto L_0x074d
            android.util.LongSparseArray<java.lang.Integer> r7 = r0.dialogsWithMentions
            int r1 = r1.id
            int r1 = -r1
            long r8 = (long) r1
            int r1 = r7.indexOfKey(r8)
            if (r1 < 0) goto L_0x074f
        L_0x074d:
            int r4 = r4 + 1
        L_0x074f:
            int r2 = r2 + 1
            r1 = r27
            goto L_0x067b
        L_0x0755:
            r19 = r1
            r21 = r2
            r10 = r7
        L_0x075a:
            if (r4 >= 0) goto L_0x0766
            r27 = r13
            r9 = r20
            r13 = r24
            r6 = 0
            r14 = 0
            goto L_0x0a28
        L_0x0766:
            r14 = r4
            r27 = r13
            r9 = r20
            r13 = r24
            r6 = 0
            goto L_0x0a28
        L_0x0770:
            r19 = r1
            r21 = r2
            r10 = r7
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r1 = r1 & r6
            if (r1 == 0) goto L_0x07ab
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x0793
            int[][] r1 = r0.contacts
            r2 = 0
            r7 = r1[r2]
            r7 = r7[r2]
            int r4 = r4 + r7
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 & r6
            if (r7 != 0) goto L_0x0794
            r1 = r1[r2]
            r7 = 1
            r1 = r1[r7]
            int r4 = r4 + r1
            goto L_0x0795
        L_0x0793:
            r2 = 0
        L_0x0794:
            r7 = 1
        L_0x0795:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x07ab
            int[][] r1 = r0.contacts
            r8 = r1[r7]
            r8 = r8[r2]
            int r4 = r4 + r8
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 != 0) goto L_0x07ab
            r1 = r1[r7]
            r1 = r1[r7]
            int r4 = r4 + r1
        L_0x07ab:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r1 = r1 & r6
            if (r1 == 0) goto L_0x07e1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x07c9
            int[][] r1 = r0.nonContacts
            r2 = 0
            r7 = r1[r2]
            r7 = r7[r2]
            int r4 = r4 + r7
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 & r6
            if (r7 != 0) goto L_0x07ca
            r1 = r1[r2]
            r7 = 1
            r1 = r1[r7]
            int r4 = r4 + r1
            goto L_0x07cb
        L_0x07c9:
            r2 = 0
        L_0x07ca:
            r7 = 1
        L_0x07cb:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x07e1
            int[][] r1 = r0.nonContacts
            r8 = r1[r7]
            r8 = r8[r2]
            int r4 = r4 + r8
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 != 0) goto L_0x07e1
            r1 = r1[r7]
            r1 = r1[r7]
            int r4 = r4 + r1
        L_0x07e1:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r1 = r1 & r6
            if (r1 == 0) goto L_0x0821
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x0804
            int[][] r1 = r0.groups
            r2 = 0
            r7 = r1[r2]
            r7 = r7[r2]
            int r4 = r4 + r7
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 & r6
            if (r7 != 0) goto L_0x07fe
            r1 = r1[r2]
            r7 = 1
            r1 = r1[r7]
            goto L_0x0802
        L_0x07fe:
            int[] r1 = r0.mentionGroups
            r1 = r1[r2]
        L_0x0802:
            int r4 = r4 + r1
            goto L_0x0805
        L_0x0804:
            r2 = 0
        L_0x0805:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x0821
            int[][] r1 = r0.groups
            r7 = 1
            r8 = r1[r7]
            r8 = r8[r2]
            int r4 = r4 + r8
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 != 0) goto L_0x081c
            r1 = r1[r7]
            r1 = r1[r7]
            goto L_0x0820
        L_0x081c:
            int[] r1 = r0.mentionGroups
            r1 = r1[r7]
        L_0x0820:
            int r4 = r4 + r1
        L_0x0821:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r1 = r1 & r6
            if (r1 == 0) goto L_0x0861
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x0844
            int[][] r1 = r0.channels
            r2 = 0
            r7 = r1[r2]
            r7 = r7[r2]
            int r4 = r4 + r7
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 & r6
            if (r7 != 0) goto L_0x083e
            r1 = r1[r2]
            r7 = 1
            r1 = r1[r7]
            goto L_0x0842
        L_0x083e:
            int[] r1 = r0.mentionChannels
            r1 = r1[r2]
        L_0x0842:
            int r4 = r4 + r1
            goto L_0x0845
        L_0x0844:
            r2 = 0
        L_0x0845:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x0861
            int[][] r1 = r0.channels
            r7 = 1
            r8 = r1[r7]
            r8 = r8[r2]
            int r4 = r4 + r8
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 != 0) goto L_0x085c
            r1 = r1[r7]
            r1 = r1[r7]
            goto L_0x0860
        L_0x085c:
            int[] r1 = r0.mentionChannels
            r1 = r1[r7]
        L_0x0860:
            int r4 = r4 + r1
        L_0x0861:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r1 = r1 & r6
            if (r1 == 0) goto L_0x0898
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x087f
            int[][] r1 = r0.bots
            r2 = 0
            r7 = r1[r2]
            r7 = r7[r2]
            int r4 = r4 + r7
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 & r6
            if (r7 != 0) goto L_0x0880
            r1 = r1[r2]
            r7 = 1
            r1 = r1[r7]
            int r4 = r4 + r1
            goto L_0x0881
        L_0x087f:
            r2 = 0
        L_0x0880:
            r7 = 1
        L_0x0881:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r6
            if (r1 != 0) goto L_0x0899
            int[][] r1 = r0.bots
            r8 = r1[r7]
            r8 = r8[r2]
            int r4 = r4 + r8
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r6
            if (r2 != 0) goto L_0x0899
            r1 = r1[r7]
            r1 = r1[r7]
            int r4 = r4 + r1
            goto L_0x0899
        L_0x0898:
            r7 = 1
        L_0x0899:
            if (r3 == 0) goto L_0x0a20
            java.util.ArrayList<java.lang.Integer> r1 = r3.alwaysShow
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x09cf
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r6
            if (r1 == 0) goto L_0x08e8
            int r1 = r28.size()
            r2 = 0
        L_0x08ad:
            if (r2 >= r1) goto L_0x08e8
            long r8 = r14.keyAt(r2)
            int r9 = (int) r8
            int r8 = -r9
            java.lang.Object r8 = r10.get(r8)
            org.telegram.tgnet.TLRPC$Chat r8 = (org.telegram.tgnet.TLRPC$Chat) r8
            boolean r15 = org.telegram.messenger.ChatObject.isChannel(r8)
            if (r15 == 0) goto L_0x08cb
            boolean r8 = r8.megagroup
            if (r8 != 0) goto L_0x08cb
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r8 = r8 & r6
            if (r8 != 0) goto L_0x08d1
            goto L_0x08e5
        L_0x08cb:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r8 = r8 & r6
            if (r8 != 0) goto L_0x08d1
            goto L_0x08e5
        L_0x08d1:
            int r8 = r12.indexOfKey(r9)
            if (r8 < 0) goto L_0x08e5
            java.util.ArrayList<java.lang.Integer> r8 = r3.alwaysShow
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            boolean r8 = r8.contains(r9)
            if (r8 == 0) goto L_0x08e5
            int r4 = r4 + -1
        L_0x08e5:
            int r2 = r2 + 1
            goto L_0x08ad
        L_0x08e8:
            java.util.ArrayList<java.lang.Integer> r1 = r3.alwaysShow
            int r1 = r1.size()
            r2 = 0
        L_0x08ef:
            if (r2 >= r1) goto L_0x09cf
            java.util.ArrayList<java.lang.Integer> r8 = r3.alwaysShow
            java.lang.Object r8 = r8.get(r2)
            java.lang.Integer r8 = (java.lang.Integer) r8
            int r8 = r8.intValue()
            r27 = r13
            long r13 = (long) r8
            int r9 = r5.indexOfKey(r13)
            if (r9 >= 0) goto L_0x090c
            r9 = r20
            r13 = r24
            goto L_0x09c2
        L_0x090c:
            if (r8 <= 0) goto L_0x098e
            r9 = r20
            java.lang.Object r13 = r9.get(r8)
            org.telegram.tgnet.TLRPC$User r13 = (org.telegram.tgnet.TLRPC$User) r13
            if (r13 == 0) goto L_0x0947
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r6
            if (r14 == 0) goto L_0x0928
            int r14 = r13.id
            int r14 = r12.indexOfKey(r14)
            if (r14 < 0) goto L_0x0928
        L_0x0925:
            int r4 = r4 + 1
            goto L_0x0947
        L_0x0928:
            boolean r14 = r13.bot
            if (r14 == 0) goto L_0x0932
            int r13 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r13 = r13 & r6
            if (r13 != 0) goto L_0x0947
            goto L_0x0925
        L_0x0932:
            boolean r14 = r13.self
            if (r14 != 0) goto L_0x0941
            boolean r13 = r13.contact
            if (r13 == 0) goto L_0x093b
            goto L_0x0941
        L_0x093b:
            int r13 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r13 = r13 & r6
            if (r13 != 0) goto L_0x0947
            goto L_0x0925
        L_0x0941:
            int r13 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r13 = r13 & r6
            if (r13 != 0) goto L_0x0947
            goto L_0x0925
        L_0x0947:
            r13 = r24
            java.lang.Object r14 = r13.get(r8)
            org.telegram.tgnet.TLRPC$User r14 = (org.telegram.tgnet.TLRPC$User) r14
            if (r14 == 0) goto L_0x09c2
            r15 = 0
            java.lang.Integer r7 = java.lang.Integer.valueOf(r15)
            java.lang.Object r7 = r11.get(r8, r7)
            java.lang.Integer r7 = (java.lang.Integer) r7
            int r7 = r7.intValue()
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r8 = r8 & r6
            if (r8 == 0) goto L_0x096f
            int r8 = r14.id
            int r8 = r12.indexOfKey(r8)
            if (r8 < 0) goto L_0x096f
        L_0x096d:
            int r4 = r4 + r7
            goto L_0x09c2
        L_0x096f:
            boolean r8 = r14.bot
            if (r8 == 0) goto L_0x0979
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r8 = r8 & r6
            if (r8 != 0) goto L_0x09c2
            goto L_0x096d
        L_0x0979:
            boolean r8 = r14.self
            if (r8 != 0) goto L_0x0988
            boolean r8 = r14.contact
            if (r8 == 0) goto L_0x0982
            goto L_0x0988
        L_0x0982:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r8 = r8 & r6
            if (r8 != 0) goto L_0x09c2
            goto L_0x096d
        L_0x0988:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r8 = r8 & r6
            if (r8 != 0) goto L_0x09c2
            goto L_0x096d
        L_0x098e:
            r9 = r20
            r13 = r24
            int r7 = -r8
            java.lang.Object r7 = r10.get(r7)
            org.telegram.tgnet.TLRPC$Chat r7 = (org.telegram.tgnet.TLRPC$Chat) r7
            if (r7 == 0) goto L_0x09c2
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r8 = r8 & r6
            if (r8 == 0) goto L_0x09ac
            int r8 = r7.id
            int r8 = -r8
            int r8 = r12.indexOfKey(r8)
            if (r8 < 0) goto L_0x09ac
        L_0x09a9:
            int r4 = r4 + 1
            goto L_0x09c2
        L_0x09ac:
            boolean r8 = org.telegram.messenger.ChatObject.isChannel(r7)
            if (r8 == 0) goto L_0x09bc
            boolean r7 = r7.megagroup
            if (r7 != 0) goto L_0x09bc
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r7 = r7 & r6
            if (r7 != 0) goto L_0x09c2
            goto L_0x09a9
        L_0x09bc:
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r7 = r7 & r6
            if (r7 != 0) goto L_0x09c2
            goto L_0x09a9
        L_0x09c2:
            int r2 = r2 + 1
            r14 = r28
            r20 = r9
            r24 = r13
            r7 = 1
            r13 = r27
            goto L_0x08ef
        L_0x09cf:
            r27 = r13
            r9 = r20
            r13 = r24
            java.util.ArrayList<java.lang.Integer> r1 = r3.neverShow
            int r1 = r1.size()
            r14 = 0
        L_0x09dc:
            if (r14 >= r1) goto L_0x0a26
            java.util.ArrayList<java.lang.Integer> r2 = r3.neverShow
            java.lang.Object r2 = r2.get(r14)
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            if (r2 <= 0) goto L_0x0a11
            java.lang.Object r6 = r9.get(r2)
            org.telegram.tgnet.TLRPC$User r6 = (org.telegram.tgnet.TLRPC$User) r6
            if (r6 == 0) goto L_0x09f6
            int r4 = r4 + -1
        L_0x09f6:
            java.lang.Object r6 = r13.get(r2)
            org.telegram.tgnet.TLRPC$User r6 = (org.telegram.tgnet.TLRPC$User) r6
            if (r6 == 0) goto L_0x0a0f
            r6 = 0
            java.lang.Integer r7 = java.lang.Integer.valueOf(r6)
            java.lang.Object r2 = r11.get(r2, r7)
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            int r4 = r4 - r2
            goto L_0x0a1d
        L_0x0a0f:
            r6 = 0
            goto L_0x0a1d
        L_0x0a11:
            r6 = 0
            int r2 = -r2
            java.lang.Object r2 = r10.get(r2)
            org.telegram.tgnet.TLRPC$Chat r2 = (org.telegram.tgnet.TLRPC$Chat) r2
            if (r2 == 0) goto L_0x0a1d
            int r4 = r4 + -1
        L_0x0a1d:
            int r14 = r14 + 1
            goto L_0x09dc
        L_0x0a20:
            r27 = r13
            r9 = r20
            r13 = r24
        L_0x0a26:
            r6 = 0
            r14 = r4
        L_0x0a28:
            if (r3 == 0) goto L_0x0a31
            r3.pendingUnreadCount = r14
            r1 = r19
            r2 = r21
            goto L_0x0a40
        L_0x0a31:
            r1 = r19
            r2 = r21
            if (r2 != r1) goto L_0x0a3a
            r0.pendingMainUnreadCount = r14
            goto L_0x0a40
        L_0x0a3a:
            int r3 = r1 + 1
            if (r2 != r3) goto L_0x0a40
            r0.pendingArchiveUnreadCount = r14
        L_0x0a40:
            int r2 = r2 + 1
            r14 = r28
            r20 = r9
            r7 = r10
            r24 = r13
            r13 = r27
            goto L_0x041a
        L_0x0a4d:
            org.telegram.messenger.-$$Lambda$MessagesStorage$O0xuidliaWR_xEmgdjZXweoap6c r1 = new org.telegram.messenger.-$$Lambda$MessagesStorage$O0xuidliaWR_xEmgdjZXweoap6c
            r1.<init>()
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)
        L_0x0a55:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.updateFiltersReadCounter(android.util.LongSparseArray, android.util.LongSparseArray, boolean):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateFiltersReadCounter$73 */
    public /* synthetic */ void lambda$updateFiltersReadCounter$73$MessagesStorage() {
        ArrayList<MessagesController.DialogFilter> arrayList = getMessagesController().dialogFilters;
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            arrayList.get(i).unreadCount = arrayList.get(i).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
    }

    /* JADX WARNING: Removed duplicated region for block: B:125:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:97:0x02cf A[Catch:{ Exception -> 0x02d7 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateDialogsWithReadMessagesInternal(java.util.ArrayList<java.lang.Integer> r20, org.telegram.messenger.support.SparseLongArray r21, org.telegram.messenger.support.SparseLongArray r22, java.util.ArrayList<java.lang.Long> r23) {
        /*
            r19 = this;
            r1 = r19
            r0 = r21
            r2 = r22
            r3 = r23
            android.util.LongSparseArray r4 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x02d7 }
            r4.<init>()     // Catch:{ Exception -> 0x02d7 }
            android.util.LongSparseArray r5 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x02d7 }
            r5.<init>()     // Catch:{ Exception -> 0x02d7 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x02d7 }
            r6.<init>()     // Catch:{ Exception -> 0x02d7 }
            boolean r7 = isEmpty((java.util.List<?>) r20)     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r8 = ","
            r9 = 2
            r10 = 1
            r11 = 0
            if (r7 != 0) goto L_0x0076
            r0 = r20
            java.lang.String r0 = android.text.TextUtils.join(r8, r0)     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r7 = "SELECT uid, read_state, out FROM messages WHERE mid IN(%s)"
            java.lang.Object[] r8 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x02d7 }
            r8[r11] = r0     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r0 = java.lang.String.format(r3, r7, r8)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Object[] r3 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteCursor r0 = r2.queryFinalized(r0, r3)     // Catch:{ Exception -> 0x02d7 }
        L_0x003c:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x02d7 }
            if (r2 == 0) goto L_0x0071
            int r2 = r0.intValue(r9)     // Catch:{ Exception -> 0x02d7 }
            if (r2 == 0) goto L_0x0049
            goto L_0x003c
        L_0x0049:
            int r2 = r0.intValue(r10)     // Catch:{ Exception -> 0x02d7 }
            if (r2 == 0) goto L_0x0050
            goto L_0x003c
        L_0x0050:
            long r2 = r0.longValue(r11)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Object r7 = r4.get(r2)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x02d7 }
            if (r7 != 0) goto L_0x0064
            java.lang.Integer r7 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x02d7 }
            r4.put(r2, r7)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x003c
        L_0x0064:
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x02d7 }
            int r7 = r7 + r10
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x02d7 }
            r4.put(r2, r7)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x003c
        L_0x0071:
            r0.dispose()     // Catch:{ Exception -> 0x02d7 }
            goto L_0x01f2
        L_0x0076:
            boolean r7 = isEmpty((org.telegram.messenger.support.SparseLongArray) r21)     // Catch:{ Exception -> 0x02d7 }
            if (r7 != 0) goto L_0x00e8
            r7 = 0
        L_0x007d:
            int r13 = r21.size()     // Catch:{ Exception -> 0x02d7 }
            if (r7 >= r13) goto L_0x00e8
            int r13 = r0.keyAt(r7)     // Catch:{ Exception -> 0x02d7 }
            long r14 = r0.get(r13)     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r11 = "SELECT COUNT(mid) FROM messages WHERE uid = %d AND mid > %d AND read_state IN(0,2) AND out = 0"
            java.lang.Object[] r0 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r18 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x02d7 }
            r9 = 0
            r0[r9] = r18     // Catch:{ Exception -> 0x02d7 }
            java.lang.Long r17 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02d7 }
            r16 = 1
            r0[r16] = r17     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r0 = java.lang.String.format(r10, r11, r0)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteCursor r0 = r12.queryFinalized(r0, r10)     // Catch:{ Exception -> 0x02d7 }
            boolean r10 = r0.next()     // Catch:{ Exception -> 0x02d7 }
            if (r10 == 0) goto L_0x00be
            long r10 = (long) r13     // Catch:{ Exception -> 0x02d7 }
            int r12 = r0.intValue(r9)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x02d7 }
            r4.put(r10, r9)     // Catch:{ Exception -> 0x02d7 }
        L_0x00be:
            r0.dispose()     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r9 = "UPDATE dialogs SET inbox_max = max((SELECT inbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r9)     // Catch:{ Exception -> 0x02d7 }
            r0.requery()     // Catch:{ Exception -> 0x02d7 }
            long r9 = (long) r13     // Catch:{ Exception -> 0x02d7 }
            r11 = 1
            r0.bindLong(r11, r9)     // Catch:{ Exception -> 0x02d7 }
            int r11 = (int) r14     // Catch:{ Exception -> 0x02d7 }
            r12 = 2
            r0.bindInteger(r12, r11)     // Catch:{ Exception -> 0x02d7 }
            r11 = 3
            r0.bindLong(r11, r9)     // Catch:{ Exception -> 0x02d7 }
            r0.step()     // Catch:{ Exception -> 0x02d7 }
            r0.dispose()     // Catch:{ Exception -> 0x02d7 }
            int r7 = r7 + 1
            r0 = r21
            r9 = 2
            r10 = 1
            r11 = 0
            goto L_0x007d
        L_0x00e8:
            boolean r0 = isEmpty((java.util.List<?>) r23)     // Catch:{ Exception -> 0x02d7 }
            if (r0 != 0) goto L_0x01bb
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02d7 }
            r0.<init>(r3)     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r3 = android.text.TextUtils.join(r8, r3)     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r9 = "SELECT uid, read_state, out, mention, mid FROM messages WHERE mid IN(%s)"
            r10 = 1
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x02d7 }
            r10 = 0
            r11[r10] = r3     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r3 = java.lang.String.format(r8, r9, r11)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Object[] r8 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteCursor r3 = r7.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x02d7 }
        L_0x010d:
            boolean r7 = r3.next()     // Catch:{ Exception -> 0x02d7 }
            if (r7 == 0) goto L_0x018d
            long r7 = r3.longValue(r10)     // Catch:{ Exception -> 0x02d7 }
            r9 = 4
            long r9 = r3.longValue(r9)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x02d7 }
            r0.remove(r9)     // Catch:{ Exception -> 0x02d7 }
            r9 = 1
            int r10 = r3.intValue(r9)     // Catch:{ Exception -> 0x02d7 }
            r11 = 2
            if (r10 >= r11) goto L_0x018b
            int r10 = r3.intValue(r11)     // Catch:{ Exception -> 0x02d7 }
            if (r10 != 0) goto L_0x018b
            r10 = 3
            int r11 = r3.intValue(r10)     // Catch:{ Exception -> 0x02d7 }
            if (r11 != r9) goto L_0x018b
            java.lang.Object r9 = r5.get(r7)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r9 = (java.lang.Integer) r9     // Catch:{ Exception -> 0x02d7 }
            if (r9 != 0) goto L_0x0179
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02d7 }
            r10.<init>()     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r11 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r10.append(r11)     // Catch:{ Exception -> 0x02d7 }
            r10.append(r7)     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x02d7 }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r10, r12)     // Catch:{ Exception -> 0x02d7 }
            boolean r10 = r9.next()     // Catch:{ Exception -> 0x02d7 }
            if (r10 == 0) goto L_0x0165
            int r17 = r9.intValue(r11)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x0167
        L_0x0165:
            r17 = 0
        L_0x0167:
            r9.dispose()     // Catch:{ Exception -> 0x02d7 }
            r9 = 1
            int r10 = r17 + -1
            int r9 = java.lang.Math.max(r11, r10)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x02d7 }
            r5.put(r7, r9)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x018b
        L_0x0179:
            int r9 = r9.intValue()     // Catch:{ Exception -> 0x02d7 }
            r10 = 1
            int r9 = r9 - r10
            r10 = 0
            int r9 = java.lang.Math.max(r10, r9)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x02d7 }
            r5.put(r7, r9)     // Catch:{ Exception -> 0x02d7 }
        L_0x018b:
            r10 = 0
            goto L_0x010d
        L_0x018d:
            r3.dispose()     // Catch:{ Exception -> 0x02d7 }
            r9 = 0
        L_0x0191:
            int r3 = r0.size()     // Catch:{ Exception -> 0x02d7 }
            if (r9 >= r3) goto L_0x01bb
            java.lang.Object r3 = r0.get(r9)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ Exception -> 0x02d7 }
            long r7 = r3.longValue()     // Catch:{ Exception -> 0x02d7 }
            r3 = 32
            long r7 = r7 >> r3
            int r3 = (int) r7     // Catch:{ Exception -> 0x02d7 }
            if (r3 <= 0) goto L_0x01b8
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x02d7 }
            boolean r7 = r6.contains(r7)     // Catch:{ Exception -> 0x02d7 }
            if (r7 != 0) goto L_0x01b8
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x02d7 }
            r6.add(r3)     // Catch:{ Exception -> 0x02d7 }
        L_0x01b8:
            int r9 = r9 + 1
            goto L_0x0191
        L_0x01bb:
            boolean r0 = isEmpty((org.telegram.messenger.support.SparseLongArray) r22)     // Catch:{ Exception -> 0x02d7 }
            if (r0 != 0) goto L_0x01f2
            r9 = 0
        L_0x01c2:
            int r0 = r22.size()     // Catch:{ Exception -> 0x02d7 }
            if (r9 >= r0) goto L_0x01f2
            int r0 = r2.keyAt(r9)     // Catch:{ Exception -> 0x02d7 }
            long r7 = r2.get(r0)     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r10 = "UPDATE dialogs SET outbox_max = max((SELECT outbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r10)     // Catch:{ Exception -> 0x02d7 }
            r3.requery()     // Catch:{ Exception -> 0x02d7 }
            long r10 = (long) r0     // Catch:{ Exception -> 0x02d7 }
            r0 = 1
            r3.bindLong(r0, r10)     // Catch:{ Exception -> 0x02d7 }
            int r0 = (int) r7     // Catch:{ Exception -> 0x02d7 }
            r7 = 2
            r3.bindInteger(r7, r0)     // Catch:{ Exception -> 0x02d7 }
            r0 = 3
            r3.bindLong(r0, r10)     // Catch:{ Exception -> 0x02d7 }
            r3.step()     // Catch:{ Exception -> 0x02d7 }
            r3.dispose()     // Catch:{ Exception -> 0x02d7 }
            int r9 = r9 + 1
            goto L_0x01c2
        L_0x01f2:
            int r0 = r4.size()     // Catch:{ Exception -> 0x02d7 }
            if (r0 > 0) goto L_0x0202
            int r0 = r5.size()     // Catch:{ Exception -> 0x02d7 }
            if (r0 <= 0) goto L_0x01ff
            goto L_0x0202
        L_0x01ff:
            r0 = 1
            goto L_0x02bf
        L_0x0202:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d7 }
            r0.beginTransaction()     // Catch:{ Exception -> 0x02d7 }
            int r0 = r4.size()     // Catch:{ Exception -> 0x02d7 }
            if (r0 <= 0) goto L_0x0280
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02d7 }
            r0.<init>()     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r3 = "UPDATE dialogs SET unread_count = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x02d7 }
            r9 = 0
        L_0x021b:
            int r3 = r4.size()     // Catch:{ Exception -> 0x02d7 }
            if (r9 >= r3) goto L_0x0278
            long r7 = r4.keyAt(r9)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Object r3 = r4.valueAt(r9)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ Exception -> 0x02d7 }
            int r3 = r3.intValue()     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02d7 }
            r11.<init>()     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r12 = "SELECT unread_count FROM dialogs WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x02d7 }
            r11.append(r7)     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x02d7 }
            r12 = 0
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02d7 }
            org.telegram.SQLite.SQLiteCursor r10 = r10.queryFinalized(r11, r13)     // Catch:{ Exception -> 0x02d7 }
            boolean r11 = r10.next()     // Catch:{ Exception -> 0x02d7 }
            if (r11 == 0) goto L_0x0254
            int r11 = r10.intValue(r12)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x0255
        L_0x0254:
            r11 = 0
        L_0x0255:
            r10.dispose()     // Catch:{ Exception -> 0x02d7 }
            if (r11 != r3) goto L_0x0261
            r4.removeAt(r9)     // Catch:{ Exception -> 0x02d7 }
            int r9 = r9 + -1
            r10 = 1
            goto L_0x0276
        L_0x0261:
            r2.requery()     // Catch:{ Exception -> 0x02d7 }
            r10 = 1
            r2.bindInteger(r10, r3)     // Catch:{ Exception -> 0x02d7 }
            r3 = 2
            r2.bindLong(r3, r7)     // Catch:{ Exception -> 0x02d7 }
            r2.step()     // Catch:{ Exception -> 0x02d7 }
            java.lang.Long r3 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x02d7 }
            r0.add(r3)     // Catch:{ Exception -> 0x02d7 }
        L_0x0276:
            int r9 = r9 + r10
            goto L_0x021b
        L_0x0278:
            r12 = 0
            r2.dispose()     // Catch:{ Exception -> 0x02d7 }
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r0)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x0281
        L_0x0280:
            r12 = 0
        L_0x0281:
            int r0 = r5.size()     // Catch:{ Exception -> 0x02d7 }
            if (r0 <= 0) goto L_0x02b8
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d7 }
            java.lang.String r2 = "UPDATE dialogs SET unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02d7 }
            r11 = 0
        L_0x0290:
            int r2 = r5.size()     // Catch:{ Exception -> 0x02d7 }
            if (r11 >= r2) goto L_0x02b5
            r0.requery()     // Catch:{ Exception -> 0x02d7 }
            java.lang.Object r2 = r5.valueAt(r11)     // Catch:{ Exception -> 0x02d7 }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ Exception -> 0x02d7 }
            int r2 = r2.intValue()     // Catch:{ Exception -> 0x02d7 }
            r3 = 1
            r0.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02d7 }
            long r2 = r5.keyAt(r11)     // Catch:{ Exception -> 0x02d7 }
            r7 = 2
            r0.bindLong(r7, r2)     // Catch:{ Exception -> 0x02d7 }
            r0.step()     // Catch:{ Exception -> 0x02d7 }
            int r11 = r11 + 1
            goto L_0x0290
        L_0x02b5:
            r0.dispose()     // Catch:{ Exception -> 0x02d7 }
        L_0x02b8:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d7 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x02d7 }
            goto L_0x01ff
        L_0x02bf:
            r1.updateFiltersReadCounter(r4, r5, r0)     // Catch:{ Exception -> 0x02d7 }
            org.telegram.messenger.MessagesController r0 = r19.getMessagesController()     // Catch:{ Exception -> 0x02d7 }
            r0.processDialogsUpdateRead(r4, r5)     // Catch:{ Exception -> 0x02d7 }
            boolean r0 = r6.isEmpty()     // Catch:{ Exception -> 0x02d7 }
            if (r0 != 0) goto L_0x02db
            org.telegram.messenger.MessagesController r0 = r19.getMessagesController()     // Catch:{ Exception -> 0x02d7 }
            r0.reloadMentionsCountForChannels(r6)     // Catch:{ Exception -> 0x02d7 }
            goto L_0x02db
        L_0x02d7:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x02db:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.updateDialogsWithReadMessagesInternal(java.util.ArrayList, org.telegram.messenger.support.SparseLongArray, org.telegram.messenger.support.SparseLongArray, java.util.ArrayList):void");
    }

    private static boolean isEmpty(SparseArray<?> sparseArray) {
        return sparseArray == null || sparseArray.size() == 0;
    }

    private static boolean isEmpty(SparseLongArray sparseLongArray) {
        return sparseLongArray == null || sparseLongArray.size() == 0;
    }

    private static boolean isEmpty(List<?> list) {
        return list == null || list.isEmpty();
    }

    private static boolean isEmpty(SparseIntArray sparseIntArray) {
        return sparseIntArray == null || sparseIntArray.size() == 0;
    }

    private static boolean isEmpty(LongSparseArray<?> longSparseArray) {
        return longSparseArray == null || longSparseArray.size() == 0;
    }

    public void updateDialogsWithReadMessages(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, ArrayList<Long> arrayList, boolean z) {
        if (isEmpty(sparseLongArray) && isEmpty(sparseLongArray2) && isEmpty((List<?>) arrayList)) {
            return;
        }
        if (z) {
            this.storageQueue.postRunnable(new Runnable(sparseLongArray, sparseLongArray2, arrayList) {
                public final /* synthetic */ SparseLongArray f$1;
                public final /* synthetic */ SparseLongArray f$2;
                public final /* synthetic */ ArrayList f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateDialogsWithReadMessages$74$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, sparseLongArray, sparseLongArray2, arrayList);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateDialogsWithReadMessages$74 */
    public /* synthetic */ void lambda$updateDialogsWithReadMessages$74$MessagesStorage(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, ArrayList arrayList) {
        updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, sparseLongArray, sparseLongArray2, arrayList);
    }

    public void updateChatParticipants(TLRPC$ChatParticipants tLRPC$ChatParticipants) {
        if (tLRPC$ChatParticipants != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$ChatParticipants) {
                public final /* synthetic */ TLRPC$ChatParticipants f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateChatParticipants$76$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateChatParticipants$76 */
    public /* synthetic */ void lambda$updateChatParticipants$76$MessagesStorage(TLRPC$ChatParticipants tLRPC$ChatParticipants) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT info, pinned, online, inviter FROM chat_settings_v2 WHERE uid = " + tLRPC$ChatParticipants.chat_id, new Object[0]);
            TLRPC$ChatFull tLRPC$ChatFull = null;
            new ArrayList();
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                tLRPC$ChatFull = TLRPC$ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                tLRPC$ChatFull.pinned_msg_id = queryFinalized.intValue(1);
                tLRPC$ChatFull.online_count = queryFinalized.intValue(2);
                tLRPC$ChatFull.inviterId = queryFinalized.intValue(3);
            }
            queryFinalized.dispose();
            if (tLRPC$ChatFull instanceof TLRPC$TL_chatFull) {
                tLRPC$ChatFull.participants = tLRPC$ChatParticipants;
                AndroidUtilities.runOnUIThread(new Runnable(tLRPC$ChatFull) {
                    public final /* synthetic */ TLRPC$ChatFull f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$75$MessagesStorage(this.f$1);
                    }
                });
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$ChatFull.getObjectSize());
                tLRPC$ChatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, tLRPC$ChatFull.id);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, tLRPC$ChatFull.pinned_msg_id);
                executeFast.bindInteger(4, tLRPC$ChatFull.online_count);
                executeFast.bindInteger(5, tLRPC$ChatFull.inviterId);
                executeFast.bindInteger(6, tLRPC$ChatFull.invitesCount);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$75 */
    public /* synthetic */ void lambda$null$75$MessagesStorage(TLRPC$ChatFull tLRPC$ChatFull) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.chatInfoDidLoad;
        Boolean bool = Boolean.FALSE;
        notificationCenter.postNotificationName(i, tLRPC$ChatFull, 0, bool, bool);
    }

    public void loadChannelAdmins(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$loadChannelAdmins$77$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$loadChannelAdmins$77 */
    public /* synthetic */ void lambda$loadChannelAdmins$77$MessagesStorage(int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT uid, data FROM channel_admins_v3 WHERE did = " + i, new Object[0]);
            SparseArray sparseArray = new SparseArray();
            while (queryFinalized.next()) {
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    TLRPC$ChannelParticipant TLdeserialize = TLRPC$ChannelParticipant.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (TLdeserialize != null) {
                        sparseArray.put(queryFinalized.intValue(0), TLdeserialize);
                    }
                }
            }
            queryFinalized.dispose();
            getMessagesController().processLoadedChannelAdmins(sparseArray, i, true);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putChannelAdmins(int i, SparseArray<TLRPC$ChannelParticipant> sparseArray) {
        this.storageQueue.postRunnable(new Runnable(i, sparseArray) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ SparseArray f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$putChannelAdmins$78$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putChannelAdmins$78 */
    public /* synthetic */ void lambda$putChannelAdmins$78$MessagesStorage(int i, SparseArray sparseArray) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM channel_admins_v3 WHERE did = " + i).stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO channel_admins_v3 VALUES(?, ?, ?)");
            long currentTimeMillis = System.currentTimeMillis() / 1000;
            for (int i2 = 0; i2 < sparseArray.size(); i2++) {
                executeFast.requery();
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, sparseArray.keyAt(i2));
                TLRPC$ChannelParticipant tLRPC$ChannelParticipant = (TLRPC$ChannelParticipant) sparseArray.valueAt(i2);
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$ChannelParticipant.getObjectSize());
                tLRPC$ChannelParticipant.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(3, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChannelUsers(int i, ArrayList<TLRPC$ChannelParticipant> arrayList) {
        this.storageQueue.postRunnable(new Runnable(i, arrayList) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ ArrayList f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChannelUsers$79$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateChannelUsers$79 */
    public /* synthetic */ void lambda$updateChannelUsers$79$MessagesStorage(int i, ArrayList arrayList) {
        long j = (long) (-i);
        try {
            this.database.executeFast("DELETE FROM channel_users_v2 WHERE did = " + j).stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO channel_users_v2 VALUES(?, ?, ?, ?)");
            int currentTimeMillis = (int) (System.currentTimeMillis() / 1000);
            for (int i2 = 0; i2 < arrayList.size(); i2++) {
                TLRPC$ChannelParticipant tLRPC$ChannelParticipant = (TLRPC$ChannelParticipant) arrayList.get(i2);
                executeFast.requery();
                executeFast.bindLong(1, j);
                executeFast.bindInteger(2, MessageObject.getPeerId(tLRPC$ChannelParticipant.peer));
                executeFast.bindInteger(3, currentTimeMillis);
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$ChannelParticipant.getObjectSize());
                tLRPC$ChannelParticipant.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(4, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
                currentTimeMillis--;
            }
            executeFast.dispose();
            this.database.commitTransaction();
            loadChatInfo(i, true, (CountDownLatch) null, false, true);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveBotCache(String str, TLObject tLObject) {
        if (tLObject != null && !TextUtils.isEmpty(str)) {
            this.storageQueue.postRunnable(new Runnable(tLObject, str) {
                public final /* synthetic */ TLObject f$1;
                public final /* synthetic */ String f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$saveBotCache$80$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$saveBotCache$80 */
    public /* synthetic */ void lambda$saveBotCache$80$MessagesStorage(TLObject tLObject, String str) {
        int i;
        try {
            int currentTime = getConnectionsManager().getCurrentTime();
            if (tLObject instanceof TLRPC$TL_messages_botCallbackAnswer) {
                i = ((TLRPC$TL_messages_botCallbackAnswer) tLObject).cache_time;
            } else {
                if (tLObject instanceof TLRPC$TL_messages_botResults) {
                    i = ((TLRPC$TL_messages_botResults) tLObject).cache_time;
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO botcache VALUES(?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLObject.getObjectSize());
                tLObject.serializeToStream(nativeByteBuffer);
                executeFast.bindString(1, str);
                executeFast.bindInteger(2, currentTime);
                executeFast.bindByteBuffer(3, nativeByteBuffer);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
            currentTime += i;
            SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO botcache VALUES(?, ?, ?)");
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(tLObject.getObjectSize());
            tLObject.serializeToStream(nativeByteBuffer2);
            executeFast2.bindString(1, str);
            executeFast2.bindInteger(2, currentTime);
            executeFast2.bindByteBuffer(3, nativeByteBuffer2);
            executeFast2.step();
            executeFast2.dispose();
            nativeByteBuffer2.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getBotCache(String str, RequestDelegate requestDelegate) {
        if (str != null && requestDelegate != null) {
            this.storageQueue.postRunnable(new Runnable(getConnectionsManager().getCurrentTime(), str, requestDelegate) {
                public final /* synthetic */ int f$1;
                public final /* synthetic */ String f$2;
                public final /* synthetic */ RequestDelegate f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$getBotCache$81$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:21:0x005d, code lost:
        r5 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:22:0x005e, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:23:0x0060, code lost:
        r5 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x0061, code lost:
        r1 = null;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x005d A[ExcHandler: all (th java.lang.Throwable), Splitter:B:1:0x0001] */
    /* renamed from: lambda$getBotCache$81 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getBotCache$81$MessagesStorage(int r5, java.lang.String r6, org.telegram.tgnet.RequestDelegate r7) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r2.<init>()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.String r3 = "DELETE FROM botcache WHERE date < "
            r2.append(r3)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r2.append(r5)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r1.executeFast(r5)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.stepThis()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r5.dispose()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.String r1 = "SELECT data FROM botcache WHERE id = ?"
            r2 = 1
            java.lang.Object[] r2 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r3 = 0
            r2[r3] = r6     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            if (r6 == 0) goto L_0x0056
            org.telegram.tgnet.NativeByteBuffer r6 = r5.byteBufferValue(r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            if (r6 == 0) goto L_0x0056
            int r1 = r6.readInt32(r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            int r2 = org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer.constructor     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            if (r1 != r2) goto L_0x0046
            org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer r1 = org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer.TLdeserialize(r6, r1, r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            goto L_0x004a
        L_0x0046:
            org.telegram.tgnet.TLRPC$messages_BotResults r1 = org.telegram.tgnet.TLRPC$messages_BotResults.TLdeserialize(r6, r1, r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
        L_0x004a:
            r6.reuse()     // Catch:{ Exception -> 0x004e }
            goto L_0x0057
        L_0x004e:
            r6 = move-exception
            goto L_0x0052
        L_0x0050:
            r6 = move-exception
            r1 = r0
        L_0x0052:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ Exception -> 0x005b }
            goto L_0x0057
        L_0x0056:
            r1 = r0
        L_0x0057:
            r5.dispose()     // Catch:{ Exception -> 0x005b }
            goto L_0x0065
        L_0x005b:
            r5 = move-exception
            goto L_0x0062
        L_0x005d:
            r5 = move-exception
            r1 = r0
            goto L_0x006a
        L_0x0060:
            r5 = move-exception
            r1 = r0
        L_0x0062:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0069 }
        L_0x0065:
            r7.run(r1, r0)
            return
        L_0x0069:
            r5 = move-exception
        L_0x006a:
            r7.run(r1, r0)
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getBotCache$81$MessagesStorage(int, java.lang.String, org.telegram.tgnet.RequestDelegate):void");
    }

    public void loadUserInfo(TLRPC$User tLRPC$User, boolean z, int i, int i2) {
        if (tLRPC$User != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$User, z, i) {
                public final /* synthetic */ TLRPC$User f$1;
                public final /* synthetic */ boolean f$2;
                public final /* synthetic */ int f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$loadUserInfo$82$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$loadUserInfo$82 */
    public /* synthetic */ void lambda$loadUserInfo$82$MessagesStorage(TLRPC$User tLRPC$User, boolean z, int i) {
        Throwable th;
        boolean z2;
        TLRPC$UserFull tLRPC$UserFull;
        int i2;
        boolean z3;
        boolean z4;
        TLRPC$UserFull tLRPC$UserFull2;
        TLRPC$User tLRPC$User2;
        MessagesController messagesController;
        TLRPC$UserFull tLRPC$UserFull3;
        boolean z5;
        int i3;
        ArrayList<MessageObject> loadPinnedMessages;
        NativeByteBuffer byteBufferValue;
        HashMap hashMap = new HashMap();
        ArrayList arrayList = new ArrayList();
        int i4 = 0;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT info, pinned FROM user_settings WHERE uid = " + tLRPC$User.id, new Object[0]);
            boolean z6 = true;
            if (!queryFinalized.next() || (byteBufferValue = queryFinalized.byteBufferValue(0)) == null) {
                tLRPC$UserFull3 = null;
            } else {
                TLRPC$UserFull TLdeserialize = TLRPC$UserFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                try {
                    TLdeserialize.pinned_msg_id = queryFinalized.intValue(1);
                    byteBufferValue.reuse();
                    tLRPC$UserFull3 = TLdeserialize;
                } catch (Exception e) {
                    e = e;
                    tLRPC$UserFull2 = TLdeserialize;
                    z2 = false;
                    try {
                        FileLog.e((Throwable) e);
                        messagesController = getMessagesController();
                        z4 = true;
                        tLRPC$User2 = tLRPC$User;
                        z3 = z;
                        i2 = i;
                        messagesController.processUserInfo(tLRPC$User2, tLRPC$UserFull2, z4, z3, i2, arrayList, hashMap, i4, z2);
                    } catch (Throwable th2) {
                        th = th2;
                        th = th;
                        getMessagesController().processUserInfo(tLRPC$User, tLRPC$UserFull, true, z, i, arrayList, hashMap, i4, z2);
                        throw th;
                    }
                } catch (Throwable th3) {
                    th = th3;
                    tLRPC$UserFull = TLdeserialize;
                    z2 = false;
                    getMessagesController().processUserInfo(tLRPC$User, tLRPC$UserFull, true, z, i, arrayList, hashMap, i4, z2);
                    throw th;
                }
            }
            try {
                queryFinalized.dispose();
                SQLiteCursor queryFinalized2 = getMessagesStorage().getDatabase().queryFinalized(String.format(Locale.US, "SELECT mid FROM chat_pinned_v2 WHERE uid = %d ORDER BY mid DESC", new Object[]{Integer.valueOf(tLRPC$User.id)}), new Object[0]);
                while (queryFinalized2.next()) {
                    int intValue = queryFinalized2.intValue(0);
                    arrayList.add(Integer.valueOf(intValue));
                    hashMap.put(Integer.valueOf(intValue), (Object) null);
                }
                queryFinalized2.dispose();
                SQLiteCursor queryFinalized3 = this.database.queryFinalized("SELECT count, end FROM chat_pinned_count WHERE uid = " + tLRPC$User.id, new Object[0]);
                if (queryFinalized3.next()) {
                    int intValue2 = queryFinalized3.intValue(0);
                    try {
                        if (queryFinalized3.intValue(1) == 0) {
                            z6 = false;
                        }
                        i3 = intValue2;
                        z5 = z6;
                    } catch (Exception e2) {
                        e = e2;
                        i4 = intValue2;
                        tLRPC$UserFull2 = tLRPC$UserFull3;
                        z2 = false;
                        FileLog.e((Throwable) e);
                        messagesController = getMessagesController();
                        z4 = true;
                        tLRPC$User2 = tLRPC$User;
                        z3 = z;
                        i2 = i;
                        messagesController.processUserInfo(tLRPC$User2, tLRPC$UserFull2, z4, z3, i2, arrayList, hashMap, i4, z2);
                    } catch (Throwable th4) {
                        th = th4;
                        i4 = intValue2;
                        tLRPC$UserFull = tLRPC$UserFull3;
                        z2 = false;
                        getMessagesController().processUserInfo(tLRPC$User, tLRPC$UserFull, true, z, i, arrayList, hashMap, i4, z2);
                        throw th;
                    }
                } else {
                    i3 = 0;
                    z5 = false;
                }
                try {
                    queryFinalized3.dispose();
                    if (!(tLRPC$UserFull3 == null || tLRPC$UserFull3.pinned_msg_id == 0 || (!arrayList.isEmpty() && tLRPC$UserFull3.pinned_msg_id <= ((Integer) arrayList.get(0)).intValue()))) {
                        arrayList.clear();
                        arrayList.add(Integer.valueOf(tLRPC$UserFull3.pinned_msg_id));
                        hashMap.put(Integer.valueOf(tLRPC$UserFull3.pinned_msg_id), (Object) null);
                    }
                    if (!arrayList.isEmpty() && (loadPinnedMessages = getMediaDataController().loadPinnedMessages((long) tLRPC$User.id, 0, arrayList, false)) != null) {
                        int size = loadPinnedMessages.size();
                        while (i4 < size) {
                            MessageObject messageObject = loadPinnedMessages.get(i4);
                            hashMap.put(Integer.valueOf(messageObject.getId()), messageObject);
                            i4++;
                        }
                    }
                    messagesController = getMessagesController();
                    z4 = true;
                    tLRPC$User2 = tLRPC$User;
                    tLRPC$UserFull2 = tLRPC$UserFull3;
                    z3 = z;
                    i2 = i;
                    i4 = i3;
                    z2 = z5;
                } catch (Exception e3) {
                    e = e3;
                    tLRPC$UserFull2 = tLRPC$UserFull3;
                    i4 = i3;
                    z2 = z5;
                    FileLog.e((Throwable) e);
                    messagesController = getMessagesController();
                    z4 = true;
                    tLRPC$User2 = tLRPC$User;
                    z3 = z;
                    i2 = i;
                    messagesController.processUserInfo(tLRPC$User2, tLRPC$UserFull2, z4, z3, i2, arrayList, hashMap, i4, z2);
                } catch (Throwable th5) {
                    th = th5;
                    tLRPC$UserFull2 = tLRPC$UserFull3;
                    i4 = i3;
                    z2 = z5;
                    th = th;
                    getMessagesController().processUserInfo(tLRPC$User, tLRPC$UserFull, true, z, i, arrayList, hashMap, i4, z2);
                    throw th;
                }
            } catch (Exception e4) {
                e = e4;
                tLRPC$UserFull2 = tLRPC$UserFull3;
                z2 = false;
                FileLog.e((Throwable) e);
                messagesController = getMessagesController();
                z4 = true;
                tLRPC$User2 = tLRPC$User;
                z3 = z;
                i2 = i;
                messagesController.processUserInfo(tLRPC$User2, tLRPC$UserFull2, z4, z3, i2, arrayList, hashMap, i4, z2);
            } catch (Throwable th6) {
                th = th6;
                tLRPC$UserFull = tLRPC$UserFull3;
                z2 = false;
                getMessagesController().processUserInfo(tLRPC$User, tLRPC$UserFull, true, z, i, arrayList, hashMap, i4, z2);
                throw th;
            }
        } catch (Exception e5) {
            tLRPC$UserFull2 = null;
            e = e5;
            z2 = false;
            FileLog.e((Throwable) e);
            messagesController = getMessagesController();
            z4 = true;
            tLRPC$User2 = tLRPC$User;
            z3 = z;
            i2 = i;
            messagesController.processUserInfo(tLRPC$User2, tLRPC$UserFull2, z4, z3, i2, arrayList, hashMap, i4, z2);
        } catch (Throwable th7) {
            tLRPC$UserFull = null;
            th = th7;
            z2 = false;
            getMessagesController().processUserInfo(tLRPC$User, tLRPC$UserFull, true, z, i, arrayList, hashMap, i4, z2);
            throw th;
        }
        messagesController.processUserInfo(tLRPC$User2, tLRPC$UserFull2, z4, z3, i2, arrayList, hashMap, i4, z2);
    }

    public void updateUserInfo(TLRPC$UserFull tLRPC$UserFull, boolean z) {
        this.storageQueue.postRunnable(new Runnable(z, tLRPC$UserFull) {
            public final /* synthetic */ boolean f$1;
            public final /* synthetic */ TLRPC$UserFull f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateUserInfo$83$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateUserInfo$83 */
    public /* synthetic */ void lambda$updateUserInfo$83$MessagesStorage(boolean z, TLRPC$UserFull tLRPC$UserFull) {
        if (z) {
            try {
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT uid FROM user_settings WHERE uid = " + tLRPC$UserFull.user.id, new Object[0]);
                boolean next = queryFinalized.next();
                queryFinalized.dispose();
                if (!next) {
                    return;
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_settings VALUES(?, ?, ?)");
        NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$UserFull.getObjectSize());
        tLRPC$UserFull.serializeToStream(nativeByteBuffer);
        executeFast.bindInteger(1, tLRPC$UserFull.user.id);
        executeFast.bindByteBuffer(2, nativeByteBuffer);
        executeFast.bindInteger(3, tLRPC$UserFull.pinned_msg_id);
        executeFast.step();
        executeFast.dispose();
        nativeByteBuffer.reuse();
        if ((tLRPC$UserFull.flags & 2048) != 0) {
            SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE dialogs SET folder_id = ? WHERE did = ?");
            executeFast2.bindInteger(1, tLRPC$UserFull.folder_id);
            executeFast2.bindLong(2, (long) tLRPC$UserFull.user.id);
            executeFast2.step();
            executeFast2.dispose();
            this.unknownDialogsIds.remove((long) tLRPC$UserFull.user.id);
        }
    }

    public void saveChatInviter(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i2, i) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveChatInviter$84$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$saveChatInviter$84 */
    public /* synthetic */ void lambda$saveChatInviter$84$MessagesStorage(int i, int i2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE chat_settings_v2 SET inviter = ? WHERE uid = ?");
            executeFast.requery();
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveChatLinksCount(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i2, i) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveChatLinksCount$85$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$saveChatLinksCount$85 */
    public /* synthetic */ void lambda$saveChatLinksCount$85$MessagesStorage(int i, int i2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE chat_settings_v2 SET links = ? WHERE uid = ?");
            executeFast.requery();
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChatInfo(TLRPC$ChatFull tLRPC$ChatFull, boolean z) {
        this.storageQueue.postRunnable(new Runnable(tLRPC$ChatFull, z) {
            public final /* synthetic */ TLRPC$ChatFull f$1;
            public final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatInfo$86$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateChatInfo$86 */
    public /* synthetic */ void lambda$updateChatInfo$86$MessagesStorage(TLRPC$ChatFull tLRPC$ChatFull, boolean z) {
        int i;
        int i2;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT online, inviter, links FROM chat_settings_v2 WHERE uid = " + tLRPC$ChatFull.id, new Object[0]);
            if (queryFinalized.next()) {
                i2 = queryFinalized.intValue(0);
                tLRPC$ChatFull.inviterId = queryFinalized.intValue(1);
                i = queryFinalized.intValue(2);
            } else {
                i2 = -1;
                i = 0;
            }
            queryFinalized.dispose();
            if (!z || i2 != -1) {
                if (i2 >= 0 && (tLRPC$ChatFull.flags & 8192) == 0) {
                    tLRPC$ChatFull.online_count = i2;
                }
                if (i >= 0) {
                    tLRPC$ChatFull.invitesCount = i;
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$ChatFull.getObjectSize());
                tLRPC$ChatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, tLRPC$ChatFull.id);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, tLRPC$ChatFull.pinned_msg_id);
                executeFast.bindInteger(4, tLRPC$ChatFull.online_count);
                executeFast.bindInteger(5, tLRPC$ChatFull.inviterId);
                executeFast.bindInteger(6, tLRPC$ChatFull.invitesCount);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
                if (tLRPC$ChatFull instanceof TLRPC$TL_channelFull) {
                    SQLiteDatabase sQLiteDatabase2 = this.database;
                    SQLiteCursor queryFinalized2 = sQLiteDatabase2.queryFinalized("SELECT inbox_max, outbox_max FROM dialogs WHERE did = " + (-tLRPC$ChatFull.id), new Object[0]);
                    if (queryFinalized2.next() && queryFinalized2.intValue(0) < tLRPC$ChatFull.read_inbox_max_id) {
                        int intValue = queryFinalized2.intValue(1);
                        SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE dialogs SET unread_count = ?, inbox_max = ?, outbox_max = ? WHERE did = ?");
                        executeFast2.bindInteger(1, tLRPC$ChatFull.unread_count);
                        executeFast2.bindInteger(2, tLRPC$ChatFull.read_inbox_max_id);
                        executeFast2.bindInteger(3, Math.max(intValue, tLRPC$ChatFull.read_outbox_max_id));
                        executeFast2.bindLong(4, (long) (-tLRPC$ChatFull.id));
                        executeFast2.step();
                        executeFast2.dispose();
                    }
                    queryFinalized2.dispose();
                }
                if ((tLRPC$ChatFull.flags & 2048) != 0) {
                    SQLitePreparedStatement executeFast3 = this.database.executeFast("UPDATE dialogs SET folder_id = ? WHERE did = ?");
                    executeFast3.bindInteger(1, tLRPC$ChatFull.folder_id);
                    executeFast3.bindLong(2, (long) (-tLRPC$ChatFull.id));
                    executeFast3.step();
                    executeFast3.dispose();
                    this.unknownDialogsIds.remove((long) (-tLRPC$ChatFull.id));
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChatOnlineCount(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i2, i) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatOnlineCount$87$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateChatOnlineCount$87 */
    public /* synthetic */ void lambda$updateChatOnlineCount$87$MessagesStorage(int i, int i2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE chat_settings_v2 SET online = ? WHERE uid = ?");
            executeFast.requery();
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updatePinnedMessages(long j, ArrayList<Integer> arrayList, boolean z, int i, int i2, boolean z2, HashMap<Integer, MessageObject> hashMap) {
        this.storageQueue.postRunnable(new Runnable(z, hashMap, i2, j, arrayList, i, z2) {
            public final /* synthetic */ boolean f$1;
            public final /* synthetic */ HashMap f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ long f$4;
            public final /* synthetic */ ArrayList f$5;
            public final /* synthetic */ int f$6;
            public final /* synthetic */ boolean f$7;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r7;
                this.f$6 = r8;
                this.f$7 = r9;
            }

            public final void run() {
                MessagesStorage.this.lambda$updatePinnedMessages$90$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updatePinnedMessages$90 */
    public /* synthetic */ void lambda$updatePinnedMessages$90$MessagesStorage(boolean z, HashMap hashMap, int i, long j, ArrayList arrayList, int i2, boolean z2) {
        int i3;
        boolean z3;
        int i4;
        int i5;
        boolean z4;
        int i6;
        boolean z5;
        int i7;
        int max;
        HashMap hashMap2 = hashMap;
        long j2 = j;
        ArrayList arrayList2 = arrayList;
        int i8 = 2;
        int i9 = 1;
        if (z) {
            try {
                this.database.beginTransaction();
                if (hashMap2 != null) {
                    if (i == 0) {
                        SQLiteDatabase sQLiteDatabase = this.database;
                        sQLiteDatabase.executeFast("DELETE FROM chat_pinned_v2 WHERE uid = " + j2).stepThis().dispose();
                    }
                    i6 = 0;
                } else {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d AND mid IN (%s)", new Object[]{Long.valueOf(j), TextUtils.join(",", arrayList2)}), new Object[0]);
                    i6 = queryFinalized.next() ? queryFinalized.intValue(0) : 0;
                    queryFinalized.dispose();
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_pinned_v2 VALUES(?, ?, ?)");
                int size = arrayList.size();
                int i10 = 0;
                while (i10 < size) {
                    Integer num = (Integer) arrayList2.get(i10);
                    executeFast.requery();
                    executeFast.bindLong(1, j2);
                    executeFast.bindInteger(i8, num.intValue());
                    NativeByteBuffer nativeByteBuffer = null;
                    MessageObject messageObject = hashMap2 != null ? (MessageObject) hashMap2.get(num) : null;
                    if (messageObject != null) {
                        nativeByteBuffer = new NativeByteBuffer(messageObject.messageOwner.getObjectSize());
                        messageObject.messageOwner.serializeToStream(nativeByteBuffer);
                        executeFast.bindByteBuffer(3, nativeByteBuffer);
                    } else {
                        executeFast.bindNull(3);
                    }
                    executeFast.step();
                    if (nativeByteBuffer != null) {
                        nativeByteBuffer.reuse();
                    }
                    i10++;
                    i8 = 2;
                }
                executeFast.dispose();
                this.database.commitTransaction();
                SQLiteDatabase sQLiteDatabase2 = this.database;
                Locale locale = Locale.US;
                SQLiteCursor queryFinalized2 = sQLiteDatabase2.queryFinalized(String.format(locale, "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
                int intValue = queryFinalized2.next() ? queryFinalized2.intValue(0) : 0;
                queryFinalized2.dispose();
                if (hashMap2 != null) {
                    max = Math.max(i2, intValue);
                    z5 = z2;
                } else {
                    SQLiteCursor queryFinalized3 = this.database.queryFinalized(String.format(locale, "SELECT count, end FROM chat_pinned_count WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
                    if (queryFinalized3.next()) {
                        i7 = queryFinalized3.intValue(0);
                        if (queryFinalized3.intValue(1) != 0) {
                            z5 = true;
                            queryFinalized3.dispose();
                            max = Math.max(i7 + (arrayList.size() - i6), intValue);
                        }
                    } else {
                        i7 = 0;
                    }
                    z5 = false;
                    queryFinalized3.dispose();
                    max = Math.max(i7 + (arrayList.size() - i6), intValue);
                }
                int i11 = max;
                SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO chat_pinned_count VALUES(?, ?, ?)");
                executeFast2.requery();
                executeFast2.bindLong(1, j2);
                executeFast2.bindInteger(2, i11);
                if (!z5) {
                    i9 = 0;
                }
                executeFast2.bindInteger(3, i9);
                executeFast2.step();
                executeFast2.dispose();
                AndroidUtilities.runOnUIThread(new Runnable(j, arrayList, hashMap, i, i11, z5) {
                    public final /* synthetic */ long f$1;
                    public final /* synthetic */ ArrayList f$2;
                    public final /* synthetic */ HashMap f$3;
                    public final /* synthetic */ int f$4;
                    public final /* synthetic */ int f$5;
                    public final /* synthetic */ boolean f$6;

                    {
                        this.f$1 = r2;
                        this.f$2 = r4;
                        this.f$3 = r5;
                        this.f$4 = r6;
                        this.f$5 = r7;
                        this.f$6 = r8;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$88$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                    }
                });
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            if (arrayList2 == null) {
                SQLiteDatabase sQLiteDatabase3 = this.database;
                sQLiteDatabase3.executeFast("DELETE FROM chat_pinned_v2 WHERE uid = " + j2).stepThis().dispose();
                if (j2 < 0) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d", new Object[]{Long.valueOf(-j2)})).stepThis().dispose();
                } else {
                    this.database.executeFast(String.format(Locale.US, "UPDATE user_settings SET pinned = 0 WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
                }
                i4 = 0;
                z3 = true;
                i3 = 0;
            } else {
                String join = TextUtils.join(",", arrayList2);
                if (j2 < 0) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned IN (%s)", new Object[]{Long.valueOf(-j2), join})).stepThis().dispose();
                } else {
                    this.database.executeFast(String.format(Locale.US, "UPDATE user_settings SET pinned = 0 WHERE uid = %d AND pinned IN (%s)", new Object[]{Long.valueOf(j), join})).stepThis().dispose();
                }
                SQLiteDatabase sQLiteDatabase4 = this.database;
                Locale locale2 = Locale.US;
                sQLiteDatabase4.executeFast(String.format(locale2, "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid IN(%s)", new Object[]{Long.valueOf(j), join})).stepThis().dispose();
                SQLiteCursor queryFinalized4 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                int intValue2 = queryFinalized4.next() ? queryFinalized4.intValue(0) : 0;
                queryFinalized4.dispose();
                SQLiteCursor queryFinalized5 = this.database.queryFinalized(String.format(locale2, "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
                int intValue3 = queryFinalized5.next() ? queryFinalized5.intValue(0) : 0;
                queryFinalized5.dispose();
                i3 = 0;
                SQLiteCursor queryFinalized6 = this.database.queryFinalized(String.format(locale2, "SELECT count, end FROM chat_pinned_count WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
                if (queryFinalized6.next()) {
                    i5 = Math.max(0, queryFinalized6.intValue(0) - intValue2);
                    z4 = queryFinalized6.intValue(1) != 0;
                } else {
                    z4 = false;
                    i5 = 0;
                }
                queryFinalized6.dispose();
                i4 = Math.max(intValue3, i5);
                z3 = z4;
            }
            SQLitePreparedStatement executeFast3 = this.database.executeFast("REPLACE INTO chat_pinned_count VALUES(?, ?, ?)");
            executeFast3.requery();
            executeFast3.bindLong(1, j2);
            executeFast3.bindInteger(2, i4);
            if (z3) {
                i3 = 1;
            }
            executeFast3.bindInteger(3, i3);
            executeFast3.step();
            executeFast3.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(j, arrayList, hashMap, i, i4, z3) {
                public final /* synthetic */ long f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ HashMap f$3;
                public final /* synthetic */ int f$4;
                public final /* synthetic */ int f$5;
                public final /* synthetic */ boolean f$6;

                {
                    this.f$1 = r2;
                    this.f$2 = r4;
                    this.f$3 = r5;
                    this.f$4 = r6;
                    this.f$5 = r7;
                    this.f$6 = r8;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$89$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$88 */
    public /* synthetic */ void lambda$null$88$MessagesStorage(long j, ArrayList arrayList, HashMap hashMap, int i, int i2, boolean z) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(j), arrayList, Boolean.TRUE, null, hashMap, Integer.valueOf(i), Integer.valueOf(i2), Boolean.valueOf(z));
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$89 */
    public /* synthetic */ void lambda$null$89$MessagesStorage(long j, ArrayList arrayList, HashMap hashMap, int i, int i2, boolean z) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(j), arrayList, Boolean.FALSE, null, hashMap, Integer.valueOf(i), Integer.valueOf(i2), Boolean.valueOf(z));
    }

    public void updateChatInfo(int i, int i2, int i3, int i4, int i5) {
        this.storageQueue.postRunnable(new Runnable(i, i3, i2, i4, i5) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatInfo$92$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateChatInfo$92 */
    public /* synthetic */ void lambda$updateChatInfo$92$MessagesStorage(int i, int i2, int i3, int i4, int i5) {
        TLRPC$ChatParticipant tLRPC$ChatParticipant;
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            int i6 = 0;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT info, pinned, online, inviter FROM chat_settings_v2 WHERE uid = " + i, new Object[0]);
            TLRPC$ChatFull tLRPC$ChatFull = null;
            new ArrayList();
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                tLRPC$ChatFull = TLRPC$ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                tLRPC$ChatFull.pinned_msg_id = queryFinalized.intValue(1);
                tLRPC$ChatFull.online_count = queryFinalized.intValue(2);
                tLRPC$ChatFull.inviterId = queryFinalized.intValue(3);
            }
            queryFinalized.dispose();
            if (tLRPC$ChatFull instanceof TLRPC$TL_chatFull) {
                if (i2 == 1) {
                    while (true) {
                        if (i6 >= tLRPC$ChatFull.participants.participants.size()) {
                            break;
                        } else if (tLRPC$ChatFull.participants.participants.get(i6).user_id == i3) {
                            tLRPC$ChatFull.participants.participants.remove(i6);
                            break;
                        } else {
                            i6++;
                        }
                    }
                } else if (i2 == 0) {
                    Iterator<TLRPC$ChatParticipant> it = tLRPC$ChatFull.participants.participants.iterator();
                    while (it.hasNext()) {
                        if (it.next().user_id == i3) {
                            return;
                        }
                    }
                    TLRPC$TL_chatParticipant tLRPC$TL_chatParticipant = new TLRPC$TL_chatParticipant();
                    tLRPC$TL_chatParticipant.user_id = i3;
                    tLRPC$TL_chatParticipant.inviter_id = i4;
                    tLRPC$TL_chatParticipant.date = getConnectionsManager().getCurrentTime();
                    tLRPC$ChatFull.participants.participants.add(tLRPC$TL_chatParticipant);
                } else if (i2 == 2) {
                    while (true) {
                        if (i6 >= tLRPC$ChatFull.participants.participants.size()) {
                            break;
                        }
                        TLRPC$ChatParticipant tLRPC$ChatParticipant2 = tLRPC$ChatFull.participants.participants.get(i6);
                        if (tLRPC$ChatParticipant2.user_id == i3) {
                            if (i4 == 1) {
                                tLRPC$ChatParticipant = new TLRPC$TL_chatParticipantAdmin();
                            } else {
                                tLRPC$ChatParticipant = new TLRPC$TL_chatParticipant();
                            }
                            tLRPC$ChatParticipant.user_id = tLRPC$ChatParticipant2.user_id;
                            tLRPC$ChatParticipant.date = tLRPC$ChatParticipant2.date;
                            tLRPC$ChatParticipant.inviter_id = tLRPC$ChatParticipant2.inviter_id;
                            tLRPC$ChatFull.participants.participants.set(i6, tLRPC$ChatParticipant);
                        } else {
                            i6++;
                        }
                    }
                }
                tLRPC$ChatFull.participants.version = i5;
                AndroidUtilities.runOnUIThread(new Runnable(tLRPC$ChatFull) {
                    public final /* synthetic */ TLRPC$ChatFull f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$91$MessagesStorage(this.f$1);
                    }
                });
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$ChatFull.getObjectSize());
                tLRPC$ChatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, i);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, tLRPC$ChatFull.pinned_msg_id);
                executeFast.bindInteger(4, tLRPC$ChatFull.online_count);
                executeFast.bindInteger(5, tLRPC$ChatFull.inviterId);
                executeFast.bindInteger(6, tLRPC$ChatFull.invitesCount);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$91 */
    public /* synthetic */ void lambda$null$91$MessagesStorage(TLRPC$ChatFull tLRPC$ChatFull) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.chatInfoDidLoad;
        Boolean bool = Boolean.FALSE;
        notificationCenter.postNotificationName(i, tLRPC$ChatFull, 0, bool, bool);
    }

    public boolean isMigratedChat(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new Runnable(i, zArr, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ boolean[] f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$isMigratedChat$93$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$isMigratedChat$93 */
    public /* synthetic */ void lambda$isMigratedChat$93$MessagesStorage(int i, boolean[] zArr, CountDownLatch countDownLatch) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT info FROM chat_settings_v2 WHERE uid = " + i, new Object[0]);
            TLRPC$ChatFull tLRPC$ChatFull = null;
            new ArrayList();
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                tLRPC$ChatFull = TLRPC$ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
            }
            queryFinalized.dispose();
            zArr[0] = (tLRPC$ChatFull instanceof TLRPC$TL_channelFull) && tLRPC$ChatFull.migrated_from_chat_id != 0;
            countDownLatch.countDown();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public boolean hasInviteMeMessage(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new Runnable(i, zArr, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ boolean[] f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$hasInviteMeMessage$94$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$hasInviteMeMessage$94 */
    public /* synthetic */ void lambda$hasInviteMeMessage$94$MessagesStorage(int i, boolean[] zArr, CountDownLatch countDownLatch) {
        try {
            int clientUserId = getUserConfig().getClientUserId();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT data FROM messages WHERE uid = " + (-i) + " AND out = 0 ORDER BY mid DESC LIMIT 100", new Object[0]);
            while (true) {
                if (!queryFinalized.next()) {
                    break;
                }
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                if (byteBufferValue != null) {
                    TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    TLRPC$MessageAction tLRPC$MessageAction = TLdeserialize.action;
                    if ((tLRPC$MessageAction instanceof TLRPC$TL_messageActionChatAddUser) && tLRPC$MessageAction.users.contains(Integer.valueOf(clientUserId))) {
                        zArr[0] = true;
                        break;
                    }
                }
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:121:0x028d, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:122:0x028e, code lost:
        r4 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x0295, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x0296, code lost:
        r13 = r6;
        r11 = r17;
        r12 = r18;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x029c, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x029d, code lost:
        r4 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x02a0, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x02a1, code lost:
        r13 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x00af, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x00b0, code lost:
        r4 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:54:0x013f, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:56:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:19:0x0075, B:39:0x00e3] */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:124:0x0295 A[ExcHandler: Exception (e java.lang.Exception), Splitter:B:93:0x0211] */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x02a0 A[ExcHandler: Exception (e java.lang.Exception), Splitter:B:15:0x006c] */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x00af A[ExcHandler: all (th java.lang.Throwable), Splitter:B:19:0x0075] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private org.telegram.tgnet.TLRPC$ChatFull loadChatInfoInternal(int r20, boolean r21, boolean r22, boolean r23, int r24) {
        /*
            r19 = this;
            r1 = r19
            r3 = r20
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            java.util.HashMap r10 = new java.util.HashMap
            r10.<init>()
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>()
            r2 = 0
            r4 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            r6.<init>()     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            java.lang.String r7 = "SELECT info, pinned, online, inviter, links FROM chat_settings_v2 WHERE uid = "
            r6.append(r7)     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            r6.append(r3)     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            java.lang.Object[] r7 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            r7 = 3
            r8 = 2
            r11 = 1
            if (r6 == 0) goto L_0x006b
            org.telegram.tgnet.NativeByteBuffer r6 = r0.byteBufferValue(r4)     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            if (r6 == 0) goto L_0x006b
            int r12 = r6.readInt32(r4)     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            org.telegram.tgnet.TLRPC$ChatFull r12 = org.telegram.tgnet.TLRPC$ChatFull.TLdeserialize(r6, r12, r4)     // Catch:{ Exception -> 0x02a8, all -> 0x02a3 }
            r6.reuse()     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            int r6 = r0.intValue(r11)     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            r12.pinned_msg_id = r6     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            int r6 = r0.intValue(r8)     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            r12.online_count = r6     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            int r6 = r0.intValue(r7)     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            r12.inviterId = r6     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            r6 = 4
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            r12.invitesCount = r6     // Catch:{ Exception -> 0x0067, all -> 0x0063 }
            r6 = r12
            goto L_0x006c
        L_0x0063:
            r0 = move-exception
            r4 = r12
            goto L_0x02a5
        L_0x0067:
            r0 = move-exception
            r13 = r12
            goto L_0x02aa
        L_0x006b:
            r6 = r2
        L_0x006c:
            r0.dispose()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            boolean r0 = r6 instanceof org.telegram.tgnet.TLRPC$TL_chatFull     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.String r12 = ","
            if (r0 == 0) goto L_0x00b3
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.<init>()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r7 = 0
        L_0x007b:
            org.telegram.tgnet.TLRPC$ChatParticipants r8 = r6.participants     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r8 = r8.participants     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r8 = r8.size()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r7 >= r8) goto L_0x00a0
            org.telegram.tgnet.TLRPC$ChatParticipants r8 = r6.participants     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r8 = r8.participants     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.Object r8 = r8.get(r7)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            org.telegram.tgnet.TLRPC$ChatParticipant r8 = (org.telegram.tgnet.TLRPC$ChatParticipant) r8     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r13 = r0.length()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r13 == 0) goto L_0x0098
            r0.append(r12)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
        L_0x0098:
            int r8 = r8.user_id     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.append(r8)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r7 = r7 + 1
            goto L_0x007b
        L_0x00a0:
            int r7 = r0.length()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r7 == 0) goto L_0x017c
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r1.getUsersInternal(r0, r5)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            goto L_0x017c
        L_0x00af:
            r0 = move-exception
            r4 = r6
            goto L_0x02a5
        L_0x00b3:
            boolean r0 = r6 instanceof org.telegram.tgnet.TLRPC$TL_channelFull     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            if (r0 == 0) goto L_0x017c
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r13.<init>()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.String r14 = "SELECT us.data, us.status, cu.data, cu.date FROM channel_users_v2 as cu LEFT JOIN users as us ON us.uid = cu.uid WHERE cu.did = "
            r13.append(r14)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r14 = -r3
            r13.append(r14)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.String r14 = " ORDER BY cu.date DESC"
            r13.append(r14)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.Object[] r14 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            org.telegram.SQLite.SQLiteCursor r13 = r0.queryFinalized(r13, r14)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            org.telegram.tgnet.TLRPC$TL_chatParticipants r0 = new org.telegram.tgnet.TLRPC$TL_chatParticipants     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.<init>()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r6.participants = r0     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
        L_0x00dd:
            boolean r0 = r13.next()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r0 == 0) goto L_0x0145
            org.telegram.tgnet.NativeByteBuffer r0 = r13.byteBufferValue(r4)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            if (r0 == 0) goto L_0x00f5
            int r14 = r0.readInt32(r4)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            org.telegram.tgnet.TLRPC$User r14 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r0, r14, r4)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.reuse()     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            goto L_0x00f6
        L_0x00f5:
            r14 = r2
        L_0x00f6:
            org.telegram.tgnet.NativeByteBuffer r0 = r13.byteBufferValue(r8)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            if (r0 == 0) goto L_0x0108
            int r15 = r0.readInt32(r4)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            org.telegram.tgnet.TLRPC$ChannelParticipant r15 = org.telegram.tgnet.TLRPC$ChannelParticipant.TLdeserialize(r0, r15, r4)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.reuse()     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            goto L_0x0109
        L_0x0108:
            r15 = r2
        L_0x0109:
            if (r14 == 0) goto L_0x0143
            if (r15 == 0) goto L_0x0143
            org.telegram.tgnet.TLRPC$UserStatus r0 = r14.status     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            if (r0 == 0) goto L_0x0117
            int r8 = r13.intValue(r11)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.expires = r8     // Catch:{ Exception -> 0x013f, all -> 0x00af }
        L_0x0117:
            r5.add(r14)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            int r0 = r13.intValue(r7)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r15.date = r0     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            org.telegram.tgnet.TLRPC$TL_chatChannelParticipant r0 = new org.telegram.tgnet.TLRPC$TL_chatChannelParticipant     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.<init>()     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            org.telegram.tgnet.TLRPC$Peer r8 = r15.peer     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            int r8 = org.telegram.messenger.MessageObject.getPeerId(r8)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.user_id = r8     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            int r8 = r15.date     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.date = r8     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            int r8 = r15.inviter_id     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.inviter_id = r8     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r0.channelParticipant = r15     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            org.telegram.tgnet.TLRPC$ChatParticipants r8 = r6.participants     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r8 = r8.participants     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            r8.add(r0)     // Catch:{ Exception -> 0x013f, all -> 0x00af }
            goto L_0x0143
        L_0x013f:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
        L_0x0143:
            r8 = 2
            goto L_0x00dd
        L_0x0145:
            r13.dispose()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.<init>()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r7 = 0
        L_0x014e:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r8 = r6.bot_info     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r8 = r8.size()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r7 >= r8) goto L_0x016f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r8 = r6.bot_info     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.Object r8 = r8.get(r7)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            org.telegram.tgnet.TLRPC$BotInfo r8 = (org.telegram.tgnet.TLRPC$BotInfo) r8     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r13 = r0.length()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r13 == 0) goto L_0x0167
            r0.append(r12)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
        L_0x0167:
            int r8 = r8.user_id     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.append(r8)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r7 = r7 + 1
            goto L_0x014e
        L_0x016f:
            int r7 = r0.length()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r7 == 0) goto L_0x017c
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r1.getUsersInternal(r0, r5)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
        L_0x017c:
            if (r6 == 0) goto L_0x0198
            int r0 = r6.inviterId     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            if (r0 == 0) goto L_0x0198
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.<init>()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.String r7 = ""
            r0.append(r7)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r7 = r6.inviterId     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r0.append(r7)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r1.getUsersInternal(r0, r5)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
        L_0x0198:
            org.telegram.messenger.MessagesStorage r0 = r19.getMessagesStorage()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            org.telegram.SQLite.SQLiteDatabase r0 = r0.getDatabase()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.String r8 = "SELECT mid FROM chat_pinned_v2 WHERE uid = %d ORDER BY mid DESC"
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            int r13 = -r3
            java.lang.Integer r14 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            r12[r4] = r14     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.String r7 = java.lang.String.format(r7, r8, r12)     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
        L_0x01b7:
            boolean r7 = r0.next()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            if (r7 == 0) goto L_0x01d0
            int r7 = r0.intValue(r4)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r9.add(r8)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            r10.put(r7, r2)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            goto L_0x01b7
        L_0x01d0:
            r0.dispose()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            r7.<init>()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.String r8 = "SELECT count, end FROM chat_pinned_count WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            r7.append(r13)     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            boolean r7 = r0.next()     // Catch:{ Exception -> 0x02a0, all -> 0x029c }
            if (r7 == 0) goto L_0x020d
            int r7 = r0.intValue(r4)     // Catch:{ Exception -> 0x02a0, all -> 0x00af }
            int r8 = r0.intValue(r11)     // Catch:{ Exception -> 0x0208, all -> 0x0203 }
            if (r8 == 0) goto L_0x01fd
            goto L_0x01fe
        L_0x01fd:
            r11 = 0
        L_0x01fe:
            r17 = r7
            r18 = r11
            goto L_0x0211
        L_0x0203:
            r0 = move-exception
            r4 = r6
            r11 = r7
            goto L_0x02a6
        L_0x0208:
            r0 = move-exception
            r13 = r6
            r11 = r7
            goto L_0x02ab
        L_0x020d:
            r17 = 0
            r18 = 0
        L_0x0211:
            r0.dispose()     // Catch:{ Exception -> 0x0295, all -> 0x028d }
            if (r6 == 0) goto L_0x0247
            int r0 = r6.pinned_msg_id     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            if (r0 == 0) goto L_0x0247
            boolean r0 = r9.isEmpty()     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            if (r0 != 0) goto L_0x022e
            int r0 = r6.pinned_msg_id     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            java.lang.Object r7 = r9.get(r4)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            if (r0 <= r7) goto L_0x0247
        L_0x022e:
            r9.clear()     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            int r0 = r6.pinned_msg_id     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            r9.add(r0)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            int r0 = r6.pinned_msg_id     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            r10.put(r0, r2)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            goto L_0x0247
        L_0x0244:
            r0 = move-exception
            r4 = r6
            goto L_0x0290
        L_0x0247:
            boolean r0 = r9.isEmpty()     // Catch:{ Exception -> 0x0295, all -> 0x028d }
            if (r0 != 0) goto L_0x027a
            org.telegram.messenger.MediaDataController r11 = r19.getMediaDataController()     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            long r12 = (long) r13     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            if (r21 == 0) goto L_0x0256
            r14 = r3
            goto L_0x0257
        L_0x0256:
            r14 = 0
        L_0x0257:
            r16 = 0
            r15 = r9
            java.util.ArrayList r0 = r11.loadPinnedMessages(r12, r14, r15, r16)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            if (r0 == 0) goto L_0x027a
            int r2 = r0.size()     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
        L_0x0264:
            if (r4 >= r2) goto L_0x027a
            java.lang.Object r7 = r0.get(r4)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            int r8 = r7.getId()     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            r10.put(r8, r7)     // Catch:{ Exception -> 0x0295, all -> 0x0244 }
            int r4 = r4 + 1
            goto L_0x0264
        L_0x027a:
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            r0 = 1
            r3 = r20
            r4 = r6
            r13 = r6
            r6 = r0
            r7 = r22
            r8 = r23
            r11 = r17
            r12 = r18
            goto L_0x02bb
        L_0x028d:
            r0 = move-exception
            r13 = r6
            r4 = r13
        L_0x0290:
            r11 = r17
            r12 = r18
            goto L_0x02c2
        L_0x0295:
            r0 = move-exception
            r13 = r6
            r11 = r17
            r12 = r18
            goto L_0x02ac
        L_0x029c:
            r0 = move-exception
            r13 = r6
            r4 = r13
            goto L_0x02a5
        L_0x02a0:
            r0 = move-exception
            r13 = r6
            goto L_0x02aa
        L_0x02a3:
            r0 = move-exception
            r4 = r2
        L_0x02a5:
            r11 = 0
        L_0x02a6:
            r12 = 0
            goto L_0x02c2
        L_0x02a8:
            r0 = move-exception
            r13 = r2
        L_0x02aa:
            r11 = 0
        L_0x02ab:
            r12 = 0
        L_0x02ac:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02c0 }
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            r6 = 1
            r3 = r20
            r4 = r13
            r7 = r22
            r8 = r23
        L_0x02bb:
            r2.processChatInfo(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
            r6 = r13
            return r6
        L_0x02c0:
            r0 = move-exception
            r4 = r13
        L_0x02c2:
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            r6 = 1
            r3 = r20
            r7 = r22
            r8 = r23
            r2.processChatInfo(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
            goto L_0x02d2
        L_0x02d1:
            throw r0
        L_0x02d2:
            goto L_0x02d1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.loadChatInfoInternal(int, boolean, boolean, boolean, int):org.telegram.tgnet.TLRPC$ChatFull");
    }

    public TLRPC$ChatFull loadChatInfo(int i, boolean z, CountDownLatch countDownLatch, boolean z2, boolean z3) {
        return loadChatInfo(i, z, countDownLatch, z2, z3, 0);
    }

    public TLRPC$ChatFull loadChatInfo(int i, boolean z, CountDownLatch countDownLatch, boolean z2, boolean z3, int i2) {
        TLRPC$ChatFull[] tLRPC$ChatFullArr = new TLRPC$ChatFull[1];
        this.storageQueue.postRunnable(new Runnable(tLRPC$ChatFullArr, i, z, z2, z3, i2, countDownLatch) {
            public final /* synthetic */ TLRPC$ChatFull[] f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ boolean f$3;
            public final /* synthetic */ boolean f$4;
            public final /* synthetic */ boolean f$5;
            public final /* synthetic */ int f$6;
            public final /* synthetic */ CountDownLatch f$7;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
            }

            public final void run() {
                MessagesStorage.this.lambda$loadChatInfo$95$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7);
            }
        });
        if (countDownLatch != null) {
            try {
                countDownLatch.await();
            } catch (Throwable unused) {
            }
        }
        return tLRPC$ChatFullArr[0];
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$loadChatInfo$95 */
    public /* synthetic */ void lambda$loadChatInfo$95$MessagesStorage(TLRPC$ChatFull[] tLRPC$ChatFullArr, int i, boolean z, boolean z2, boolean z3, int i2, CountDownLatch countDownLatch) {
        tLRPC$ChatFullArr[0] = loadChatInfoInternal(i, z, z2, z3, i2);
        if (countDownLatch != null) {
            countDownLatch.countDown();
        }
    }

    public void processPendingRead(long j, long j2, long j3, boolean z, int i) {
        this.storageQueue.postRunnable(new Runnable(j, j2, z, i, this.lastSavedDate, j3) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ long f$2;
            public final /* synthetic */ boolean f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;
            public final /* synthetic */ long f$6;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r6;
                this.f$4 = r7;
                this.f$5 = r8;
                this.f$6 = r9;
            }

            public final void run() {
                MessagesStorage.this.lambda$processPendingRead$96$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$processPendingRead$96 */
    public /* synthetic */ void lambda$processPendingRead$96$MessagesStorage(long j, long j2, boolean z, int i, int i2, long j3) {
        long j4;
        long j5;
        int i3;
        int i4;
        long j6;
        long j7 = j;
        try {
            int i5 = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT unread_count, inbox_max, last_mid FROM dialogs WHERE did = " + j7, new Object[0]);
            if (queryFinalized.next()) {
                i4 = queryFinalized.intValue(0);
                j4 = queryFinalized.longValue(2);
                j5 = (long) queryFinalized.intValue(1);
                i3 = i4;
            } else {
                j5 = 0;
                j4 = 0;
                i4 = 0;
                i3 = 0;
            }
            queryFinalized.dispose();
            this.database.beginTransaction();
            int i6 = (int) j7;
            if (i6 != 0) {
                j6 = Math.max(j5, (long) ((int) j2));
                if (z) {
                    j6 |= ((long) (-i6)) << 32;
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET read_state = read_state | 1 WHERE uid = ? AND mid <= ? AND read_state IN(0,2) AND out = 0");
                executeFast.requery();
                executeFast.bindLong(1, j7);
                executeFast.bindLong(2, j6);
                executeFast.step();
                executeFast.dispose();
                if (j6 < j4) {
                    SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                    int intValue = queryFinalized2.next() ? queryFinalized2.intValue(0) + i : 0;
                    queryFinalized2.dispose();
                    i5 = Math.max(0, i4 - intValue);
                }
                SQLitePreparedStatement executeFast2 = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?");
                executeFast2.requery();
                executeFast2.bindLong(1, j7);
                executeFast2.bindLong(2, j6);
                executeFast2.step();
                executeFast2.dispose();
                SQLitePreparedStatement executeFast3 = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND date <= ?");
                executeFast3.requery();
                executeFast3.bindLong(1, j7);
                executeFast3.bindLong(2, (long) i2);
                executeFast3.step();
                executeFast3.dispose();
            } else {
                j6 = (long) ((int) j3);
                SQLitePreparedStatement executeFast4 = this.database.executeFast("UPDATE messages SET read_state = read_state | 1 WHERE uid = ? AND mid >= ? AND read_state IN(0,2) AND out = 0");
                executeFast4.requery();
                executeFast4.bindLong(1, j7);
                executeFast4.bindLong(2, j6);
                executeFast4.step();
                executeFast4.dispose();
                if (j6 > j4) {
                    SQLiteCursor queryFinalized3 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                    int intValue2 = queryFinalized3.next() ? queryFinalized3.intValue(0) + i : 0;
                    queryFinalized3.dispose();
                    i5 = Math.max(0, i4 - intValue2);
                }
            }
            SQLitePreparedStatement executeFast5 = this.database.executeFast("UPDATE dialogs SET unread_count = ?, inbox_max = ? WHERE did = ?");
            executeFast5.requery();
            executeFast5.bindInteger(1, i5);
            executeFast5.bindInteger(2, (int) j6);
            executeFast5.bindLong(3, j7);
            executeFast5.step();
            executeFast5.dispose();
            this.database.commitTransaction();
            if (i3 != 0 && i5 == 0) {
                LongSparseArray longSparseArray = new LongSparseArray();
                longSparseArray.put(j7, Integer.valueOf(i5));
                updateFiltersReadCounter(longSparseArray, (LongSparseArray<Integer>) null, true);
            }
            updateWidgets(j);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putContacts(ArrayList<TLRPC$TL_contact> arrayList, boolean z) {
        if (!arrayList.isEmpty() || z) {
            this.storageQueue.postRunnable(new Runnable(z, new ArrayList(arrayList)) {
                public final /* synthetic */ boolean f$1;
                public final /* synthetic */ ArrayList f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putContacts$97$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putContacts$97 */
    public /* synthetic */ void lambda$putContacts$97$MessagesStorage(boolean z, ArrayList arrayList) {
        if (z) {
            try {
                this.database.executeFast("DELETE FROM contacts WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.beginTransaction();
        SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO contacts VALUES(?, ?)");
        for (int i = 0; i < arrayList.size(); i++) {
            TLRPC$TL_contact tLRPC$TL_contact = (TLRPC$TL_contact) arrayList.get(i);
            executeFast.requery();
            int i2 = 1;
            executeFast.bindInteger(1, tLRPC$TL_contact.user_id);
            if (!tLRPC$TL_contact.mutual) {
                i2 = 0;
            }
            executeFast.bindInteger(2, i2);
            executeFast.step();
        }
        executeFast.dispose();
        this.database.commitTransaction();
    }

    public void deleteContacts(ArrayList<Integer> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(arrayList) {
                public final /* synthetic */ ArrayList f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$deleteContacts$98$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$deleteContacts$98 */
    public /* synthetic */ void lambda$deleteContacts$98$MessagesStorage(ArrayList arrayList) {
        try {
            String join = TextUtils.join(",", arrayList);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM contacts WHERE uid IN(" + join + ")").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void applyPhoneBookUpdates(String str, String str2) {
        if (!TextUtils.isEmpty(str)) {
            this.storageQueue.postRunnable(new Runnable(str, str2) {
                public final /* synthetic */ String f$1;
                public final /* synthetic */ String f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$applyPhoneBookUpdates$99$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$applyPhoneBookUpdates$99 */
    public /* synthetic */ void lambda$applyPhoneBookUpdates$99$MessagesStorage(String str, String str2) {
        try {
            if (str.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 0 WHERE sphone IN(%s)", new Object[]{str})).stepThis().dispose();
            }
            if (str2.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 1 WHERE sphone IN(%s)", new Object[]{str2})).stepThis().dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putCachedPhoneBook(HashMap<String, ContactsController.Contact> hashMap, boolean z, boolean z2) {
        if (hashMap == null) {
            return;
        }
        if (!hashMap.isEmpty() || z || z2) {
            this.storageQueue.postRunnable(new Runnable(hashMap, z) {
                public final /* synthetic */ HashMap f$1;
                public final /* synthetic */ boolean f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putCachedPhoneBook$100$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putCachedPhoneBook$100 */
    public /* synthetic */ void lambda$putCachedPhoneBook$100$MessagesStorage(HashMap hashMap, boolean z) {
        try {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d(this.currentAccount + " save contacts to db " + hashMap.size());
            }
            this.database.executeFast("DELETE FROM user_contacts_v7 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM user_phones_v7 WHERE 1").stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_contacts_v7 VALUES(?, ?, ?, ?, ?)");
            SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO user_phones_v7 VALUES(?, ?, ?, ?)");
            Iterator it = hashMap.entrySet().iterator();
            while (true) {
                if (!it.hasNext()) {
                    break;
                }
                ContactsController.Contact contact = (ContactsController.Contact) ((Map.Entry) it.next()).getValue();
                if (!contact.phones.isEmpty()) {
                    if (!contact.shortPhones.isEmpty()) {
                        executeFast.requery();
                        executeFast.bindString(1, contact.key);
                        executeFast.bindInteger(2, contact.contact_id);
                        executeFast.bindString(3, contact.first_name);
                        executeFast.bindString(4, contact.last_name);
                        executeFast.bindInteger(5, contact.imported);
                        executeFast.step();
                        for (int i = 0; i < contact.phones.size(); i++) {
                            executeFast2.requery();
                            executeFast2.bindString(1, contact.key);
                            executeFast2.bindString(2, contact.phones.get(i));
                            executeFast2.bindString(3, contact.shortPhones.get(i));
                            executeFast2.bindInteger(4, contact.phoneDeleted.get(i).intValue());
                            executeFast2.step();
                        }
                    }
                }
            }
            executeFast.dispose();
            executeFast2.dispose();
            this.database.commitTransaction();
            if (z) {
                this.database.executeFast("DROP TABLE IF EXISTS user_contacts_v6;").stepThis().dispose();
                this.database.executeFast("DROP TABLE IF EXISTS user_phones_v6;").stepThis().dispose();
                getCachedPhoneBook(false);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getCachedPhoneBook(boolean z) {
        this.storageQueue.postRunnable(new Runnable(z) {
            public final /* synthetic */ boolean f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getCachedPhoneBook$101$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:100:0x01b2, code lost:
        r3.phones.add(r0);
        r8 = r10.stringValue(5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x01bb, code lost:
        if (r8 != null) goto L_0x01be;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:104:0x01c2, code lost:
        if (r8.length() != 8) goto L_0x01ce;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:106:0x01c8, code lost:
        if (r0.length() == 8) goto L_0x01ce;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:107:0x01ca, code lost:
        r8 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:108:0x01ce, code lost:
        r3.shortPhones.add(r8);
        r3.phoneDeleted.add(java.lang.Integer.valueOf(r10.intValue(6)));
        r3.phoneTypes.add("");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:109:0x01ea, code lost:
        if (r15.size() != 5000) goto L_0x016b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x01ec, code lost:
        r10.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:111:0x01f0, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:112:0x01f2, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:114:?, code lost:
        r15.clear();
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:115:0x01f9, code lost:
        if (r10 != null) goto L_0x01fb;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:116:0x01fb, code lost:
        r10.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:117:0x01fe, code lost:
        getContactsController().performSyncPhoneBook(r15, true, true, false, false, !r25, false);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:118:0x0213, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:119:0x0214, code lost:
        if (r10 != null) goto L_0x0216;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:120:0x0216, code lost:
        r10.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:121:0x0219, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:72:0x012e, code lost:
        if (r10 == null) goto L_0x013f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:73:0x0130, code lost:
        r10.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:79:0x013c, code lost:
        if (r10 == null) goto L_0x013f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:80:0x013f, code lost:
        r15 = new java.util.HashMap(r8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:81:0x0144, code lost:
        if (r14 == 0) goto L_0x0160;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:83:?, code lost:
        r0 = r1.database;
        r0 = r0.queryFinalized("SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0," + r3, new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:84:0x0160, code lost:
        r0 = r1.database.queryFinalized("SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1", new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:85:0x016a, code lost:
        r10 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:0x016f, code lost:
        if (r10.next() == false) goto L_0x01ec;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x0171, code lost:
        r0 = r10.stringValue(0);
        r3 = (org.telegram.messenger.ContactsController.Contact) r15.get(r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:89:0x017b, code lost:
        if (r3 != null) goto L_0x01aa;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:90:0x017d, code lost:
        r3 = new org.telegram.messenger.ContactsController.Contact();
        r3.contact_id = r10.intValue(1);
        r3.first_name = r10.stringValue(2);
        r3.last_name = r10.stringValue(3);
        r3.imported = r10.intValue(7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:91:0x019d, code lost:
        if (r3.first_name != null) goto L_0x01a1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:92:0x019f, code lost:
        r3.first_name = "";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:94:0x01a3, code lost:
        if (r3.last_name != null) goto L_0x01a7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x01a5, code lost:
        r3.last_name = "";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:96:0x01a7, code lost:
        r15.put(r0, r3);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:97:0x01aa, code lost:
        r0 = r10.stringValue(4);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:98:0x01ae, code lost:
        if (r0 != null) goto L_0x01b2;
     */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00e6  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x00f9 A[Catch:{ all -> 0x0134 }] */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x012a  */
    /* renamed from: lambda$getCachedPhoneBook$101 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getCachedPhoneBook$101$MessagesStorage(boolean r25) {
        /*
            r24 = this;
            r1 = r24
            java.lang.String r2 = ""
            r3 = 6
            r4 = 3
            r5 = 2
            r6 = 5
            r7 = 4
            r9 = 1
            r11 = 8
            r12 = 5000(0x1388, float:7.006E-42)
            r13 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00df }
            java.lang.String r14 = "SELECT name FROM sqlite_master WHERE type='table' AND name='user_contacts_v6'"
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ all -> 0x00df }
            org.telegram.SQLite.SQLiteCursor r14 = r0.queryFinalized(r14, r15)     // Catch:{ all -> 0x00df }
            boolean r0 = r14.next()     // Catch:{ all -> 0x00dc }
            r14.dispose()     // Catch:{ all -> 0x00dc }
            if (r0 == 0) goto L_0x00da
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00df }
            java.lang.String r14 = "SELECT COUNT(uid) FROM user_contacts_v6 WHERE 1"
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ all -> 0x00df }
            org.telegram.SQLite.SQLiteCursor r14 = r0.queryFinalized(r14, r15)     // Catch:{ all -> 0x00df }
            boolean r0 = r14.next()     // Catch:{ all -> 0x00dc }
            if (r0 == 0) goto L_0x003b
            int r0 = r14.intValue(r13)     // Catch:{ all -> 0x00dc }
            int r0 = java.lang.Math.min(r12, r0)     // Catch:{ all -> 0x00dc }
            goto L_0x003d
        L_0x003b:
            r0 = 16
        L_0x003d:
            r14.dispose()     // Catch:{ all -> 0x00dc }
            android.util.SparseArray r15 = new android.util.SparseArray     // Catch:{ all -> 0x00dc }
            r15.<init>(r0)     // Catch:{ all -> 0x00dc }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00dc }
            java.lang.String r8 = "SELECT us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v6 as us LEFT JOIN user_phones_v6 as up ON us.uid = up.uid WHERE 1"
            java.lang.Object[] r10 = new java.lang.Object[r13]     // Catch:{ all -> 0x00dc }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r10)     // Catch:{ all -> 0x00dc }
        L_0x004f:
            boolean r0 = r8.next()     // Catch:{ all -> 0x00d7 }
            if (r0 == 0) goto L_0x00cc
            int r0 = r8.intValue(r13)     // Catch:{ all -> 0x00d7 }
            java.lang.Object r10 = r15.get(r0)     // Catch:{ all -> 0x00d7 }
            org.telegram.messenger.ContactsController$Contact r10 = (org.telegram.messenger.ContactsController.Contact) r10     // Catch:{ all -> 0x00d7 }
            if (r10 != 0) goto L_0x0089
            org.telegram.messenger.ContactsController$Contact r10 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ all -> 0x00d7 }
            r10.<init>()     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.stringValue(r9)     // Catch:{ all -> 0x00d7 }
            r10.first_name = r14     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.stringValue(r5)     // Catch:{ all -> 0x00d7 }
            r10.last_name = r14     // Catch:{ all -> 0x00d7 }
            int r14 = r8.intValue(r3)     // Catch:{ all -> 0x00d7 }
            r10.imported = r14     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r10.first_name     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x007e
            r10.first_name = r2     // Catch:{ all -> 0x00d7 }
        L_0x007e:
            java.lang.String r14 = r10.last_name     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x0084
            r10.last_name = r2     // Catch:{ all -> 0x00d7 }
        L_0x0084:
            r10.contact_id = r0     // Catch:{ all -> 0x00d7 }
            r15.put(r0, r10)     // Catch:{ all -> 0x00d7 }
        L_0x0089:
            java.lang.String r0 = r8.stringValue(r4)     // Catch:{ all -> 0x00d7 }
            if (r0 != 0) goto L_0x0090
            goto L_0x004f
        L_0x0090:
            java.util.ArrayList<java.lang.String> r14 = r10.phones     // Catch:{ all -> 0x00d7 }
            r14.add(r0)     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.stringValue(r7)     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x009c
            goto L_0x004f
        L_0x009c:
            int r3 = r14.length()     // Catch:{ all -> 0x00d7 }
            if (r3 != r11) goto L_0x00ac
            int r3 = r0.length()     // Catch:{ all -> 0x00d7 }
            if (r3 == r11) goto L_0x00ac
            java.lang.String r14 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0)     // Catch:{ all -> 0x00d7 }
        L_0x00ac:
            java.util.ArrayList<java.lang.String> r0 = r10.shortPhones     // Catch:{ all -> 0x00d7 }
            r0.add(r14)     // Catch:{ all -> 0x00d7 }
            java.util.ArrayList<java.lang.Integer> r0 = r10.phoneDeleted     // Catch:{ all -> 0x00d7 }
            int r3 = r8.intValue(r6)     // Catch:{ all -> 0x00d7 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ all -> 0x00d7 }
            r0.add(r3)     // Catch:{ all -> 0x00d7 }
            java.util.ArrayList<java.lang.String> r0 = r10.phoneTypes     // Catch:{ all -> 0x00d7 }
            r0.add(r2)     // Catch:{ all -> 0x00d7 }
            int r0 = r15.size()     // Catch:{ all -> 0x00d7 }
            if (r0 != r12) goto L_0x00ca
            goto L_0x00cc
        L_0x00ca:
            r3 = 6
            goto L_0x004f
        L_0x00cc:
            r8.dispose()     // Catch:{ all -> 0x00d7 }
            org.telegram.messenger.ContactsController r0 = r24.getContactsController()     // Catch:{ all -> 0x00df }
            r0.migratePhoneBookToV7(r15)     // Catch:{ all -> 0x00df }
            return
        L_0x00d7:
            r0 = move-exception
            r10 = r8
            goto L_0x00e1
        L_0x00da:
            r10 = 0
            goto L_0x00e9
        L_0x00dc:
            r0 = move-exception
            r10 = r14
            goto L_0x00e1
        L_0x00df:
            r0 = move-exception
            r10 = 0
        L_0x00e1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0222 }
            if (r10 == 0) goto L_0x00e9
            r10.dispose()
        L_0x00e9:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x0134 }
            java.lang.String r3 = "SELECT COUNT(key) FROM user_contacts_v7 WHERE 1"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ all -> 0x0134 }
            org.telegram.SQLite.SQLiteCursor r10 = r0.queryFinalized(r3, r8)     // Catch:{ all -> 0x0134 }
            boolean r0 = r10.next()     // Catch:{ all -> 0x0134 }
            if (r0 == 0) goto L_0x012a
            int r3 = r10.intValue(r13)     // Catch:{ all -> 0x0134 }
            int r8 = java.lang.Math.min(r12, r3)     // Catch:{ all -> 0x0128 }
            if (r3 <= r12) goto L_0x0107
            int r0 = r3 + -5000
            r14 = r0
            goto L_0x0108
        L_0x0107:
            r14 = 0
        L_0x0108:
            boolean r0 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ all -> 0x0126 }
            if (r0 == 0) goto L_0x012e
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ all -> 0x0126 }
            r0.<init>()     // Catch:{ all -> 0x0126 }
            int r15 = r1.currentAccount     // Catch:{ all -> 0x0126 }
            r0.append(r15)     // Catch:{ all -> 0x0126 }
            java.lang.String r15 = " current cached contacts count = "
            r0.append(r15)     // Catch:{ all -> 0x0126 }
            r0.append(r3)     // Catch:{ all -> 0x0126 }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x0126 }
            org.telegram.messenger.FileLog.d(r0)     // Catch:{ all -> 0x0126 }
            goto L_0x012e
        L_0x0126:
            r0 = move-exception
            goto L_0x0139
        L_0x0128:
            r0 = move-exception
            goto L_0x0136
        L_0x012a:
            r3 = 0
            r8 = 16
            r14 = 0
        L_0x012e:
            if (r10 == 0) goto L_0x013f
        L_0x0130:
            r10.dispose()
            goto L_0x013f
        L_0x0134:
            r0 = move-exception
            r3 = 0
        L_0x0136:
            r8 = 16
            r14 = 0
        L_0x0139:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x021a }
            if (r10 == 0) goto L_0x013f
            goto L_0x0130
        L_0x013f:
            java.util.HashMap r15 = new java.util.HashMap
            r15.<init>(r8)
            if (r14 == 0) goto L_0x0160
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01f2 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01f2 }
            r8.<init>()     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r14 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0,"
            r8.append(r14)     // Catch:{ Exception -> 0x01f2 }
            r8.append(r3)     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r3 = r8.toString()     // Catch:{ Exception -> 0x01f2 }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01f2 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x01f2 }
            goto L_0x016a
        L_0x0160:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r3 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01f2 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x01f2 }
        L_0x016a:
            r10 = r0
        L_0x016b:
            boolean r0 = r10.next()     // Catch:{ Exception -> 0x01f2 }
            if (r0 == 0) goto L_0x01ec
            java.lang.String r0 = r10.stringValue(r13)     // Catch:{ Exception -> 0x01f2 }
            java.lang.Object r3 = r15.get(r0)     // Catch:{ Exception -> 0x01f2 }
            org.telegram.messenger.ContactsController$Contact r3 = (org.telegram.messenger.ContactsController.Contact) r3     // Catch:{ Exception -> 0x01f2 }
            if (r3 != 0) goto L_0x01aa
            org.telegram.messenger.ContactsController$Contact r3 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ Exception -> 0x01f2 }
            r3.<init>()     // Catch:{ Exception -> 0x01f2 }
            int r8 = r10.intValue(r9)     // Catch:{ Exception -> 0x01f2 }
            r3.contact_id = r8     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r8 = r10.stringValue(r5)     // Catch:{ Exception -> 0x01f2 }
            r3.first_name = r8     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r8 = r10.stringValue(r4)     // Catch:{ Exception -> 0x01f2 }
            r3.last_name = r8     // Catch:{ Exception -> 0x01f2 }
            r8 = 7
            int r8 = r10.intValue(r8)     // Catch:{ Exception -> 0x01f2 }
            r3.imported = r8     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r8 = r3.first_name     // Catch:{ Exception -> 0x01f2 }
            if (r8 != 0) goto L_0x01a1
            r3.first_name = r2     // Catch:{ Exception -> 0x01f2 }
        L_0x01a1:
            java.lang.String r8 = r3.last_name     // Catch:{ Exception -> 0x01f2 }
            if (r8 != 0) goto L_0x01a7
            r3.last_name = r2     // Catch:{ Exception -> 0x01f2 }
        L_0x01a7:
            r15.put(r0, r3)     // Catch:{ Exception -> 0x01f2 }
        L_0x01aa:
            java.lang.String r0 = r10.stringValue(r7)     // Catch:{ Exception -> 0x01f2 }
            if (r0 != 0) goto L_0x01b2
        L_0x01b0:
            r8 = 6
            goto L_0x016b
        L_0x01b2:
            java.util.ArrayList<java.lang.String> r8 = r3.phones     // Catch:{ Exception -> 0x01f2 }
            r8.add(r0)     // Catch:{ Exception -> 0x01f2 }
            java.lang.String r8 = r10.stringValue(r6)     // Catch:{ Exception -> 0x01f2 }
            if (r8 != 0) goto L_0x01be
            goto L_0x01b0
        L_0x01be:
            int r14 = r8.length()     // Catch:{ Exception -> 0x01f2 }
            if (r14 != r11) goto L_0x01ce
            int r14 = r0.length()     // Catch:{ Exception -> 0x01f2 }
            if (r14 == r11) goto L_0x01ce
            java.lang.String r8 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0)     // Catch:{ Exception -> 0x01f2 }
        L_0x01ce:
            java.util.ArrayList<java.lang.String> r0 = r3.shortPhones     // Catch:{ Exception -> 0x01f2 }
            r0.add(r8)     // Catch:{ Exception -> 0x01f2 }
            java.util.ArrayList<java.lang.Integer> r0 = r3.phoneDeleted     // Catch:{ Exception -> 0x01f2 }
            r8 = 6
            int r14 = r10.intValue(r8)     // Catch:{ Exception -> 0x01f2 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x01f2 }
            r0.add(r14)     // Catch:{ Exception -> 0x01f2 }
            java.util.ArrayList<java.lang.String> r0 = r3.phoneTypes     // Catch:{ Exception -> 0x01f2 }
            r0.add(r2)     // Catch:{ Exception -> 0x01f2 }
            int r0 = r15.size()     // Catch:{ Exception -> 0x01f2 }
            if (r0 != r12) goto L_0x016b
        L_0x01ec:
            r10.dispose()     // Catch:{ Exception -> 0x01f2 }
            goto L_0x01fe
        L_0x01f0:
            r0 = move-exception
            goto L_0x0214
        L_0x01f2:
            r0 = move-exception
            r15.clear()     // Catch:{ all -> 0x01f0 }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01f0 }
            if (r10 == 0) goto L_0x01fe
            r10.dispose()
        L_0x01fe:
            org.telegram.messenger.ContactsController r16 = r24.getContactsController()
            r18 = 1
            r19 = 1
            r20 = 0
            r21 = 0
            r22 = r25 ^ 1
            r23 = 0
            r17 = r15
            r16.performSyncPhoneBook(r17, r18, r19, r20, r21, r22, r23)
            return
        L_0x0214:
            if (r10 == 0) goto L_0x0219
            r10.dispose()
        L_0x0219:
            throw r0
        L_0x021a:
            r0 = move-exception
            r2 = r0
            if (r10 == 0) goto L_0x0221
            r10.dispose()
        L_0x0221:
            throw r2
        L_0x0222:
            r0 = move-exception
            r2 = r0
            if (r10 == 0) goto L_0x0229
            r10.dispose()
        L_0x0229:
            goto L_0x022b
        L_0x022a:
            throw r2
        L_0x022b:
            goto L_0x022a
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getCachedPhoneBook$101$MessagesStorage(boolean):void");
    }

    public void getContacts() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$getContacts$102$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getContacts$102 */
    public /* synthetic */ void lambda$getContacts$102$MessagesStorage() {
        ArrayList arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT * FROM contacts WHERE 1", new Object[0]);
            StringBuilder sb = new StringBuilder();
            while (queryFinalized.next()) {
                int intValue = queryFinalized.intValue(0);
                TLRPC$TL_contact tLRPC$TL_contact = new TLRPC$TL_contact();
                tLRPC$TL_contact.user_id = intValue;
                tLRPC$TL_contact.mutual = queryFinalized.intValue(1) == 1;
                if (sb.length() != 0) {
                    sb.append(",");
                }
                arrayList.add(tLRPC$TL_contact);
                sb.append(tLRPC$TL_contact.user_id);
            }
            queryFinalized.dispose();
            if (sb.length() != 0) {
                getUsersInternal(sb.toString(), arrayList2);
            }
        } catch (Exception e) {
            arrayList.clear();
            arrayList2.clear();
            FileLog.e((Throwable) e);
        }
        getContactsController().processLoadedContacts(arrayList, arrayList2, 1);
    }

    public void getUnsentMessages(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getUnsentMessages$103$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getUnsentMessages$103 */
    public /* synthetic */ void lambda$getUnsentMessages$103$MessagesStorage(int i) {
        int i2;
        ArrayList arrayList;
        ArrayList arrayList2;
        ArrayList arrayList3;
        try {
            SparseArray sparseArray = new SparseArray();
            ArrayList arrayList4 = new ArrayList();
            ArrayList arrayList5 = new ArrayList();
            ArrayList arrayList6 = new ArrayList();
            ArrayList arrayList7 = new ArrayList();
            ArrayList arrayList8 = new ArrayList();
            ArrayList arrayList9 = new ArrayList();
            ArrayList arrayList10 = new ArrayList();
            ArrayList arrayList11 = new ArrayList();
            SQLiteDatabase sQLiteDatabase = this.database;
            boolean z = false;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, s.seq_in, s.seq_out, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY m.mid DESC LIMIT " + i, new Object[0]);
            while (true) {
                i2 = 1;
                if (!queryFinalized.next()) {
                    break;
                }
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    TLdeserialize.send_state = queryFinalized.intValue(2);
                    TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                    byteBufferValue.reuse();
                    if (sparseArray.indexOfKey(TLdeserialize.id) < 0) {
                        MessageObject.setUnreadFlags(TLdeserialize, queryFinalized.intValue(0));
                        TLdeserialize.id = queryFinalized.intValue(3);
                        TLdeserialize.date = queryFinalized.intValue(4);
                        if (!queryFinalized.isNull(5)) {
                            TLdeserialize.random_id = queryFinalized.longValue(5);
                        }
                        TLdeserialize.dialog_id = queryFinalized.longValue(6);
                        TLdeserialize.seq_in = queryFinalized.intValue(7);
                        TLdeserialize.seq_out = queryFinalized.intValue(8);
                        TLdeserialize.ttl = queryFinalized.intValue(9);
                        arrayList4.add(TLdeserialize);
                        sparseArray.put(TLdeserialize.id, TLdeserialize);
                        long j = TLdeserialize.dialog_id;
                        int i3 = (int) j;
                        int i4 = (int) (j >> 32);
                        if (i3 != 0) {
                            if (i3 < 0) {
                                int i5 = -i3;
                                if (!arrayList10.contains(Integer.valueOf(i5))) {
                                    arrayList10.add(Integer.valueOf(i5));
                                }
                            } else if (!arrayList9.contains(Integer.valueOf(i3))) {
                                arrayList9.add(Integer.valueOf(i3));
                            }
                        } else if (!arrayList11.contains(Integer.valueOf(i4))) {
                            arrayList11.add(Integer.valueOf(i4));
                        }
                        addUsersAndChatsFromMessage(TLdeserialize, arrayList9, arrayList10);
                        if (TLdeserialize.send_state != 3 && ((TLdeserialize.peer_id.channel_id == 0 && !MessageObject.isUnread(TLdeserialize) && i3 != 0) || TLdeserialize.id > 0)) {
                            TLdeserialize.send_state = 0;
                        }
                    }
                }
            }
            queryFinalized.dispose();
            SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, m.ttl FROM scheduled_messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY date ASC", new Object[0]);
            while (queryFinalized2.next()) {
                NativeByteBuffer byteBufferValue2 = queryFinalized2.byteBufferValue(z ? 1 : 0);
                if (byteBufferValue2 != null) {
                    TLRPC$Message TLdeserialize2 = TLRPC$Message.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(z), z);
                    TLdeserialize2.send_state = queryFinalized2.intValue(i2);
                    TLdeserialize2.readAttachPath(byteBufferValue2, getUserConfig().clientUserId);
                    byteBufferValue2.reuse();
                    if (sparseArray.indexOfKey(TLdeserialize2.id) < 0) {
                        TLdeserialize2.id = queryFinalized2.intValue(2);
                        TLdeserialize2.date = queryFinalized2.intValue(3);
                        if (!queryFinalized2.isNull(4)) {
                            TLdeserialize2.random_id = queryFinalized2.longValue(4);
                        }
                        arrayList3 = arrayList6;
                        arrayList2 = arrayList7;
                        TLdeserialize2.dialog_id = queryFinalized2.longValue(5);
                        TLdeserialize2.ttl = queryFinalized2.intValue(6);
                        arrayList5.add(TLdeserialize2);
                        sparseArray.put(TLdeserialize2.id, TLdeserialize2);
                        long j2 = TLdeserialize2.dialog_id;
                        int i6 = (int) j2;
                        int i7 = (int) (j2 >> 32);
                        if (i6 != 0) {
                            if (i6 < 0) {
                                int i8 = -i6;
                                if (!arrayList10.contains(Integer.valueOf(i8))) {
                                    arrayList10.add(Integer.valueOf(i8));
                                }
                            } else if (!arrayList9.contains(Integer.valueOf(i6))) {
                                arrayList9.add(Integer.valueOf(i6));
                            }
                        } else if (!arrayList11.contains(Integer.valueOf(i7))) {
                            arrayList11.add(Integer.valueOf(i7));
                        }
                        addUsersAndChatsFromMessage(TLdeserialize2, arrayList9, arrayList10);
                        if (TLdeserialize2.send_state == 3 || ((TLdeserialize2.peer_id.channel_id != 0 || MessageObject.isUnread(TLdeserialize2) || i6 == 0) && TLdeserialize2.id <= 0)) {
                            arrayList6 = arrayList3;
                            arrayList7 = arrayList2;
                            z = false;
                            i2 = 1;
                        } else {
                            TLdeserialize2.send_state = 0;
                            arrayList6 = arrayList3;
                            arrayList7 = arrayList2;
                            z = false;
                            i2 = 1;
                        }
                    }
                }
                arrayList3 = arrayList6;
                arrayList2 = arrayList7;
                arrayList6 = arrayList3;
                arrayList7 = arrayList2;
                z = false;
                i2 = 1;
            }
            ArrayList arrayList12 = arrayList6;
            ArrayList arrayList13 = arrayList7;
            queryFinalized2.dispose();
            if (!arrayList11.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList11), arrayList8, arrayList9);
            }
            if (!arrayList9.isEmpty()) {
                getUsersInternal(TextUtils.join(",", arrayList9), arrayList12);
            }
            if (!arrayList10.isEmpty()) {
                StringBuilder sb = new StringBuilder();
                for (int i9 = 0; i9 < arrayList10.size(); i9++) {
                    Integer num = (Integer) arrayList10.get(i9);
                    if (sb.length() != 0) {
                        sb.append(",");
                    }
                    sb.append(num);
                }
                arrayList = arrayList13;
                getChatsInternal(sb.toString(), arrayList);
            } else {
                arrayList = arrayList13;
            }
            getSendMessagesHelper().processUnsentMessages(arrayList4, arrayList5, arrayList12, arrayList, arrayList8);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public boolean checkMessageByRandomId(long j) {
        boolean[] zArr = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new Runnable(j, zArr, countDownLatch) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ boolean[] f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkMessageByRandomId$104$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:10:0x002c, code lost:
        if (r0 == null) goto L_0x0031;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:11:0x002e, code lost:
        r0.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0031, code lost:
        r10.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0034, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x0023, code lost:
        if (r0 != null) goto L_0x002e;
     */
    /* renamed from: lambda$checkMessageByRandomId$104 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkMessageByRandomId$104$MessagesStorage(long r7, boolean[] r9, java.util.concurrent.CountDownLatch r10) {
        /*
            r6 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0028 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0028 }
            java.lang.String r3 = "SELECT random_id FROM randoms WHERE random_id = %d"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0028 }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0028 }
            r8 = 0
            r5[r8] = r7     // Catch:{ Exception -> 0x0028 }
            java.lang.String r7 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0028 }
            java.lang.Object[] r2 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0028 }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r7, r2)     // Catch:{ Exception -> 0x0028 }
            boolean r7 = r0.next()     // Catch:{ Exception -> 0x0028 }
            if (r7 == 0) goto L_0x0023
            r9[r8] = r4     // Catch:{ Exception -> 0x0028 }
        L_0x0023:
            if (r0 == 0) goto L_0x0031
            goto L_0x002e
        L_0x0026:
            r7 = move-exception
            goto L_0x0035
        L_0x0028:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0026 }
            if (r0 == 0) goto L_0x0031
        L_0x002e:
            r0.dispose()
        L_0x0031:
            r10.countDown()
            return
        L_0x0035:
            if (r0 == 0) goto L_0x003a
            r0.dispose()
        L_0x003a:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkMessageByRandomId$104$MessagesStorage(long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public boolean checkMessageId(long j, boolean z, int i) {
        boolean[] zArr = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new Runnable(i, z, j, zArr, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ boolean f$2;
            public final /* synthetic */ long f$3;
            public final /* synthetic */ boolean[] f$4;
            public final /* synthetic */ CountDownLatch f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r6;
                this.f$5 = r7;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkMessageId$105$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x003b, code lost:
        if (r6 == null) goto L_0x0040;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x003d, code lost:
        r6.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0040, code lost:
        r11.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0043, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0032, code lost:
        if (r6 != null) goto L_0x003d;
     */
    /* renamed from: lambda$checkMessageId$105 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkMessageId$105$MessagesStorage(int r6, boolean r7, long r8, boolean[] r10, java.util.concurrent.CountDownLatch r11) {
        /*
            r5 = this;
            long r0 = (long) r6
            if (r7 == 0) goto L_0x0008
            long r6 = -r8
            r2 = 32
            long r6 = r6 << r2
            long r0 = r0 | r6
        L_0x0008:
            r6 = 0
            org.telegram.SQLite.SQLiteDatabase r7 = r5.database     // Catch:{ Exception -> 0x0037 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0037 }
            java.lang.String r3 = "SELECT mid FROM messages WHERE uid = %d AND mid = %d"
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0037 }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0037 }
            r9 = 0
            r4[r9] = r8     // Catch:{ Exception -> 0x0037 }
            java.lang.Long r8 = java.lang.Long.valueOf(r0)     // Catch:{ Exception -> 0x0037 }
            r0 = 1
            r4[r0] = r8     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0037 }
            java.lang.Object[] r1 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r8, r1)     // Catch:{ Exception -> 0x0037 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0037 }
            if (r7 == 0) goto L_0x0032
            r10[r9] = r0     // Catch:{ Exception -> 0x0037 }
        L_0x0032:
            if (r6 == 0) goto L_0x0040
            goto L_0x003d
        L_0x0035:
            r7 = move-exception
            goto L_0x0044
        L_0x0037:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0035 }
            if (r6 == 0) goto L_0x0040
        L_0x003d:
            r6.dispose()
        L_0x0040:
            r11.countDown()
            return
        L_0x0044:
            if (r6 == 0) goto L_0x0049
            r6.dispose()
        L_0x0049:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkMessageId$105$MessagesStorage(int, boolean, long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public void getUnreadMention(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getUnreadMention$107$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getUnreadMention$107 */
    public /* synthetic */ void lambda$getUnreadMention$107$MessagesStorage(long j, IntCallback intCallback) {
        try {
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT MIN(mid) FROM messages WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next()) {
                i = queryFinalized.intValue(0);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.IntCallback.this.run(this.f$1);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getMessagesCount(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getMessagesCount$109$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getMessagesCount$109 */
    public /* synthetic */ void lambda$getMessagesCount$109$MessagesStorage(long j, IntCallback intCallback) {
        try {
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM messages WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next()) {
                i = queryFinalized.intValue(0);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.IntCallback.this.run(this.f$1);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v1, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v3, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v4, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v5, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v6, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v0, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v11, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v1, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v16, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v2, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v14, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v15, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v16, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v11, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v6, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v17, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v18, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v14, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v9, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v20, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v21, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v16, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v17, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v22, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v23, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v14, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v9, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v18, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v24, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r47v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v26, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r35v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v28, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v29, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v24, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v31, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v21, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v32, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v22, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v33, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v34, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v23, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v36, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v45, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v47, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v34, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v35, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v26, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v48, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v53, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v37, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v38, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v27, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v54, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v44, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v59, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v78, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v79, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v101, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v137, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v138, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v90, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v91, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v92, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v126, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v102, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v155, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v159, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v103, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v160, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v179, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v164, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v190, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v105, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v104, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v107, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v155, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v106, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v108, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v157, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v107, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v110, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v158, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v108, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v159, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v160, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v113, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v111, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v116, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v112, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v113, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v164, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v114, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v165, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v166, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v170, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v120, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v60, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v64, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v68, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v71, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v157, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v159, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v160, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v37, resolved type: android.util.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v38, resolved type: android.util.LongSparseArray} */
    /* JADX WARNING: type inference failed for: r34v3 */
    /* JADX WARNING: type inference failed for: r34v4 */
    /* JADX WARNING: type inference failed for: r34v6 */
    /* JADX WARNING: type inference failed for: r34v7 */
    /* JADX WARNING: type inference failed for: r34v9 */
    /* JADX WARNING: type inference failed for: r34v10 */
    /* JADX WARNING: type inference failed for: r29v5 */
    /* JADX WARNING: type inference failed for: r8v5 */
    /* JADX WARNING: type inference failed for: r34v13 */
    /* JADX WARNING: type inference failed for: r29v8 */
    /* JADX WARNING: type inference failed for: r8v7 */
    /* JADX WARNING: type inference failed for: r34v15 */
    /* JADX WARNING: type inference failed for: r34v19 */
    /* JADX WARNING: type inference failed for: r34v20 */
    /* JADX WARNING: type inference failed for: r8v33 */
    /* JADX WARNING: type inference failed for: r8v39 */
    /* JADX WARNING: type inference failed for: r8v55 */
    /* JADX WARNING: type inference failed for: r34v29 */
    /* JADX WARNING: type inference failed for: r34v32 */
    /* JADX WARNING: type inference failed for: r34v33 */
    /* JADX WARNING: type inference failed for: r34v35 */
    /* JADX WARNING: type inference failed for: r34v36 */
    /* JADX WARNING: type inference failed for: r34v39 */
    /* JADX WARNING: type inference failed for: r34v41 */
    /* JADX WARNING: type inference failed for: r34v42 */
    /* JADX WARNING: type inference failed for: r8v104 */
    /* JADX WARNING: type inference failed for: r34v54 */
    /* JADX WARNING: type inference failed for: r34v57 */
    /* JADX WARNING: type inference failed for: r34v58 */
    /* JADX WARNING: type inference failed for: r34v59 */
    /* JADX WARNING: type inference failed for: r34v61 */
    /* JADX WARNING: type inference failed for: r34v63 */
    /* JADX WARNING: type inference failed for: r34v65 */
    /* JADX WARNING: type inference failed for: r34v66 */
    /* JADX WARNING: type inference failed for: r34v67 */
    /* JADX WARNING: type inference failed for: r34v69 */
    /* JADX WARNING: type inference failed for: r29v33 */
    /* JADX WARNING: type inference failed for: r29v35 */
    /* JADX WARNING: type inference failed for: r34v70 */
    /* JADX WARNING: type inference failed for: r7v155 */
    /* JADX WARNING: type inference failed for: r7v158 */
    /* JADX WARNING: Code restructure failed: missing block: B:552:0x0d8c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:553:0x0d8d, code lost:
        r1 = r47;
        r4 = r0;
        r34 = r7;
        r24 = r14;
        r25 = r15;
        r15 = r32;
        r10 = r38;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x011f, code lost:
        if (r2 != 0) goto L_0x0121;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:675:0x0fc6, code lost:
        if (r11.reply_to_random_id != 0) goto L_0x0fd9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:761:0x1113, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:762:0x1114, code lost:
        r29 = r8;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:329:0x080d A[SYNTHETIC, Splitter:B:329:0x080d] */
    /* JADX WARNING: Removed duplicated region for block: B:333:0x0818  */
    /* JADX WARNING: Removed duplicated region for block: B:389:0x093b  */
    /* JADX WARNING: Removed duplicated region for block: B:390:0x093d  */
    /* JADX WARNING: Removed duplicated region for block: B:392:0x0940 A[SYNTHETIC, Splitter:B:392:0x0940] */
    /* JADX WARNING: Removed duplicated region for block: B:400:0x097a A[SYNTHETIC, Splitter:B:400:0x097a] */
    /* JADX WARNING: Removed duplicated region for block: B:434:0x0aa7  */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x0130 A[Catch:{ Exception -> 0x01b4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x0143 A[Catch:{ Exception -> 0x01b4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:707:0x1032 A[Catch:{ Exception -> 0x0fcd }] */
    /* JADX WARNING: Removed duplicated region for block: B:710:0x1047 A[Catch:{ Exception -> 0x0fcd }] */
    /* JADX WARNING: Removed duplicated region for block: B:732:0x10ad A[Catch:{ Exception -> 0x1174 }] */
    /* JADX WARNING: Removed duplicated region for block: B:735:0x10bb A[Catch:{ Exception -> 0x1174 }] */
    /* JADX WARNING: Removed duplicated region for block: B:738:0x10c2 A[SYNTHETIC, Splitter:B:738:0x10c2] */
    /* JADX WARNING: Removed duplicated region for block: B:757:0x1100 A[Catch:{ Exception -> 0x1174 }] */
    /* JADX WARNING: Removed duplicated region for block: B:844:0x12ad A[Catch:{ Exception -> 0x137c }] */
    /* JADX WARNING: Removed duplicated region for block: B:868:0x1345 A[Catch:{ Exception -> 0x13b7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:870:0x1352 A[Catch:{ Exception -> 0x13b7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:914:0x143a  */
    /* JADX WARNING: Removed duplicated region for block: B:915:0x145f  */
    /* JADX WARNING: Removed duplicated region for block: B:917:0x1463  */
    /* JADX WARNING: Removed duplicated region for block: B:918:0x146b  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.lang.Runnable getMessagesInternal(long r42, long r44, int r46, int r47, int r48, int r49, int r50, int r51, boolean r52, boolean r53, int r54, int r55, boolean r56) {
        /*
            r41 = this;
            r15 = r41
            r5 = r42
            r1 = r46
            r2 = r47
            r14 = r51
            org.telegram.tgnet.TLRPC$TL_messages_messages r3 = new org.telegram.tgnet.TLRPC$TL_messages_messages
            r3.<init>()
            org.telegram.messenger.UserConfig r4 = r41.getUserConfig()
            int r4 = r4.clientUserId
            long r7 = (long) r2
            if (r52 == 0) goto L_0x001b
            int r10 = (int) r5
            int r10 = -r10
            goto L_0x001c
        L_0x001b:
            r10 = 0
        L_0x001c:
            r11 = 32
            r12 = 0
            int r16 = (r7 > r12 ? 1 : (r7 == r12 ? 0 : -1))
            if (r16 == 0) goto L_0x0029
            if (r10 == 0) goto L_0x0029
            long r12 = (long) r10
            long r12 = r12 << r11
            long r7 = r7 | r12
        L_0x0029:
            r12 = 777000(0xbdb28, double:3.83889E-318)
            int r20 = (r5 > r12 ? 1 : (r5 == r12 ? 0 : -1))
            if (r20 != 0) goto L_0x0033
            r12 = 10
            goto L_0x0034
        L_0x0033:
            r12 = 1
        L_0x0034:
            long r20 = android.os.SystemClock.elapsedRealtime()
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x13ff }
            r13.<init>()     // Catch:{ Exception -> 0x13ff }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x13ff }
            r9.<init>()     // Catch:{ Exception -> 0x13ff }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x13ff }
            r11.<init>()     // Catch:{ Exception -> 0x13ff }
            r24 = r7
            android.util.SparseArray r7 = new android.util.SparseArray     // Catch:{ Exception -> 0x13ff }
            r7.<init>()     // Catch:{ Exception -> 0x13ff }
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x13ff }
            r8.<init>()     // Catch:{ Exception -> 0x13ff }
            if (r53 == 0) goto L_0x01cd
            org.telegram.SQLite.SQLiteDatabase r10 = r15.database     // Catch:{ Exception -> 0x01b4 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x01b4 }
            java.lang.String r2 = "SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.ttl FROM scheduled_messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.date DESC"
            r1 = 1
            java.lang.Object[] r15 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x01b4 }
            java.lang.Long r1 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x01b4 }
            r14 = 0
            r15[r14] = r1     // Catch:{ Exception -> 0x01b4 }
            java.lang.String r1 = java.lang.String.format(r12, r2, r15)     // Catch:{ Exception -> 0x01b4 }
            java.lang.Object[] r2 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x01b4 }
            org.telegram.SQLite.SQLiteCursor r1 = r10.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x01b4 }
        L_0x006f:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x01b4 }
            if (r2 == 0) goto L_0x018f
            org.telegram.tgnet.NativeByteBuffer r2 = r1.byteBufferValue(r14)     // Catch:{ Exception -> 0x01b4 }
            if (r2 == 0) goto L_0x0188
            int r10 = r2.readInt32(r14)     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$Message r10 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r10, r14)     // Catch:{ Exception -> 0x01b4 }
            r12 = 1
            int r14 = r1.intValue(r12)     // Catch:{ Exception -> 0x01b4 }
            r10.send_state = r14     // Catch:{ Exception -> 0x01b4 }
            r12 = 2
            int r14 = r1.intValue(r12)     // Catch:{ Exception -> 0x01b4 }
            r10.id = r14     // Catch:{ Exception -> 0x01b4 }
            if (r14 <= 0) goto L_0x009d
            int r12 = r10.send_state     // Catch:{ Exception -> 0x01b4 }
            if (r12 == 0) goto L_0x009d
            r14 = 3
            if (r12 == r14) goto L_0x009d
            r12 = 0
            r10.send_state = r12     // Catch:{ Exception -> 0x01b4 }
        L_0x009d:
            long r14 = (long) r4     // Catch:{ Exception -> 0x01b4 }
            int r12 = (r5 > r14 ? 1 : (r5 == r14 ? 0 : -1))
            if (r12 != 0) goto L_0x00a9
            r12 = 1
            r10.out = r12     // Catch:{ Exception -> 0x01b4 }
            r14 = 0
            r10.unread = r14     // Catch:{ Exception -> 0x01b4 }
            goto L_0x00ac
        L_0x00a9:
            r12 = 1
            r10.unread = r12     // Catch:{ Exception -> 0x01b4 }
        L_0x00ac:
            r10.readAttachPath(r2, r4)     // Catch:{ Exception -> 0x01b4 }
            r2.reuse()     // Catch:{ Exception -> 0x01b4 }
            r2 = 3
            int r12 = r1.intValue(r2)     // Catch:{ Exception -> 0x01b4 }
            r10.date = r12     // Catch:{ Exception -> 0x01b4 }
            r10.dialog_id = r5     // Catch:{ Exception -> 0x01b4 }
            int r2 = r10.ttl     // Catch:{ Exception -> 0x01b4 }
            if (r2 != 0) goto L_0x00c6
            r2 = 6
            int r12 = r1.intValue(r2)     // Catch:{ Exception -> 0x01b4 }
            r10.ttl = r12     // Catch:{ Exception -> 0x01b4 }
        L_0x00c6:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r3.messages     // Catch:{ Exception -> 0x01b4 }
            r2.add(r10)     // Catch:{ Exception -> 0x01b4 }
            addUsersAndChatsFromMessage(r10, r13, r9)     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            if (r2 == 0) goto L_0x0188
            int r12 = r2.reply_to_msg_id     // Catch:{ Exception -> 0x01b4 }
            if (r12 != 0) goto L_0x00de
            long r14 = r2.reply_to_random_id     // Catch:{ Exception -> 0x01b4 }
            r16 = 0
            int r2 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r2 == 0) goto L_0x0188
        L_0x00de:
            r2 = 5
            boolean r12 = r1.isNull(r2)     // Catch:{ Exception -> 0x01b4 }
            if (r12 != 0) goto L_0x0103
            org.telegram.tgnet.NativeByteBuffer r12 = r1.byteBufferValue(r2)     // Catch:{ Exception -> 0x01b4 }
            if (r12 == 0) goto L_0x0103
            r2 = 0
            int r14 = r12.readInt32(r2)     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r12, r14, r2)     // Catch:{ Exception -> 0x01b4 }
            r10.replyMessage = r14     // Catch:{ Exception -> 0x01b4 }
            r14.readAttachPath(r12, r4)     // Catch:{ Exception -> 0x01b4 }
            r12.reuse()     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$Message r2 = r10.replyMessage     // Catch:{ Exception -> 0x01b4 }
            if (r2 == 0) goto L_0x0103
            addUsersAndChatsFromMessage(r2, r13, r9)     // Catch:{ Exception -> 0x01b4 }
        L_0x0103:
            org.telegram.tgnet.TLRPC$Message r2 = r10.replyMessage     // Catch:{ Exception -> 0x01b4 }
            if (r2 != 0) goto L_0x0188
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            int r12 = r2.reply_to_msg_id     // Catch:{ Exception -> 0x01b4 }
            if (r12 == 0) goto L_0x0153
            long r14 = (long) r12     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$Peer r2 = r2.reply_to_peer_id     // Catch:{ Exception -> 0x01b4 }
            if (r2 == 0) goto L_0x0119
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x01b4 }
            r28 = r13
            if (r2 == 0) goto L_0x0126
            goto L_0x0121
        L_0x0119:
            r28 = r13
            org.telegram.tgnet.TLRPC$Peer r2 = r10.peer_id     // Catch:{ Exception -> 0x01b4 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x01b4 }
            if (r2 == 0) goto L_0x0126
        L_0x0121:
            long r12 = (long) r2     // Catch:{ Exception -> 0x01b4 }
            r2 = 32
            long r12 = r12 << r2
            long r14 = r14 | r12
        L_0x0126:
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x01b4 }
            boolean r2 = r11.contains(r2)     // Catch:{ Exception -> 0x01b4 }
            if (r2 != 0) goto L_0x0137
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x01b4 }
            r11.add(r2)     // Catch:{ Exception -> 0x01b4 }
        L_0x0137:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            int r2 = r2.reply_to_msg_id     // Catch:{ Exception -> 0x01b4 }
            java.lang.Object r2 = r7.get(r2)     // Catch:{ Exception -> 0x01b4 }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x01b4 }
            if (r2 != 0) goto L_0x014f
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x01b4 }
            r2.<init>()     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r12 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            int r12 = r12.reply_to_msg_id     // Catch:{ Exception -> 0x01b4 }
            r7.put(r12, r2)     // Catch:{ Exception -> 0x01b4 }
        L_0x014f:
            r2.add(r10)     // Catch:{ Exception -> 0x01b4 }
            goto L_0x018a
        L_0x0153:
            r28 = r13
            long r12 = r2.reply_to_random_id     // Catch:{ Exception -> 0x01b4 }
            java.lang.Long r2 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x01b4 }
            boolean r2 = r11.contains(r2)     // Catch:{ Exception -> 0x01b4 }
            if (r2 != 0) goto L_0x016c
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            long r12 = r2.reply_to_random_id     // Catch:{ Exception -> 0x01b4 }
            java.lang.Long r2 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x01b4 }
            r11.add(r2)     // Catch:{ Exception -> 0x01b4 }
        L_0x016c:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r2 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            long r12 = r2.reply_to_random_id     // Catch:{ Exception -> 0x01b4 }
            java.lang.Object r2 = r8.get(r12)     // Catch:{ Exception -> 0x01b4 }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x01b4 }
            if (r2 != 0) goto L_0x0184
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x01b4 }
            r2.<init>()     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r12 = r10.reply_to     // Catch:{ Exception -> 0x01b4 }
            long r12 = r12.reply_to_random_id     // Catch:{ Exception -> 0x01b4 }
            r8.put(r12, r2)     // Catch:{ Exception -> 0x01b4 }
        L_0x0184:
            r2.add(r10)     // Catch:{ Exception -> 0x01b4 }
            goto L_0x018a
        L_0x0188:
            r28 = r13
        L_0x018a:
            r13 = r28
            r14 = 0
            goto L_0x006f
        L_0x018f:
            r28 = r13
            r1.dispose()     // Catch:{ Exception -> 0x01b4 }
            r2 = r41
            r1 = r46
            r6 = r47
            r13 = r51
            r10 = r3
            r30 = r7
            r37 = r9
            r5 = r11
            r3 = r28
            r7 = 0
            r14 = 0
            r24 = 0
            r25 = 0
            r32 = 0
            r34 = 0
            r36 = 0
            r39 = 1
            goto L_0x1246
        L_0x01b4:
            r0 = move-exception
            r2 = r41
            r1 = r47
            r4 = r0
            r10 = r3
            r9 = 1
        L_0x01bc:
            r15 = 0
            r22 = 0
            r24 = 0
        L_0x01c1:
            r25 = 0
        L_0x01c3:
            r32 = 0
        L_0x01c5:
            r34 = 0
            r36 = 0
        L_0x01c9:
            r3 = r46
            goto L_0x1414
        L_0x01cd:
            r28 = r13
            int r1 = (int) r5
            if (r1 == 0) goto L_0x0b6b
            java.lang.String r15 = "SELECT inbox_max, unread_count, date, unread_count_i FROM dialogs WHERE did = "
            r13 = r51
            r2 = 3
            if (r13 != r2) goto L_0x0272
            if (r49 != 0) goto L_0x0272
            r2 = r41
            org.telegram.SQLite.SQLiteDatabase r12 = r2.database     // Catch:{ Exception -> 0x026a }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x026a }
            r14.<init>()     // Catch:{ Exception -> 0x026a }
            r14.append(r15)     // Catch:{ Exception -> 0x026a }
            r14.append(r5)     // Catch:{ Exception -> 0x026a }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x026a }
            r29 = r8
            r15 = 0
            java.lang.Object[] r8 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x026a }
            org.telegram.SQLite.SQLiteCursor r8 = r12.queryFinalized(r14, r8)     // Catch:{ Exception -> 0x026a }
            boolean r12 = r8.next()     // Catch:{ Exception -> 0x026a }
            if (r12 == 0) goto L_0x0238
            int r12 = r8.intValue(r15)     // Catch:{ Exception -> 0x026a }
            r14 = 1
            int r12 = java.lang.Math.max(r14, r12)     // Catch:{ Exception -> 0x026a }
            int r12 = r12 + r14
            int r15 = r8.intValue(r14)     // Catch:{ Exception -> 0x022c }
            r14 = 2
            int r30 = r8.intValue(r14)     // Catch:{ Exception -> 0x0223 }
            r14 = 3
            int r31 = r8.intValue(r14)     // Catch:{ Exception -> 0x0216 }
            goto L_0x023e
        L_0x0216:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r24 = r12
            r25 = r30
            r9 = 0
            r22 = 0
            goto L_0x01c3
        L_0x0223:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r24 = r12
            r9 = 0
            goto L_0x0235
        L_0x022c:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r24 = r12
        L_0x0233:
            r9 = 0
            r15 = 0
        L_0x0235:
            r22 = 0
            goto L_0x01c1
        L_0x0238:
            r12 = 0
            r15 = 0
            r30 = 0
            r31 = 0
        L_0x023e:
            r8.dispose()     // Catch:{ Exception -> 0x025a }
            r8 = r47
            r38 = r3
            r37 = r9
            r33 = r11
            r34 = r24
            r25 = r30
            r32 = r31
            r36 = 0
            r3 = r46
            r30 = r7
            r24 = r12
            r7 = 0
            goto L_0x04ff
        L_0x025a:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r24 = r12
            r25 = r30
            r32 = r31
            r9 = 0
            r22 = 0
            goto L_0x01c5
        L_0x026a:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r9 = 0
            goto L_0x01bc
        L_0x0272:
            r2 = r41
            r29 = r8
            r8 = 1
            if (r13 == r8) goto L_0x04e7
            r8 = 3
            if (r13 == r8) goto L_0x04e7
            r8 = 4
            if (r13 == r8) goto L_0x04e7
            if (r49 != 0) goto L_0x04e7
            r8 = 2
            if (r13 != r8) goto L_0x04b3
            org.telegram.SQLite.SQLiteDatabase r8 = r2.database     // Catch:{ Exception -> 0x026a }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x026a }
            r14.<init>()     // Catch:{ Exception -> 0x026a }
            r14.append(r15)     // Catch:{ Exception -> 0x026a }
            r14.append(r5)     // Catch:{ Exception -> 0x026a }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x026a }
            r30 = r7
            r15 = 0
            java.lang.Object[] r7 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x026a }
            org.telegram.SQLite.SQLiteCursor r7 = r8.queryFinalized(r14, r7)     // Catch:{ Exception -> 0x026a }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x026a }
            if (r8 == 0) goto L_0x030e
            int r8 = r7.intValue(r15)     // Catch:{ Exception -> 0x026a }
            r14 = 1
            int r8 = java.lang.Math.max(r14, r8)     // Catch:{ Exception -> 0x026a }
            r15 = r11
            r31 = r12
            long r11 = (long) r8
            int r24 = r7.intValue(r14)     // Catch:{ Exception -> 0x0305 }
            r14 = 2
            int r25 = r7.intValue(r14)     // Catch:{ Exception -> 0x02ed }
            r14 = 3
            int r32 = r7.intValue(r14)     // Catch:{ Exception -> 0x02e2 }
            r16 = 0
            int r14 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r14 == 0) goto L_0x02d0
            if (r10 == 0) goto L_0x02d0
            r33 = r15
            long r14 = (long) r10
            r18 = 32
            long r14 = r14 << r18
            long r11 = r11 | r14
            goto L_0x02d2
        L_0x02d0:
            r33 = r15
        L_0x02d2:
            long r14 = (long) r4
            int r34 = (r5 > r14 ? 1 : (r5 == r14 ? 0 : -1))
            if (r34 != 0) goto L_0x02dc
            r24 = r8
            r14 = 1
            r15 = 0
            goto L_0x031e
        L_0x02dc:
            r15 = r24
            r14 = 1
            r24 = r8
            goto L_0x031e
        L_0x02e2:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r15 = r24
            r9 = 0
            r22 = 0
            goto L_0x02f9
        L_0x02ed:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r15 = r24
            r9 = 0
            r22 = 0
            r25 = 0
        L_0x02f9:
            r32 = 0
            r34 = 0
            r36 = 0
            r3 = r46
            r24 = r8
            goto L_0x1414
        L_0x0305:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r3
            r24 = r8
            goto L_0x0233
        L_0x030e:
            r33 = r11
            r31 = r12
            r8 = r47
            r11 = r24
            r14 = 0
            r15 = 0
            r24 = 0
            r25 = 0
            r32 = 0
        L_0x031e:
            r7.dispose()     // Catch:{ Exception -> 0x04a5 }
            if (r14 != 0) goto L_0x03ac
            org.telegram.SQLite.SQLiteDatabase r7 = r2.database     // Catch:{ Exception -> 0x04a5 }
            r34 = r11
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x04a5 }
            java.lang.String r12 = "SELECT min(mid), max(date) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r37 = r9
            r36 = r14
            r14 = 1
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x03a9 }
            java.lang.Long r14 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x03a9 }
            r38 = r3
            r3 = 0
            r9[r3] = r14     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = java.lang.String.format(r11, r12, r9)     // Catch:{ Exception -> 0x04a0 }
            java.lang.Object[] r12 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x04a0 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r9, r12)     // Catch:{ Exception -> 0x04a0 }
            boolean r9 = r7.next()     // Catch:{ Exception -> 0x04a0 }
            if (r9 == 0) goto L_0x0363
            int r9 = r7.intValue(r3)     // Catch:{ Exception -> 0x04a0 }
            r3 = 1
            int r12 = r7.intValue(r3)     // Catch:{ Exception -> 0x0359 }
            r24 = r9
            r25 = r12
            goto L_0x0363
        L_0x0359:
            r0 = move-exception
            r3 = r46
            r1 = r47
            r4 = r0
            r24 = r9
            goto L_0x0b62
        L_0x0363:
            r7.dispose()     // Catch:{ Exception -> 0x04a0 }
            if (r24 == 0) goto L_0x03a5
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r7 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid >= %d AND out = 0 AND read_state IN(0,2)"
            r9 = 2
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04a0 }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x04a0 }
            r14 = 0
            r12[r14] = r9     // Catch:{ Exception -> 0x04a0 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x04a0 }
            r22 = 1
            r12[r22] = r9     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r7 = java.lang.String.format(r11, r7, r12)     // Catch:{ Exception -> 0x04a0 }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x04a0 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x04a0 }
            boolean r7 = r3.next()     // Catch:{ Exception -> 0x04a0 }
            if (r7 == 0) goto L_0x0393
            int r7 = r3.intValue(r14)     // Catch:{ Exception -> 0x04a0 }
            goto L_0x0394
        L_0x0393:
            r7 = r15
        L_0x0394:
            r3.dispose()     // Catch:{ Exception -> 0x039c }
            r3 = r46
            r15 = r7
            goto L_0x04cc
        L_0x039c:
            r0 = move-exception
            r3 = r46
            r1 = r47
            r4 = r0
            r15 = r7
            goto L_0x0b62
        L_0x03a5:
            r3 = r46
            goto L_0x04cc
        L_0x03a9:
            r0 = move-exception
            goto L_0x04a8
        L_0x03ac:
            r38 = r3
            r37 = r9
            r34 = r11
            r36 = r14
            if (r8 != 0) goto L_0x0426
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database     // Catch:{ Exception -> 0x04a0 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid > 0 AND out = 0 AND read_state IN(0,2)"
            r11 = 1
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x04a0 }
            java.lang.Long r11 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x04a0 }
            r14 = 0
            r12[r14] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = java.lang.String.format(r7, r9, r12)     // Catch:{ Exception -> 0x04a0 }
            java.lang.Object[] r11 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x04a0 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r9, r11)     // Catch:{ Exception -> 0x04a0 }
            boolean r9 = r3.next()     // Catch:{ Exception -> 0x04a0 }
            if (r9 == 0) goto L_0x03db
            int r9 = r3.intValue(r14)     // Catch:{ Exception -> 0x04a0 }
            goto L_0x03dc
        L_0x03db:
            r9 = 0
        L_0x03dc:
            r3.dispose()     // Catch:{ Exception -> 0x04a0 }
            if (r9 != r15) goto L_0x041e
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = "SELECT min(mid) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r11 = 1
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x04a0 }
            java.lang.Long r11 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x04a0 }
            r14 = 0
            r12[r14] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r7 = java.lang.String.format(r7, r9, r12)     // Catch:{ Exception -> 0x04a0 }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x04a0 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x04a0 }
            boolean r7 = r3.next()     // Catch:{ Exception -> 0x04a0 }
            if (r7 == 0) goto L_0x0418
            int r8 = r3.intValue(r14)     // Catch:{ Exception -> 0x04a0 }
            long r11 = (long) r8     // Catch:{ Exception -> 0x04a0 }
            r16 = 0
            int r7 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r7 == 0) goto L_0x0413
            if (r10 == 0) goto L_0x0413
            r9 = r8
            long r7 = (long) r10     // Catch:{ Exception -> 0x04a0 }
            r14 = 32
            long r7 = r7 << r14
            long r11 = r11 | r7
            goto L_0x0414
        L_0x0413:
            r9 = r8
        L_0x0414:
            r8 = r9
            r24 = r8
            goto L_0x041a
        L_0x0418:
            r11 = r34
        L_0x041a:
            r3.dispose()     // Catch:{ Exception -> 0x04a0 }
            goto L_0x0420
        L_0x041e:
            r11 = r34
        L_0x0420:
            r3 = r46
            r34 = r11
            goto L_0x04cc
        L_0x0426:
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database     // Catch:{ Exception -> 0x04a0 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = "SELECT start, end FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r11 = 3
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x04a0 }
            java.lang.Long r11 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x04a0 }
            r14 = 0
            r12[r14] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04a0 }
            r14 = 1
            r12[r14] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04a0 }
            r14 = 2
            r12[r14] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = java.lang.String.format(r7, r9, r12)     // Catch:{ Exception -> 0x04a0 }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x04a0 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r9, r12)     // Catch:{ Exception -> 0x04a0 }
            boolean r9 = r3.next()     // Catch:{ Exception -> 0x04a0 }
            if (r9 != 0) goto L_0x0457
            r9 = 1
            goto L_0x0458
        L_0x0457:
            r9 = 0
        L_0x0458:
            r3.dispose()     // Catch:{ Exception -> 0x04a0 }
            if (r9 == 0) goto L_0x03a5
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r9 = "SELECT min(mid) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > %d"
            r11 = 2
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x04a0 }
            java.lang.Long r11 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x04a0 }
            r14 = 0
            r12[r14] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x04a0 }
            r22 = 1
            r12[r22] = r11     // Catch:{ Exception -> 0x04a0 }
            java.lang.String r7 = java.lang.String.format(r7, r9, r12)     // Catch:{ Exception -> 0x04a0 }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x04a0 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x04a0 }
            boolean r7 = r3.next()     // Catch:{ Exception -> 0x04a0 }
            if (r7 == 0) goto L_0x049a
            int r8 = r3.intValue(r14)     // Catch:{ Exception -> 0x04a0 }
            long r11 = (long) r8     // Catch:{ Exception -> 0x04a0 }
            r16 = 0
            int r7 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r7 == 0) goto L_0x0497
            if (r10 == 0) goto L_0x0497
            r9 = r8
            long r7 = (long) r10     // Catch:{ Exception -> 0x04a0 }
            r14 = 32
            long r7 = r7 << r14
            long r11 = r11 | r7
            goto L_0x0498
        L_0x0497:
            r9 = r8
        L_0x0498:
            r8 = r9
            goto L_0x049c
        L_0x049a:
            r11 = r34
        L_0x049c:
            r3.dispose()     // Catch:{ Exception -> 0x04a0 }
            goto L_0x0420
        L_0x04a0:
            r0 = move-exception
            r3 = r46
            goto L_0x0b5f
        L_0x04a5:
            r0 = move-exception
            r36 = r14
        L_0x04a8:
            r1 = r47
            r4 = r0
            r10 = r3
            r9 = 0
            r22 = 0
            r34 = 0
            goto L_0x01c9
        L_0x04b3:
            r38 = r3
            r30 = r7
            r37 = r9
            r33 = r11
            r31 = r12
            r3 = r46
            r8 = r47
            r34 = r24
            r15 = 0
            r24 = 0
            r25 = 0
            r32 = 0
            r36 = 0
        L_0x04cc:
            r11 = r31
            if (r3 > r15) goto L_0x04d8
            if (r15 >= r11) goto L_0x04d3
            goto L_0x04d8
        L_0x04d3:
            int r7 = r15 - r3
            int r3 = r3 + 10
            goto L_0x04ff
        L_0x04d8:
            int r7 = r15 + 10
            int r3 = java.lang.Math.max(r3, r7)     // Catch:{ Exception -> 0x0b5e }
            r7 = 0
            if (r15 >= r11) goto L_0x04ff
            r15 = 0
            r24 = 0
            r34 = 0
            goto L_0x04fd
        L_0x04e7:
            r38 = r3
            r30 = r7
            r37 = r9
            r33 = r11
            r3 = r46
            r8 = r47
            r34 = r24
            r7 = 0
            r15 = 0
            r24 = 0
            r25 = 0
            r32 = 0
        L_0x04fd:
            r36 = 0
        L_0x04ff:
            org.telegram.SQLite.SQLiteDatabase r9 = r2.database     // Catch:{ Exception -> 0x0b5e }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x0b5e }
            java.lang.String r12 = "SELECT start FROM messages_holes WHERE uid = %d AND start IN (0, 1)"
            r46 = r8
            r14 = 1
            java.lang.Object[] r8 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0b5e }
            java.lang.Long r14 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0b5e }
            r31 = r1
            r1 = 0
            r8[r1] = r14     // Catch:{ Exception -> 0x0b5e }
            java.lang.String r8 = java.lang.String.format(r11, r12, r8)     // Catch:{ Exception -> 0x0b5e }
            java.lang.Object[] r12 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0b5e }
            org.telegram.SQLite.SQLiteCursor r8 = r9.queryFinalized(r8, r12)     // Catch:{ Exception -> 0x0b5e }
            boolean r9 = r8.next()     // Catch:{ Exception -> 0x0b5e }
            if (r9 == 0) goto L_0x052c
            int r9 = r8.intValue(r1)     // Catch:{ Exception -> 0x0b5e }
            r1 = 1
            if (r9 != r1) goto L_0x0571
            r1 = 1
            goto L_0x0572
        L_0x052c:
            r8.dispose()     // Catch:{ Exception -> 0x0b5e }
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0b5e }
            java.lang.String r8 = "SELECT min(mid) FROM messages WHERE uid = %d AND mid > 0"
            r9 = 1
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0b5e }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0b5e }
            r14 = 0
            r12[r14] = r9     // Catch:{ Exception -> 0x0b5e }
            java.lang.String r8 = java.lang.String.format(r11, r8, r12)     // Catch:{ Exception -> 0x0b5e }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0b5e }
            org.telegram.SQLite.SQLiteCursor r8 = r1.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0b5e }
            boolean r1 = r8.next()     // Catch:{ Exception -> 0x0b5e }
            if (r1 == 0) goto L_0x0571
            int r1 = r8.intValue(r14)     // Catch:{ Exception -> 0x0b5e }
            if (r1 == 0) goto L_0x0571
            org.telegram.SQLite.SQLiteDatabase r9 = r2.database     // Catch:{ Exception -> 0x0b5e }
            java.lang.String r12 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r12)     // Catch:{ Exception -> 0x0b5e }
            r9.requery()     // Catch:{ Exception -> 0x0b5e }
            r12 = 1
            r9.bindLong(r12, r5)     // Catch:{ Exception -> 0x0b5e }
            r12 = 2
            r14 = 0
            r9.bindInteger(r12, r14)     // Catch:{ Exception -> 0x0b5e }
            r12 = 3
            r9.bindInteger(r12, r1)     // Catch:{ Exception -> 0x0b5e }
            r9.step()     // Catch:{ Exception -> 0x0b5e }
            r9.dispose()     // Catch:{ Exception -> 0x0b5e }
        L_0x0571:
            r1 = 0
        L_0x0572:
            r8.dispose()     // Catch:{ Exception -> 0x0b53 }
            java.lang.String r8 = "SELECT end FROM messages_holes WHERE uid = %d AND end <= %d ORDER BY end DESC LIMIT 1"
            java.lang.String r9 = "SELECT max(mid) FROM messages WHERE uid = %d AND mid > 0"
            r12 = 3
            if (r13 == r12) goto L_0x07f0
            r12 = 4
            if (r13 == r12) goto L_0x07f0
            r12 = 2
            if (r36 == 0) goto L_0x0586
            if (r13 != r12) goto L_0x0586
            goto L_0x07f0
        L_0x0586:
            r14 = 1
            if (r13 != r14) goto L_0x063c
            org.telegram.SQLite.SQLiteDatabase r7 = r2.database     // Catch:{ Exception -> 0x062f }
            java.lang.String r8 = "SELECT start, end FROM messages_holes WHERE uid = %d AND start >= %d AND start != 1 AND end != 1 ORDER BY start ASC LIMIT 1"
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r12 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r14 = 0
            r9[r14] = r12     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r12 = java.lang.Integer.valueOf(r47)     // Catch:{ Exception -> 0x062f }
            r22 = 1
            r9[r22] = r12     // Catch:{ Exception -> 0x062f }
            java.lang.String r8 = java.lang.String.format(r11, r8, r9)     // Catch:{ Exception -> 0x062f }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x062f }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x062f }
            if (r8 == 0) goto L_0x05bd
            int r8 = r7.intValue(r14)     // Catch:{ Exception -> 0x062f }
            long r8 = (long) r8     // Catch:{ Exception -> 0x062f }
            if (r10 == 0) goto L_0x05bb
            long r5 = (long) r10     // Catch:{ Exception -> 0x062f }
            r10 = 32
            long r5 = r5 << r10
            long r5 = r5 | r8
            goto L_0x05bf
        L_0x05bb:
            r5 = r8
            goto L_0x05bf
        L_0x05bd:
            r5 = 0
        L_0x05bf:
            r7.dispose()     // Catch:{ Exception -> 0x062f }
            r7 = 0
            int r9 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r9 == 0) goto L_0x05ff
            org.telegram.SQLite.SQLiteDatabase r7 = r2.database     // Catch:{ Exception -> 0x062f }
            java.lang.String r8 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r9 = 5
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r12 = 0
            r10[r12] = r9     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r49)     // Catch:{ Exception -> 0x062f }
            r12 = 1
            r10[r12] = r9     // Catch:{ Exception -> 0x062f }
            java.lang.Long r9 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x062f }
            r12 = 2
            r10[r12] = r9     // Catch:{ Exception -> 0x062f }
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x062f }
            r6 = 3
            r10[r6] = r5     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x062f }
            r6 = 4
            r10[r6] = r5     // Catch:{ Exception -> 0x062f }
            java.lang.String r5 = java.lang.String.format(r11, r8, r10)     // Catch:{ Exception -> 0x062f }
            r6 = 0
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r5 = r7.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x062f }
            goto L_0x0712
        L_0x05ff:
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r7 = 4
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r9 = 0
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r49)     // Catch:{ Exception -> 0x062f }
            r9 = 1
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Long r7 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x062f }
            r9 = 2
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x062f }
            r9 = 3
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = java.lang.String.format(r11, r6, r8)     // Catch:{ Exception -> 0x062f }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x062f }
            goto L_0x0712
        L_0x062f:
            r0 = move-exception
        L_0x0630:
            r4 = r0
            r9 = r1
        L_0x0632:
            r10 = r38
            r22 = 0
            r34 = 0
        L_0x0638:
            r1 = r47
            goto L_0x1414
        L_0x063c:
            if (r49 == 0) goto L_0x0720
            r5 = 0
            int r9 = (r34 > r5 ? 1 : (r34 == r5 ? 0 : -1))
            if (r9 == 0) goto L_0x06e4
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x062f }
            r6 = 2
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r6 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r9 = 0
            r7[r9] = r6     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r47)     // Catch:{ Exception -> 0x062f }
            r12 = 1
            r7[r12] = r6     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = java.lang.String.format(r11, r8, r7)     // Catch:{ Exception -> 0x062f }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x062f }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x062f }
            if (r6 == 0) goto L_0x0674
            int r6 = r5.intValue(r9)     // Catch:{ Exception -> 0x062f }
            long r6 = (long) r6     // Catch:{ Exception -> 0x062f }
            if (r10 == 0) goto L_0x0676
            long r8 = (long) r10     // Catch:{ Exception -> 0x062f }
            r10 = 32
            long r8 = r8 << r10
            long r6 = r6 | r8
            goto L_0x0676
        L_0x0674:
            r6 = 0
        L_0x0676:
            r5.dispose()     // Catch:{ Exception -> 0x062f }
            r8 = 0
            int r5 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1))
            if (r5 == 0) goto L_0x06b5
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x062f }
            java.lang.String r8 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r9 = 5
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r12 = 0
            r10[r12] = r9     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r49)     // Catch:{ Exception -> 0x062f }
            r12 = 1
            r10[r12] = r9     // Catch:{ Exception -> 0x062f }
            java.lang.Long r9 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x062f }
            r12 = 2
            r10[r12] = r9     // Catch:{ Exception -> 0x062f }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x062f }
            r7 = 3
            r10[r7] = r6     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x062f }
            r7 = 4
            r10[r7] = r6     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = java.lang.String.format(r11, r8, r10)     // Catch:{ Exception -> 0x062f }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x062f }
            goto L_0x0712
        L_0x06b5:
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r7 = 4
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r9 = 0
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r49)     // Catch:{ Exception -> 0x062f }
            r9 = 1
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Long r7 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x062f }
            r9 = 2
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x062f }
            r9 = 3
            r8[r9] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = java.lang.String.format(r11, r6, r8)     // Catch:{ Exception -> 0x062f }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x062f }
            goto L_0x0712
        L_0x06e4:
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r8 = 4
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x062f }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x062f }
            r10 = 0
            r9[r10] = r8     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r49)     // Catch:{ Exception -> 0x062f }
            r10 = 1
            r9[r10] = r8     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x062f }
            r8 = 2
            r9[r8] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x062f }
            r8 = 3
            r9[r8] = r7     // Catch:{ Exception -> 0x062f }
            java.lang.String r6 = java.lang.String.format(r11, r6, r9)     // Catch:{ Exception -> 0x062f }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x062f }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x062f }
        L_0x0712:
            r39 = r1
            r6 = r5
            r9 = r15
            r8 = r32
            r7 = 0
            r10 = 0
            r1 = r46
        L_0x071c:
            r5 = r47
            goto L_0x0ea8
        L_0x0720:
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x07ec }
            r6 = 1
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x07ec }
            java.lang.Long r6 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x07ec }
            r12 = 0
            r8[r12] = r6     // Catch:{ Exception -> 0x07ec }
            java.lang.String r6 = java.lang.String.format(r11, r9, r8)     // Catch:{ Exception -> 0x07ec }
            java.lang.Object[] r8 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x07ec }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x07ec }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x07ec }
            if (r6 == 0) goto L_0x0741
            int r6 = r5.intValue(r12)     // Catch:{ Exception -> 0x062f }
            goto L_0x0742
        L_0x0741:
            r6 = 0
        L_0x0742:
            r5.dispose()     // Catch:{ Exception -> 0x07e0 }
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x07e0 }
            java.lang.String r8 = "SELECT max(end) FROM messages_holes WHERE uid = %d"
            r9 = 1
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x07e0 }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x07e0 }
            r14 = 0
            r12[r14] = r9     // Catch:{ Exception -> 0x07e0 }
            java.lang.String r8 = java.lang.String.format(r11, r8, r12)     // Catch:{ Exception -> 0x07e0 }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x07e0 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x07e0 }
            boolean r8 = r5.next()     // Catch:{ Exception -> 0x07e0 }
            if (r8 == 0) goto L_0x0771
            int r8 = r5.intValue(r14)     // Catch:{ Exception -> 0x07e0 }
            long r8 = (long) r8
            r12 = r15
            if (r10 == 0) goto L_0x0774
            long r14 = (long) r10
            r10 = 32
            long r14 = r14 << r10
            long r8 = r8 | r14
            goto L_0x0774
        L_0x0771:
            r12 = r15
            r8 = 0
        L_0x0774:
            r5.dispose()     // Catch:{ Exception -> 0x084c }
            r14 = 0
            int r5 = (r8 > r14 ? 1 : (r8 == r14 ? 0 : -1))
            if (r5 == 0) goto L_0x07ad
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x084c }
            java.lang.String r10 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r14 = 4
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x084c }
            java.lang.Long r14 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x084c }
            r22 = 0
            r15[r22] = r14     // Catch:{ Exception -> 0x084c }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x084c }
            r9 = 1
            r15[r9] = r8     // Catch:{ Exception -> 0x084c }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x084c }
            r8 = 2
            r15[r8] = r7     // Catch:{ Exception -> 0x084c }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x084c }
            r8 = 3
            r15[r8] = r7     // Catch:{ Exception -> 0x084c }
            java.lang.String r7 = java.lang.String.format(r11, r10, r15)     // Catch:{ Exception -> 0x084c }
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x084c }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x084c }
            goto L_0x07d4
        L_0x07ad:
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x084c }
            java.lang.String r8 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r9 = 3
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x084c }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x084c }
            r14 = 0
            r10[r14] = r9     // Catch:{ Exception -> 0x084c }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x084c }
            r9 = 1
            r10[r9] = r7     // Catch:{ Exception -> 0x084c }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x084c }
            r9 = 2
            r10[r9] = r7     // Catch:{ Exception -> 0x084c }
            java.lang.String r7 = java.lang.String.format(r11, r8, r10)     // Catch:{ Exception -> 0x084c }
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x084c }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x084c }
        L_0x07d4:
            r39 = r1
            r10 = r6
            r9 = r12
            r8 = r32
            r7 = 0
            r1 = r46
            r6 = r5
            goto L_0x071c
        L_0x07e0:
            r0 = move-exception
            r12 = r15
            r4 = r0
            r9 = r1
            r34 = r6
        L_0x07e6:
            r10 = r38
            r22 = 0
            goto L_0x0638
        L_0x07ec:
            r0 = move-exception
            r12 = r15
            goto L_0x0630
        L_0x07f0:
            r12 = r15
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0b4e }
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0b4e }
            java.lang.Long r6 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0b4e }
            r14 = 0
            r7[r14] = r6     // Catch:{ Exception -> 0x0b4e }
            java.lang.String r6 = java.lang.String.format(r11, r9, r7)     // Catch:{ Exception -> 0x0b4e }
            java.lang.Object[] r7 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0b4e }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0b4e }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0b4e }
            if (r6 == 0) goto L_0x0818
            int r6 = r5.intValue(r14)     // Catch:{ Exception -> 0x0812 }
            goto L_0x0819
        L_0x0812:
            r0 = move-exception
            r4 = r0
            r9 = r1
            r15 = r12
            goto L_0x0632
        L_0x0818:
            r6 = 0
        L_0x0819:
            r5.dispose()     // Catch:{ Exception -> 0x0b3b }
            r5 = 4
            if (r13 != r5) goto L_0x0931
            if (r48 == 0) goto L_0x0931
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0924 }
            java.lang.String r7 = "SELECT max(mid) FROM messages WHERE uid = %d AND date <= %d AND mid > 0"
            r9 = 2
            java.lang.Object[] r14 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0924 }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0924 }
            r15 = 0
            r14[r15] = r9     // Catch:{ Exception -> 0x0924 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r48)     // Catch:{ Exception -> 0x0924 }
            r22 = 1
            r14[r22] = r9     // Catch:{ Exception -> 0x0924 }
            java.lang.String r7 = java.lang.String.format(r11, r7, r14)     // Catch:{ Exception -> 0x0924 }
            java.lang.Object[] r9 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0924 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x0924 }
            boolean r7 = r5.next()     // Catch:{ Exception -> 0x0924 }
            if (r7 == 0) goto L_0x0853
            int r7 = r5.intValue(r15)     // Catch:{ Exception -> 0x084c }
            goto L_0x0854
        L_0x084c:
            r0 = move-exception
            r4 = r0
            r9 = r1
            r34 = r6
            r15 = r12
            goto L_0x07e6
        L_0x0853:
            r7 = -1
        L_0x0854:
            r5.dispose()     // Catch:{ Exception -> 0x0924 }
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0924 }
            java.lang.String r14 = "SELECT min(mid) FROM messages WHERE uid = %d AND date >= %d AND mid > 0"
            r15 = 2
            java.lang.Object[] r9 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0924 }
            java.lang.Long r15 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0924 }
            r39 = r1
            r1 = 0
            r9[r1] = r15     // Catch:{ Exception -> 0x0922 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r48)     // Catch:{ Exception -> 0x0922 }
            r22 = 1
            r9[r22] = r15     // Catch:{ Exception -> 0x0922 }
            java.lang.String r9 = java.lang.String.format(r11, r14, r9)     // Catch:{ Exception -> 0x0922 }
            java.lang.Object[] r14 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0922 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r9, r14)     // Catch:{ Exception -> 0x0922 }
            boolean r9 = r5.next()     // Catch:{ Exception -> 0x0922 }
            if (r9 == 0) goto L_0x088c
            int r9 = r5.intValue(r1)     // Catch:{ Exception -> 0x0884 }
            goto L_0x088d
        L_0x0884:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r34 = r6
            goto L_0x092e
        L_0x088c:
            r9 = -1
        L_0x088d:
            r5.dispose()     // Catch:{ Exception -> 0x0922 }
            r1 = -1
            if (r7 == r1) goto L_0x0933
            if (r9 == r1) goto L_0x0933
            if (r7 != r9) goto L_0x089e
            r1 = r47
            r49 = r6
            r9 = r7
            goto L_0x0939
        L_0x089e:
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0922 }
            java.lang.String r5 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r14 = 3
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0922 }
            java.lang.Long r14 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0922 }
            r22 = 0
            r15[r22] = r14     // Catch:{ Exception -> 0x0922 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0922 }
            r23 = 1
            r15[r23] = r14     // Catch:{ Exception -> 0x0922 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0922 }
            r27 = 2
            r15[r27] = r14     // Catch:{ Exception -> 0x0922 }
            java.lang.String r5 = java.lang.String.format(r11, r5, r15)     // Catch:{ Exception -> 0x0922 }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0922 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r15)     // Catch:{ Exception -> 0x0922 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0922 }
            if (r5 == 0) goto L_0x08cf
            r7 = -1
        L_0x08cf:
            r1.dispose()     // Catch:{ Exception -> 0x0922 }
            r1 = -1
            if (r7 == r1) goto L_0x0933
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0922 }
            java.lang.String r5 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r7 = 3
            java.lang.Object[] r14 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0922 }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0922 }
            r15 = 0
            r14[r15] = r7     // Catch:{ Exception -> 0x0922 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0922 }
            r15 = 1
            r14[r15] = r7     // Catch:{ Exception -> 0x0922 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0922 }
            r15 = 2
            r14[r15] = r7     // Catch:{ Exception -> 0x0922 }
            java.lang.String r5 = java.lang.String.format(r11, r5, r14)     // Catch:{ Exception -> 0x0922 }
            r7 = 0
            java.lang.Object[] r14 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0922 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r14)     // Catch:{ Exception -> 0x0922 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0922 }
            if (r5 == 0) goto L_0x0903
            r9 = -1
        L_0x0903:
            r1.dispose()     // Catch:{ Exception -> 0x0922 }
            r1 = -1
            if (r9 == r1) goto L_0x0933
            long r14 = (long) r9
            r16 = 0
            int r1 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x091c
            if (r10 == 0) goto L_0x091c
            r49 = r6
            long r5 = (long) r10
            r1 = 32
            long r5 = r5 << r1
            long r34 = r14 | r5
            r1 = r9
            goto L_0x0939
        L_0x091c:
            r49 = r6
            r1 = r9
            r34 = r14
            goto L_0x0939
        L_0x0922:
            r0 = move-exception
            goto L_0x0927
        L_0x0924:
            r0 = move-exception
            r39 = r1
        L_0x0927:
            r49 = r6
            r1 = r47
        L_0x092b:
            r34 = r49
            r4 = r0
        L_0x092e:
            r15 = r12
            goto L_0x0b46
        L_0x0931:
            r39 = r1
        L_0x0933:
            r49 = r6
            r9 = r46
            r1 = r47
        L_0x0939:
            if (r9 == 0) goto L_0x093d
            r5 = 1
            goto L_0x093e
        L_0x093d:
            r5 = 0
        L_0x093e:
            if (r5 == 0) goto L_0x0977
            org.telegram.SQLite.SQLiteDatabase r6 = r2.database     // Catch:{ Exception -> 0x0975 }
            java.lang.String r7 = "SELECT start FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r14 = 3
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0975 }
            java.lang.Long r14 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0975 }
            r22 = 0
            r15[r22] = r14     // Catch:{ Exception -> 0x0975 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0975 }
            r23 = 1
            r15[r23] = r14     // Catch:{ Exception -> 0x0975 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0975 }
            r27 = 2
            r15[r27] = r14     // Catch:{ Exception -> 0x0975 }
            java.lang.String r7 = java.lang.String.format(r11, r7, r15)     // Catch:{ Exception -> 0x0975 }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0975 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r15)     // Catch:{ Exception -> 0x0975 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0975 }
            if (r7 == 0) goto L_0x0971
            r5 = 0
        L_0x0971:
            r6.dispose()     // Catch:{ Exception -> 0x0975 }
            goto L_0x0977
        L_0x0975:
            r0 = move-exception
            goto L_0x092b
        L_0x0977:
            r6 = 0
            if (r5 == 0) goto L_0x0aa7
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0aa2 }
            java.lang.String r6 = "SELECT start FROM messages_holes WHERE uid = %d AND start >= %d ORDER BY start ASC LIMIT 1"
            r7 = 2
            java.lang.Object[] r14 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0aa2 }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0aa2 }
            r15 = 0
            r14[r15] = r7     // Catch:{ Exception -> 0x0aa2 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0aa2 }
            r22 = 1
            r14[r22] = r7     // Catch:{ Exception -> 0x0aa2 }
            java.lang.String r6 = java.lang.String.format(r11, r6, r14)     // Catch:{ Exception -> 0x0aa2 }
            java.lang.Object[] r7 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0aa2 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0aa2 }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0aa2 }
            if (r6 == 0) goto L_0x09ae
            int r6 = r5.intValue(r15)     // Catch:{ Exception -> 0x0975 }
            long r6 = (long) r6
            if (r10 == 0) goto L_0x09b0
            long r14 = (long) r10
            r18 = 32
            long r14 = r14 << r18
            long r6 = r6 | r14
            goto L_0x09b0
        L_0x09ae:
            r6 = 0
        L_0x09b0:
            r5.dispose()     // Catch:{ Exception -> 0x0aa2 }
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0aa2 }
            r14 = 2
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0aa2 }
            java.lang.Long r14 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0aa2 }
            r46 = r1
            r1 = 0
            r15[r1] = r14     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0ad1 }
            r22 = 1
            r15[r22] = r14     // Catch:{ Exception -> 0x0ad1 }
            java.lang.String r8 = java.lang.String.format(r11, r8, r15)     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Object[] r14 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0ad1 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r8, r14)     // Catch:{ Exception -> 0x0ad1 }
            boolean r8 = r5.next()     // Catch:{ Exception -> 0x0ad1 }
            if (r8 == 0) goto L_0x09e8
            int r8 = r5.intValue(r1)     // Catch:{ Exception -> 0x0ad1 }
            long r14 = (long) r8     // Catch:{ Exception -> 0x0ad1 }
            r47 = r9
            if (r10 == 0) goto L_0x09ec
            long r8 = (long) r10     // Catch:{ Exception -> 0x0ad1 }
            r1 = 32
            long r8 = r8 << r1
            long r14 = r14 | r8
            goto L_0x09ec
        L_0x09e8:
            r47 = r9
            r14 = 1
        L_0x09ec:
            r5.dispose()     // Catch:{ Exception -> 0x0ad1 }
            r8 = 0
            int r1 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1))
            if (r1 != 0) goto L_0x0a3d
            r8 = 1
            int r1 = (r14 > r8 ? 1 : (r14 == r8 ? 0 : -1))
            if (r1 == 0) goto L_0x09fc
            goto L_0x0a3d
        L_0x09fc:
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0ad1 }
            java.lang.String r5 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r6 = 6
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r6 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0ad1 }
            r8 = 0
            r7[r8] = r6     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r6 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x0ad1 }
            r8 = 1
            r7[r8] = r6     // Catch:{ Exception -> 0x0ad1 }
            int r6 = r3 / 2
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0ad1 }
            r8 = 2
            r7[r8] = r6     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r6 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0ad1 }
            r8 = 3
            r7[r8] = r6     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r6 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x0ad1 }
            r8 = 4
            r7[r8] = r6     // Catch:{ Exception -> 0x0ad1 }
            int r6 = r3 / 2
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0ad1 }
            r8 = 5
            r7[r8] = r6     // Catch:{ Exception -> 0x0ad1 }
            java.lang.String r5 = java.lang.String.format(r11, r5, r7)     // Catch:{ Exception -> 0x0ad1 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0ad1 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0ad1 }
            goto L_0x0a9c
        L_0x0a3d:
            r8 = 0
            int r1 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1))
            if (r1 != 0) goto L_0x0a4d
            r6 = 1000000000(0x3b9aca00, double:4.94065646E-315)
            if (r10 == 0) goto L_0x0a4d
            long r8 = (long) r10     // Catch:{ Exception -> 0x0ad1 }
            r1 = 32
            long r8 = r8 << r1
            long r6 = r6 | r8
        L_0x0a4d:
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0ad1 }
            java.lang.String r5 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d AND (m.mid <= %d OR m.mid < 0) ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r8 = 8
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0ad1 }
            r10 = 0
            r9[r10] = r8     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r8 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x0ad1 }
            r10 = 1
            r9[r10] = r8     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r8 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0ad1 }
            r10 = 2
            r9[r10] = r8     // Catch:{ Exception -> 0x0ad1 }
            int r8 = r3 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0ad1 }
            r10 = 3
            r9[r10] = r8     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0ad1 }
            r10 = 4
            r9[r10] = r8     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r8 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x0ad1 }
            r10 = 5
            r9[r10] = r8     // Catch:{ Exception -> 0x0ad1 }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x0ad1 }
            r7 = 6
            r9[r7] = r6     // Catch:{ Exception -> 0x0ad1 }
            int r6 = r3 / 2
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0ad1 }
            r7 = 7
            r9[r7] = r6     // Catch:{ Exception -> 0x0ad1 }
            java.lang.String r5 = java.lang.String.format(r11, r5, r9)     // Catch:{ Exception -> 0x0ad1 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0ad1 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0ad1 }
        L_0x0a9c:
            r5 = r1
            r15 = r12
            r1 = 0
            r7 = 6
            goto L_0x0b2e
        L_0x0aa2:
            r0 = move-exception
            r46 = r1
            goto L_0x092b
        L_0x0aa7:
            r46 = r1
            r47 = r9
            r1 = 2
            if (r13 != r1) goto L_0x0b2a
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0b25 }
            java.lang.String r5 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid != 0 AND out = 0 AND read_state IN(0,2)"
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0b25 }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0b25 }
            r9 = 0
            r8[r9] = r7     // Catch:{ Exception -> 0x0b25 }
            java.lang.String r5 = java.lang.String.format(r11, r5, r8)     // Catch:{ Exception -> 0x0b25 }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0b25 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0b25 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0b25 }
            if (r5 == 0) goto L_0x0ad6
            int r5 = r1.intValue(r9)     // Catch:{ Exception -> 0x0ad1 }
            goto L_0x0ad7
        L_0x0ad1:
            r0 = move-exception
            r1 = r46
            goto L_0x092b
        L_0x0ad6:
            r5 = 0
        L_0x0ad7:
            r1.dispose()     // Catch:{ Exception -> 0x0b25 }
            r15 = r12
            if (r5 != r15) goto L_0x0b21
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0b1f }
            java.lang.String r5 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r7 = 6
            java.lang.Object[] r6 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0b1f }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0b1f }
            r9 = 0
            r6[r9] = r8     // Catch:{ Exception -> 0x0b1f }
            java.lang.Long r8 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x0b1f }
            r9 = 1
            r6[r9] = r8     // Catch:{ Exception -> 0x0b1f }
            int r8 = r3 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0b1f }
            r9 = 2
            r6[r9] = r8     // Catch:{ Exception -> 0x0b1f }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0b1f }
            r9 = 3
            r6[r9] = r8     // Catch:{ Exception -> 0x0b1f }
            java.lang.Long r8 = java.lang.Long.valueOf(r34)     // Catch:{ Exception -> 0x0b1f }
            r9 = 4
            r6[r9] = r8     // Catch:{ Exception -> 0x0b1f }
            int r8 = r3 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0b1f }
            r9 = 5
            r6[r9] = r8     // Catch:{ Exception -> 0x0b1f }
            java.lang.String r5 = java.lang.String.format(r11, r5, r6)     // Catch:{ Exception -> 0x0b1f }
            r6 = 0
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0b1f }
            org.telegram.SQLite.SQLiteCursor r6 = r1.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x0b1f }
            r1 = 1
            goto L_0x0b23
        L_0x0b1f:
            r0 = move-exception
            goto L_0x0b27
        L_0x0b21:
            r7 = 6
            r1 = 0
        L_0x0b23:
            r5 = r6
            goto L_0x0b2e
        L_0x0b25:
            r0 = move-exception
            r15 = r12
        L_0x0b27:
            r1 = r46
            goto L_0x0b43
        L_0x0b2a:
            r15 = r12
            r7 = 6
            r5 = r6
            r1 = 0
        L_0x0b2e:
            r10 = r49
            r7 = r1
            r6 = r5
            r9 = r15
            r8 = r32
            r5 = r46
            r1 = r47
            goto L_0x0ea8
        L_0x0b3b:
            r0 = move-exception
            r39 = r1
            r49 = r6
            r15 = r12
            r1 = r47
        L_0x0b43:
            r34 = r49
            r4 = r0
        L_0x0b46:
            r10 = r38
            r9 = r39
            r22 = 0
            goto L_0x1414
        L_0x0b4e:
            r0 = move-exception
            r39 = r1
            r15 = r12
            goto L_0x0b56
        L_0x0b53:
            r0 = move-exception
            r39 = r1
        L_0x0b56:
            r1 = r47
            r4 = r0
            r10 = r38
            r9 = r39
            goto L_0x0b65
        L_0x0b5e:
            r0 = move-exception
        L_0x0b5f:
            r1 = r47
            r4 = r0
        L_0x0b62:
            r10 = r38
            r9 = 0
        L_0x0b65:
            r22 = 0
            r34 = 0
            goto L_0x1414
        L_0x0b6b:
            r2 = r41
            r13 = r51
            r31 = r1
            r38 = r3
            r30 = r7
            r29 = r8
            r37 = r9
            r33 = r11
            r11 = r12
            r7 = 6
            r3 = r46
            java.lang.String r1 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid <= %d AND out = 0 AND read_state IN(0,2)"
            java.lang.String r5 = "SELECT max(mid), max(date) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid < 0"
            java.lang.String r6 = "SELECT min(mid) FROM messages WHERE uid = %d AND mid < 0"
            r8 = 3
            if (r13 != r8) goto L_0x0CLASSNAME
            if (r49 != 0) goto L_0x0CLASSNAME
            org.telegram.SQLite.SQLiteDatabase r8 = r2.database     // Catch:{ Exception -> 0x0c3d }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0c3d }
            r10 = 1
            java.lang.Object[] r12 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0c3d }
            java.lang.Long r10 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0c3d }
            r14 = 0
            r12[r14] = r10     // Catch:{ Exception -> 0x0c3d }
            java.lang.String r10 = java.lang.String.format(r9, r6, r12)     // Catch:{ Exception -> 0x0c3d }
            java.lang.Object[] r12 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0c3d }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r10, r12)     // Catch:{ Exception -> 0x0c3d }
            boolean r10 = r8.next()     // Catch:{ Exception -> 0x0c3d }
            if (r10 == 0) goto L_0x0bad
            int r10 = r8.intValue(r14)     // Catch:{ Exception -> 0x0c3d }
            goto L_0x0bae
        L_0x0bad:
            r10 = 0
        L_0x0bae:
            r8.dispose()     // Catch:{ Exception -> 0x0c2f }
            org.telegram.SQLite.SQLiteDatabase r8 = r2.database     // Catch:{ Exception -> 0x0c2f }
            r12 = 1
            java.lang.Object[] r14 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0c2f }
            java.lang.Long r12 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0c2f }
            r15 = 0
            r14[r15] = r12     // Catch:{ Exception -> 0x0c2f }
            java.lang.String r12 = java.lang.String.format(r9, r5, r14)     // Catch:{ Exception -> 0x0c2f }
            java.lang.Object[] r14 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0c2f }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x0c2f }
            boolean r12 = r8.next()     // Catch:{ Exception -> 0x0c2f }
            if (r12 == 0) goto L_0x0bd7
            int r12 = r8.intValue(r15)     // Catch:{ Exception -> 0x0c2f }
            r14 = 1
            int r15 = r8.intValue(r14)     // Catch:{ Exception -> 0x0c2f }
            goto L_0x0bd9
        L_0x0bd7:
            r12 = 0
            r15 = 0
        L_0x0bd9:
            r8.dispose()     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r12 == 0) goto L_0x0c1d
            org.telegram.SQLite.SQLiteDatabase r8 = r2.database     // Catch:{ Exception -> 0x0CLASSNAME }
            r10 = 2
            java.lang.Object[] r14 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0CLASSNAME }
            java.lang.Long r10 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0CLASSNAME }
            r7 = 0
            r14[r7] = r10     // Catch:{ Exception -> 0x0CLASSNAME }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0CLASSNAME }
            r22 = 1
            r14[r22] = r10     // Catch:{ Exception -> 0x0CLASSNAME }
            java.lang.String r9 = java.lang.String.format(r9, r1, r14)     // Catch:{ Exception -> 0x0CLASSNAME }
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0CLASSNAME }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r9, r10)     // Catch:{ Exception -> 0x0CLASSNAME }
            boolean r9 = r8.next()     // Catch:{ Exception -> 0x0CLASSNAME }
            if (r9 == 0) goto L_0x0CLASSNAME
            int r9 = r8.intValue(r7)     // Catch:{ Exception -> 0x0CLASSNAME }
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r9 = 0
        L_0x0CLASSNAME:
            r8.dispose()     // Catch:{ Exception -> 0x0c0e }
            r14 = r12
            r7 = 3
            goto L_0x0c4a
        L_0x0c0e:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r24 = r12
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r24 = r12
            goto L_0x0CLASSNAME
        L_0x0c1d:
            r14 = r10
            r7 = 3
            r9 = 0
            goto L_0x0c4a
        L_0x0CLASSNAME:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r24 = r10
        L_0x0CLASSNAME:
            r25 = r15
            r10 = r38
            r9 = 1
            r15 = 0
            goto L_0x13fc
        L_0x0c2f:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r24 = r10
            r10 = r38
            r9 = 1
            r15 = 0
            r22 = 0
            goto L_0x140c
        L_0x0c3d:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r10 = r38
            r9 = 1
            goto L_0x1407
        L_0x0CLASSNAME:
            r7 = 3
            r9 = 0
            r14 = 0
            r15 = 0
        L_0x0c4a:
            if (r13 == r7) goto L_0x0e2d
            r8 = 4
            if (r13 != r8) goto L_0x0CLASSNAME
            goto L_0x0e2d
        L_0x0CLASSNAME:
            r8 = 1
            if (r13 != r8) goto L_0x0ca3
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0c8d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0c8d }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d"
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0c8d }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0c8d }
            r10 = 0
            r8[r10] = r7     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r47)     // Catch:{ Exception -> 0x0c8d }
            r10 = 1
            r8[r10] = r7     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r46)     // Catch:{ Exception -> 0x0c8d }
            r10 = 2
            r8[r10] = r7     // Catch:{ Exception -> 0x0c8d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r8)     // Catch:{ Exception -> 0x0c8d }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0c8d }
            org.telegram.SQLite.SQLiteCursor r5 = r1.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0c8d }
        L_0x0c7c:
            r1 = r47
            r6 = r5
            r24 = r14
            r25 = r15
            r7 = 0
            r8 = 0
            r10 = 0
            r36 = 0
            r39 = 1
        L_0x0c8a:
            r5 = r1
            goto L_0x0ea8
        L_0x0c8d:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r24 = r14
        L_0x0CLASSNAME:
            r25 = r15
            r10 = r38
            r22 = 0
            r32 = 0
            r34 = 0
        L_0x0c9d:
            r36 = 0
        L_0x0c9f:
            r15 = r9
            r9 = 1
            goto L_0x1414
        L_0x0ca3:
            if (r49 == 0) goto L_0x0d03
            r7 = 6
            if (r47 == 0) goto L_0x0cd2
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0c8d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0c8d }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d"
            r8 = 3
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0c8d }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0c8d }
            r11 = 0
            r10[r11] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r47)     // Catch:{ Exception -> 0x0c8d }
            r11 = 1
            r10[r11] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r46)     // Catch:{ Exception -> 0x0c8d }
            r11 = 2
            r10[r11] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r10)     // Catch:{ Exception -> 0x0c8d }
            r6 = 0
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0c8d }
            org.telegram.SQLite.SQLiteCursor r5 = r1.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x0c8d }
            goto L_0x0c7c
        L_0x0cd2:
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x0c8d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0c8d }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.mid ASC LIMIT %d,%d"
            r8 = 4
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0c8d }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0c8d }
            r11 = 0
            r10[r11] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r49)     // Catch:{ Exception -> 0x0c8d }
            r12 = 1
            r10[r12] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0c8d }
            r12 = 2
            r10[r12] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r46)     // Catch:{ Exception -> 0x0c8d }
            r12 = 3
            r10[r12] = r8     // Catch:{ Exception -> 0x0c8d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r10)     // Catch:{ Exception -> 0x0c8d }
            java.lang.Object[] r6 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0c8d }
            org.telegram.SQLite.SQLiteCursor r5 = r1.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x0c8d }
            goto L_0x0c7c
        L_0x0d03:
            r7 = 6
            r8 = 2
            if (r13 != r8) goto L_0x0dae
            org.telegram.SQLite.SQLiteDatabase r8 = r2.database     // Catch:{ Exception -> 0x0d9e }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0d9e }
            r12 = 1
            java.lang.Object[] r7 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0d9e }
            java.lang.Long r12 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0d9e }
            r32 = r9
            r9 = 0
            r7[r9] = r12     // Catch:{ Exception -> 0x0d9c }
            java.lang.String r6 = java.lang.String.format(r10, r6, r7)     // Catch:{ Exception -> 0x0d9c }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0d9c }
            org.telegram.SQLite.SQLiteCursor r6 = r8.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0d9c }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0d9c }
            if (r7 == 0) goto L_0x0d2c
            int r7 = r6.intValue(r9)     // Catch:{ Exception -> 0x0d9c }
            goto L_0x0d2d
        L_0x0d2c:
            r7 = 0
        L_0x0d2d:
            r6.dispose()     // Catch:{ Exception -> 0x0d8c }
            org.telegram.SQLite.SQLiteDatabase r6 = r2.database     // Catch:{ Exception -> 0x0d8c }
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0d8c }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0d8c }
            r12 = 0
            r9[r12] = r8     // Catch:{ Exception -> 0x0d8c }
            java.lang.String r5 = java.lang.String.format(r10, r5, r9)     // Catch:{ Exception -> 0x0d8c }
            java.lang.Object[] r8 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0d8c }
            org.telegram.SQLite.SQLiteCursor r5 = r6.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x0d8c }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0d8c }
            if (r6 == 0) goto L_0x0d55
            int r14 = r5.intValue(r12)     // Catch:{ Exception -> 0x0d8c }
            r6 = 1
            int r15 = r5.intValue(r6)     // Catch:{ Exception -> 0x0d8c }
        L_0x0d55:
            r5.dispose()     // Catch:{ Exception -> 0x0d8c }
            if (r14 == 0) goto L_0x0d89
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0d8c }
            r6 = 2
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0d8c }
            java.lang.Long r6 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0d8c }
            r9 = 0
            r8[r9] = r6     // Catch:{ Exception -> 0x0d8c }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x0d8c }
            r12 = 1
            r8[r12] = r6     // Catch:{ Exception -> 0x0d8c }
            java.lang.String r1 = java.lang.String.format(r10, r1, r8)     // Catch:{ Exception -> 0x0d8c }
            java.lang.Object[] r6 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0d8c }
            org.telegram.SQLite.SQLiteCursor r1 = r5.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x0d8c }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0d8c }
            if (r5 == 0) goto L_0x0d83
            int r5 = r1.intValue(r9)     // Catch:{ Exception -> 0x0d8c }
            r9 = r5
            goto L_0x0d85
        L_0x0d83:
            r9 = r32
        L_0x0d85:
            r1.dispose()     // Catch:{ Exception -> 0x0e1b }
            goto L_0x0db1
        L_0x0d89:
            r9 = r32
            goto L_0x0db1
        L_0x0d8c:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r34 = r7
            r24 = r14
            r25 = r15
            r15 = r32
            r10 = r38
            goto L_0x13e8
        L_0x0d9c:
            r0 = move-exception
            goto L_0x0da1
        L_0x0d9e:
            r0 = move-exception
            r32 = r9
        L_0x0da1:
            r1 = r47
            r4 = r0
            r24 = r14
            r25 = r15
            r15 = r32
            r10 = r38
            goto L_0x13fb
        L_0x0dae:
            r32 = r9
            r7 = 0
        L_0x0db1:
            if (r3 > r9) goto L_0x0dc0
            if (r9 >= r11) goto L_0x0db6
            goto L_0x0dc0
        L_0x0db6:
            int r1 = r9 - r3
            int r3 = r3 + 10
            r40 = r3
            r3 = r1
            r1 = r40
            goto L_0x0dcc
        L_0x0dc0:
            int r1 = r9 + 10
            int r1 = java.lang.Math.max(r3, r1)     // Catch:{ Exception -> 0x0e1b }
            r3 = 0
            if (r9 >= r11) goto L_0x0dcc
            r7 = 0
            r9 = 0
            r14 = 0
        L_0x0dcc:
            org.telegram.SQLite.SQLiteDatabase r5 = r2.database     // Catch:{ Exception -> 0x0e06 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0e06 }
            java.lang.String r8 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.mid ASC LIMIT %d,%d"
            r10 = 3
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0e06 }
            java.lang.Long r10 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x0e06 }
            r12 = 0
            r11[r12] = r10     // Catch:{ Exception -> 0x0e06 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0e06 }
            r10 = 1
            r11[r10] = r3     // Catch:{ Exception -> 0x0e06 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0e06 }
            r10 = 2
            r11[r10] = r3     // Catch:{ Exception -> 0x0e06 }
            java.lang.String r3 = java.lang.String.format(r6, r8, r11)     // Catch:{ Exception -> 0x0e06 }
            r6 = 0
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0e06 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x0e06 }
            r3 = r1
            r6 = r5
            r10 = r7
            r24 = r14
            r25 = r15
            r7 = 0
            r8 = 0
            r36 = 0
            r39 = 1
            r1 = r47
            goto L_0x0c8a
        L_0x0e06:
            r0 = move-exception
            r4 = r0
            r3 = r1
            r34 = r7
            r24 = r14
            r25 = r15
            r10 = r38
            r22 = 0
            r32 = 0
            r36 = 0
            r1 = r47
            goto L_0x0c9f
        L_0x0e1b:
            r0 = move-exception
            r1 = r47
            r4 = r0
            r34 = r7
            r24 = r14
            r25 = r15
            r10 = r38
            r22 = 0
            r32 = 0
            goto L_0x0c9d
        L_0x0e2d:
            r32 = r9
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x13ee }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x13ee }
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x13ee }
            java.lang.Long r7 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x13ee }
            r9 = 0
            r8[r9] = r7     // Catch:{ Exception -> 0x13ee }
            java.lang.String r6 = java.lang.String.format(r5, r6, r8)     // Catch:{ Exception -> 0x13ee }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x13ee }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x13ee }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x13ee }
            if (r6 == 0) goto L_0x0e52
            int r6 = r1.intValue(r9)     // Catch:{ Exception -> 0x0d9c }
            goto L_0x0e53
        L_0x0e52:
            r6 = 0
        L_0x0e53:
            r1.dispose()     // Catch:{ Exception -> 0x13d9 }
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x13d9 }
            java.lang.String r7 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d)"
            r8 = 6
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x13d9 }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x13d9 }
            r10 = 0
            r9[r10] = r8     // Catch:{ Exception -> 0x13d9 }
            java.lang.Long r8 = java.lang.Long.valueOf(r24)     // Catch:{ Exception -> 0x13d9 }
            r10 = 1
            r9[r10] = r8     // Catch:{ Exception -> 0x13d9 }
            int r8 = r3 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x13d9 }
            r10 = 2
            r9[r10] = r8     // Catch:{ Exception -> 0x13d9 }
            java.lang.Long r8 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x13d9 }
            r10 = 3
            r9[r10] = r8     // Catch:{ Exception -> 0x13d9 }
            java.lang.Long r8 = java.lang.Long.valueOf(r24)     // Catch:{ Exception -> 0x13d9 }
            r10 = 4
            r9[r10] = r8     // Catch:{ Exception -> 0x13d9 }
            int r8 = r3 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x13d9 }
            r10 = 5
            r9[r10] = r8     // Catch:{ Exception -> 0x13d9 }
            java.lang.String r5 = java.lang.String.format(r5, r7, r9)     // Catch:{ Exception -> 0x13d9 }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x13d9 }
            org.telegram.SQLite.SQLiteCursor r5 = r1.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x13d9 }
            r1 = r47
            r10 = r6
            r24 = r14
            r25 = r15
            r9 = r32
            r7 = 0
            r8 = 0
            r36 = 0
            r39 = 1
            r6 = r5
            goto L_0x0c8a
        L_0x0ea8:
            r11 = 2147483647(0x7fffffff, float:NaN)
            r12 = -2147483648(0xfffffffvar_, float:-0.0)
            if (r6 == 0) goto L_0x1194
            r14 = 0
        L_0x0eb0:
            boolean r15 = r6.next()     // Catch:{ Exception -> 0x1178 }
            if (r15 == 0) goto L_0x115a
            int r14 = r14 + 1
            if (r56 != 0) goto L_0x0ebb
            goto L_0x0eb0
        L_0x0ebb:
            r46 = r3
            r15 = 1
            org.telegram.tgnet.NativeByteBuffer r3 = r6.byteBufferValue(r15)     // Catch:{ Exception -> 0x114c }
            if (r3 == 0) goto L_0x111d
            r47 = r5
            r15 = 0
            int r5 = r3.readInt32(r15)     // Catch:{ Exception -> 0x111b }
            org.telegram.tgnet.TLRPC$Message r5 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r3, r5, r15)     // Catch:{ Exception -> 0x111b }
            r49 = r9
            r15 = 2
            int r9 = r6.intValue(r15)     // Catch:{ Exception -> 0x1117 }
            r5.send_state = r9     // Catch:{ Exception -> 0x1117 }
            r9 = 3
            int r15 = r6.intValue(r9)     // Catch:{ Exception -> 0x1117 }
            r5.id = r15     // Catch:{ Exception -> 0x1117 }
            if (r15 <= 0) goto L_0x0eff
            int r15 = r5.send_state     // Catch:{ Exception -> 0x0eeb }
            if (r15 == 0) goto L_0x0eff
            if (r15 == r9) goto L_0x0eff
            r9 = 0
            r5.send_state = r9     // Catch:{ Exception -> 0x0eeb }
            goto L_0x0eff
        L_0x0eeb:
            r0 = move-exception
            r3 = r46
            r1 = r47
            r15 = r49
            r4 = r0
            r32 = r8
            r34 = r10
            r22 = r14
            r10 = r38
            r9 = r39
            goto L_0x1414
        L_0x0eff:
            r15 = r10
            long r9 = (long) r4
            r32 = r14
            r34 = r15
            r14 = r42
            int r35 = (r14 > r9 ? 1 : (r14 == r9 ? 0 : -1))
            if (r35 != 0) goto L_0x0var_
            r9 = 1
            r5.out = r9     // Catch:{ Exception -> 0x0f0f }
            goto L_0x0var_
        L_0x0f0f:
            r0 = move-exception
            r3 = r46
            r1 = r47
            r15 = r49
            r4 = r0
            r22 = r32
            r10 = r38
        L_0x0f1b:
            r9 = r39
            r32 = r8
            goto L_0x1414
        L_0x0var_:
            r5.readAttachPath(r3, r4)     // Catch:{ Exception -> 0x1113 }
            r3.reuse()     // Catch:{ Exception -> 0x1113 }
            r3 = 0
            int r9 = r6.intValue(r3)     // Catch:{ Exception -> 0x1113 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r5, r9)     // Catch:{ Exception -> 0x1113 }
            int r3 = r5.id     // Catch:{ Exception -> 0x1113 }
            if (r3 <= 0) goto L_0x0f3d
            int r11 = java.lang.Math.min(r3, r11)     // Catch:{ Exception -> 0x0f0f }
            int r3 = r5.id     // Catch:{ Exception -> 0x0f0f }
            int r12 = java.lang.Math.max(r3, r12)     // Catch:{ Exception -> 0x0f0f }
        L_0x0f3d:
            r3 = 4
            int r9 = r6.intValue(r3)     // Catch:{ Exception -> 0x1113 }
            r5.date = r9     // Catch:{ Exception -> 0x1113 }
            r5.dialog_id = r14     // Catch:{ Exception -> 0x1113 }
            int r3 = r5.flags     // Catch:{ Exception -> 0x1113 }
            r3 = r3 & 1024(0x400, float:1.435E-42)
            if (r3 == 0) goto L_0x0f5c
            r3 = 7
            int r9 = r6.intValue(r3)     // Catch:{ Exception -> 0x0f0f }
            r5.views = r9     // Catch:{ Exception -> 0x0f0f }
            r9 = 11
            int r9 = r6.intValue(r9)     // Catch:{ Exception -> 0x0f0f }
            r5.forwards = r9     // Catch:{ Exception -> 0x0f0f }
            goto L_0x0f5d
        L_0x0f5c:
            r3 = 7
        L_0x0f5d:
            r9 = 12
            org.telegram.tgnet.NativeByteBuffer r9 = r6.byteBufferValue(r9)     // Catch:{ Exception -> 0x1113 }
            if (r9 == 0) goto L_0x0var_
            r10 = 0
            int r3 = r9.readInt32(r10)     // Catch:{ Exception -> 0x0f0f }
            org.telegram.tgnet.TLRPC$TL_messageReplies r3 = org.telegram.tgnet.TLRPC$TL_messageReplies.TLdeserialize(r9, r3, r10)     // Catch:{ Exception -> 0x0f0f }
            if (r3 == 0) goto L_0x0var_
            r5.replies = r3     // Catch:{ Exception -> 0x0f0f }
        L_0x0var_:
            r9.reuse()     // Catch:{ Exception -> 0x0f0f }
        L_0x0var_:
            if (r31 == 0) goto L_0x0var_
            int r3 = r5.ttl     // Catch:{ Exception -> 0x0f0f }
            if (r3 != 0) goto L_0x0var_
            r3 = 8
            int r9 = r6.intValue(r3)     // Catch:{ Exception -> 0x0f0f }
            r5.ttl = r9     // Catch:{ Exception -> 0x0f0f }
            goto L_0x0var_
        L_0x0var_:
            r3 = 8
        L_0x0var_:
            r9 = 9
            int r9 = r6.intValue(r9)     // Catch:{ Exception -> 0x1113 }
            if (r9 == 0) goto L_0x0var_
            r9 = 1
            r5.mentioned = r9     // Catch:{ Exception -> 0x0f0f }
        L_0x0var_:
            r9 = 10
            int r10 = r6.intValue(r9)     // Catch:{ Exception -> 0x1113 }
            r19 = r10 & 1
            if (r19 == 0) goto L_0x0f9f
            r3 = 0
            r5.stickerVerified = r3     // Catch:{ Exception -> 0x0f0f }
            goto L_0x0fa6
        L_0x0f9f:
            r3 = r10 & 2
            if (r3 == 0) goto L_0x0fa6
            r3 = 2
            r5.stickerVerified = r3     // Catch:{ Exception -> 0x0f0f }
        L_0x0fa6:
            r10 = r38
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r10.messages     // Catch:{ Exception -> 0x110e }
            r3.add(r5)     // Catch:{ Exception -> 0x110e }
            r3 = r28
            r9 = r37
            addUsersAndChatsFromMessage(r5, r3, r9)     // Catch:{ Exception -> 0x110e }
            r28 = r11
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r11 = r5.reply_to     // Catch:{ Exception -> 0x110e }
            if (r11 == 0) goto L_0x109f
            r35 = r12
            int r12 = r11.reply_to_msg_id     // Catch:{ Exception -> 0x110e }
            if (r12 != 0) goto L_0x0fd9
            long r11 = r11.reply_to_random_id     // Catch:{ Exception -> 0x0fcd }
            r16 = 0
            int r37 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r37 == 0) goto L_0x0fc9
            goto L_0x0fd9
        L_0x0fc9:
            r37 = r9
            goto L_0x10a3
        L_0x0fcd:
            r0 = move-exception
            r3 = r46
            r1 = r47
            r15 = r49
            r4 = r0
            r22 = r32
            goto L_0x0f1b
        L_0x0fd9:
            r11 = 6
            boolean r12 = r6.isNull(r11)     // Catch:{ Exception -> 0x110e }
            if (r12 != 0) goto L_0x0ffe
            org.telegram.tgnet.NativeByteBuffer r12 = r6.byteBufferValue(r11)     // Catch:{ Exception -> 0x0fcd }
            if (r12 == 0) goto L_0x0ffe
            r11 = 0
            int r14 = r12.readInt32(r11)     // Catch:{ Exception -> 0x0fcd }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r12, r14, r11)     // Catch:{ Exception -> 0x0fcd }
            r5.replyMessage = r14     // Catch:{ Exception -> 0x0fcd }
            r14.readAttachPath(r12, r4)     // Catch:{ Exception -> 0x0fcd }
            r12.reuse()     // Catch:{ Exception -> 0x0fcd }
            org.telegram.tgnet.TLRPC$Message r11 = r5.replyMessage     // Catch:{ Exception -> 0x0fcd }
            if (r11 == 0) goto L_0x0ffe
            addUsersAndChatsFromMessage(r11, r3, r9)     // Catch:{ Exception -> 0x0fcd }
        L_0x0ffe:
            org.telegram.tgnet.TLRPC$Message r11 = r5.replyMessage     // Catch:{ Exception -> 0x110e }
            if (r11 != 0) goto L_0x0fc9
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r11 = r5.reply_to     // Catch:{ Exception -> 0x110e }
            int r12 = r11.reply_to_msg_id     // Catch:{ Exception -> 0x110e }
            if (r12 == 0) goto L_0x105d
            long r14 = (long) r12
            org.telegram.tgnet.TLRPC$Peer r11 = r11.reply_to_peer_id     // Catch:{ Exception -> 0x0fcd }
            if (r11 == 0) goto L_0x101a
            int r11 = r11.channel_id     // Catch:{ Exception -> 0x0fcd }
            if (r11 == 0) goto L_0x1017
            long r11 = (long) r11     // Catch:{ Exception -> 0x0fcd }
            r18 = 32
            long r11 = r11 << r18
            long r14 = r14 | r11
        L_0x1017:
            r18 = 32
            goto L_0x1026
        L_0x101a:
            org.telegram.tgnet.TLRPC$Peer r11 = r5.peer_id     // Catch:{ Exception -> 0x0fcd }
            int r11 = r11.channel_id     // Catch:{ Exception -> 0x0fcd }
            if (r11 == 0) goto L_0x1017
            long r11 = (long) r11     // Catch:{ Exception -> 0x0fcd }
            r18 = 32
            long r11 = r11 << r18
            long r14 = r14 | r11
        L_0x1026:
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0fcd }
            r12 = r33
            boolean r11 = r12.contains(r11)     // Catch:{ Exception -> 0x0fcd }
            if (r11 != 0) goto L_0x1039
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0fcd }
            r12.add(r11)     // Catch:{ Exception -> 0x0fcd }
        L_0x1039:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r11 = r5.reply_to     // Catch:{ Exception -> 0x0fcd }
            int r11 = r11.reply_to_msg_id     // Catch:{ Exception -> 0x0fcd }
            r14 = r30
            java.lang.Object r11 = r14.get(r11)     // Catch:{ Exception -> 0x0fcd }
            java.util.ArrayList r11 = (java.util.ArrayList) r11     // Catch:{ Exception -> 0x0fcd }
            if (r11 != 0) goto L_0x1053
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x0fcd }
            r11.<init>()     // Catch:{ Exception -> 0x0fcd }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r15 = r5.reply_to     // Catch:{ Exception -> 0x0fcd }
            int r15 = r15.reply_to_msg_id     // Catch:{ Exception -> 0x0fcd }
            r14.put(r15, r11)     // Catch:{ Exception -> 0x0fcd }
        L_0x1053:
            r11.add(r5)     // Catch:{ Exception -> 0x0fcd }
            r37 = r9
            r30 = r14
            r11 = r29
            goto L_0x10a9
        L_0x105d:
            r12 = r33
            r18 = 32
            long r14 = r11.reply_to_random_id     // Catch:{ Exception -> 0x110e }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x110e }
            boolean r11 = r12.contains(r11)     // Catch:{ Exception -> 0x110e }
            if (r11 != 0) goto L_0x1078
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r11 = r5.reply_to     // Catch:{ Exception -> 0x0fcd }
            long r14 = r11.reply_to_random_id     // Catch:{ Exception -> 0x0fcd }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0fcd }
            r12.add(r11)     // Catch:{ Exception -> 0x0fcd }
        L_0x1078:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r11 = r5.reply_to     // Catch:{ Exception -> 0x110e }
            long r14 = r11.reply_to_random_id     // Catch:{ Exception -> 0x110e }
            r11 = r29
            java.lang.Object r14 = r11.get(r14)     // Catch:{ Exception -> 0x110e }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x110e }
            if (r14 != 0) goto L_0x1097
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x110e }
            r14.<init>()     // Catch:{ Exception -> 0x110e }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r15 = r5.reply_to     // Catch:{ Exception -> 0x110e }
            r29 = r8
            r37 = r9
            long r8 = r15.reply_to_random_id     // Catch:{ Exception -> 0x1174 }
            r11.put(r8, r14)     // Catch:{ Exception -> 0x1174 }
            goto L_0x109b
        L_0x1097:
            r29 = r8
            r37 = r9
        L_0x109b:
            r14.add(r5)     // Catch:{ Exception -> 0x1174 }
            goto L_0x10ab
        L_0x109f:
            r37 = r9
            r35 = r12
        L_0x10a3:
            r11 = r29
            r12 = r33
            r18 = 32
        L_0x10a9:
            r29 = r8
        L_0x10ab:
            if (r31 != 0) goto L_0x10bb
            r8 = 5
            boolean r9 = r6.isNull(r8)     // Catch:{ Exception -> 0x1174 }
            if (r9 != 0) goto L_0x10bc
            long r14 = r6.longValue(r8)     // Catch:{ Exception -> 0x1174 }
            r5.random_id = r14     // Catch:{ Exception -> 0x1174 }
            goto L_0x10bc
        L_0x10bb:
            r8 = 5
        L_0x10bc:
            boolean r9 = org.telegram.messenger.MessageObject.isSecretMedia(r5)     // Catch:{ Exception -> 0x1174 }
            if (r9 == 0) goto L_0x1100
            org.telegram.SQLite.SQLiteDatabase r9 = r2.database     // Catch:{ Exception -> 0x10f6 }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x10f6 }
            java.lang.String r15 = "SELECT date FROM enc_tasks_v2 WHERE mid = %d"
            r33 = r11
            r8 = 1
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x10f4 }
            int r8 = r5.id     // Catch:{ Exception -> 0x10f4 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x10f4 }
            r38 = r12
            r12 = 0
            r11[r12] = r8     // Catch:{ Exception -> 0x10f2 }
            java.lang.String r8 = java.lang.String.format(r14, r15, r11)     // Catch:{ Exception -> 0x10f2 }
            java.lang.Object[] r11 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x10f2 }
            org.telegram.SQLite.SQLiteCursor r8 = r9.queryFinalized(r8, r11)     // Catch:{ Exception -> 0x10f2 }
            boolean r9 = r8.next()     // Catch:{ Exception -> 0x10f2 }
            if (r9 == 0) goto L_0x10ee
            int r9 = r8.intValue(r12)     // Catch:{ Exception -> 0x10f2 }
            r5.destroyTime = r9     // Catch:{ Exception -> 0x10f2 }
        L_0x10ee:
            r8.dispose()     // Catch:{ Exception -> 0x10f2 }
            goto L_0x1104
        L_0x10f2:
            r0 = move-exception
            goto L_0x10fb
        L_0x10f4:
            r0 = move-exception
            goto L_0x10f9
        L_0x10f6:
            r0 = move-exception
            r33 = r11
        L_0x10f9:
            r38 = r12
        L_0x10fb:
            r5 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ Exception -> 0x1174 }
            goto L_0x1104
        L_0x1100:
            r33 = r11
            r38 = r12
        L_0x1104:
            r11 = r28
            r8 = r33
            r12 = r35
            r5 = r38
            r9 = 6
            goto L_0x1134
        L_0x110e:
            r0 = move-exception
            r29 = r8
            goto L_0x1175
        L_0x1113:
            r0 = move-exception
            r29 = r8
            goto L_0x1157
        L_0x1117:
            r0 = move-exception
            r29 = r8
            goto L_0x1153
        L_0x111b:
            r0 = move-exception
            goto L_0x114f
        L_0x111d:
            r47 = r5
            r49 = r9
            r34 = r10
            r32 = r14
            r3 = r28
            r5 = r33
            r10 = r38
            r9 = 6
            r18 = 32
            r40 = r29
            r29 = r8
            r8 = r40
        L_0x1134:
            r9 = r49
            r28 = r3
            r33 = r5
            r38 = r10
            r14 = r32
            r10 = r34
            r3 = r46
            r5 = r47
            r40 = r29
            r29 = r8
            r8 = r40
            goto L_0x0eb0
        L_0x114c:
            r0 = move-exception
            r47 = r5
        L_0x114f:
            r29 = r8
            r49 = r9
        L_0x1153:
            r34 = r10
            r32 = r14
        L_0x1157:
            r10 = r38
            goto L_0x1175
        L_0x115a:
            r46 = r3
            r47 = r5
            r49 = r9
            r34 = r10
            r32 = r14
            r3 = r28
            r5 = r33
            r10 = r38
            r40 = r29
            r29 = r8
            r8 = r40
            r6.dispose()     // Catch:{ Exception -> 0x1174 }
            goto L_0x11aa
        L_0x1174:
            r0 = move-exception
        L_0x1175:
            r3 = r46
            goto L_0x1187
        L_0x1178:
            r0 = move-exception
            r46 = r3
            r47 = r5
            r29 = r8
            r49 = r9
            r34 = r10
            r32 = r14
            r10 = r38
        L_0x1187:
            r1 = r47
            r15 = r49
            r4 = r0
            r22 = r32
            r9 = r39
            r32 = r29
            goto L_0x1414
        L_0x1194:
            r46 = r3
            r47 = r5
            r49 = r9
            r34 = r10
            r3 = r28
            r5 = r33
            r10 = r38
            r40 = r29
            r29 = r8
            r8 = r40
            r32 = 0
        L_0x11aa:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r10.messages     // Catch:{ Exception -> 0x13cd }
            org.telegram.messenger.-$$Lambda$MessagesStorage$O4p3afFRdGYcpD1t3pANaVc_444 r9 = org.telegram.messenger.$$Lambda$MessagesStorage$O4p3afFRdGYcpD1t3pANaVc_444.INSTANCE     // Catch:{ Exception -> 0x13cd }
            java.util.Collections.sort(r6, r9)     // Catch:{ Exception -> 0x13cd }
            if (r31 == 0) goto L_0x11f1
            r6 = 3
            if (r13 == r6) goto L_0x11c3
            r6 = 4
            if (r13 == r6) goto L_0x11c3
            r6 = 2
            if (r13 != r6) goto L_0x11c1
            if (r36 == 0) goto L_0x11c1
            if (r7 != 0) goto L_0x11c1
            goto L_0x11c3
        L_0x11c1:
            r1 = 4
            goto L_0x11de
        L_0x11c3:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r10.messages     // Catch:{ Exception -> 0x1174 }
            boolean r6 = r6.isEmpty()     // Catch:{ Exception -> 0x1174 }
            if (r6 != 0) goto L_0x11c1
            if (r11 > r1) goto L_0x11cf
            if (r12 >= r1) goto L_0x11c1
        L_0x11cf:
            r5.clear()     // Catch:{ Exception -> 0x1174 }
            r3.clear()     // Catch:{ Exception -> 0x1174 }
            r37.clear()     // Catch:{ Exception -> 0x1174 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x1174 }
            r1.clear()     // Catch:{ Exception -> 0x1174 }
            goto L_0x11c1
        L_0x11de:
            if (r13 == r1) goto L_0x11e3
            r1 = 3
            if (r13 != r1) goto L_0x11f1
        L_0x11e3:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x1174 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x1174 }
            r6 = 1
            if (r1 != r6) goto L_0x11f1
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x1174 }
            r1.clear()     // Catch:{ Exception -> 0x1174 }
        L_0x11f1:
            if (r29 == 0) goto L_0x123e
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x13cd }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x13cd }
            java.lang.String r7 = "SELECT COUNT(mid) FROM messages WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)"
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x13cd }
            java.lang.Long r9 = java.lang.Long.valueOf(r42)     // Catch:{ Exception -> 0x13cd }
            r12 = 0
            r11[r12] = r9     // Catch:{ Exception -> 0x13cd }
            java.lang.String r6 = java.lang.String.format(r6, r7, r11)     // Catch:{ Exception -> 0x13cd }
            java.lang.Object[] r7 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x13cd }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x13cd }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x13cd }
            if (r6 == 0) goto L_0x1220
            int r6 = r1.intValue(r12)     // Catch:{ Exception -> 0x13cd }
            r7 = r29
            if (r7 == r6) goto L_0x121e
        L_0x121b:
            int r6 = r7 * -1
            goto L_0x1223
        L_0x121e:
            r6 = r7
            goto L_0x1223
        L_0x1220:
            r7 = r29
            goto L_0x121b
        L_0x1223:
            r1.dispose()     // Catch:{ Exception -> 0x122e }
            r1 = r46
            r14 = r49
            r7 = r6
            r6 = r47
            goto L_0x1246
        L_0x122e:
            r0 = move-exception
            r3 = r46
            r1 = r47
            r15 = r49
            r4 = r0
            r22 = r32
            r9 = r39
            r32 = r6
            goto L_0x1414
        L_0x123e:
            r7 = r29
            r1 = r46
            r6 = r47
            r14 = r49
        L_0x1246:
            boolean r9 = r5.isEmpty()     // Catch:{ Exception -> 0x13b9 }
            java.lang.String r11 = ","
            if (r9 != 0) goto L_0x137e
            int r9 = r30.size()     // Catch:{ Exception -> 0x13b9 }
            if (r9 <= 0) goto L_0x1289
            org.telegram.SQLite.SQLiteDatabase r9 = r2.database     // Catch:{ Exception -> 0x1276 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x1276 }
            java.lang.String r15 = "SELECT data, mid, date FROM messages WHERE mid IN(%s)"
            r46 = r1
            r47 = r6
            r1 = 1
            java.lang.Object[] r6 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x1274 }
            java.lang.String r1 = android.text.TextUtils.join(r11, r5)     // Catch:{ Exception -> 0x1274 }
            r5 = 0
            r6[r5] = r1     // Catch:{ Exception -> 0x1274 }
            java.lang.String r1 = java.lang.String.format(r12, r15, r6)     // Catch:{ Exception -> 0x1274 }
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x1274 }
            org.telegram.SQLite.SQLiteCursor r1 = r9.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x1274 }
        L_0x1272:
            r12 = 0
            goto L_0x12a7
        L_0x1274:
            r0 = move-exception
            goto L_0x127b
        L_0x1276:
            r0 = move-exception
            r46 = r1
            r47 = r6
        L_0x127b:
            r3 = r46
            r1 = r47
            r4 = r0
            r15 = r14
        L_0x1281:
            r22 = r32
            r9 = r39
            r32 = r7
            goto L_0x1414
        L_0x1289:
            r46 = r1
            r47 = r6
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x137c }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x137c }
            java.lang.String r9 = "SELECT m.data, m.mid, m.date, r.random_id FROM randoms as r INNER JOIN messages as m ON r.mid = m.mid WHERE r.random_id IN(%s)"
            r12 = 1
            java.lang.Object[] r15 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x137c }
            java.lang.String r5 = android.text.TextUtils.join(r11, r5)     // Catch:{ Exception -> 0x137c }
            r12 = 0
            r15[r12] = r5     // Catch:{ Exception -> 0x137c }
            java.lang.String r5 = java.lang.String.format(r6, r9, r15)     // Catch:{ Exception -> 0x137c }
            java.lang.Object[] r6 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x137c }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x137c }
        L_0x12a7:
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x137c }
            if (r5 == 0) goto L_0x1345
            org.telegram.tgnet.NativeByteBuffer r5 = r1.byteBufferValue(r12)     // Catch:{ Exception -> 0x137c }
            if (r5 == 0) goto L_0x1330
            int r6 = r5.readInt32(r12)     // Catch:{ Exception -> 0x137c }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r5, r6, r12)     // Catch:{ Exception -> 0x137c }
            r6.readAttachPath(r5, r4)     // Catch:{ Exception -> 0x137c }
            r5.reuse()     // Catch:{ Exception -> 0x137c }
            r5 = 1
            int r9 = r1.intValue(r5)     // Catch:{ Exception -> 0x137c }
            r6.id = r9     // Catch:{ Exception -> 0x137c }
            r9 = 2
            int r15 = r1.intValue(r9)     // Catch:{ Exception -> 0x137c }
            r6.date = r15     // Catch:{ Exception -> 0x137c }
            r12 = r42
            r6.dialog_id = r12     // Catch:{ Exception -> 0x137c }
            r15 = r37
            addUsersAndChatsFromMessage(r6, r3, r15)     // Catch:{ Exception -> 0x137c }
            int r18 = r30.size()     // Catch:{ Exception -> 0x137c }
            if (r18 <= 0) goto L_0x1300
            int r5 = r6.id     // Catch:{ Exception -> 0x137c }
            r9 = r30
            java.lang.Object r5 = r9.get(r5)     // Catch:{ Exception -> 0x137c }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x137c }
            r18 = r4
            r49 = r7
            if (r5 == 0) goto L_0x1338
            r4 = 0
        L_0x12ef:
            int r7 = r5.size()     // Catch:{ Exception -> 0x13b7 }
            if (r4 >= r7) goto L_0x1338
            java.lang.Object r7 = r5.get(r4)     // Catch:{ Exception -> 0x13b7 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x13b7 }
            r7.replyMessage = r6     // Catch:{ Exception -> 0x13b7 }
            int r4 = r4 + 1
            goto L_0x12ef
        L_0x1300:
            r18 = r4
            r49 = r7
            r9 = r30
            r4 = 3
            long r12 = r1.longValue(r4)     // Catch:{ Exception -> 0x13b7 }
            java.lang.Object r5 = r8.get(r12)     // Catch:{ Exception -> 0x13b7 }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x13b7 }
            r8.remove(r12)     // Catch:{ Exception -> 0x13b7 }
            if (r5 == 0) goto L_0x1339
            r7 = 0
        L_0x1317:
            int r12 = r5.size()     // Catch:{ Exception -> 0x13b7 }
            if (r7 >= r12) goto L_0x1339
            java.lang.Object r12 = r5.get(r7)     // Catch:{ Exception -> 0x13b7 }
            org.telegram.tgnet.TLRPC$Message r12 = (org.telegram.tgnet.TLRPC$Message) r12     // Catch:{ Exception -> 0x13b7 }
            r12.replyMessage = r6     // Catch:{ Exception -> 0x13b7 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r12 = r12.reply_to     // Catch:{ Exception -> 0x13b7 }
            if (r12 == 0) goto L_0x132d
            int r13 = r6.id     // Catch:{ Exception -> 0x13b7 }
            r12.reply_to_msg_id = r13     // Catch:{ Exception -> 0x13b7 }
        L_0x132d:
            int r7 = r7 + 1
            goto L_0x1317
        L_0x1330:
            r18 = r4
            r49 = r7
            r9 = r30
            r15 = r37
        L_0x1338:
            r4 = 3
        L_0x1339:
            r7 = r49
            r13 = r51
            r30 = r9
            r37 = r15
            r4 = r18
            goto L_0x1272
        L_0x1345:
            r49 = r7
            r15 = r37
            r1.dispose()     // Catch:{ Exception -> 0x13b7 }
            int r1 = r8.size()     // Catch:{ Exception -> 0x13b7 }
            if (r1 <= 0) goto L_0x1386
            r1 = 0
        L_0x1353:
            int r4 = r8.size()     // Catch:{ Exception -> 0x13b7 }
            if (r1 >= r4) goto L_0x1386
            java.lang.Object r4 = r8.valueAt(r1)     // Catch:{ Exception -> 0x13b7 }
            java.util.ArrayList r4 = (java.util.ArrayList) r4     // Catch:{ Exception -> 0x13b7 }
            r5 = 0
        L_0x1360:
            int r6 = r4.size()     // Catch:{ Exception -> 0x13b7 }
            if (r5 >= r6) goto L_0x1377
            java.lang.Object r6 = r4.get(r5)     // Catch:{ Exception -> 0x13b7 }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6     // Catch:{ Exception -> 0x13b7 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r6.reply_to     // Catch:{ Exception -> 0x13b7 }
            r12 = 0
            if (r6 == 0) goto L_0x1374
            r6.reply_to_random_id = r12     // Catch:{ Exception -> 0x13b7 }
        L_0x1374:
            int r5 = r5 + 1
            goto L_0x1360
        L_0x1377:
            r12 = 0
            int r1 = r1 + 1
            goto L_0x1353
        L_0x137c:
            r0 = move-exception
            goto L_0x13be
        L_0x137e:
            r46 = r1
            r47 = r6
            r49 = r7
            r15 = r37
        L_0x1386:
            boolean r1 = r3.isEmpty()     // Catch:{ Exception -> 0x13b7 }
            if (r1 != 0) goto L_0x1395
            java.lang.String r1 = android.text.TextUtils.join(r11, r3)     // Catch:{ Exception -> 0x13b7 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r3 = r10.users     // Catch:{ Exception -> 0x13b7 }
            r2.getUsersInternal(r1, r3)     // Catch:{ Exception -> 0x13b7 }
        L_0x1395:
            boolean r1 = r15.isEmpty()     // Catch:{ Exception -> 0x13b7 }
            if (r1 != 0) goto L_0x13a4
            java.lang.String r1 = android.text.TextUtils.join(r11, r15)     // Catch:{ Exception -> 0x13b7 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r3 = r10.chats     // Catch:{ Exception -> 0x13b7 }
            r2.getChatsInternal(r1, r3)     // Catch:{ Exception -> 0x13b7 }
        L_0x13a4:
            r9 = r46
            r11 = r47
            r15 = r14
            r13 = r24
            r16 = r25
            r14 = r34
            r23 = r36
            r19 = r39
            r24 = r49
            goto L_0x1436
        L_0x13b7:
            r0 = move-exception
            goto L_0x13c0
        L_0x13b9:
            r0 = move-exception
            r46 = r1
            r47 = r6
        L_0x13be:
            r49 = r7
        L_0x13c0:
            r3 = r46
            r1 = r47
            r4 = r0
            r15 = r14
            r22 = r32
            r9 = r39
            r32 = r49
            goto L_0x1414
        L_0x13cd:
            r0 = move-exception
            r7 = r29
            r3 = r46
            r1 = r47
            r15 = r49
            r4 = r0
            goto L_0x1281
        L_0x13d9:
            r0 = move-exception
            r12 = r14
            r10 = r38
            r1 = r47
            r4 = r0
            r34 = r6
            r24 = r12
            r25 = r15
            r15 = r32
        L_0x13e8:
            r9 = 1
            r22 = 0
            r32 = 0
            goto L_0x1412
        L_0x13ee:
            r0 = move-exception
            r12 = r14
            r10 = r38
            r1 = r47
            r4 = r0
            r24 = r12
            r25 = r15
            r15 = r32
        L_0x13fb:
            r9 = 1
        L_0x13fc:
            r22 = 0
            goto L_0x140e
        L_0x13ff:
            r0 = move-exception
            r10 = r3
            r2 = r15
            r3 = r1
            r1 = r47
            r4 = r0
            r9 = 0
        L_0x1407:
            r15 = 0
            r22 = 0
            r24 = 0
        L_0x140c:
            r25 = 0
        L_0x140e:
            r32 = 0
            r34 = 0
        L_0x1412:
            r36 = 0
        L_0x1414:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r5 = r10.messages
            r5.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r5 = r10.chats
            r5.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r5 = r10.users
            r5.clear()
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r4)
            r11 = r1
            r19 = r9
            r13 = r24
            r16 = r25
            r24 = r32
            r14 = r34
            r23 = r36
            r9 = r3
            r32 = r22
        L_0x1436:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x145f
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r3 = "messages load time = "
            r1.append(r3)
            long r3 = android.os.SystemClock.elapsedRealtime()
            long r3 = r3 - r20
            r1.append(r3)
            java.lang.String r3 = " for dialog = "
            r1.append(r3)
            r5 = r42
            r1.append(r5)
            java.lang.String r1 = r1.toString()
            org.telegram.messenger.FileLog.d(r1)
            goto L_0x1461
        L_0x145f:
            r5 = r42
        L_0x1461:
            if (r53 == 0) goto L_0x146b
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages
            int r1 = r1.size()
            r4 = r1
            goto L_0x146d
        L_0x146b:
            r4 = r32
        L_0x146d:
            org.telegram.messenger.-$$Lambda$MessagesStorage$cdZr_KsV1Ik59x3djYqTl7xvIqc r26 = new org.telegram.messenger.-$$Lambda$MessagesStorage$cdZr_KsV1Ik59x3djYqTl7xvIqc
            r1 = r26
            r2 = r41
            r3 = r10
            r5 = r42
            r7 = r44
            r10 = r11
            r11 = r48
            r12 = r50
            r17 = r51
            r18 = r52
            r20 = r53
            r21 = r54
            r22 = r55
            r25 = r56
            r1.<init>(r2, r3, r4, r5, r7, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25)
            return r26
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getMessagesInternal(long, long, int, int, int, int, int, int, boolean, boolean, int, int, boolean):java.lang.Runnable");
    }

    static /* synthetic */ int lambda$getMessagesInternal$110(TLRPC$Message tLRPC$Message, TLRPC$Message tLRPC$Message2) {
        int i;
        int i2;
        int i3 = tLRPC$Message.id;
        if (i3 <= 0 || (i2 = tLRPC$Message2.id) <= 0) {
            if (i3 >= 0 || (i = tLRPC$Message2.id) >= 0) {
                int i4 = tLRPC$Message.date;
                int i5 = tLRPC$Message2.date;
                if (i4 > i5) {
                    return -1;
                }
                if (i4 < i5) {
                    return 1;
                }
                return 0;
            } else if (i3 < i) {
                return -1;
            } else {
                if (i3 > i) {
                    return 1;
                }
                return 0;
            }
        } else if (i3 > i2) {
            return -1;
        } else {
            if (i3 < i2) {
                return 1;
            }
            return 0;
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getMessagesInternal$111 */
    public /* synthetic */ void lambda$getMessagesInternal$111$MessagesStorage(TLRPC$TL_messages_messages tLRPC$TL_messages_messages, int i, long j, long j2, int i2, int i3, int i4, int i5, int i6, int i7, int i8, int i9, int i10, boolean z, boolean z2, boolean z3, int i11, int i12, boolean z4, int i13, boolean z5) {
        getMessagesController().processLoadedMessages(tLRPC$TL_messages_messages, i, j, j2, i2, i3, i4, true, i5, i6, i7, i8, i9, i10, z, z2, z3 ? 1 : 0, i11, i12, z4, i13, z5);
    }

    public void getMessages(long j, long j2, boolean z, int i, int i2, int i3, int i4, int i5, int i6, boolean z2, boolean z3, int i7, int i8, boolean z4) {
        $$Lambda$MessagesStorage$b4T7wbIfQNmz3j7JwZaIptUmyAc r18 = r0;
        $$Lambda$MessagesStorage$b4T7wbIfQNmz3j7JwZaIptUmyAc r0 = new Runnable(this, j2, j, i, i2, i3, i4, i5, i6, z2, z3, i7, i8, z4) {
            public final /* synthetic */ MessagesStorage f$0;
            public final /* synthetic */ long f$1;
            public final /* synthetic */ boolean f$10;
            public final /* synthetic */ int f$11;
            public final /* synthetic */ int f$12;
            public final /* synthetic */ boolean f$13;
            public final /* synthetic */ long f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;
            public final /* synthetic */ int f$6;
            public final /* synthetic */ int f$7;
            public final /* synthetic */ int f$8;
            public final /* synthetic */ boolean f$9;

            {
                this.f$0 = r4;
                this.f$1 = r5;
                this.f$2 = r7;
                this.f$3 = r9;
                this.f$4 = r10;
                this.f$5 = r11;
                this.f$6 = r12;
                this.f$7 = r13;
                this.f$8 = r14;
                this.f$9 = r15;
                this.f$10 = r16;
                this.f$11 = r17;
                this.f$12 = r18;
                this.f$13 = r19;
            }

            public final void run() {
                this.f$0.lambda$getMessages$112$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10, this.f$11, this.f$12, this.f$13);
            }
        };
        this.storageQueue.postRunnable(r18);
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getMessages$112 */
    public /* synthetic */ void lambda$getMessages$112$MessagesStorage(long j, long j2, int i, int i2, int i3, int i4, int i5, int i6, boolean z, boolean z2, int i7, int i8, boolean z3) {
        Utilities.stageQueue.postRunnable(getMessagesInternal(j2, j, i, i2, i3, i4, i5, i6, z, z2, i7, i8, z3));
    }

    public void clearSentMedia() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$clearSentMedia$113$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$clearSentMedia$113 */
    public /* synthetic */ void lambda$clearSentMedia$113$MessagesStorage() {
        try {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public Object[] getSentFile(String str, int i) {
        if (str == null || str.toLowerCase().endsWith("attheme")) {
            return null;
        }
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Object[] objArr = new Object[2];
        this.storageQueue.postRunnable(new Runnable(str, i, objArr, countDownLatch) {
            public final /* synthetic */ String f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ Object[] f$3;
            public final /* synthetic */ CountDownLatch f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$getSentFile$114$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (objArr[0] != null) {
            return objArr;
        }
        return null;
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getSentFile$114 */
    public /* synthetic */ void lambda$getSentFile$114$MessagesStorage(String str, int i, Object[] objArr, CountDownLatch countDownLatch) {
        NativeByteBuffer byteBufferValue;
        try {
            String MD5 = Utilities.MD5(str);
            if (MD5 != null) {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, parent FROM sent_files_v2 WHERE uid = '%s' AND type = %d", new Object[]{MD5, Integer.valueOf(i)}), new Object[0]);
                if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                    TLRPC$MessageMedia TLdeserialize = TLRPC$MessageMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (TLdeserialize instanceof TLRPC$TL_messageMediaDocument) {
                        objArr[0] = ((TLRPC$TL_messageMediaDocument) TLdeserialize).document;
                    } else if (TLdeserialize instanceof TLRPC$TL_messageMediaPhoto) {
                        objArr[0] = ((TLRPC$TL_messageMediaPhoto) TLdeserialize).photo;
                    }
                    if (objArr[0] != null) {
                        objArr[1] = queryFinalized.stringValue(1);
                    }
                }
                queryFinalized.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    private void updateWidgets(long j) {
        ArrayList arrayList = new ArrayList();
        arrayList.add(Long.valueOf(j));
        updateWidgets((ArrayList<Long>) arrayList);
    }

    private void updateWidgets(ArrayList<Long> arrayList) {
        if (!arrayList.isEmpty()) {
            AppWidgetManager appWidgetManager = null;
            try {
                TextUtils.join(",", arrayList);
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT DISTINCT id FROM shortcut_widget WHERE did IN(%s,-1)", new Object[]{TextUtils.join(",", arrayList)}), new Object[0]);
                while (queryFinalized.next()) {
                    if (appWidgetManager == null) {
                        appWidgetManager = AppWidgetManager.getInstance(ApplicationLoader.applicationContext);
                    }
                    appWidgetManager.notifyAppWidgetViewDataChanged(queryFinalized.intValue(0), NUM);
                }
                queryFinalized.dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    public void putWidgetDialogs(int i, ArrayList<Long> arrayList) {
        this.storageQueue.postRunnable(new Runnable(i, arrayList) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ ArrayList f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$putWidgetDialogs$115$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putWidgetDialogs$115 */
    public /* synthetic */ void lambda$putWidgetDialogs$115$MessagesStorage(int i, ArrayList arrayList) {
        try {
            this.database.beginTransaction();
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM shortcut_widget WHERE id = " + i).stepThis().dispose();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO shortcut_widget VALUES(?, ?, ?)");
            if (arrayList.isEmpty()) {
                executeFast.requery();
                executeFast.bindInteger(1, i);
                executeFast.bindLong(2, -1);
                executeFast.bindInteger(3, 0);
                executeFast.step();
            } else {
                int size = arrayList.size();
                for (int i2 = 0; i2 < size; i2++) {
                    long longValue = ((Long) arrayList.get(i2)).longValue();
                    executeFast.requery();
                    executeFast.bindInteger(1, i);
                    executeFast.bindLong(2, longValue);
                    executeFast.bindInteger(3, i2);
                    executeFast.step();
                }
            }
            executeFast.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearWidgetDialogs(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearWidgetDialogs$116$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$clearWidgetDialogs$116 */
    public /* synthetic */ void lambda$clearWidgetDialogs$116$MessagesStorage(int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM shortcut_widget WHERE id = " + i).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getWidgetDialogIds(int i, int i2, ArrayList<Long> arrayList, ArrayList<TLRPC$User> arrayList2, ArrayList<TLRPC$Chat> arrayList3, boolean z) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new Runnable(i, arrayList, arrayList2, arrayList3, z, i2, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ ArrayList f$2;
            public final /* synthetic */ ArrayList f$3;
            public final /* synthetic */ ArrayList f$4;
            public final /* synthetic */ boolean f$5;
            public final /* synthetic */ int f$6;
            public final /* synthetic */ CountDownLatch f$7;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
            }

            public final void run() {
                MessagesStorage.this.lambda$getWidgetDialogIds$117$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getWidgetDialogIds$117 */
    public /* synthetic */ void lambda$getWidgetDialogIds$117$MessagesStorage(int i, ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, boolean z, int i2, CountDownLatch countDownLatch) {
        try {
            ArrayList arrayList4 = new ArrayList();
            ArrayList arrayList5 = new ArrayList();
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT did FROM shortcut_widget WHERE id = %d ORDER BY ord ASC", new Object[]{Integer.valueOf(i)}), new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                if (longValue != -1) {
                    arrayList.add(Long.valueOf(longValue));
                    if (!(arrayList2 == null || arrayList3 == null)) {
                        int i3 = (int) longValue;
                        if (i3 > 0) {
                            arrayList4.add(Integer.valueOf(i3));
                        } else {
                            arrayList5.add(Integer.valueOf(-i3));
                        }
                    }
                }
            }
            queryFinalized.dispose();
            if (!z && arrayList.isEmpty()) {
                if (i2 == 0) {
                    SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT did FROM dialogs WHERE folder_id = 0 ORDER BY pinned DESC, date DESC LIMIT 0,10", new Object[0]);
                    while (queryFinalized2.next()) {
                        long longValue2 = queryFinalized2.longValue(0);
                        if (!DialogObject.isFolderDialogId(longValue2)) {
                            arrayList.add(Long.valueOf(longValue2));
                            if (!(arrayList2 == null || arrayList3 == null)) {
                                int i4 = (int) longValue2;
                                if (i4 > 0) {
                                    arrayList4.add(Integer.valueOf(i4));
                                } else {
                                    arrayList5.add(Integer.valueOf(-i4));
                                }
                            }
                        }
                    }
                    queryFinalized2.dispose();
                } else {
                    SQLiteCursor queryFinalized3 = getMessagesStorage().getDatabase().queryFinalized("SELECT did FROM chat_hints WHERE type = 0 ORDER BY rating DESC LIMIT 4", new Object[0]);
                    while (queryFinalized3.next()) {
                        long longValue3 = queryFinalized3.longValue(0);
                        arrayList.add(Long.valueOf(longValue3));
                        if (!(arrayList2 == null || arrayList3 == null)) {
                            int i5 = (int) longValue3;
                            if (i5 > 0) {
                                arrayList4.add(Integer.valueOf(i5));
                            } else {
                                arrayList5.add(Integer.valueOf(-i5));
                            }
                        }
                    }
                    queryFinalized3.dispose();
                }
            }
            if (!(arrayList2 == null || arrayList3 == null)) {
                if (!arrayList5.isEmpty()) {
                    getChatsInternal(TextUtils.join(",", arrayList5), arrayList3);
                }
                if (!arrayList4.isEmpty()) {
                    getUsersInternal(TextUtils.join(",", arrayList4), arrayList2);
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void getWidgetDialogs(int i, int i2, ArrayList<Long> arrayList, LongSparseArray<TLRPC$Dialog> longSparseArray, LongSparseArray<TLRPC$Message> longSparseArray2, ArrayList<TLRPC$User> arrayList2, ArrayList<TLRPC$Chat> arrayList3) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new Runnable(i, arrayList, i2, longSparseArray, longSparseArray2, arrayList3, arrayList2, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ ArrayList f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ LongSparseArray f$4;
            public final /* synthetic */ LongSparseArray f$5;
            public final /* synthetic */ ArrayList f$6;
            public final /* synthetic */ ArrayList f$7;
            public final /* synthetic */ CountDownLatch f$8;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
            }

            public final void run() {
                MessagesStorage.this.lambda$getWidgetDialogs$118$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getWidgetDialogs$118 */
    public /* synthetic */ void lambda$getWidgetDialogs$118$MessagesStorage(int i, ArrayList arrayList, int i2, LongSparseArray longSparseArray, LongSparseArray longSparseArray2, ArrayList arrayList2, ArrayList arrayList3, CountDownLatch countDownLatch) {
        boolean z;
        SQLiteCursor sQLiteCursor;
        ArrayList arrayList4 = arrayList;
        LongSparseArray longSparseArray3 = longSparseArray;
        try {
            ArrayList arrayList5 = new ArrayList();
            ArrayList arrayList6 = new ArrayList();
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT did FROM shortcut_widget WHERE id = %d ORDER BY ord ASC", new Object[]{Integer.valueOf(i)}), new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                if (longValue != -1) {
                    arrayList4.add(Long.valueOf(longValue));
                    int i3 = (int) longValue;
                    if (i3 > 0) {
                        arrayList5.add(Integer.valueOf(i3));
                    } else {
                        arrayList6.add(Integer.valueOf(-i3));
                    }
                }
            }
            queryFinalized.dispose();
            if (arrayList.isEmpty() && i2 == 1) {
                SQLiteCursor queryFinalized2 = getMessagesStorage().getDatabase().queryFinalized("SELECT did FROM chat_hints WHERE type = 0 ORDER BY rating DESC LIMIT 4", new Object[0]);
                while (queryFinalized2.next()) {
                    long longValue2 = queryFinalized2.longValue(0);
                    arrayList4.add(Long.valueOf(longValue2));
                    int i4 = (int) longValue2;
                    if (i4 > 0) {
                        arrayList5.add(Integer.valueOf(i4));
                    } else {
                        arrayList6.add(Integer.valueOf(-i4));
                    }
                }
                queryFinalized2.dispose();
            }
            if (arrayList.isEmpty()) {
                sQLiteCursor = this.database.queryFinalized("SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.folder_id = 0 ORDER BY d.pinned DESC, d.date DESC LIMIT 0,10", new Object[0]);
                z = true;
            } else {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", new Object[]{TextUtils.join(",", arrayList4)}), new Object[0]);
                z = false;
            }
            while (sQLiteCursor.next()) {
                long longValue3 = sQLiteCursor.longValue(0);
                if (!DialogObject.isFolderDialogId(longValue3)) {
                    if (z) {
                        arrayList4.add(Long.valueOf(longValue3));
                    }
                    TLRPC$TL_dialog tLRPC$TL_dialog = new TLRPC$TL_dialog();
                    tLRPC$TL_dialog.id = longValue3;
                    tLRPC$TL_dialog.top_message = sQLiteCursor.intValue(1);
                    tLRPC$TL_dialog.unread_count = sQLiteCursor.intValue(2);
                    tLRPC$TL_dialog.last_message_date = sQLiteCursor.intValue(3);
                    longSparseArray3.put(tLRPC$TL_dialog.id, tLRPC$TL_dialog);
                    NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(4);
                    if (byteBufferValue != null) {
                        TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                        byteBufferValue.reuse();
                        MessageObject.setUnreadFlags(TLdeserialize, sQLiteCursor.intValue(5));
                        TLdeserialize.id = sQLiteCursor.intValue(6);
                        TLdeserialize.send_state = sQLiteCursor.intValue(7);
                        int intValue = sQLiteCursor.intValue(8);
                        if (intValue != 0) {
                            tLRPC$TL_dialog.last_message_date = intValue;
                        }
                        long j = tLRPC$TL_dialog.id;
                        TLdeserialize.dialog_id = j;
                        longSparseArray2.put(j, TLdeserialize);
                        addUsersAndChatsFromMessage(TLdeserialize, arrayList5, arrayList6);
                    }
                }
                LongSparseArray longSparseArray4 = longSparseArray2;
            }
            sQLiteCursor.dispose();
            if (!z && arrayList.size() > longSparseArray.size()) {
                int size = arrayList.size();
                for (int i5 = 0; i5 < size; i5++) {
                    long longValue4 = ((Long) arrayList4.get(i5)).longValue();
                    if (longSparseArray3.get(((Long) arrayList4.get(i5)).longValue()) == null) {
                        TLRPC$TL_dialog tLRPC$TL_dialog2 = new TLRPC$TL_dialog();
                        tLRPC$TL_dialog2.id = longValue4;
                        longSparseArray3.put(longValue4, tLRPC$TL_dialog2);
                        int i6 = (int) longValue4;
                        if (i6 < 0) {
                            int i7 = -i6;
                            if (arrayList6.contains(Integer.valueOf(i7))) {
                                arrayList6.add(Integer.valueOf(i7));
                            }
                        } else if (arrayList5.contains(Integer.valueOf(i6))) {
                            arrayList5.add(Integer.valueOf(i6));
                        }
                    }
                }
            }
            if (!arrayList6.isEmpty()) {
                getChatsInternal(TextUtils.join(",", arrayList6), arrayList2);
            }
            if (!arrayList5.isEmpty()) {
                getUsersInternal(TextUtils.join(",", arrayList5), arrayList3);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putSentFile(String str, TLObject tLObject, int i, String str2) {
        if (str != null && tLObject != null && str2 != null) {
            this.storageQueue.postRunnable(new Runnable(str, tLObject, i, str2) {
                public final /* synthetic */ String f$1;
                public final /* synthetic */ TLObject f$2;
                public final /* synthetic */ int f$3;
                public final /* synthetic */ String f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putSentFile$119$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v7, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPhoto} */
    /* JADX WARNING: type inference failed for: r1v1, types: [org.telegram.tgnet.TLObject] */
    /* JADX WARNING: type inference failed for: r1v3 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: lambda$putSentFile$119 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putSentFile$119$MessagesStorage(java.lang.String r5, org.telegram.tgnet.TLObject r6, int r7, java.lang.String r8) {
        /*
            r4 = this;
            r0 = 0
            java.lang.String r5 = org.telegram.messenger.Utilities.MD5(r5)     // Catch:{ Exception -> 0x0066 }
            if (r5 == 0) goto L_0x005e
            boolean r1 = r6 instanceof org.telegram.tgnet.TLRPC$Photo     // Catch:{ Exception -> 0x0066 }
            r2 = 1
            if (r1 == 0) goto L_0x001b
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0066 }
            r1.<init>()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.TLRPC$Photo r6 = (org.telegram.tgnet.TLRPC$Photo) r6     // Catch:{ Exception -> 0x0066 }
            r1.photo = r6     // Catch:{ Exception -> 0x0066 }
            int r6 = r1.flags     // Catch:{ Exception -> 0x0066 }
            r6 = r6 | r2
            r1.flags = r6     // Catch:{ Exception -> 0x0066 }
            goto L_0x002f
        L_0x001b:
            boolean r1 = r6 instanceof org.telegram.tgnet.TLRPC$Document     // Catch:{ Exception -> 0x0066 }
            if (r1 == 0) goto L_0x002e
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0066 }
            r1.<init>()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.TLRPC$Document r6 = (org.telegram.tgnet.TLRPC$Document) r6     // Catch:{ Exception -> 0x0066 }
            r1.document = r6     // Catch:{ Exception -> 0x0066 }
            int r6 = r1.flags     // Catch:{ Exception -> 0x0066 }
            r6 = r6 | r2
            r1.flags = r6     // Catch:{ Exception -> 0x0066 }
            goto L_0x002f
        L_0x002e:
            r1 = r0
        L_0x002f:
            if (r1 != 0) goto L_0x0032
            return
        L_0x0032:
            org.telegram.SQLite.SQLiteDatabase r6 = r4.database     // Catch:{ Exception -> 0x0066 }
            java.lang.String r3 = "REPLACE INTO sent_files_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r6.executeFast(r3)     // Catch:{ Exception -> 0x0066 }
            r0.requery()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.NativeByteBuffer r6 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0066 }
            int r3 = r1.getObjectSize()     // Catch:{ Exception -> 0x0066 }
            r6.<init>((int) r3)     // Catch:{ Exception -> 0x0066 }
            r1.serializeToStream(r6)     // Catch:{ Exception -> 0x0066 }
            r0.bindString(r2, r5)     // Catch:{ Exception -> 0x0066 }
            r5 = 2
            r0.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0066 }
            r5 = 3
            r0.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x0066 }
            r5 = 4
            r0.bindString(r5, r8)     // Catch:{ Exception -> 0x0066 }
            r0.step()     // Catch:{ Exception -> 0x0066 }
            r6.reuse()     // Catch:{ Exception -> 0x0066 }
        L_0x005e:
            if (r0 == 0) goto L_0x006d
        L_0x0060:
            r0.dispose()
            goto L_0x006d
        L_0x0064:
            r5 = move-exception
            goto L_0x006e
        L_0x0066:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0064 }
            if (r0 == 0) goto L_0x006d
            goto L_0x0060
        L_0x006d:
            return
        L_0x006e:
            if (r0 == 0) goto L_0x0073
            r0.dispose()
        L_0x0073:
            goto L_0x0075
        L_0x0074:
            throw r5
        L_0x0075:
            goto L_0x0074
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putSentFile$119$MessagesStorage(java.lang.String, org.telegram.tgnet.TLObject, int, java.lang.String):void");
    }

    public void updateEncryptedChatSeq(TLRPC$EncryptedChat tLRPC$EncryptedChat, boolean z) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$EncryptedChat, z) {
                public final /* synthetic */ TLRPC$EncryptedChat f$1;
                public final /* synthetic */ boolean f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChatSeq$120$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateEncryptedChatSeq$120 */
    public /* synthetic */ void lambda$updateEncryptedChatSeq$120$MessagesStorage(TLRPC$EncryptedChat tLRPC$EncryptedChat, boolean z) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET seq_in = ?, seq_out = ?, use_count = ?, in_seq_no = ?, mtproto_seq = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, tLRPC$EncryptedChat.seq_in);
            sQLitePreparedStatement.bindInteger(2, tLRPC$EncryptedChat.seq_out);
            sQLitePreparedStatement.bindInteger(3, (tLRPC$EncryptedChat.key_use_count_in << 16) | tLRPC$EncryptedChat.key_use_count_out);
            sQLitePreparedStatement.bindInteger(4, tLRPC$EncryptedChat.in_seq_no);
            sQLitePreparedStatement.bindInteger(5, tLRPC$EncryptedChat.mtproto_seq);
            sQLitePreparedStatement.bindInteger(6, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
            if (z && tLRPC$EncryptedChat.in_seq_no != 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM messages WHERE mid IN (SELECT m.mid FROM messages as m LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE m.uid = %d AND m.date = 0 AND m.mid < 0 AND s.seq_out <= %d)", new Object[]{Long.valueOf(((long) tLRPC$EncryptedChat.id) << 32), Integer.valueOf(tLRPC$EncryptedChat.in_seq_no)})).stepThis().dispose();
            }
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChatTTL(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$EncryptedChat) {
                public final /* synthetic */ TLRPC$EncryptedChat f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChatTTL$121$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateEncryptedChatTTL$121 */
    public /* synthetic */ void lambda$updateEncryptedChatTTL$121$MessagesStorage(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET ttl = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, tLRPC$EncryptedChat.ttl);
            sQLitePreparedStatement.bindInteger(2, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChatLayer(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$EncryptedChat) {
                public final /* synthetic */ TLRPC$EncryptedChat f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChatLayer$122$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateEncryptedChatLayer$122 */
    public /* synthetic */ void lambda$updateEncryptedChatLayer$122$MessagesStorage(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET layer = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, tLRPC$EncryptedChat.layer);
            sQLitePreparedStatement.bindInteger(2, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChat(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$EncryptedChat) {
                public final /* synthetic */ TLRPC$EncryptedChat f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChat$123$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateEncryptedChat$123 */
    public /* synthetic */ void lambda$updateEncryptedChat$123$MessagesStorage(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        byte[] bArr;
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            byte[] bArr2 = tLRPC$EncryptedChat.key_hash;
            if ((bArr2 == null || bArr2.length < 16) && (bArr = tLRPC$EncryptedChat.auth_key) != null) {
                tLRPC$EncryptedChat.key_hash = AndroidUtilities.calcAuthKeyHash(bArr);
            }
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET data = ?, g = ?, authkey = ?, ttl = ?, layer = ?, seq_in = ?, seq_out = ?, use_count = ?, exchange_id = ?, key_date = ?, fprint = ?, fauthkey = ?, khash = ?, in_seq_no = ?, admin_id = ?, mtproto_seq = ? WHERE uid = ?");
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$EncryptedChat.getObjectSize());
            byte[] bArr3 = tLRPC$EncryptedChat.a_or_b;
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(bArr3 != null ? bArr3.length : 1);
            byte[] bArr4 = tLRPC$EncryptedChat.auth_key;
            NativeByteBuffer nativeByteBuffer3 = new NativeByteBuffer(bArr4 != null ? bArr4.length : 1);
            byte[] bArr5 = tLRPC$EncryptedChat.future_auth_key;
            NativeByteBuffer nativeByteBuffer4 = new NativeByteBuffer(bArr5 != null ? bArr5.length : 1);
            byte[] bArr6 = tLRPC$EncryptedChat.key_hash;
            NativeByteBuffer nativeByteBuffer5 = new NativeByteBuffer(bArr6 != null ? bArr6.length : 1);
            tLRPC$EncryptedChat.serializeToStream(nativeByteBuffer);
            sQLitePreparedStatement.bindByteBuffer(1, nativeByteBuffer);
            byte[] bArr7 = tLRPC$EncryptedChat.a_or_b;
            if (bArr7 != null) {
                nativeByteBuffer2.writeBytes(bArr7);
            }
            byte[] bArr8 = tLRPC$EncryptedChat.auth_key;
            if (bArr8 != null) {
                nativeByteBuffer3.writeBytes(bArr8);
            }
            byte[] bArr9 = tLRPC$EncryptedChat.future_auth_key;
            if (bArr9 != null) {
                nativeByteBuffer4.writeBytes(bArr9);
            }
            byte[] bArr10 = tLRPC$EncryptedChat.key_hash;
            if (bArr10 != null) {
                nativeByteBuffer5.writeBytes(bArr10);
            }
            sQLitePreparedStatement.bindByteBuffer(2, nativeByteBuffer2);
            sQLitePreparedStatement.bindByteBuffer(3, nativeByteBuffer3);
            sQLitePreparedStatement.bindInteger(4, tLRPC$EncryptedChat.ttl);
            sQLitePreparedStatement.bindInteger(5, tLRPC$EncryptedChat.layer);
            sQLitePreparedStatement.bindInteger(6, tLRPC$EncryptedChat.seq_in);
            sQLitePreparedStatement.bindInteger(7, tLRPC$EncryptedChat.seq_out);
            sQLitePreparedStatement.bindInteger(8, (tLRPC$EncryptedChat.key_use_count_in << 16) | tLRPC$EncryptedChat.key_use_count_out);
            sQLitePreparedStatement.bindLong(9, tLRPC$EncryptedChat.exchange_id);
            sQLitePreparedStatement.bindInteger(10, tLRPC$EncryptedChat.key_create_date);
            sQLitePreparedStatement.bindLong(11, tLRPC$EncryptedChat.future_key_fingerprint);
            sQLitePreparedStatement.bindByteBuffer(12, nativeByteBuffer4);
            sQLitePreparedStatement.bindByteBuffer(13, nativeByteBuffer5);
            sQLitePreparedStatement.bindInteger(14, tLRPC$EncryptedChat.in_seq_no);
            sQLitePreparedStatement.bindInteger(15, tLRPC$EncryptedChat.admin_id);
            sQLitePreparedStatement.bindInteger(16, tLRPC$EncryptedChat.mtproto_seq);
            sQLitePreparedStatement.bindInteger(17, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
            nativeByteBuffer.reuse();
            nativeByteBuffer2.reuse();
            nativeByteBuffer3.reuse();
            nativeByteBuffer4.reuse();
            nativeByteBuffer5.reuse();
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void isDialogHasTopMessage(long j, Runnable runnable) {
        this.storageQueue.postRunnable(new Runnable(j, runnable) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ Runnable f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$isDialogHasTopMessage$124$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$isDialogHasTopMessage$124 */
    public /* synthetic */ void lambda$isDialogHasTopMessage$124$MessagesStorage(long j, Runnable runnable) {
        boolean z = false;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT last_mid FROM dialogs WHERE did = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next() && queryFinalized.intValue(0) != 0) {
                z = true;
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (!z) {
            AndroidUtilities.runOnUIThread(runnable);
        }
    }

    public boolean hasAuthMessage(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new Runnable(i, zArr, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ boolean[] f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$hasAuthMessage$125$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$hasAuthMessage$125 */
    public /* synthetic */ void lambda$hasAuthMessage$125$MessagesStorage(int i, boolean[] zArr, CountDownLatch countDownLatch) {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM messages WHERE uid = 777000 AND date = %d AND mid < 0 LIMIT 1", new Object[]{Integer.valueOf(i)}), new Object[0]);
            zArr[0] = queryFinalized.next();
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void getEncryptedChat(int i, CountDownLatch countDownLatch, ArrayList<TLObject> arrayList) {
        if (countDownLatch != null && arrayList != null) {
            this.storageQueue.postRunnable(new Runnable(i, arrayList, countDownLatch) {
                public final /* synthetic */ int f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ CountDownLatch f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$getEncryptedChat$126$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getEncryptedChat$126 */
    public /* synthetic */ void lambda$getEncryptedChat$126$MessagesStorage(int i, ArrayList arrayList, CountDownLatch countDownLatch) {
        try {
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            getEncryptedChatsInternal("" + i, arrayList3, arrayList2);
            if (!arrayList3.isEmpty() && !arrayList2.isEmpty()) {
                ArrayList arrayList4 = new ArrayList();
                getUsersInternal(TextUtils.join(",", arrayList2), arrayList4);
                if (!arrayList4.isEmpty()) {
                    arrayList.add(arrayList3.get(0));
                    arrayList.add(arrayList4.get(0));
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putEncryptedChat(TLRPC$EncryptedChat tLRPC$EncryptedChat, TLRPC$User tLRPC$User, TLRPC$Dialog tLRPC$Dialog) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$EncryptedChat, tLRPC$User, tLRPC$Dialog) {
                public final /* synthetic */ TLRPC$EncryptedChat f$1;
                public final /* synthetic */ TLRPC$User f$2;
                public final /* synthetic */ TLRPC$Dialog f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putEncryptedChat$127$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putEncryptedChat$127 */
    public /* synthetic */ void lambda$putEncryptedChat$127$MessagesStorage(TLRPC$EncryptedChat tLRPC$EncryptedChat, TLRPC$User tLRPC$User, TLRPC$Dialog tLRPC$Dialog) {
        byte[] bArr;
        TLRPC$EncryptedChat tLRPC$EncryptedChat2 = tLRPC$EncryptedChat;
        TLRPC$User tLRPC$User2 = tLRPC$User;
        TLRPC$Dialog tLRPC$Dialog2 = tLRPC$Dialog;
        try {
            byte[] bArr2 = tLRPC$EncryptedChat2.key_hash;
            if ((bArr2 == null || bArr2.length < 16) && (bArr = tLRPC$EncryptedChat2.auth_key) != null) {
                tLRPC$EncryptedChat2.key_hash = AndroidUtilities.calcAuthKeyHash(bArr);
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_chats VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$EncryptedChat.getObjectSize());
            byte[] bArr3 = tLRPC$EncryptedChat2.a_or_b;
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(bArr3 != null ? bArr3.length : 1);
            byte[] bArr4 = tLRPC$EncryptedChat2.auth_key;
            NativeByteBuffer nativeByteBuffer3 = new NativeByteBuffer(bArr4 != null ? bArr4.length : 1);
            byte[] bArr5 = tLRPC$EncryptedChat2.future_auth_key;
            NativeByteBuffer nativeByteBuffer4 = new NativeByteBuffer(bArr5 != null ? bArr5.length : 1);
            byte[] bArr6 = tLRPC$EncryptedChat2.key_hash;
            NativeByteBuffer nativeByteBuffer5 = new NativeByteBuffer(bArr6 != null ? bArr6.length : 1);
            tLRPC$EncryptedChat2.serializeToStream(nativeByteBuffer);
            executeFast.bindInteger(1, tLRPC$EncryptedChat2.id);
            executeFast.bindInteger(2, tLRPC$User2.id);
            executeFast.bindString(3, formatUserSearchName(tLRPC$User2));
            executeFast.bindByteBuffer(4, nativeByteBuffer);
            byte[] bArr7 = tLRPC$EncryptedChat2.a_or_b;
            if (bArr7 != null) {
                nativeByteBuffer2.writeBytes(bArr7);
            }
            byte[] bArr8 = tLRPC$EncryptedChat2.auth_key;
            if (bArr8 != null) {
                nativeByteBuffer3.writeBytes(bArr8);
            }
            byte[] bArr9 = tLRPC$EncryptedChat2.future_auth_key;
            if (bArr9 != null) {
                nativeByteBuffer4.writeBytes(bArr9);
            }
            byte[] bArr10 = tLRPC$EncryptedChat2.key_hash;
            if (bArr10 != null) {
                nativeByteBuffer5.writeBytes(bArr10);
            }
            executeFast.bindByteBuffer(5, nativeByteBuffer2);
            executeFast.bindByteBuffer(6, nativeByteBuffer3);
            executeFast.bindInteger(7, tLRPC$EncryptedChat2.ttl);
            executeFast.bindInteger(8, tLRPC$EncryptedChat2.layer);
            executeFast.bindInteger(9, tLRPC$EncryptedChat2.seq_in);
            executeFast.bindInteger(10, tLRPC$EncryptedChat2.seq_out);
            executeFast.bindInteger(11, tLRPC$EncryptedChat2.key_use_count_out | (tLRPC$EncryptedChat2.key_use_count_in << 16));
            executeFast.bindLong(12, tLRPC$EncryptedChat2.exchange_id);
            executeFast.bindInteger(13, tLRPC$EncryptedChat2.key_create_date);
            executeFast.bindLong(14, tLRPC$EncryptedChat2.future_key_fingerprint);
            executeFast.bindByteBuffer(15, nativeByteBuffer4);
            executeFast.bindByteBuffer(16, nativeByteBuffer5);
            executeFast.bindInteger(17, tLRPC$EncryptedChat2.in_seq_no);
            executeFast.bindInteger(18, tLRPC$EncryptedChat2.admin_id);
            executeFast.bindInteger(19, tLRPC$EncryptedChat2.mtproto_seq);
            executeFast.step();
            executeFast.dispose();
            nativeByteBuffer.reuse();
            nativeByteBuffer2.reuse();
            nativeByteBuffer3.reuse();
            nativeByteBuffer4.reuse();
            nativeByteBuffer5.reuse();
            if (tLRPC$Dialog2 != null) {
                SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                executeFast2.bindLong(1, tLRPC$Dialog2.id);
                executeFast2.bindInteger(2, tLRPC$Dialog2.last_message_date);
                executeFast2.bindInteger(3, tLRPC$Dialog2.unread_count);
                executeFast2.bindInteger(4, tLRPC$Dialog2.top_message);
                executeFast2.bindInteger(5, tLRPC$Dialog2.read_inbox_max_id);
                executeFast2.bindInteger(6, tLRPC$Dialog2.read_outbox_max_id);
                executeFast2.bindInteger(7, 0);
                executeFast2.bindInteger(8, tLRPC$Dialog2.unread_mentions_count);
                executeFast2.bindInteger(9, tLRPC$Dialog2.pts);
                executeFast2.bindInteger(10, 0);
                executeFast2.bindInteger(11, tLRPC$Dialog2.pinnedNum);
                executeFast2.bindInteger(12, tLRPC$Dialog2.flags);
                executeFast2.bindInteger(13, tLRPC$Dialog2.folder_id);
                executeFast2.bindNull(14);
                executeFast2.step();
                executeFast2.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private String formatUserSearchName(TLRPC$User tLRPC$User) {
        StringBuilder sb = new StringBuilder();
        String str = tLRPC$User.first_name;
        if (str != null && str.length() > 0) {
            sb.append(tLRPC$User.first_name);
        }
        String str2 = tLRPC$User.last_name;
        if (str2 != null && str2.length() > 0) {
            if (sb.length() > 0) {
                sb.append(" ");
            }
            sb.append(tLRPC$User.last_name);
        }
        sb.append(";;;");
        String str3 = tLRPC$User.username;
        if (str3 != null && str3.length() > 0) {
            sb.append(tLRPC$User.username);
        }
        return sb.toString().toLowerCase();
    }

    private void putUsersInternal(ArrayList<TLRPC$User> arrayList) throws Exception {
        if (arrayList != null && !arrayList.isEmpty()) {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO users VALUES(?, ?, ?, ?)");
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$User tLRPC$User = arrayList.get(i);
                if (tLRPC$User.min) {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM users WHERE uid = %d", new Object[]{Integer.valueOf(tLRPC$User.id)}), new Object[0]);
                    if (queryFinalized.next()) {
                        try {
                            NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                            if (byteBufferValue != null) {
                                TLRPC$User TLdeserialize = TLRPC$User.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                byteBufferValue.reuse();
                                if (TLdeserialize != null) {
                                    String str = tLRPC$User.username;
                                    if (str != null) {
                                        TLdeserialize.username = str;
                                        TLdeserialize.flags |= 8;
                                    } else {
                                        TLdeserialize.username = null;
                                        TLdeserialize.flags &= -9;
                                    }
                                    if (tLRPC$User.apply_min_photo) {
                                        TLRPC$UserProfilePhoto tLRPC$UserProfilePhoto = tLRPC$User.photo;
                                        if (tLRPC$UserProfilePhoto != null) {
                                            TLdeserialize.photo = tLRPC$UserProfilePhoto;
                                            TLdeserialize.flags |= 32;
                                        } else {
                                            TLdeserialize.photo = null;
                                            TLdeserialize.flags &= -33;
                                        }
                                    }
                                    tLRPC$User = TLdeserialize;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    queryFinalized.dispose();
                }
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$User.getObjectSize());
                tLRPC$User.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, tLRPC$User.id);
                executeFast.bindString(2, formatUserSearchName(tLRPC$User));
                TLRPC$UserStatus tLRPC$UserStatus = tLRPC$User.status;
                if (tLRPC$UserStatus != null) {
                    if (tLRPC$UserStatus instanceof TLRPC$TL_userStatusRecently) {
                        tLRPC$UserStatus.expires = -100;
                    } else if (tLRPC$UserStatus instanceof TLRPC$TL_userStatusLastWeek) {
                        tLRPC$UserStatus.expires = -101;
                    } else if (tLRPC$UserStatus instanceof TLRPC$TL_userStatusLastMonth) {
                        tLRPC$UserStatus.expires = -102;
                    }
                    executeFast.bindInteger(3, tLRPC$UserStatus.expires);
                } else {
                    executeFast.bindInteger(3, 0);
                }
                executeFast.bindByteBuffer(4, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        }
    }

    public void updateChatDefaultBannedRights(int i, TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights, int i2) {
        if (tLRPC$TL_chatBannedRights != null && i != 0) {
            this.storageQueue.postRunnable(new Runnable(i, i2, tLRPC$TL_chatBannedRights) {
                public final /* synthetic */ int f$1;
                public final /* synthetic */ int f$2;
                public final /* synthetic */ TLRPC$TL_chatBannedRights f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateChatDefaultBannedRights$128$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateChatDefaultBannedRights$128 */
    public /* synthetic */ void lambda$updateChatDefaultBannedRights$128$MessagesStorage(int i, int i2, TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights) {
        NativeByteBuffer byteBufferValue;
        TLRPC$Chat tLRPC$Chat = null;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Integer.valueOf(i)}), new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                tLRPC$Chat = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
            }
            queryFinalized.dispose();
            if (tLRPC$Chat == null) {
                return;
            }
            if (tLRPC$Chat.default_banned_rights == null || i2 >= tLRPC$Chat.version) {
                tLRPC$Chat.default_banned_rights = tLRPC$TL_chatBannedRights;
                tLRPC$Chat.flags |= 262144;
                tLRPC$Chat.version = i2;
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE chats SET data = ? WHERE uid = ?");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$Chat.getObjectSize());
                tLRPC$Chat.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(1, nativeByteBuffer);
                executeFast.bindInteger(2, tLRPC$Chat.id);
                executeFast.step();
                nativeByteBuffer.reuse();
                executeFast.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void putChatsInternal(ArrayList<TLRPC$Chat> arrayList) throws Exception {
        if (arrayList != null && !arrayList.isEmpty()) {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chats VALUES(?, ?, ?)");
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$Chat tLRPC$Chat = arrayList.get(i);
                if (tLRPC$Chat.min) {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Integer.valueOf(tLRPC$Chat.id)}), new Object[0]);
                    if (queryFinalized.next()) {
                        try {
                            NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                            if (byteBufferValue != null) {
                                TLRPC$Chat TLdeserialize = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                byteBufferValue.reuse();
                                if (TLdeserialize != null) {
                                    TLdeserialize.title = tLRPC$Chat.title;
                                    TLdeserialize.photo = tLRPC$Chat.photo;
                                    TLdeserialize.broadcast = tLRPC$Chat.broadcast;
                                    TLdeserialize.verified = tLRPC$Chat.verified;
                                    TLdeserialize.megagroup = tLRPC$Chat.megagroup;
                                    TLdeserialize.call_not_empty = tLRPC$Chat.call_not_empty;
                                    TLdeserialize.call_active = tLRPC$Chat.call_active;
                                    TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights = tLRPC$Chat.default_banned_rights;
                                    if (tLRPC$TL_chatBannedRights != null) {
                                        TLdeserialize.default_banned_rights = tLRPC$TL_chatBannedRights;
                                        TLdeserialize.flags |= 262144;
                                    }
                                    TLRPC$TL_chatAdminRights tLRPC$TL_chatAdminRights = tLRPC$Chat.admin_rights;
                                    if (tLRPC$TL_chatAdminRights != null) {
                                        TLdeserialize.admin_rights = tLRPC$TL_chatAdminRights;
                                        TLdeserialize.flags |= 16384;
                                    }
                                    TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights2 = tLRPC$Chat.banned_rights;
                                    if (tLRPC$TL_chatBannedRights2 != null) {
                                        TLdeserialize.banned_rights = tLRPC$TL_chatBannedRights2;
                                        TLdeserialize.flags |= 32768;
                                    }
                                    String str = tLRPC$Chat.username;
                                    if (str != null) {
                                        TLdeserialize.username = str;
                                        TLdeserialize.flags |= 64;
                                    } else {
                                        TLdeserialize.username = null;
                                        TLdeserialize.flags &= -65;
                                    }
                                    tLRPC$Chat = TLdeserialize;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    queryFinalized.dispose();
                }
                executeFast.requery();
                tLRPC$Chat.flags |= 131072;
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$Chat.getObjectSize());
                tLRPC$Chat.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, tLRPC$Chat.id);
                String str2 = tLRPC$Chat.title;
                if (str2 != null) {
                    executeFast.bindString(2, str2.toLowerCase());
                } else {
                    executeFast.bindString(2, "");
                }
                executeFast.bindByteBuffer(3, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        }
    }

    public void getUsersInternal(String str, ArrayList<TLRPC$User> arrayList) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, status FROM users WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC$User TLdeserialize = TLRPC$User.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            TLRPC$UserStatus tLRPC$UserStatus = TLdeserialize.status;
                            if (tLRPC$UserStatus != null) {
                                tLRPC$UserStatus.expires = queryFinalized.intValue(1);
                            }
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    public void getChatsInternal(String str, ArrayList<TLRPC$Chat> arrayList) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC$Chat TLdeserialize = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    public void getEncryptedChatsInternal(String str, ArrayList<TLRPC$EncryptedChat> arrayList, ArrayList<Integer> arrayList2) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, user, g, authkey, ttl, layer, seq_in, seq_out, use_count, exchange_id, key_date, fprint, fauthkey, khash, in_seq_no, admin_id, mtproto_seq FROM enc_chats WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC$EncryptedChat TLdeserialize = TLRPC$EncryptedChat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            int intValue = queryFinalized.intValue(1);
                            TLdeserialize.user_id = intValue;
                            if (arrayList2 != null && !arrayList2.contains(Integer.valueOf(intValue))) {
                                arrayList2.add(Integer.valueOf(TLdeserialize.user_id));
                            }
                            TLdeserialize.a_or_b = queryFinalized.byteArrayValue(2);
                            TLdeserialize.auth_key = queryFinalized.byteArrayValue(3);
                            TLdeserialize.ttl = queryFinalized.intValue(4);
                            TLdeserialize.layer = queryFinalized.intValue(5);
                            TLdeserialize.seq_in = queryFinalized.intValue(6);
                            TLdeserialize.seq_out = queryFinalized.intValue(7);
                            int intValue2 = queryFinalized.intValue(8);
                            TLdeserialize.key_use_count_in = (short) (intValue2 >> 16);
                            TLdeserialize.key_use_count_out = (short) intValue2;
                            TLdeserialize.exchange_id = queryFinalized.longValue(9);
                            TLdeserialize.key_create_date = queryFinalized.intValue(10);
                            TLdeserialize.future_key_fingerprint = queryFinalized.longValue(11);
                            TLdeserialize.future_auth_key = queryFinalized.byteArrayValue(12);
                            TLdeserialize.key_hash = queryFinalized.byteArrayValue(13);
                            TLdeserialize.in_seq_no = queryFinalized.intValue(14);
                            int intValue3 = queryFinalized.intValue(15);
                            if (intValue3 != 0) {
                                TLdeserialize.admin_id = intValue3;
                            }
                            TLdeserialize.mtproto_seq = queryFinalized.intValue(16);
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: putUsersAndChatsInternal */
    public void lambda$putUsersAndChats$129(ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, boolean z) {
        if (z) {
            try {
                this.database.beginTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        putUsersInternal(arrayList);
        putChatsInternal(arrayList2);
        if (z) {
            this.database.commitTransaction();
        }
    }

    public void putUsersAndChats(ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, boolean z, boolean z2) {
        if (arrayList != null && arrayList.isEmpty() && arrayList2 != null && arrayList2.isEmpty()) {
            return;
        }
        if (z2) {
            this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2, z) {
                public final /* synthetic */ ArrayList f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ boolean f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putUsersAndChats$129$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$putUsersAndChats$129(arrayList, arrayList2, z);
        }
    }

    public void removeFromDownloadQueue(long j, int i, boolean z) {
        this.storageQueue.postRunnable(new Runnable(z, i, j) {
            public final /* synthetic */ boolean f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ long f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$removeFromDownloadQueue$130$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$removeFromDownloadQueue$130 */
    public /* synthetic */ void lambda$removeFromDownloadQueue$130$MessagesStorage(boolean z, int i, long j) {
        if (z) {
            try {
                SQLiteDatabase sQLiteDatabase = this.database;
                Locale locale = Locale.US;
                SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized(String.format(locale, "SELECT min(date) FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(i)}), new Object[0]);
                int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : -1;
                queryFinalized.dispose();
                if (intValue != -1) {
                    this.database.executeFast(String.format(locale, "UPDATE download_queue SET date = %d WHERE uid = %d AND type = %d", new Object[]{Integer.valueOf(intValue - 1), Long.valueOf(j), Integer.valueOf(i)})).stepThis().dispose();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(j), Integer.valueOf(i)})).stepThis().dispose();
        }
    }

    private void deleteFromDownloadQueue(ArrayList<Pair<Long, Integer>> arrayList, boolean z) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (z) {
                try {
                    this.database.beginTransaction();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return;
                }
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("DELETE FROM download_queue WHERE uid = ? AND type = ?");
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                Pair pair = arrayList.get(i);
                executeFast.requery();
                executeFast.bindLong(1, ((Long) pair.first).longValue());
                executeFast.bindInteger(2, ((Integer) pair.second).intValue());
                executeFast.step();
            }
            executeFast.dispose();
            if (z) {
                this.database.commitTransaction();
            }
            AndroidUtilities.runOnUIThread(new Runnable(arrayList) {
                public final /* synthetic */ ArrayList f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$deleteFromDownloadQueue$131$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$deleteFromDownloadQueue$131 */
    public /* synthetic */ void lambda$deleteFromDownloadQueue$131$MessagesStorage(ArrayList arrayList) {
        getDownloadController().cancelDownloading(arrayList);
    }

    public void clearDownloadQueue(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearDownloadQueue$132$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$clearDownloadQueue$132 */
    public /* synthetic */ void lambda$clearDownloadQueue$132$MessagesStorage(int i) {
        if (i == 0) {
            try {
                this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(i)})).stepThis().dispose();
        }
    }

    public void getDownloadQueue(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDownloadQueue$134$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:10:0x005d, code lost:
        r3 = r5.ttl_seconds;
     */
    /* renamed from: lambda$getDownloadQueue$134 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDownloadQueue$134$MessagesStorage(int r9) {
        /*
            r8 = this;
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0096 }
            r0.<init>()     // Catch:{ Exception -> 0x0096 }
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0096 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0096 }
            java.lang.String r3 = "SELECT uid, type, data, parent FROM download_queue WHERE type = %d ORDER BY date DESC LIMIT 3"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0096 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0096 }
            r7 = 0
            r5[r7] = r6     // Catch:{ Exception -> 0x0096 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0096 }
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0096 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0096 }
        L_0x001f:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0096 }
            if (r2 == 0) goto L_0x008a
            org.telegram.messenger.DownloadObject r2 = new org.telegram.messenger.DownloadObject     // Catch:{ Exception -> 0x0096 }
            r2.<init>()     // Catch:{ Exception -> 0x0096 }
            int r3 = r1.intValue(r4)     // Catch:{ Exception -> 0x0096 }
            r2.type = r3     // Catch:{ Exception -> 0x0096 }
            long r5 = r1.longValue(r7)     // Catch:{ Exception -> 0x0096 }
            r2.id = r5     // Catch:{ Exception -> 0x0096 }
            r3 = 3
            java.lang.String r3 = r1.stringValue(r3)     // Catch:{ Exception -> 0x0096 }
            r2.parent = r3     // Catch:{ Exception -> 0x0096 }
            r3 = 2
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r3)     // Catch:{ Exception -> 0x0096 }
            if (r3 == 0) goto L_0x0086
            int r5 = r3.readInt32(r7)     // Catch:{ Exception -> 0x0096 }
            org.telegram.tgnet.TLRPC$MessageMedia r5 = org.telegram.tgnet.TLRPC$MessageMedia.TLdeserialize(r3, r5, r7)     // Catch:{ Exception -> 0x0096 }
            r3.reuse()     // Catch:{ Exception -> 0x0096 }
            org.telegram.tgnet.TLRPC$Document r3 = r5.document     // Catch:{ Exception -> 0x0096 }
            r6 = 60
            if (r3 == 0) goto L_0x0069
            r2.object = r3     // Catch:{ Exception -> 0x0096 }
            boolean r3 = org.telegram.messenger.MessageObject.isVideoDocument(r3)     // Catch:{ Exception -> 0x0096 }
            if (r3 == 0) goto L_0x0065
            int r3 = r5.ttl_seconds     // Catch:{ Exception -> 0x0096 }
            if (r3 <= 0) goto L_0x0065
            if (r3 > r6) goto L_0x0065
            r3 = 1
            goto L_0x0066
        L_0x0065:
            r3 = 0
        L_0x0066:
            r2.secret = r3     // Catch:{ Exception -> 0x0096 }
            goto L_0x007a
        L_0x0069:
            org.telegram.tgnet.TLRPC$Photo r3 = r5.photo     // Catch:{ Exception -> 0x0096 }
            if (r3 == 0) goto L_0x007a
            r2.object = r3     // Catch:{ Exception -> 0x0096 }
            int r3 = r5.ttl_seconds     // Catch:{ Exception -> 0x0096 }
            if (r3 <= 0) goto L_0x0077
            if (r3 > r6) goto L_0x0077
            r3 = 1
            goto L_0x0078
        L_0x0077:
            r3 = 0
        L_0x0078:
            r2.secret = r3     // Catch:{ Exception -> 0x0096 }
        L_0x007a:
            int r3 = r5.flags     // Catch:{ Exception -> 0x0096 }
            r5 = -2147483648(0xfffffffvar_, float:-0.0)
            r3 = r3 & r5
            if (r3 == 0) goto L_0x0083
            r3 = 1
            goto L_0x0084
        L_0x0083:
            r3 = 0
        L_0x0084:
            r2.forceCache = r3     // Catch:{ Exception -> 0x0096 }
        L_0x0086:
            r0.add(r2)     // Catch:{ Exception -> 0x0096 }
            goto L_0x001f
        L_0x008a:
            r1.dispose()     // Catch:{ Exception -> 0x0096 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$BVDIaBmwAilZ04t35VnTQY4var_k r1 = new org.telegram.messenger.-$$Lambda$MessagesStorage$BVDIaBmwAilZ04t35VnTQY4var_k     // Catch:{ Exception -> 0x0096 }
            r1.<init>(r9, r0)     // Catch:{ Exception -> 0x0096 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x0096 }
            goto L_0x009a
        L_0x0096:
            r9 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)
        L_0x009a:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDownloadQueue$134$MessagesStorage(int):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$133 */
    public /* synthetic */ void lambda$null$133$MessagesStorage(int i, ArrayList arrayList) {
        getDownloadController().processDownloadObjects(i, arrayList);
    }

    private int getMessageMediaType(TLRPC$Message tLRPC$Message) {
        int i;
        if (!(tLRPC$Message instanceof TLRPC$TL_message_secret)) {
            if (tLRPC$Message instanceof TLRPC$TL_message) {
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
                if (((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) || (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument)) && tLRPC$MessageMedia.ttl_seconds != 0) {
                    return 1;
                }
            }
            if ((tLRPC$Message.media instanceof TLRPC$TL_messageMediaPhoto) || MessageObject.isVideoMessage(tLRPC$Message)) {
                return 0;
            }
            return -1;
        } else if ((((tLRPC$Message.media instanceof TLRPC$TL_messageMediaPhoto) || MessageObject.isGifMessage(tLRPC$Message)) && (i = tLRPC$Message.ttl) > 0 && i <= 60) || MessageObject.isVoiceMessage(tLRPC$Message) || MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message)) {
            return 1;
        } else {
            if ((tLRPC$Message.media instanceof TLRPC$TL_messageMediaPhoto) || MessageObject.isVideoMessage(tLRPC$Message)) {
                return 0;
            }
            return -1;
        }
    }

    public void putWebPages(LongSparseArray<TLRPC$WebPage> longSparseArray) {
        if (!isEmpty((LongSparseArray<?>) longSparseArray)) {
            this.storageQueue.postRunnable(new Runnable(longSparseArray) {
                public final /* synthetic */ LongSparseArray f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putWebPages$136$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putWebPages$136 */
    public /* synthetic */ void lambda$putWebPages$136$MessagesStorage(LongSparseArray longSparseArray) {
        try {
            ArrayList arrayList = new ArrayList();
            for (int i = 0; i < longSparseArray.size(); i++) {
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT mid FROM webpage_pending WHERE id = " + longSparseArray.keyAt(i), new Object[0]);
                ArrayList arrayList2 = new ArrayList();
                while (queryFinalized.next()) {
                    arrayList2.add(Long.valueOf(queryFinalized.longValue(0)));
                }
                queryFinalized.dispose();
                if (!arrayList2.isEmpty()) {
                    SQLiteCursor queryFinalized2 = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, data FROM messages WHERE mid IN (%s)", new Object[]{TextUtils.join(",", arrayList2)}), new Object[0]);
                    while (queryFinalized2.next()) {
                        int intValue = queryFinalized2.intValue(0);
                        NativeByteBuffer byteBufferValue = queryFinalized2.byteBufferValue(1);
                        if (byteBufferValue != null) {
                            TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                            byteBufferValue.reuse();
                            TLRPC$MessageMedia tLRPC$MessageMedia = TLdeserialize.media;
                            if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) {
                                TLdeserialize.id = intValue;
                                tLRPC$MessageMedia.webpage = (TLRPC$WebPage) longSparseArray.valueAt(i);
                                arrayList.add(TLdeserialize);
                            }
                        }
                    }
                    queryFinalized2.dispose();
                }
            }
            if (!arrayList.isEmpty()) {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET data = ? WHERE mid = ?");
                SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE media_v2 SET data = ? WHERE mid = ?");
                for (int i2 = 0; i2 < arrayList.size(); i2++) {
                    TLRPC$Message tLRPC$Message = (TLRPC$Message) arrayList.get(i2);
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$Message.getObjectSize());
                    tLRPC$Message.serializeToStream(nativeByteBuffer);
                    long j = (long) tLRPC$Message.id;
                    int i3 = tLRPC$Message.peer_id.channel_id;
                    if (i3 != 0) {
                        j |= ((long) i3) << 32;
                    }
                    executeFast.requery();
                    executeFast.bindByteBuffer(1, nativeByteBuffer);
                    executeFast.bindLong(2, j);
                    executeFast.step();
                    executeFast2.requery();
                    executeFast2.bindByteBuffer(1, nativeByteBuffer);
                    executeFast2.bindLong(2, j);
                    executeFast2.step();
                    nativeByteBuffer.reuse();
                }
                executeFast.dispose();
                executeFast2.dispose();
                this.database.commitTransaction();
                AndroidUtilities.runOnUIThread(new Runnable(arrayList) {
                    public final /* synthetic */ ArrayList f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$135$MessagesStorage(this.f$1);
                    }
                });
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$135 */
    public /* synthetic */ void lambda$null$135$MessagesStorage(ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.didReceivedWebpages, arrayList);
    }

    public void overwriteChannel(int i, TLRPC$TL_updates_channelDifferenceTooLong tLRPC$TL_updates_channelDifferenceTooLong, int i2) {
        this.storageQueue.postRunnable(new Runnable(i, i2, tLRPC$TL_updates_channelDifferenceTooLong) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ TLRPC$TL_updates_channelDifferenceTooLong f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$overwriteChannel$138$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:11:0x014e A[Catch:{ Exception -> 0x0181 }] */
    /* JADX WARNING: Removed duplicated region for block: B:12:0x0150 A[Catch:{ Exception -> 0x0181 }] */
    /* JADX WARNING: Removed duplicated region for block: B:15:0x016f A[Catch:{ Exception -> 0x0181 }] */
    /* JADX WARNING: Removed duplicated region for block: B:21:? A[RETURN, SYNTHETIC] */
    /* renamed from: lambda$overwriteChannel$138 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$overwriteChannel$138$MessagesStorage(int r11, int r12, org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong r13) {
        /*
            r10 = this;
            int r0 = -r11
            long r0 = (long) r0
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r3.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r4 = "SELECT pinned FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x0181 }
            r3.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0181 }
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x0181 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0181 }
            r5 = 1
            if (r3 != 0) goto L_0x002a
            r3 = 0
            if (r12 == 0) goto L_0x0028
            r6 = 1
            goto L_0x002f
        L_0x0028:
            r6 = 0
            goto L_0x002f
        L_0x002a:
            int r3 = r2.intValue(r4)     // Catch:{ Exception -> 0x0181 }
            goto L_0x0028
        L_0x002f:
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM chat_pinned_count WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM chat_pinned_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM messages WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM bot_keyboard WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM media_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM messages_holes WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0181 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0181 }
            r7.<init>()     // Catch:{ Exception -> 0x0181 }
            java.lang.String r8 = "DELETE FROM media_holes_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0181 }
            r7.append(r0)     // Catch:{ Exception -> 0x0181 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0181 }
            r2.dispose()     // Catch:{ Exception -> 0x0181 }
            org.telegram.messenger.MediaDataController r2 = r10.getMediaDataController()     // Catch:{ Exception -> 0x0181 }
            r7 = 0
            r2.clearBotKeyboard(r0, r7)     // Catch:{ Exception -> 0x0181 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r2 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0181 }
            r2.<init>()     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r8 = r2.chats     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r9 = r13.chats     // Catch:{ Exception -> 0x0181 }
            r8.addAll(r9)     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r8 = r2.users     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r9 = r13.users     // Catch:{ Exception -> 0x0181 }
            r8.addAll(r9)     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r8 = r2.messages     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r9 = r13.messages     // Catch:{ Exception -> 0x0181 }
            r8.addAll(r9)     // Catch:{ Exception -> 0x0181 }
            org.telegram.tgnet.TLRPC$Dialog r13 = r13.dialog     // Catch:{ Exception -> 0x0181 }
            r13.id = r0     // Catch:{ Exception -> 0x0181 }
            r13.flags = r5     // Catch:{ Exception -> 0x0181 }
            r13.notify_settings = r7     // Catch:{ Exception -> 0x0181 }
            if (r3 == 0) goto L_0x0150
            r8 = 1
            goto L_0x0151
        L_0x0150:
            r8 = 0
        L_0x0151:
            r13.pinned = r8     // Catch:{ Exception -> 0x0181 }
            r13.pinnedNum = r3     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r3 = r2.dialogs     // Catch:{ Exception -> 0x0181 }
            r3.add(r13)     // Catch:{ Exception -> 0x0181 }
            r10.putDialogsInternal(r2, r4)     // Catch:{ Exception -> 0x0181 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0181 }
            r13.<init>()     // Catch:{ Exception -> 0x0181 }
            r10.updateDialogsWithDeletedMessages(r13, r7, r4, r11)     // Catch:{ Exception -> 0x0181 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$r6HHbeTlgGpxfARBVTtnbSHcuhM r13 = new org.telegram.messenger.-$$Lambda$MessagesStorage$r6HHbeTlgGpxfARBVTtnbSHcuhM     // Catch:{ Exception -> 0x0181 }
            r13.<init>(r0)     // Catch:{ Exception -> 0x0181 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r13)     // Catch:{ Exception -> 0x0181 }
            if (r6 == 0) goto L_0x0185
            if (r12 != r5) goto L_0x0179
            org.telegram.messenger.MessagesController r12 = r10.getMessagesController()     // Catch:{ Exception -> 0x0181 }
            r12.checkChatInviter(r11, r5)     // Catch:{ Exception -> 0x0181 }
            goto L_0x0185
        L_0x0179:
            org.telegram.messenger.MessagesController r12 = r10.getMessagesController()     // Catch:{ Exception -> 0x0181 }
            r12.generateJoinMessage(r11, r4)     // Catch:{ Exception -> 0x0181 }
            goto L_0x0185
        L_0x0181:
            r11 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)
        L_0x0185:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$overwriteChannel$138$MessagesStorage(int, int, org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$137 */
    public /* synthetic */ void lambda$null$137$MessagesStorage(long j) {
        getNotificationCenter().postNotificationName(NotificationCenter.removeAllMessagesFromDialog, Long.valueOf(j), Boolean.TRUE);
    }

    public void putChannelViews(SparseArray<SparseIntArray> sparseArray, SparseArray<SparseIntArray> sparseArray2, SparseArray<SparseArray<TLRPC$TL_messageReplies>> sparseArray3, boolean z, boolean z2) {
        if (!isEmpty((SparseArray<?>) sparseArray) || !isEmpty((SparseArray<?>) sparseArray2) || !isEmpty((SparseArray<?>) sparseArray3)) {
            this.storageQueue.postRunnable(new Runnable(sparseArray, z2, sparseArray2, sparseArray3, z) {
                public final /* synthetic */ SparseArray f$1;
                public final /* synthetic */ boolean f$2;
                public final /* synthetic */ SparseArray f$3;
                public final /* synthetic */ SparseArray f$4;
                public final /* synthetic */ boolean f$5;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                    this.f$5 = r6;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putChannelViews$139$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putChannelViews$139 */
    public /* synthetic */ void lambda$putChannelViews$139$MessagesStorage(SparseArray sparseArray, boolean z, SparseArray sparseArray2, SparseArray sparseArray3, boolean z2) {
        int i;
        int i2;
        NativeByteBuffer byteBufferValue;
        SparseArray sparseArray4 = sparseArray;
        SparseArray sparseArray5 = sparseArray2;
        SparseArray sparseArray6 = sparseArray3;
        try {
            this.database.beginTransaction();
            char c = ' ';
            if (!isEmpty((SparseArray<?>) sparseArray)) {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET media = max((SELECT media FROM messages WHERE mid = ?), ?) WHERE mid = ?");
                int i3 = 0;
                while (i3 < sparseArray.size()) {
                    int keyAt = sparseArray4.keyAt(i3);
                    SparseIntArray sparseIntArray = (SparseIntArray) sparseArray4.get(keyAt);
                    int i4 = 0;
                    while (i4 < sparseIntArray.size()) {
                        int i5 = sparseIntArray.get(sparseIntArray.keyAt(i4));
                        int i6 = i3;
                        long keyAt2 = (long) sparseIntArray.keyAt(i4);
                        if (z) {
                            keyAt2 |= ((long) (-keyAt)) << 32;
                        }
                        executeFast.requery();
                        executeFast.bindLong(1, keyAt2);
                        executeFast.bindInteger(2, i5);
                        executeFast.bindLong(3, keyAt2);
                        executeFast.step();
                        i4++;
                        i3 = i6;
                    }
                    i3++;
                }
                executeFast.dispose();
            }
            if (!isEmpty((SparseArray<?>) sparseArray2)) {
                SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE messages SET forwards = max((SELECT forwards FROM messages WHERE mid = ?), ?) WHERE mid = ?");
                for (int i7 = 0; i7 < sparseArray2.size(); i7++) {
                    int keyAt3 = sparseArray5.keyAt(i7);
                    SparseIntArray sparseIntArray2 = (SparseIntArray) sparseArray5.get(keyAt3);
                    for (int i8 = 0; i8 < sparseIntArray2.size(); i8++) {
                        int i9 = sparseIntArray2.get(sparseIntArray2.keyAt(i8));
                        long keyAt4 = (long) sparseIntArray2.keyAt(i8);
                        if (z) {
                            keyAt4 |= ((long) (-keyAt3)) << 32;
                        }
                        executeFast2.requery();
                        executeFast2.bindLong(1, keyAt4);
                        executeFast2.bindInteger(2, i9);
                        executeFast2.bindLong(3, keyAt4);
                        executeFast2.step();
                    }
                }
                executeFast2.dispose();
            }
            if (!isEmpty((SparseArray<?>) sparseArray3)) {
                SQLitePreparedStatement executeFast3 = this.database.executeFast("UPDATE messages SET replies_data = ? WHERE mid = ?");
                int i10 = 0;
                while (i10 < sparseArray3.size()) {
                    int keyAt5 = sparseArray6.keyAt(i10);
                    SparseArray sparseArray7 = (SparseArray) sparseArray6.get(keyAt5);
                    int i11 = 0;
                    while (i11 < sparseArray7.size()) {
                        long keyAt6 = (long) sparseArray7.keyAt(i11);
                        if (z) {
                            keyAt6 |= ((long) (-keyAt5)) << c;
                        }
                        TLRPC$TL_messageReplies tLRPC$TL_messageReplies = null;
                        SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT replies_data FROM messages WHERE mid = " + keyAt6, new Object[0]);
                        boolean next = queryFinalized.next();
                        if (next && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                            tLRPC$TL_messageReplies = TLRPC$TL_messageReplies.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            byteBufferValue.reuse();
                        }
                        queryFinalized.dispose();
                        if (next) {
                            TLRPC$TL_messageReplies tLRPC$TL_messageReplies2 = (TLRPC$TL_messageReplies) sparseArray7.get(sparseArray7.keyAt(i11));
                            if (z2 || tLRPC$TL_messageReplies == null || (i2 = tLRPC$TL_messageReplies.replies_pts) == 0 || tLRPC$TL_messageReplies2.replies_pts > i2 || tLRPC$TL_messageReplies2.read_max_id > tLRPC$TL_messageReplies.read_max_id || tLRPC$TL_messageReplies2.max_id > tLRPC$TL_messageReplies.max_id) {
                                if (z2) {
                                    if (tLRPC$TL_messageReplies == null) {
                                        tLRPC$TL_messageReplies = new TLRPC$TL_messageReplies();
                                        tLRPC$TL_messageReplies.flags |= 2;
                                    }
                                    tLRPC$TL_messageReplies.replies += tLRPC$TL_messageReplies2.replies;
                                    int size = tLRPC$TL_messageReplies2.recent_repliers.size();
                                    int i12 = 0;
                                    while (i12 < size) {
                                        int peerId = MessageObject.getPeerId(tLRPC$TL_messageReplies2.recent_repliers.get(i12));
                                        int size2 = tLRPC$TL_messageReplies.recent_repliers.size();
                                        int i13 = 0;
                                        while (i13 < size2) {
                                            if (peerId == MessageObject.getPeerId(tLRPC$TL_messageReplies.recent_repliers.get(i13))) {
                                                tLRPC$TL_messageReplies.recent_repliers.remove(i13);
                                                i13--;
                                                size2--;
                                            }
                                            i13++;
                                            SparseArray sparseArray8 = sparseArray3;
                                        }
                                        i12++;
                                        SparseArray sparseArray9 = sparseArray3;
                                    }
                                    tLRPC$TL_messageReplies.recent_repliers.addAll(0, tLRPC$TL_messageReplies2.recent_repliers);
                                    while (tLRPC$TL_messageReplies.recent_repliers.size() > 3) {
                                        tLRPC$TL_messageReplies.recent_repliers.remove(0);
                                    }
                                    tLRPC$TL_messageReplies2 = tLRPC$TL_messageReplies;
                                }
                                if (tLRPC$TL_messageReplies != null && (i = tLRPC$TL_messageReplies.read_max_id) > tLRPC$TL_messageReplies2.read_max_id) {
                                    tLRPC$TL_messageReplies2.read_max_id = i;
                                }
                                executeFast3.requery();
                                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$TL_messageReplies2.getObjectSize());
                                tLRPC$TL_messageReplies2.serializeToStream(nativeByteBuffer);
                                executeFast3.bindByteBuffer(1, nativeByteBuffer);
                                executeFast3.bindLong(2, keyAt6);
                                executeFast3.step();
                                nativeByteBuffer.reuse();
                                i11++;
                                SparseArray sparseArray10 = sparseArray3;
                                c = ' ';
                            }
                        }
                        i11++;
                        SparseArray sparseArray102 = sparseArray3;
                        c = ' ';
                    }
                    i10++;
                    sparseArray6 = sparseArray3;
                    c = ' ';
                }
                executeFast3.dispose();
            }
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: updateRepliesMaxReadIdInternal */
    public void lambda$updateRepliesMaxReadId$140(int i, int i2, int i3) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET replies_data = ? WHERE mid = ?");
            long j = (((long) i) << 32) | ((long) i2);
            TLRPC$TL_messageReplies tLRPC$TL_messageReplies = null;
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT replies_data FROM messages WHERE mid = " + j, new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                tLRPC$TL_messageReplies = TLRPC$TL_messageReplies.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
            }
            queryFinalized.dispose();
            if (tLRPC$TL_messageReplies != null) {
                tLRPC$TL_messageReplies.read_max_id = i3;
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$TL_messageReplies.getObjectSize());
                tLRPC$TL_messageReplies.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(1, nativeByteBuffer);
                executeFast.bindLong(2, j);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateRepliesMaxReadId(int i, int i2, int i3, boolean z) {
        if (z) {
            this.storageQueue.postRunnable(new Runnable(i, i2, i3) {
                public final /* synthetic */ int f$1;
                public final /* synthetic */ int f$2;
                public final /* synthetic */ int f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateRepliesMaxReadId$140$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$updateRepliesMaxReadId$140(i, i2, i3);
        }
    }

    public void updateRepliesCount(int i, int i2, ArrayList<TLRPC$Peer> arrayList, int i3, int i4) {
        this.storageQueue.postRunnable(new Runnable(i2, i, i4, arrayList, i3) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;
            public final /* synthetic */ ArrayList f$4;
            public final /* synthetic */ int f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateRepliesCount$141$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateRepliesCount$141 */
    public /* synthetic */ void lambda$updateRepliesCount$141$MessagesStorage(int i, int i2, int i3, ArrayList arrayList, int i4) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET replies_data = ? WHERE mid = ?");
            long j = (((long) i2) << 32) | ((long) i);
            TLRPC$TL_messageReplies tLRPC$TL_messageReplies = null;
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT replies_data FROM messages WHERE mid = " + j, new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                tLRPC$TL_messageReplies = TLRPC$TL_messageReplies.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
            }
            queryFinalized.dispose();
            if (tLRPC$TL_messageReplies != null) {
                int i5 = tLRPC$TL_messageReplies.replies + i3;
                tLRPC$TL_messageReplies.replies = i5;
                if (i5 < 0) {
                    tLRPC$TL_messageReplies.replies = 0;
                }
                if (arrayList != null) {
                    tLRPC$TL_messageReplies.recent_repliers = arrayList;
                    tLRPC$TL_messageReplies.flags |= 2;
                }
                if (i4 != 0) {
                    tLRPC$TL_messageReplies.max_id = i4;
                }
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$TL_messageReplies.getObjectSize());
                tLRPC$TL_messageReplies.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(1, nativeByteBuffer);
                executeFast.bindLong(2, j);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private boolean isValidKeyboardToSave(TLRPC$Message tLRPC$Message) {
        TLRPC$ReplyMarkup tLRPC$ReplyMarkup = tLRPC$Message.reply_markup;
        return tLRPC$ReplyMarkup != null && !(tLRPC$ReplyMarkup instanceof TLRPC$TL_replyInlineMarkup) && (!tLRPC$ReplyMarkup.selective || tLRPC$Message.mentioned);
    }

    public void updateMessageVerifyFlags(ArrayList<TLRPC$Message> arrayList) {
        Utilities.stageQueue.postRunnable(new Runnable(arrayList) {
            public final /* synthetic */ ArrayList f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateMessageVerifyFlags$142$MessagesStorage(this.f$1);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateMessageVerifyFlags$142 */
    public /* synthetic */ void lambda$updateMessageVerifyFlags$142$MessagesStorage(ArrayList arrayList) {
        try {
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET imp = ? WHERE mid = ?");
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC$Message tLRPC$Message = (TLRPC$Message) arrayList.get(i);
                executeFast.requery();
                int i2 = tLRPC$Message.stickerVerified;
                executeFast.bindInteger(1, i2 == 0 ? 1 : i2 == 2 ? 2 : 0);
                executeFast.bindLong(2, (long) tLRPC$Message.id);
                executeFast.step();
            }
            executeFast.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v64, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v49, resolved type: java.lang.Integer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v53, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v5, resolved type: java.lang.Integer} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:189:0x051d A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:201:0x0543 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:204:0x0572 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:211:0x058b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:212:0x0593 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:215:0x05a0 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:217:0x05a4 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:223:0x05b2 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:224:0x05b4 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:227:0x05c5 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:228:0x05db A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:231:0x05e5 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:236:0x05f2 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:239:0x0606 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:240:0x061b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:243:0x0625 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:251:0x065b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:255:0x068b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:259:0x06b0 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:263:0x06ce A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:282:0x0715 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:283:0x0727 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:309:0x07af A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x024f A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:97:0x0293 A[Catch:{ Exception -> 0x0112 }] */
    /* renamed from: putMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$putMessages$144(java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r40, boolean r41, boolean r42, int r43, boolean r44, boolean r45) {
        /*
            r39 = this;
            r1 = r39
            r2 = r40
            java.lang.String r3 = "REPLACE INTO randoms VALUES(?, ?)"
            r5 = 32
            r6 = 5
            if (r45 == 0) goto L_0x00d0
            if (r41 == 0) goto L_0x0012
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0112 }
            r14.beginTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x0012:
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r15 = "REPLACE INTO scheduled_messages VALUES(?, ?, ?, ?, ?, ?, NULL)"
            org.telegram.SQLite.SQLitePreparedStatement r14 = r14.executeFast(r15)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r15.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r15.<init>()     // Catch:{ Exception -> 0x0112 }
            r13 = 0
        L_0x0026:
            int r7 = r40.size()     // Catch:{ Exception -> 0x0112 }
            if (r13 >= r7) goto L_0x00b0
            java.lang.Object r7 = r2.get(r13)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x0112 }
            boolean r8 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty     // Catch:{ Exception -> 0x0112 }
            if (r8 == 0) goto L_0x0037
            goto L_0x00aa
        L_0x0037:
            r1.fixUnsupportedMedia(r7)     // Catch:{ Exception -> 0x0112 }
            r14.requery()     // Catch:{ Exception -> 0x0112 }
            int r8 = r7.id     // Catch:{ Exception -> 0x0112 }
            long r9 = (long) r8     // Catch:{ Exception -> 0x0112 }
            int r8 = r7.local_id     // Catch:{ Exception -> 0x0112 }
            if (r8 == 0) goto L_0x0045
            long r9 = (long) r8     // Catch:{ Exception -> 0x0112 }
        L_0x0045:
            org.telegram.tgnet.TLRPC$Peer r8 = r7.peer_id     // Catch:{ Exception -> 0x0112 }
            int r8 = r8.channel_id     // Catch:{ Exception -> 0x0112 }
            if (r8 == 0) goto L_0x004e
            long r11 = (long) r8     // Catch:{ Exception -> 0x0112 }
            long r11 = r11 << r5
            long r9 = r9 | r11
        L_0x004e:
            org.telegram.tgnet.NativeByteBuffer r8 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            int r11 = r7.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r8.<init>((int) r11)     // Catch:{ Exception -> 0x0112 }
            r7.serializeToStream(r8)     // Catch:{ Exception -> 0x0112 }
            long r11 = org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x0112 }
            r5 = 1
            r14.bindLong(r5, r9)     // Catch:{ Exception -> 0x0112 }
            r5 = 2
            r14.bindLong(r5, r11)     // Catch:{ Exception -> 0x0112 }
            int r5 = r7.send_state     // Catch:{ Exception -> 0x0112 }
            r4 = 3
            r14.bindInteger(r4, r5)     // Catch:{ Exception -> 0x0112 }
            int r4 = r7.date     // Catch:{ Exception -> 0x0112 }
            r5 = 4
            r14.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            r14.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r8)     // Catch:{ Exception -> 0x0112 }
            int r4 = r7.ttl     // Catch:{ Exception -> 0x0112 }
            r5 = 6
            r14.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            r14.step()     // Catch:{ Exception -> 0x0112 }
            long r4 = r7.random_id     // Catch:{ Exception -> 0x0112 }
            r17 = 0
            int r21 = (r4 > r17 ? 1 : (r4 == r17 ? 0 : -1))
            if (r21 == 0) goto L_0x0096
            r3.requery()     // Catch:{ Exception -> 0x0112 }
            long r4 = r7.random_id     // Catch:{ Exception -> 0x0112 }
            r7 = 1
            r3.bindLong(r7, r4)     // Catch:{ Exception -> 0x0112 }
            r4 = 2
            r3.bindLong(r4, r9)     // Catch:{ Exception -> 0x0112 }
            r3.step()     // Catch:{ Exception -> 0x0112 }
        L_0x0096:
            r8.reuse()     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r4 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0112 }
            boolean r4 = r15.contains(r4)     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x00aa
            java.lang.Long r4 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0112 }
            r15.add(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x00aa:
            int r13 = r13 + 1
            r5 = 32
            goto L_0x0026
        L_0x00b0:
            r14.dispose()     // Catch:{ Exception -> 0x0112 }
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r41 == 0) goto L_0x00bd
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0112 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x00bd:
            int r2 = r15.size()     // Catch:{ Exception -> 0x0112 }
            r13 = 0
        L_0x00c2:
            if (r13 >= r2) goto L_0x0b5e
            java.lang.Object r3 = r15.get(r13)     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ Exception -> 0x0112 }
            r1.broadcastScheduledMessagesChange(r3)     // Catch:{ Exception -> 0x0112 }
            int r13 = r13 + 1
            goto L_0x00c2
        L_0x00d0:
            if (r44 == 0) goto L_0x0116
            r5 = 0
            java.lang.Object r7 = r2.get(r5)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x0112 }
            long r8 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r10 = 0
            int r5 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r5 != 0) goto L_0x00e4
            org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x0112 }
        L_0x00e4:
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r8.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r9 = "SELECT last_mid FROM dialogs WHERE did = "
            r8.append(r9)     // Catch:{ Exception -> 0x0112 }
            long r9 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r8.append(r9)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r7 = r8.toString()     // Catch:{ Exception -> 0x0112 }
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r5.next()     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x010b
            int r7 = r5.intValue(r8)     // Catch:{ Exception -> 0x0112 }
            goto L_0x010c
        L_0x010b:
            r7 = -1
        L_0x010c:
            r5.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0116
            return
        L_0x0112:
            r0 = move-exception
        L_0x0113:
            r2 = r0
            goto L_0x0b5b
        L_0x0116:
            if (r41 == 0) goto L_0x011d
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0112 }
            r5.beginTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x011d:
            android.util.LongSparseArray r5 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r7 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r7.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r8.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r9 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r9.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r10 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r10.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r11 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r11.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r12.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r13 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r13.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r14 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r14.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r15 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r15.<init>()     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r6.executeFast(r4)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r6.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0112 }
            r44 = r9
            java.lang.String r9 = "REPLACE INTO download_queue VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r9)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x0112 }
            r22 = r8
            java.lang.String r8 = "REPLACE INTO webpage_pending VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r9.executeFast(r8)     // Catch:{ Exception -> 0x0112 }
            r28 = r3
            r26 = r6
            r27 = r8
            r6 = 0
            r8 = 0
            r9 = 0
            r25 = 0
        L_0x017c:
            int r3 = r40.size()     // Catch:{ Exception -> 0x0112 }
            if (r9 >= r3) goto L_0x02bf
            java.lang.Object r3 = r2.get(r9)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC$Message) r3     // Catch:{ Exception -> 0x0112 }
            r29 = r5
            int r5 = r3.id     // Catch:{ Exception -> 0x0112 }
            r30 = r4
            long r4 = (long) r5     // Catch:{ Exception -> 0x0112 }
            r31 = r7
            r32 = r8
            long r7 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            r17 = 0
            int r33 = (r7 > r17 ? 1 : (r7 == r17 ? 0 : -1))
            if (r33 != 0) goto L_0x019e
            org.telegram.messenger.MessageObject.getDialogId(r3)     // Catch:{ Exception -> 0x0112 }
        L_0x019e:
            org.telegram.tgnet.TLRPC$Peer r7 = r3.peer_id     // Catch:{ Exception -> 0x0112 }
            int r7 = r7.channel_id     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x01aa
            long r7 = (long) r7     // Catch:{ Exception -> 0x0112 }
            r20 = 32
            long r7 = r7 << r20
            long r4 = r4 | r7
        L_0x01aa:
            boolean r7 = r3.mentioned     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x01bb
            boolean r7 = r3.media_unread     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x01bb
            long r7 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0112 }
            r15.put(r4, r7)     // Catch:{ Exception -> 0x0112 }
        L_0x01bb:
            org.telegram.tgnet.TLRPC$MessageAction r7 = r3.action     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageActionHistoryClear     // Catch:{ Exception -> 0x0112 }
            java.lang.String r8 = ","
            if (r7 != 0) goto L_0x0244
            boolean r7 = org.telegram.messenger.MessageObject.isOut(r3)     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x01cd
            boolean r7 = r3.from_scheduled     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0244
        L_0x01cd:
            int r7 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r7 > 0) goto L_0x01d7
            boolean r7 = org.telegram.messenger.MessageObject.isUnread(r3)     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0244
        L_0x01d7:
            r33 = r6
            long r6 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r6 = r13.get(r6)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r6 = (java.lang.Integer) r6     // Catch:{ Exception -> 0x0112 }
            if (r6 != 0) goto L_0x021f
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r7.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r2 = "SELECT inbox_max FROM dialogs WHERE did = "
            r7.append(r2)     // Catch:{ Exception -> 0x0112 }
            r34 = r9
            r2 = r10
            long r9 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            r7.append(r9)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0112 }
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r10)     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0211
            int r7 = r6.intValue(r9)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0215
        L_0x0211:
            java.lang.Integer r7 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0112 }
        L_0x0215:
            r6.dispose()     // Catch:{ Exception -> 0x0112 }
            long r9 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            r13.put(r9, r7)     // Catch:{ Exception -> 0x0112 }
            r6 = r7
            goto L_0x0222
        L_0x021f:
            r34 = r9
            r2 = r10
        L_0x0222:
            int r7 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r7 < 0) goto L_0x022e
            int r6 = r6.intValue()     // Catch:{ Exception -> 0x0112 }
            int r7 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r6 >= r7) goto L_0x0249
        L_0x022e:
            int r6 = r12.length()     // Catch:{ Exception -> 0x0112 }
            if (r6 <= 0) goto L_0x0237
            r12.append(r8)     // Catch:{ Exception -> 0x0112 }
        L_0x0237:
            r12.append(r4)     // Catch:{ Exception -> 0x0112 }
            long r6 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x0112 }
            r14.put(r4, r6)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0249
        L_0x0244:
            r33 = r6
            r34 = r9
            r2 = r10
        L_0x0249:
            boolean r6 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r3)     // Catch:{ Exception -> 0x0112 }
            if (r6 == 0) goto L_0x0293
            if (r25 != 0) goto L_0x0268
            java.lang.StringBuilder r25 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r25.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r6 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r7 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r7.<init>()     // Catch:{ Exception -> 0x0112 }
            r9 = r25
            r38 = r7
            r7 = r6
            r6 = r38
            goto L_0x026e
        L_0x0268:
            r9 = r25
            r7 = r32
            r6 = r33
        L_0x026e:
            int r10 = r9.length()     // Catch:{ Exception -> 0x0112 }
            if (r10 <= 0) goto L_0x0277
            r9.append(r8)     // Catch:{ Exception -> 0x0112 }
        L_0x0277:
            r9.append(r4)     // Catch:{ Exception -> 0x0112 }
            r10 = r9
            long r8 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0112 }
            r7.put(r4, r8)     // Catch:{ Exception -> 0x0112 }
            int r8 = org.telegram.messenger.MediaDataController.getMediaType(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0112 }
            r6.put(r4, r8)     // Catch:{ Exception -> 0x0112 }
            r8 = r7
            r25 = r10
            goto L_0x0297
        L_0x0293:
            r8 = r32
            r6 = r33
        L_0x0297:
            boolean r4 = r1.isValidKeyboardToSave(r3)     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x02b2
            long r4 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r4 = r11.get(r4)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r4 = (org.telegram.tgnet.TLRPC$Message) r4     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x02ad
            int r4 = r4.id     // Catch:{ Exception -> 0x0112 }
            int r5 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r4 >= r5) goto L_0x02b2
        L_0x02ad:
            long r4 = r3.dialog_id     // Catch:{ Exception -> 0x0112 }
            r11.put(r4, r3)     // Catch:{ Exception -> 0x0112 }
        L_0x02b2:
            int r9 = r34 + 1
            r10 = r2
            r5 = r29
            r4 = r30
            r7 = r31
            r2 = r40
            goto L_0x017c
        L_0x02bf:
            r30 = r4
            r29 = r5
            r33 = r6
            r31 = r7
            r32 = r8
            r2 = r10
            r3 = 0
        L_0x02cb:
            int r4 = r11.size()     // Catch:{ Exception -> 0x0112 }
            if (r3 >= r4) goto L_0x02e5
            org.telegram.messenger.MediaDataController r4 = r39.getMediaDataController()     // Catch:{ Exception -> 0x0112 }
            long r5 = r11.keyAt(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r7 = r11.valueAt(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x0112 }
            r4.putBotKeyboard(r5, r7)     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + 1
            goto L_0x02cb
        L_0x02e5:
            java.lang.String r3 = ")"
            if (r25 == 0) goto L_0x03f8
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r6 = "SELECT mid, type FROM media_v2 WHERE mid IN("
            r5.append(r6)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r6 = r25.toString()     // Catch:{ Exception -> 0x0112 }
            r5.append(r6)     // Catch:{ Exception -> 0x0112 }
            r5.append(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x0112 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0112 }
            r5 = 0
        L_0x030b:
            boolean r7 = r4.next()     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0344
            long r7 = r4.longValue(r6)     // Catch:{ Exception -> 0x0112 }
            r6 = 1
            int r9 = r4.intValue(r6)     // Catch:{ Exception -> 0x0112 }
            r6 = r33
            java.lang.Object r10 = r6.get(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ Exception -> 0x0112 }
            int r10 = r10.intValue()     // Catch:{ Exception -> 0x0112 }
            if (r9 != r10) goto L_0x032e
            r10 = r32
            r10.remove(r7)     // Catch:{ Exception -> 0x0112 }
            goto L_0x033e
        L_0x032e:
            r10 = r32
            if (r5 != 0) goto L_0x0337
            android.util.LongSparseArray r5 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
        L_0x0337:
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0112 }
            r5.put(r7, r9)     // Catch:{ Exception -> 0x0112 }
        L_0x033e:
            r33 = r6
            r32 = r10
            r6 = 0
            goto L_0x030b
        L_0x0344:
            r10 = r32
            r6 = r33
            r4.dispose()     // Catch:{ Exception -> 0x0112 }
            android.util.SparseArray r4 = new android.util.SparseArray     // Catch:{ Exception -> 0x0112 }
            r4.<init>()     // Catch:{ Exception -> 0x0112 }
            r7 = 0
        L_0x0351:
            int r8 = r10.size()     // Catch:{ Exception -> 0x0112 }
            if (r7 >= r8) goto L_0x03f9
            long r8 = r10.keyAt(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r11 = r10.valueAt(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r11 = (java.lang.Long) r11     // Catch:{ Exception -> 0x0112 }
            r32 = r10
            long r10 = r11.longValue()     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r13 = r6.get(r8)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r13 = (java.lang.Integer) r13     // Catch:{ Exception -> 0x0112 }
            r33 = r6
            int r6 = r13.intValue()     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r6 = r4.get(r6)     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r6 = (android.util.LongSparseArray) r6     // Catch:{ Exception -> 0x0112 }
            if (r6 != 0) goto L_0x038e
            android.util.LongSparseArray r6 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            r16 = 0
            java.lang.Integer r25 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0112 }
            int r13 = r13.intValue()     // Catch:{ Exception -> 0x0112 }
            r4.put(r13, r6)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0396
        L_0x038e:
            java.lang.Object r13 = r6.get(r10)     // Catch:{ Exception -> 0x0112 }
            r25 = r13
            java.lang.Integer r25 = (java.lang.Integer) r25     // Catch:{ Exception -> 0x0112 }
        L_0x0396:
            if (r25 != 0) goto L_0x039d
            r13 = 0
            java.lang.Integer r25 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0112 }
        L_0x039d:
            int r13 = r25.intValue()     // Catch:{ Exception -> 0x0112 }
            r19 = 1
            int r13 = r13 + 1
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0112 }
            r6.put(r10, r13)     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x03f0
            r6 = -1
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r6 = r5.get(r8, r13)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r6 = (java.lang.Integer) r6     // Catch:{ Exception -> 0x0112 }
            int r6 = r6.intValue()     // Catch:{ Exception -> 0x0112 }
            if (r6 < 0) goto L_0x03f0
            java.lang.Object r8 = r4.get(r6)     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r8 = (android.util.LongSparseArray) r8     // Catch:{ Exception -> 0x0112 }
            if (r8 != 0) goto L_0x03d5
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r8.<init>()     // Catch:{ Exception -> 0x0112 }
            r9 = 0
            java.lang.Integer r13 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0112 }
            r4.put(r6, r8)     // Catch:{ Exception -> 0x0112 }
            goto L_0x03dc
        L_0x03d5:
            java.lang.Object r6 = r8.get(r10)     // Catch:{ Exception -> 0x0112 }
            r13 = r6
            java.lang.Integer r13 = (java.lang.Integer) r13     // Catch:{ Exception -> 0x0112 }
        L_0x03dc:
            if (r13 != 0) goto L_0x03e3
            r6 = 0
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0112 }
        L_0x03e3:
            int r6 = r13.intValue()     // Catch:{ Exception -> 0x0112 }
            r9 = 1
            int r6 = r6 - r9
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0112 }
            r8.put(r10, r6)     // Catch:{ Exception -> 0x0112 }
        L_0x03f0:
            int r7 = r7 + 1
            r10 = r32
            r6 = r33
            goto L_0x0351
        L_0x03f8:
            r4 = 0
        L_0x03f9:
            int r5 = r12.length()     // Catch:{ Exception -> 0x0112 }
            if (r5 <= 0) goto L_0x0497
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r7 = "SELECT mid FROM messages WHERE mid IN("
            r6.append(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r7 = r12.toString()     // Catch:{ Exception -> 0x0112 }
            r6.append(r7)     // Catch:{ Exception -> 0x0112 }
            r6.append(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x0112 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r3 = r5.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x0112 }
        L_0x0420:
            boolean r5 = r3.next()     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x0432
            long r7 = r3.longValue(r6)     // Catch:{ Exception -> 0x0112 }
            r14.remove(r7)     // Catch:{ Exception -> 0x0112 }
            r15.remove(r7)     // Catch:{ Exception -> 0x0112 }
            r6 = 0
            goto L_0x0420
        L_0x0432:
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            r3 = 0
        L_0x0436:
            int r5 = r14.size()     // Catch:{ Exception -> 0x0112 }
            if (r3 >= r5) goto L_0x0467
            java.lang.Object r5 = r14.valueAt(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r5 = (java.lang.Long) r5     // Catch:{ Exception -> 0x0112 }
            long r5 = r5.longValue()     // Catch:{ Exception -> 0x0112 }
            r7 = r31
            java.lang.Object r8 = r7.get(r5)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r8 = (java.lang.Integer) r8     // Catch:{ Exception -> 0x0112 }
            if (r8 != 0) goto L_0x0455
            r9 = 0
            java.lang.Integer r8 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0112 }
        L_0x0455:
            int r8 = r8.intValue()     // Catch:{ Exception -> 0x0112 }
            r9 = 1
            int r8 = r8 + r9
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0112 }
            r7.put(r5, r8)     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + 1
            r31 = r7
            goto L_0x0436
        L_0x0467:
            r7 = r31
            r3 = 0
        L_0x046a:
            int r5 = r15.size()     // Catch:{ Exception -> 0x0112 }
            if (r3 >= r5) goto L_0x0499
            java.lang.Object r5 = r15.valueAt(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r5 = (java.lang.Long) r5     // Catch:{ Exception -> 0x0112 }
            long r5 = r5.longValue()     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r8 = r2.get(r5)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r8 = (java.lang.Integer) r8     // Catch:{ Exception -> 0x0112 }
            if (r8 != 0) goto L_0x0487
            r9 = 0
            java.lang.Integer r8 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0112 }
        L_0x0487:
            int r8 = r8.intValue()     // Catch:{ Exception -> 0x0112 }
            r9 = 1
            int r8 = r8 + r9
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0112 }
            r2.put(r5, r8)     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + 1
            goto L_0x046a
        L_0x0497:
            r7 = r31
        L_0x0499:
            r3 = 0
            r5 = 0
            r6 = 0
            r8 = 0
            r9 = 2147483647(0x7fffffff, float:NaN)
            r10 = 0
        L_0x04a1:
            int r11 = r40.size()     // Catch:{ Exception -> 0x0112 }
            if (r3 >= r11) goto L_0x082a
            r11 = r40
            java.lang.Object r33 = r11.get(r3)     // Catch:{ Exception -> 0x0112 }
            r14 = r33
            org.telegram.tgnet.TLRPC$Message r14 = (org.telegram.tgnet.TLRPC$Message) r14     // Catch:{ Exception -> 0x0112 }
            r1.fixUnsupportedMedia(r14)     // Catch:{ Exception -> 0x0112 }
            r30.requery()     // Catch:{ Exception -> 0x0112 }
            int r12 = r14.id     // Catch:{ Exception -> 0x0112 }
            long r11 = (long) r12     // Catch:{ Exception -> 0x0112 }
            int r13 = r14.local_id     // Catch:{ Exception -> 0x0112 }
            if (r13 == 0) goto L_0x04bf
            long r11 = (long) r13     // Catch:{ Exception -> 0x0112 }
        L_0x04bf:
            org.telegram.tgnet.TLRPC$Peer r13 = r14.peer_id     // Catch:{ Exception -> 0x0112 }
            int r13 = r13.channel_id     // Catch:{ Exception -> 0x0112 }
            r35 = r2
            r36 = r3
            if (r13 == 0) goto L_0x04ce
            long r2 = (long) r13     // Catch:{ Exception -> 0x0112 }
            r13 = 32
            long r2 = r2 << r13
            long r11 = r11 | r2
        L_0x04ce:
            org.telegram.tgnet.NativeByteBuffer r2 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            int r3 = r14.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r2.<init>((int) r3)     // Catch:{ Exception -> 0x0112 }
            r14.serializeToStream(r2)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$MessageAction r3 = r14.action     // Catch:{ Exception -> 0x0112 }
            boolean r13 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageEncryptedAction     // Catch:{ Exception -> 0x0112 }
            if (r13 == 0) goto L_0x04ee
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r3 = r3.encryptedAction     // Catch:{ Exception -> 0x0112 }
            boolean r13 = r3 instanceof org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL     // Catch:{ Exception -> 0x0112 }
            if (r13 != 0) goto L_0x04ee
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_decryptedMessageActionScreenshotMessages     // Catch:{ Exception -> 0x0112 }
            if (r3 != 0) goto L_0x04ee
            r37 = r4
            r4 = 0
            goto L_0x051b
        L_0x04ee:
            boolean r3 = r14.out     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0518
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r13.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r15 = "SELECT mid FROM messages WHERE mid = "
            r13.append(r15)     // Catch:{ Exception -> 0x0112 }
            r13.append(r11)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x0112 }
            r37 = r4
            r15 = 0
            java.lang.Object[] r4 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r13, r4)     // Catch:{ Exception -> 0x0112 }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0112 }
            r13 = 1
            r4 = r4 ^ r13
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            goto L_0x051b
        L_0x0518:
            r37 = r4
            r4 = 1
        L_0x051b:
            if (r4 == 0) goto L_0x0543
            long r3 = r14.dialog_id     // Catch:{ Exception -> 0x0112 }
            r13 = r29
            java.lang.Object r3 = r13.get(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC$Message) r3     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x053d
            int r4 = r14.date     // Catch:{ Exception -> 0x0112 }
            int r15 = r3.date     // Catch:{ Exception -> 0x0112 }
            if (r4 > r15) goto L_0x053d
            int r3 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r3 <= 0) goto L_0x0537
            int r4 = r14.id     // Catch:{ Exception -> 0x0112 }
            if (r4 > r3) goto L_0x053d
        L_0x0537:
            if (r3 >= 0) goto L_0x0545
            int r4 = r14.id     // Catch:{ Exception -> 0x0112 }
            if (r4 >= r3) goto L_0x0545
        L_0x053d:
            long r3 = r14.dialog_id     // Catch:{ Exception -> 0x0112 }
            r13.put(r3, r14)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0545
        L_0x0543:
            r13 = r29
        L_0x0545:
            r3 = r30
            r4 = 1
            r3.bindLong(r4, r11)     // Catch:{ Exception -> 0x0112 }
            r15 = r5
            long r4 = r14.dialog_id     // Catch:{ Exception -> 0x0112 }
            r29 = r7
            r7 = 2
            r3.bindLong(r7, r4)     // Catch:{ Exception -> 0x0112 }
            int r4 = org.telegram.messenger.MessageObject.getUnreadFlags(r14)     // Catch:{ Exception -> 0x0112 }
            r5 = 3
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.send_state     // Catch:{ Exception -> 0x0112 }
            r5 = 4
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.date     // Catch:{ Exception -> 0x0112 }
            r5 = 5
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            r4 = 6
            r3.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r2)     // Catch:{ Exception -> 0x0112 }
            boolean r4 = org.telegram.messenger.MessageObject.isOut(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x0579
            boolean r4 = r14.from_scheduled     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x0577
            goto L_0x0579
        L_0x0577:
            r4 = 0
            goto L_0x057a
        L_0x0579:
            r4 = 1
        L_0x057a:
            r5 = 7
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.ttl     // Catch:{ Exception -> 0x0112 }
            r5 = 8
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.flags     // Catch:{ Exception -> 0x0112 }
            r4 = r4 & 1024(0x400, float:1.435E-42)
            if (r4 == 0) goto L_0x0593
            int r4 = r14.views     // Catch:{ Exception -> 0x0112 }
            r5 = 9
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            goto L_0x059c
        L_0x0593:
            r5 = 9
            int r4 = r1.getMessageMediaType(r14)     // Catch:{ Exception -> 0x0112 }
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
        L_0x059c:
            int r4 = r14.stickerVerified     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x05a4
            r4 = 1
        L_0x05a1:
            r5 = 10
            goto L_0x05ab
        L_0x05a4:
            r5 = 2
            if (r4 != r5) goto L_0x05a9
            r4 = 2
            goto L_0x05a1
        L_0x05a9:
            r4 = 0
            goto L_0x05a1
        L_0x05ab:
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            boolean r4 = r14.mentioned     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x05b4
            r4 = 1
            goto L_0x05b5
        L_0x05b4:
            r4 = 0
        L_0x05b5:
            r5 = 11
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.forwards     // Catch:{ Exception -> 0x0112 }
            r5 = 12
            r3.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r4 = r14.replies     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x05db
            org.telegram.tgnet.NativeByteBuffer r4 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r5 = r14.replies     // Catch:{ Exception -> 0x0112 }
            int r5 = r5.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r4.<init>((int) r5)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r5 = r14.replies     // Catch:{ Exception -> 0x0112 }
            r5.serializeToStream(r4)     // Catch:{ Exception -> 0x0112 }
            r5 = 13
            r3.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x0112 }
            goto L_0x05e1
        L_0x05db:
            r4 = 13
            r3.bindNull(r4)     // Catch:{ Exception -> 0x0112 }
            r4 = 0
        L_0x05e1:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r14.reply_to     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x05f2
            int r7 = r5.reply_to_top_id     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x05ea
            goto L_0x05ec
        L_0x05ea:
            int r7 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x0112 }
        L_0x05ec:
            r5 = 14
            r3.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0112 }
            goto L_0x05f8
        L_0x05f2:
            r5 = 14
            r7 = 0
            r3.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0112 }
        L_0x05f8:
            r3.step()     // Catch:{ Exception -> 0x0112 }
            r30 = r3
            r5 = r4
            long r3 = r14.random_id     // Catch:{ Exception -> 0x0112 }
            r17 = 0
            int r7 = (r3 > r17 ? 1 : (r3 == r17 ? 0 : -1))
            if (r7 == 0) goto L_0x061b
            r28.requery()     // Catch:{ Exception -> 0x0112 }
            long r3 = r14.random_id     // Catch:{ Exception -> 0x0112 }
            r7 = r28
            r28 = r13
            r13 = 1
            r7.bindLong(r13, r3)     // Catch:{ Exception -> 0x0112 }
            r3 = 2
            r7.bindLong(r3, r11)     // Catch:{ Exception -> 0x0112 }
            r7.step()     // Catch:{ Exception -> 0x0112 }
            goto L_0x061f
        L_0x061b:
            r7 = r28
            r28 = r13
        L_0x061f:
            boolean r3 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r14)     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0651
            if (r6 != 0) goto L_0x062f
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x062f:
            r6.requery()     // Catch:{ Exception -> 0x0112 }
            r3 = 1
            r6.bindLong(r3, r11)     // Catch:{ Exception -> 0x0112 }
            long r3 = r14.dialog_id     // Catch:{ Exception -> 0x0112 }
            r13 = 2
            r6.bindLong(r13, r3)     // Catch:{ Exception -> 0x0112 }
            int r3 = r14.date     // Catch:{ Exception -> 0x0112 }
            r4 = 3
            r6.bindInteger(r4, r3)     // Catch:{ Exception -> 0x0112 }
            int r3 = org.telegram.messenger.MediaDataController.getMediaType(r14)     // Catch:{ Exception -> 0x0112 }
            r4 = 4
            r6.bindInteger(r4, r3)     // Catch:{ Exception -> 0x0112 }
            r3 = 5
            r6.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r2)     // Catch:{ Exception -> 0x0112 }
            r6.step()     // Catch:{ Exception -> 0x0112 }
        L_0x0651:
            int r3 = r14.ttl_period     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0685
            int r3 = r14.id     // Catch:{ Exception -> 0x0112 }
            if (r3 <= 0) goto L_0x0685
            if (r8 != 0) goto L_0x0663
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = "REPLACE INTO enc_tasks_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x0663:
            r8.requery()     // Catch:{ Exception -> 0x0112 }
            r3 = 1
            r8.bindLong(r3, r11)     // Catch:{ Exception -> 0x0112 }
            int r3 = r14.date     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.ttl_period     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + r4
            r4 = 2
            r8.bindInteger(r4, r3)     // Catch:{ Exception -> 0x0112 }
            r3 = 3
            r4 = 0
            r8.bindInteger(r3, r4)     // Catch:{ Exception -> 0x0112 }
            r8.step()     // Catch:{ Exception -> 0x0112 }
            int r3 = r14.date     // Catch:{ Exception -> 0x0112 }
            int r4 = r14.ttl_period     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + r4
            int r3 = java.lang.Math.min(r9, r3)     // Catch:{ Exception -> 0x0112 }
            r9 = r3
        L_0x0685:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r14.media     // Catch:{ Exception -> 0x0112 }
            boolean r4 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x06b0
            if (r10 != 0) goto L_0x0695
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = "REPLACE INTO polls VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x0695:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r14.media     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r3 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r3     // Catch:{ Exception -> 0x0112 }
            r10.requery()     // Catch:{ Exception -> 0x0112 }
            r4 = 1
            r10.bindLong(r4, r11)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Poll r3 = r3.poll     // Catch:{ Exception -> 0x0112 }
            long r3 = r3.id     // Catch:{ Exception -> 0x0112 }
            r11 = 2
            r10.bindLong(r11, r3)     // Catch:{ Exception -> 0x0112 }
            r10.step()     // Catch:{ Exception -> 0x0112 }
        L_0x06ab:
            r23 = r6
            r13 = r27
            goto L_0x06cc
        L_0x06b0:
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x06ab
            r27.requery()     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r14.media     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$WebPage r3 = r3.webpage     // Catch:{ Exception -> 0x0112 }
            long r3 = r3.id     // Catch:{ Exception -> 0x0112 }
            r23 = r6
            r13 = r27
            r6 = 1
            r13.bindLong(r6, r3)     // Catch:{ Exception -> 0x0112 }
            r3 = 2
            r13.bindLong(r3, r11)     // Catch:{ Exception -> 0x0112 }
            r13.step()     // Catch:{ Exception -> 0x0112 }
        L_0x06cc:
            if (r5 == 0) goto L_0x06d1
            r5.reuse()     // Catch:{ Exception -> 0x0112 }
        L_0x06d1:
            r2.reuse()     // Catch:{ Exception -> 0x0112 }
            if (r43 == 0) goto L_0x0811
            org.telegram.tgnet.TLRPC$Peer r2 = r14.peer_id     // Catch:{ Exception -> 0x0112 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x0112 }
            if (r2 == 0) goto L_0x06e0
            boolean r2 = r14.post     // Catch:{ Exception -> 0x0112 }
            if (r2 == 0) goto L_0x0811
        L_0x06e0:
            int r2 = r14.date     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.ConnectionsManager r3 = r39.getConnectionsManager()     // Catch:{ Exception -> 0x0112 }
            int r3 = r3.getCurrentTime()     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + -3600
            if (r2 < r3) goto L_0x0811
            org.telegram.messenger.DownloadController r2 = r39.getDownloadController()     // Catch:{ Exception -> 0x0112 }
            int r2 = r2.canDownloadMedia((org.telegram.tgnet.TLRPC$Message) r14)     // Catch:{ Exception -> 0x0112 }
            r3 = 1
            if (r2 != r3) goto L_0x0811
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r14.media     // Catch:{ Exception -> 0x0112 }
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0112 }
            if (r3 != 0) goto L_0x0707
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            if (r3 != 0) goto L_0x0707
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0112 }
            if (r2 == 0) goto L_0x0811
        L_0x0707:
            org.telegram.tgnet.TLRPC$Document r2 = org.telegram.messenger.MessageObject.getDocument(r14)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Photo r3 = org.telegram.messenger.MessageObject.getPhoto(r14)     // Catch:{ Exception -> 0x0112 }
            boolean r4 = org.telegram.messenger.MessageObject.isVoiceMessage(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x0727
            long r3 = r2.id     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r5.document = r2     // Catch:{ Exception -> 0x0112 }
            int r2 = r5.flags     // Catch:{ Exception -> 0x0112 }
            r6 = 1
            r2 = r2 | r6
            r5.flags = r2     // Catch:{ Exception -> 0x0112 }
            r2 = 2
            goto L_0x07ad
        L_0x0727:
            boolean r4 = org.telegram.messenger.MessageObject.isStickerMessage(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x079d
            boolean r4 = org.telegram.messenger.MessageObject.isAnimatedStickerMessage(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x0735
            goto L_0x079d
        L_0x0735:
            boolean r4 = org.telegram.messenger.MessageObject.isVideoMessage(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x078c
            boolean r4 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x078c
            boolean r4 = org.telegram.messenger.MessageObject.isGifMessage(r14)     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x0748
            goto L_0x078c
        L_0x0748:
            if (r2 == 0) goto L_0x075c
            long r3 = r2.id     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r5.document = r2     // Catch:{ Exception -> 0x0112 }
            int r2 = r5.flags     // Catch:{ Exception -> 0x0112 }
            r6 = 1
            r2 = r2 | r6
            r5.flags = r2     // Catch:{ Exception -> 0x0112 }
            r2 = 8
            goto L_0x07ad
        L_0x075c:
            if (r3 == 0) goto L_0x0787
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r2 = r3.sizes     // Catch:{ Exception -> 0x0112 }
            int r4 = org.telegram.messenger.AndroidUtilities.getPhotoSize()     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r2, r4)     // Catch:{ Exception -> 0x0112 }
            if (r2 == 0) goto L_0x0787
            long r4 = r3.id     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r2 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0112 }
            r2.<init>()     // Catch:{ Exception -> 0x0112 }
            r2.photo = r3     // Catch:{ Exception -> 0x0112 }
            int r3 = r2.flags     // Catch:{ Exception -> 0x0112 }
            r6 = 1
            r3 = r3 | r6
            r2.flags = r3     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$MessageMedia r6 = r14.media     // Catch:{ Exception -> 0x0112 }
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0112 }
            if (r6 == 0) goto L_0x0784
            r6 = -2147483648(0xfffffffvar_, float:-0.0)
            r3 = r3 | r6
            r2.flags = r3     // Catch:{ Exception -> 0x0112 }
        L_0x0784:
            r3 = r4
            r5 = r2
            goto L_0x07ac
        L_0x0787:
            r2 = 0
            r3 = 0
            r5 = 0
            goto L_0x07ad
        L_0x078c:
            long r3 = r2.id     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r5.document = r2     // Catch:{ Exception -> 0x0112 }
            int r2 = r5.flags     // Catch:{ Exception -> 0x0112 }
            r6 = 1
            r2 = r2 | r6
            r5.flags = r2     // Catch:{ Exception -> 0x0112 }
            r2 = 4
            goto L_0x07ad
        L_0x079d:
            long r3 = r2.id     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r5.document = r2     // Catch:{ Exception -> 0x0112 }
            int r2 = r5.flags     // Catch:{ Exception -> 0x0112 }
            r6 = 1
            r2 = r2 | r6
            r5.flags = r2     // Catch:{ Exception -> 0x0112 }
        L_0x07ac:
            r2 = 1
        L_0x07ad:
            if (r5 == 0) goto L_0x0811
            org.telegram.tgnet.TLRPC$MessageMedia r6 = r14.media     // Catch:{ Exception -> 0x0112 }
            int r6 = r6.ttl_seconds     // Catch:{ Exception -> 0x0112 }
            if (r6 == 0) goto L_0x07bd
            r5.ttl_seconds = r6     // Catch:{ Exception -> 0x0112 }
            int r6 = r5.flags     // Catch:{ Exception -> 0x0112 }
            r11 = 4
            r6 = r6 | r11
            r5.flags = r6     // Catch:{ Exception -> 0x0112 }
        L_0x07bd:
            r6 = r15 | r2
            r26.requery()     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.NativeByteBuffer r11 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            int r12 = r5.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r11.<init>((int) r12)     // Catch:{ Exception -> 0x0112 }
            r5.serializeToStream(r11)     // Catch:{ Exception -> 0x0112 }
            r5 = r26
            r12 = 1
            r5.bindLong(r12, r3)     // Catch:{ Exception -> 0x0112 }
            r3 = 2
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0112 }
            int r2 = r14.date     // Catch:{ Exception -> 0x0112 }
            r3 = 3
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0112 }
            r2 = 4
            r5.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r2.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = "sent_"
            r2.append(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Peer r3 = r14.peer_id     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x07f3
            int r3 = r3.channel_id     // Catch:{ Exception -> 0x0112 }
            goto L_0x07f4
        L_0x07f3:
            r3 = 0
        L_0x07f4:
            r2.append(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = "_"
            r2.append(r3)     // Catch:{ Exception -> 0x0112 }
            int r3 = r14.id     // Catch:{ Exception -> 0x0112 }
            r2.append(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0112 }
            r3 = 5
            r5.bindString(r3, r2)     // Catch:{ Exception -> 0x0112 }
            r5.step()     // Catch:{ Exception -> 0x0112 }
            r11.reuse()     // Catch:{ Exception -> 0x0112 }
            r15 = r6
            goto L_0x0813
        L_0x0811:
            r5 = r26
        L_0x0813:
            int r3 = r36 + 1
            r26 = r5
            r27 = r13
            r5 = r15
            r6 = r23
            r2 = r35
            r4 = r37
            r38 = r28
            r28 = r7
            r7 = r29
            r29 = r38
            goto L_0x04a1
        L_0x082a:
            r35 = r2
            r37 = r4
            r15 = r5
            r5 = r26
            r13 = r27
            r38 = r29
            r29 = r7
            r7 = r28
            r28 = r38
            r30.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r6 == 0) goto L_0x0843
            r6.dispose()     // Catch:{ Exception -> 0x0112 }
        L_0x0843:
            if (r8 == 0) goto L_0x0850
            r8.dispose()     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.MessagesController r2 = r39.getMessagesController()     // Catch:{ Exception -> 0x0112 }
            r3 = 0
            r2.didAddedNewTask(r9, r3)     // Catch:{ Exception -> 0x0112 }
        L_0x0850:
            if (r10 == 0) goto L_0x0855
            r10.dispose()     // Catch:{ Exception -> 0x0112 }
        L_0x0855:
            r7.dispose()     // Catch:{ Exception -> 0x0112 }
            r5.dispose()     // Catch:{ Exception -> 0x0112 }
            r13.dispose()     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = "UPDATE dialogs SET date = ?, unread_count = ?, last_mid = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r4.<init>()     // Catch:{ Exception -> 0x0112 }
            r5 = 0
        L_0x0874:
            int r6 = r28.size()     // Catch:{ Exception -> 0x0112 }
            if (r5 >= r6) goto L_0x0a6f
            r6 = r28
            long r7 = r6.keyAt(r5)     // Catch:{ Exception -> 0x0112 }
            r9 = 0
            int r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1))
            if (r11 != 0) goto L_0x08a5
            r12 = r44
            r14 = r2
            r40 = r4
            r28 = r6
            r27 = r15
            r11 = r22
            r30 = r29
            r44 = r35
            r9 = 8
            r10 = 10
            r13 = 9
            r15 = 14
            r20 = 32
            r35 = r5
            r5 = 0
            goto L_0x0a5d
        L_0x08a5:
            java.lang.Object r9 = r6.valueAt(r5)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r9 = (org.telegram.tgnet.TLRPC$Message) r9     // Catch:{ Exception -> 0x0112 }
            if (r9 == 0) goto L_0x08b2
            org.telegram.tgnet.TLRPC$Peer r10 = r9.peer_id     // Catch:{ Exception -> 0x0112 }
            int r10 = r10.channel_id     // Catch:{ Exception -> 0x0112 }
            goto L_0x08b3
        L_0x08b2:
            r10 = 0
        L_0x08b3:
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r12.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r13 = "SELECT date, unread_count, last_mid, unread_count_i FROM dialogs WHERE did = "
            r12.append(r13)     // Catch:{ Exception -> 0x0112 }
            r12.append(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x0112 }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r11 = r11.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x0112 }
            boolean r12 = r11.next()     // Catch:{ Exception -> 0x0112 }
            if (r12 == 0) goto L_0x08fe
            int r14 = r11.intValue(r13)     // Catch:{ Exception -> 0x0112 }
            r28 = r6
            r13 = 1
            int r6 = r11.intValue(r13)     // Catch:{ Exception -> 0x0112 }
            r13 = 0
            int r6 = java.lang.Math.max(r13, r6)     // Catch:{ Exception -> 0x0112 }
            r13 = 2
            int r24 = r11.intValue(r13)     // Catch:{ Exception -> 0x0112 }
            r40 = r6
            r13 = 3
            int r6 = r11.intValue(r13)     // Catch:{ Exception -> 0x0112 }
            r13 = 0
            int r6 = java.lang.Math.max(r13, r6)     // Catch:{ Exception -> 0x0112 }
            r13 = r6
            r6 = r40
            r38 = r24
            r24 = r14
            r14 = r38
            goto L_0x090f
        L_0x08fe:
            r28 = r6
            if (r10 == 0) goto L_0x090a
            org.telegram.messenger.MessagesController r6 = r39.getMessagesController()     // Catch:{ Exception -> 0x0112 }
            r13 = 1
            r6.checkChatInviter(r10, r13)     // Catch:{ Exception -> 0x0112 }
        L_0x090a:
            r6 = 0
            r13 = 0
            r14 = 0
            r24 = 0
        L_0x090f:
            r11.dispose()     // Catch:{ Exception -> 0x0112 }
            r11 = r35
            java.lang.Object r26 = r11.get(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r26 = (java.lang.Integer) r26     // Catch:{ Exception -> 0x0112 }
            r27 = r15
            r15 = r29
            java.lang.Object r29 = r15.get(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r29 = (java.lang.Integer) r29     // Catch:{ Exception -> 0x0112 }
            if (r29 != 0) goto L_0x0931
            r16 = 0
            java.lang.Integer r29 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0112 }
            r35 = r5
        L_0x092e:
            r5 = r29
            goto L_0x0941
        L_0x0931:
            int r30 = r29.intValue()     // Catch:{ Exception -> 0x0112 }
            int r30 = r30 + r6
            r35 = r5
            java.lang.Integer r5 = java.lang.Integer.valueOf(r30)     // Catch:{ Exception -> 0x0112 }
            r15.put(r7, r5)     // Catch:{ Exception -> 0x0112 }
            goto L_0x092e
        L_0x0941:
            if (r26 != 0) goto L_0x094e
            r16 = 0
            java.lang.Integer r26 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0112 }
            r30 = r15
        L_0x094b:
            r15 = r26
            goto L_0x095e
        L_0x094e:
            int r29 = r26.intValue()     // Catch:{ Exception -> 0x0112 }
            int r29 = r29 + r13
            r30 = r15
            java.lang.Integer r15 = java.lang.Integer.valueOf(r29)     // Catch:{ Exception -> 0x0112 }
            r11.put(r7, r15)     // Catch:{ Exception -> 0x0112 }
            goto L_0x094b
        L_0x095e:
            if (r9 == 0) goto L_0x096a
            int r14 = r9.id     // Catch:{ Exception -> 0x0965 }
            r40 = r2
            goto L_0x096c
        L_0x0965:
            r0 = move-exception
            r1 = r39
            goto L_0x0113
        L_0x096a:
            r40 = r2
        L_0x096c:
            long r1 = (long) r14     // Catch:{ Exception -> 0x0965 }
            if (r9 == 0) goto L_0x0974
            int r14 = r9.local_id     // Catch:{ Exception -> 0x0965 }
            if (r14 == 0) goto L_0x0974
            long r1 = (long) r14     // Catch:{ Exception -> 0x0965 }
        L_0x0974:
            r14 = r11
            r43 = r12
            if (r10 == 0) goto L_0x0980
            long r11 = (long) r10     // Catch:{ Exception -> 0x0965 }
            r20 = 32
            long r11 = r11 << r20
            long r1 = r1 | r11
            goto L_0x0982
        L_0x0980:
            r20 = 32
        L_0x0982:
            if (r6 != 0) goto L_0x0990
            int r11 = r5.intValue()     // Catch:{ Exception -> 0x0965 }
            if (r11 == 0) goto L_0x0990
            r11 = r22
            r11.put(r7, r5)     // Catch:{ Exception -> 0x0965 }
            goto L_0x0992
        L_0x0990:
            r11 = r22
        L_0x0992:
            if (r13 != 0) goto L_0x09a0
            int r12 = r15.intValue()     // Catch:{ Exception -> 0x0965 }
            if (r12 == 0) goto L_0x09a0
            r12 = r44
            r12.put(r7, r15)     // Catch:{ Exception -> 0x0965 }
            goto L_0x09a2
        L_0x09a0:
            r12 = r44
        L_0x09a2:
            r44 = r14
            java.lang.Long r14 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0965 }
            r4.add(r14)     // Catch:{ Exception -> 0x0965 }
            if (r43 == 0) goto L_0x09ed
            r3.requery()     // Catch:{ Exception -> 0x0965 }
            if (r9 == 0) goto L_0x09b9
            if (r42 == 0) goto L_0x09b6
            if (r24 != 0) goto L_0x09b9
        L_0x09b6:
            int r9 = r9.date     // Catch:{ Exception -> 0x0965 }
            goto L_0x09bb
        L_0x09b9:
            r9 = r24
        L_0x09bb:
            r10 = 1
            r3.bindInteger(r10, r9)     // Catch:{ Exception -> 0x0965 }
            int r5 = r5.intValue()     // Catch:{ Exception -> 0x0965 }
            int r6 = r6 + r5
            r5 = 2
            r3.bindInteger(r5, r6)     // Catch:{ Exception -> 0x0965 }
            r5 = 3
            r3.bindLong(r5, r1)     // Catch:{ Exception -> 0x0965 }
            int r1 = r15.intValue()     // Catch:{ Exception -> 0x0965 }
            int r13 = r13 + r1
            r1 = 4
            r3.bindInteger(r1, r13)     // Catch:{ Exception -> 0x0965 }
            r1 = 5
            r3.bindLong(r1, r7)     // Catch:{ Exception -> 0x0965 }
            r3.step()     // Catch:{ Exception -> 0x0965 }
            r1 = r39
            r14 = r40
            r40 = r4
            r5 = 0
            r9 = 8
            r10 = 10
            r13 = 9
            r15 = 14
            goto L_0x0a5d
        L_0x09ed:
            r40.requery()     // Catch:{ Exception -> 0x0965 }
            r14 = r40
            r40 = r4
            r4 = 1
            r14.bindLong(r4, r7)     // Catch:{ Exception -> 0x0965 }
            if (r9 == 0) goto L_0x0a01
            if (r42 == 0) goto L_0x09fe
            if (r24 != 0) goto L_0x0a01
        L_0x09fe:
            int r4 = r9.date     // Catch:{ Exception -> 0x0965 }
            goto L_0x0a03
        L_0x0a01:
            r4 = r24
        L_0x0a03:
            r9 = 2
            r14.bindInteger(r9, r4)     // Catch:{ Exception -> 0x0965 }
            int r4 = r5.intValue()     // Catch:{ Exception -> 0x0965 }
            int r6 = r6 + r4
            r4 = 3
            r14.bindInteger(r4, r6)     // Catch:{ Exception -> 0x0965 }
            r4 = 4
            r14.bindLong(r4, r1)     // Catch:{ Exception -> 0x0965 }
            r1 = 5
            r2 = 0
            r14.bindInteger(r1, r2)     // Catch:{ Exception -> 0x0965 }
            r4 = 6
            r14.bindInteger(r4, r2)     // Catch:{ Exception -> 0x0965 }
            r2 = 7
            r5 = 0
            r14.bindLong(r2, r5)     // Catch:{ Exception -> 0x0965 }
            int r9 = r15.intValue()     // Catch:{ Exception -> 0x0965 }
            int r13 = r13 + r9
            r9 = 8
            r14.bindInteger(r9, r13)     // Catch:{ Exception -> 0x0965 }
            if (r10 == 0) goto L_0x0a31
            r10 = 1
            goto L_0x0a32
        L_0x0a31:
            r10 = 0
        L_0x0a32:
            r13 = 9
            r14.bindInteger(r13, r10)     // Catch:{ Exception -> 0x0965 }
            r10 = 10
            r15 = 0
            r14.bindInteger(r10, r15)     // Catch:{ Exception -> 0x0965 }
            r1 = 11
            r14.bindInteger(r1, r15)     // Catch:{ Exception -> 0x0965 }
            r1 = 12
            r14.bindInteger(r1, r15)     // Catch:{ Exception -> 0x0965 }
            r1 = 13
            r14.bindInteger(r1, r15)     // Catch:{ Exception -> 0x0965 }
            r15 = 14
            r14.bindNull(r15)     // Catch:{ Exception -> 0x0965 }
            r14.step()     // Catch:{ Exception -> 0x0965 }
            r1 = r39
            android.util.LongSparseArray<java.lang.Boolean> r2 = r1.unknownDialogsIds     // Catch:{ Exception -> 0x0112 }
            java.lang.Boolean r4 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0112 }
            r2.put(r7, r4)     // Catch:{ Exception -> 0x0112 }
        L_0x0a5d:
            int r2 = r35 + 1
            r4 = r40
            r35 = r44
            r5 = r2
            r22 = r11
            r44 = r12
            r2 = r14
            r15 = r27
            r29 = r30
            goto L_0x0874
        L_0x0a6f:
            r12 = r44
            r14 = r2
            r40 = r4
            r27 = r15
            r11 = r22
            r30 = r29
            r44 = r35
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            r14.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r37 == 0) goto L_0x0b2f
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            r5 = 0
        L_0x0a8d:
            int r3 = r37.size()     // Catch:{ Exception -> 0x0112 }
            if (r5 >= r3) goto L_0x0b29
            r4 = r37
            int r3 = r4.keyAt(r5)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r6 = r4.valueAt(r5)     // Catch:{ Exception -> 0x0112 }
            android.util.LongSparseArray r6 = (android.util.LongSparseArray) r6     // Catch:{ Exception -> 0x0112 }
            r7 = 0
        L_0x0aa0:
            int r8 = r6.size()     // Catch:{ Exception -> 0x0112 }
            if (r7 >= r8) goto L_0x0b1a
            long r8 = r6.keyAt(r7)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0112 }
            java.lang.String r14 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r37 = r4
            r15 = 2
            java.lang.Object[] r4 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r15 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0112 }
            r22 = r11
            r11 = 0
            r4[r11] = r15     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0112 }
            r16 = 1
            r4[r16] = r15     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = java.lang.String.format(r13, r14, r4)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r4 = r10.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x0112 }
            boolean r10 = r4.next()     // Catch:{ Exception -> 0x0112 }
            if (r10 == 0) goto L_0x0ae0
            int r10 = r4.intValue(r11)     // Catch:{ Exception -> 0x0112 }
            r11 = 1
            int r13 = r4.intValue(r11)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0ae2
        L_0x0ae0:
            r10 = -1
            r13 = 0
        L_0x0ae2:
            r4.dispose()     // Catch:{ Exception -> 0x0112 }
            r4 = -1
            if (r10 == r4) goto L_0x0b0f
            r2.requery()     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r11 = r6.valueAt(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r11 = (java.lang.Integer) r11     // Catch:{ Exception -> 0x0112 }
            int r11 = r11.intValue()     // Catch:{ Exception -> 0x0112 }
            int r10 = r10 + r11
            r11 = 1
            r2.bindLong(r11, r8)     // Catch:{ Exception -> 0x0112 }
            r8 = 2
            r2.bindInteger(r8, r3)     // Catch:{ Exception -> 0x0112 }
            r9 = 0
            int r10 = java.lang.Math.max(r9, r10)     // Catch:{ Exception -> 0x0112 }
            r9 = 3
            r2.bindInteger(r9, r10)     // Catch:{ Exception -> 0x0112 }
            r10 = 4
            r2.bindInteger(r10, r13)     // Catch:{ Exception -> 0x0112 }
            r2.step()     // Catch:{ Exception -> 0x0112 }
            goto L_0x0b13
        L_0x0b0f:
            r8 = 2
            r9 = 3
            r10 = 4
            r11 = 1
        L_0x0b13:
            int r7 = r7 + 1
            r11 = r22
            r4 = r37
            goto L_0x0aa0
        L_0x0b1a:
            r37 = r4
            r22 = r11
            r4 = -1
            r8 = 2
            r9 = 3
            r10 = 4
            r11 = 1
            int r5 = r5 + 1
            r11 = r22
            goto L_0x0a8d
        L_0x0b29:
            r22 = r11
            r2.dispose()     // Catch:{ Exception -> 0x0112 }
            goto L_0x0b31
        L_0x0b2f:
            r22 = r11
        L_0x0b31:
            if (r41 == 0) goto L_0x0b38
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0112 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x0b38:
            r2 = r22
            r3 = 0
            r1.updateFiltersReadCounter(r2, r12, r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.MessagesController r2 = r39.getMessagesController()     // Catch:{ Exception -> 0x0112 }
            r4 = r44
            r3 = r30
            r2.processDialogsUpdateRead(r3, r4)     // Catch:{ Exception -> 0x0112 }
            if (r27 == 0) goto L_0x0b55
            org.telegram.messenger.-$$Lambda$MessagesStorage$twzfF8pXR0x6vhddCTlqdmIsQtE r2 = new org.telegram.messenger.-$$Lambda$MessagesStorage$twzfF8pXR0x6vhddCTlqdmIsQtE     // Catch:{ Exception -> 0x0112 }
            r15 = r27
            r2.<init>(r15)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x0112 }
        L_0x0b55:
            r2 = r40
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r2)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0b5e
        L_0x0b5b:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)
        L_0x0b5e:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putMessages$144(java.util.ArrayList, boolean, boolean, int, boolean, boolean):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putMessagesInternal$143 */
    public /* synthetic */ void lambda$putMessagesInternal$143$MessagesStorage(int i) {
        getDownloadController().newDownloadObjectsAvailable(i);
    }

    public void putMessages(ArrayList<TLRPC$Message> arrayList, boolean z, boolean z2, boolean z3, int i, boolean z4) {
        putMessages(arrayList, z, z2, z3, i, false, z4);
    }

    public void putMessages(ArrayList<TLRPC$Message> arrayList, boolean z, boolean z2, boolean z3, int i, boolean z4, boolean z5) {
        if (arrayList.size() != 0) {
            if (z2) {
                this.storageQueue.postRunnable(new Runnable(arrayList, z, z3, i, z4, z5) {
                    public final /* synthetic */ ArrayList f$1;
                    public final /* synthetic */ boolean f$2;
                    public final /* synthetic */ boolean f$3;
                    public final /* synthetic */ int f$4;
                    public final /* synthetic */ boolean f$5;
                    public final /* synthetic */ boolean f$6;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                        this.f$4 = r5;
                        this.f$5 = r6;
                        this.f$6 = r7;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$putMessages$144$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                    }
                });
                return;
            }
            lambda$putMessages$144(arrayList, z, z3, i, z4, z5);
        }
    }

    public void markMessageAsSendError(TLRPC$Message tLRPC$Message, boolean z) {
        this.storageQueue.postRunnable(new Runnable(tLRPC$Message, z) {
            public final /* synthetic */ TLRPC$Message f$1;
            public final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessageAsSendError$145$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMessageAsSendError$145 */
    public /* synthetic */ void lambda$markMessageAsSendError$145$MessagesStorage(TLRPC$Message tLRPC$Message, boolean z) {
        try {
            long j = (long) tLRPC$Message.id;
            int i = tLRPC$Message.peer_id.channel_id;
            if (i != 0) {
                j |= ((long) i) << 32;
            }
            if (z) {
                SQLiteDatabase sQLiteDatabase = this.database;
                sQLiteDatabase.executeFast("UPDATE scheduled_messages SET send_state = 2 WHERE mid = " + j).stepThis().dispose();
                return;
            }
            SQLiteDatabase sQLiteDatabase2 = this.database;
            sQLiteDatabase2.executeFast("UPDATE messages SET send_state = 2 WHERE mid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setMessageSeq(int i, int i2, int i3) {
        this.storageQueue.postRunnable(new Runnable(i, i2, i3) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ int f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$setMessageSeq$146$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$setMessageSeq$146 */
    public /* synthetic */ void lambda$setMessageSeq$146$MessagesStorage(int i, int i2, int i3) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO messages_seq VALUES(?, ?, ?)");
            executeFast.requery();
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            executeFast.bindInteger(3, i3);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't wrap try/catch for region: R(2:166|167) */
    /* JADX WARNING: Code restructure failed: missing block: B:102:0x019e, code lost:
        if (r11 == null) goto L_0x01ae;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:103:0x01a0, code lost:
        r11.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:108:0x01ab, code lost:
        if (r11 == null) goto L_0x01ae;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x01b0, code lost:
        if (r20 != 0) goto L_0x01b4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:111:0x01b2, code lost:
        return null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:112:0x01b4, code lost:
        r8 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x01b7, code lost:
        if (r13 != r6) goto L_0x0204;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:114:0x01b9, code lost:
        if (r2 == 0) goto L_0x0204;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:115:0x01bb, code lost:
        if (r3 != 0) goto L_0x01c6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:117:?, code lost:
        r0 = r1.database.executeFast("UPDATE messages SET send_state = 0, date = ? WHERE mid = ?");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:118:0x01c6, code lost:
        r0 = r1.database.executeFast("UPDATE scheduled_messages SET send_state = 0, date = ? WHERE mid = ?");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:119:0x01ce, code lost:
        r3 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:121:?, code lost:
        r3.bindInteger(1, r2);
        r3.bindLong(2, r6);
        r3.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:122:0x01da, code lost:
        if (r3 == null) goto L_0x01f3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:123:0x01dc, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x01e0, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x01e1, code lost:
        r7 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x01e3, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x01e4, code lost:
        r7 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x01e6, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x01e7, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:130:0x01e9, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:131:0x01ea, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:133:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:134:0x01ee, code lost:
        if (r7 != null) goto L_0x01f0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:135:0x01f0, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:137:0x01fc, code lost:
        return new long[]{r20, r4};
     */
    /* JADX WARNING: Code restructure failed: missing block: B:138:0x01fd, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:139:0x01fe, code lost:
        if (r7 != null) goto L_0x0200;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:140:0x0200, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:141:0x0203, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:142:0x0204, code lost:
        if (r3 != 0) goto L_0x02e4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:144:?, code lost:
        r2 = r1.database.executeFast("UPDATE messages SET mid = ?, send_state = 0 WHERE mid = ?");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:147:?, code lost:
        r2.bindLong(1, r6);
        r2.bindLong(2, r13);
        r2.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:148:0x0219, code lost:
        if (r2 == null) goto L_0x026c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:149:0x021c, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:150:0x021d, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:151:0x0220, code lost:
        r2 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:154:?, code lost:
        r0 = r1.database;
        r3 = java.util.Locale.US;
        r0.executeFast(java.lang.String.format(r3, "DELETE FROM messages WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r13)})).stepThis().dispose();
        r1.database.executeFast(java.lang.String.format(r3, "DELETE FROM messages_seq WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r13)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:155:0x025e, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:156:0x025f, code lost:
        r7 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:157:0x0262, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:159:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:160:0x0266, code lost:
        if (r2 == null) goto L_0x026c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:161:0x0268, code lost:
        r2.dispose();
        r2 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:163:?, code lost:
        r2 = r1.database.executeFast("UPDATE media_v2 SET mid = ? WHERE mid = ?");
        r2.bindLong(1, r6);
        r2.bindLong(2, r13);
        r2.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:164:0x027f, code lost:
        if (r2 == null) goto L_0x02ae;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:165:0x0282, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:167:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM media_v2 WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r13)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:168:0x02a4, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:170:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:171:0x02a8, code lost:
        if (r2 == null) goto L_0x02ae;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:172:0x02aa, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:173:0x02ae, code lost:
        r8 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:175:?, code lost:
        r8 = r1.database.executeFast("UPDATE dialogs SET last_mid = ? WHERE last_mid = ?");
        r8.bindLong(1, r6);
        r8.bindLong(2, r13);
        r8.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:176:0x02c2, code lost:
        if (r8 == null) goto L_0x033a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:177:0x02c5, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:178:0x02c7, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:180:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:181:0x02cb, code lost:
        if (r8 == null) goto L_0x033a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:182:0x02cd, code lost:
        r8.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:183:0x02d2, code lost:
        if (r8 != null) goto L_0x02d4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:184:0x02d4, code lost:
        r8.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:185:0x02d7, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:186:0x02d8, code lost:
        if (r2 != null) goto L_0x02da;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:187:0x02da, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:188:0x02dd, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:189:0x02de, code lost:
        if (r7 != null) goto L_0x02e0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:190:0x02e0, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:191:0x02e3, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:193:0x02e5, code lost:
        if (r3 != 1) goto L_0x033a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:195:?, code lost:
        r3 = r1.database.executeFast("UPDATE scheduled_messages SET mid = ?, send_state = 0 WHERE mid = ?");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:197:?, code lost:
        r3.bindLong(1, r6);
        r3.bindLong(2, r13);
        r3.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:198:0x02f9, code lost:
        if (r3 == null) goto L_0x033a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:199:0x02fb, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:200:0x02ff, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:201:0x0300, code lost:
        r7 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:202:0x0302, code lost:
        r7 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:204:0x0304, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:205:0x0305, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:206:0x0307, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:209:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM scheduled_messages WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r13)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:210:0x0328, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:211:0x032a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:213:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:214:0x032e, code lost:
        if (r7 != null) goto L_0x0330;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:215:0x0330, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:216:0x0334, code lost:
        if (r7 != null) goto L_0x0336;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:217:0x0336, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:218:0x0339, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:220:0x0347, code lost:
        return new long[]{r20, r25.longValue()};
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x00a0, code lost:
        if (r12 != null) goto L_0x00b5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:56:0x00b3, code lost:
        if (r12 == null) goto L_0x012c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:0x00b5, code lost:
        r12.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x0174, code lost:
        if (r3 == 1) goto L_0x0178;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Missing exception handler attribute for start block: B:153:0x0221 */
    /* JADX WARNING: Missing exception handler attribute for start block: B:166:0x0284 */
    /* JADX WARNING: Removed duplicated region for block: B:100:0x0197 A[Catch:{ Exception -> 0x01a7, all -> 0x01a4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x01f0  */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x0200  */
    /* JADX WARNING: Removed duplicated region for block: B:18:0x004a  */
    /* JADX WARNING: Removed duplicated region for block: B:190:0x02e0  */
    /* JADX WARNING: Removed duplicated region for block: B:215:0x0330  */
    /* JADX WARNING: Removed duplicated region for block: B:217:0x0336  */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0051 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x0052  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x0064  */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x00be  */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x0173  */
    /* JADX WARNING: Removed duplicated region for block: B:96:0x0177  */
    /* renamed from: updateMessageStateAndIdInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public long[] lambda$updateMessageStateAndId$148(long r23, java.lang.Long r25, int r26, int r27, int r28, int r29) {
        /*
            r22 = this;
            r1 = r22
            r2 = r27
            r0 = r26
            r3 = r29
            long r4 = (long) r0
            r6 = 32
            r7 = 0
            r8 = 0
            r9 = 1
            if (r25 != 0) goto L_0x0068
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.String r11 = "SELECT mid FROM randoms WHERE random_id = %d LIMIT 1"
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.Long r13 = java.lang.Long.valueOf(r23)     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            r12[r8] = r13     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.String r10 = java.lang.String.format(r10, r11, r12)     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            org.telegram.SQLite.SQLiteCursor r10 = r0.queryFinalized(r10, r11)     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            boolean r0 = r10.next()     // Catch:{ Exception -> 0x003f }
            if (r0 == 0) goto L_0x0037
            long r11 = r10.longValue(r8)     // Catch:{ Exception -> 0x003f }
            java.lang.Long r0 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x003f }
            goto L_0x0039
        L_0x0037:
            r0 = r25
        L_0x0039:
            if (r10 == 0) goto L_0x004f
            r10.dispose()
            goto L_0x004f
        L_0x003f:
            r0 = move-exception
            goto L_0x0045
        L_0x0041:
            r0 = move-exception
            goto L_0x0062
        L_0x0043:
            r0 = move-exception
            r10 = r7
        L_0x0045:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0060 }
            if (r10 == 0) goto L_0x004d
            r10.dispose()
        L_0x004d:
            r0 = r25
        L_0x004f:
            if (r0 != 0) goto L_0x0052
            return r7
        L_0x0052:
            if (r28 != 0) goto L_0x005b
            long r11 = r0.longValue()
            long r11 = r11 >> r6
            int r12 = (int) r11
            goto L_0x005d
        L_0x005b:
            r12 = r28
        L_0x005d:
            r11 = r10
            r10 = r0
            goto L_0x006d
        L_0x0060:
            r0 = move-exception
            r7 = r10
        L_0x0062:
            if (r7 == 0) goto L_0x0067
            r7.dispose()
        L_0x0067:
            throw r0
        L_0x0068:
            r10 = r25
            r12 = r28
            r11 = r7
        L_0x006d:
            long r13 = r10.longValue()
            if (r12 == 0) goto L_0x0079
            long r7 = (long) r12
            long r6 = r7 << r6
            long r13 = r13 | r6
            long r6 = r6 | r4
            goto L_0x007a
        L_0x0079:
            r6 = r4
        L_0x007a:
            long r16 = r10.longValue()
            r18 = 0
            r8 = 2
            int r0 = (r16 > r18 ? 1 : (r16 == r18 ? 0 : -1))
            if (r0 >= 0) goto L_0x00c2
            if (r3 != r9) goto L_0x00c2
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x00ac, all -> 0x00a9 }
            java.lang.String r12 = "UPDATE randoms SET mid = ? WHERE random_id = ? and mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r0.executeFast(r12)     // Catch:{ Exception -> 0x00ac, all -> 0x00a9 }
            r12.bindLong(r9, r6)     // Catch:{ Exception -> 0x00a5 }
            r25 = r10
            r9 = r23
            r12.bindLong(r8, r9)     // Catch:{ Exception -> 0x00a3 }
            r0 = 3
            r12.bindLong(r0, r13)     // Catch:{ Exception -> 0x00a3 }
            r12.step()     // Catch:{ Exception -> 0x00a3 }
            if (r12 == 0) goto L_0x012c
            goto L_0x00b5
        L_0x00a3:
            r0 = move-exception
            goto L_0x00b0
        L_0x00a5:
            r0 = move-exception
            r25 = r10
            goto L_0x00b0
        L_0x00a9:
            r0 = move-exception
            r7 = 0
            goto L_0x00bc
        L_0x00ac:
            r0 = move-exception
            r25 = r10
            r12 = 0
        L_0x00b0:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00ba }
            if (r12 == 0) goto L_0x012c
        L_0x00b5:
            r12.dispose()
            goto L_0x012c
        L_0x00ba:
            r0 = move-exception
            r7 = r12
        L_0x00bc:
            if (r7 == 0) goto L_0x00c1
            r7.dispose()
        L_0x00c1:
            throw r0
        L_0x00c2:
            r25 = r10
            r9 = r23
            long r20 = r25.longValue()
            int r0 = (r20 > r18 ? 1 : (r20 == r18 ? 0 : -1))
            if (r0 <= 0) goto L_0x012c
            org.telegram.tgnet.TLRPC$TL_updateDeleteScheduledMessages r0 = new org.telegram.tgnet.TLRPC$TL_updateDeleteScheduledMessages
            r0.<init>()
            java.util.ArrayList<java.lang.Integer> r2 = r0.messages
            int r3 = (int) r13
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)
            r2.add(r3)
            if (r12 == 0) goto L_0x00e9
            org.telegram.tgnet.TLRPC$TL_peerChannel r2 = new org.telegram.tgnet.TLRPC$TL_peerChannel
            r2.<init>()
            r0.peer = r2
            r2.channel_id = r12
            goto L_0x00f0
        L_0x00e9:
            org.telegram.tgnet.TLRPC$TL_peerUser r2 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r2.<init>()
            r0.peer = r2
        L_0x00f0:
            org.telegram.tgnet.TLRPC$TL_updates r2 = new org.telegram.tgnet.TLRPC$TL_updates
            r2.<init>()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Update> r3 = r2.updates
            r3.add(r0)
            org.telegram.messenger.DispatchQueue r0 = org.telegram.messenger.Utilities.stageQueue
            org.telegram.messenger.-$$Lambda$MessagesStorage$1WHXKGsd-5wJCEszGZDeYJpJ6-g r3 = new org.telegram.messenger.-$$Lambda$MessagesStorage$1WHXKGsd-5wJCEszGZDeYJpJ6-g
            r3.<init>(r2)
            r0.postRunnable(r3)
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0126 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0126 }
            java.lang.String r3 = "DELETE FROM randoms WHERE random_id = %d AND mid = %d"
            java.lang.Object[] r4 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0126 }
            java.lang.Long r5 = java.lang.Long.valueOf(r23)     // Catch:{ Exception -> 0x0126 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x0126 }
            r5 = 1
            r4[r5] = r25     // Catch:{ Exception -> 0x0126 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0126 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0126 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0126 }
            r0.dispose()     // Catch:{ Exception -> 0x0126 }
            goto L_0x012a
        L_0x0126:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x012a:
            r2 = 0
            return r2
        L_0x012c:
            r9 = -1
            if (r3 == r9) goto L_0x0136
            if (r3 != 0) goto L_0x0132
            goto L_0x0136
        L_0x0132:
            r20 = r18
        L_0x0134:
            r8 = -1
            goto L_0x0171
        L_0x0136:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0167 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0167 }
            java.lang.String r12 = "SELECT uid FROM messages WHERE mid = %d LIMIT 1"
            r15 = 1
            java.lang.Object[] r8 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0167 }
            java.lang.Long r15 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0167 }
            r9 = 0
            r8[r9] = r15     // Catch:{ Exception -> 0x0167 }
            java.lang.String r8 = java.lang.String.format(r10, r12, r8)     // Catch:{ Exception -> 0x0167 }
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0167 }
            org.telegram.SQLite.SQLiteCursor r11 = r0.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x0167 }
            boolean r0 = r11.next()     // Catch:{ Exception -> 0x0167 }
            if (r0 == 0) goto L_0x015c
            long r20 = r11.longValue(r9)     // Catch:{ Exception -> 0x0167 }
            r3 = 0
            goto L_0x015e
        L_0x015c:
            r20 = r18
        L_0x015e:
            if (r11 == 0) goto L_0x0134
            r11.dispose()
            goto L_0x0134
        L_0x0164:
            r0 = move-exception
            goto L_0x034e
        L_0x0167:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0164 }
            if (r11 == 0) goto L_0x0132
            r11.dispose()
            goto L_0x0132
        L_0x0171:
            if (r3 == r8) goto L_0x0177
            r8 = 1
            if (r3 != r8) goto L_0x01ae
            goto L_0x0178
        L_0x0177:
            r8 = 1
        L_0x0178:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01a7 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x01a7 }
            java.lang.String r10 = "SELECT uid FROM scheduled_messages WHERE mid = %d LIMIT 1"
            java.lang.Object[] r12 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x01a7 }
            java.lang.Long r8 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x01a7 }
            r15 = 0
            r12[r15] = r8     // Catch:{ Exception -> 0x01a7 }
            java.lang.String r8 = java.lang.String.format(r9, r10, r12)     // Catch:{ Exception -> 0x01a7 }
            java.lang.Object[] r9 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x01a7 }
            org.telegram.SQLite.SQLiteCursor r11 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x01a7 }
            boolean r0 = r11.next()     // Catch:{ Exception -> 0x01a7 }
            if (r0 == 0) goto L_0x019e
            long r8 = r11.longValue(r15)     // Catch:{ Exception -> 0x01a7 }
            r20 = r8
            r3 = 1
        L_0x019e:
            if (r11 == 0) goto L_0x01ae
        L_0x01a0:
            r11.dispose()
            goto L_0x01ae
        L_0x01a4:
            r0 = move-exception
            goto L_0x0348
        L_0x01a7:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01a4 }
            if (r11 == 0) goto L_0x01ae
            goto L_0x01a0
        L_0x01ae:
            int r0 = (r20 > r18 ? 1 : (r20 == r18 ? 0 : -1))
            if (r0 != 0) goto L_0x01b4
            r8 = 0
            return r8
        L_0x01b4:
            r8 = 0
            int r0 = (r13 > r6 ? 1 : (r13 == r6 ? 0 : -1))
            if (r0 != 0) goto L_0x0204
            if (r2 == 0) goto L_0x0204
            if (r3 != 0) goto L_0x01c6
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01e9, all -> 0x01e6 }
            java.lang.String r3 = "UPDATE messages SET send_state = 0, date = ? WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x01e9, all -> 0x01e6 }
            goto L_0x01ce
        L_0x01c6:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01e9, all -> 0x01e6 }
            java.lang.String r3 = "UPDATE scheduled_messages SET send_state = 0, date = ? WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x01e9, all -> 0x01e6 }
        L_0x01ce:
            r3 = r0
            r8 = 1
            r3.bindInteger(r8, r2)     // Catch:{ Exception -> 0x01e3, all -> 0x01e0 }
            r2 = 2
            r3.bindLong(r2, r6)     // Catch:{ Exception -> 0x01e3, all -> 0x01e0 }
            r3.step()     // Catch:{ Exception -> 0x01e3, all -> 0x01e0 }
            if (r3 == 0) goto L_0x01f3
            r3.dispose()
            goto L_0x01f3
        L_0x01e0:
            r0 = move-exception
            r7 = r3
            goto L_0x01fe
        L_0x01e3:
            r0 = move-exception
            r7 = r3
            goto L_0x01eb
        L_0x01e6:
            r0 = move-exception
            r7 = r8
            goto L_0x01fe
        L_0x01e9:
            r0 = move-exception
            r7 = r8
        L_0x01eb:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01fd }
            if (r7 == 0) goto L_0x01f3
            r7.dispose()
        L_0x01f3:
            r2 = 2
            long[] r0 = new long[r2]
            r2 = 0
            r0[r2] = r20
            r2 = 1
            r0[r2] = r4
            return r0
        L_0x01fd:
            r0 = move-exception
        L_0x01fe:
            if (r7 == 0) goto L_0x0203
            r7.dispose()
        L_0x0203:
            throw r0
        L_0x0204:
            if (r3 != 0) goto L_0x02e4
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0220, all -> 0x021c }
            java.lang.String r2 = "UPDATE messages SET mid = ?, send_state = 0 WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0220, all -> 0x021c }
            r3 = 1
            r2.bindLong(r3, r6)     // Catch:{ Exception -> 0x0221 }
            r3 = 2
            r2.bindLong(r3, r13)     // Catch:{ Exception -> 0x0221 }
            r2.step()     // Catch:{ Exception -> 0x0221 }
            if (r2 == 0) goto L_0x026c
            goto L_0x0268
        L_0x021c:
            r0 = move-exception
            r7 = r8
            goto L_0x02de
        L_0x0220:
            r2 = r8
        L_0x0221:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0262 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0262 }
            java.lang.String r4 = "DELETE FROM messages WHERE mid = %d"
            r5 = 1
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0262 }
            java.lang.Long r5 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0262 }
            r10 = 0
            r9[r10] = r5     // Catch:{ Exception -> 0x0262 }
            java.lang.String r4 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x0262 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x0262 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0262 }
            r0.dispose()     // Catch:{ Exception -> 0x0262 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0262 }
            java.lang.String r4 = "DELETE FROM messages_seq WHERE mid = %d"
            r5 = 1
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0262 }
            java.lang.Long r5 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0262 }
            r10 = 0
            r9[r10] = r5     // Catch:{ Exception -> 0x0262 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x0262 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0262 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0262 }
            r0.dispose()     // Catch:{ Exception -> 0x0262 }
            goto L_0x0266
        L_0x025e:
            r0 = move-exception
            r7 = r2
            goto L_0x02de
        L_0x0262:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x025e }
        L_0x0266:
            if (r2 == 0) goto L_0x026c
        L_0x0268:
            r2.dispose()
            r2 = r8
        L_0x026c:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0284 }
            java.lang.String r3 = "UPDATE media_v2 SET mid = ? WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0284 }
            r3 = 1
            r2.bindLong(r3, r6)     // Catch:{ Exception -> 0x0284 }
            r3 = 2
            r2.bindLong(r3, r13)     // Catch:{ Exception -> 0x0284 }
            r2.step()     // Catch:{ Exception -> 0x0284 }
            if (r2 == 0) goto L_0x02ae
            goto L_0x02aa
        L_0x0282:
            r0 = move-exception
            goto L_0x02d8
        L_0x0284:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02a4 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x02a4 }
            java.lang.String r4 = "DELETE FROM media_v2 WHERE mid = %d"
            r5 = 1
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02a4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x02a4 }
            r10 = 0
            r9[r10] = r5     // Catch:{ Exception -> 0x02a4 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x02a4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02a4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02a4 }
            r0.dispose()     // Catch:{ Exception -> 0x02a4 }
            goto L_0x02a8
        L_0x02a4:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0282 }
        L_0x02a8:
            if (r2 == 0) goto L_0x02ae
        L_0x02aa:
            r2.dispose()
            goto L_0x02af
        L_0x02ae:
            r8 = r2
        L_0x02af:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02c7 }
            java.lang.String r2 = "UPDATE dialogs SET last_mid = ? WHERE last_mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02c7 }
            r2 = 1
            r8.bindLong(r2, r6)     // Catch:{ Exception -> 0x02c7 }
            r2 = 2
            r8.bindLong(r2, r13)     // Catch:{ Exception -> 0x02c7 }
            r8.step()     // Catch:{ Exception -> 0x02c7 }
            if (r8 == 0) goto L_0x033a
            goto L_0x02cd
        L_0x02c5:
            r0 = move-exception
            goto L_0x02d2
        L_0x02c7:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02c5 }
            if (r8 == 0) goto L_0x033a
        L_0x02cd:
            r8.dispose()
            goto L_0x033a
        L_0x02d2:
            if (r8 == 0) goto L_0x02d7
            r8.dispose()
        L_0x02d7:
            throw r0
        L_0x02d8:
            if (r2 == 0) goto L_0x02dd
            r2.dispose()
        L_0x02dd:
            throw r0
        L_0x02de:
            if (r7 == 0) goto L_0x02e3
            r7.dispose()
        L_0x02e3:
            throw r0
        L_0x02e4:
            r2 = 1
            if (r3 != r2) goto L_0x033a
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0307, all -> 0x0304 }
            java.lang.String r3 = "UPDATE scheduled_messages SET mid = ?, send_state = 0 WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0307, all -> 0x0304 }
            r3.bindLong(r2, r6)     // Catch:{ Exception -> 0x0302, all -> 0x02ff }
            r2 = 2
            r3.bindLong(r2, r13)     // Catch:{ Exception -> 0x0302, all -> 0x02ff }
            r3.step()     // Catch:{ Exception -> 0x0302, all -> 0x02ff }
            if (r3 == 0) goto L_0x033a
            r3.dispose()
            goto L_0x033a
        L_0x02ff:
            r0 = move-exception
            r7 = r3
            goto L_0x0334
        L_0x0302:
            r7 = r3
            goto L_0x0308
        L_0x0304:
            r0 = move-exception
            r7 = r8
            goto L_0x0334
        L_0x0307:
            r7 = r8
        L_0x0308:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x032a }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x032a }
            java.lang.String r3 = "DELETE FROM scheduled_messages WHERE mid = %d"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x032a }
            java.lang.Long r4 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x032a }
            r6 = 0
            r5[r6] = r4     // Catch:{ Exception -> 0x032a }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x032a }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x032a }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x032a }
            r0.dispose()     // Catch:{ Exception -> 0x032a }
            goto L_0x032e
        L_0x0328:
            r0 = move-exception
            goto L_0x0334
        L_0x032a:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0328 }
        L_0x032e:
            if (r7 == 0) goto L_0x033a
            r7.dispose()
            goto L_0x033a
        L_0x0334:
            if (r7 == 0) goto L_0x0339
            r7.dispose()
        L_0x0339:
            throw r0
        L_0x033a:
            r2 = 2
            long[] r0 = new long[r2]
            r2 = 0
            r0[r2] = r20
            long r2 = r25.longValue()
            r4 = 1
            r0[r4] = r2
            return r0
        L_0x0348:
            if (r11 == 0) goto L_0x034d
            r11.dispose()
        L_0x034d:
            throw r0
        L_0x034e:
            if (r11 == 0) goto L_0x0353
            r11.dispose()
        L_0x0353:
            goto L_0x0355
        L_0x0354:
            throw r0
        L_0x0355:
            goto L_0x0354
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageStateAndId$148(long, java.lang.Long, int, int, int, int):long[]");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$updateMessageStateAndIdInternal$147 */
    public /* synthetic */ void lambda$updateMessageStateAndIdInternal$147$MessagesStorage(TLRPC$TL_updates tLRPC$TL_updates) {
        getMessagesController().processUpdates(tLRPC$TL_updates, false);
    }

    public long[] updateMessageStateAndId(long j, Long l, int i, int i2, boolean z, int i3, int i4) {
        if (z) {
            this.storageQueue.postRunnable(new Runnable(j, l, i, i2, i3, i4) {
                public final /* synthetic */ long f$1;
                public final /* synthetic */ Long f$2;
                public final /* synthetic */ int f$3;
                public final /* synthetic */ int f$4;
                public final /* synthetic */ int f$5;
                public final /* synthetic */ int f$6;

                {
                    this.f$1 = r2;
                    this.f$2 = r4;
                    this.f$3 = r5;
                    this.f$4 = r6;
                    this.f$5 = r7;
                    this.f$6 = r8;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateMessageStateAndId$148$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                }
            });
            return null;
        }
        return lambda$updateMessageStateAndId$148(j, l, i, i2, i3, i4);
    }

    /* access modifiers changed from: private */
    /* renamed from: updateUsersInternal */
    public void lambda$updateUsers$149(ArrayList<TLRPC$User> arrayList, boolean z, boolean z2) {
        if (z) {
            if (z2) {
                try {
                    this.database.beginTransaction();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return;
                }
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE users SET status = ? WHERE uid = ?");
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC$User tLRPC$User = arrayList.get(i);
                executeFast.requery();
                TLRPC$UserStatus tLRPC$UserStatus = tLRPC$User.status;
                if (tLRPC$UserStatus != null) {
                    executeFast.bindInteger(1, tLRPC$UserStatus.expires);
                } else {
                    executeFast.bindInteger(1, 0);
                }
                executeFast.bindInteger(2, tLRPC$User.id);
                executeFast.step();
            }
            executeFast.dispose();
            if (z2) {
                this.database.commitTransaction();
                return;
            }
            return;
        }
        StringBuilder sb = new StringBuilder();
        SparseArray sparseArray = new SparseArray();
        int size2 = arrayList.size();
        for (int i2 = 0; i2 < size2; i2++) {
            TLRPC$User tLRPC$User2 = arrayList.get(i2);
            if (sb.length() != 0) {
                sb.append(",");
            }
            sb.append(tLRPC$User2.id);
            sparseArray.put(tLRPC$User2.id, tLRPC$User2);
        }
        ArrayList arrayList2 = new ArrayList();
        getUsersInternal(sb.toString(), arrayList2);
        int size3 = arrayList2.size();
        for (int i3 = 0; i3 < size3; i3++) {
            TLRPC$User tLRPC$User3 = (TLRPC$User) arrayList2.get(i3);
            TLRPC$User tLRPC$User4 = (TLRPC$User) sparseArray.get(tLRPC$User3.id);
            if (tLRPC$User4 != null) {
                if (tLRPC$User4.first_name == null || tLRPC$User4.last_name == null) {
                    TLRPC$UserProfilePhoto tLRPC$UserProfilePhoto = tLRPC$User4.photo;
                    if (tLRPC$UserProfilePhoto != null) {
                        tLRPC$User3.photo = tLRPC$UserProfilePhoto;
                    } else {
                        String str = tLRPC$User4.phone;
                        if (str != null) {
                            tLRPC$User3.phone = str;
                        }
                    }
                } else {
                    if (!UserObject.isContact(tLRPC$User3)) {
                        tLRPC$User3.first_name = tLRPC$User4.first_name;
                        tLRPC$User3.last_name = tLRPC$User4.last_name;
                    }
                    tLRPC$User3.username = tLRPC$User4.username;
                }
            }
        }
        if (!arrayList2.isEmpty()) {
            if (z2) {
                this.database.beginTransaction();
            }
            putUsersInternal(arrayList2);
            if (z2) {
                this.database.commitTransaction();
            }
        }
    }

    public void updateUsers(ArrayList<TLRPC$User> arrayList, boolean z, boolean z2, boolean z3) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (z3) {
                this.storageQueue.postRunnable(new Runnable(arrayList, z, z2) {
                    public final /* synthetic */ ArrayList f$1;
                    public final /* synthetic */ boolean f$2;
                    public final /* synthetic */ boolean f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$updateUsers$149$MessagesStorage(this.f$1, this.f$2, this.f$3);
                    }
                });
            } else {
                lambda$updateUsers$149(arrayList, z, z2);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: markMessagesAsReadInternal */
    public void lambda$markMessagesAsRead$151(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, SparseIntArray sparseIntArray) {
        SparseLongArray sparseLongArray3 = sparseLongArray;
        SparseLongArray sparseLongArray4 = sparseLongArray2;
        SparseIntArray sparseIntArray2 = sparseIntArray;
        try {
            if (!isEmpty(sparseLongArray)) {
                SQLitePreparedStatement executeFast = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?");
                for (int i = 0; i < sparseLongArray.size(); i++) {
                    int keyAt = sparseLongArray3.keyAt(i);
                    long j = sparseLongArray3.get(keyAt);
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 0", new Object[]{Integer.valueOf(keyAt), Long.valueOf(j)})).stepThis().dispose();
                    executeFast.requery();
                    executeFast.bindLong(1, (long) keyAt);
                    executeFast.bindLong(2, j);
                    executeFast.step();
                }
                executeFast.dispose();
            }
            if (!isEmpty(sparseLongArray2)) {
                for (int i2 = 0; i2 < sparseLongArray2.size(); i2++) {
                    int keyAt2 = sparseLongArray4.keyAt(i2);
                    long j2 = sparseLongArray4.get(keyAt2);
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 1", new Object[]{Integer.valueOf(keyAt2), Long.valueOf(j2)})).stepThis().dispose();
                }
            }
            if (sparseIntArray2 != null && !isEmpty(sparseIntArray)) {
                for (int i3 = 0; i3 < sparseIntArray.size(); i3++) {
                    int valueAt = sparseIntArray2.valueAt(i3);
                    SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE messages SET read_state = read_state | 1 WHERE uid = ? AND date <= ? AND read_state IN(0,2) AND out = 1");
                    executeFast2.requery();
                    executeFast2.bindLong(1, ((long) sparseIntArray2.keyAt(i3)) << 32);
                    executeFast2.bindInteger(2, valueAt);
                    executeFast2.step();
                    executeFast2.dispose();
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessagesContentAsRead(ArrayList<Long> arrayList, int i) {
        if (!isEmpty((List<?>) arrayList)) {
            this.storageQueue.postRunnable(new Runnable(arrayList, i) {
                public final /* synthetic */ ArrayList f$1;
                public final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$markMessagesContentAsRead$150$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMessagesContentAsRead$150 */
    public /* synthetic */ void lambda$markMessagesContentAsRead$150$MessagesStorage(ArrayList arrayList, int i) {
        try {
            String join = TextUtils.join(",", arrayList);
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            sQLiteDatabase.executeFast(String.format(locale, "UPDATE messages SET read_state = read_state | 2 WHERE mid IN (%s)", new Object[]{join})).stepThis().dispose();
            if (i != 0) {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(locale, "SELECT mid, ttl FROM messages WHERE mid IN (%s) AND ttl > 0", new Object[]{join}), new Object[0]);
                ArrayList arrayList2 = null;
                while (queryFinalized.next()) {
                    if (arrayList2 == null) {
                        arrayList2 = new ArrayList();
                    }
                    arrayList2.add(Integer.valueOf(queryFinalized.intValue(0)));
                }
                if (arrayList2 != null) {
                    emptyMessagesMedia(arrayList2);
                }
                queryFinalized.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessagesAsRead(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, SparseIntArray sparseIntArray, boolean z) {
        if (z) {
            this.storageQueue.postRunnable(new Runnable(sparseLongArray, sparseLongArray2, sparseIntArray) {
                public final /* synthetic */ SparseLongArray f$1;
                public final /* synthetic */ SparseLongArray f$2;
                public final /* synthetic */ SparseIntArray f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$markMessagesAsRead$151$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$markMessagesAsRead$151(sparseLongArray, sparseLongArray2, sparseIntArray);
        }
    }

    public void markMessagesAsDeletedByRandoms(ArrayList<Long> arrayList) {
        if (!arrayList.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(arrayList) {
                public final /* synthetic */ ArrayList f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$markMessagesAsDeletedByRandoms$153$MessagesStorage(this.f$1);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMessagesAsDeletedByRandoms$153 */
    public /* synthetic */ void lambda$markMessagesAsDeletedByRandoms$153$MessagesStorage(ArrayList arrayList) {
        try {
            String join = TextUtils.join(",", arrayList);
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM randoms WHERE random_id IN(%s)", new Object[]{join}), new Object[0]);
            ArrayList arrayList2 = new ArrayList();
            while (queryFinalized.next()) {
                arrayList2.add(Integer.valueOf(queryFinalized.intValue(0)));
            }
            queryFinalized.dispose();
            if (!arrayList2.isEmpty()) {
                AndroidUtilities.runOnUIThread(new Runnable(arrayList2) {
                    public final /* synthetic */ ArrayList f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$152$MessagesStorage(this.f$1);
                    }
                });
                updateDialogsWithReadMessagesInternal(arrayList2, (SparseLongArray) null, (SparseLongArray) null, (ArrayList<Long>) null);
                lambda$markMessagesAsDeleted$157(arrayList2, 0, true, false);
                lambda$updateDialogsWithDeletedMessages$156(arrayList2, (ArrayList<Long>) null, 0);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$152 */
    public /* synthetic */ void lambda$null$152$MessagesStorage(ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.messagesDeleted, arrayList, 0, Boolean.FALSE);
    }

    /* access modifiers changed from: protected */
    public void deletePushMessages(long j, ArrayList<Integer> arrayList) {
        try {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM unread_push_messages WHERE uid = %d AND mid IN(%s)", new Object[]{Long.valueOf(j), TextUtils.join(",", arrayList)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void broadcastScheduledMessagesChange(Long l) {
        try {
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM scheduled_messages WHERE uid = %d", new Object[]{l}), new Object[0]);
            if (queryFinalized.next()) {
                i = queryFinalized.intValue(0);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(l, i) {
                public final /* synthetic */ Long f$1;
                public final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$broadcastScheduledMessagesChange$154$MessagesStorage(this.f$1, this.f$2);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$broadcastScheduledMessagesChange$154 */
    public /* synthetic */ void lambda$broadcastScheduledMessagesChange$154$MessagesStorage(Long l, int i) {
        getNotificationCenter().postNotificationName(NotificationCenter.scheduledMessagesUpdated, l, Integer.valueOf(i));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v26, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v8, resolved type: java.lang.Integer} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:116:0x0453 A[Catch:{ Exception -> 0x05c3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x055d A[Catch:{ Exception -> 0x05c3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x05b9 A[Catch:{ Exception -> 0x05c3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x01e0 A[Catch:{ Exception -> 0x01c4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x0214  */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x025e A[Catch:{ Exception -> 0x05c3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:97:0x02e6 A[Catch:{ Exception -> 0x05c3 }] */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> lambda$markMessagesAsDeleted$157(java.util.ArrayList<java.lang.Integer> r25, int r26, boolean r27, boolean r28) {
        /*
            r24 = this;
            r7 = r24
            r8 = r25
            r9 = r26
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r11.<init>()     // Catch:{ Exception -> 0x05c3 }
            r0 = 44
            r1 = 32
            java.lang.String r12 = ","
            r13 = 1
            r14 = 0
            if (r28 == 0) goto L_0x00c1
            if (r9 == 0) goto L_0x004f
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x05c3 }
            int r3 = r25.size()     // Catch:{ Exception -> 0x05c3 }
            r2.<init>(r3)     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
        L_0x0021:
            int r4 = r25.size()     // Catch:{ Exception -> 0x05c3 }
            if (r3 >= r4) goto L_0x0048
            java.lang.Object r4 = r8.get(r3)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ Exception -> 0x05c3 }
            int r4 = r4.intValue()     // Catch:{ Exception -> 0x05c3 }
            long r4 = (long) r4     // Catch:{ Exception -> 0x05c3 }
            r16 = r11
            long r10 = (long) r9     // Catch:{ Exception -> 0x05c3 }
            long r10 = r10 << r1
            long r4 = r4 | r10
            int r6 = r2.length()     // Catch:{ Exception -> 0x05c3 }
            if (r6 <= 0) goto L_0x0040
            r2.append(r0)     // Catch:{ Exception -> 0x05c3 }
        L_0x0040:
            r2.append(r4)     // Catch:{ Exception -> 0x05c3 }
            int r3 = r3 + 1
            r11 = r16
            goto L_0x0021
        L_0x0048:
            r16 = r11
            java.lang.String r0 = r2.toString()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x0055
        L_0x004f:
            r16 = r11
            java.lang.String r0 = android.text.TextUtils.join(r12, r8)     // Catch:{ Exception -> 0x05c3 }
        L_0x0055:
            r1 = r0
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r2.<init>()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r4 = "SELECT uid FROM scheduled_messages WHERE mid IN(%s)"
            java.lang.Object[] r5 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x05c3 }
            r5[r14] = r1     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object[] r4 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x05c3 }
        L_0x006f:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x008b }
            if (r0 == 0) goto L_0x008f
            long r4 = r3.longValue(r14)     // Catch:{ Exception -> 0x008b }
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x008b }
            boolean r0 = r2.contains(r0)     // Catch:{ Exception -> 0x008b }
            if (r0 != 0) goto L_0x006f
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x008b }
            r2.add(r0)     // Catch:{ Exception -> 0x008b }
            goto L_0x006f
        L_0x008b:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x05c3 }
        L_0x008f:
            r3.dispose()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r4 = "DELETE FROM scheduled_messages WHERE mid IN(%s)"
            java.lang.Object[] r5 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x05c3 }
            r5[r14] = r1     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r1 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            int r0 = r2.size()     // Catch:{ Exception -> 0x05c3 }
        L_0x00af:
            if (r14 >= r0) goto L_0x00bd
            java.lang.Object r1 = r2.get(r14)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Long r1 = (java.lang.Long) r1     // Catch:{ Exception -> 0x05c3 }
            r7.broadcastScheduledMessagesChange(r1)     // Catch:{ Exception -> 0x05c3 }
            int r14 = r14 + 1
            goto L_0x00af
        L_0x00bd:
            r1 = r16
            goto L_0x05c2
        L_0x00c1:
            r16 = r11
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r10.<init>(r8)     // Catch:{ Exception -> 0x05c3 }
            android.util.LongSparseArray r11 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x05c3 }
            r11.<init>()     // Catch:{ Exception -> 0x05c3 }
            android.util.LongSparseArray r6 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x05c3 }
            r6.<init>()     // Catch:{ Exception -> 0x05c3 }
            if (r9 == 0) goto L_0x0107
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x05c3 }
            int r3 = r25.size()     // Catch:{ Exception -> 0x05c3 }
            r2.<init>(r3)     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
        L_0x00de:
            int r4 = r25.size()     // Catch:{ Exception -> 0x05c3 }
            if (r3 >= r4) goto L_0x0102
            java.lang.Object r4 = r8.get(r3)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ Exception -> 0x05c3 }
            int r4 = r4.intValue()     // Catch:{ Exception -> 0x05c3 }
            long r4 = (long) r4     // Catch:{ Exception -> 0x05c3 }
            long r14 = (long) r9     // Catch:{ Exception -> 0x05c3 }
            long r14 = r14 << r1
            long r4 = r4 | r14
            int r14 = r2.length()     // Catch:{ Exception -> 0x05c3 }
            if (r14 <= 0) goto L_0x00fb
            r2.append(r0)     // Catch:{ Exception -> 0x05c3 }
        L_0x00fb:
            r2.append(r4)     // Catch:{ Exception -> 0x05c3 }
            int r3 = r3 + 1
            r14 = 0
            goto L_0x00de
        L_0x0102:
            java.lang.String r0 = r2.toString()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x010b
        L_0x0107:
            java.lang.String r0 = android.text.TextUtils.join(r12, r8)     // Catch:{ Exception -> 0x05c3 }
        L_0x010b:
            r14 = r0
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r15.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r5.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x05c3 }
            r4.<init>()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.messenger.UserConfig r0 = r24.getUserConfig()     // Catch:{ Exception -> 0x05c3 }
            int r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r3 = "SELECT uid, data, read_state, out, mention, mid FROM messages WHERE mid IN(%s)"
            r18 = r4
            java.lang.Object[] r4 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x05c3 }
            r13 = 0
            r4[r13] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object[] r3 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r4 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x05c3 }
        L_0x013a:
            boolean r1 = r4.next()     // Catch:{ Exception -> 0x022f }
            if (r1 == 0) goto L_0x0225
            long r2 = r4.longValue(r13)     // Catch:{ Exception -> 0x022f }
            r1 = 5
            int r1 = r4.intValue(r1)     // Catch:{ Exception -> 0x022f }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x022f }
            r10.remove(r13)     // Catch:{ Exception -> 0x022f }
            java.lang.Object r13 = r6.get(r2)     // Catch:{ Exception -> 0x022f }
            java.util.ArrayList r13 = (java.util.ArrayList) r13     // Catch:{ Exception -> 0x022f }
            if (r13 != 0) goto L_0x0160
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x022f }
            r13.<init>()     // Catch:{ Exception -> 0x022f }
            r6.put(r2, r13)     // Catch:{ Exception -> 0x022f }
        L_0x0160:
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x022f }
            r13.add(r1)     // Catch:{ Exception -> 0x022f }
            r21 = r5
            r13 = r6
            long r5 = (long) r0
            int r1 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r1 == 0) goto L_0x01cd
            r1 = 2
            int r5 = r4.intValue(r1)     // Catch:{ Exception -> 0x01c4 }
            r6 = 3
            int r19 = r4.intValue(r6)     // Catch:{ Exception -> 0x01c4 }
            if (r19 != 0) goto L_0x01cd
            java.lang.Object r19 = r11.get(r2)     // Catch:{ Exception -> 0x01c4 }
            java.lang.Integer[] r19 = (java.lang.Integer[]) r19     // Catch:{ Exception -> 0x01c4 }
            if (r19 != 0) goto L_0x0199
            java.lang.Integer[] r6 = new java.lang.Integer[r1]     // Catch:{ Exception -> 0x01c4 }
            r1 = 0
            java.lang.Integer r17 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x01c4 }
            r6[r1] = r17     // Catch:{ Exception -> 0x01c4 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x01c4 }
            r1 = 1
            r6[r1] = r19     // Catch:{ Exception -> 0x01c4 }
            r11.put(r2, r6)     // Catch:{ Exception -> 0x01c4 }
            r19 = r6
            r1 = 2
        L_0x0199:
            if (r5 >= r1) goto L_0x01ab
            r1 = 1
            r6 = r19[r1]     // Catch:{ Exception -> 0x01c4 }
            r6 = r19[r1]     // Catch:{ Exception -> 0x01c4 }
            int r6 = r6.intValue()     // Catch:{ Exception -> 0x01c4 }
            int r6 = r6 + r1
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x01c4 }
            r19[r1] = r6     // Catch:{ Exception -> 0x01c4 }
        L_0x01ab:
            r6 = 2
            if (r5 == 0) goto L_0x01b0
            if (r5 != r6) goto L_0x01ce
        L_0x01b0:
            r1 = 0
            r5 = r19[r1]     // Catch:{ Exception -> 0x01c4 }
            r5 = r19[r1]     // Catch:{ Exception -> 0x01c4 }
            int r5 = r5.intValue()     // Catch:{ Exception -> 0x01c4 }
            r17 = 1
            int r5 = r5 + 1
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x01c4 }
            r19[r1] = r5     // Catch:{ Exception -> 0x01c4 }
            goto L_0x01ce
        L_0x01c4:
            r0 = move-exception
            r23 = r13
            r20 = r18
            r22 = r21
            goto L_0x0236
        L_0x01cd:
            r6 = 2
        L_0x01ce:
            int r1 = (int) r2     // Catch:{ Exception -> 0x01c4 }
            if (r1 == 0) goto L_0x01d9
            if (r27 != 0) goto L_0x01d9
            r6 = r13
            r5 = r21
        L_0x01d6:
            r13 = 0
            goto L_0x013a
        L_0x01d9:
            r1 = 1
            org.telegram.tgnet.NativeByteBuffer r2 = r4.byteBufferValue(r1)     // Catch:{ Exception -> 0x01c4 }
            if (r2 == 0) goto L_0x0214
            r1 = 0
            int r3 = r2.readInt32(r1)     // Catch:{ Exception -> 0x01c4 }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r3, r1)     // Catch:{ Exception -> 0x01c4 }
            org.telegram.messenger.UserConfig r1 = r24.getUserConfig()     // Catch:{ Exception -> 0x01c4 }
            int r1 = r1.clientUserId     // Catch:{ Exception -> 0x01c4 }
            r3.readAttachPath(r2, r1)     // Catch:{ Exception -> 0x01c4 }
            r2.reuse()     // Catch:{ Exception -> 0x01c4 }
            r19 = 0
            r1 = r24
            r2 = r3
            r5 = 3
            r3 = r15
            r20 = r18
            r18 = r4
            r4 = r20
            r22 = r21
            r21 = r13
            r13 = 3
            r5 = r22
            r23 = r21
            r13 = 2
            r6 = r19
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x0212 }
            goto L_0x021c
        L_0x0212:
            r0 = move-exception
            goto L_0x0239
        L_0x0214:
            r23 = r13
            r20 = r18
            r22 = r21
            r18 = r4
        L_0x021c:
            r4 = r18
            r18 = r20
            r5 = r22
            r6 = r23
            goto L_0x01d6
        L_0x0225:
            r22 = r5
            r23 = r6
            r20 = r18
            r13 = 2
            r18 = r4
            goto L_0x023c
        L_0x022f:
            r0 = move-exception
            r22 = r5
            r23 = r6
            r20 = r18
        L_0x0236:
            r13 = 2
            r18 = r4
        L_0x0239:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x05c3 }
        L_0x023c:
            r18.dispose()     // Catch:{ Exception -> 0x05c3 }
            r1 = r20
            r2 = 1
            r7.deleteFromDownloadQueue(r1, r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$_gXmi4SmhjsIUeogOXZFN-86hCw r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$_gXmi4SmhjsIUeogOXZFN-86hCw     // Catch:{ Exception -> 0x05c3 }
            r1 = r22
            r0.<init>(r1)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.messenger.FileLoader r0 = r24.getFileLoader()     // Catch:{ Exception -> 0x05c3 }
            r1 = 0
            r0.deleteFiles(r15, r1)     // Catch:{ Exception -> 0x05c3 }
            r0 = 0
        L_0x0258:
            int r1 = r11.size()     // Catch:{ Exception -> 0x05c3 }
            if (r0 >= r1) goto L_0x02dd
            long r1 = r11.keyAt(r0)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object r3 = r11.valueAt(r0)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer[] r3 = (java.lang.Integer[]) r3     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r4 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x05c3 }
            r5.<init>()     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r6 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r5.append(r6)     // Catch:{ Exception -> 0x05c3 }
            r5.append(r1)     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x05c3 }
            r6 = 0
            java.lang.Object[] r15 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r15)     // Catch:{ Exception -> 0x05c3 }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x05c3 }
            if (r5 == 0) goto L_0x0292
            int r5 = r4.intValue(r6)     // Catch:{ Exception -> 0x05c3 }
            r6 = 1
            int r15 = r4.intValue(r6)     // Catch:{ Exception -> 0x05c3 }
            goto L_0x0294
        L_0x0292:
            r5 = 0
            r15 = 0
        L_0x0294:
            r4.dispose()     // Catch:{ Exception -> 0x05c3 }
            java.lang.Long r4 = java.lang.Long.valueOf(r1)     // Catch:{ Exception -> 0x05c3 }
            r6 = r16
            r6.add(r4)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r4 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r13 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r13)     // Catch:{ Exception -> 0x05c3 }
            r4.requery()     // Catch:{ Exception -> 0x05c3 }
            r13 = 0
            r16 = r3[r13]     // Catch:{ Exception -> 0x05c3 }
            int r16 = r16.intValue()     // Catch:{ Exception -> 0x05c3 }
            int r5 = r5 - r16
            int r5 = java.lang.Math.max(r13, r5)     // Catch:{ Exception -> 0x05c3 }
            r13 = 1
            r4.bindInteger(r13, r5)     // Catch:{ Exception -> 0x05c3 }
            r3 = r3[r13]     // Catch:{ Exception -> 0x05c3 }
            int r3 = r3.intValue()     // Catch:{ Exception -> 0x05c3 }
            int r15 = r15 - r3
            r3 = 0
            int r5 = java.lang.Math.max(r3, r15)     // Catch:{ Exception -> 0x05c3 }
            r3 = 2
            r4.bindInteger(r3, r5)     // Catch:{ Exception -> 0x05c3 }
            r3 = 3
            r4.bindLong(r3, r1)     // Catch:{ Exception -> 0x05c3 }
            r4.step()     // Catch:{ Exception -> 0x05c3 }
            r4.dispose()     // Catch:{ Exception -> 0x05c3 }
            int r0 = r0 + 1
            r16 = r6
            r13 = 2
            goto L_0x0258
        L_0x02dd:
            r6 = r16
            int r0 = r23.size()     // Catch:{ Exception -> 0x05c3 }
            r1 = 0
        L_0x02e4:
            if (r1 >= r0) goto L_0x03e5
            r2 = r23
            long r3 = r2.keyAt(r1)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object r5 = r2.valueAt(r1)     // Catch:{ Exception -> 0x05c3 }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x05c3 }
            int r13 = (int) r3     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r5 = android.text.TextUtils.join(r12, r5)     // Catch:{ Exception -> 0x05c3 }
            if (r13 == 0) goto L_0x0352
            if (r13 >= 0) goto L_0x0327
            org.telegram.SQLite.SQLiteDatabase r15 = r7.database     // Catch:{ Exception -> 0x05c3 }
            r27 = r0
            java.util.Locale r0 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            r23 = r2
            java.lang.String r2 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r18 = r6
            r16 = r12
            r12 = 2
            java.lang.Object[] r6 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x05c3 }
            int r12 = -r13
            java.lang.Integer r12 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x05c3 }
            r13 = 0
            r6[r13] = r12     // Catch:{ Exception -> 0x05c3 }
            r12 = 1
            r6[r12] = r5     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r0 = java.lang.String.format(r0, r2, r6)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r15.executeFast(r0)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x035a
        L_0x0327:
            r27 = r0
            r23 = r2
            r18 = r6
            r16 = r12
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r6 = "UPDATE user_settings SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r12 = 2
            java.lang.Object[] r15 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r12 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x05c3 }
            r13 = 0
            r15[r13] = r12     // Catch:{ Exception -> 0x05c3 }
            r12 = 1
            r15[r12] = r5     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r2, r6, r15)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x035a
        L_0x0352:
            r27 = r0
            r23 = r2
            r18 = r6
            r16 = r12
        L_0x035a:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r6 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid IN(%s)"
            r12 = 2
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x05c3 }
            java.lang.Long r12 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
            r15 = 0
            r13[r15] = r12     // Catch:{ Exception -> 0x05c3 }
            r12 = 1
            r13[r12] = r5     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r5 = java.lang.String.format(r2, r6, r13)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r5 = "SELECT changes()"
            r6 = 0
            java.lang.Object[] r12 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r5, r12)     // Catch:{ Exception -> 0x05c3 }
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x05c3 }
            if (r5 == 0) goto L_0x0392
            int r5 = r0.intValue(r6)     // Catch:{ Exception -> 0x05c3 }
            goto L_0x0393
        L_0x0392:
            r5 = 0
        L_0x0393:
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            if (r5 <= 0) goto L_0x03db
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r6 = "SELECT count FROM chat_pinned_count WHERE uid = %d"
            r12 = 1
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x05c3 }
            java.lang.Long r12 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
            r15 = 0
            r13[r15] = r12     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r2, r6, r13)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r2, r6)     // Catch:{ Exception -> 0x05c3 }
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x05c3 }
            if (r2 == 0) goto L_0x03d8
            int r2 = r0.intValue(r15)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r6 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r12 = "UPDATE chat_pinned_count SET count = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r12)     // Catch:{ Exception -> 0x05c3 }
            r6.requery()     // Catch:{ Exception -> 0x05c3 }
            int r2 = r2 - r5
            int r2 = java.lang.Math.max(r15, r2)     // Catch:{ Exception -> 0x05c3 }
            r5 = 1
            r6.bindInteger(r5, r2)     // Catch:{ Exception -> 0x05c3 }
            r2 = 2
            r6.bindLong(r2, r3)     // Catch:{ Exception -> 0x05c3 }
            r6.step()     // Catch:{ Exception -> 0x05c3 }
            r6.dispose()     // Catch:{ Exception -> 0x05c3 }
        L_0x03d8:
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
        L_0x03db:
            int r1 = r1 + 1
            r0 = r27
            r12 = r16
            r6 = r18
            goto L_0x02e4
        L_0x03e5:
            r18 = r6
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "DELETE FROM messages WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
            r4[r3] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "DELETE FROM polls WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
            r4[r3] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "DELETE FROM bot_keyboard WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
            r4[r3] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "DELETE FROM messages_seq WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
            r4[r3] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x05c3 }
            if (r0 == 0) goto L_0x055d
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "SELECT uid, type FROM media_v2 WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
            r4[r3] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r1 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object[] r2 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x05c3 }
            r1 = 0
        L_0x0468:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x05c3 }
            if (r2 == 0) goto L_0x04b1
            long r4 = r0.longValue(r3)     // Catch:{ Exception -> 0x05c3 }
            r2 = 1
            int r3 = r0.intValue(r2)     // Catch:{ Exception -> 0x05c3 }
            if (r1 != 0) goto L_0x047e
            android.util.SparseArray r1 = new android.util.SparseArray     // Catch:{ Exception -> 0x05c3 }
            r1.<init>()     // Catch:{ Exception -> 0x05c3 }
        L_0x047e:
            java.lang.Object r2 = r1.get(r3)     // Catch:{ Exception -> 0x05c3 }
            android.util.LongSparseArray r2 = (android.util.LongSparseArray) r2     // Catch:{ Exception -> 0x05c3 }
            if (r2 != 0) goto L_0x0494
            android.util.LongSparseArray r2 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x05c3 }
            r2.<init>()     // Catch:{ Exception -> 0x05c3 }
            r6 = 0
            java.lang.Integer r9 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x05c3 }
            r1.put(r3, r2)     // Catch:{ Exception -> 0x05c3 }
            goto L_0x049b
        L_0x0494:
            java.lang.Object r3 = r2.get(r4)     // Catch:{ Exception -> 0x05c3 }
            r9 = r3
            java.lang.Integer r9 = (java.lang.Integer) r9     // Catch:{ Exception -> 0x05c3 }
        L_0x049b:
            if (r9 != 0) goto L_0x04a2
            r3 = 0
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
        L_0x04a2:
            int r3 = r9.intValue()     // Catch:{ Exception -> 0x05c3 }
            r6 = 1
            int r3 = r3 + r6
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
            r2.put(r4, r3)     // Catch:{ Exception -> 0x05c3 }
            r3 = 0
            goto L_0x0468
        L_0x04b1:
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            if (r1 == 0) goto L_0x055a
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x05c3 }
            r2 = 0
        L_0x04bf:
            int r3 = r1.size()     // Catch:{ Exception -> 0x05c3 }
            if (r2 >= r3) goto L_0x0554
            int r3 = r1.keyAt(r2)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object r4 = r1.valueAt(r2)     // Catch:{ Exception -> 0x05c3 }
            android.util.LongSparseArray r4 = (android.util.LongSparseArray) r4     // Catch:{ Exception -> 0x05c3 }
            r5 = 0
        L_0x04d0:
            int r6 = r4.size()     // Catch:{ Exception -> 0x05c3 }
            if (r5 >= r6) goto L_0x0548
            long r9 = r4.keyAt(r5)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteDatabase r6 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r13 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r26 = r1
            r15 = 2
            java.lang.Object[] r1 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x05c3 }
            java.lang.Long r15 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x05c3 }
            r16 = r11
            r11 = 0
            r1[r11] = r15     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
            r17 = 1
            r1[r17] = r15     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r1 = java.lang.String.format(r12, r13, r1)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r12)     // Catch:{ Exception -> 0x05c3 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x05c3 }
            r12 = -1
            if (r6 == 0) goto L_0x0511
            int r6 = r1.intValue(r11)     // Catch:{ Exception -> 0x05c3 }
            r11 = 1
            int r13 = r1.intValue(r11)     // Catch:{ Exception -> 0x05c3 }
            goto L_0x0513
        L_0x0511:
            r6 = -1
            r13 = 0
        L_0x0513:
            r1.dispose()     // Catch:{ Exception -> 0x05c3 }
            if (r6 == r12) goto L_0x053f
            r0.requery()     // Catch:{ Exception -> 0x05c3 }
            java.lang.Object r1 = r4.valueAt(r5)     // Catch:{ Exception -> 0x05c3 }
            java.lang.Integer r1 = (java.lang.Integer) r1     // Catch:{ Exception -> 0x05c3 }
            int r1 = r1.intValue()     // Catch:{ Exception -> 0x05c3 }
            int r6 = r6 - r1
            r1 = 0
            int r6 = java.lang.Math.max(r1, r6)     // Catch:{ Exception -> 0x05c3 }
            r1 = 1
            r0.bindLong(r1, r9)     // Catch:{ Exception -> 0x05c3 }
            r1 = 2
            r0.bindInteger(r1, r3)     // Catch:{ Exception -> 0x05c3 }
            r9 = 3
            r0.bindInteger(r9, r6)     // Catch:{ Exception -> 0x05c3 }
            r6 = 4
            r0.bindInteger(r6, r13)     // Catch:{ Exception -> 0x05c3 }
            r0.step()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x0541
        L_0x053f:
            r1 = 2
            r9 = 3
        L_0x0541:
            int r5 = r5 + 1
            r1 = r26
            r11 = r16
            goto L_0x04d0
        L_0x0548:
            r26 = r1
            r16 = r11
            r1 = 2
            r9 = 3
            int r2 = r2 + 1
            r1 = r26
            goto L_0x04bf
        L_0x0554:
            r16 = r11
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x058f
        L_0x055a:
            r16 = r11
            goto L_0x058f
        L_0x055d:
            r16 = r11
            if (r9 != 0) goto L_0x0571
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r1 = "UPDATE media_counts_v2 SET old = 1 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            goto L_0x058f
        L_0x0571:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            int r3 = -r9
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x05c3 }
            r5 = 0
            r4[r5] = r3     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r1 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
        L_0x058f:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x05c3 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r2 = "DELETE FROM media_v2 WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r3 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x05c3 }
            r4 = 0
            r3[r4] = r14     // Catch:{ Exception -> 0x05c3 }
            java.lang.String r1 = java.lang.String.format(r1, r2, r3)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x05c3 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x05c3 }
            r0.dispose()     // Catch:{ Exception -> 0x05c3 }
            org.telegram.messenger.MediaDataController r0 = r24.getMediaDataController()     // Catch:{ Exception -> 0x05c3 }
            r1 = 0
            r0.clearBotKeyboard(r1, r8)     // Catch:{ Exception -> 0x05c3 }
            int r0 = r16.size()     // Catch:{ Exception -> 0x05c3 }
            if (r0 == 0) goto L_0x05bd
            r1 = 0
            r7.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x05c3 }
        L_0x05bd:
            r1 = r18
            r7.updateWidgets((java.util.ArrayList<java.lang.Long>) r1)     // Catch:{ Exception -> 0x05c3 }
        L_0x05c2:
            return r1
        L_0x05c3:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r1 = 0
            return r1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsDeleted$157(java.util.ArrayList, int, boolean, boolean):java.util.ArrayList");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMessagesAsDeletedInternal$155 */
    public /* synthetic */ void lambda$markMessagesAsDeletedInternal$155$MessagesStorage(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v5, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v14, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v16, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v17, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v18, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: updateDialogsWithDeletedMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$updateDialogsWithDeletedMessages$156(java.util.ArrayList<java.lang.Integer> r18, java.util.ArrayList<java.lang.Long> r19, int r20) {
        /*
            r17 = this;
            r1 = r17
            r0 = r19
            r2 = r20
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0266 }
            r3.<init>()     // Catch:{ Exception -> 0x0266 }
            boolean r4 = r18.isEmpty()     // Catch:{ Exception -> 0x0266 }
            r5 = 3
            r6 = 2
            java.lang.String r7 = ","
            r8 = 1
            r9 = 0
            if (r4 != 0) goto L_0x0093
            if (r2 == 0) goto L_0x002b
            int r4 = -r2
            long r10 = (long) r4
            java.lang.Long r4 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0266 }
            r3.add(r4)     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0266 }
            java.lang.String r10 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages WHERE uid = ? AND date = (SELECT MAX(date) FROM messages WHERE uid = ?)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r10)     // Catch:{ Exception -> 0x0266 }
            goto L_0x0062
        L_0x002b:
            r4 = r18
            java.lang.String r4 = android.text.TextUtils.join(r7, r4)     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x0266 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x0266 }
            java.lang.String r12 = "SELECT did FROM dialogs WHERE last_mid IN(%s)"
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0266 }
            r13[r9] = r4     // Catch:{ Exception -> 0x0266 }
            java.lang.String r4 = java.lang.String.format(r11, r12, r13)     // Catch:{ Exception -> 0x0266 }
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteCursor r4 = r10.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x0266 }
        L_0x0045:
            boolean r10 = r4.next()     // Catch:{ Exception -> 0x0266 }
            if (r10 == 0) goto L_0x0057
            long r10 = r4.longValue(r9)     // Catch:{ Exception -> 0x0266 }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0266 }
            r3.add(r10)     // Catch:{ Exception -> 0x0266 }
            goto L_0x0045
        L_0x0057:
            r4.dispose()     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0266 }
            java.lang.String r10 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages WHERE uid = ? AND date = (SELECT MAX(date) FROM messages WHERE uid = ? AND date != 0)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r10)     // Catch:{ Exception -> 0x0266 }
        L_0x0062:
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x0266 }
            r10.beginTransaction()     // Catch:{ Exception -> 0x0266 }
            r10 = 0
        L_0x0068:
            int r11 = r3.size()     // Catch:{ Exception -> 0x0266 }
            if (r10 >= r11) goto L_0x008a
            java.lang.Object r11 = r3.get(r10)     // Catch:{ Exception -> 0x0266 }
            java.lang.Long r11 = (java.lang.Long) r11     // Catch:{ Exception -> 0x0266 }
            long r11 = r11.longValue()     // Catch:{ Exception -> 0x0266 }
            r4.requery()     // Catch:{ Exception -> 0x0266 }
            r4.bindLong(r8, r11)     // Catch:{ Exception -> 0x0266 }
            r4.bindLong(r6, r11)     // Catch:{ Exception -> 0x0266 }
            r4.bindLong(r5, r11)     // Catch:{ Exception -> 0x0266 }
            r4.step()     // Catch:{ Exception -> 0x0266 }
            int r10 = r10 + 1
            goto L_0x0068
        L_0x008a:
            r4.dispose()     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0266 }
            r4.commitTransaction()     // Catch:{ Exception -> 0x0266 }
            goto L_0x009c
        L_0x0093:
            int r4 = -r2
            long r10 = (long) r4     // Catch:{ Exception -> 0x0266 }
            java.lang.Long r4 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0266 }
            r3.add(r4)     // Catch:{ Exception -> 0x0266 }
        L_0x009c:
            if (r0 == 0) goto L_0x00b7
            r4 = 0
        L_0x009f:
            int r10 = r19.size()     // Catch:{ Exception -> 0x0266 }
            if (r4 >= r10) goto L_0x00b7
            java.lang.Object r10 = r0.get(r4)     // Catch:{ Exception -> 0x0266 }
            java.lang.Long r10 = (java.lang.Long) r10     // Catch:{ Exception -> 0x0266 }
            boolean r11 = r3.contains(r10)     // Catch:{ Exception -> 0x0266 }
            if (r11 != 0) goto L_0x00b4
            r3.add(r10)     // Catch:{ Exception -> 0x0266 }
        L_0x00b4:
            int r4 = r4 + 1
            goto L_0x009f
        L_0x00b7:
            java.lang.String r0 = android.text.TextUtils.join(r7, r3)     // Catch:{ Exception -> 0x0266 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r3 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0266 }
            r3.<init>()     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0266 }
            r4.<init>()     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x0266 }
            r10.<init>()     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x0266 }
            r11.<init>()     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x0266 }
            r12.<init>()     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x0266 }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x0266 }
            java.lang.String r15 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)"
            java.lang.Object[] r5 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0266 }
            r5[r9] = r0     // Catch:{ Exception -> 0x0266 }
            java.lang.String r0 = java.lang.String.format(r14, r15, r5)     // Catch:{ Exception -> 0x0266 }
            java.lang.Object[] r5 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0266 }
            org.telegram.SQLite.SQLiteCursor r0 = r13.queryFinalized(r0, r5)     // Catch:{ Exception -> 0x0266 }
        L_0x00e8:
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x0266 }
            if (r5 == 0) goto L_0x0221
            long r13 = r0.longValue(r9)     // Catch:{ Exception -> 0x0266 }
            boolean r5 = org.telegram.messenger.DialogObject.isFolderDialogId(r13)     // Catch:{ Exception -> 0x0266 }
            r15 = 15
            if (r5 == 0) goto L_0x0129
            org.telegram.tgnet.TLRPC$TL_dialogFolder r5 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x0266 }
            r5.<init>()     // Catch:{ Exception -> 0x0266 }
            r6 = 16
            boolean r16 = r0.isNull(r6)     // Catch:{ Exception -> 0x0266 }
            if (r16 != 0) goto L_0x012e
            org.telegram.tgnet.NativeByteBuffer r6 = r0.byteBufferValue(r6)     // Catch:{ Exception -> 0x0266 }
            if (r6 == 0) goto L_0x011b
            int r8 = r6.readInt32(r9)     // Catch:{ Exception -> 0x0266 }
            org.telegram.tgnet.TLRPC$TL_folder r8 = org.telegram.tgnet.TLRPC$TL_folder.TLdeserialize(r6, r8, r9)     // Catch:{ Exception -> 0x0266 }
            r5.folder = r8     // Catch:{ Exception -> 0x0266 }
            r6.reuse()     // Catch:{ Exception -> 0x0266 }
            goto L_0x012e
        L_0x011b:
            org.telegram.tgnet.TLRPC$TL_folder r6 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x0266 }
            r6.<init>()     // Catch:{ Exception -> 0x0266 }
            r5.folder = r6     // Catch:{ Exception -> 0x0266 }
            int r8 = r0.intValue(r15)     // Catch:{ Exception -> 0x0266 }
            r6.id = r8     // Catch:{ Exception -> 0x0266 }
            goto L_0x012e
        L_0x0129:
            org.telegram.tgnet.TLRPC$TL_dialog r5 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x0266 }
            r5.<init>()     // Catch:{ Exception -> 0x0266 }
        L_0x012e:
            r5.id = r13     // Catch:{ Exception -> 0x0266 }
            r6 = 1
            int r8 = r0.intValue(r6)     // Catch:{ Exception -> 0x0266 }
            r5.top_message = r8     // Catch:{ Exception -> 0x0266 }
            r6 = 10
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x0266 }
            r5.read_inbox_max_id = r6     // Catch:{ Exception -> 0x0266 }
            r6 = 11
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x0266 }
            r5.read_outbox_max_id = r6     // Catch:{ Exception -> 0x0266 }
            r6 = 2
            int r8 = r0.intValue(r6)     // Catch:{ Exception -> 0x0266 }
            r5.unread_count = r8     // Catch:{ Exception -> 0x0266 }
            r8 = 13
            int r8 = r0.intValue(r8)     // Catch:{ Exception -> 0x0266 }
            r5.unread_mentions_count = r8     // Catch:{ Exception -> 0x0266 }
            r8 = 3
            int r13 = r0.intValue(r8)     // Catch:{ Exception -> 0x0266 }
            r5.last_message_date = r13     // Catch:{ Exception -> 0x0266 }
            r13 = 9
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            r5.pts = r13     // Catch:{ Exception -> 0x0266 }
            if (r2 != 0) goto L_0x0169
            r13 = 0
            goto L_0x016a
        L_0x0169:
            r13 = 1
        L_0x016a:
            r5.flags = r13     // Catch:{ Exception -> 0x0266 }
            r13 = 12
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            r5.pinnedNum = r13     // Catch:{ Exception -> 0x0266 }
            if (r13 == 0) goto L_0x0178
            r13 = 1
            goto L_0x0179
        L_0x0178:
            r13 = 0
        L_0x0179:
            r5.pinned = r13     // Catch:{ Exception -> 0x0266 }
            r13 = 14
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            r14 = 1
            r13 = r13 & r14
            if (r13 == 0) goto L_0x0187
            r13 = 1
            goto L_0x0188
        L_0x0187:
            r13 = 0
        L_0x0188:
            r5.unread_mark = r13     // Catch:{ Exception -> 0x0266 }
            int r13 = r0.intValue(r15)     // Catch:{ Exception -> 0x0266 }
            r5.folder_id = r13     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r13 = r3.dialogs     // Catch:{ Exception -> 0x0266 }
            r13.add(r5)     // Catch:{ Exception -> 0x0266 }
            r13 = 4
            org.telegram.tgnet.NativeByteBuffer r13 = r0.byteBufferValue(r13)     // Catch:{ Exception -> 0x0266 }
            if (r13 == 0) goto L_0x01dc
            int r14 = r13.readInt32(r9)     // Catch:{ Exception -> 0x0266 }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r13, r14, r9)     // Catch:{ Exception -> 0x0266 }
            org.telegram.messenger.UserConfig r15 = r17.getUserConfig()     // Catch:{ Exception -> 0x0266 }
            int r15 = r15.clientUserId     // Catch:{ Exception -> 0x0266 }
            r14.readAttachPath(r13, r15)     // Catch:{ Exception -> 0x0266 }
            r13.reuse()     // Catch:{ Exception -> 0x0266 }
            r13 = 5
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r14, r13)     // Catch:{ Exception -> 0x0266 }
            r13 = 6
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            r14.id = r13     // Catch:{ Exception -> 0x0266 }
            r13 = 7
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            r14.send_state = r13     // Catch:{ Exception -> 0x0266 }
            r13 = 8
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x0266 }
            if (r13 == 0) goto L_0x01d0
            r5.last_message_date = r13     // Catch:{ Exception -> 0x0266 }
        L_0x01d0:
            long r8 = r5.id     // Catch:{ Exception -> 0x0266 }
            r14.dialog_id = r8     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r8 = r3.messages     // Catch:{ Exception -> 0x0266 }
            r8.add(r14)     // Catch:{ Exception -> 0x0266 }
            addUsersAndChatsFromMessage(r14, r10, r11)     // Catch:{ Exception -> 0x0266 }
        L_0x01dc:
            long r8 = r5.id     // Catch:{ Exception -> 0x0266 }
            int r5 = (int) r8     // Catch:{ Exception -> 0x0266 }
            r14 = 32
            long r8 = r8 >> r14
            int r9 = (int) r8     // Catch:{ Exception -> 0x0266 }
            if (r5 == 0) goto L_0x020c
            if (r5 <= 0) goto L_0x01f9
            java.lang.Integer r8 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0266 }
            boolean r8 = r10.contains(r8)     // Catch:{ Exception -> 0x0266 }
            if (r8 != 0) goto L_0x021d
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0266 }
            r10.add(r5)     // Catch:{ Exception -> 0x0266 }
            goto L_0x021d
        L_0x01f9:
            int r5 = -r5
            java.lang.Integer r8 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0266 }
            boolean r8 = r11.contains(r8)     // Catch:{ Exception -> 0x0266 }
            if (r8 != 0) goto L_0x021d
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0266 }
            r11.add(r5)     // Catch:{ Exception -> 0x0266 }
            goto L_0x021d
        L_0x020c:
            java.lang.Integer r5 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0266 }
            boolean r5 = r12.contains(r5)     // Catch:{ Exception -> 0x0266 }
            if (r5 != 0) goto L_0x021d
            java.lang.Integer r5 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0266 }
            r12.add(r5)     // Catch:{ Exception -> 0x0266 }
        L_0x021d:
            r8 = 1
            r9 = 0
            goto L_0x00e8
        L_0x0221:
            r0.dispose()     // Catch:{ Exception -> 0x0266 }
            boolean r0 = r12.isEmpty()     // Catch:{ Exception -> 0x0266 }
            if (r0 != 0) goto L_0x0231
            java.lang.String r0 = android.text.TextUtils.join(r7, r12)     // Catch:{ Exception -> 0x0266 }
            r1.getEncryptedChatsInternal(r0, r4, r10)     // Catch:{ Exception -> 0x0266 }
        L_0x0231:
            boolean r0 = r11.isEmpty()     // Catch:{ Exception -> 0x0266 }
            if (r0 != 0) goto L_0x0240
            java.lang.String r0 = android.text.TextUtils.join(r7, r11)     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r3.chats     // Catch:{ Exception -> 0x0266 }
            r1.getChatsInternal(r0, r2)     // Catch:{ Exception -> 0x0266 }
        L_0x0240:
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x0266 }
            if (r0 != 0) goto L_0x024f
            java.lang.String r0 = android.text.TextUtils.join(r7, r10)     // Catch:{ Exception -> 0x0266 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r3.users     // Catch:{ Exception -> 0x0266 }
            r1.getUsersInternal(r0, r2)     // Catch:{ Exception -> 0x0266 }
        L_0x024f:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r3.dialogs     // Catch:{ Exception -> 0x0266 }
            boolean r0 = r0.isEmpty()     // Catch:{ Exception -> 0x0266 }
            if (r0 == 0) goto L_0x025d
            boolean r0 = r4.isEmpty()     // Catch:{ Exception -> 0x0266 }
            if (r0 != 0) goto L_0x026a
        L_0x025d:
            org.telegram.messenger.MessagesController r0 = r17.getMessagesController()     // Catch:{ Exception -> 0x0266 }
            r2 = 1
            r0.processDialogsUpdate(r3, r4, r2)     // Catch:{ Exception -> 0x0266 }
            goto L_0x026a
        L_0x0266:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x026a:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateDialogsWithDeletedMessages$156(java.util.ArrayList, java.util.ArrayList, int):void");
    }

    public void updateDialogsWithDeletedMessages(ArrayList<Integer> arrayList, ArrayList<Long> arrayList2, boolean z, int i) {
        if (arrayList.isEmpty() && i == 0) {
            return;
        }
        if (z) {
            this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2, i) {
                public final /* synthetic */ ArrayList f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ int f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateDialogsWithDeletedMessages$156$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$updateDialogsWithDeletedMessages$156(arrayList, arrayList2, i);
        }
    }

    public ArrayList<Long> markMessagesAsDeleted(ArrayList<Integer> arrayList, boolean z, int i, boolean z2, boolean z3) {
        if (arrayList.isEmpty()) {
            return null;
        }
        if (!z) {
            return lambda$markMessagesAsDeleted$157(arrayList, i, z2, z3);
        }
        this.storageQueue.postRunnable(new Runnable(arrayList, i, z2, z3) {
            public final /* synthetic */ ArrayList f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ boolean f$3;
            public final /* synthetic */ boolean f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessagesAsDeleted$157$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
        return null;
    }

    /* JADX WARNING: type inference failed for: r7v4 */
    /* JADX WARNING: type inference failed for: r7v11 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Incorrect type for immutable var: ssa=int, code=?, for r7v1, types: [boolean, int] */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x00c7 A[Catch:{ Exception -> 0x0109 }] */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x00f4  */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x0131 A[Catch:{ Exception -> 0x02b6 }] */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x01fe A[Catch:{ Exception -> 0x02b6 }] */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x0203 A[Catch:{ Exception -> 0x02b6 }] */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x0209 A[Catch:{ Exception -> 0x02b6 }] */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0250 A[Catch:{ Exception -> 0x02b6 }] */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> lambda$markMessagesAsDeleted$159(int r21, int r22, boolean r23) {
        /*
            r20 = this;
            r7 = r20
            r8 = r21
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bc }
            r9.<init>()     // Catch:{ Exception -> 0x02bc }
            android.util.LongSparseArray r10 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x02bc }
            r10.<init>()     // Catch:{ Exception -> 0x02bc }
            r0 = r22
            long r0 = (long) r0     // Catch:{ Exception -> 0x02bc }
            long r2 = (long) r8     // Catch:{ Exception -> 0x02bc }
            r4 = 32
            long r2 = r2 << r4
            long r11 = r0 | r2
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bc }
            r13.<init>()     // Catch:{ Exception -> 0x02bc }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bc }
            r14.<init>()     // Catch:{ Exception -> 0x02bc }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bc }
            r15.<init>()     // Catch:{ Exception -> 0x02bc }
            org.telegram.messenger.UserConfig r0 = r20.getUserConfig()     // Catch:{ Exception -> 0x02bc }
            int r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x02bc }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x02bc }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x02bc }
            java.lang.String r3 = "SELECT uid, data, read_state, out, mention FROM messages WHERE uid = %d AND mid <= %d"
            r6 = 2
            java.lang.Object[] r4 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02bc }
            int r5 = -r8
            java.lang.Integer r16 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x02bc }
            r6 = 0
            r4[r6] = r16     // Catch:{ Exception -> 0x02bc }
            java.lang.Long r16 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02bc }
            r6 = 1
            r4[r6] = r16     // Catch:{ Exception -> 0x02bc }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02bc }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x02bc }
            org.telegram.SQLite.SQLiteCursor r4 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x02bc }
        L_0x0051:
            boolean r1 = r4.next()     // Catch:{ Exception -> 0x0109 }
            if (r1 == 0) goto L_0x0103
            long r6 = r4.longValue(r3)     // Catch:{ Exception -> 0x0109 }
            long r2 = (long) r0     // Catch:{ Exception -> 0x0109 }
            int r1 = (r6 > r2 ? 1 : (r6 == r2 ? 0 : -1))
            if (r1 == 0) goto L_0x00b5
            r1 = 2
            int r2 = r4.intValue(r1)     // Catch:{ Exception -> 0x0109 }
            r3 = 3
            int r18 = r4.intValue(r3)     // Catch:{ Exception -> 0x0109 }
            if (r18 != 0) goto L_0x00b5
            java.lang.Object r18 = r10.get(r6)     // Catch:{ Exception -> 0x0109 }
            java.lang.Integer[] r18 = (java.lang.Integer[]) r18     // Catch:{ Exception -> 0x0109 }
            if (r18 != 0) goto L_0x008a
            java.lang.Integer[] r3 = new java.lang.Integer[r1]     // Catch:{ Exception -> 0x0109 }
            r1 = 0
            java.lang.Integer r17 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0109 }
            r3[r1] = r17     // Catch:{ Exception -> 0x0109 }
            java.lang.Integer r18 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0109 }
            r1 = 1
            r3[r1] = r18     // Catch:{ Exception -> 0x0109 }
            r10.put(r6, r3)     // Catch:{ Exception -> 0x0109 }
            r18 = r3
            r1 = 2
        L_0x008a:
            if (r2 >= r1) goto L_0x009c
            r1 = 1
            r3 = r18[r1]     // Catch:{ Exception -> 0x0109 }
            r3 = r18[r1]     // Catch:{ Exception -> 0x0109 }
            int r3 = r3.intValue()     // Catch:{ Exception -> 0x0109 }
            int r3 = r3 + r1
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0109 }
            r18[r1] = r3     // Catch:{ Exception -> 0x0109 }
        L_0x009c:
            r3 = 2
            if (r2 == 0) goto L_0x00a1
            if (r2 != r3) goto L_0x00b6
        L_0x00a1:
            r1 = 0
            r2 = r18[r1]     // Catch:{ Exception -> 0x0109 }
            r2 = r18[r1]     // Catch:{ Exception -> 0x0109 }
            int r2 = r2.intValue()     // Catch:{ Exception -> 0x0109 }
            r16 = 1
            int r2 = r2 + 1
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x0109 }
            r18[r1] = r2     // Catch:{ Exception -> 0x0109 }
            goto L_0x00b6
        L_0x00b5:
            r3 = 2
        L_0x00b6:
            int r1 = (int) r6     // Catch:{ Exception -> 0x0109 }
            if (r1 == 0) goto L_0x00c0
            if (r23 != 0) goto L_0x00c0
            r3 = 0
            r6 = 1
            r7 = r20
            goto L_0x0051
        L_0x00c0:
            r6 = 1
            org.telegram.tgnet.NativeByteBuffer r1 = r4.byteBufferValue(r6)     // Catch:{ Exception -> 0x0109 }
            if (r1 == 0) goto L_0x00f4
            r7 = 0
            int r2 = r1.readInt32(r7)     // Catch:{ Exception -> 0x0109 }
            org.telegram.tgnet.TLRPC$Message r2 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r1, r2, r7)     // Catch:{ Exception -> 0x0109 }
            org.telegram.messenger.UserConfig r3 = r20.getUserConfig()     // Catch:{ Exception -> 0x0109 }
            int r3 = r3.clientUserId     // Catch:{ Exception -> 0x0109 }
            r2.readAttachPath(r1, r3)     // Catch:{ Exception -> 0x0109 }
            r1.reuse()     // Catch:{ Exception -> 0x0109 }
            r16 = 0
            r1 = r20
            r3 = 3
            r7 = 3
            r18 = 2
            r3 = r13
            r19 = r4
            r4 = r15
            r22 = r5
            r5 = r14
            r7 = 1
            r6 = r16
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x00f2 }
            goto L_0x00f9
        L_0x00f2:
            r0 = move-exception
            goto L_0x010f
        L_0x00f4:
            r19 = r4
            r22 = r5
            r7 = 1
        L_0x00f9:
            r3 = 0
            r6 = 1
            r7 = r20
            r5 = r22
            r4 = r19
            goto L_0x0051
        L_0x0103:
            r19 = r4
            r22 = r5
            r7 = 1
            goto L_0x0112
        L_0x0109:
            r0 = move-exception
            r19 = r4
            r22 = r5
            r7 = 1
        L_0x010f:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x02b8 }
        L_0x0112:
            r19.dispose()     // Catch:{ Exception -> 0x02b8 }
            r1 = r20
            r1.deleteFromDownloadQueue(r15, r7)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$vQCKcuNOp2OPFgONw8zoAOf6SrQ r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$vQCKcuNOp2OPFgONw8zoAOf6SrQ     // Catch:{ Exception -> 0x02b6 }
            r0.<init>(r14)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.messenger.FileLoader r0 = r20.getFileLoader()     // Catch:{ Exception -> 0x02b6 }
            r2 = 0
            r0.deleteFiles(r13, r2)     // Catch:{ Exception -> 0x02b6 }
            r6 = 0
        L_0x012b:
            int r0 = r10.size()     // Catch:{ Exception -> 0x02b6 }
            if (r6 >= r0) goto L_0x01a6
            long r2 = r10.keyAt(r6)     // Catch:{ Exception -> 0x02b6 }
            java.lang.Object r0 = r10.valueAt(r6)     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer[] r0 = (java.lang.Integer[]) r0     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02b6 }
            r5.<init>()     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r13 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r5.append(r13)     // Catch:{ Exception -> 0x02b6 }
            r5.append(r2)     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x02b6 }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r14)     // Catch:{ Exception -> 0x02b6 }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x02b6 }
            if (r5 == 0) goto L_0x0164
            int r5 = r4.intValue(r13)     // Catch:{ Exception -> 0x02b6 }
            int r13 = r4.intValue(r7)     // Catch:{ Exception -> 0x02b6 }
            goto L_0x0166
        L_0x0164:
            r5 = 0
            r13 = 0
        L_0x0166:
            r4.dispose()     // Catch:{ Exception -> 0x02b6 }
            java.lang.Long r4 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x02b6 }
            r9.add(r4)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r14 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r14)     // Catch:{ Exception -> 0x02b6 }
            r4.requery()     // Catch:{ Exception -> 0x02b6 }
            r14 = 0
            r15 = r0[r14]     // Catch:{ Exception -> 0x02b6 }
            int r15 = r15.intValue()     // Catch:{ Exception -> 0x02b6 }
            int r5 = r5 - r15
            int r5 = java.lang.Math.max(r14, r5)     // Catch:{ Exception -> 0x02b6 }
            r4.bindInteger(r7, r5)     // Catch:{ Exception -> 0x02b6 }
            r0 = r0[r7]     // Catch:{ Exception -> 0x02b6 }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x02b6 }
            int r13 = r13 - r0
            int r0 = java.lang.Math.max(r14, r13)     // Catch:{ Exception -> 0x02b6 }
            r5 = 2
            r4.bindInteger(r5, r0)     // Catch:{ Exception -> 0x02b6 }
            r13 = 3
            r4.bindLong(r13, r2)     // Catch:{ Exception -> 0x02b6 }
            r4.step()     // Catch:{ Exception -> 0x02b6 }
            r4.dispose()     // Catch:{ Exception -> 0x02b6 }
            int r6 = r6 + 1
            goto L_0x012b
        L_0x01a6:
            r5 = 2
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r21)     // Catch:{ Exception -> 0x02b6 }
            r10 = 0
            r4[r10] = r6     // Catch:{ Exception -> 0x02b6 }
            java.lang.Long r6 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02b6 }
            r4[r7] = r6     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02b6 }
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r21)     // Catch:{ Exception -> 0x02b6 }
            r8 = 0
            r4[r8] = r6     // Catch:{ Exception -> 0x02b6 }
            java.lang.Long r6 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02b6 }
            r4[r7] = r6     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02b6 }
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = "SELECT changes()"
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x02b6 }
            boolean r3 = r0.next()     // Catch:{ Exception -> 0x02b6 }
            if (r3 == 0) goto L_0x0203
            int r6 = r0.intValue(r4)     // Catch:{ Exception -> 0x02b6 }
            goto L_0x0204
        L_0x0203:
            r6 = 0
        L_0x0204:
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            if (r6 <= 0) goto L_0x0250
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = "SELECT count FROM chat_pinned_count WHERE uid = %d"
            java.lang.Object[] r4 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r22)     // Catch:{ Exception -> 0x02b6 }
            r10 = 0
            r4[r10] = r8     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02b6 }
            java.lang.Object[] r4 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x02b6 }
            boolean r3 = r0.next()     // Catch:{ Exception -> 0x02b6 }
            if (r3 == 0) goto L_0x024a
            int r3 = r0.intValue(r10)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r8 = "UPDATE chat_pinned_count SET count = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r8)     // Catch:{ Exception -> 0x02b6 }
            r4.requery()     // Catch:{ Exception -> 0x02b6 }
            int r3 = r3 - r6
            int r3 = java.lang.Math.max(r10, r3)     // Catch:{ Exception -> 0x02b6 }
            r4.bindInteger(r7, r3)     // Catch:{ Exception -> 0x02b6 }
            r3 = r22
            long r13 = (long) r3     // Catch:{ Exception -> 0x02b6 }
            r4.bindLong(r5, r13)     // Catch:{ Exception -> 0x02b6 }
            r4.step()     // Catch:{ Exception -> 0x02b6 }
            r4.dispose()     // Catch:{ Exception -> 0x02b6 }
            goto L_0x024c
        L_0x024a:
            r3 = r22
        L_0x024c:
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            goto L_0x0252
        L_0x0250:
            r3 = r22
        L_0x0252:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r4 = "DELETE FROM messages WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x02b6 }
            r10 = 0
            r6[r10] = r8     // Catch:{ Exception -> 0x02b6 }
            java.lang.Long r8 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02b6 }
            r6[r7] = r8     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r4 = java.lang.String.format(r2, r4, r6)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02b6 }
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r4 = "DELETE FROM media_v2 WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r5 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x02b6 }
            r8 = 0
            r5[r8] = r6     // Catch:{ Exception -> 0x02b6 }
            java.lang.Long r6 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02b6 }
            r5[r7] = r6     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r4 = java.lang.String.format(r2, r4, r5)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02b6 }
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r4 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            java.lang.Object[] r5 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02b6 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x02b6 }
            r6 = 0
            r5[r6] = r3     // Catch:{ Exception -> 0x02b6 }
            java.lang.String r2 = java.lang.String.format(r2, r4, r5)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02b6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02b6 }
            r0.dispose()     // Catch:{ Exception -> 0x02b6 }
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r9)     // Catch:{ Exception -> 0x02b6 }
            return r9
        L_0x02b6:
            r0 = move-exception
            goto L_0x02be
        L_0x02b8:
            r0 = move-exception
            r1 = r20
            goto L_0x02be
        L_0x02bc:
            r0 = move-exception
            r1 = r7
        L_0x02be:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r0 = 0
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsDeleted$159(int, int, boolean):java.util.ArrayList");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$markMessagesAsDeletedInternal$158 */
    public /* synthetic */ void lambda$markMessagesAsDeletedInternal$158$MessagesStorage(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    public ArrayList<Long> markMessagesAsDeleted(int i, int i2, boolean z, boolean z2) {
        if (!z) {
            return lambda$markMessagesAsDeleted$159(i, i2, z2);
        }
        this.storageQueue.postRunnable(new Runnable(i, i2, z2) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ boolean f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessagesAsDeleted$159$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        return null;
    }

    private void fixUnsupportedMedia(TLRPC$Message tLRPC$Message) {
        if (tLRPC$Message != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
            if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaUnsupported_old) {
                if (tLRPC$MessageMedia.bytes.length == 0) {
                    byte[] bArr = new byte[1];
                    tLRPC$MessageMedia.bytes = bArr;
                    bArr[0] = Byte.MAX_VALUE;
                }
            } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaUnsupported) {
                TLRPC$TL_messageMediaUnsupported_old tLRPC$TL_messageMediaUnsupported_old = new TLRPC$TL_messageMediaUnsupported_old();
                tLRPC$Message.media = tLRPC$TL_messageMediaUnsupported_old;
                byte[] bArr2 = new byte[1];
                tLRPC$TL_messageMediaUnsupported_old.bytes = bArr2;
                bArr2[0] = Byte.MAX_VALUE;
                tLRPC$Message.flags |= 512;
            }
        }
    }

    private void doneHolesInTable(String str, long j, int i) throws Exception {
        if (i == 0) {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM " + str + " WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        } else {
            SQLiteDatabase sQLiteDatabase2 = this.database;
            Locale locale2 = Locale.US;
            sQLiteDatabase2.executeFast(String.format(locale2, "DELETE FROM " + str + " WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        }
        SQLiteDatabase sQLiteDatabase3 = this.database;
        SQLitePreparedStatement executeFast = sQLiteDatabase3.executeFast("REPLACE INTO " + str + " VALUES(?, ?, ?)");
        executeFast.requery();
        executeFast.bindLong(1, j);
        executeFast.bindInteger(2, 1);
        executeFast.bindInteger(3, 1);
        executeFast.step();
        executeFast.dispose();
    }

    public void doneHolesInMedia(long j, int i, int i2) throws Exception {
        if (i2 == -1) {
            if (i == 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            } else {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
            for (int i3 = 0; i3 < 6; i3++) {
                executeFast.requery();
                executeFast.bindLong(1, j);
                executeFast.bindInteger(2, i3);
                executeFast.bindInteger(3, 1);
                executeFast.bindInteger(4, 1);
                executeFast.step();
            }
            executeFast.dispose();
            return;
        }
        if (i == 0) {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(j), Integer.valueOf(i2)})).stepThis().dispose();
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = 0", new Object[]{Long.valueOf(j), Integer.valueOf(i2)})).stepThis().dispose();
        }
        SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
        executeFast2.requery();
        executeFast2.bindLong(1, j);
        executeFast2.bindInteger(2, i2);
        executeFast2.bindInteger(3, 1);
        executeFast2.bindInteger(4, 1);
        executeFast2.step();
        executeFast2.dispose();
    }

    private static class Hole {
        public int end;
        public int start;
        public int type;

        public Hole(int i, int i2) {
            this.start = i;
            this.end = i2;
        }

        public Hole(int i, int i2, int i3) {
            this.type = i;
            this.start = i2;
            this.end = i3;
        }
    }

    public void closeHolesInMedia(long j, int i, int i2, int i3) {
        SQLiteCursor sQLiteCursor;
        long j2 = j;
        int i4 = i;
        int i5 = i2;
        int i6 = 4;
        if (i3 < 0) {
            try {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type >= 0 AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(j), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        } else {
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(j), Integer.valueOf(i3), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
        }
        ArrayList arrayList = null;
        while (sQLiteCursor.next()) {
            if (arrayList == null) {
                arrayList = new ArrayList();
            }
            int intValue = sQLiteCursor.intValue(0);
            int intValue2 = sQLiteCursor.intValue(1);
            int intValue3 = sQLiteCursor.intValue(2);
            if (intValue2 != intValue3 || intValue2 != 1) {
                arrayList.add(new Hole(intValue, intValue2, intValue3));
            }
        }
        sQLiteCursor.dispose();
        if (arrayList != null) {
            int i7 = 0;
            while (i7 < arrayList.size()) {
                Hole hole = (Hole) arrayList.get(i7);
                int i8 = hole.end;
                if (i5 >= i8 - 1) {
                    if (i4 <= hole.start + 1) {
                        SQLiteDatabase sQLiteDatabase = this.database;
                        Locale locale = Locale.US;
                        Object[] objArr = new Object[i6];
                        objArr[0] = Long.valueOf(j);
                        objArr[1] = Integer.valueOf(hole.type);
                        objArr[2] = Integer.valueOf(hole.start);
                        objArr[3] = Integer.valueOf(hole.end);
                        sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d", objArr)).stepThis().dispose();
                        i6 = 4;
                        i7++;
                    }
                }
                if (i5 >= i8 - 1) {
                    if (i8 != i4) {
                        try {
                            this.database.executeFast(String.format(Locale.US, "UPDATE media_holes_v2 SET end = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        } catch (Exception e2) {
                            FileLog.e((Throwable) e2);
                        }
                    }
                    i6 = 4;
                    i7++;
                } else {
                    int i9 = hole.start;
                    if (i4 <= i9 + 1) {
                        if (i9 != i5) {
                            try {
                                this.database.executeFast(String.format(Locale.US, "UPDATE media_holes_v2 SET start = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i2), Long.valueOf(j), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            } catch (Exception e3) {
                                FileLog.e((Throwable) e3);
                            }
                        }
                        i6 = 4;
                        i7++;
                    } else {
                        this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(j), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
                        executeFast.requery();
                        executeFast.bindLong(1, j2);
                        executeFast.bindInteger(2, hole.type);
                        executeFast.bindInteger(3, hole.start);
                        executeFast.bindInteger(4, i4);
                        executeFast.step();
                        executeFast.requery();
                        executeFast.bindLong(1, j2);
                        executeFast.bindInteger(2, hole.type);
                        executeFast.bindInteger(3, i5);
                        i6 = 4;
                        executeFast.bindInteger(4, hole.end);
                        executeFast.step();
                        executeFast.dispose();
                        i7++;
                    }
                }
            }
        }
    }

    private void closeHolesInTable(String str, long j, int i, int i2) {
        String str2 = str;
        long j2 = j;
        int i3 = i;
        int i4 = i2;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            int i5 = 1;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized(String.format(locale, "SELECT start, end FROM " + str2 + " WHERE uid = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(j), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
            ArrayList arrayList = null;
            while (queryFinalized.next()) {
                if (arrayList == null) {
                    arrayList = new ArrayList();
                }
                int intValue = queryFinalized.intValue(0);
                int intValue2 = queryFinalized.intValue(1);
                if (intValue != intValue2 || intValue != 1) {
                    arrayList.add(new Hole(intValue, intValue2));
                }
            }
            queryFinalized.dispose();
            if (arrayList != null) {
                int i6 = 0;
                while (i6 < arrayList.size()) {
                    Hole hole = (Hole) arrayList.get(i6);
                    int i7 = hole.end;
                    if (i4 >= i7 - 1) {
                        if (i3 <= hole.start + i5) {
                            SQLiteDatabase sQLiteDatabase2 = this.database;
                            Locale locale2 = Locale.US;
                            sQLiteDatabase2.executeFast(String.format(locale2, "DELETE FROM " + str2 + " WHERE uid = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            i6++;
                            i5 = 1;
                        }
                    }
                    if (i4 >= i7 - 1) {
                        if (i7 != i3) {
                            try {
                                SQLiteDatabase sQLiteDatabase3 = this.database;
                                Locale locale3 = Locale.US;
                                sQLiteDatabase3.executeFast(String.format(locale3, "UPDATE " + str2 + " SET end = %d WHERE uid = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            } catch (Exception e) {
                                FileLog.e((Throwable) e);
                            }
                        }
                        i6++;
                        i5 = 1;
                    } else {
                        int i8 = hole.start;
                        if (i3 <= i8 + 1) {
                            if (i8 != i4) {
                                try {
                                    SQLiteDatabase sQLiteDatabase4 = this.database;
                                    Locale locale4 = Locale.US;
                                    sQLiteDatabase4.executeFast(String.format(locale4, "UPDATE " + str2 + " SET start = %d WHERE uid = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i2), Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                                } catch (Exception e2) {
                                    FileLog.e((Throwable) e2);
                                }
                            }
                            i6++;
                            i5 = 1;
                        } else {
                            SQLiteDatabase sQLiteDatabase5 = this.database;
                            Locale locale5 = Locale.US;
                            sQLiteDatabase5.executeFast(String.format(locale5, "DELETE FROM " + str2 + " WHERE uid = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            SQLiteDatabase sQLiteDatabase6 = this.database;
                            SQLitePreparedStatement executeFast = sQLiteDatabase6.executeFast("REPLACE INTO " + str2 + " VALUES(?, ?, ?)");
                            executeFast.requery();
                            executeFast.bindLong(1, j2);
                            executeFast.bindInteger(2, hole.start);
                            executeFast.bindInteger(3, i3);
                            executeFast.step();
                            executeFast.requery();
                            executeFast.bindLong(1, j2);
                            executeFast.bindInteger(2, i4);
                            executeFast.bindInteger(3, hole.end);
                            executeFast.step();
                            executeFast.dispose();
                            i6++;
                            i5 = 1;
                        }
                    }
                }
            }
        } catch (Exception e3) {
            FileLog.e((Throwable) e3);
        }
    }

    public void replaceMessageIfExists(TLRPC$Message tLRPC$Message, ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, boolean z) {
        if (tLRPC$Message != null) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$Message, z, arrayList, arrayList2) {
                public final /* synthetic */ TLRPC$Message f$1;
                public final /* synthetic */ boolean f$2;
                public final /* synthetic */ ArrayList f$3;
                public final /* synthetic */ ArrayList f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$replaceMessageIfExists$161$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v1, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v2, resolved type: org.telegram.tgnet.NativeByteBuffer} */
    /* JADX WARNING: type inference failed for: r5v0 */
    /* JADX WARNING: type inference failed for: r5v5 */
    /* JADX WARNING: type inference failed for: r5v8 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0039, code lost:
        if (r8 != null) goto L_0x003b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x003b, code lost:
        r8.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:22:0x0049, code lost:
        if (r8 != null) goto L_0x003b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:24:?, code lost:
        r1.database.beginTransaction();
        r0 = r1.database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?)");
        r8 = r1.database.executeFast("REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:25:0x0067, code lost:
        if (r4.dialog_id != 0) goto L_0x006c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:26:0x0069, code lost:
        org.telegram.messenger.MessageObject.getDialogId(r17);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:27:0x006c, code lost:
        fixUnsupportedMedia(r17);
        r0.requery();
        r9 = new org.telegram.tgnet.NativeByteBuffer(r17.getObjectSize());
        r4.serializeToStream(r9);
        r0.bindLong(1, r2);
        r0.bindLong(2, r4.dialog_id);
        r0.bindInteger(3, org.telegram.messenger.MessageObject.getUnreadFlags(r17));
        r0.bindInteger(4, r4.send_state);
        r0.bindInteger(5, r4.date);
        r0.bindByteBuffer(6, r9);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:28:0x00a4, code lost:
        if (org.telegram.messenger.MessageObject.isOut(r17) != false) goto L_0x00ad;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x00a8, code lost:
        if (r4.from_scheduled == false) goto L_0x00ab;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:32:0x00ab, code lost:
        r15 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:33:0x00ad, code lost:
        r15 = 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x00ae, code lost:
        r0.bindInteger(7, r15);
        r0.bindInteger(8, r4.ttl);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:35:0x00be, code lost:
        if ((r4.flags & 1024) == 0) goto L_0x00c6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x00c0, code lost:
        r0.bindInteger(9, r4.views);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x00c6, code lost:
        r0.bindInteger(9, getMessageMediaType(r17));
     */
    /* JADX WARNING: Code restructure failed: missing block: B:38:0x00cd, code lost:
        r10 = r4.stickerVerified;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x00cf, code lost:
        if (r10 != 0) goto L_0x00d3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x00d1, code lost:
        r10 = 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:41:0x00d3, code lost:
        if (r10 != 2) goto L_0x00d7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:42:0x00d5, code lost:
        r10 = 2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x00d7, code lost:
        r10 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:44:0x00d8, code lost:
        r0.bindInteger(10, r10);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x00e1, code lost:
        if (r4.mentioned == false) goto L_0x00e5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x00e3, code lost:
        r15 = 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x00e5, code lost:
        r15 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x00e6, code lost:
        r0.bindInteger(11, r15);
        r0.bindInteger(12, r4.forwards);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:49:0x00f4, code lost:
        if (r4.replies == null) goto L_0x010a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:50:0x00f6, code lost:
        r5 = new org.telegram.tgnet.NativeByteBuffer(r4.replies.getObjectSize());
        r4.replies.serializeToStream(r5);
        r0.bindByteBuffer(13, r5);
        r5 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:51:0x010a, code lost:
        r0.bindNull(13);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:52:0x010d, code lost:
        r10 = r4.reply_to;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:53:0x0111, code lost:
        if (r10 == null) goto L_0x011e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:54:0x0113, code lost:
        r14 = r10.reply_to_top_id;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:55:0x0115, code lost:
        if (r14 == 0) goto L_0x0118;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:0x0118, code lost:
        r14 = r10.reply_to_msg_id;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:58:0x011a, code lost:
        r0.bindInteger(14, r14);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x011e, code lost:
        r0.bindInteger(14, 0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:60:0x0121, code lost:
        r0.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:61:0x0128, code lost:
        if (org.telegram.messenger.MediaDataController.canAddMessageToMedia(r17) == false) goto L_0x0148;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:0x012a, code lost:
        r8.requery();
        r8.bindLong(1, r2);
        r8.bindLong(2, r4.dialog_id);
        r8.bindInteger(3, r4.date);
        r8.bindInteger(4, org.telegram.messenger.MediaDataController.getMediaType(r17));
        r8.bindByteBuffer(5, r9);
        r8.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:63:0x0148, code lost:
        if (r5 == 0) goto L_0x014d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:64:0x014a, code lost:
        r5.reuse();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:65:0x014d, code lost:
        r9.reuse();
        r0.dispose();
        r8.dispose();
        r1.database.commitTransaction();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:66:0x015b, code lost:
        if (r18 == false) goto L_?;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:67:0x015d, code lost:
        r5 = new java.util.HashMap();
        r0 = new java.util.HashMap();
        r2 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:69:0x016c, code lost:
        if (r2 >= r19.size()) goto L_0x0182;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:70:0x016e, code lost:
        r7 = (org.telegram.tgnet.TLRPC$User) r19.get(r2);
        r5.put(java.lang.Integer.valueOf(r7.id), r7);
        r2 = r2 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:72:0x0186, code lost:
        if (r6 >= r20.size()) goto L_0x019c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:73:0x0188, code lost:
        r3 = (org.telegram.tgnet.TLRPC$Chat) r20.get(r6);
        r0.put(java.lang.Integer.valueOf(r3.id), r3);
        r6 = r6 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:74:0x019c, code lost:
        r2 = new org.telegram.messenger.MessageObject(r1.currentAccount, r17, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC$User>) r5, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC$Chat>) r0, true, true);
        r0 = new java.util.ArrayList();
        r0.add(r2);
        org.telegram.messenger.AndroidUtilities.runOnUIThread(new org.telegram.messenger.$$Lambda$MessagesStorage$dtOeesPkWaCDfyaZe4D91RkoFro(r1, r2, r0));
     */
    /* JADX WARNING: Code restructure failed: missing block: B:80:0x01c2, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:81:0x01c3, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:86:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:?, code lost:
        return;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x01be A[Catch:{ Exception -> 0x01c2 }] */
    /* renamed from: lambda$replaceMessageIfExists$161 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$replaceMessageIfExists$161$MessagesStorage(org.telegram.tgnet.TLRPC$Message r17, boolean r18, java.util.ArrayList r19, java.util.ArrayList r20) {
        /*
            r16 = this;
            r1 = r16
            r4 = r17
            int r0 = r4.id     // Catch:{ Exception -> 0x01c2 }
            long r2 = (long) r0     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.TLRPC$Peer r0 = r4.peer_id     // Catch:{ Exception -> 0x01c2 }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x01c2 }
            if (r0 == 0) goto L_0x0012
            long r5 = (long) r0
            r0 = 32
            long r5 = r5 << r0
            long r2 = r2 | r5
        L_0x0012:
            r5 = 0
            r6 = 0
            r7 = 1
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            java.lang.String r9 = "SELECT uid FROM messages WHERE mid = %d LIMIT 1"
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            java.lang.Long r11 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            r10[r6] = r11     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r10)     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0044, all -> 0x0041 }
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x003f }
            if (r0 != 0) goto L_0x0039
            if (r8 == 0) goto L_0x0038
            r8.dispose()     // Catch:{ Exception -> 0x01c2 }
        L_0x0038:
            return
        L_0x0039:
            if (r8 == 0) goto L_0x004c
        L_0x003b:
            r8.dispose()     // Catch:{ Exception -> 0x01c2 }
            goto L_0x004c
        L_0x003f:
            r0 = move-exception
            goto L_0x0046
        L_0x0041:
            r0 = move-exception
            goto L_0x01bc
        L_0x0044:
            r0 = move-exception
            r8 = r5
        L_0x0046:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01ba }
            if (r8 == 0) goto L_0x004c
            goto L_0x003b
        L_0x004c:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01c2 }
            r0.beginTransaction()     // Catch:{ Exception -> 0x01c2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01c2 }
            java.lang.String r8 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r8)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x01c2 }
            java.lang.String r9 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x01c2 }
            long r9 = r4.dialog_id     // Catch:{ Exception -> 0x01c2 }
            r11 = 0
            int r13 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
            if (r13 != 0) goto L_0x006c
            org.telegram.messenger.MessageObject.getDialogId(r17)     // Catch:{ Exception -> 0x01c2 }
        L_0x006c:
            r16.fixUnsupportedMedia(r17)     // Catch:{ Exception -> 0x01c2 }
            r0.requery()     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.NativeByteBuffer r9 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01c2 }
            int r10 = r17.getObjectSize()     // Catch:{ Exception -> 0x01c2 }
            r9.<init>((int) r10)     // Catch:{ Exception -> 0x01c2 }
            r4.serializeToStream(r9)     // Catch:{ Exception -> 0x01c2 }
            r0.bindLong(r7, r2)     // Catch:{ Exception -> 0x01c2 }
            long r10 = r4.dialog_id     // Catch:{ Exception -> 0x01c2 }
            r12 = 2
            r0.bindLong(r12, r10)     // Catch:{ Exception -> 0x01c2 }
            int r10 = org.telegram.messenger.MessageObject.getUnreadFlags(r17)     // Catch:{ Exception -> 0x01c2 }
            r11 = 3
            r0.bindInteger(r11, r10)     // Catch:{ Exception -> 0x01c2 }
            int r10 = r4.send_state     // Catch:{ Exception -> 0x01c2 }
            r13 = 4
            r0.bindInteger(r13, r10)     // Catch:{ Exception -> 0x01c2 }
            int r10 = r4.date     // Catch:{ Exception -> 0x01c2 }
            r14 = 5
            r0.bindInteger(r14, r10)     // Catch:{ Exception -> 0x01c2 }
            r10 = 6
            r0.bindByteBuffer((int) r10, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x01c2 }
            r10 = 7
            boolean r15 = org.telegram.messenger.MessageObject.isOut(r17)     // Catch:{ Exception -> 0x01c2 }
            if (r15 != 0) goto L_0x00ad
            boolean r15 = r4.from_scheduled     // Catch:{ Exception -> 0x01c2 }
            if (r15 == 0) goto L_0x00ab
            goto L_0x00ad
        L_0x00ab:
            r15 = 0
            goto L_0x00ae
        L_0x00ad:
            r15 = 1
        L_0x00ae:
            r0.bindInteger(r10, r15)     // Catch:{ Exception -> 0x01c2 }
            r10 = 8
            int r15 = r4.ttl     // Catch:{ Exception -> 0x01c2 }
            r0.bindInteger(r10, r15)     // Catch:{ Exception -> 0x01c2 }
            int r10 = r4.flags     // Catch:{ Exception -> 0x01c2 }
            r10 = r10 & 1024(0x400, float:1.435E-42)
            r15 = 9
            if (r10 == 0) goto L_0x00c6
            int r10 = r4.views     // Catch:{ Exception -> 0x01c2 }
            r0.bindInteger(r15, r10)     // Catch:{ Exception -> 0x01c2 }
            goto L_0x00cd
        L_0x00c6:
            int r10 = r16.getMessageMediaType(r17)     // Catch:{ Exception -> 0x01c2 }
            r0.bindInteger(r15, r10)     // Catch:{ Exception -> 0x01c2 }
        L_0x00cd:
            int r10 = r4.stickerVerified     // Catch:{ Exception -> 0x01c2 }
            if (r10 != 0) goto L_0x00d3
            r10 = 1
            goto L_0x00d8
        L_0x00d3:
            if (r10 != r12) goto L_0x00d7
            r10 = 2
            goto L_0x00d8
        L_0x00d7:
            r10 = 0
        L_0x00d8:
            r15 = 10
            r0.bindInteger(r15, r10)     // Catch:{ Exception -> 0x01c2 }
            r10 = 11
            boolean r15 = r4.mentioned     // Catch:{ Exception -> 0x01c2 }
            if (r15 == 0) goto L_0x00e5
            r15 = 1
            goto L_0x00e6
        L_0x00e5:
            r15 = 0
        L_0x00e6:
            r0.bindInteger(r10, r15)     // Catch:{ Exception -> 0x01c2 }
            r10 = 12
            int r15 = r4.forwards     // Catch:{ Exception -> 0x01c2 }
            r0.bindInteger(r10, r15)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r10 = r4.replies     // Catch:{ Exception -> 0x01c2 }
            r15 = 13
            if (r10 == 0) goto L_0x010a
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r10 = r4.replies     // Catch:{ Exception -> 0x01c2 }
            int r10 = r10.getObjectSize()     // Catch:{ Exception -> 0x01c2 }
            r5.<init>((int) r10)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r10 = r4.replies     // Catch:{ Exception -> 0x01c2 }
            r10.serializeToStream(r5)     // Catch:{ Exception -> 0x01c2 }
            r0.bindByteBuffer((int) r15, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x01c2 }
            goto L_0x010d
        L_0x010a:
            r0.bindNull(r15)     // Catch:{ Exception -> 0x01c2 }
        L_0x010d:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r10 = r4.reply_to     // Catch:{ Exception -> 0x01c2 }
            r15 = 14
            if (r10 == 0) goto L_0x011e
            int r14 = r10.reply_to_top_id     // Catch:{ Exception -> 0x01c2 }
            if (r14 == 0) goto L_0x0118
            goto L_0x011a
        L_0x0118:
            int r14 = r10.reply_to_msg_id     // Catch:{ Exception -> 0x01c2 }
        L_0x011a:
            r0.bindInteger(r15, r14)     // Catch:{ Exception -> 0x01c2 }
            goto L_0x0121
        L_0x011e:
            r0.bindInteger(r15, r6)     // Catch:{ Exception -> 0x01c2 }
        L_0x0121:
            r0.step()     // Catch:{ Exception -> 0x01c2 }
            boolean r10 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r17)     // Catch:{ Exception -> 0x01c2 }
            if (r10 == 0) goto L_0x0148
            r8.requery()     // Catch:{ Exception -> 0x01c2 }
            r8.bindLong(r7, r2)     // Catch:{ Exception -> 0x01c2 }
            long r2 = r4.dialog_id     // Catch:{ Exception -> 0x01c2 }
            r8.bindLong(r12, r2)     // Catch:{ Exception -> 0x01c2 }
            int r2 = r4.date     // Catch:{ Exception -> 0x01c2 }
            r8.bindInteger(r11, r2)     // Catch:{ Exception -> 0x01c2 }
            int r2 = org.telegram.messenger.MediaDataController.getMediaType(r17)     // Catch:{ Exception -> 0x01c2 }
            r8.bindInteger(r13, r2)     // Catch:{ Exception -> 0x01c2 }
            r2 = 5
            r8.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x01c2 }
            r8.step()     // Catch:{ Exception -> 0x01c2 }
        L_0x0148:
            if (r5 == 0) goto L_0x014d
            r5.reuse()     // Catch:{ Exception -> 0x01c2 }
        L_0x014d:
            r9.reuse()     // Catch:{ Exception -> 0x01c2 }
            r0.dispose()     // Catch:{ Exception -> 0x01c2 }
            r8.dispose()     // Catch:{ Exception -> 0x01c2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01c2 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x01c2 }
            if (r18 == 0) goto L_0x01c6
            java.util.HashMap r5 = new java.util.HashMap     // Catch:{ Exception -> 0x01c2 }
            r5.<init>()     // Catch:{ Exception -> 0x01c2 }
            java.util.HashMap r0 = new java.util.HashMap     // Catch:{ Exception -> 0x01c2 }
            r0.<init>()     // Catch:{ Exception -> 0x01c2 }
            r2 = 0
        L_0x0168:
            int r3 = r19.size()     // Catch:{ Exception -> 0x01c2 }
            if (r2 >= r3) goto L_0x0182
            r3 = r19
            java.lang.Object r7 = r3.get(r2)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7     // Catch:{ Exception -> 0x01c2 }
            int r8 = r7.id     // Catch:{ Exception -> 0x01c2 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x01c2 }
            r5.put(r8, r7)     // Catch:{ Exception -> 0x01c2 }
            int r2 = r2 + 1
            goto L_0x0168
        L_0x0182:
            int r2 = r20.size()     // Catch:{ Exception -> 0x01c2 }
            if (r6 >= r2) goto L_0x019c
            r2 = r20
            java.lang.Object r3 = r2.get(r6)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3     // Catch:{ Exception -> 0x01c2 }
            int r7 = r3.id     // Catch:{ Exception -> 0x01c2 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x01c2 }
            r0.put(r7, r3)     // Catch:{ Exception -> 0x01c2 }
            int r6 = r6 + 1
            goto L_0x0182
        L_0x019c:
            org.telegram.messenger.MessageObject r9 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x01c2 }
            int r3 = r1.currentAccount     // Catch:{ Exception -> 0x01c2 }
            r7 = 1
            r8 = 1
            r2 = r9
            r4 = r17
            r6 = r0
            r2.<init>((int) r3, (org.telegram.tgnet.TLRPC$Message) r4, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC$User>) r5, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC$Chat>) r6, (boolean) r7, (boolean) r8)     // Catch:{ Exception -> 0x01c2 }
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x01c2 }
            r0.<init>()     // Catch:{ Exception -> 0x01c2 }
            r0.add(r9)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$dtOeesPkWaCDfyaZe4D91RkoFro r2 = new org.telegram.messenger.-$$Lambda$MessagesStorage$dtOeesPkWaCDfyaZe4D91RkoFro     // Catch:{ Exception -> 0x01c2 }
            r2.<init>(r9, r0)     // Catch:{ Exception -> 0x01c2 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x01c2 }
            goto L_0x01c6
        L_0x01ba:
            r0 = move-exception
            r5 = r8
        L_0x01bc:
            if (r5 == 0) goto L_0x01c1
            r5.dispose()     // Catch:{ Exception -> 0x01c2 }
        L_0x01c1:
            throw r0     // Catch:{ Exception -> 0x01c2 }
        L_0x01c2:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x01c6:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$replaceMessageIfExists$161$MessagesStorage(org.telegram.tgnet.TLRPC$Message, boolean, java.util.ArrayList, java.util.ArrayList):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$160 */
    public /* synthetic */ void lambda$null$160$MessagesStorage(MessageObject messageObject, ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList);
    }

    public void putMessages(TLRPC$messages_Messages tLRPC$messages_Messages, long j, int i, int i2, boolean z, boolean z2) {
        this.storageQueue.postRunnable(new Runnable(z2, j, tLRPC$messages_Messages, i, i2, z) {
            public final /* synthetic */ boolean f$1;
            public final /* synthetic */ long f$2;
            public final /* synthetic */ TLRPC$messages_Messages f$3;
            public final /* synthetic */ int f$4;
            public final /* synthetic */ int f$5;
            public final /* synthetic */ boolean f$6;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r5;
                this.f$4 = r6;
                this.f$5 = r7;
                this.f$6 = r8;
            }

            public final void run() {
                MessagesStorage.this.lambda$putMessages$163$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:65:0x0238, code lost:
        if (r4.id == r2.id) goto L_0x023a;
     */
    /* JADX WARNING: Removed duplicated region for block: B:131:0x0419 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:132:0x0421 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x042e A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0432 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:142:0x0443 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x0445 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x0456 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:147:0x046d A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x0477 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x0484 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x0493 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:159:0x04b4 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x0507 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x0515 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:177:0x0549 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:180:0x0554 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:183:0x0579 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:191:0x05a7 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x05b4 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x025d A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x0286 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x0288 A[Catch:{ Exception -> 0x067a }] */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x0291 A[Catch:{ Exception -> 0x067a }] */
    /* renamed from: lambda$putMessages$163 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putMessages$163$MessagesStorage(boolean r38, long r39, org.telegram.tgnet.TLRPC$messages_Messages r41, int r42, int r43, boolean r44) {
        /*
            r37 = this;
            r7 = r37
            r8 = r39
            r10 = r41
            r11 = r42
            r0 = r43
            r12 = 32
            r3 = 1
            r4 = 0
            if (r38 == 0) goto L_0x00b2
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x067a }
            java.lang.String r2 = "DELETE FROM scheduled_messages WHERE uid = %d AND mid > 0"
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x067a }
            java.lang.Long r16 = java.lang.Long.valueOf(r39)     // Catch:{ Exception -> 0x067a }
            r11[r4] = r16     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = java.lang.String.format(r1, r2, r11)     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x067a }
            r0.dispose()     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = "REPLACE INTO scheduled_messages VALUES(?, ?, ?, ?, ?, ?, NULL)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x067a }
            int r1 = r1.size()     // Catch:{ Exception -> 0x067a }
            r2 = 0
        L_0x003c:
            if (r4 >= r1) goto L_0x0097
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r11 = r10.messages     // Catch:{ Exception -> 0x067a }
            java.lang.Object r11 = r11.get(r4)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r11 = (org.telegram.tgnet.TLRPC$Message) r11     // Catch:{ Exception -> 0x067a }
            boolean r13 = r11 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty     // Catch:{ Exception -> 0x067a }
            if (r13 == 0) goto L_0x004d
            r6 = 2
            r13 = 3
            goto L_0x0094
        L_0x004d:
            int r13 = r11.id     // Catch:{ Exception -> 0x067a }
            long r14 = (long) r13     // Catch:{ Exception -> 0x067a }
            if (r2 != 0) goto L_0x0056
            org.telegram.tgnet.TLRPC$Peer r2 = r11.peer_id     // Catch:{ Exception -> 0x067a }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x067a }
        L_0x0056:
            org.telegram.tgnet.TLRPC$Peer r13 = r11.peer_id     // Catch:{ Exception -> 0x067a }
            int r13 = r13.channel_id     // Catch:{ Exception -> 0x067a }
            if (r13 == 0) goto L_0x005f
            long r5 = (long) r2     // Catch:{ Exception -> 0x067a }
            long r5 = r5 << r12
            long r14 = r14 | r5
        L_0x005f:
            r7.fixUnsupportedMedia(r11)     // Catch:{ Exception -> 0x067a }
            r0.requery()     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x067a }
            int r6 = r11.getObjectSize()     // Catch:{ Exception -> 0x067a }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x067a }
            r11.serializeToStream(r5)     // Catch:{ Exception -> 0x067a }
            r0.bindLong(r3, r14)     // Catch:{ Exception -> 0x067a }
            r6 = 2
            r0.bindLong(r6, r8)     // Catch:{ Exception -> 0x067a }
            int r14 = r11.send_state     // Catch:{ Exception -> 0x067a }
            r13 = 3
            r0.bindInteger(r13, r14)     // Catch:{ Exception -> 0x067a }
            int r14 = r11.date     // Catch:{ Exception -> 0x067a }
            r15 = 4
            r0.bindInteger(r15, r14)     // Catch:{ Exception -> 0x067a }
            r14 = 5
            r0.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x067a }
            int r11 = r11.ttl     // Catch:{ Exception -> 0x067a }
            r14 = 6
            r0.bindInteger(r14, r11)     // Catch:{ Exception -> 0x067a }
            r0.step()     // Catch:{ Exception -> 0x067a }
            r5.reuse()     // Catch:{ Exception -> 0x067a }
        L_0x0094:
            int r4 = r4 + 1
            goto L_0x003c
        L_0x0097:
            r0.dispose()     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r0 = r10.users     // Catch:{ Exception -> 0x067a }
            r7.putUsersInternal(r0)     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r0 = r10.chats     // Catch:{ Exception -> 0x067a }
            r7.putChatsInternal(r0)     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            r0.commitTransaction()     // Catch:{ Exception -> 0x067a }
            java.lang.Long r0 = java.lang.Long.valueOf(r39)     // Catch:{ Exception -> 0x067a }
            r7.broadcastScheduledMessagesChange(r0)     // Catch:{ Exception -> 0x067a }
            goto L_0x067e
        L_0x00b2:
            r6 = 2
            r13 = 3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x067a }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x067a }
            r14 = -1
            if (r1 == 0) goto L_0x00c8
            if (r11 != 0) goto L_0x00c7
            java.lang.String r1 = "messages_holes"
            r7.doneHolesInTable(r1, r8, r0)     // Catch:{ Exception -> 0x067a }
            r7.doneHolesInMedia(r8, r0, r14)     // Catch:{ Exception -> 0x067a }
        L_0x00c7:
            return
        L_0x00c8:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x067a }
            r1.beginTransaction()     // Catch:{ Exception -> 0x067a }
            if (r11 != 0) goto L_0x00fd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x067a }
            int r2 = r1.size()     // Catch:{ Exception -> 0x067a }
            int r2 = r2 - r3
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x067a }
            int r5 = r1.id     // Catch:{ Exception -> 0x067a }
            java.lang.String r2 = "messages_holes"
            r1 = r37
            r13 = 1
            r14 = 0
            r3 = r39
            r18 = r5
            r12 = 2
            r15 = 3
            r6 = r43
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x067a }
            r6 = -1
            r1 = r37
            r2 = r39
            r4 = r18
            r5 = r43
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x067a }
            goto L_0x0169
        L_0x00fd:
            r12 = 2
            r13 = 1
            r14 = 0
            r15 = 3
            if (r11 != r13) goto L_0x0127
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x067a }
            java.lang.Object r1 = r1.get(r14)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x067a }
            int r6 = r1.id     // Catch:{ Exception -> 0x067a }
            java.lang.String r2 = "messages_holes"
            r1 = r37
            r3 = r39
            r5 = r43
            r18 = r6
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x067a }
            r6 = -1
            r1 = r37
            r2 = r39
            r4 = r43
            r5 = r18
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x067a }
            goto L_0x0169
        L_0x0127:
            if (r11 == r15) goto L_0x012f
            if (r11 == r12) goto L_0x012f
            r1 = 4
            if (r11 != r1) goto L_0x0169
            goto L_0x0130
        L_0x012f:
            r1 = 4
        L_0x0130:
            if (r0 != 0) goto L_0x0138
            if (r11 == r1) goto L_0x0138
            r0 = 2147483647(0x7fffffff, float:NaN)
            goto L_0x0142
        L_0x0138:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r10.messages     // Catch:{ Exception -> 0x067a }
            java.lang.Object r0 = r0.get(r14)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r0 = (org.telegram.tgnet.TLRPC$Message) r0     // Catch:{ Exception -> 0x067a }
            int r0 = r0.id     // Catch:{ Exception -> 0x067a }
        L_0x0142:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x067a }
            int r2 = r1.size()     // Catch:{ Exception -> 0x067a }
            int r2 = r2 - r13
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x067a }
            int r6 = r1.id     // Catch:{ Exception -> 0x067a }
            java.lang.String r2 = "messages_holes"
            r1 = r37
            r3 = r39
            r5 = r6
            r18 = r6
            r6 = r0
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x067a }
            r6 = -1
            r1 = r37
            r2 = r39
            r4 = r18
            r5 = r0
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x067a }
        L_0x0169:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r10.messages     // Catch:{ Exception -> 0x067a }
            int r6 = r0.size()     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x067a }
            r5.<init>()     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x067a }
            r4.<init>()     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x067a }
            r3.<init>()     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r1)     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r0.executeFast(r1)     // Catch:{ Exception -> 0x067a }
            r0 = 0
            r12 = 0
            r19 = 0
            r20 = 0
            r21 = 0
            r22 = 0
            r23 = 2147483647(0x7fffffff, float:NaN)
            r24 = 2147483647(0x7fffffff, float:NaN)
        L_0x019e:
            if (r12 >= r6) goto L_0x05cf
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r15 = r10.messages     // Catch:{ Exception -> 0x067a }
            java.lang.Object r15 = r15.get(r12)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r15 = (org.telegram.tgnet.TLRPC$Message) r15     // Catch:{ Exception -> 0x067a }
            int r14 = r15.id     // Catch:{ Exception -> 0x067a }
            long r13 = (long) r14     // Catch:{ Exception -> 0x067a }
            if (r0 != 0) goto L_0x01b1
            org.telegram.tgnet.TLRPC$Peer r0 = r15.peer_id     // Catch:{ Exception -> 0x067a }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x067a }
        L_0x01b1:
            r26 = r6
            r6 = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r15.peer_id     // Catch:{ Exception -> 0x067a }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x067a }
            r27 = r1
            if (r0 == 0) goto L_0x01c3
            long r0 = (long) r6     // Catch:{ Exception -> 0x067a }
            r17 = 32
            long r0 = r0 << r17
            long r13 = r13 | r0
            goto L_0x01c5
        L_0x01c3:
            r17 = 32
        L_0x01c5:
            r0 = -2
            if (r11 != r0) goto L_0x02e7
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x067a }
            r28 = r2
            java.lang.String r2 = "SELECT mid, data, ttl, mention, read_state, send_state FROM messages WHERE mid = %d"
            r29 = r3
            r30 = r4
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x067a }
            java.lang.Long r3 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x067a }
            r31 = r6
            r6 = 0
            r4[r6] = r3     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x067a }
            java.lang.Object[] r2 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x067a }
            boolean r32 = r0.next()     // Catch:{ Exception -> 0x067a }
            if (r32 == 0) goto L_0x02d5
            r1 = 1
            org.telegram.tgnet.NativeByteBuffer r2 = r0.byteBufferValue(r1)     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x0274
            int r1 = r2.readInt32(r6)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r1, r6)     // Catch:{ Exception -> 0x067a }
            org.telegram.messenger.UserConfig r1 = r37.getUserConfig()     // Catch:{ Exception -> 0x067a }
            int r1 = r1.clientUserId     // Catch:{ Exception -> 0x067a }
            r3.readAttachPath(r2, r1)     // Catch:{ Exception -> 0x067a }
            r2.reuse()     // Catch:{ Exception -> 0x067a }
            r1 = 5
            int r2 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            r1 = 3
            if (r2 == r1) goto L_0x021e
            java.lang.String r1 = r3.attachPath     // Catch:{ Exception -> 0x067a }
            r15.attachPath = r1     // Catch:{ Exception -> 0x067a }
            r1 = 2
            int r2 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            r15.ttl = r2     // Catch:{ Exception -> 0x067a }
        L_0x021e:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r3.media     // Catch:{ Exception -> 0x067a }
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x023f
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r15.media     // Catch:{ Exception -> 0x067a }
            boolean r4 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x067a }
            if (r4 == 0) goto L_0x023f
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo     // Catch:{ Exception -> 0x067a }
            if (r4 == 0) goto L_0x023f
            org.telegram.tgnet.TLRPC$Photo r2 = r2.photo     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x023f
            long r10 = r4.id     // Catch:{ Exception -> 0x067a }
            long r1 = r2.id     // Catch:{ Exception -> 0x067a }
            int r4 = (r10 > r1 ? 1 : (r10 == r1 ? 0 : -1))
            if (r4 != 0) goto L_0x023c
        L_0x023a:
            r1 = 1
            goto L_0x023d
        L_0x023c:
            r1 = 0
        L_0x023d:
            r4 = r1
            goto L_0x025b
        L_0x023f:
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x025a
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r15.media     // Catch:{ Exception -> 0x067a }
            boolean r4 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x067a }
            if (r4 == 0) goto L_0x025a
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x067a }
            if (r1 == 0) goto L_0x025a
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x025a
            long r10 = r1.id     // Catch:{ Exception -> 0x067a }
            long r1 = r2.id     // Catch:{ Exception -> 0x067a }
            int r4 = (r10 > r1 ? 1 : (r10 == r1 ? 0 : -1))
            if (r4 != 0) goto L_0x023c
            goto L_0x023a
        L_0x025a:
            r4 = 0
        L_0x025b:
            if (r4 != 0) goto L_0x0274
            r6 = 0
            r10 = r27
            r1 = r37
            r11 = r28
            r2 = r3
            r4 = r29
            r3 = r5
            r27 = r30
            r33 = r5
            r5 = r27
            r28 = r31
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x067a }
            goto L_0x027e
        L_0x0274:
            r33 = r5
            r10 = r27
            r11 = r28
            r27 = r30
            r28 = r31
        L_0x027e:
            r1 = 3
            int r2 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            r1 = 4
            if (r2 == 0) goto L_0x0288
            r3 = 1
            goto L_0x0289
        L_0x0288:
            r3 = 0
        L_0x0289:
            int r2 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            boolean r1 = r15.mentioned     // Catch:{ Exception -> 0x067a }
            if (r3 == r1) goto L_0x02df
            r1 = r24
            r4 = 2147483647(0x7fffffff, float:NaN)
            if (r1 != r4) goto L_0x02c4
            org.telegram.SQLite.SQLiteDatabase r4 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x067a }
            r5.<init>()     // Catch:{ Exception -> 0x067a }
            java.lang.String r6 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r5.append(r6)     // Catch:{ Exception -> 0x067a }
            r5.append(r8)     // Catch:{ Exception -> 0x067a }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x067a }
            r24 = r1
            r6 = 0
            java.lang.Object[] r1 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r5, r1)     // Catch:{ Exception -> 0x067a }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x067a }
            if (r4 == 0) goto L_0x02c0
            int r4 = r1.intValue(r6)     // Catch:{ Exception -> 0x067a }
            r24 = r4
        L_0x02c0:
            r1.dispose()     // Catch:{ Exception -> 0x067a }
            goto L_0x02c6
        L_0x02c4:
            r24 = r1
        L_0x02c6:
            if (r3 == 0) goto L_0x02ce
            r1 = 1
            if (r2 > r1) goto L_0x02df
            int r24 = r24 + -1
            goto L_0x02df
        L_0x02ce:
            boolean r1 = r15.media_unread     // Catch:{ Exception -> 0x067a }
            if (r1 == 0) goto L_0x02df
            int r24 = r24 + 1
            goto L_0x02df
        L_0x02d5:
            r33 = r5
            r10 = r27
            r11 = r28
            r27 = r30
            r28 = r31
        L_0x02df:
            r0.dispose()     // Catch:{ Exception -> 0x067a }
            if (r32 != 0) goto L_0x02f2
            r1 = 3
            goto L_0x05b8
        L_0x02e7:
            r11 = r2
            r29 = r3
            r33 = r5
            r28 = r6
            r10 = r27
            r27 = r4
        L_0x02f2:
            r4 = 7
            if (r12 != 0) goto L_0x03c5
            if (r44 == 0) goto L_0x03c5
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x067a }
            r0.<init>()     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = "SELECT pinned, unread_count_i, flags FROM dialogs WHERE did = "
            r0.append(r1)     // Catch:{ Exception -> 0x067a }
            r0.append(r8)     // Catch:{ Exception -> 0x067a }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x067a }
            r1 = 0
            java.lang.Object[] r2 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLiteCursor r0 = r5.queryFinalized(r0, r2)     // Catch:{ Exception -> 0x067a }
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x032a
            int r5 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            r1 = 1
            int r34 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            r1 = 2
            int r35 = r0.intValue(r1)     // Catch:{ Exception -> 0x067a }
            r1 = r34
            r36 = r35
            goto L_0x032e
        L_0x032a:
            r1 = 0
            r5 = 0
            r36 = 0
        L_0x032e:
            r0.dispose()     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x0362
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = "UPDATE dialogs SET date = ?, last_mid = ?, inbox_max = ?, last_mid_i = ?, pts = ?, date_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x067a }
            int r1 = r15.date     // Catch:{ Exception -> 0x067a }
            r2 = 1
            r0.bindInteger(r2, r1)     // Catch:{ Exception -> 0x067a }
            r1 = 2
            r0.bindLong(r1, r13)     // Catch:{ Exception -> 0x067a }
            int r1 = r15.id     // Catch:{ Exception -> 0x067a }
            r2 = 3
            r0.bindInteger(r2, r1)     // Catch:{ Exception -> 0x067a }
            r1 = 4
            r0.bindLong(r1, r13)     // Catch:{ Exception -> 0x067a }
            r2 = r41
            int r1 = r2.pts     // Catch:{ Exception -> 0x067a }
            r5 = 5
            r0.bindInteger(r5, r1)     // Catch:{ Exception -> 0x067a }
            int r1 = r15.date     // Catch:{ Exception -> 0x067a }
            r5 = 6
            r0.bindInteger(r5, r1)     // Catch:{ Exception -> 0x067a }
            r0.bindLong(r4, r8)     // Catch:{ Exception -> 0x067a }
            r3 = -1
            goto L_0x03be
        L_0x0362:
            r2 = r41
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r6 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r6)     // Catch:{ Exception -> 0x067a }
            r6 = 1
            r0.bindLong(r6, r8)     // Catch:{ Exception -> 0x067a }
            int r6 = r15.date     // Catch:{ Exception -> 0x067a }
            r3 = 2
            r0.bindInteger(r3, r6)     // Catch:{ Exception -> 0x067a }
            r3 = 3
            r6 = 0
            r0.bindInteger(r3, r6)     // Catch:{ Exception -> 0x067a }
            r3 = 4
            r0.bindLong(r3, r13)     // Catch:{ Exception -> 0x067a }
            int r3 = r15.id     // Catch:{ Exception -> 0x067a }
            r4 = 5
            r0.bindInteger(r4, r3)     // Catch:{ Exception -> 0x067a }
            r3 = 6
            r0.bindInteger(r3, r6)     // Catch:{ Exception -> 0x067a }
            r3 = 7
            r0.bindLong(r3, r13)     // Catch:{ Exception -> 0x067a }
            r3 = 8
            r0.bindInteger(r3, r1)     // Catch:{ Exception -> 0x067a }
            int r1 = r2.pts     // Catch:{ Exception -> 0x067a }
            r3 = 9
            r0.bindInteger(r3, r1)     // Catch:{ Exception -> 0x067a }
            int r1 = r15.date     // Catch:{ Exception -> 0x067a }
            r3 = 10
            r0.bindInteger(r3, r1)     // Catch:{ Exception -> 0x067a }
            r1 = 11
            r0.bindInteger(r1, r5)     // Catch:{ Exception -> 0x067a }
            r1 = r36
            r3 = 12
            r0.bindInteger(r3, r1)     // Catch:{ Exception -> 0x067a }
            r1 = 13
            r3 = -1
            r0.bindInteger(r1, r3)     // Catch:{ Exception -> 0x067a }
            r1 = 14
            r0.bindNull(r1)     // Catch:{ Exception -> 0x067a }
            android.util.LongSparseArray<java.lang.Boolean> r1 = r7.unknownDialogsIds     // Catch:{ Exception -> 0x067a }
            java.lang.Boolean r4 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x067a }
            r1.put(r8, r4)     // Catch:{ Exception -> 0x067a }
        L_0x03be:
            r0.step()     // Catch:{ Exception -> 0x067a }
            r0.dispose()     // Catch:{ Exception -> 0x067a }
            goto L_0x03c8
        L_0x03c5:
            r2 = r41
            r3 = -1
        L_0x03c8:
            r7.fixUnsupportedMedia(r15)     // Catch:{ Exception -> 0x067a }
            r11.requery()     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x067a }
            int r0 = r15.getObjectSize()     // Catch:{ Exception -> 0x067a }
            r1.<init>((int) r0)     // Catch:{ Exception -> 0x067a }
            r15.serializeToStream(r1)     // Catch:{ Exception -> 0x067a }
            r4 = 1
            r11.bindLong(r4, r13)     // Catch:{ Exception -> 0x067a }
            r4 = 2
            r11.bindLong(r4, r8)     // Catch:{ Exception -> 0x067a }
            int r0 = org.telegram.messenger.MessageObject.getUnreadFlags(r15)     // Catch:{ Exception -> 0x067a }
            r4 = 3
            r11.bindInteger(r4, r0)     // Catch:{ Exception -> 0x067a }
            int r0 = r15.send_state     // Catch:{ Exception -> 0x067a }
            r4 = 4
            r11.bindInteger(r4, r0)     // Catch:{ Exception -> 0x067a }
            int r0 = r15.date     // Catch:{ Exception -> 0x067a }
            r4 = 5
            r11.bindInteger(r4, r0)     // Catch:{ Exception -> 0x067a }
            r4 = 6
            r11.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x067a }
            boolean r0 = org.telegram.messenger.MessageObject.isOut(r15)     // Catch:{ Exception -> 0x067a }
            if (r0 != 0) goto L_0x0407
            boolean r0 = r15.from_scheduled     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x0405
            goto L_0x0407
        L_0x0405:
            r0 = 0
            goto L_0x0408
        L_0x0407:
            r0 = 1
        L_0x0408:
            r5 = 7
            r11.bindInteger(r5, r0)     // Catch:{ Exception -> 0x067a }
            int r0 = r15.ttl     // Catch:{ Exception -> 0x067a }
            r5 = 8
            r11.bindInteger(r5, r0)     // Catch:{ Exception -> 0x067a }
            int r0 = r15.flags     // Catch:{ Exception -> 0x067a }
            r0 = r0 & 1024(0x400, float:1.435E-42)
            if (r0 == 0) goto L_0x0421
            int r0 = r15.views     // Catch:{ Exception -> 0x067a }
            r5 = 9
            r11.bindInteger(r5, r0)     // Catch:{ Exception -> 0x067a }
            goto L_0x042a
        L_0x0421:
            r5 = 9
            int r0 = r7.getMessageMediaType(r15)     // Catch:{ Exception -> 0x067a }
            r11.bindInteger(r5, r0)     // Catch:{ Exception -> 0x067a }
        L_0x042a:
            int r0 = r15.stickerVerified     // Catch:{ Exception -> 0x067a }
            if (r0 != 0) goto L_0x0432
            r0 = 10
            r5 = 1
            goto L_0x043c
        L_0x0432:
            r5 = 2
            if (r0 != r5) goto L_0x0439
            r0 = 10
            r5 = 2
            goto L_0x043c
        L_0x0439:
            r0 = 10
            r5 = 0
        L_0x043c:
            r11.bindInteger(r0, r5)     // Catch:{ Exception -> 0x067a }
            boolean r0 = r15.mentioned     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x0445
            r0 = 1
            goto L_0x0446
        L_0x0445:
            r0 = 0
        L_0x0446:
            r5 = 11
            r11.bindInteger(r5, r0)     // Catch:{ Exception -> 0x067a }
            int r0 = r15.forwards     // Catch:{ Exception -> 0x067a }
            r5 = 12
            r11.bindInteger(r5, r0)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = r15.replies     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x046d
            org.telegram.tgnet.NativeByteBuffer r0 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$TL_messageReplies r5 = r15.replies     // Catch:{ Exception -> 0x067a }
            int r5 = r5.getObjectSize()     // Catch:{ Exception -> 0x067a }
            r0.<init>((int) r5)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$TL_messageReplies r5 = r15.replies     // Catch:{ Exception -> 0x067a }
            r5.serializeToStream(r0)     // Catch:{ Exception -> 0x067a }
            r5 = 13
            r11.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r0)     // Catch:{ Exception -> 0x067a }
            r5 = r0
            goto L_0x0473
        L_0x046d:
            r0 = 13
            r11.bindNull(r0)     // Catch:{ Exception -> 0x067a }
            r5 = 0
        L_0x0473:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r15.reply_to     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x0484
            int r6 = r0.reply_to_top_id     // Catch:{ Exception -> 0x067a }
            if (r6 == 0) goto L_0x047c
            goto L_0x047e
        L_0x047c:
            int r6 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x067a }
        L_0x047e:
            r0 = 14
            r11.bindInteger(r0, r6)     // Catch:{ Exception -> 0x067a }
            goto L_0x048a
        L_0x0484:
            r0 = 14
            r6 = 0
            r11.bindInteger(r0, r6)     // Catch:{ Exception -> 0x067a }
        L_0x048a:
            r11.step()     // Catch:{ Exception -> 0x067a }
            boolean r0 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r15)     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x04b4
            r10.requery()     // Catch:{ Exception -> 0x067a }
            r6 = 1
            r10.bindLong(r6, r13)     // Catch:{ Exception -> 0x067a }
            r6 = 2
            r10.bindLong(r6, r8)     // Catch:{ Exception -> 0x067a }
            int r0 = r15.date     // Catch:{ Exception -> 0x067a }
            r6 = 3
            r10.bindInteger(r6, r0)     // Catch:{ Exception -> 0x067a }
            int r0 = org.telegram.messenger.MediaDataController.getMediaType(r15)     // Catch:{ Exception -> 0x067a }
            r6 = 4
            r10.bindInteger(r6, r0)     // Catch:{ Exception -> 0x067a }
            r3 = 5
            r10.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x067a }
            r10.step()     // Catch:{ Exception -> 0x067a }
            goto L_0x0505
        L_0x04b4:
            r3 = 5
            r6 = 4
            boolean r0 = r15 instanceof org.telegram.tgnet.TLRPC$TL_messageService     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x0505
            org.telegram.tgnet.TLRPC$MessageAction r0 = r15.action     // Catch:{ Exception -> 0x067a }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionHistoryClear     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x0505
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0501 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0501 }
            java.lang.String r4 = "DELETE FROM media_v2 WHERE mid = %d"
            r6 = 1
            java.lang.Object[] r2 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0501 }
            int r6 = r15.id     // Catch:{ Exception -> 0x0501 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0501 }
            r25 = 0
            r2[r25] = r6     // Catch:{ Exception -> 0x0501 }
            java.lang.String r2 = java.lang.String.format(r3, r4, r2)     // Catch:{ Exception -> 0x0501 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0501 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0501 }
            r0.dispose()     // Catch:{ Exception -> 0x0501 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0501 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0501 }
            r2.<init>()     // Catch:{ Exception -> 0x0501 }
            java.lang.String r3 = "DELETE FROM media_counts_v2 WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x0501 }
            r2.append(r8)     // Catch:{ Exception -> 0x0501 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0501 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0501 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0501 }
            r0.dispose()     // Catch:{ Exception -> 0x0501 }
            goto L_0x0505
        L_0x0501:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x067a }
        L_0x0505:
            if (r5 == 0) goto L_0x050a
            r5.reuse()     // Catch:{ Exception -> 0x067a }
        L_0x050a:
            r1.reuse()     // Catch:{ Exception -> 0x067a }
            int r0 = r15.ttl_period     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x0549
            int r0 = r15.id     // Catch:{ Exception -> 0x067a }
            if (r0 <= 0) goto L_0x0549
            if (r20 != 0) goto L_0x051f
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r1 = "REPLACE INTO enc_tasks_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r20 = r0.executeFast(r1)     // Catch:{ Exception -> 0x067a }
        L_0x051f:
            r0 = r20
            r0.requery()     // Catch:{ Exception -> 0x067a }
            r1 = 1
            r0.bindLong(r1, r13)     // Catch:{ Exception -> 0x067a }
            int r1 = r15.date     // Catch:{ Exception -> 0x067a }
            int r2 = r15.ttl_period     // Catch:{ Exception -> 0x067a }
            int r1 = r1 + r2
            r2 = 2
            r0.bindInteger(r2, r1)     // Catch:{ Exception -> 0x067a }
            r1 = 3
            r2 = 0
            r0.bindInteger(r1, r2)     // Catch:{ Exception -> 0x067a }
            r0.step()     // Catch:{ Exception -> 0x067a }
            int r2 = r15.date     // Catch:{ Exception -> 0x067a }
            int r3 = r15.ttl_period     // Catch:{ Exception -> 0x067a }
            int r2 = r2 + r3
            r3 = r23
            int r2 = java.lang.Math.min(r3, r2)     // Catch:{ Exception -> 0x067a }
            r20 = r0
            r23 = r2
            goto L_0x054e
        L_0x0549:
            r3 = r23
            r1 = 3
            r23 = r3
        L_0x054e:
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r15.media     // Catch:{ Exception -> 0x067a }
            boolean r2 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x067a }
            if (r2 == 0) goto L_0x0579
            if (r22 != 0) goto L_0x055e
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r2 = "REPLACE INTO polls VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r22 = r0.executeFast(r2)     // Catch:{ Exception -> 0x067a }
        L_0x055e:
            r0 = r22
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r15.media     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x067a }
            r0.requery()     // Catch:{ Exception -> 0x067a }
            r3 = 1
            r0.bindLong(r3, r13)     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$Poll r2 = r2.poll     // Catch:{ Exception -> 0x067a }
            long r2 = r2.id     // Catch:{ Exception -> 0x067a }
            r4 = 2
            r0.bindLong(r4, r2)     // Catch:{ Exception -> 0x067a }
            r0.step()     // Catch:{ Exception -> 0x067a }
            r22 = r0
            goto L_0x059f
        L_0x0579:
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x059f
            if (r19 != 0) goto L_0x0587
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x067a }
            java.lang.String r2 = "REPLACE INTO webpage_pending VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r19 = r0.executeFast(r2)     // Catch:{ Exception -> 0x067a }
        L_0x0587:
            r0 = r19
            r0.requery()     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r15.media     // Catch:{ Exception -> 0x067a }
            org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage     // Catch:{ Exception -> 0x067a }
            long r2 = r2.id     // Catch:{ Exception -> 0x067a }
            r4 = 1
            r0.bindLong(r4, r2)     // Catch:{ Exception -> 0x067a }
            r2 = 2
            r0.bindLong(r2, r13)     // Catch:{ Exception -> 0x067a }
            r0.step()     // Catch:{ Exception -> 0x067a }
            r19 = r0
        L_0x059f:
            if (r42 != 0) goto L_0x05b4
            boolean r0 = r7.isValidKeyboardToSave(r15)     // Catch:{ Exception -> 0x067a }
            if (r0 == 0) goto L_0x05b4
            r2 = r21
            if (r2 == 0) goto L_0x05b1
            int r0 = r2.id     // Catch:{ Exception -> 0x067a }
            int r3 = r15.id     // Catch:{ Exception -> 0x067a }
            if (r0 >= r3) goto L_0x05b6
        L_0x05b1:
            r21 = r15
            goto L_0x05b8
        L_0x05b4:
            r2 = r21
        L_0x05b6:
            r21 = r2
        L_0x05b8:
            int r12 = r12 + 1
            r1 = r10
            r2 = r11
            r6 = r26
            r4 = r27
            r0 = r28
            r3 = r29
            r5 = r33
            r13 = 1
            r14 = 0
            r15 = 3
            r10 = r41
            r11 = r42
            goto L_0x019e
        L_0x05cf:
            r10 = r1
            r11 = r2
            r29 = r3
            r27 = r4
            r33 = r5
            r2 = r21
            r3 = r23
            r11.dispose()     // Catch:{ Exception -> 0x067a }
            r10.dispose()     // Catch:{ Exception -> 0x067a }
            if (r19 == 0) goto L_0x05e6
            r19.dispose()     // Catch:{ Exception -> 0x067a }
        L_0x05e6:
            if (r20 == 0) goto L_0x05f3
            r20.dispose()     // Catch:{ Exception -> 0x067a }
            org.telegram.messenger.MessagesController r1 = r37.getMessagesController()     // Catch:{ Exception -> 0x067a }
            r4 = 0
            r1.didAddedNewTask(r3, r4)     // Catch:{ Exception -> 0x067a }
        L_0x05f3:
            if (r22 == 0) goto L_0x05f8
            r22.dispose()     // Catch:{ Exception -> 0x067a }
        L_0x05f8:
            if (r2 == 0) goto L_0x0601
            org.telegram.messenger.MediaDataController r1 = r37.getMediaDataController()     // Catch:{ Exception -> 0x067a }
            r1.putBotKeyboard(r8, r2)     // Catch:{ Exception -> 0x067a }
        L_0x0601:
            r1 = r29
            r2 = 0
            r7.deleteFromDownloadQueue(r1, r2)     // Catch:{ Exception -> 0x067a }
            org.telegram.messenger.-$$Lambda$MessagesStorage$-VhGCvIj2DmGSkrxrSQ-vjy3w7Y r1 = new org.telegram.messenger.-$$Lambda$MessagesStorage$-VhGCvIj2DmGSkrxrSQ-vjy3w7Y     // Catch:{ Exception -> 0x067a }
            r3 = r27
            r1.<init>(r3)     // Catch:{ Exception -> 0x067a }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x067a }
            org.telegram.messenger.FileLoader r1 = r37.getFileLoader()     // Catch:{ Exception -> 0x067a }
            r3 = r33
            r1.deleteFiles(r3, r2)     // Catch:{ Exception -> 0x067a }
            r1 = r41
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r1.users     // Catch:{ Exception -> 0x067a }
            r7.putUsersInternal(r2)     // Catch:{ Exception -> 0x067a }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r1.chats     // Catch:{ Exception -> 0x067a }
            r7.putChatsInternal(r1)     // Catch:{ Exception -> 0x067a }
            r1 = r24
            r2 = 2147483647(0x7fffffff, float:NaN)
            if (r1 == r2) goto L_0x0668
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x067a }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x067a }
            java.lang.String r4 = "UPDATE dialogs SET unread_count_i = %d WHERE did = %d"
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x067a }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x067a }
            r10 = 0
            r5[r10] = r6     // Catch:{ Exception -> 0x067a }
            java.lang.Long r6 = java.lang.Long.valueOf(r39)     // Catch:{ Exception -> 0x067a }
            r10 = 1
            r5[r10] = r6     // Catch:{ Exception -> 0x067a }
            java.lang.String r3 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x067a }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x067a }
            r2.dispose()     // Catch:{ Exception -> 0x067a }
            android.util.LongSparseArray r2 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x067a }
            r3 = 1
            r2.<init>(r3)     // Catch:{ Exception -> 0x067a }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x067a }
            r2.put(r8, r1)     // Catch:{ Exception -> 0x067a }
            org.telegram.messenger.MessagesController r1 = r37.getMessagesController()     // Catch:{ Exception -> 0x067a }
            r3 = 0
            r1.processDialogsUpdateRead(r3, r2)     // Catch:{ Exception -> 0x067a }
        L_0x0668:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x067a }
            r1.commitTransaction()     // Catch:{ Exception -> 0x067a }
            if (r44 == 0) goto L_0x067e
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x067a }
            r1.<init>()     // Catch:{ Exception -> 0x067a }
            r2 = 0
            r3 = 0
            r7.updateDialogsWithDeletedMessages(r1, r2, r3, r0)     // Catch:{ Exception -> 0x067a }
            goto L_0x067e
        L_0x067a:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x067e:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putMessages$163$MessagesStorage(boolean, long, org.telegram.tgnet.TLRPC$messages_Messages, int, int, boolean):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$162 */
    public /* synthetic */ void lambda$null$162$MessagesStorage(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    public static void addUsersAndChatsFromMessage(TLRPC$Message tLRPC$Message, ArrayList<Integer> arrayList, ArrayList<Integer> arrayList2) {
        TLRPC$Peer tLRPC$Peer;
        int fromChatId = MessageObject.getFromChatId(tLRPC$Message);
        if (fromChatId > 0) {
            if (!arrayList.contains(Integer.valueOf(fromChatId))) {
                arrayList.add(Integer.valueOf(fromChatId));
            }
        } else if (fromChatId < 0) {
            int i = -fromChatId;
            if (!arrayList2.contains(Integer.valueOf(i))) {
                arrayList2.add(Integer.valueOf(i));
            }
        }
        int i2 = tLRPC$Message.via_bot_id;
        if (i2 != 0 && !arrayList.contains(Integer.valueOf(i2))) {
            arrayList.add(Integer.valueOf(tLRPC$Message.via_bot_id));
        }
        TLRPC$MessageAction tLRPC$MessageAction = tLRPC$Message.action;
        if (tLRPC$MessageAction != null) {
            int i3 = tLRPC$MessageAction.user_id;
            if (i3 != 0 && !arrayList.contains(Integer.valueOf(i3))) {
                arrayList.add(Integer.valueOf(tLRPC$Message.action.user_id));
            }
            int i4 = tLRPC$Message.action.channel_id;
            if (i4 != 0 && !arrayList2.contains(Integer.valueOf(i4))) {
                arrayList2.add(Integer.valueOf(tLRPC$Message.action.channel_id));
            }
            int i5 = tLRPC$Message.action.chat_id;
            if (i5 != 0 && !arrayList2.contains(Integer.valueOf(i5))) {
                arrayList2.add(Integer.valueOf(tLRPC$Message.action.chat_id));
            }
            TLRPC$MessageAction tLRPC$MessageAction2 = tLRPC$Message.action;
            if (tLRPC$MessageAction2 instanceof TLRPC$TL_messageActionGeoProximityReached) {
                TLRPC$TL_messageActionGeoProximityReached tLRPC$TL_messageActionGeoProximityReached = (TLRPC$TL_messageActionGeoProximityReached) tLRPC$MessageAction2;
                Integer valueOf = Integer.valueOf(MessageObject.getPeerId(tLRPC$TL_messageActionGeoProximityReached.from_id));
                if (valueOf.intValue() > 0) {
                    if (!arrayList.contains(valueOf)) {
                        arrayList.add(valueOf);
                    }
                } else if (!arrayList2.contains(Integer.valueOf(-valueOf.intValue()))) {
                    arrayList2.add(Integer.valueOf(-valueOf.intValue()));
                }
                Integer valueOf2 = Integer.valueOf(MessageObject.getPeerId(tLRPC$TL_messageActionGeoProximityReached.to_id));
                if (valueOf2.intValue() > 0) {
                    if (!arrayList.contains(valueOf2)) {
                        arrayList.add(valueOf2);
                    }
                } else if (!arrayList2.contains(Integer.valueOf(-valueOf2.intValue()))) {
                    arrayList2.add(Integer.valueOf(-valueOf2.intValue()));
                }
            }
            if (!tLRPC$Message.action.users.isEmpty()) {
                for (int i6 = 0; i6 < tLRPC$Message.action.users.size(); i6++) {
                    Integer num = tLRPC$Message.action.users.get(i6);
                    if (!arrayList.contains(num)) {
                        arrayList.add(num);
                    }
                }
            }
        }
        if (!tLRPC$Message.entities.isEmpty()) {
            for (int i7 = 0; i7 < tLRPC$Message.entities.size(); i7++) {
                TLRPC$MessageEntity tLRPC$MessageEntity = tLRPC$Message.entities.get(i7);
                if (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityMentionName) {
                    arrayList.add(Integer.valueOf(((TLRPC$TL_messageEntityMentionName) tLRPC$MessageEntity).user_id));
                } else if (tLRPC$MessageEntity instanceof TLRPC$TL_inputMessageEntityMentionName) {
                    arrayList.add(Integer.valueOf(((TLRPC$TL_inputMessageEntityMentionName) tLRPC$MessageEntity).user_id.user_id));
                }
            }
        }
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        if (tLRPC$MessageMedia != null) {
            int i8 = tLRPC$MessageMedia.user_id;
            if (i8 != 0 && !arrayList.contains(Integer.valueOf(i8))) {
                arrayList.add(Integer.valueOf(tLRPC$Message.media.user_id));
            }
            TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message.media;
            if (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaPoll) {
                TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll = (TLRPC$TL_messageMediaPoll) tLRPC$MessageMedia2;
                if (!tLRPC$TL_messageMediaPoll.results.recent_voters.isEmpty()) {
                    arrayList.addAll(tLRPC$TL_messageMediaPoll.results.recent_voters);
                }
            }
        }
        TLRPC$TL_messageReplies tLRPC$TL_messageReplies = tLRPC$Message.replies;
        if (tLRPC$TL_messageReplies != null) {
            int size = tLRPC$TL_messageReplies.recent_repliers.size();
            for (int i9 = 0; i9 < size; i9++) {
                int peerId = MessageObject.getPeerId(tLRPC$Message.replies.recent_repliers.get(i9));
                if (peerId > 0) {
                    if (!arrayList.contains(Integer.valueOf(peerId))) {
                        arrayList.add(Integer.valueOf(peerId));
                    }
                } else if (peerId < 0) {
                    int i10 = -peerId;
                    if (!arrayList2.contains(Integer.valueOf(i10))) {
                        arrayList2.add(Integer.valueOf(i10));
                    }
                }
            }
        }
        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = tLRPC$Message.reply_to;
        if (!(tLRPC$TL_messageReplyHeader == null || (tLRPC$Peer = tLRPC$TL_messageReplyHeader.reply_to_peer_id) == null)) {
            int peerId2 = MessageObject.getPeerId(tLRPC$Peer);
            if (peerId2 > 0) {
                if (!arrayList.contains(Integer.valueOf(peerId2))) {
                    arrayList.add(Integer.valueOf(peerId2));
                }
            } else if (peerId2 < 0) {
                int i11 = -peerId2;
                if (!arrayList2.contains(Integer.valueOf(i11))) {
                    arrayList2.add(Integer.valueOf(i11));
                }
            }
        }
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = tLRPC$Message.fwd_from;
        if (tLRPC$MessageFwdHeader != null) {
            TLRPC$Peer tLRPC$Peer2 = tLRPC$MessageFwdHeader.from_id;
            if (tLRPC$Peer2 instanceof TLRPC$TL_peerUser) {
                if (!arrayList.contains(Integer.valueOf(tLRPC$Peer2.user_id))) {
                    arrayList.add(Integer.valueOf(tLRPC$Message.fwd_from.from_id.user_id));
                }
            } else if (tLRPC$Peer2 instanceof TLRPC$TL_peerChannel) {
                if (!arrayList2.contains(Integer.valueOf(tLRPC$Peer2.channel_id))) {
                    arrayList2.add(Integer.valueOf(tLRPC$Message.fwd_from.from_id.channel_id));
                }
            } else if ((tLRPC$Peer2 instanceof TLRPC$TL_peerChat) && !arrayList2.contains(Integer.valueOf(tLRPC$Peer2.chat_id))) {
                arrayList2.add(Integer.valueOf(tLRPC$Message.fwd_from.from_id.chat_id));
            }
            TLRPC$Peer tLRPC$Peer3 = tLRPC$Message.fwd_from.saved_from_peer;
            if (tLRPC$Peer3 != null) {
                int i12 = tLRPC$Peer3.user_id;
                if (i12 == 0) {
                    int i13 = tLRPC$Peer3.channel_id;
                    if (i13 == 0) {
                        int i14 = tLRPC$Peer3.chat_id;
                        if (i14 != 0 && !arrayList2.contains(Integer.valueOf(i14))) {
                            arrayList2.add(Integer.valueOf(tLRPC$Message.fwd_from.saved_from_peer.chat_id));
                        }
                    } else if (!arrayList2.contains(Integer.valueOf(i13))) {
                        arrayList2.add(Integer.valueOf(tLRPC$Message.fwd_from.saved_from_peer.channel_id));
                    }
                } else if (!arrayList2.contains(Integer.valueOf(i12))) {
                    arrayList.add(Integer.valueOf(tLRPC$Message.fwd_from.saved_from_peer.user_id));
                }
            }
        }
        int i15 = tLRPC$Message.ttl;
        if (i15 < 0 && !arrayList2.contains(Integer.valueOf(-i15))) {
            arrayList2.add(Integer.valueOf(-tLRPC$Message.ttl));
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0003, code lost:
        r11 = getMediaDataController().getDrafts();
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void getDialogs(int r8, int r9, int r10, boolean r11) {
        /*
            r7 = this;
            r0 = 0
            if (r11 == 0) goto L_0x002d
            org.telegram.messenger.MediaDataController r11 = r7.getMediaDataController()
            android.util.LongSparseArray r11 = r11.getDrafts()
            int r1 = r11.size()
            if (r1 <= 0) goto L_0x002d
            long[] r0 = new long[r1]
            r2 = 0
            r3 = 0
        L_0x0015:
            if (r3 >= r1) goto L_0x002d
            java.lang.Object r4 = r11.valueAt(r3)
            android.util.SparseArray r4 = (android.util.SparseArray) r4
            java.lang.Object r4 = r4.get(r2)
            if (r4 != 0) goto L_0x0024
            goto L_0x002a
        L_0x0024:
            long r4 = r11.keyAt(r3)
            r0[r3] = r4
        L_0x002a:
            int r3 = r3 + 1
            goto L_0x0015
        L_0x002d:
            r6 = r0
            org.telegram.messenger.DispatchQueue r11 = r7.storageQueue
            org.telegram.messenger.-$$Lambda$MessagesStorage$CkUKnXV91aV-O1bE4k3gb3PP5WM r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$CkUKnXV91aV-O1bE4k3gb3PP5WM
            r1 = r0
            r2 = r7
            r3 = r8
            r4 = r9
            r5 = r10
            r1.<init>(r3, r4, r5, r6)
            r11.postRunnable(r0)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getDialogs(int, int, int, boolean):void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v115, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v116, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v117, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX WARNING: type inference failed for: r0v35 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:85:0x0229, code lost:
        if (r0 != 0) goto L_0x0233;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:89:0x0231, code lost:
        if (r0 != 0) goto L_0x0233;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:114:0x0275 A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:121:0x029c A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x0137 A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x0139 A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x014e A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x0150 A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x016b A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x0186 A[Catch:{ Exception -> 0x0435 }] */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x0194 A[Catch:{ Exception -> 0x0435 }] */
    /* renamed from: lambda$getDialogs$165 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogs$165$MessagesStorage(int r25, int r26, int r27, long[] r28) {
        /*
            r24 = this;
            r1 = r24
            r2 = r28
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r12 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs
            r12.<init>()
            java.util.ArrayList r13 = new java.util.ArrayList
            r13.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x043b }
            r3.<init>()     // Catch:{ Exception -> 0x043b }
            org.telegram.messenger.UserConfig r0 = r24.getUserConfig()     // Catch:{ Exception -> 0x043b }
            int r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x043b }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x043b }
            r3.add(r0)     // Catch:{ Exception -> 0x043b }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x043b }
            r4.<init>()     // Catch:{ Exception -> 0x043b }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x043b }
            r5.<init>()     // Catch:{ Exception -> 0x043b }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x043b }
            r6.<init>()     // Catch:{ Exception -> 0x043b }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x043b }
            r7.<init>()     // Catch:{ Exception -> 0x043b }
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x043b }
            r8.<init>()     // Catch:{ Exception -> 0x043b }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x043b }
            r10 = 2
            r9.<init>(r10)     // Catch:{ Exception -> 0x043b }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x043b }
            r9.add(r0)     // Catch:{ Exception -> 0x043b }
            r14 = 0
        L_0x0049:
            int r0 = r9.size()     // Catch:{ Exception -> 0x043b }
            r15 = 3
            if (r14 >= r0) goto L_0x02d4
            java.lang.Object r0 = r9.get(r14)     // Catch:{ Exception -> 0x02ce }
            java.lang.Integer r0 = (java.lang.Integer) r0     // Catch:{ Exception -> 0x02ce }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x02ce }
            if (r14 != 0) goto L_0x0061
            r18 = r26
            r17 = r27
            goto L_0x0065
        L_0x0061:
            r17 = 100
            r18 = 0
        L_0x0065:
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x02ce }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x02ce }
            r21 = r13
            java.lang.String r13 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.folder_id = %d ORDER BY d.pinned DESC, d.date DESC LIMIT %d,%d"
            java.lang.Object[] r1 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0435 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0435 }
            r20 = 0
            r1[r20] = r0     // Catch:{ Exception -> 0x0435 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r18)     // Catch:{ Exception -> 0x0435 }
            r18 = 1
            r1[r18] = r0     // Catch:{ Exception -> 0x0435 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0435 }
            r16 = 2
            r1[r16] = r0     // Catch:{ Exception -> 0x0435 }
            java.lang.String r0 = java.lang.String.format(r11, r13, r1)     // Catch:{ Exception -> 0x0435 }
            r1 = 0
            java.lang.Object[] r11 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0435 }
            org.telegram.SQLite.SQLiteCursor r10 = r10.queryFinalized(r0, r11)     // Catch:{ Exception -> 0x0435 }
        L_0x0092:
            boolean r0 = r10.next()     // Catch:{ Exception -> 0x0435 }
            if (r0 == 0) goto L_0x02b7
            r11 = r7
            r13 = r8
            long r7 = r10.longValue(r1)     // Catch:{ Exception -> 0x0435 }
            boolean r0 = org.telegram.messenger.DialogObject.isFolderDialogId(r7)     // Catch:{ Exception -> 0x0435 }
            if (r0 == 0) goto L_0x00e5
            org.telegram.tgnet.TLRPC$TL_dialogFolder r0 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x0435 }
            r0.<init>()     // Catch:{ Exception -> 0x0435 }
            r1 = 18
            boolean r17 = r10.isNull(r1)     // Catch:{ Exception -> 0x0435 }
            if (r17 != 0) goto L_0x00d5
            org.telegram.tgnet.NativeByteBuffer r1 = r10.byteBufferValue(r1)     // Catch:{ Exception -> 0x0435 }
            if (r1 == 0) goto L_0x00c8
            r18 = r11
            r15 = 0
            int r11 = r1.readInt32(r15)     // Catch:{ Exception -> 0x0435 }
            org.telegram.tgnet.TLRPC$TL_folder r11 = org.telegram.tgnet.TLRPC$TL_folder.TLdeserialize(r1, r11, r15)     // Catch:{ Exception -> 0x0435 }
            r0.folder = r11     // Catch:{ Exception -> 0x0435 }
            r1.reuse()     // Catch:{ Exception -> 0x0435 }
            goto L_0x00d7
        L_0x00c8:
            r18 = r11
            org.telegram.tgnet.TLRPC$TL_folder r1 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x0435 }
            r1.<init>()     // Catch:{ Exception -> 0x0435 }
            r0.folder = r1     // Catch:{ Exception -> 0x0435 }
            int r11 = (int) r7     // Catch:{ Exception -> 0x0435 }
            r1.id = r11     // Catch:{ Exception -> 0x0435 }
            goto L_0x00d7
        L_0x00d5:
            r18 = r11
        L_0x00d7:
            if (r14 != 0) goto L_0x00ec
            org.telegram.tgnet.TLRPC$TL_folder r1 = r0.folder     // Catch:{ Exception -> 0x0435 }
            int r1 = r1.id     // Catch:{ Exception -> 0x0435 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0435 }
            r9.add(r1)     // Catch:{ Exception -> 0x0435 }
            goto L_0x00ec
        L_0x00e5:
            r18 = r11
            org.telegram.tgnet.TLRPC$TL_dialog r0 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x0435 }
            r0.<init>()     // Catch:{ Exception -> 0x0435 }
        L_0x00ec:
            r1 = r0
            r1.id = r7     // Catch:{ Exception -> 0x0435 }
            r11 = 1
            int r0 = r10.intValue(r11)     // Catch:{ Exception -> 0x0435 }
            r1.top_message = r0     // Catch:{ Exception -> 0x0435 }
            r11 = 2
            int r0 = r10.intValue(r11)     // Catch:{ Exception -> 0x0435 }
            r1.unread_count = r0     // Catch:{ Exception -> 0x0435 }
            r11 = 3
            int r0 = r10.intValue(r11)     // Catch:{ Exception -> 0x0435 }
            r1.last_message_date = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 10
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r1.pts = r0     // Catch:{ Exception -> 0x0435 }
            if (r0 == 0) goto L_0x0118
            r15 = r13
            r11 = r14
            long r13 = r1.id     // Catch:{ Exception -> 0x0435 }
            int r0 = (int) r13     // Catch:{ Exception -> 0x0435 }
            if (r0 <= 0) goto L_0x0116
            goto L_0x011a
        L_0x0116:
            r0 = 1
            goto L_0x011b
        L_0x0118:
            r15 = r13
            r11 = r14
        L_0x011a:
            r0 = 0
        L_0x011b:
            r1.flags = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 11
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r1.read_inbox_max_id = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 12
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r1.read_outbox_max_id = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 14
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r1.pinnedNum = r0     // Catch:{ Exception -> 0x0435 }
            if (r0 == 0) goto L_0x0139
            r0 = 1
            goto L_0x013a
        L_0x0139:
            r0 = 0
        L_0x013a:
            r1.pinned = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 15
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r1.unread_mentions_count = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 16
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r13 = 1
            r0 = r0 & r13
            if (r0 == 0) goto L_0x0150
            r0 = 1
            goto L_0x0151
        L_0x0150:
            r0 = 0
        L_0x0151:
            r1.unread_mark = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 8
            long r13 = r10.longValue(r0)     // Catch:{ Exception -> 0x0435 }
            int r0 = (int) r13     // Catch:{ Exception -> 0x0435 }
            r22 = r9
            org.telegram.tgnet.TLRPC$TL_peerNotifySettings r9 = new org.telegram.tgnet.TLRPC$TL_peerNotifySettings     // Catch:{ Exception -> 0x0435 }
            r9.<init>()     // Catch:{ Exception -> 0x0435 }
            r1.notify_settings = r9     // Catch:{ Exception -> 0x0435 }
            r19 = 1
            r0 = r0 & 1
            r23 = 32
            if (r0 == 0) goto L_0x0177
            long r13 = r13 >> r23
            int r0 = (int) r13     // Catch:{ Exception -> 0x0435 }
            r9.mute_until = r0     // Catch:{ Exception -> 0x0435 }
            if (r0 != 0) goto L_0x0177
            r0 = 2147483647(0x7fffffff, float:NaN)
            r9.mute_until = r0     // Catch:{ Exception -> 0x0435 }
        L_0x0177:
            r0 = 17
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r1.folder_id = r0     // Catch:{ Exception -> 0x0435 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r12.dialogs     // Catch:{ Exception -> 0x0435 }
            r0.add(r1)     // Catch:{ Exception -> 0x0435 }
            if (r2 == 0) goto L_0x018d
            java.lang.Long r0 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0435 }
            r6.add(r0)     // Catch:{ Exception -> 0x0435 }
        L_0x018d:
            r0 = 4
            org.telegram.tgnet.NativeByteBuffer r0 = r10.byteBufferValue(r0)     // Catch:{ Exception -> 0x0435 }
            if (r0 == 0) goto L_0x0269
            r7 = 0
            int r8 = r0.readInt32(r7)     // Catch:{ Exception -> 0x0435 }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r8, r7)     // Catch:{ Exception -> 0x0435 }
            if (r8 == 0) goto L_0x0261
            org.telegram.messenger.UserConfig r7 = r24.getUserConfig()     // Catch:{ Exception -> 0x0435 }
            int r7 = r7.clientUserId     // Catch:{ Exception -> 0x0435 }
            r8.readAttachPath(r0, r7)     // Catch:{ Exception -> 0x0435 }
            r0.reuse()     // Catch:{ Exception -> 0x0435 }
            r0 = 5
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r8, r0)     // Catch:{ Exception -> 0x0435 }
            r0 = 6
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r8.id = r0     // Catch:{ Exception -> 0x0435 }
            r0 = 9
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            if (r0 == 0) goto L_0x01c4
            r1.last_message_date = r0     // Catch:{ Exception -> 0x0435 }
        L_0x01c4:
            r0 = 7
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0435 }
            r8.send_state = r0     // Catch:{ Exception -> 0x0435 }
            long r13 = r1.id     // Catch:{ Exception -> 0x0435 }
            r8.dialog_id = r13     // Catch:{ Exception -> 0x0435 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r12.messages     // Catch:{ Exception -> 0x0435 }
            r0.add(r8)     // Catch:{ Exception -> 0x0435 }
            addUsersAndChatsFromMessage(r8, r3, r4)     // Catch:{ Exception -> 0x0435 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r8.reply_to     // Catch:{ Exception -> 0x0258 }
            if (r0 == 0) goto L_0x0269
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0258 }
            if (r0 == 0) goto L_0x0269
            org.telegram.tgnet.TLRPC$MessageAction r0 = r8.action     // Catch:{ Exception -> 0x0258 }
            boolean r7 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage     // Catch:{ Exception -> 0x0258 }
            if (r7 != 0) goto L_0x01ed
            boolean r7 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent     // Catch:{ Exception -> 0x0258 }
            if (r7 != 0) goto L_0x01ed
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGameScore     // Catch:{ Exception -> 0x0258 }
            if (r0 == 0) goto L_0x0269
        L_0x01ed:
            r0 = 13
            boolean r7 = r10.isNull(r0)     // Catch:{ Exception -> 0x0258 }
            if (r7 != 0) goto L_0x0219
            org.telegram.tgnet.NativeByteBuffer r0 = r10.byteBufferValue(r0)     // Catch:{ Exception -> 0x0258 }
            if (r0 == 0) goto L_0x0219
            r7 = 0
            int r9 = r0.readInt32(r7)     // Catch:{ Exception -> 0x0258 }
            org.telegram.tgnet.TLRPC$Message r9 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r9, r7)     // Catch:{ Exception -> 0x0258 }
            r8.replyMessage = r9     // Catch:{ Exception -> 0x0258 }
            org.telegram.messenger.UserConfig r7 = r24.getUserConfig()     // Catch:{ Exception -> 0x0258 }
            int r7 = r7.clientUserId     // Catch:{ Exception -> 0x0258 }
            r9.readAttachPath(r0, r7)     // Catch:{ Exception -> 0x0258 }
            r0.reuse()     // Catch:{ Exception -> 0x0258 }
            org.telegram.tgnet.TLRPC$Message r0 = r8.replyMessage     // Catch:{ Exception -> 0x0258 }
            if (r0 == 0) goto L_0x0219
            addUsersAndChatsFromMessage(r0, r3, r4)     // Catch:{ Exception -> 0x0258 }
        L_0x0219:
            org.telegram.tgnet.TLRPC$Message r0 = r8.replyMessage     // Catch:{ Exception -> 0x0258 }
            if (r0 != 0) goto L_0x0269
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r8.reply_to     // Catch:{ Exception -> 0x0258 }
            int r7 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0258 }
            long r13 = (long) r7     // Catch:{ Exception -> 0x0258 }
            org.telegram.tgnet.TLRPC$Peer r0 = r0.reply_to_peer_id     // Catch:{ Exception -> 0x0258 }
            if (r0 == 0) goto L_0x022c
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0258 }
            r9 = r6
            if (r0 == 0) goto L_0x0237
            goto L_0x0233
        L_0x022c:
            r9 = r6
            org.telegram.tgnet.TLRPC$Peer r0 = r8.peer_id     // Catch:{ Exception -> 0x0256 }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0256 }
            if (r0 == 0) goto L_0x0237
        L_0x0233:
            long r6 = (long) r0     // Catch:{ Exception -> 0x0256 }
            long r6 = r6 << r23
            long r13 = r13 | r6
        L_0x0237:
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0256 }
            r6 = r18
            boolean r0 = r6.contains(r0)     // Catch:{ Exception -> 0x0253 }
            if (r0 != 0) goto L_0x024a
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0253 }
            r6.add(r0)     // Catch:{ Exception -> 0x0253 }
        L_0x024a:
            long r13 = r1.id     // Catch:{ Exception -> 0x0253 }
            r7 = r15
            r7.put(r13, r8)     // Catch:{ Exception -> 0x0251 }
            goto L_0x026d
        L_0x0251:
            r0 = move-exception
            goto L_0x025d
        L_0x0253:
            r0 = move-exception
            r7 = r15
            goto L_0x025d
        L_0x0256:
            r0 = move-exception
            goto L_0x025a
        L_0x0258:
            r0 = move-exception
            r9 = r6
        L_0x025a:
            r7 = r15
            r6 = r18
        L_0x025d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0435 }
            goto L_0x026d
        L_0x0261:
            r9 = r6
            r7 = r15
            r6 = r18
            r0.reuse()     // Catch:{ Exception -> 0x0435 }
            goto L_0x026d
        L_0x0269:
            r9 = r6
            r7 = r15
            r6 = r18
        L_0x026d:
            long r0 = r1.id     // Catch:{ Exception -> 0x0435 }
            int r8 = (int) r0     // Catch:{ Exception -> 0x0435 }
            long r0 = r0 >> r23
            int r1 = (int) r0     // Catch:{ Exception -> 0x0435 }
            if (r8 == 0) goto L_0x029c
            if (r8 <= 0) goto L_0x0289
            java.lang.Integer r0 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0435 }
            boolean r0 = r3.contains(r0)     // Catch:{ Exception -> 0x0435 }
            if (r0 != 0) goto L_0x02ad
            java.lang.Integer r0 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0435 }
            r3.add(r0)     // Catch:{ Exception -> 0x0435 }
            goto L_0x02ad
        L_0x0289:
            int r0 = -r8
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0435 }
            boolean r1 = r4.contains(r1)     // Catch:{ Exception -> 0x0435 }
            if (r1 != 0) goto L_0x02ad
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0435 }
            r4.add(r0)     // Catch:{ Exception -> 0x0435 }
            goto L_0x02ad
        L_0x029c:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0435 }
            boolean r0 = r5.contains(r0)     // Catch:{ Exception -> 0x0435 }
            if (r0 != 0) goto L_0x02ad
            java.lang.Integer r0 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0435 }
            r5.add(r0)     // Catch:{ Exception -> 0x0435 }
        L_0x02ad:
            r8 = r7
            r14 = r11
            r1 = 0
            r15 = 3
            r7 = r6
            r6 = r9
            r9 = r22
            goto L_0x0092
        L_0x02b7:
            r22 = r9
            r11 = r14
            r9 = r6
            r6 = r7
            r7 = r8
            r10.dispose()     // Catch:{ Exception -> 0x0435 }
            int r14 = r11 + 1
            r1 = r24
            r8 = r7
            r13 = r21
            r10 = 2
            r7 = r6
            r6 = r9
            r9 = r22
            goto L_0x0049
        L_0x02ce:
            r0 = move-exception
            r14 = r13
            r13 = r24
            goto L_0x043e
        L_0x02d4:
            r9 = r6
            r6 = r7
            r7 = r8
            r21 = r13
            boolean r0 = r6.isEmpty()     // Catch:{ Exception -> 0x0435 }
            java.lang.String r1 = ","
            if (r0 != 0) goto L_0x0351
            r13 = r24
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x034e }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x034e }
            java.lang.String r10 = "SELECT data, mid, date, uid FROM messages WHERE mid IN(%s)"
            r11 = 1
            java.lang.Object[] r14 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x034e }
            java.lang.String r6 = android.text.TextUtils.join(r1, r6)     // Catch:{ Exception -> 0x034e }
            r11 = 0
            r14[r11] = r6     // Catch:{ Exception -> 0x034e }
            java.lang.String r6 = java.lang.String.format(r8, r10, r14)     // Catch:{ Exception -> 0x034e }
            java.lang.Object[] r8 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x034e }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x034e }
        L_0x02fd:
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x034e }
            if (r6 == 0) goto L_0x034a
            org.telegram.tgnet.NativeByteBuffer r6 = r0.byteBufferValue(r11)     // Catch:{ Exception -> 0x034e }
            if (r6 == 0) goto L_0x0346
            int r8 = r6.readInt32(r11)     // Catch:{ Exception -> 0x034e }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r6, r8, r11)     // Catch:{ Exception -> 0x034e }
            org.telegram.messenger.UserConfig r10 = r24.getUserConfig()     // Catch:{ Exception -> 0x034e }
            int r10 = r10.clientUserId     // Catch:{ Exception -> 0x034e }
            r8.readAttachPath(r6, r10)     // Catch:{ Exception -> 0x034e }
            r6.reuse()     // Catch:{ Exception -> 0x034e }
            r6 = 1
            int r10 = r0.intValue(r6)     // Catch:{ Exception -> 0x034e }
            r8.id = r10     // Catch:{ Exception -> 0x034e }
            r6 = 2
            int r10 = r0.intValue(r6)     // Catch:{ Exception -> 0x034e }
            r8.date = r10     // Catch:{ Exception -> 0x034e }
            r10 = 3
            long r14 = r0.longValue(r10)     // Catch:{ Exception -> 0x034e }
            r8.dialog_id = r14     // Catch:{ Exception -> 0x034e }
            addUsersAndChatsFromMessage(r8, r3, r4)     // Catch:{ Exception -> 0x034e }
            long r14 = r8.dialog_id     // Catch:{ Exception -> 0x034e }
            java.lang.Object r11 = r7.get(r14)     // Catch:{ Exception -> 0x034e }
            org.telegram.tgnet.TLRPC$Message r11 = (org.telegram.tgnet.TLRPC$Message) r11     // Catch:{ Exception -> 0x034e }
            if (r11 == 0) goto L_0x0348
            r11.replyMessage = r8     // Catch:{ Exception -> 0x034e }
            long r14 = r11.dialog_id     // Catch:{ Exception -> 0x034e }
            r8.dialog_id = r14     // Catch:{ Exception -> 0x034e }
            goto L_0x0348
        L_0x0346:
            r6 = 2
            r10 = 3
        L_0x0348:
            r11 = 0
            goto L_0x02fd
        L_0x034a:
            r0.dispose()     // Catch:{ Exception -> 0x034e }
            goto L_0x0353
        L_0x034e:
            r0 = move-exception
            goto L_0x0438
        L_0x0351:
            r13 = r24
        L_0x0353:
            if (r2 == 0) goto L_0x03ef
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x034e }
            r0.<init>()     // Catch:{ Exception -> 0x034e }
            r6 = 0
        L_0x035b:
            int r7 = r2.length     // Catch:{ Exception -> 0x034e }
            if (r6 >= r7) goto L_0x03a2
            r7 = r2[r6]     // Catch:{ Exception -> 0x034e }
            int r8 = (int) r7     // Catch:{ Exception -> 0x034e }
            if (r8 != 0) goto L_0x0364
            goto L_0x039f
        L_0x0364:
            if (r8 <= 0) goto L_0x0378
            java.lang.Integer r7 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x034e }
            boolean r7 = r3.contains(r7)     // Catch:{ Exception -> 0x034e }
            if (r7 != 0) goto L_0x038a
            java.lang.Integer r7 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x034e }
            r3.add(r7)     // Catch:{ Exception -> 0x034e }
            goto L_0x038a
        L_0x0378:
            int r7 = -r8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x034e }
            boolean r8 = r4.contains(r8)     // Catch:{ Exception -> 0x034e }
            if (r8 != 0) goto L_0x038a
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x034e }
            r4.add(r7)     // Catch:{ Exception -> 0x034e }
        L_0x038a:
            r7 = r2[r6]     // Catch:{ Exception -> 0x034e }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x034e }
            boolean r7 = r9.contains(r7)     // Catch:{ Exception -> 0x034e }
            if (r7 != 0) goto L_0x039f
            r7 = r2[r6]     // Catch:{ Exception -> 0x034e }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x034e }
            r0.add(r7)     // Catch:{ Exception -> 0x034e }
        L_0x039f:
            int r6 = r6 + 1
            goto L_0x035b
        L_0x03a2:
            boolean r2 = r0.isEmpty()     // Catch:{ Exception -> 0x034e }
            if (r2 != 0) goto L_0x03e6
            android.util.LongSparseArray r2 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x034e }
            int r6 = r0.size()     // Catch:{ Exception -> 0x034e }
            r2.<init>(r6)     // Catch:{ Exception -> 0x034e }
            org.telegram.SQLite.SQLiteDatabase r6 = r13.database     // Catch:{ Exception -> 0x034e }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x034e }
            java.lang.String r8 = "SELECT did, folder_id FROM dialogs WHERE did IN(%s)"
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x034e }
            java.lang.String r0 = android.text.TextUtils.join(r1, r0)     // Catch:{ Exception -> 0x034e }
            r9 = 0
            r10[r9] = r0     // Catch:{ Exception -> 0x034e }
            java.lang.String r0 = java.lang.String.format(r7, r8, r10)     // Catch:{ Exception -> 0x034e }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x034e }
            org.telegram.SQLite.SQLiteCursor r0 = r6.queryFinalized(r0, r7)     // Catch:{ Exception -> 0x034e }
        L_0x03cb:
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x034e }
            if (r6 == 0) goto L_0x03e2
            long r6 = r0.longValue(r9)     // Catch:{ Exception -> 0x034e }
            r8 = 1
            int r10 = r0.intValue(r8)     // Catch:{ Exception -> 0x034e }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x034e }
            r2.put(r6, r10)     // Catch:{ Exception -> 0x034e }
            goto L_0x03cb
        L_0x03e2:
            r0.dispose()     // Catch:{ Exception -> 0x034e }
            goto L_0x03e7
        L_0x03e6:
            r2 = 0
        L_0x03e7:
            org.telegram.messenger.-$$Lambda$MessagesStorage$42Obl-Uh3LYLiaIoMc0CU--BrqY r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$42Obl-Uh3LYLiaIoMc0CU--BrqY     // Catch:{ Exception -> 0x034e }
            r0.<init>(r2)     // Catch:{ Exception -> 0x034e }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x034e }
        L_0x03ef:
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x034e }
            if (r0 != 0) goto L_0x03ff
            java.lang.String r0 = android.text.TextUtils.join(r1, r5)     // Catch:{ Exception -> 0x034e }
            r14 = r21
            r13.getEncryptedChatsInternal(r0, r14, r3)     // Catch:{ Exception -> 0x0433 }
            goto L_0x0401
        L_0x03ff:
            r14 = r21
        L_0x0401:
            boolean r0 = r4.isEmpty()     // Catch:{ Exception -> 0x0433 }
            if (r0 != 0) goto L_0x0410
            java.lang.String r0 = android.text.TextUtils.join(r1, r4)     // Catch:{ Exception -> 0x0433 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r12.chats     // Catch:{ Exception -> 0x0433 }
            r13.getChatsInternal(r0, r2)     // Catch:{ Exception -> 0x0433 }
        L_0x0410:
            boolean r0 = r3.isEmpty()     // Catch:{ Exception -> 0x0433 }
            if (r0 != 0) goto L_0x041f
            java.lang.String r0 = android.text.TextUtils.join(r1, r3)     // Catch:{ Exception -> 0x0433 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r12.users     // Catch:{ Exception -> 0x0433 }
            r13.getUsersInternal(r0, r1)     // Catch:{ Exception -> 0x0433 }
        L_0x041f:
            org.telegram.messenger.MessagesController r2 = r24.getMessagesController()     // Catch:{ Exception -> 0x0433 }
            r8 = 1
            r9 = 0
            r10 = 0
            r11 = 1
            r3 = r12
            r4 = r14
            r5 = r25
            r6 = r26
            r7 = r27
            r2.processLoadedDialogs(r3, r4, r5, r6, r7, r8, r9, r10, r11)     // Catch:{ Exception -> 0x0433 }
            goto L_0x0465
        L_0x0433:
            r0 = move-exception
            goto L_0x043e
        L_0x0435:
            r0 = move-exception
            r13 = r24
        L_0x0438:
            r14 = r21
            goto L_0x043e
        L_0x043b:
            r0 = move-exception
            r14 = r13
            r13 = r1
        L_0x043e:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r1 = r12.dialogs
            r1.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r12.users
            r1.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r12.chats
            r1.clear()
            r14.clear()
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            org.telegram.messenger.MessagesController r2 = r24.getMessagesController()
            r6 = 0
            r7 = 100
            r8 = 1
            r9 = 1
            r10 = 0
            r11 = 1
            r3 = r12
            r4 = r14
            r5 = r25
            r2.processLoadedDialogs(r3, r4, r5, r6, r7, r8, r9, r10, r11)
        L_0x0465:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogs$165$MessagesStorage(int, int, int, long[]):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$null$164 */
    public /* synthetic */ void lambda$null$164$MessagesStorage(LongSparseArray longSparseArray) {
        MediaDataController mediaDataController = getMediaDataController();
        mediaDataController.clearDraftsFolderIds();
        if (longSparseArray != null) {
            int size = longSparseArray.size();
            for (int i = 0; i < size; i++) {
                mediaDataController.setDraftFolderId(longSparseArray.keyAt(i), ((Integer) longSparseArray.valueAt(i)).intValue());
            }
        }
    }

    public static void createFirstHoles(long j, SQLitePreparedStatement sQLitePreparedStatement, SQLitePreparedStatement sQLitePreparedStatement2, int i) throws Exception {
        sQLitePreparedStatement.requery();
        sQLitePreparedStatement.bindLong(1, j);
        sQLitePreparedStatement.bindInteger(2, i == 1 ? 1 : 0);
        sQLitePreparedStatement.bindInteger(3, i);
        sQLitePreparedStatement.step();
        for (int i2 = 0; i2 < 6; i2++) {
            sQLitePreparedStatement2.requery();
            sQLitePreparedStatement2.bindLong(1, j);
            sQLitePreparedStatement2.bindInteger(2, i2);
            sQLitePreparedStatement2.bindInteger(3, i == 1 ? 1 : 0);
            sQLitePreparedStatement2.bindInteger(4, i);
            sQLitePreparedStatement2.step();
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:34:0x0127, code lost:
        if (r4 < 0) goto L_0x0129;
     */
    /* JADX WARNING: Removed duplicated region for block: B:102:0x02c8 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:103:0x02ed A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:105:0x0301 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x0314 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:111:0x031c A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:114:0x0375 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x038f A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:118:0x039a A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:121:0x03a1 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x03bd A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x0140 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x01bc A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x01bf A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x01c9 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x01cd A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:67:0x01db A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x01dd A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x01ee A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x0205 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x020f A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:80:0x021c A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x022b A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x0251 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x0257 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x0265 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x0296 A[Catch:{ Exception -> 0x0410 }] */
    /* JADX WARNING: Removed duplicated region for block: B:97:0x02a1 A[Catch:{ Exception -> 0x0410 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void putDialogsInternal(org.telegram.tgnet.TLRPC$messages_Dialogs r26, int r27) {
        /*
            r25 = this;
            r7 = r25
            r0 = r26
            r8 = r27
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0410 }
            android.util.LongSparseArray r9 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0410 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0410 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x0410 }
            r9.<init>(r1)     // Catch:{ Exception -> 0x0410 }
            r1 = 0
        L_0x0017:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r0.messages     // Catch:{ Exception -> 0x0410 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0410 }
            if (r1 >= r2) goto L_0x0031
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r0.messages     // Catch:{ Exception -> 0x0410 }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$Message r2 = (org.telegram.tgnet.TLRPC$Message) r2     // Catch:{ Exception -> 0x0410 }
            long r3 = org.telegram.messenger.MessageObject.getDialogId(r2)     // Catch:{ Exception -> 0x0410 }
            r9.put(r3, r2)     // Catch:{ Exception -> 0x0410 }
            int r1 = r1 + 1
            goto L_0x0017
        L_0x0031:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r1 = r0.dialogs     // Catch:{ Exception -> 0x0410 }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x0410 }
            if (r1 != 0) goto L_0x03fa
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r11 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r13 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO dialog_settings VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r14 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r15 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            r1 = 2147483647(0x7fffffff, float:NaN)
            r2 = 0
            r3 = 0
            r4 = 0
        L_0x006f:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r5 = r0.dialogs     // Catch:{ Exception -> 0x0410 }
            int r5 = r5.size()     // Catch:{ Exception -> 0x0410 }
            if (r3 >= r5) goto L_0x03d0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r5 = r0.dialogs     // Catch:{ Exception -> 0x0410 }
            java.lang.Object r5 = r5.get(r3)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$Dialog r5 = (org.telegram.tgnet.TLRPC$Dialog) r5     // Catch:{ Exception -> 0x0410 }
            org.telegram.messenger.DialogObject.initDialog(r5)     // Catch:{ Exception -> 0x0410 }
            android.util.LongSparseArray<java.lang.Boolean> r10 = r7.unknownDialogsIds     // Catch:{ Exception -> 0x0410 }
            r16 = r14
            r17 = r15
            long r14 = r5.id     // Catch:{ Exception -> 0x0410 }
            r10.remove(r14)     // Catch:{ Exception -> 0x0410 }
            r15 = 1
            if (r8 != r15) goto L_0x00be
            org.telegram.SQLite.SQLiteDatabase r15 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0410 }
            r10.<init>()     // Catch:{ Exception -> 0x0410 }
            java.lang.String r14 = "SELECT did FROM dialogs WHERE did = "
            r10.append(r14)     // Catch:{ Exception -> 0x0410 }
            r14 = r3
            r18 = r4
            long r3 = r5.id     // Catch:{ Exception -> 0x0410 }
            r10.append(r3)     // Catch:{ Exception -> 0x0410 }
            java.lang.String r3 = r10.toString()     // Catch:{ Exception -> 0x0410 }
            r4 = 0
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteCursor r3 = r15.queryFinalized(r3, r10)     // Catch:{ Exception -> 0x0410 }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0410 }
            r3.dispose()     // Catch:{ Exception -> 0x0410 }
            if (r4 == 0) goto L_0x00bb
            r10 = r14
            goto L_0x0129
        L_0x00bb:
            r10 = r14
            goto L_0x0133
        L_0x00be:
            r14 = r3
            r18 = r4
            r3 = 2
            if (r8 != r3) goto L_0x00f8
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0410 }
            r4.<init>()     // Catch:{ Exception -> 0x0410 }
            java.lang.String r10 = "SELECT pinned FROM dialogs WHERE did = "
            r4.append(r10)     // Catch:{ Exception -> 0x0410 }
            r10 = r14
            long r14 = r5.id     // Catch:{ Exception -> 0x0410 }
            r4.append(r14)     // Catch:{ Exception -> 0x0410 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0410 }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r15)     // Catch:{ Exception -> 0x0410 }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0410 }
            if (r4 == 0) goto L_0x00f3
            boolean r4 = r5.pinned     // Catch:{ Exception -> 0x0410 }
            if (r4 == 0) goto L_0x00f1
            int r4 = r3.intValue(r14)     // Catch:{ Exception -> 0x0410 }
            r5.pinnedNum = r4     // Catch:{ Exception -> 0x0410 }
        L_0x00f1:
            r4 = 1
            goto L_0x00f4
        L_0x00f3:
            r4 = 0
        L_0x00f4:
            r3.dispose()     // Catch:{ Exception -> 0x0410 }
            goto L_0x0133
        L_0x00f8:
            r10 = r14
            r3 = 3
            if (r8 != r3) goto L_0x0132
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0410 }
            r4.<init>()     // Catch:{ Exception -> 0x0410 }
            java.lang.String r14 = "SELECT last_mid FROM dialogs WHERE did = "
            r4.append(r14)     // Catch:{ Exception -> 0x0410 }
            long r14 = r5.id     // Catch:{ Exception -> 0x0410 }
            r4.append(r14)     // Catch:{ Exception -> 0x0410 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0410 }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r15)     // Catch:{ Exception -> 0x0410 }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0410 }
            if (r4 == 0) goto L_0x0123
            int r4 = r3.intValue(r14)     // Catch:{ Exception -> 0x0410 }
            goto L_0x0124
        L_0x0123:
            r4 = 0
        L_0x0124:
            r3.dispose()     // Catch:{ Exception -> 0x0410 }
            if (r4 >= 0) goto L_0x0132
        L_0x0129:
            r15 = r9
            r0 = r10
            r5 = r16
            r4 = r17
            r9 = r6
            goto L_0x03c2
        L_0x0132:
            r4 = 0
        L_0x0133:
            long r14 = r5.id     // Catch:{ Exception -> 0x0410 }
            java.lang.Object r3 = r9.get(r14)     // Catch:{ Exception -> 0x0410 }
            r14 = r3
            org.telegram.tgnet.TLRPC$Message r14 = (org.telegram.tgnet.TLRPC$Message) r14     // Catch:{ Exception -> 0x0410 }
            r19 = 32
            if (r14 == 0) goto L_0x0301
            int r3 = r14.date     // Catch:{ Exception -> 0x0410 }
            r15 = 0
            int r21 = java.lang.Math.max(r3, r15)     // Catch:{ Exception -> 0x0410 }
            boolean r3 = r7.isValidKeyboardToSave(r14)     // Catch:{ Exception -> 0x0410 }
            if (r3 == 0) goto L_0x0158
            org.telegram.messenger.MediaDataController r3 = r25.getMediaDataController()     // Catch:{ Exception -> 0x0410 }
            r15 = r9
            long r8 = r5.id     // Catch:{ Exception -> 0x0410 }
            r3.putBotKeyboard(r8, r14)     // Catch:{ Exception -> 0x0410 }
            goto L_0x0159
        L_0x0158:
            r15 = r9
        L_0x0159:
            r7.fixUnsupportedMedia(r14)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.NativeByteBuffer r3 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0410 }
            int r8 = r14.getObjectSize()     // Catch:{ Exception -> 0x0410 }
            r3.<init>((int) r8)     // Catch:{ Exception -> 0x0410 }
            r14.serializeToStream(r3)     // Catch:{ Exception -> 0x0410 }
            int r8 = r14.id     // Catch:{ Exception -> 0x0410 }
            long r8 = (long) r8     // Catch:{ Exception -> 0x0410 }
            r22 = r6
            org.telegram.tgnet.TLRPC$Peer r6 = r14.peer_id     // Catch:{ Exception -> 0x0410 }
            int r6 = r6.channel_id     // Catch:{ Exception -> 0x0410 }
            r23 = r1
            if (r6 == 0) goto L_0x0179
            long r0 = (long) r6     // Catch:{ Exception -> 0x0410 }
            long r0 = r0 << r19
            long r8 = r8 | r0
        L_0x0179:
            r11.requery()     // Catch:{ Exception -> 0x0410 }
            r0 = 1
            r11.bindLong(r0, r8)     // Catch:{ Exception -> 0x0410 }
            long r0 = r5.id     // Catch:{ Exception -> 0x0410 }
            r6 = 2
            r11.bindLong(r6, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = org.telegram.messenger.MessageObject.getUnreadFlags(r14)     // Catch:{ Exception -> 0x0410 }
            r1 = 3
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = r14.send_state     // Catch:{ Exception -> 0x0410 }
            r1 = 4
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = r14.date     // Catch:{ Exception -> 0x0410 }
            r1 = 5
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            r0 = 6
            r11.bindByteBuffer((int) r0, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x0410 }
            boolean r0 = org.telegram.messenger.MessageObject.isOut(r14)     // Catch:{ Exception -> 0x0410 }
            if (r0 != 0) goto L_0x01ab
            boolean r0 = r14.from_scheduled     // Catch:{ Exception -> 0x0410 }
            if (r0 == 0) goto L_0x01a9
            goto L_0x01ab
        L_0x01a9:
            r0 = 0
            goto L_0x01ac
        L_0x01ab:
            r0 = 1
        L_0x01ac:
            r6 = 7
            r11.bindInteger(r6, r0)     // Catch:{ Exception -> 0x0410 }
            r0 = 8
            r1 = 0
            r11.bindInteger(r0, r1)     // Catch:{ Exception -> 0x0410 }
            int r0 = r14.flags     // Catch:{ Exception -> 0x0410 }
            r0 = r0 & 1024(0x400, float:1.435E-42)
            if (r0 == 0) goto L_0x01bf
            int r0 = r14.views     // Catch:{ Exception -> 0x0410 }
            goto L_0x01c0
        L_0x01bf:
            r0 = 0
        L_0x01c0:
            r1 = 9
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = r14.stickerVerified     // Catch:{ Exception -> 0x0410 }
            if (r0 != 0) goto L_0x01cd
            r0 = 1
        L_0x01ca:
            r1 = 10
            goto L_0x01d4
        L_0x01cd:
            r1 = 2
            if (r0 != r1) goto L_0x01d2
            r0 = 2
            goto L_0x01ca
        L_0x01d2:
            r0 = 0
            goto L_0x01ca
        L_0x01d4:
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            boolean r0 = r14.mentioned     // Catch:{ Exception -> 0x0410 }
            if (r0 == 0) goto L_0x01dd
            r0 = 1
            goto L_0x01de
        L_0x01dd:
            r0 = 0
        L_0x01de:
            r1 = 11
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = r14.forwards     // Catch:{ Exception -> 0x0410 }
            r1 = 12
            r11.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r0 = r14.replies     // Catch:{ Exception -> 0x0410 }
            if (r0 == 0) goto L_0x0205
            org.telegram.tgnet.NativeByteBuffer r0 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r1 = r14.replies     // Catch:{ Exception -> 0x0410 }
            int r1 = r1.getObjectSize()     // Catch:{ Exception -> 0x0410 }
            r0.<init>((int) r1)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$TL_messageReplies r1 = r14.replies     // Catch:{ Exception -> 0x0410 }
            r1.serializeToStream(r0)     // Catch:{ Exception -> 0x0410 }
            r1 = 13
            r11.bindByteBuffer((int) r1, (org.telegram.tgnet.NativeByteBuffer) r0)     // Catch:{ Exception -> 0x0410 }
            r1 = r0
            goto L_0x020b
        L_0x0205:
            r0 = 13
            r11.bindNull(r0)     // Catch:{ Exception -> 0x0410 }
            r1 = 0
        L_0x020b:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r14.reply_to     // Catch:{ Exception -> 0x0410 }
            if (r0 == 0) goto L_0x021c
            int r6 = r0.reply_to_top_id     // Catch:{ Exception -> 0x0410 }
            if (r6 == 0) goto L_0x0214
            goto L_0x0216
        L_0x0214:
            int r6 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0410 }
        L_0x0216:
            r0 = 14
            r11.bindInteger(r0, r6)     // Catch:{ Exception -> 0x0410 }
            goto L_0x0222
        L_0x021c:
            r0 = 14
            r6 = 0
            r11.bindInteger(r0, r6)     // Catch:{ Exception -> 0x0410 }
        L_0x0222:
            r11.step()     // Catch:{ Exception -> 0x0410 }
            boolean r6 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r14)     // Catch:{ Exception -> 0x0410 }
            if (r6 == 0) goto L_0x0251
            r13.requery()     // Catch:{ Exception -> 0x0410 }
            r6 = 1
            r13.bindLong(r6, r8)     // Catch:{ Exception -> 0x0410 }
            r6 = r1
            long r0 = r5.id     // Catch:{ Exception -> 0x0410 }
            r24 = r10
            r10 = 2
            r13.bindLong(r10, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = r14.date     // Catch:{ Exception -> 0x0410 }
            r1 = 3
            r13.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            int r0 = org.telegram.messenger.MediaDataController.getMediaType(r14)     // Catch:{ Exception -> 0x0410 }
            r1 = 4
            r13.bindInteger(r1, r0)     // Catch:{ Exception -> 0x0410 }
            r0 = 5
            r13.bindByteBuffer((int) r0, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x0410 }
            r13.step()     // Catch:{ Exception -> 0x0410 }
            goto L_0x0255
        L_0x0251:
            r6 = r1
            r24 = r10
            r0 = 5
        L_0x0255:
            if (r6 == 0) goto L_0x025a
            r6.reuse()     // Catch:{ Exception -> 0x0410 }
        L_0x025a:
            r3.reuse()     // Catch:{ Exception -> 0x0410 }
            int r1 = r14.ttl_period     // Catch:{ Exception -> 0x0410 }
            if (r1 == 0) goto L_0x0296
            int r1 = r14.id     // Catch:{ Exception -> 0x0410 }
            if (r1 <= 0) goto L_0x0296
            if (r2 != 0) goto L_0x026f
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO enc_tasks_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
        L_0x026f:
            r2.requery()     // Catch:{ Exception -> 0x0410 }
            r1 = 1
            r2.bindLong(r1, r8)     // Catch:{ Exception -> 0x0410 }
            int r1 = r14.date     // Catch:{ Exception -> 0x0410 }
            int r3 = r14.ttl_period     // Catch:{ Exception -> 0x0410 }
            int r1 = r1 + r3
            r3 = 2
            r2.bindInteger(r3, r1)     // Catch:{ Exception -> 0x0410 }
            r1 = 3
            r3 = 0
            r2.bindInteger(r1, r3)     // Catch:{ Exception -> 0x0410 }
            r2.step()     // Catch:{ Exception -> 0x0410 }
            int r1 = r14.date     // Catch:{ Exception -> 0x0410 }
            int r3 = r14.ttl_period     // Catch:{ Exception -> 0x0410 }
            int r1 = r1 + r3
            r3 = r23
            int r1 = java.lang.Math.min(r3, r1)     // Catch:{ Exception -> 0x0410 }
            r10 = r1
            r20 = r2
            goto L_0x029b
        L_0x0296:
            r3 = r23
            r20 = r2
            r10 = r3
        L_0x029b:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r14.media     // Catch:{ Exception -> 0x0410 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x0410 }
            if (r1 == 0) goto L_0x02c6
            if (r18 != 0) goto L_0x02ac
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0410 }
            java.lang.String r2 = "REPLACE INTO polls VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0410 }
            goto L_0x02ae
        L_0x02ac:
            r1 = r18
        L_0x02ae:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r14.media     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x0410 }
            r1.requery()     // Catch:{ Exception -> 0x0410 }
            r3 = 1
            r1.bindLong(r3, r8)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$Poll r2 = r2.poll     // Catch:{ Exception -> 0x0410 }
            long r2 = r2.id     // Catch:{ Exception -> 0x0410 }
            r6 = 2
            r1.bindLong(r6, r2)     // Catch:{ Exception -> 0x0410 }
            r1.step()     // Catch:{ Exception -> 0x0410 }
            r18 = r1
        L_0x02c6:
            if (r4 == 0) goto L_0x02ed
            java.lang.String r2 = "messages_holes"
            long r3 = r5.id     // Catch:{ Exception -> 0x0410 }
            int r6 = r14.id     // Catch:{ Exception -> 0x0410 }
            r8 = 11
            r9 = 9
            r1 = r25
            r0 = r24
            r8 = 7
            r9 = 5
            r8 = r5
            r5 = r6
            r9 = r22
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x0410 }
            long r2 = r8.id     // Catch:{ Exception -> 0x0410 }
            int r5 = r14.id     // Catch:{ Exception -> 0x0410 }
            r6 = -1
            r1 = r25
            r4 = r5
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x0410 }
            r4 = r17
            goto L_0x02fb
        L_0x02ed:
            r8 = r5
            r9 = r22
            r0 = r24
            long r1 = r8.id     // Catch:{ Exception -> 0x0410 }
            int r3 = r14.id     // Catch:{ Exception -> 0x0410 }
            r4 = r17
            createFirstHoles(r1, r4, r9, r3)     // Catch:{ Exception -> 0x0410 }
        L_0x02fb:
            r1 = r10
            r2 = r20
            r3 = r21
            goto L_0x0309
        L_0x0301:
            r3 = r1
            r8 = r5
            r15 = r9
            r0 = r10
            r4 = r17
            r9 = r6
            r3 = 0
        L_0x0309:
            int r5 = r8.top_message     // Catch:{ Exception -> 0x0410 }
            long r5 = (long) r5     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$Peer r10 = r8.peer     // Catch:{ Exception -> 0x0410 }
            if (r10 == 0) goto L_0x031c
            int r10 = r10.channel_id     // Catch:{ Exception -> 0x0410 }
            if (r10 == 0) goto L_0x031c
            r14 = r1
            r17 = r2
            long r1 = (long) r10     // Catch:{ Exception -> 0x0410 }
            long r1 = r1 << r19
            long r5 = r5 | r1
            goto L_0x031f
        L_0x031c:
            r14 = r1
            r17 = r2
        L_0x031f:
            r12.requery()     // Catch:{ Exception -> 0x0410 }
            long r1 = r8.id     // Catch:{ Exception -> 0x0410 }
            r10 = 1
            r12.bindLong(r10, r1)     // Catch:{ Exception -> 0x0410 }
            r1 = 2
            r12.bindInteger(r1, r3)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.unread_count     // Catch:{ Exception -> 0x0410 }
            r2 = 3
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            r1 = 4
            r12.bindLong(r1, r5)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.read_inbox_max_id     // Catch:{ Exception -> 0x0410 }
            r2 = 5
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.read_outbox_max_id     // Catch:{ Exception -> 0x0410 }
            r2 = 6
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            r1 = 0
            r3 = 7
            r12.bindLong(r3, r1)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.unread_mentions_count     // Catch:{ Exception -> 0x0410 }
            r2 = 8
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.pts     // Catch:{ Exception -> 0x0410 }
            r2 = 9
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            r1 = 10
            r2 = 0
            r12.bindInteger(r1, r2)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.pinnedNum     // Catch:{ Exception -> 0x0410 }
            r2 = 11
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            boolean r1 = r8.unread_mark     // Catch:{ Exception -> 0x0410 }
            r2 = 12
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            int r1 = r8.folder_id     // Catch:{ Exception -> 0x0410 }
            r2 = 13
            r12.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0410 }
            boolean r1 = r8 instanceof org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x0410 }
            if (r1 == 0) goto L_0x038f
            r5 = r8
            org.telegram.tgnet.TLRPC$TL_dialogFolder r5 = (org.telegram.tgnet.TLRPC$TL_dialogFolder) r5     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$TL_folder r2 = r5.folder     // Catch:{ Exception -> 0x0410 }
            int r2 = r2.getObjectSize()     // Catch:{ Exception -> 0x0410 }
            r1.<init>((int) r2)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$TL_folder r2 = r5.folder     // Catch:{ Exception -> 0x0410 }
            r2.serializeToStream(r1)     // Catch:{ Exception -> 0x0410 }
            r2 = 14
            r12.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x0410 }
            r5 = r1
            goto L_0x0395
        L_0x038f:
            r2 = 14
            r12.bindNull(r2)     // Catch:{ Exception -> 0x0410 }
            r5 = 0
        L_0x0395:
            r12.step()     // Catch:{ Exception -> 0x0410 }
            if (r5 == 0) goto L_0x039d
            r5.reuse()     // Catch:{ Exception -> 0x0410 }
        L_0x039d:
            org.telegram.tgnet.TLRPC$PeerNotifySettings r1 = r8.notify_settings     // Catch:{ Exception -> 0x0410 }
            if (r1 == 0) goto L_0x03bd
            r16.requery()     // Catch:{ Exception -> 0x0410 }
            long r1 = r8.id     // Catch:{ Exception -> 0x0410 }
            r5 = r16
            r3 = 1
            r5.bindLong(r3, r1)     // Catch:{ Exception -> 0x0410 }
            org.telegram.tgnet.TLRPC$PeerNotifySettings r1 = r8.notify_settings     // Catch:{ Exception -> 0x0410 }
            int r1 = r1.mute_until     // Catch:{ Exception -> 0x0410 }
            if (r1 == 0) goto L_0x03b4
            r1 = 2
            goto L_0x03b6
        L_0x03b4:
            r1 = 2
            r3 = 0
        L_0x03b6:
            r5.bindInteger(r1, r3)     // Catch:{ Exception -> 0x0410 }
            r5.step()     // Catch:{ Exception -> 0x0410 }
            goto L_0x03bf
        L_0x03bd:
            r5 = r16
        L_0x03bf:
            r1 = r14
            r2 = r17
        L_0x03c2:
            int r3 = r0 + 1
            r0 = r26
            r8 = r27
            r14 = r5
            r6 = r9
            r9 = r15
            r15 = r4
            r4 = r18
            goto L_0x006f
        L_0x03d0:
            r3 = r1
            r18 = r4
            r9 = r6
            r5 = r14
            r4 = r15
            r11.dispose()     // Catch:{ Exception -> 0x0410 }
            r12.dispose()     // Catch:{ Exception -> 0x0410 }
            r13.dispose()     // Catch:{ Exception -> 0x0410 }
            r5.dispose()     // Catch:{ Exception -> 0x0410 }
            r4.dispose()     // Catch:{ Exception -> 0x0410 }
            r9.dispose()     // Catch:{ Exception -> 0x0410 }
            if (r2 == 0) goto L_0x03f5
            r2.dispose()     // Catch:{ Exception -> 0x0410 }
            org.telegram.messenger.MessagesController r0 = r25.getMessagesController()     // Catch:{ Exception -> 0x0410 }
            r1 = 0
            r0.didAddedNewTask(r3, r1)     // Catch:{ Exception -> 0x0410 }
        L_0x03f5:
            if (r18 == 0) goto L_0x03fa
            r18.dispose()     // Catch:{ Exception -> 0x0410 }
        L_0x03fa:
            r0 = r26
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r0.users     // Catch:{ Exception -> 0x0410 }
            r7.putUsersInternal(r1)     // Catch:{ Exception -> 0x0410 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r0 = r0.chats     // Catch:{ Exception -> 0x0410 }
            r7.putChatsInternal(r0)     // Catch:{ Exception -> 0x0410 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0410 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0410 }
            r0 = 0
            r7.resetAllUnreadCounters(r0)     // Catch:{ Exception -> 0x0410 }
            goto L_0x0414
        L_0x0410:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0414:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.putDialogsInternal(org.telegram.tgnet.TLRPC$messages_Dialogs, int):void");
    }

    public void getDialogFolderId(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogFolderId$167$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getDialogFolderId$167 */
    public /* synthetic */ void lambda$getDialogFolderId$167$MessagesStorage(long j, IntCallback intCallback) {
        try {
            int i = -1;
            if (this.unknownDialogsIds.get(j) == null) {
                SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT folder_id FROM dialogs WHERE did = ?", Long.valueOf(j));
                if (queryFinalized.next()) {
                    i = queryFinalized.intValue(0);
                }
                queryFinalized.dispose();
            }
            AndroidUtilities.runOnUIThread(new Runnable(i) {
                public final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.IntCallback.this.run(this.f$1);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogsFolderId(ArrayList<TLRPC$TL_folderPeer> arrayList, ArrayList<TLRPC$TL_inputFolderPeer> arrayList2, long j, int i) {
        if (arrayList != null || arrayList2 != null || j != 0) {
            this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2, i, j) {
                public final /* synthetic */ ArrayList f$1;
                public final /* synthetic */ ArrayList f$2;
                public final /* synthetic */ int f$3;
                public final /* synthetic */ long f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$setDialogsFolderId$168$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$setDialogsFolderId$168 */
    public /* synthetic */ void lambda$setDialogsFolderId$168$MessagesStorage(ArrayList arrayList, ArrayList arrayList2, int i, long j) {
        try {
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET folder_id = ?, pinned = ? WHERE did = ?");
            if (arrayList != null) {
                int size = arrayList.size();
                for (int i2 = 0; i2 < size; i2++) {
                    TLRPC$TL_folderPeer tLRPC$TL_folderPeer = (TLRPC$TL_folderPeer) arrayList.get(i2);
                    long peerDialogId = DialogObject.getPeerDialogId(tLRPC$TL_folderPeer.peer);
                    executeFast.requery();
                    executeFast.bindInteger(1, tLRPC$TL_folderPeer.folder_id);
                    executeFast.bindInteger(2, 0);
                    executeFast.bindLong(3, peerDialogId);
                    executeFast.step();
                    this.unknownDialogsIds.remove(peerDialogId);
                }
            } else if (arrayList2 != null) {
                int size2 = arrayList2.size();
                for (int i3 = 0; i3 < size2; i3++) {
                    TLRPC$TL_inputFolderPeer tLRPC$TL_inputFolderPeer = (TLRPC$TL_inputFolderPeer) arrayList2.get(i3);
                    long peerDialogId2 = DialogObject.getPeerDialogId(tLRPC$TL_inputFolderPeer.peer);
                    executeFast.requery();
                    executeFast.bindInteger(1, tLRPC$TL_inputFolderPeer.folder_id);
                    executeFast.bindInteger(2, 0);
                    executeFast.bindLong(3, peerDialogId2);
                    executeFast.step();
                    this.unknownDialogsIds.remove(peerDialogId2);
                }
            } else {
                executeFast.requery();
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, 0);
                executeFast.bindLong(3, j);
                executeFast.step();
            }
            executeFast.dispose();
            this.database.commitTransaction();
            lambda$checkIfFolderEmpty$170(1);
            resetAllUnreadCounters(false);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0037, code lost:
        r2 = false;
     */
    /* renamed from: checkIfFolderEmptyInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$checkIfFolderEmpty$170(int r8) {
        /*
            r7 = this;
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0068 }
            java.lang.String r1 = "SELECT did FROM dialogs WHERE folder_id = ?"
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0068 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0068 }
            r5 = 0
            r3[r5] = r4     // Catch:{ Exception -> 0x0068 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r3)     // Catch:{ Exception -> 0x0068 }
        L_0x0012:
            boolean r1 = r0.next()     // Catch:{ Exception -> 0x0068 }
            if (r1 == 0) goto L_0x0038
            long r3 = r0.longValue(r5)     // Catch:{ Exception -> 0x0068 }
            int r1 = (int) r3     // Catch:{ Exception -> 0x0068 }
            r6 = 32
            long r3 = r3 >> r6
            int r4 = (int) r3     // Catch:{ Exception -> 0x0068 }
            if (r1 > 0) goto L_0x0037
            if (r4 == 0) goto L_0x0028
            if (r1 != 0) goto L_0x0028
            goto L_0x0037
        L_0x0028:
            int r1 = -r1
            org.telegram.tgnet.TLRPC$Chat r1 = r7.getChat(r1)     // Catch:{ Exception -> 0x0068 }
            boolean r3 = org.telegram.messenger.ChatObject.isNotInChat(r1)     // Catch:{ Exception -> 0x0068 }
            if (r3 != 0) goto L_0x0012
            org.telegram.tgnet.TLRPC$InputChannel r1 = r1.migrated_to     // Catch:{ Exception -> 0x0068 }
            if (r1 != 0) goto L_0x0012
        L_0x0037:
            r2 = 0
        L_0x0038:
            r0.dispose()     // Catch:{ Exception -> 0x0068 }
            if (r2 == 0) goto L_0x006c
            org.telegram.messenger.-$$Lambda$MessagesStorage$3494zIppPVEp5PScki19qBGse0s r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$3494zIppPVEp5PScki19qBGse0s     // Catch:{ Exception -> 0x0068 }
            r0.<init>(r8)     // Catch:{ Exception -> 0x0068 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0068 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0068 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0068 }
            r1.<init>()     // Catch:{ Exception -> 0x0068 }
            java.lang.String r2 = "DELETE FROM dialogs WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x0068 }
            long r2 = org.telegram.messenger.DialogObject.makeFolderDialogId(r8)     // Catch:{ Exception -> 0x0068 }
            r1.append(r2)     // Catch:{ Exception -> 0x0068 }
            java.lang.String r8 = r1.toString()     // Catch:{ Exception -> 0x0068 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r0.executeFast(r8)     // Catch:{ Exception -> 0x0068 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x0068 }
            r8.dispose()     // Catch:{ Exception -> 0x0068 }
            goto L_0x006c
        L_0x0068:
            r8 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r8)
        L_0x006c:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkIfFolderEmpty$170(int):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$checkIfFolderEmptyInternal$169 */
    public /* synthetic */ void lambda$checkIfFolderEmptyInternal$169$MessagesStorage(int i) {
        getMessagesController().onFolderEmpty(i);
    }

    public void checkIfFolderEmpty(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            public final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkIfFolderEmpty$170$MessagesStorage(this.f$1);
            }
        });
    }

    public void unpinAllDialogsExceptNew(ArrayList<Long> arrayList, int i) {
        this.storageQueue.postRunnable(new Runnable(arrayList, i) {
            public final /* synthetic */ ArrayList f$1;
            public final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$unpinAllDialogsExceptNew$171$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$unpinAllDialogsExceptNew$171 */
    public /* synthetic */ void lambda$unpinAllDialogsExceptNew$171$MessagesStorage(ArrayList arrayList, int i) {
        try {
            ArrayList arrayList2 = new ArrayList();
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT did, folder_id FROM dialogs WHERE pinned > 0 AND did NOT IN (%s)", new Object[]{TextUtils.join(",", arrayList)}), new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                if (queryFinalized.intValue(1) == i && ((int) longValue) != 0 && !DialogObject.isFolderDialogId(longValue)) {
                    arrayList2.add(Long.valueOf(queryFinalized.longValue(0)));
                }
            }
            queryFinalized.dispose();
            if (!arrayList2.isEmpty()) {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
                for (int i2 = 0; i2 < arrayList2.size(); i2++) {
                    long longValue2 = ((Long) arrayList2.get(i2)).longValue();
                    executeFast.requery();
                    executeFast.bindInteger(1, 0);
                    executeFast.bindLong(2, longValue2);
                    executeFast.step();
                }
                executeFast.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogUnread(long j, boolean z) {
        this.storageQueue.postRunnable(new Runnable(j, z) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogUnread$172$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0039, code lost:
        r6 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x005d, code lost:
        if (r1 != null) goto L_0x005f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:25:0x005f, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:26:0x0062, code lost:
        throw r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:27:0x0063, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r6);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:28:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x002d, code lost:
        r6 = move-exception;
     */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:7:0x0029, B:11:0x0030] */
    /* renamed from: lambda$setDialogUnread$172 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$setDialogUnread$172$MessagesStorage(long r6, boolean r8) {
        /*
            r5 = this;
            r0 = 0
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x002f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x002f }
            r3.<init>()     // Catch:{ Exception -> 0x002f }
            java.lang.String r4 = "SELECT flags FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x002f }
            r3.append(r6)     // Catch:{ Exception -> 0x002f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x002f }
            java.lang.Object[] r4 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x002f }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x002f }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x002f }
            if (r2 == 0) goto L_0x0026
            int r2 = r1.intValue(r0)     // Catch:{ Exception -> 0x002f }
            goto L_0x0027
        L_0x0026:
            r2 = 0
        L_0x0027:
            if (r1 == 0) goto L_0x003c
            r1.dispose()     // Catch:{ Exception -> 0x0039 }
            goto L_0x003c
        L_0x002d:
            r6 = move-exception
            goto L_0x005d
        L_0x002f:
            r2 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ all -> 0x002d }
            if (r1 == 0) goto L_0x003b
            r1.dispose()     // Catch:{ Exception -> 0x0039 }
            goto L_0x003b
        L_0x0039:
            r6 = move-exception
            goto L_0x0063
        L_0x003b:
            r2 = 0
        L_0x003c:
            r1 = 1
            if (r8 == 0) goto L_0x0042
            r8 = r2 | 1
            goto L_0x0044
        L_0x0042:
            r8 = r2 & -2
        L_0x0044:
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x0039 }
            java.lang.String r3 = "UPDATE dialogs SET flags = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0039 }
            r2.bindInteger(r1, r8)     // Catch:{ Exception -> 0x0039 }
            r8 = 2
            r2.bindLong(r8, r6)     // Catch:{ Exception -> 0x0039 }
            r2.step()     // Catch:{ Exception -> 0x0039 }
            r2.dispose()     // Catch:{ Exception -> 0x0039 }
            r5.resetAllUnreadCounters(r0)     // Catch:{ Exception -> 0x0039 }
            goto L_0x0066
        L_0x005d:
            if (r1 == 0) goto L_0x0062
            r1.dispose()     // Catch:{ Exception -> 0x0039 }
        L_0x0062:
            throw r6     // Catch:{ Exception -> 0x0039 }
        L_0x0063:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)
        L_0x0066:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$setDialogUnread$172$MessagesStorage(long, boolean):void");
    }

    private void resetAllUnreadCounters(boolean z) {
        int size = this.dialogFilters.size();
        for (int i = 0; i < size; i++) {
            MessagesController.DialogFilter dialogFilter = this.dialogFilters.get(i);
            if (!z) {
                dialogFilter.pendingUnreadCount = -1;
            } else if ((dialogFilter.flags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED) != 0) {
                dialogFilter.pendingUnreadCount = -1;
            }
        }
        calcUnreadCounters(false);
        AndroidUtilities.runOnUIThread(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$resetAllUnreadCounters$173$MessagesStorage();
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$resetAllUnreadCounters$173 */
    public /* synthetic */ void lambda$resetAllUnreadCounters$173$MessagesStorage() {
        ArrayList<MessagesController.DialogFilter> arrayList = getMessagesController().dialogFilters;
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            arrayList.get(i).unreadCount = arrayList.get(i).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
        getNotificationCenter().postNotificationName(NotificationCenter.updateInterfaces, 256);
    }

    public void setDialogPinned(long j, int i) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogPinned$174$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$setDialogPinned$174 */
    public /* synthetic */ void lambda$setDialogPinned$174$MessagesStorage(int i, long j) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            executeFast.bindInteger(1, i);
            executeFast.bindLong(2, j);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogsPinned(ArrayList<Long> arrayList, ArrayList<Integer> arrayList2) {
        this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2) {
            public final /* synthetic */ ArrayList f$1;
            public final /* synthetic */ ArrayList f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogsPinned$175$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$setDialogsPinned$175 */
    public /* synthetic */ void lambda$setDialogsPinned$175$MessagesStorage(ArrayList arrayList, ArrayList arrayList2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                executeFast.requery();
                executeFast.bindInteger(1, ((Integer) arrayList2.get(i)).intValue());
                executeFast.bindLong(2, ((Long) arrayList.get(i)).longValue());
                executeFast.step();
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putDialogs(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i) {
        if (!tLRPC$messages_Dialogs.dialogs.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(tLRPC$messages_Dialogs, i) {
                public final /* synthetic */ TLRPC$messages_Dialogs f$1;
                public final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putDialogs$176$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$putDialogs$176 */
    public /* synthetic */ void lambda$putDialogs$176$MessagesStorage(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i) {
        putDialogsInternal(tLRPC$messages_Dialogs, i);
        try {
            loadUnreadMessages();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogMaxMessageId(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            public final /* synthetic */ long f$1;
            public final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogMaxMessageId$178$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:10:0x0033, code lost:
        if (r1 == null) goto L_0x0038;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0035, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0038, code lost:
        org.telegram.messenger.AndroidUtilities.runOnUIThread(new org.telegram.messenger.$$Lambda$MessagesStorage$osxhoAtVSW33AIOJHllDPRHpzI(r8, r0));
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0040, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002a, code lost:
        if (r1 != null) goto L_0x0035;
     */
    /* renamed from: lambda$getDialogMaxMessageId$178 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogMaxMessageId$178$MessagesStorage(long r6, org.telegram.messenger.MessagesStorage.IntCallback r8) {
        /*
            r5 = this;
            r0 = 1
            int[] r0 = new int[r0]
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x002f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x002f }
            r3.<init>()     // Catch:{ Exception -> 0x002f }
            java.lang.String r4 = "SELECT MAX(mid) FROM messages WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x002f }
            r3.append(r6)     // Catch:{ Exception -> 0x002f }
            java.lang.String r6 = r3.toString()     // Catch:{ Exception -> 0x002f }
            r7 = 0
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x002f }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r6, r3)     // Catch:{ Exception -> 0x002f }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x002f }
            if (r6 == 0) goto L_0x002a
            int r6 = r1.intValue(r7)     // Catch:{ Exception -> 0x002f }
            r0[r7] = r6     // Catch:{ Exception -> 0x002f }
        L_0x002a:
            if (r1 == 0) goto L_0x0038
            goto L_0x0035
        L_0x002d:
            r6 = move-exception
            goto L_0x0041
        L_0x002f:
            r6 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ all -> 0x002d }
            if (r1 == 0) goto L_0x0038
        L_0x0035:
            r1.dispose()
        L_0x0038:
            org.telegram.messenger.-$$Lambda$MessagesStorage$osxhoAtVSW33AIOJHllD-PRHpzI r6 = new org.telegram.messenger.-$$Lambda$MessagesStorage$osxhoAtVSW33AIOJHllD-PRHpzI
            r6.<init>(r0)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r6)
            return
        L_0x0041:
            if (r1 == 0) goto L_0x0046
            r1.dispose()
        L_0x0046:
            throw r6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogMaxMessageId$178$MessagesStorage(long, org.telegram.messenger.MessagesStorage$IntCallback):void");
    }

    public int getDialogReadMax(boolean z, long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] numArr = {0};
        this.storageQueue.postRunnable(new Runnable(z, j, numArr, countDownLatch) {
            public final /* synthetic */ boolean f$1;
            public final /* synthetic */ long f$2;
            public final /* synthetic */ Integer[] f$3;
            public final /* synthetic */ CountDownLatch f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r5;
                this.f$4 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogReadMax$179$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return numArr[0].intValue();
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0051, code lost:
        if (r1 == null) goto L_0x0056;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0053, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0056, code lost:
        r9.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0059, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0048, code lost:
        if (r1 != null) goto L_0x0053;
     */
    /* renamed from: lambda$getDialogReadMax$179 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogReadMax$179$MessagesStorage(boolean r5, long r6, java.lang.Integer[] r8, java.util.concurrent.CountDownLatch r9) {
        /*
            r4 = this;
            r0 = 0
            r1 = 0
            if (r5 == 0) goto L_0x001e
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x004d }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004d }
            r2.<init>()     // Catch:{ Exception -> 0x004d }
            java.lang.String r3 = "SELECT outbox_max FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x004d }
            r2.append(r6)     // Catch:{ Exception -> 0x004d }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x004d }
            java.lang.Object[] r7 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x004d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x004d }
            goto L_0x0037
        L_0x001e:
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x004d }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004d }
            r2.<init>()     // Catch:{ Exception -> 0x004d }
            java.lang.String r3 = "SELECT inbox_max FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x004d }
            r2.append(r6)     // Catch:{ Exception -> 0x004d }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x004d }
            java.lang.Object[] r7 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x004d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x004d }
        L_0x0037:
            r1 = r5
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x004d }
            if (r5 == 0) goto L_0x0048
            int r5 = r1.intValue(r0)     // Catch:{ Exception -> 0x004d }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x004d }
            r8[r0] = r5     // Catch:{ Exception -> 0x004d }
        L_0x0048:
            if (r1 == 0) goto L_0x0056
            goto L_0x0053
        L_0x004b:
            r5 = move-exception
            goto L_0x005a
        L_0x004d:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x004b }
            if (r1 == 0) goto L_0x0056
        L_0x0053:
            r1.dispose()
        L_0x0056:
            r9.countDown()
            return
        L_0x005a:
            if (r1 == 0) goto L_0x005f
            r1.dispose()
        L_0x005f:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogReadMax$179$MessagesStorage(boolean, long, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public int getChannelPtsSync(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] numArr = {0};
        this.storageQueue.postRunnable(new Runnable(i, numArr, countDownLatch) {
            public final /* synthetic */ int f$1;
            public final /* synthetic */ Integer[] f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getChannelPtsSync$180$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return numArr[0].intValue();
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:10:0x0035, code lost:
        if (r0 == null) goto L_0x003a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0037, code lost:
        r0.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:?, code lost:
        r7.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x003e, code lost:
        r5 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x003f, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:19:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:20:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002c, code lost:
        if (r0 != null) goto L_0x0037;
     */
    /* renamed from: lambda$getChannelPtsSync$180 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getChannelPtsSync$180$MessagesStorage(int r5, java.lang.Integer[] r6, java.util.concurrent.CountDownLatch r7) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x0031 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0031 }
            r2.<init>()     // Catch:{ Exception -> 0x0031 }
            java.lang.String r3 = "SELECT pts FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0031 }
            int r5 = -r5
            r2.append(r5)     // Catch:{ Exception -> 0x0031 }
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x0031 }
            r2 = 0
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0031 }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r5, r3)     // Catch:{ Exception -> 0x0031 }
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x0031 }
            if (r5 == 0) goto L_0x002c
            int r5 = r0.intValue(r2)     // Catch:{ Exception -> 0x0031 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0031 }
            r6[r2] = r5     // Catch:{ Exception -> 0x0031 }
        L_0x002c:
            if (r0 == 0) goto L_0x003a
            goto L_0x0037
        L_0x002f:
            r5 = move-exception
            goto L_0x0043
        L_0x0031:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x002f }
            if (r0 == 0) goto L_0x003a
        L_0x0037:
            r0.dispose()
        L_0x003a:
            r7.countDown()     // Catch:{ Exception -> 0x003e }
            goto L_0x0042
        L_0x003e:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)
        L_0x0042:
            return
        L_0x0043:
            if (r0 == 0) goto L_0x0048
            r0.dispose()
        L_0x0048:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getChannelPtsSync$180$MessagesStorage(int, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public TLRPC$User getUserSync(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC$User[] tLRPC$UserArr = new TLRPC$User[1];
        this.storageQueue.postRunnable(new Runnable(tLRPC$UserArr, i, countDownLatch) {
            public final /* synthetic */ TLRPC$User[] f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getUserSync$181$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return tLRPC$UserArr[0];
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getUserSync$181 */
    public /* synthetic */ void lambda$getUserSync$181$MessagesStorage(TLRPC$User[] tLRPC$UserArr, int i, CountDownLatch countDownLatch) {
        tLRPC$UserArr[0] = getUser(i);
        countDownLatch.countDown();
    }

    public TLRPC$Chat getChatSync(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC$Chat[] tLRPC$ChatArr = new TLRPC$Chat[1];
        this.storageQueue.postRunnable(new Runnable(tLRPC$ChatArr, i, countDownLatch) {
            public final /* synthetic */ TLRPC$Chat[] f$1;
            public final /* synthetic */ int f$2;
            public final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getChatSync$182$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return tLRPC$ChatArr[0];
    }

    /* access modifiers changed from: private */
    /* renamed from: lambda$getChatSync$182 */
    public /* synthetic */ void lambda$getChatSync$182$MessagesStorage(TLRPC$Chat[] tLRPC$ChatArr, int i, CountDownLatch countDownLatch) {
        tLRPC$ChatArr[0] = getChat(i);
        countDownLatch.countDown();
    }

    public TLRPC$User getUser(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            getUsersInternal("" + i, arrayList);
            if (!arrayList.isEmpty()) {
                return (TLRPC$User) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public ArrayList<TLRPC$User> getUsers(ArrayList<Integer> arrayList) {
        ArrayList<TLRPC$User> arrayList2 = new ArrayList<>();
        try {
            getUsersInternal(TextUtils.join(",", arrayList), arrayList2);
        } catch (Exception e) {
            arrayList2.clear();
            FileLog.e((Throwable) e);
        }
        return arrayList2;
    }

    public TLRPC$Chat getChat(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            getChatsInternal("" + i, arrayList);
            if (!arrayList.isEmpty()) {
                return (TLRPC$Chat) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public TLRPC$EncryptedChat getEncryptedChat(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            getEncryptedChatsInternal("" + i, arrayList, (ArrayList<Integer>) null);
            if (!arrayList.isEmpty()) {
                return (TLRPC$EncryptedChat) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    /* JADX WARNING: type inference failed for: r0v13 */
    /* JADX WARNING: type inference failed for: r0v20 */
    /* JADX WARNING: type inference failed for: r0v24 */
    /* JADX WARNING: type inference failed for: r0v26 */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x02df, code lost:
        r4 = r0.byteBufferValue(0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x02e4, code lost:
        if (r4 == null) goto L_0x0284;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x02e6, code lost:
        r5 = org.telegram.tgnet.TLRPC$Chat.TLdeserialize(r4, r4.readInt32(false), false);
        r4.reuse();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x02f1, code lost:
        if (r5 == null) goto L_0x0284;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x02f5, code lost:
        if (r5.deactivated != false) goto L_0x0284;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:131:0x02fb, code lost:
        if (org.telegram.messenger.ChatObject.isChannel(r5) == false) goto L_0x0303;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:133:0x0301, code lost:
        if (org.telegram.messenger.ChatObject.isNotInChat(r5) != false) goto L_0x0284;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:134:0x0303, code lost:
        r3 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r10.get((long) (-r5.id));
        r3.name = org.telegram.messenger.AndroidUtilities.generateSearchName(r5.title, (java.lang.String) null, r8);
        r3.object = r5;
        r2 = r2 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:189:0x04e6, code lost:
        r12 = r26;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:99:0x024a, code lost:
        r20 = r5;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:188:0x04e0 A[Catch:{ Exception -> 0x063e }, LOOP:6: B:150:0x0370->B:188:0x04e0, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:249:0x062a A[Catch:{ Exception -> 0x063e }, LOOP:10: B:222:0x0585->B:249:0x062a, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:271:0x01de A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:290:0x03ba A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:301:0x05cf A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:98:0x023f A[Catch:{ Exception -> 0x063e }, LOOP:2: B:71:0x018f->B:98:0x023f, LOOP_END] */
    /* JADX WARNING: Unknown variable types count: 1 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void localSearch(int r22, java.lang.String r23, java.util.ArrayList<java.lang.Object> r24, java.util.ArrayList<java.lang.CharSequence> r25, java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r26, int r27) {
        /*
            r21 = this;
            r1 = r21
            r0 = r22
            r2 = r24
            r3 = r25
            int r4 = r1.currentAccount
            org.telegram.messenger.UserConfig r4 = org.telegram.messenger.UserConfig.getInstance(r4)
            int r4 = r4.getClientUserId()
            java.lang.String r5 = r23.trim()     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = r5.toLowerCase()     // Catch:{ Exception -> 0x063e }
            boolean r6 = android.text.TextUtils.isEmpty(r5)     // Catch:{ Exception -> 0x063e }
            if (r6 == 0) goto L_0x0021
            return
        L_0x0021:
            java.lang.String r6 = "SavedMessages"
            r7 = 2131627245(0x7f0e0ced, float:1.888175E38)
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r6, r7)     // Catch:{ Exception -> 0x063e }
            java.lang.String r6 = r6.toLowerCase()     // Catch:{ Exception -> 0x063e }
            java.lang.String r7 = "saved messages"
            org.telegram.messenger.LocaleController r8 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x063e }
            java.lang.String r8 = r8.getTranslitString(r5)     // Catch:{ Exception -> 0x063e }
            boolean r9 = r5.equals(r8)     // Catch:{ Exception -> 0x063e }
            if (r9 != 0) goto L_0x0044
            int r9 = r8.length()     // Catch:{ Exception -> 0x063e }
            if (r9 != 0) goto L_0x0045
        L_0x0044:
            r8 = 0
        L_0x0045:
            r9 = 1
            r11 = 0
            if (r8 == 0) goto L_0x004b
            r12 = 1
            goto L_0x004c
        L_0x004b:
            r12 = 0
        L_0x004c:
            int r12 = r12 + r9
            java.lang.String[] r13 = new java.lang.String[r12]     // Catch:{ Exception -> 0x063e }
            r13[r11] = r5     // Catch:{ Exception -> 0x063e }
            if (r8 == 0) goto L_0x0055
            r13[r9] = r8     // Catch:{ Exception -> 0x063e }
        L_0x0055:
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x063e }
            r8.<init>()     // Catch:{ Exception -> 0x063e }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x063e }
            r14.<init>()     // Catch:{ Exception -> 0x063e }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x063e }
            r15.<init>()     // Catch:{ Exception -> 0x063e }
            android.util.LongSparseArray r10 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x063e }
            r10.<init>()     // Catch:{ Exception -> 0x063e }
            if (r27 < 0) goto L_0x0080
            org.telegram.SQLite.SQLiteDatabase r11 = r21.getDatabase()     // Catch:{ Exception -> 0x063e }
            java.lang.String r3 = "SELECT did, date FROM dialogs WHERE folder_id = ? ORDER BY date DESC LIMIT 600"
            java.lang.Object[] r2 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x063e }
            java.lang.Integer r17 = java.lang.Integer.valueOf(r27)     // Catch:{ Exception -> 0x063e }
            r16 = 0
            r2[r16] = r17     // Catch:{ Exception -> 0x063e }
            org.telegram.SQLite.SQLiteCursor r2 = r11.queryFinalized(r3, r2)     // Catch:{ Exception -> 0x063e }
            goto L_0x008d
        L_0x0080:
            org.telegram.SQLite.SQLiteDatabase r2 = r21.getDatabase()     // Catch:{ Exception -> 0x063e }
            java.lang.String r3 = "SELECT did, date FROM dialogs ORDER BY date DESC LIMIT 600"
            r11 = 0
            java.lang.Object[] r9 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x063e }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x063e }
        L_0x008d:
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x063e }
            if (r3 == 0) goto L_0x0101
            r18 = r12
            r3 = 0
            long r11 = r2.longValue(r3)     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r3 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x063e }
            r3.<init>()     // Catch:{ Exception -> 0x063e }
            r19 = r13
            r9 = 1
            int r13 = r2.intValue(r9)     // Catch:{ Exception -> 0x063e }
            r3.date = r13     // Catch:{ Exception -> 0x063e }
            r10.put(r11, r3)     // Catch:{ Exception -> 0x063e }
            int r3 = (int) r11     // Catch:{ Exception -> 0x063e }
            r9 = 32
            long r11 = r11 >> r9
            int r9 = (int) r11     // Catch:{ Exception -> 0x063e }
            if (r3 == 0) goto L_0x00e6
            if (r3 <= 0) goto L_0x00cf
            r9 = 4
            if (r0 != r9) goto L_0x00ba
            if (r3 != r4) goto L_0x00ba
            goto L_0x00fc
        L_0x00ba:
            r9 = 2
            if (r0 == r9) goto L_0x00fc
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x063e }
            boolean r9 = r8.contains(r9)     // Catch:{ Exception -> 0x063e }
            if (r9 != 0) goto L_0x00fc
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x063e }
            r8.add(r3)     // Catch:{ Exception -> 0x063e }
            goto L_0x00fc
        L_0x00cf:
            r9 = 4
            if (r0 != r9) goto L_0x00d3
            goto L_0x00fc
        L_0x00d3:
            int r3 = -r3
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x063e }
            boolean r9 = r14.contains(r9)     // Catch:{ Exception -> 0x063e }
            if (r9 != 0) goto L_0x00fc
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x063e }
            r14.add(r3)     // Catch:{ Exception -> 0x063e }
            goto L_0x00fc
        L_0x00e6:
            if (r0 == 0) goto L_0x00eb
            r3 = 3
            if (r0 != r3) goto L_0x00fc
        L_0x00eb:
            java.lang.Integer r3 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x063e }
            boolean r3 = r15.contains(r3)     // Catch:{ Exception -> 0x063e }
            if (r3 != 0) goto L_0x00fc
            java.lang.Integer r3 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x063e }
            r15.add(r3)     // Catch:{ Exception -> 0x063e }
        L_0x00fc:
            r12 = r18
            r13 = r19
            goto L_0x008d
        L_0x0101:
            r18 = r12
            r19 = r13
            r2.dispose()     // Catch:{ Exception -> 0x063e }
            r2 = 4
            if (r0 == r2) goto L_0x0111
            boolean r2 = r6.startsWith(r5)     // Catch:{ Exception -> 0x063e }
            if (r2 != 0) goto L_0x0117
        L_0x0111:
            boolean r2 = r7.startsWith(r5)     // Catch:{ Exception -> 0x063e }
            if (r2 == 0) goto L_0x0137
        L_0x0117:
            int r2 = r1.currentAccount     // Catch:{ Exception -> 0x063e }
            org.telegram.messenger.UserConfig r2 = org.telegram.messenger.UserConfig.getInstance(r2)     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$User r2 = r2.getCurrentUser()     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r3 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x063e }
            r3.<init>()     // Catch:{ Exception -> 0x063e }
            r4 = 2147483647(0x7fffffff, float:NaN)
            r3.date = r4     // Catch:{ Exception -> 0x063e }
            r3.name = r6     // Catch:{ Exception -> 0x063e }
            r3.object = r2     // Catch:{ Exception -> 0x063e }
            int r2 = r2.id     // Catch:{ Exception -> 0x063e }
            long r4 = (long) r2     // Catch:{ Exception -> 0x063e }
            r10.put(r4, r3)     // Catch:{ Exception -> 0x063e }
            r2 = 1
            goto L_0x0138
        L_0x0137:
            r2 = 0
        L_0x0138:
            boolean r3 = r8.isEmpty()     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = ";;;"
            java.lang.String r6 = ","
            java.lang.String r7 = "@"
            java.lang.String r9 = " "
            if (r3 != 0) goto L_0x025e
            org.telegram.SQLite.SQLiteDatabase r3 = r21.getDatabase()     // Catch:{ Exception -> 0x063e }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x063e }
            java.lang.String r12 = "SELECT data, status, name FROM users WHERE uid IN(%s)"
            r13 = 1
            java.lang.Object[] r4 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x063e }
            java.lang.String r8 = android.text.TextUtils.join(r6, r8)     // Catch:{ Exception -> 0x063e }
            r13 = 0
            r4[r13] = r8     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = java.lang.String.format(r11, r12, r4)     // Catch:{ Exception -> 0x063e }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x063e }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r8)     // Catch:{ Exception -> 0x063e }
        L_0x0162:
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x063e }
            if (r4 == 0) goto L_0x0256
            r4 = 2
            java.lang.String r8 = r3.stringValue(r4)     // Catch:{ Exception -> 0x063e }
            org.telegram.messenger.LocaleController r4 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = r4.getTranslitString(r8)     // Catch:{ Exception -> 0x063e }
            boolean r11 = r8.equals(r4)     // Catch:{ Exception -> 0x063e }
            if (r11 == 0) goto L_0x017c
            r4 = 0
        L_0x017c:
            int r11 = r8.lastIndexOf(r5)     // Catch:{ Exception -> 0x063e }
            r12 = -1
            if (r11 == r12) goto L_0x018a
            int r11 = r11 + 3
            java.lang.String r11 = r8.substring(r11)     // Catch:{ Exception -> 0x063e }
            goto L_0x018b
        L_0x018a:
            r11 = 0
        L_0x018b:
            r1 = r18
            r12 = 0
            r13 = 0
        L_0x018f:
            if (r12 >= r1) goto L_0x024a
            r18 = r13
            r13 = r19[r12]     // Catch:{ Exception -> 0x063e }
            boolean r20 = r8.startsWith(r13)     // Catch:{ Exception -> 0x063e }
            if (r20 != 0) goto L_0x01db
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r0.<init>()     // Catch:{ Exception -> 0x063e }
            r0.append(r9)     // Catch:{ Exception -> 0x063e }
            r0.append(r13)     // Catch:{ Exception -> 0x063e }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x063e }
            boolean r0 = r8.contains(r0)     // Catch:{ Exception -> 0x063e }
            if (r0 != 0) goto L_0x01db
            if (r4 == 0) goto L_0x01ce
            boolean r0 = r4.startsWith(r13)     // Catch:{ Exception -> 0x063e }
            if (r0 != 0) goto L_0x01db
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r0.<init>()     // Catch:{ Exception -> 0x063e }
            r0.append(r9)     // Catch:{ Exception -> 0x063e }
            r0.append(r13)     // Catch:{ Exception -> 0x063e }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x063e }
            boolean r0 = r4.contains(r0)     // Catch:{ Exception -> 0x063e }
            if (r0 == 0) goto L_0x01ce
            goto L_0x01db
        L_0x01ce:
            if (r11 == 0) goto L_0x01d8
            boolean r0 = r11.startsWith(r13)     // Catch:{ Exception -> 0x063e }
            if (r0 == 0) goto L_0x01d8
            r0 = 2
            goto L_0x01dc
        L_0x01d8:
            r0 = r18
            goto L_0x01dc
        L_0x01db:
            r0 = 1
        L_0x01dc:
            if (r0 == 0) goto L_0x023f
            r4 = 0
            org.telegram.tgnet.NativeByteBuffer r8 = r3.byteBufferValue(r4)     // Catch:{ Exception -> 0x063e }
            if (r8 == 0) goto L_0x024a
            int r11 = r8.readInt32(r4)     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$User r11 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r8, r11, r4)     // Catch:{ Exception -> 0x063e }
            r8.reuse()     // Catch:{ Exception -> 0x063e }
            int r4 = r11.id     // Catch:{ Exception -> 0x063e }
            r20 = r5
            long r4 = (long) r4     // Catch:{ Exception -> 0x063e }
            java.lang.Object r4 = r10.get(r4)     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r4 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r4     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$UserStatus r5 = r11.status     // Catch:{ Exception -> 0x063e }
            r8 = 1
            if (r5 == 0) goto L_0x0206
            int r12 = r3.intValue(r8)     // Catch:{ Exception -> 0x063e }
            r5.expires = r12     // Catch:{ Exception -> 0x063e }
        L_0x0206:
            if (r0 != r8) goto L_0x0213
            java.lang.String r0 = r11.first_name     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = r11.last_name     // Catch:{ Exception -> 0x063e }
            java.lang.CharSequence r0 = org.telegram.messenger.AndroidUtilities.generateSearchName(r0, r5, r13)     // Catch:{ Exception -> 0x063e }
            r4.name = r0     // Catch:{ Exception -> 0x063e }
            goto L_0x023a
        L_0x0213:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r0.<init>()     // Catch:{ Exception -> 0x063e }
            r0.append(r7)     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = r11.username     // Catch:{ Exception -> 0x063e }
            r0.append(r5)     // Catch:{ Exception -> 0x063e }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x063e }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r5.<init>()     // Catch:{ Exception -> 0x063e }
            r5.append(r7)     // Catch:{ Exception -> 0x063e }
            r5.append(r13)     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x063e }
            r8 = 0
            java.lang.CharSequence r0 = org.telegram.messenger.AndroidUtilities.generateSearchName(r0, r8, r5)     // Catch:{ Exception -> 0x063e }
            r4.name = r0     // Catch:{ Exception -> 0x063e }
        L_0x023a:
            r4.object = r11     // Catch:{ Exception -> 0x063e }
            int r2 = r2 + 1
            goto L_0x024c
        L_0x023f:
            r18 = r4
            r20 = r5
            int r12 = r12 + 1
            r13 = r0
            r0 = r22
            goto L_0x018f
        L_0x024a:
            r20 = r5
        L_0x024c:
            r0 = r22
            r18 = r1
            r5 = r20
            r1 = r21
            goto L_0x0162
        L_0x0256:
            r20 = r5
            r1 = r18
            r3.dispose()     // Catch:{ Exception -> 0x063e }
            goto L_0x0262
        L_0x025e:
            r20 = r5
            r1 = r18
        L_0x0262:
            boolean r0 = r14.isEmpty()     // Catch:{ Exception -> 0x063e }
            if (r0 != 0) goto L_0x031f
            org.telegram.SQLite.SQLiteDatabase r0 = r21.getDatabase()     // Catch:{ Exception -> 0x063e }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = "SELECT data, name FROM chats WHERE uid IN(%s)"
            r5 = 1
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = android.text.TextUtils.join(r6, r14)     // Catch:{ Exception -> 0x063e }
            r11 = 0
            r8[r11] = r5     // Catch:{ Exception -> 0x063e }
            java.lang.String r3 = java.lang.String.format(r3, r4, r8)     // Catch:{ Exception -> 0x063e }
            java.lang.Object[] r4 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x063e }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x063e }
        L_0x0284:
            boolean r3 = r0.next()     // Catch:{ Exception -> 0x063e }
            if (r3 == 0) goto L_0x031c
            r3 = 1
            java.lang.String r4 = r0.stringValue(r3)     // Catch:{ Exception -> 0x063e }
            org.telegram.messenger.LocaleController r3 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x063e }
            java.lang.String r3 = r3.getTranslitString(r4)     // Catch:{ Exception -> 0x063e }
            boolean r5 = r4.equals(r3)     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x029e
            r3 = 0
        L_0x029e:
            r5 = 0
        L_0x029f:
            if (r5 >= r1) goto L_0x0284
            r8 = r19[r5]     // Catch:{ Exception -> 0x063e }
            boolean r11 = r4.startsWith(r8)     // Catch:{ Exception -> 0x063e }
            if (r11 != 0) goto L_0x02df
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r11.<init>()     // Catch:{ Exception -> 0x063e }
            r11.append(r9)     // Catch:{ Exception -> 0x063e }
            r11.append(r8)     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x063e }
            boolean r11 = r4.contains(r11)     // Catch:{ Exception -> 0x063e }
            if (r11 != 0) goto L_0x02df
            if (r3 == 0) goto L_0x02dc
            boolean r11 = r3.startsWith(r8)     // Catch:{ Exception -> 0x063e }
            if (r11 != 0) goto L_0x02df
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r11.<init>()     // Catch:{ Exception -> 0x063e }
            r11.append(r9)     // Catch:{ Exception -> 0x063e }
            r11.append(r8)     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x063e }
            boolean r11 = r3.contains(r11)     // Catch:{ Exception -> 0x063e }
            if (r11 == 0) goto L_0x02dc
            goto L_0x02df
        L_0x02dc:
            int r5 = r5 + 1
            goto L_0x029f
        L_0x02df:
            r3 = 0
            org.telegram.tgnet.NativeByteBuffer r4 = r0.byteBufferValue(r3)     // Catch:{ Exception -> 0x063e }
            if (r4 == 0) goto L_0x0284
            int r5 = r4.readInt32(r3)     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$Chat r5 = org.telegram.tgnet.TLRPC$Chat.TLdeserialize(r4, r5, r3)     // Catch:{ Exception -> 0x063e }
            r4.reuse()     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x0284
            boolean r3 = r5.deactivated     // Catch:{ Exception -> 0x063e }
            if (r3 != 0) goto L_0x0284
            boolean r3 = org.telegram.messenger.ChatObject.isChannel(r5)     // Catch:{ Exception -> 0x063e }
            if (r3 == 0) goto L_0x0303
            boolean r3 = org.telegram.messenger.ChatObject.isNotInChat(r5)     // Catch:{ Exception -> 0x063e }
            if (r3 != 0) goto L_0x0284
        L_0x0303:
            int r3 = r5.id     // Catch:{ Exception -> 0x063e }
            int r3 = -r3
            long r3 = (long) r3     // Catch:{ Exception -> 0x063e }
            java.lang.Object r3 = r10.get(r3)     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r3 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r3     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = r5.title     // Catch:{ Exception -> 0x063e }
            r11 = 0
            java.lang.CharSequence r4 = org.telegram.messenger.AndroidUtilities.generateSearchName(r4, r11, r8)     // Catch:{ Exception -> 0x063e }
            r3.name = r4     // Catch:{ Exception -> 0x063e }
            r3.object = r5     // Catch:{ Exception -> 0x063e }
            int r2 = r2 + 1
            goto L_0x0284
        L_0x031c:
            r0.dispose()     // Catch:{ Exception -> 0x063e }
        L_0x031f:
            boolean r0 = r15.isEmpty()     // Catch:{ Exception -> 0x063e }
            if (r0 != 0) goto L_0x04f2
            org.telegram.SQLite.SQLiteDatabase r0 = r21.getDatabase()     // Catch:{ Exception -> 0x063e }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = "SELECT q.data, u.name, q.user, q.g, q.authkey, q.ttl, u.data, u.status, q.layer, q.seq_in, q.seq_out, q.use_count, q.exchange_id, q.key_date, q.fprint, q.fauthkey, q.khash, q.in_seq_no, q.admin_id, q.mtproto_seq FROM enc_chats as q INNER JOIN users as u ON q.user = u.uid WHERE q.uid IN(%s)"
            r5 = 1
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = android.text.TextUtils.join(r6, r15)     // Catch:{ Exception -> 0x063e }
            r6 = 0
            r8[r6] = r5     // Catch:{ Exception -> 0x063e }
            java.lang.String r3 = java.lang.String.format(r3, r4, r8)     // Catch:{ Exception -> 0x063e }
            java.lang.Object[] r4 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x063e }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x063e }
        L_0x0341:
            boolean r3 = r0.next()     // Catch:{ Exception -> 0x063e }
            if (r3 == 0) goto L_0x04ec
            r3 = 1
            java.lang.String r4 = r0.stringValue(r3)     // Catch:{ Exception -> 0x063e }
            org.telegram.messenger.LocaleController r3 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x063e }
            java.lang.String r3 = r3.getTranslitString(r4)     // Catch:{ Exception -> 0x063e }
            boolean r5 = r4.equals(r3)     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x035c
            r8 = 0
            goto L_0x035d
        L_0x035c:
            r8 = r3
        L_0x035d:
            r3 = r20
            int r5 = r4.lastIndexOf(r3)     // Catch:{ Exception -> 0x063e }
            r6 = -1
            if (r5 == r6) goto L_0x036d
            int r5 = r5 + 2
            java.lang.String r5 = r4.substring(r5)     // Catch:{ Exception -> 0x063e }
            goto L_0x036e
        L_0x036d:
            r5 = 0
        L_0x036e:
            r6 = 0
            r11 = 0
        L_0x0370:
            if (r6 >= r1) goto L_0x04e6
            r12 = r19[r6]     // Catch:{ Exception -> 0x063e }
            boolean r13 = r4.startsWith(r12)     // Catch:{ Exception -> 0x063e }
            if (r13 != 0) goto L_0x03b7
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r13.<init>()     // Catch:{ Exception -> 0x063e }
            r13.append(r9)     // Catch:{ Exception -> 0x063e }
            r13.append(r12)     // Catch:{ Exception -> 0x063e }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x063e }
            boolean r13 = r4.contains(r13)     // Catch:{ Exception -> 0x063e }
            if (r13 != 0) goto L_0x03b7
            if (r8 == 0) goto L_0x03ad
            boolean r13 = r8.startsWith(r12)     // Catch:{ Exception -> 0x063e }
            if (r13 != 0) goto L_0x03b7
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r13.<init>()     // Catch:{ Exception -> 0x063e }
            r13.append(r9)     // Catch:{ Exception -> 0x063e }
            r13.append(r12)     // Catch:{ Exception -> 0x063e }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x063e }
            boolean r13 = r8.contains(r13)     // Catch:{ Exception -> 0x063e }
            if (r13 == 0) goto L_0x03ad
            goto L_0x03b7
        L_0x03ad:
            if (r5 == 0) goto L_0x03b8
            boolean r13 = r5.startsWith(r12)     // Catch:{ Exception -> 0x063e }
            if (r13 == 0) goto L_0x03b8
            r11 = 2
            goto L_0x03b8
        L_0x03b7:
            r11 = 1
        L_0x03b8:
            if (r11 == 0) goto L_0x04e0
            r13 = 0
            org.telegram.tgnet.NativeByteBuffer r4 = r0.byteBufferValue(r13)     // Catch:{ Exception -> 0x063e }
            if (r4 == 0) goto L_0x03ce
            int r5 = r4.readInt32(r13)     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = org.telegram.tgnet.TLRPC$EncryptedChat.TLdeserialize(r4, r5, r13)     // Catch:{ Exception -> 0x063e }
            r4.reuse()     // Catch:{ Exception -> 0x063e }
            r8 = r5
            goto L_0x03cf
        L_0x03ce:
            r8 = 0
        L_0x03cf:
            r4 = 6
            org.telegram.tgnet.NativeByteBuffer r4 = r0.byteBufferValue(r4)     // Catch:{ Exception -> 0x063e }
            if (r4 == 0) goto L_0x03e3
            r5 = 0
            int r6 = r4.readInt32(r5)     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$User r6 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r4, r6, r5)     // Catch:{ Exception -> 0x063e }
            r4.reuse()     // Catch:{ Exception -> 0x063e }
            goto L_0x03e4
        L_0x03e3:
            r6 = 0
        L_0x03e4:
            if (r8 == 0) goto L_0x04e6
            if (r6 == 0) goto L_0x04e6
            int r4 = r8.id     // Catch:{ Exception -> 0x063e }
            long r4 = (long) r4     // Catch:{ Exception -> 0x063e }
            r13 = 32
            long r4 = r4 << r13
            java.lang.Object r4 = r10.get(r4)     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r4 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r4     // Catch:{ Exception -> 0x063e }
            r5 = 2
            int r14 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.user_id = r14     // Catch:{ Exception -> 0x063e }
            r5 = 3
            byte[] r14 = r0.byteArrayValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.a_or_b = r14     // Catch:{ Exception -> 0x063e }
            r14 = 4
            byte[] r5 = r0.byteArrayValue(r14)     // Catch:{ Exception -> 0x063e }
            r8.auth_key = r5     // Catch:{ Exception -> 0x063e }
            r5 = 5
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.ttl = r5     // Catch:{ Exception -> 0x063e }
            r5 = 8
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.layer = r5     // Catch:{ Exception -> 0x063e }
            r5 = 9
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.seq_in = r5     // Catch:{ Exception -> 0x063e }
            r5 = 10
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.seq_out = r5     // Catch:{ Exception -> 0x063e }
            r5 = 11
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            int r15 = r5 >> 16
            short r15 = (short) r15     // Catch:{ Exception -> 0x063e }
            r8.key_use_count_in = r15     // Catch:{ Exception -> 0x063e }
            short r5 = (short) r5     // Catch:{ Exception -> 0x063e }
            r8.key_use_count_out = r5     // Catch:{ Exception -> 0x063e }
            r5 = 12
            long r13 = r0.longValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.exchange_id = r13     // Catch:{ Exception -> 0x063e }
            r5 = 13
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.key_create_date = r5     // Catch:{ Exception -> 0x063e }
            r5 = 14
            long r13 = r0.longValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.future_key_fingerprint = r13     // Catch:{ Exception -> 0x063e }
            r5 = 15
            byte[] r5 = r0.byteArrayValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.future_auth_key = r5     // Catch:{ Exception -> 0x063e }
            r5 = 16
            byte[] r5 = r0.byteArrayValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.key_hash = r5     // Catch:{ Exception -> 0x063e }
            r5 = 17
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.in_seq_no = r5     // Catch:{ Exception -> 0x063e }
            r5 = 18
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x0470
            r8.admin_id = r5     // Catch:{ Exception -> 0x063e }
        L_0x0470:
            r5 = 19
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x063e }
            r8.mtproto_seq = r5     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$UserStatus r5 = r6.status     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x0483
            r13 = 7
            int r13 = r0.intValue(r13)     // Catch:{ Exception -> 0x063e }
            r5.expires = r13     // Catch:{ Exception -> 0x063e }
        L_0x0483:
            r5 = 1
            if (r11 != r5) goto L_0x04af
            android.text.SpannableStringBuilder r5 = new android.text.SpannableStringBuilder     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = r6.first_name     // Catch:{ Exception -> 0x063e }
            java.lang.String r12 = r6.last_name     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = org.telegram.messenger.ContactsController.formatName(r11, r12)     // Catch:{ Exception -> 0x063e }
            r5.<init>(r11)     // Catch:{ Exception -> 0x063e }
            r4.name = r5     // Catch:{ Exception -> 0x063e }
            android.text.SpannableStringBuilder r5 = (android.text.SpannableStringBuilder) r5     // Catch:{ Exception -> 0x063e }
            android.text.style.ForegroundColorSpan r11 = new android.text.style.ForegroundColorSpan     // Catch:{ Exception -> 0x063e }
            java.lang.String r12 = "chats_secretName"
            int r12 = org.telegram.ui.ActionBar.Theme.getColor(r12)     // Catch:{ Exception -> 0x063e }
            r11.<init>(r12)     // Catch:{ Exception -> 0x063e }
            java.lang.CharSequence r12 = r4.name     // Catch:{ Exception -> 0x063e }
            int r12 = r12.length()     // Catch:{ Exception -> 0x063e }
            r13 = 33
            r14 = 0
            r5.setSpan(r11, r14, r12, r13)     // Catch:{ Exception -> 0x063e }
            goto L_0x04d6
        L_0x04af:
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r5.<init>()     // Catch:{ Exception -> 0x063e }
            r5.append(r7)     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = r6.username     // Catch:{ Exception -> 0x063e }
            r5.append(r11)     // Catch:{ Exception -> 0x063e }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x063e }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r11.<init>()     // Catch:{ Exception -> 0x063e }
            r11.append(r7)     // Catch:{ Exception -> 0x063e }
            r11.append(r12)     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x063e }
            r12 = 0
            java.lang.CharSequence r5 = org.telegram.messenger.AndroidUtilities.generateSearchName(r5, r12, r11)     // Catch:{ Exception -> 0x063e }
            r4.name = r5     // Catch:{ Exception -> 0x063e }
        L_0x04d6:
            r4.object = r8     // Catch:{ Exception -> 0x063e }
            r12 = r26
            r12.add(r6)     // Catch:{ Exception -> 0x063e }
            int r2 = r2 + 1
            goto L_0x04e8
        L_0x04e0:
            r12 = r26
            int r6 = r6 + 1
            goto L_0x0370
        L_0x04e6:
            r12 = r26
        L_0x04e8:
            r20 = r3
            goto L_0x0341
        L_0x04ec:
            r3 = r20
            r0.dispose()     // Catch:{ Exception -> 0x063e }
            goto L_0x04f4
        L_0x04f2:
            r3 = r20
        L_0x04f4:
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x063e }
            r0.<init>(r2)     // Catch:{ Exception -> 0x063e }
            r2 = 0
        L_0x04fa:
            int r4 = r10.size()     // Catch:{ Exception -> 0x063e }
            if (r2 >= r4) goto L_0x0514
            java.lang.Object r4 = r10.valueAt(r2)     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r4 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r4     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLObject r5 = r4.object     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x0511
            java.lang.CharSequence r5 = r4.name     // Catch:{ Exception -> 0x063e }
            if (r5 == 0) goto L_0x0511
            r0.add(r4)     // Catch:{ Exception -> 0x063e }
        L_0x0511:
            int r2 = r2 + 1
            goto L_0x04fa
        L_0x0514:
            org.telegram.messenger.-$$Lambda$MessagesStorage$X16d2VU01Bk-ZS0qMJYNQJlH-p8 r2 = org.telegram.messenger.$$Lambda$MessagesStorage$X16d2VU01BkZS0qMJYNQJlHp8.INSTANCE     // Catch:{ Exception -> 0x063e }
            java.util.Collections.sort(r0, r2)     // Catch:{ Exception -> 0x063e }
            r2 = 0
        L_0x051a:
            int r4 = r0.size()     // Catch:{ Exception -> 0x063e }
            if (r2 >= r4) goto L_0x0537
            java.lang.Object r4 = r0.get(r2)     // Catch:{ Exception -> 0x063e }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r4 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r4     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLObject r5 = r4.object     // Catch:{ Exception -> 0x063e }
            r6 = r24
            r6.add(r5)     // Catch:{ Exception -> 0x063e }
            java.lang.CharSequence r4 = r4.name     // Catch:{ Exception -> 0x063e }
            r5 = r25
            r5.add(r4)     // Catch:{ Exception -> 0x063e }
            int r2 = r2 + 1
            goto L_0x051a
        L_0x0537:
            r0 = r22
            r6 = r24
            r5 = r25
            r2 = 2
            if (r0 == r2) goto L_0x0642
            org.telegram.SQLite.SQLiteDatabase r0 = r21.getDatabase()     // Catch:{ Exception -> 0x063e }
            java.lang.String r2 = "SELECT u.data, u.status, u.name, u.uid FROM users as u INNER JOIN contacts as c ON u.uid = c.uid"
            r4 = 0
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x063e }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r2, r8)     // Catch:{ Exception -> 0x063e }
        L_0x054d:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x063e }
            if (r2 == 0) goto L_0x063a
            r2 = 3
            int r4 = r0.intValue(r2)     // Catch:{ Exception -> 0x063e }
            long r11 = (long) r4     // Catch:{ Exception -> 0x063e }
            int r4 = r10.indexOfKey(r11)     // Catch:{ Exception -> 0x063e }
            if (r4 < 0) goto L_0x0560
            goto L_0x054d
        L_0x0560:
            r4 = 2
            java.lang.String r8 = r0.stringValue(r4)     // Catch:{ Exception -> 0x063e }
            org.telegram.messenger.LocaleController r11 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x063e }
            java.lang.String r11 = r11.getTranslitString(r8)     // Catch:{ Exception -> 0x063e }
            boolean r12 = r8.equals(r11)     // Catch:{ Exception -> 0x063e }
            if (r12 == 0) goto L_0x0574
            r11 = 0
        L_0x0574:
            int r12 = r8.lastIndexOf(r3)     // Catch:{ Exception -> 0x063e }
            r13 = -1
            if (r12 == r13) goto L_0x0582
            int r12 = r12 + 3
            java.lang.String r12 = r8.substring(r12)     // Catch:{ Exception -> 0x063e }
            goto L_0x0583
        L_0x0582:
            r12 = 0
        L_0x0583:
            r14 = 0
            r15 = 0
        L_0x0585:
            if (r14 >= r1) goto L_0x0634
            r2 = r19[r14]     // Catch:{ Exception -> 0x063e }
            boolean r18 = r8.startsWith(r2)     // Catch:{ Exception -> 0x063e }
            if (r18 != 0) goto L_0x05cc
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r4.<init>()     // Catch:{ Exception -> 0x063e }
            r4.append(r9)     // Catch:{ Exception -> 0x063e }
            r4.append(r2)     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x063e }
            boolean r4 = r8.contains(r4)     // Catch:{ Exception -> 0x063e }
            if (r4 != 0) goto L_0x05cc
            if (r11 == 0) goto L_0x05c2
            boolean r4 = r11.startsWith(r2)     // Catch:{ Exception -> 0x063e }
            if (r4 != 0) goto L_0x05cc
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r4.<init>()     // Catch:{ Exception -> 0x063e }
            r4.append(r9)     // Catch:{ Exception -> 0x063e }
            r4.append(r2)     // Catch:{ Exception -> 0x063e }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x063e }
            boolean r4 = r11.contains(r4)     // Catch:{ Exception -> 0x063e }
            if (r4 == 0) goto L_0x05c2
            goto L_0x05cc
        L_0x05c2:
            if (r12 == 0) goto L_0x05cd
            boolean r4 = r12.startsWith(r2)     // Catch:{ Exception -> 0x063e }
            if (r4 == 0) goto L_0x05cd
            r15 = 2
            goto L_0x05cd
        L_0x05cc:
            r15 = 1
        L_0x05cd:
            if (r15 == 0) goto L_0x062a
            r4 = 0
            org.telegram.tgnet.NativeByteBuffer r8 = r0.byteBufferValue(r4)     // Catch:{ Exception -> 0x063e }
            if (r8 == 0) goto L_0x0628
            int r11 = r8.readInt32(r4)     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$User r11 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r8, r11, r4)     // Catch:{ Exception -> 0x063e }
            r8.reuse()     // Catch:{ Exception -> 0x063e }
            org.telegram.tgnet.TLRPC$UserStatus r8 = r11.status     // Catch:{ Exception -> 0x063e }
            r12 = 1
            if (r8 == 0) goto L_0x05ec
            int r14 = r0.intValue(r12)     // Catch:{ Exception -> 0x063e }
            r8.expires = r14     // Catch:{ Exception -> 0x063e }
        L_0x05ec:
            if (r15 != r12) goto L_0x05fb
            java.lang.String r8 = r11.first_name     // Catch:{ Exception -> 0x063e }
            java.lang.String r14 = r11.last_name     // Catch:{ Exception -> 0x063e }
            java.lang.CharSequence r2 = org.telegram.messenger.AndroidUtilities.generateSearchName(r8, r14, r2)     // Catch:{ Exception -> 0x063e }
            r5.add(r2)     // Catch:{ Exception -> 0x063e }
            r14 = 0
            goto L_0x0623
        L_0x05fb:
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r8.<init>()     // Catch:{ Exception -> 0x063e }
            r8.append(r7)     // Catch:{ Exception -> 0x063e }
            java.lang.String r14 = r11.username     // Catch:{ Exception -> 0x063e }
            r8.append(r14)     // Catch:{ Exception -> 0x063e }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x063e }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x063e }
            r14.<init>()     // Catch:{ Exception -> 0x063e }
            r14.append(r7)     // Catch:{ Exception -> 0x063e }
            r14.append(r2)     // Catch:{ Exception -> 0x063e }
            java.lang.String r2 = r14.toString()     // Catch:{ Exception -> 0x063e }
            r14 = 0
            java.lang.CharSequence r2 = org.telegram.messenger.AndroidUtilities.generateSearchName(r8, r14, r2)     // Catch:{ Exception -> 0x063e }
            r5.add(r2)     // Catch:{ Exception -> 0x063e }
        L_0x0623:
            r6.add(r11)     // Catch:{ Exception -> 0x063e }
            r2 = r14
            goto L_0x0636
        L_0x0628:
            r2 = 0
            goto L_0x0636
        L_0x062a:
            r2 = 0
            r4 = 0
            r16 = 1
            int r14 = r14 + 1
            r2 = 3
            r4 = 2
            goto L_0x0585
        L_0x0634:
            r2 = 0
            r4 = 0
        L_0x0636:
            r16 = 1
            goto L_0x054d
        L_0x063a:
            r0.dispose()     // Catch:{ Exception -> 0x063e }
            goto L_0x0642
        L_0x063e:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0642:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.localSearch(int, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int):void");
    }

    static /* synthetic */ int lambda$localSearch$183(DialogsSearchAdapter.DialogSearchResult dialogSearchResult, DialogsSearchAdapter.DialogSearchResult dialogSearchResult2) {
        int i = dialogSearchResult.date;
        int i2 = dialogSearchResult2.date;
        if (i < i2) {
            return 1;
        }
        return i > i2 ? -1 : 0;
    }
}
